{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Helvetica;}{\f1\fnil\fprq2\fcharset2 Wingdings;}{\f2\fmodern\fcharset0 CourierNewPSMT;}{\f3\fnil\fcharset0 Menlo-Regular;}{\f4\fmodern\fprq1\fcharset0 Courier;}{\f5\fswiss\fprq2\fcharset0 Calibri;}}
{\colortbl ;\red0\green0\blue255;\red127\green127\blue127;\red114\green44\blue253;\red255\green0\blue0;}
{\*\generator Riched20 10.0.17134}{\*\mmathPr\mnaryLim0\mdispDef1\mwrapIndent1440 }\viewkind4\uc1 
\pard\nowidctlpar\sa160\sl252\slmult1\f0\fs36\lang9 Introducing: \~The X3D JSON Loader (4.0 beta), X3DOM JSON Prototype Expander (4.0 beta), X3DOM JSONScript (0.4 alpha) \endash  Your solution for XMLDOM -> X3D JSON -> XMLDOM JavaScript development for X3DOM and X_ITE.\fs24\par
\par
For a Quick Start, edit flowers2.html and replace ../data/flowers2.json with your X3D JSON URL and put flowers2.html, following JavaScript on your web server.  Then open flowers2.html in your web browser.\par

\pard\nowidctlpar\li720\sa160\sl252\slmult1 <script src="{{\field{\*\fldinst{HYPERLINK https://code.jquery.com/jquery-3.3.1.min.js }}{\fldrslt{https://code.jquery.com/jquery-3.3.1.min.js\ul0\cf0}}}}\f0\fs24 "     integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script><!\emdash for my X3DOM external Prototype Expander \f1\'e0\f0\par

\pard\nowidctlpar\sa160\sl252\slmult1     <script type="text/javascript" src="../node/X3DJSONLD.js"></script>\par
    <script type="text/javascript" src="../node/Script.js"></script>\par
    <script type="text/javascript" src="../node/PrototypeExpander.js"></script>\par
    <script type="text/javascript" src="../node/loadValidate.js"></script>\par
    <script type="text/javascript" src="../node/loaderJQuery.js"></script>\par
\par
[ also you may want to add my versions of x_ite (maybe not\emdash should be the same) and x3dom (definitely) for full functionality ]\par
\par
There are more complex cases of multi JSON files in the same scene in prototypes.html.\par
\par
Good luck.\par
\par
I still have extra stuff in the global scope of JavaScript\emdash let people know this. \~Pull requests and forks are welcome, as long as you agree to the license.\par
\par
\cf2 License is here:\~{\cf0{\field{\*\fldinst{HYPERLINK https://github.com/coderextreme/X3DJSONLD/blob/master/LICENSE }}{\fldrslt{https://github.com/coderextreme/X3DJSONLD/blob/master/LICENSE\ul0\cf0}}}}\f0\fs24\par
Repository is here:\~{\cf0{\field{\*\fldinst{HYPERLINK https://github.com/coderextreme/X3DJSONLD/ }}{\fldrslt{https://github.com/coderextreme/X3DJSONLD/\ul0\cf0}}}}\f0\fs24\par
\par
For a web browser,\~a live, development version of the X3D JSON loader (I\~recommend downloading locally or forking) in your HTML, put:\par
\par
\par
\cf3\f2\fs22 <script type="text/javascript" src="{\cf0\f0{\field{\*\fldinst{HYPERLINK https://raw.githubusercontent.com/coderextreme/X3DJSONLD/master/src/main/node/X3DJSONLD.js }}{\fldrslt{https://raw.githubusercontent.com/coderextreme/X3DJSONLD/master/src/main/node/X3DJSONLD.js\ul0\cf0}}}}\f2\fs22 "></script>\par
<script type="text/javascript" src="{\cf0\f0{\field{\*\fldinst{HYPERLINK https://raw.githubusercontent.com/coderextreme/X3DJSONLD/master/src/main/node/loadValidate.js }}{\fldrslt{https://raw.githubusercontent.com/coderextreme/X3DJSONLD/master/src/main/node/loadValidate.js\ul0\cf0}}}}\f2\fs22 "></script>\f0\par
\cf2\f3\par
\f0\fs24 somewhere in the script (see index.html),\par
\par
call\par
\f3\fs22\par
\cf3\f2 loadX3DJS(document.implementation, json, url, NS, loadSchema, doValidate, X3DJSONLD, function(element, xml) \{\par

\pard\nowidctlpar\fi720\sa160\sl252\slmult1\cf2 Then append the element to your DOM:\cf3\par

\pard\nowidctlpar\sa160\sl252\slmult1\tab\f4\fs18 document.querySelector(selector).appendChild(element\f2\fs22 );\par

\pard\nowidctlpar\fi720\sa160\sl252\slmult1\f0\fs20 x3dom.reload();\par

\pard\nowidctlpar\sa160\sl252\slmult1\f2\fs22\}\par
\cf2\f3\par
\f2 selector\f3  \f0 is the CSS selector which you want to append the X3DOM HTML code to.\fs24\par
\f2\fs22 json\f3  \f0 is the X3D JSON you want to display.\fs24\par
\f2\fs22 url\f3  \f0 is used for resolving URLs in the X3D JSON. \~Should be similar or the same as the URL you passed to retrieve the JSON from the server.\fs24\par
\f2\fs22 xml\f3  \f0 is for inclusion into X_ITE or X3DOM via createX3DfromString.\cf0\fs24\par
\cf2\f2\fs22\par
NS is the namespace to use when creating elements in the DOM for the XML Serializer.  {\cf0\f4\fs18{\field{\*\fldinst{HYPERLINK http://www.w3.org/1999/xhtml }}{\fldrslt{http://www.w3.org/1999/xhtml\ul0\cf0}}}}\f4\fs18  normally works for X3DOM and {\cf0{\field{\*\fldinst{HYPERLINK http://www.web3d.org/specifications/x3d-namespace }}{\fldrslt{http://www.web3d.org/specifications/x3d-namespace\ul0\cf0}}}}\f4\fs18  normally works for X_ITE.  Leaving NS off is also acceptable, but may lead to results you don't like.\par
loadSchema is the loadSchema function\par
doValidate is the doValidate function\par
X3DJSONLD is the X3DJSONLD object\par
callback takes (DOM element, XML string) as parameters\par
\f0\fs24\par
Sample code for X_ITE where #x_ite is the id of your X3DCanvas :\par
\par
\cf3\f2\fs22 var content = xml;\fs24\par
\fs22 X3D(function() \{\par
\tab var browser = X3D.getBrowser("#x_ite");\fs24\par

\pard\nowidctlpar\li720\sa160\sl252\slmult1\fs22 browser.replaceWorld(browser.createX3DFromString(content);\par
\});\fs24\par

\pard\nowidctlpar\sa160\sl252\slmult1\cf2\par
\f3\fs22\par
\f0\fs24 For the prototype expander a live, development version (I\~recommend downloading locally or forking) in your HTML, put:\par
\f3\fs22\par
\cf3\f2 <script type="text/javascript" src="{\cf0\f0\fs24{\field{\*\fldinst{HYPERLINK https://raw.githubusercontent.com/coderextreme/X3DJSONLD/master/src/main/node/PrototypeExpander.js }}{\fldrslt{https://raw.githubusercontent.com/coderextreme/X3DJSONLD/master/src/main/node/PrototypeExpander.js\ul0\cf0}}}}\f2\fs22 "></script>\cf2\f0\fs24\par
\f3\fs22\par
\f0\fs24 then call (does not modify extern protos yet, use the included server as `node app.js`--works in some cases\emdash does this on the server):\par
\f3\fs22\par
\cf3\f2 json = protoExpander.prototypeExpander(url, json);\par
\cf2\fs24 json\f0  is the X3DJSON you want to expand protos for (also modifies the parameter as output).\par
\par
\par

\pard\nowidctlpar\sa200\sl276\slmult1\cf4 There is a lot of useful code in loaderJQuery.js.  index.html (for protos), flipper.html (for the base loader, subscenes), prototypes.html (scripts, prototypes, subscenes), prototypes2.html (JSON loading into X_ITE) are good examples.\par
\cf2 To enable JSONScript scripting, put this on your web page:\par
\par
        <span style="display:none"> Use JSONScript in X3DOM? <input id="scripting" type="checkbox" checked></input></span>\par
Add before calling any loading any scripts with loadScripts():\par

\pard\nowidctlpar\fi720\li720\sa200\sl276\slmult1 if ($('#scripting').is(':checked')) \{\par

\pard\nowidctlpar\sa200\sl276\slmult1\tab\tab\tab var scripts = Scripts();\par
\tab\tab\}\par
\tab\tab\tab\par
And put this in your JavaScript where the selector is an X3DOM scene:\par
\tab\tab\tab if ($('#scripting').is(':checked')) \{\par
                                       scripts.loadScripts(json, selector, url);\par
                                \}\par
To run XML -> JSON conversions, put your .x3d file in src/main/data, and cd to src/main/shell and run `sh several.sh ../data/file.x3d`  You will find output in data, nashorn, java, and python folders (way down low for the latter).\par
To run the proto expander on the server, put your .json and .x3d files in src/main/data and cd to src/main/shell and run `sh runppp.sh`  The XML will be in src/main/shell/data and the JSON will be in src/main/ppp.\par
\par
You may start a local file browser by cd\rquote ing to X3DJSONLD and running `node app.js`  This will allow you to search for JSON, WRL, X3D, STL, and PLY files from the web browser.\par
John Carlson\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\f5\fs22\lang1033\par
}
 