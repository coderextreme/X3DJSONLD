{
  "X3D": {
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-3.3.xsd",
    "head": {
      "meta": [
        {
          "@name": "creator",
          "@content": "John W Carlson"
        },
        {
          "@name": "created",
          "@content": "December 13 2015"
        },
        {
          "@name": "title",
          "@content": "force.x3d"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/force.x3d"
        },
        {
          "@name": "description",
          "@content": "beginnings of a force directed graph in 3D"
        },
        {
          "@name": "generator",
          "@content": "Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit"
        },
        {
          "@name": "translated",
          "@content": "6 March 2018"
        },
        {
          "@name": "generator",
          "@content": "DOM2JSONSerializer.js, https://github.com/coderextreme/X3DJSONLD/blob/master/src/main/node/DOM2JSONSerializer.js"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "ProtoDeclare": {
            "@name": "node",
            "-protointerface": {
              "ProtoInterface": {
                "field": [
                  {
                    "@name": "position",
                    "@accessType": "inputOutput",
                    "@type": "SFVec3f",
                    "@value": [
                      0,
                      0,
                      0
                    ]
                  }
                ]
              }
            },
            "-protobody": {
              "ProtoBody": {
                "-children": [
                  {
                    "Transform": {
                      "@DEF": "transform",
                      "-children": [
                        {
                          "IS": {
                            "connect": [
                              {
                                "@nodeField": "translation",
                                "@protoField": "position"
                              }
                            ]
                          }
                        },
                        {
                          "Shape": {
                            "-geometry": {
                              "Sphere": {}
                            },
                            "-appearance": {
                              "Appearance": {
                                "-material": {
                                  "Material": {
                                    "@diffuseColor": [
                                      1,
                                      0,
                                      0
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        },
                        {
                          "Transform": {
                            "@translation": [
                              1,
                              0,
                              0
                            ],
                            "-children": [
                              {
                                "Shape": {
                                  "-geometry": {
                                    "Text": {
                                      "@string": [
                                        "Node"
                                      ],
                                      "-fontStyle": {
                                        "FontStyle": {
                                          "@justify": [
                                            "MIDDLE",
                                            "MIDDLE"
                                          ],
                                          "@size": 5
                                        }
                                      }
                                    }
                                  },
                                  "-appearance": {
                                    "Appearance": {
                                      "-material": {
                                        "Material": {
                                          "@diffuseColor": [
                                            0,
                                            0,
                                            1
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "PositionInterpolator": {
                      "@DEF": "NodePosition",
                      "@key": [
                        0,
                        1
                      ],
                      "@keyValue": [
                        0,
                        0,
                        0,
                        0,
                        5,
                        0
                      ]
                    }
                  },
                  {
                    "Script": {
                      "@DEF": "MoveBall",
                      "field": [
                        {
                          "@name": "translation",
                          "@accessType": "inputOutput",
                          "@type": "SFVec3f",
                          "@value": [
                            50,
                            50,
                            0
                          ]
                        },
                        {
                          "@name": "old",
                          "@accessType": "inputOutput",
                          "@type": "SFVec3f",
                          "@value": [
                            0,
                            0,
                            0
                          ]
                        },
                        {
                          "@name": "set_cycle",
                          "@accessType": "inputOnly",
                          "@type": "SFTime"
                        },
                        {
                          "@name": "keyValue",
                          "@accessType": "outputOnly",
                          "@type": "MFVec3f"
                        }
                      ],
                      "#sourceText": [
                        "ecmascript: function set_cycle(value) { old = translation; translation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50); keyValue = new MFVec3f([old, translation]); // Browser.println(translation); }",
                        ""
                      ]
                    }
                  },
                  {
                    "TimeSensor": {
                      "@DEF": "nodeClock",
                      "@cycleInterval": 3,
                      "@loop": true
                    }
                  }
                ],
                "ROUTE": [
                  {
                    "@fromNode": "nodeClock",
                    "@fromField": "cycleTime",
                    "@toNode": "MoveBall",
                    "@toField": "set_cycle"
                  },
                  {
                    "@fromNode": "nodeClock",
                    "@fromField": "fraction_changed",
                    "@toNode": "NodePosition",
                    "@toField": "set_fraction"
                  },
                  {
                    "@fromNode": "MoveBall",
                    "@fromField": "keyValue",
                    "@toNode": "NodePosition",
                    "@toField": "keyValue"
                  },
                  {
                    "@fromNode": "NodePosition",
                    "@fromField": "value_changed",
                    "@toNode": "transform",
                    "@toField": "set_translation"
                  }
                ]
              }
            }
          }
        },
        {
          "ProtoDeclare": {
            "@name": "cylinder",
            "-protointerface": {
              "ProtoInterface": {
                "field": [
                  {
                    "@name": "set_positionA",
                    "@accessType": "inputOnly",
                    "@type": "SFVec3f"
                  },
                  {
                    "@name": "set_positionB",
                    "@accessType": "inputOnly",
                    "@type": "SFVec3f"
                  }
                ]
              }
            },
            "-protobody": {
              "ProtoBody": {
                "-children": [
                  {
                    "Shape": {
                      "-geometry": {
                        "Extrusion": {
                          "@DEF": "extrusion",
                          "@creaseAngle": 0.785,
                          "@crossSection": [
                            1,
                            0,
                            0.92,
                            -0.38,
                            0.71,
                            -0.71,
                            0.38,
                            -0.92,
                            0,
                            -1,
                            -0.38,
                            -0.92,
                            -0.71,
                            -0.71,
                            -0.92,
                            -0.38,
                            -1,
                            0,
                            -0.92,
                            0.38,
                            -0.71,
                            0.71,
                            -0.38,
                            0.92,
                            0,
                            1,
                            0.38,
                            0.92,
                            0.71,
                            0.71,
                            0.92,
                            0.38,
                            1,
                            0
                          ],
                          "@spine": [
                            0,
                            -50,
                            0,
                            0,
                            50,
                            0
                          ]
                        }
                      },
                      "-appearance": {
                        "Appearance": {
                          "-material": {
                            "Material": {
                              "@diffuseColor": [
                                0,
                                1,
                                0
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "Script": {
                      "@DEF": "MoveCylinder",
                      "field": [
                        {
                          "@name": "spine",
                          "@accessType": "inputOutput",
                          "@type": "MFVec3f",
                          "@value": [
                            0,
                            -50,
                            0,
                            0,
                            50,
                            0
                          ]
                        },
                        {
                          "@name": "set_endA",
                          "@accessType": "inputOnly",
                          "@type": "SFVec3f"
                        },
                        {
                          "@name": "set_endB",
                          "@accessType": "inputOnly",
                          "@type": "SFVec3f"
                        }
                      ],
                      "-children": [
                        {
                          "IS": {
                            "connect": [
                              {
                                "@nodeField": "set_endA",
                                "@protoField": "set_positionA"
                              },
                              {
                                "@nodeField": "set_endB",
                                "@protoField": "set_positionB"
                              }
                            ]
                          }
                        }
                      ],
                      "#sourceText": [
                        "ecmascript: function set_endA(value) { if (typeof spine === 'undefined') { spine = new MFVec3f([value, value]); } else { spine = new MFVec3f([value, spine[1]]); } } function set_endB(value) { if (typeof spine === 'undefined') { spine = new MFVec3f([value, value]); } else { spine = new MFVec3f([spine[0], value]); } } function set_spine(value) { spine = value; }",
                        ""
                      ]
                    }
                  }
                ],
                "ROUTE": [
                  {
                    "@fromNode": "MoveCylinder",
                    "@fromField": "spine",
                    "@toNode": "extrusion",
                    "@toField": "set_spine"
                  }
                ]
              }
            }
          }
        },
        {
          "Transform": {
            "@DEF": "HoldsContent",
            "@scale": [
              0.1,
              0.1,
              0.1
            ],
            "-children": [
              {
                "PlaneSensor": {
                  "@DEF": "clickGenerator",
                  "@minPosition": [
                    -50,
                    -50
                  ],
                  "@maxPosition": [
                    50,
                    50
                  ],
                  "@description": "click on background to add nodes, click on nodes to add links"
                }
              },
              {
                "ProtoInstance": {
                  "@name": "node",
                  "@DEF": "nodeA",
                  "fieldValue": [
                    {
                      "@name": "position",
                      "@value": "0 0 0"
                    }
                  ]
                }
              },
              {
                "ProtoInstance": {
                  "@name": "node",
                  "@DEF": "nodeB",
                  "fieldValue": [
                    {
                      "@name": "position",
                      "@value": "50 50 50"
                    }
                  ]
                }
              },
              {
                "ProtoInstance": {
                  "@name": "cylinder",
                  "@DEF": "linkA",
                  "fieldValue": [
                    {
                      "@name": "set_positionA",
                      "@value": "0 0 0"
                    },
                    {
                      "@name": "set_positionB",
                      "@value": "50 50 50"
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "ROUTE": [
        {
          "@fromNode": "nodeA",
          "@fromField": "position",
          "@toNode": "linkA",
          "@toField": "set_positionA"
        },
        {
          "@fromNode": "nodeB",
          "@fromField": "position",
          "@toNode": "linkA",
          "@toField": "set_positionB"
        }
      ]
    },
    "encoding": "UTF-8",
    "JSON schema": "http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json"
  }
}