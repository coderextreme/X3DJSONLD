<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Immersive" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd">
<head>        
        <meta name='title' content='arc1.x3d'/>
        <meta name='creator' content='Lost, Doug Sanden I think'/>
        <meta name='generator' content='manual'/>
	<meta name='identifier' content='https://coderextreme.net/X3DJSONLD/src/main/data/arc1.x3d'/>
        <meta name='description' content='a generic proto to connect two objects'/>
</head>
<Scene>
    <Viewpoint position='0 0 5' description="Only Viewpoint" orientation='0 0 1 0' />
    <Background skyColor='0.4 0.4 0.4'/>
    <ProtoDeclare name='point'>
        <ProtoInterface>
            <field accessType='inputOutput' name='translation' type='SFVec3f' value="0 0 0"/>
        </ProtoInterface>
        <ProtoBody>
            <Transform DEF='node' >
                <IS>
                    <connect nodeField="translation" protoField="translation"/>
                </IS>
               <Shape>
                        <Sphere radius='0.1'/>
                        <Appearance>
                            <Material diffuseColor='1 0 0'/>
                        </Appearance>
               </Shape>
               <PositionInterpolator DEF='PI1' key='0 1' keyValue='0 0 0 0 5 0'/>
               <Script DEF='MB1'>
                    <field name='translation' accessType='inputOutput' type='SFVec3f' value='50 50 0'/>
                    <field name='old' accessType='inputOutput' type='SFVec3f' value='0 0 0'/>
                    <field name='set_location' accessType='inputOnly' type='SFTime'/>
                    <field name='keyValue' accessType='inputOutput' type='MFVec3f' value="0 0 0 0 5 0"/>
<![CDATA[
ecmascript:
               function set_location(value) {
                    old = translation;
                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f([old, translation]);
               }
]]>
                </Script>
                <TimeSensor DEF='CL1' cycleInterval='3' loop='true'></TimeSensor>
                <ROUTE fromNode='CL1' fromField='cycleTime' toNode='MB1' toField='set_location'/>
                <ROUTE fromNode='CL1' fromField='fraction_changed' toNode='PI1' toField='set_fraction'/>
                <ROUTE fromNode='MB1' fromField='keyValue' toNode='PI1' toField='keyValue'/>
                <ROUTE fromNode='PI1' fromField='value_changed' toNode='node' toField='set_translation'/>
		<ROUTE fromNode='MB1' fromField='translation_changed' toNode='node' toField='set_translation' />
	    </Transform>
        </ProtoBody>
    </ProtoDeclare>

    <Transform DEF="G1">
	    	<ProtoInstance name="point"/>
    </Transform>
    <Transform DEF="G2">
	    	<ProtoInstance name="point"/>
    </Transform>
        
	<Transform DEF='transC1' >
	<Transform DEF='rotscaleC1' >
		<Shape>
			<Appearance><Material diffuseColor='0.2 0.7 0.7' transparency='.5'/></Appearance>
			<Cylinder radius='.05'/>
		</Shape>
        </Transform>
        </Transform>
    
    <ProtoDeclare name='x3dconnector'>
    <ProtoInterface>
        <field accessType='initializeOnly' name='startnode' type='SFNode'/>
        <field accessType='initializeOnly' name='endnode' type='SFNode'/>
        <field accessType='inputOutput' name='transnode' type='SFNode'/>
        <field accessType='inputOutput' name='rotscalenode' type='SFNode'/>
        <field accessType='inputOnly' name='set_startpoint' type='SFVec3f'/>
        <field accessType='inputOnly' name='set_endpoint' type='SFVec3f'/>
    </ProtoInterface>
    <ProtoBody>
        <Script DEF='S1'>
            <field accessType='initializeOnly' name='startnode' type='SFNode'/>
            <field accessType='initializeOnly' name='endnode' type='SFNode'/>
            <field accessType='initializeOnly' name='transnode' type='SFNode'/>
            <field accessType='initializeOnly' name='rotscalenode' type='SFNode'/>
            <field accessType='inputOnly' name='set_startpoint' type='SFVec3f'/>
            <field accessType='inputOnly' name='set_endpoint' type='SFVec3f'/>
            <IS>
                <connect nodeField='startnode' protoField='startnode'/>
                <connect nodeField='endnode' protoField='endnode'/>
                <connect nodeField='transnode' protoField='transnode'/>
                <connect nodeField='rotscalenode' protoField='rotscalenode'/>
                <connect nodeField='set_startpoint' protoField='set_startpoint'/>
                <connect nodeField='set_endpoint' protoField='set_endpoint'/>
            </IS>
            <![CDATA[ecmascript:
        function recompute(startpoint,endpoint){
	    if (typeof endpoint === 'undefined') {
		return;
	    }
            var dif = endpoint.subtract(startpoint);
            var dist = dif.length()*0.5;
            var dif2 = dif.multiply(0.5);
            var norm = dif.normalize();
            var transl = startpoint.add(dif2);
	    if (typeof Quaternion !== 'undefined') {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)
		    };
	    } else {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)
		    };
	    }
	}
	function recompute_and_route(startpoint, endpoint) {
	      var trafo = recompute(startpoint, endpoint);
	      transnode.translation = trafo.translation;
	      rotscalenode.rotation = trafo.rotation;
	      rotscalenode.scale = trafo.scale;
	}
        function initialize(){
            recompute_and_route(startnode.translation,endnode.translation);
        }
        function set_startpoint(val,t){
            recompute_and_route(val,endnode.translation);
        }
        function set_endpoint(val,t){
            recompute_and_route(startnode.translation,val);
        }
            ]]>
        </Script>
    </ProtoBody>
    </ProtoDeclare>
    <ProtoInstance name='x3dconnector' DEF='connector1'>
        <fieldValue name='startnode'>
		    <Transform USE="G1"/>
        </fieldValue>
        <fieldValue name='endnode'>
		    <Transform USE="G2"/>
        </fieldValue>
        <fieldValue name='transnode'>
            <Transform USE='transC1'/>
        </fieldValue>
        <fieldValue name='rotscalenode'>
            <Transform USE='rotscaleC1'/>
        </fieldValue>
        <fieldValue name='set_startpoint'>
        </fieldValue>
        <fieldValue name='set_endpoint'>
        </fieldValue>
    </ProtoInstance>
    <ROUTE fromNode='G1' fromField='translation_changed' toNode='connector1' toField='set_startpoint'/>
    <ROUTE fromNode='G2' fromField='translation_changed' toNode='connector1' toField='set_endpoint'/>
</Scene>
</X3D>
