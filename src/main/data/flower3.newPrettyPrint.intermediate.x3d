<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
    <Scene>
        <NavigationInfo avatarSize='0.25 1.6 0.75' headlight='true' speed='1.0' transitionTime='1.0' transitionType='"LINEAR"' type='"EXAMINE" "ANY"' visibilityLimit='0.0' class=''/>
        <DirectionalLight ambientIntensity='0.0' color='1 1 1' direction='0 -0.8 -0.2' global='false' intensity='0.5' on='true' class=''/>
        <Background backUrl='' bottomUrl='' frontUrl='' groundAngle='' leftUrl='' rightUrl='' skyAngle='' skyColor='1 1 1' topUrl='' transparency='0.0' class=''/>
        <Viewpoint centerOfRotation='0 0 0' description='One mathematical orbital' fieldOfView='0.7854' jump='true' orientation='0 0 1 0' position='0 0 50' retainUserOffsets='false' class=''/>
        <Transform DEF='OrbitTransform' bboxCenter='0 0 0' bboxSize='-1 -1 -1' center='0 0 0' rotation='0 0 1 0' scale='1 1 1' scaleOrientation='0 0 1 0' translation='8 0 0' class=''>
            <Shape bboxCenter='0 0 0' bboxSize='-1 -1 -1' class=''>
                <Appearance class=''>
                    <Material ambientIntensity='0.2' diffuseColor='0 0.5 1' emissiveColor='0 0 0' shininess='0.2' specularColor='0 0.5 1' transparency='0.0' class=''/>
                </Appearance>
                <IndexedFaceSet DEF='orbit' ccw='false' colorIndex='' colorPerVertex='true' convex='false' coordIndex='0 1 2 -1' creaseAngle='0.0' normalIndex='' normalPerVertex='true' solid='true' texCoordIndex='' class=''>
                    <Coordinate DEF='OrbitCoordinates' point='0 0 1 0 1 0 1 0 0' class=''/>
                </IndexedFaceSet>
            </Shape>
        </Transform>
        <Script DEF='OrbitScript' directOutput='false' mustEvaluate='false' url='' class=''>
            <field name='set_fraction' accessType='inputOnly' appinfo='' documentation='' type='SFFloat' value=''/>
            <field name='coordinates' accessType='outputOnly' appinfo='' documentation='' type='MFVec3f' value=''/>
            <field name='coordIndexes' accessType='outputOnly' appinfo='' documentation='' type='MFInt32' value=''/>
            <field name='e' accessType='inputOutput' appinfo='' documentation='' type='SFFloat' value='5.0'/>
            <field name='f' accessType='inputOutput' appinfo='' documentation='' type='SFFloat' value='5.0'/>
            <field name='g' accessType='inputOutput' appinfo='' documentation='' type='SFFloat' value='5.0'/>
            <field name='h' accessType='inputOutput' appinfo='' documentation='' type='SFFloat' value='5.0'/>
            <field name='t' accessType='inputOutput' appinfo='' documentation='' type='SFFloat' value='0.0'/>
            <field name='p' accessType='inputOutput' appinfo='' documentation='' type='SFFloat' value='0.0'/>
            <field name='resolution' accessType='initializeOnly' appinfo='' documentation='' type='SFInt32' value='100'/>
<![CDATA[
ecmascript:
    
function initialize() {
     generateCoordinates(resolution);
     var localci = [];
     for ( i = 0; i < resolution-1; i++) {
     	for ( j = 0; j < resolution-1; j++) {
	     localci.push(i*resolution+j);
	     localci.push(i*resolution+j+1);
	     localci.push((i+1)*resolution+j+1);
	     localci.push((i+1)*resolution+j);
	     localci.push(-1);
	}
    }
    coordIndexes = new MFInt32(localci);
}

function generateCoordinates(resolution) {
     theta = 0.0;
     phi = 0.0;
     delta = (2 * 3.141592653) / (resolution-1);
     var localc = [];
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);
		localc.push(new SFVec3f(
			rho * Math.cos(phi) * Math.cos(theta),
			rho * Math.cos(phi) * Math.sin(theta),
			rho * Math.sin(phi)
		));
		theta += delta;
	}
	phi += delta;
     }
     coordinates = new MFVec3f(localc);
}

function set_fraction(fraction, eventTime) {
	t += 0.5;
	p += 0.5;
	choice = Math.floor(Math.random() * 4);
	switch (choice) {
	case 0:
		e += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 1:
		f += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 2:
		g += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 3:
		h += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	}
	if (f < 1) {
		f = 10;
	}
	if (g < 1) {
		g = 4;
	}
	if (h < 1) {
		h = 4;
	}
	generateCoordinates(resolution);
}

]]>
        </Script>
        <TimeSensor DEF='Clock' cycleInterval='16.0' enabled='true' loop='true' pauseTime='0.0' resumeTime='0.0' startTime='0.0' stopTime='0.0' class=''/>
        <ROUTE fromField='coordIndexes' fromNode='OrbitScript' toField='coordIndex' toNode='Orbit'/>
        <ROUTE fromField='coordinates' fromNode='OrbitScript' toField='point' toNode='OrbitCoordinates'/>
        <ROUTE fromField='fraction_changed' fromNode='Clock' toField='set_fraction' toNode='OrbitScript'/>
    </Scene>
</X3D>
