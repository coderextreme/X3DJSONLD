{
    "X3D":,
    {
        "encoding":"UTF-8",
        "$id":   "https://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "@version":"4.0",
        "@profile":"Immersive",
    "head":
    {
        "component":
        {
      {
        "@name":"Scripting"
      }
    },
        "meta":
        {
      {
        "@content":"MyBounce.x3d",
        "@name":"title"
      }
    },
        "meta":
        {
      {
        "@content":"John Carlson",
        "@name":"creator"
      }
    },
        "meta":
        {
      {
        "@content":"3 prismatic spheres",
        "@name":"description"
      }
    },
        "meta":
        {
      {
        "@content":"https://coderextreme.net/X3DJSONLD/src/main/data/SFVec3f.x3d",
        "@name":"identifier"
      }
    },
    }    "Scene":
    {
        "NavigationInfo":
        {
    },
        "Transform":
        {
      {
        "@DEF":"transform"
      }
            "Shape":
            {
                "Appearance":
                {
                    "Material":
                    {
      {
        "@diffuseColor":"0.7 0.7 0.7",
        "@specularColor":"0.5 0.5 0.5"
      }
    },
                }                "Sphere":
                {
    },
            }        }        "Script":
        {
      {
        "@DEF":"Bounce2",
        "@sourceCode":"ecmascript:
&quot;+
&quot;			function newBubble() {
&quot;+
&quot;			    translation = new SFVec3f(0, 0, 0);
&quot;+
&quot;			    velocity = new SFVec3f(
&quot;+
&quot;			    	Math.random() - 0.5,
&quot;+
&quot;				Math.random() - 0.5,
&quot;+
&quot;				Math.random() - 0.5);
&quot;+
&quot;			}
&quot;+
&quot;			function set_fraction() {
&quot;+
&quot;			    translation = new SFVec3f(
&quot;+
&quot;			    	translation.x + velocity.x,
&quot;+
&quot;				translation.y + velocity.y,
&quot;+
&quot;				translation.z + velocity.z);
&quot;+
&quot;				if (Math.abs(translation.x) > 10) {
&quot;+
&quot;					newBubble();
&quot;+
&quot;				} else if (Math.abs(translation.y) > 10) {
&quot;+
&quot;					newBubble();
&quot;+
&quot;				} else if (Math.abs(translation.z) > 10) {
&quot;+
&quot;					newBubble();
&quot;+
&quot;				} else {
&quot;+
&quot;					velocity = new SFVec3f(
&quot;+
&quot;						velocity.x + Math.random() * 0.2 - 0.1,
&quot;+
&quot;						velocity.y + Math.random() * 0.2 - 0.1,
&quot;+
&quot;						velocity.z + Math.random() * 0.2 - 0.1
&quot;+
&quot;					);
&quot;+
&quot;				}
&quot;+
&quot;			}
&quot;+
&quot;
&quot;+
&quot;			function initialize() {
&quot;+
&quot;			     newBubble();
&quot;+
&quot;			}"
      }
            "field":
            {
      {
        "@accessType":"inputOnly",
        "@name":"set_translation",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
            "field":
            {
      {
        "@accessType":"outputOnly",
        "@name":"translation_changed",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
            "field":
            {
      {
        "@accessType":"inputOutput",
        "@name":"translation",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
            "field":
            {
      {
        "@accessType":"inputOutput",
        "@name":"velocity",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
            "field":
            {
      {
        "@accessType":"inputOnly",
        "@name":"set_fraction",
        "@type":"SFTime"
      }
    },
        }        "TimeSensor":
        {
      {
        "@DEF":"TourTime",
        "@cycleInterval":"0.15",
        "@loop":"true"
      }
    },
        "ROUTE":
        {
      {
        "@fromField":"cycleTime",
        "@fromNode":"TourTime",
        "@toField":"set_fraction",
        "@toNode":"Bounce2"
      }
    },
        "ROUTE":
        {
      {
        "@fromField":"translation_changed",
        "@fromNode":"Bounce2",
        "@toField":"set_translation",
        "@toNode":"transform"
      }
    },
    }}
