{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"https://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"CameraExamples.x3d"
          },
          {
            "@name":"description",
            "@content":"Camera, CameraShot and CameraMove examples that demonstrate storyboard capabilities and precise camera operation. This is a developmental effort for potential X3D Specification improvement."
          },
          {
            "@name":"documentation",
            "@content":"Two demos are found in the scene, click the \"red text\" on left or right to start. (a) SimpleShotsTest shows Zoom in/out, Pan left/right, Boom up/down, Tilt left/right, with each is defined by a CameraShot collecting a series of CameraMovements. (b) AimPointTest gradually slews the camera view to look at the sliding cube, then follows it around before returning to original viewpoint."
          },
          {
            "@name":"creator",
            "@content":"Don Brutzman and Jeff Weekley"
          },
          {
            "@name":"created",
            "@content":"18 June 2009"
          },
          {
            "@name":"modified",
            "@content":"20 January 2020"
          },
          {
            "@name":"TODO",
            "@content":"Schematron rules, backed up by initialize() checks"
          },
          {
            "@name":"reference",
            "@content":"BeyondViewpointCameraNodesWeb3D2009.pdf"
          },
          {
            "@name":"MovingImage",
            "@content":"CameraExamplesDemo.mp4"
          },
          {
            "@name":"reference",
            "@content":"https://www.web3d.org/x3d/specifications/ISO-IEC-FDIS-19775-1.2-X3D-AbstractSpecification/Part01/components/navigation.html"
          },
          {
            "@name":"subject",
            "@content":"Camera nodes for Viewpoint navigation control"
          },
          {
            "@name":"reference",
            "@content":"CameraPrototypes.x3d"
          },
          {
            "@name":"reference",
            "@content":"CameraExamplesConsoleLog.txt"
          },
          {
            "@name":"reference",
            "@content":"http://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/content/examples/Basic/development/CameraExamples.avi"
          },
          {
            "@name":"reference",
            "@content":"https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials/gridBack.x3d"
          },
          {
            "@name":"identifier",
            "@content":"https://www.web3d.org/x3d/content/examples/Basic/development/CameraExamples.x3d"
          },
          {
            "@name":"reference",
            "@content":"http://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/content/examples/Basic/development/CameraExamples.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"12 April 2021"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          {
            "#comment":"=============== Camera =============="
          },
          { "ExternProtoDeclare":
            {
              "@name":"Camera",
              "@appinfo":"Camera node provides direct control of scene view to enable cinematic camera animation shot by shot and move by move along with still digital-photography settings for offline rendering of camera images",
              "@url":["CameraPrototypes.x3d#Camera","https://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.x3d#Camera","CameraPrototypes.wrl#Camera","https://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.wrl#Camera"],
              "field": [
                {
                  "@name":"description",
                  "@accessType":"inputOutput",
                  "@appinfo":"Text description to be displayed for this Camera",
                  "@type":"SFString"
                },
                {
                  "@name":"position",
                  "@accessType":"inputOutput",
                  "@appinfo":"Camera position in local transformation frame, which is default prior to first CameraShot initialPosition getting activated",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"orientation",
                  "@accessType":"inputOutput",
                  "@appinfo":"Camera rotation in local transformation frame, which is default prior to first CameraShot initialPosition getting activated",
                  "@type":"SFRotation"
                },
                {
                  "@name":"fieldOfView",
                  "@accessType":"inputOutput",
                  "@appinfo":"pi/4",
                  "@type":"SFFloat"
                },
                {
                  "@name":"set_fraction",
                  "@accessType":"inputOnly",
                  "@appinfo":"input fraction drives interpolators",
                  "@type":"SFFloat"
                },
                {
                  "@name":"set_bind",
                  "@accessType":"inputOnly",
                  "@appinfo":"input event binds or unbinds this Camera",
                  "@type":"SFBool"
                },
                {
                  "@name":"bindTime",
                  "@accessType":"outputOnly",
                  "@appinfo":"output event indicates when this Camera is bound",
                  "@type":"SFTime"
                },
                {
                  "@name":"isBound",
                  "@accessType":"outputOnly",
                  "@appinfo":"output event indicates whether this Camera is bound or unbound",
                  "@type":"SFBool"
                },
                {
                  "@name":"nearClipPlane",
                  "@accessType":"inputOutput",
                  "@appinfo":"Vector distance to near clipping plane corresponds to NavigationInfo.avatarSize[0]",
                  "@type":"SFFloat"
                },
                {
                  "@name":"farClipPlane",
                  "@accessType":"inputOutput",
                  "@appinfo":"Vector distance to far clipping plane corresponds to NavigationInfo.visibilityLimit",
                  "@type":"SFFloat"
                },
                {
                  "@name":"shots",
                  "@accessType":"inputOutput",
                  "@appinfo":"Array of CameraShot nodes which in turn contain CameraMovement nodes",
                  "@type":"MFNode"
                },
                {
                  "@name":"headlight",
                  "@accessType":"inputOutput",
                  "@appinfo":"Whether camera headlight is on or off",
                  "@type":"SFBool"
                },
                {
                  "@name":"headlightColor",
                  "@accessType":"inputOutput",
                  "@appinfo":"Camera headlight color",
                  "@type":"SFColor"
                },
                {
                  "@name":"headlightIntensity",
                  "@accessType":"inputOutput",
                  "@appinfo":"Camera headlight intensity",
                  "@type":"SFFloat"
                },
                {
                  "@name":"filterColor",
                  "@accessType":"inputOutput",
                  "@appinfo":"Camera filter color that modifies virtual lens capture",
                  "@type":"SFColor"
                },
                {
                  "@name":"filterTransparency",
                  "@accessType":"inputOutput",
                  "@appinfo":"Camera filter transparency that modifies virtual lens capture",
                  "@type":"SFFloat"
                },
                {
                  "@name":"upVector",
                  "@accessType":"inputOutput",
                  "@appinfo":"upVector changes modify camera orientation (and possibly vice versa)",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"fStop",
                  "@accessType":"inputOutput",
                  "@appinfo":"Focal length divided effective aperture diameter indicating width of focal plane",
                  "@type":"SFFloat"
                },
                {
                  "@name":"focusDistance",
                  "@accessType":"inputOutput",
                  "@appinfo":"Distance to focal plane of sharpest focus",
                  "@type":"SFFloat"
                },
                {
                  "@name":"isActive",
                  "@accessType":"outputOnly",
                  "@appinfo":"Mark start/stop with true/false output respectively useful to trigger external animations",
                  "@type":"SFBool"
                },
                {
                  "@name":"totalDuration",
                  "@accessType":"outputOnly",
                  "@appinfo":"Total duration of contained enabled CameraShot (and thus CameraMovement) move durations",
                  "@type":"SFTime"
                },
                {
                  "@name":"offlineRender",
                  "@accessType":"inputOutput",
                  "@appinfo":"OfflineRender node",
                  "@type":"SFNode"
                },
                {
                  "@name":"traceEnabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"enable console output to trace script computations and prototype progress",
                  "@type":"SFBool"
                }
              ],
              "-children":[
                {
                  "#comment":"Viewpoint-related fields, NavigationInfo-related fields and Camera-unique fields"
                }
              ]
            }
          },
          {
            "#comment":"=============== CameraShot =============="
          },
          { "ExternProtoDeclare":
            {
              "@name":"CameraShot",
              "@appinfo":"CameraShot collects a specific set of CameraMovement animations that make up an individual shot",
              "@url":["CameraPrototypes.x3d#CameraShot","https://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.x3d#CameraShot","CameraPrototypes.wrl#CameraShot","https://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.wrl#CameraShot"],
              "field": [
                {
                  "@name":"description",
                  "@accessType":"inputOutput",
                  "@appinfo":"Text description to be displayed for this CameraShot",
                  "@type":"SFString"
                },
                {
                  "@name":"enabled",
                  "@accessType":"inputOutput",
                  "@appinfo":"Whether this CameraShot can be activated",
                  "@type":"SFBool"
                },
                {
                  "@name":"moves",
                  "@accessType":"inputOutput",
                  "@appinfo":"Set of CameraMovement nodes",
                  "@type":"MFNode",
                  "-children":[
                    {
                      "#comment":"initializing CameraMovement nodes are inserted here by scene author using ProtoInstance"
                    }
                  ]
                },
                {
                  "@name":"initialPosition",
                  "@accessType":"inputOutput",
                  "@appinfo":"Setup to reinitialize camera position for this shot",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"initialOrientation",
                  "@accessType":"inputOutput",
                  "@appinfo":"Setup to reinitialize camera rotation for this shot",
                  "@type":"SFRotation"
                },
                {
                  "@name":"initialAimPoint",
                  "@accessType":"inputOutput",
                  "@appinfo":"Setup to reinitialize aimpoint (relative location for camera direction) for this shot",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"initialFieldOfView",
                  "@accessType":"inputOutput",
                  "@appinfo":"pi/4",
                  "@type":"SFFloat"
                },
                {
                  "@name":"initialFStop",
                  "@accessType":"inputOutput",
                  "@appinfo":"Focal length divided effective aperture diameter indicating width of focal plane",
                  "@type":"SFFloat"
                },
                {
                  "@name":"initialFocusDistance",
                  "@accessType":"inputOutput",
                  "@appinfo":"Distance to focal plane of sharpest focus",
                  "@type":"SFFloat"
                },
                {
                  "@name":"shotDuration",
                  "@accessType":"outputOnly",
                  "@appinfo":"Subtotal duration of contained CameraMovement move durations",
                  "@type":"SFTime"
                },
                {
                  "@name":"isActive",
                  "@accessType":"outputOnly",
                  "@appinfo":"Mark start/stop with true/false output respectively useful to trigger external animations",
                  "@type":"SFBool"
                },
                {
                  "@name":"traceEnabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"enable console output to trace script computations and prototype progress",
                  "@type":"SFBool"
                }
              ]
            }
          },
          {
            "#comment":"=============== CameraMovement =============="
          },
          { "ExternProtoDeclare":
            {
              "@name":"CameraMovement",
              "@appinfo":"CameraMovement defines a single camera movement animation",
              "@url":["CameraPrototypes.x3d#CameraMovement","https://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.x3d#CameraMovement","CameraPrototypes.wrl#CameraMovement","https://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.wrl#CameraMovement"],
              "field": [
                {
                  "@name":"description",
                  "@accessType":"inputOutput",
                  "@appinfo":"Text description to be displayed for this CameraMovement",
                  "@type":"SFString"
                },
                {
                  "@name":"enabled",
                  "@accessType":"inputOutput",
                  "@appinfo":"Whether this CameraMovement can be activated",
                  "@type":"SFBool"
                },
                {
                  "@name":"duration",
                  "@accessType":"inputOutput",
                  "@appinfo":"Duration in seconds for this move",
                  "@type":"SFFloat"
                },
                {
                  "@name":"goalPosition",
                  "@accessType":"inputOutput",
                  "@appinfo":"Goal camera position for this move",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"goalOrientation",
                  "@accessType":"inputOutput",
                  "@appinfo":"Goal camera rotation for this move",
                  "@type":"SFRotation"
                },
                {
                  "@name":"tracking",
                  "@accessType":"inputOutput",
                  "@appinfo":"Whether or not camera direction is tracking towards the aimPoint",
                  "@type":"SFBool"
                },
                {
                  "@name":"goalAimPoint",
                  "@accessType":"inputOutput",
                  "@appinfo":"Goal aimPoint for this move, ignored if tracking=false",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"goalFieldOfView",
                  "@accessType":"inputOutput",
                  "@appinfo":"Goal fieldOfView for this move",
                  "@type":"SFFloat"
                },
                {
                  "@name":"goalFStop",
                  "@accessType":"inputOutput",
                  "@appinfo":"Focal length divided effective aperture diameter indicating width of focal plane",
                  "@type":"SFFloat"
                },
                {
                  "@name":"goalFocusDistance",
                  "@accessType":"inputOutput",
                  "@appinfo":"Distance to focal plane of sharpest focus",
                  "@type":"SFFloat"
                },
                {
                  "@name":"isActive",
                  "@accessType":"outputOnly",
                  "@appinfo":"Mark start/stop with true/false output respectively useful to trigger external animations",
                  "@type":"SFBool"
                },
                {
                  "@name":"traceEnabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"enable console output to trace script computations and prototype progress",
                  "@type":"SFBool"
                }
              ]
            }
          },
          {
            "#comment":"=============== OfflineRender =============="
          },
          { "ExternProtoDeclare":
            {
              "@name":"OfflineRender",
              "@appinfo":"OfflineRender defines a parameters for offline rendering of Camera animation output to a movie file (or possibly a still shot)",
              "@url":["CameraPrototypes.x3d#OfflineRender","https://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.x3d#OfflineRender","CameraPrototypes.wrl#OfflineRender","https://www.web3d.org/x3d/content/examples/Basic/development/CameraPrototypes.wrl#OfflineRender"],
              "field": [
                {
                  "@name":"description",
                  "@accessType":"inputOutput",
                  "@appinfo":"Text description to be displayed for this OfflineRender",
                  "@type":"SFString"
                },
                {
                  "@name":"enabled",
                  "@accessType":"inputOutput",
                  "@appinfo":"Whether this OfflineRender can be activated",
                  "@type":"SFBool"
                },
                {
                  "@name":"frameRate",
                  "@accessType":"inputOutput",
                  "@appinfo":"Frames per second recorded for this rendering",
                  "@type":"SFFloat"
                },
                {
                  "@name":"frameSize",
                  "@accessType":"inputOutput",
                  "@appinfo":"Size of frame in number of pixels width and height",
                  "@type":"SFVec2f"
                },
                {
                  "@name":"pixelAspectRatio",
                  "@accessType":"inputOutput",
                  "@appinfo":"Relative dimensions of pixel height/width typically 1.33 or 1",
                  "@type":"SFFloat"
                },
                {
                  "@name":"set_startTime",
                  "@accessType":"inputOnly",
                  "@appinfo":"Begin render operation",
                  "@type":"SFTime"
                },
                {
                  "@name":"progress",
                  "@accessType":"outputOnly",
                  "@appinfo":"Progress performing render operation (0..1)",
                  "@type":"SFFloat"
                },
                {
                  "@name":"renderCompleteTime",
                  "@accessType":"outputOnly",
                  "@appinfo":"Render operation complete",
                  "@type":"SFTime"
                },
                {
                  "@name":"movieFormat",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Format of rendered output movie (mpeg mp4 etc.), use first supported format",
                  "@type":"MFString"
                },
                {
                  "@name":"imageFormat",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Format of rendered output images (png jpeg gif tiff etc.) use first supported format",
                  "@type":"MFString"
                },
                {
                  "@name":"traceEnabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"enable console output to trace script computations and prototype progress",
                  "@type":"SFBool"
                }
              ],
              "-children":[
                {
                  "#comment":"TODO non-photorealistic rendering (NPR) parameters"
                }
              ]
            }
          },
          {
            "#comment":"=============== Lights, camera, action! =============="
          },
          {
            "#comment":"Keep prototype instances in same file while developing, then move later"
          },
          {
            "#comment":"We will create examples matching those in the paper"
          },
          {
            "#comment":"=============== Camera.SimpleShotsTest =============="
          },
          {
            "#comment":"=============== Camera.AimPointTest =============="
          },
          {
            "#comment":"TODO build a test once implemented"
          },
          {
            "#comment":"=============== animate a camera shape to visualize view changes =============="
          },
          {
            "#comment":"=============== add checkerboard, axes and other things to look at while animating =============="
          },
          {
            "#comment":"================ CrossHair visualization for center of screen ================"
          },
          { "ExternProtoDeclare":
            {
              "@name":"CrossHair",
              "@appinfo":"CrossHair prototype provides a heads-up display (HUD) crosshair at the view center, which is useful for assessing NavigationInfo lookAt point",
              "@url":["../../Savage/Tools/HeadsUpDisplays/CrossHairPrototype.x3d#CrossHair","https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/CrossHairPrototype.x3d#CrossHair","../../Savage/Tools/HeadsUpDisplays/CrossHairPrototype.wrl#CrossHair","https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/CrossHairPrototype.wrl#CrossHair"],
              "field": [
                {
                  "@name":"enabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"whether CrissHair orititype is enabled or not",
                  "@type":"SFBool"
                },
                {
                  "@name":"set_enabled",
                  "@accessType":"inputOnly",
                  "@appinfo":"control whether enabled/disabled",
                  "@type":"SFBool"
                },
                {
                  "@name":"markerColor",
                  "@accessType":"inputOutput",
                  "@appinfo":"color of CrossHair marker",
                  "@type":"SFColor"
                },
                {
                  "@name":"scale",
                  "@accessType":"inputOutput",
                  "@appinfo":"size of CrossHair in meters",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"positionOffsetFromCamera",
                  "@accessType":"inputOutput",
                  "@appinfo":"distance in front of HUD viewpoint",
                  "@type":"SFVec3f"
                }
              ]
            }
          },
          {
            "#comment":"turn on CrossHairInstance when animated camera viewpoints are bound"
          },
          { "ROUTE":
            {
              "@fromField":"isBound",
              "@fromNode":"Camera.SimpleShotsTest",
              "@toField":"set_enabled",
              "@toNode":"CrossHairInstance"
            }
          },
          { "ROUTE":
            {
              "@fromField":"isBound",
              "@fromNode":"Camera.AimPointTest",
              "@toField":"set_enabled",
              "@toNode":"CrossHairInstance"
            }
          },
          {
            "#comment":"turn off CrossHairInstance when animated camera viewpoints are unbound <BooleanFilter DEF='NegateCrossHair'/> <ROUTE fromField='isBound' fromNode='Camera.SimpleShotsTest' toField='set_boolean' toNode='NegateCrossHair'/> <ROUTE fromField='isBound' fromNode='Camera.AimPointTest' toField='set_boolean' toNode='NegateCrossHair'/> <ROUTE fromField='inputNegate' fromNode='NegateCrossHair' toField='set_enabled' toNode='CrossHairInstance'/>"
          },
          {
            "#comment":"=============== TODO Launch Prototype Example =============="
          }
        ]
    }
  }
}