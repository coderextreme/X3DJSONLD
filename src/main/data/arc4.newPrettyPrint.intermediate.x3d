<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta content='x3dconnectorProto' dir='' http_equiv='' lang='' name='title' scheme=''/>
    <meta content='Lost, Doug Sanden I think' dir='' http_equiv='' lang='' name='creator' scheme=''/>
    <meta content='manual' dir='' http_equiv='' lang='' name='generator' scheme=''/>
    <meta content='https://coderextreme.net/X3DJSONLD/x3dconnectorProto.x3d' dir='' http_equiv='' lang='' name='identifier' scheme=''/>
    <meta content='a generic proto to connect two objects' dir='' http_equiv='' lang='' name='description' scheme=''/>
  </head>
  <Scene>
    <Viewpoint centerOfRotation='0 0 0' class='' description='Only Viewpoint' fieldOfView='0.7854' jump='true' orientation='0 0 1 0' position='0 0 5' retainUserOffsets='false'/>
    <Background backUrl='' bottomUrl='' class='' frontUrl='' groundAngle='' leftUrl='' rightUrl='' skyAngle='' skyColor='0.4 0.4 0.4' topUrl='' transparency='0.0'/>
    <Transform DEF='DECLpoint_G1_node' bboxCenter='0 0 0' bboxSize='-1 -1 -1' center='0 0 0' class='' rotation='0 0 1 0' scale='1 1 1' scaleOrientation='0 0 1 0' translation='0 0 0'>
      <Shape bboxCenter='0 0 0' bboxSize='-1 -1 -1' class=''>
        <Appearance class=''>
          <Material ambientIntensity='0.2' class='' diffuseColor='1 0 0' emissiveColor='0 0 0' shininess='0.2' specularColor='0 0 0' transparency='0.0'/>
        </Appearance>
        <Sphere class='' radius='0.1' solid='true'/>
      </Shape>
      <PositionInterpolator DEF='DECLpoint_G1_PI1' class='' key='0 1' keyValue='0 0 0 0 5 0'/>
      <Script DEF='DECLpoint_G1_MB1' class='' directOutput='false' mustEvaluate='false' url=''>
        <field name='translation' accessType='inputOutput' appinfo='' documentation='' type='SFVec3f' value='0 0 0'/>
        <field name='old' accessType='inputOutput' appinfo='' documentation='' type='SFVec3f' value='0 0 0'/>
        <field name='set_location' accessType='inputOnly' appinfo='' documentation='' type='SFTime' value=''/>
        <field name='keyValue' accessType='inputOutput' appinfo='' documentation='' type='MFVec3f' value='0 0 0 0 5 0'/>
<![CDATA[
ecmascript:
		function set_location(value) {
                    old = translation;
		    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f([old, translation]);
		    // Browser.println(keyValue);
		}
]]>
      </Script>
      <TimeSensor DEF='DECLpoint_G1_CL1' class='' cycleInterval='3.0' enabled='true' loop='true' pauseTime='0.0' resumeTime='0.0' startTime='0.0' stopTime='0.0'/>
      <ROUTE fromField='cycleTime' fromNode='DECLpoint_G1_CL1' toField='set_location' toNode='DECLpoint_G1_MB1'/>
      <ROUTE fromField='fraction_changed' fromNode='DECLpoint_G1_CL1' toField='set_fraction' toNode='DECLpoint_G1_PI1'/>
      <ROUTE fromField='keyValue' fromNode='DECLpoint_G1_MB1' toField='keyValue' toNode='DECLpoint_G1_PI1'/>
      <ROUTE fromField='value_changed' fromNode='DECLpoint_G1_PI1' toField='set_translation' toNode='DECLpoint_G1_node'/>
    </Transform>
    <Transform DEF='DECLpoint_G2_node' bboxCenter='0 0 0' bboxSize='-1 -1 -1' center='0 0 0' class='' rotation='0 0 1 0' scale='1 1 1' scaleOrientation='0 0 1 0' translation='0 0 0'>
      <Shape bboxCenter='0 0 0' bboxSize='-1 -1 -1' class=''>
        <Appearance class=''>
          <Material ambientIntensity='0.2' class='' diffuseColor='1 0 0' emissiveColor='0 0 0' shininess='0.2' specularColor='0 0 0' transparency='0.0'/>
        </Appearance>
        <Sphere class='' radius='0.1' solid='true'/>
      </Shape>
      <PositionInterpolator DEF='DECLpoint_G2_PI1' class='' key='0 1' keyValue='0 0 0 0 5 0'/>
      <Script DEF='DECLpoint_G2_MB1' class='' directOutput='false' mustEvaluate='false' url=''>
        <field name='translation' accessType='inputOutput' appinfo='' documentation='' type='SFVec3f' value='0 0 0'/>
        <field name='old' accessType='inputOutput' appinfo='' documentation='' type='SFVec3f' value='0 0 0'/>
        <field name='set_location' accessType='inputOnly' appinfo='' documentation='' type='SFTime' value=''/>
        <field name='keyValue' accessType='inputOutput' appinfo='' documentation='' type='MFVec3f' value='0 0 0 0 5 0'/>
<![CDATA[
ecmascript:
		function set_location(value) {
                    old = translation;
		    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f([old, translation]);
		    // Browser.println(keyValue);
		}
]]>
      </Script>
      <TimeSensor DEF='DECLpoint_G2_CL1' class='' cycleInterval='3.0' enabled='true' loop='true' pauseTime='0.0' resumeTime='0.0' startTime='0.0' stopTime='0.0'/>
      <ROUTE fromField='cycleTime' fromNode='DECLpoint_G2_CL1' toField='set_location' toNode='DECLpoint_G2_MB1'/>
      <ROUTE fromField='fraction_changed' fromNode='DECLpoint_G2_CL1' toField='set_fraction' toNode='DECLpoint_G2_PI1'/>
      <ROUTE fromField='keyValue' fromNode='DECLpoint_G2_MB1' toField='keyValue' toNode='DECLpoint_G2_PI1'/>
      <ROUTE fromField='value_changed' fromNode='DECLpoint_G2_PI1' toField='set_translation' toNode='DECLpoint_G2_node'/>
    </Transform>
    <Group bboxCenter='0 0 0' bboxSize='-1 -1 -1' class=''>
      <Transform DEF='DECLx3dconnector_connector1_trans' bboxCenter='0 0 0' bboxSize='-1 -1 -1' center='0 0 0' class='' rotation='0 0 1 0' scale='1 1 1' scaleOrientation='0 0 1 0' translation='0 0 0'>
        <Transform DEF='DECLx3dconnector_connector1_rotscale' bboxCenter='0 0 0' bboxSize='-1 -1 -1' center='0 0 0' class='' rotation='0 0 1 0' scale='1 1 1' scaleOrientation='0 0 1 0' translation='0 0 0'>
          <Shape bboxCenter='0 0 0' bboxSize='-1 -1 -1' class=''>
            <Appearance class=''>
              <Material ambientIntensity='0.2' class='' diffuseColor='0.2 0.7 0.7' emissiveColor='0 0 0' shininess='0.2' specularColor='0 0 0' transparency='0.5'/>
            </Appearance>
            <Cylinder bottom='true' class='' height='2.0' radius='0.05' side='true' solid='true' top='true'/>
          </Shape>
        </Transform>
      </Transform>
      <Script DEF='DECLx3dconnector_connector1_S1' class='' directOutput='false' mustEvaluate='false' url=''>
        <field name='startnode' accessType='initializeOnly' appinfo='' documentation='' type='SFNode' value=''/>
        <field name='endnode' accessType='initializeOnly' appinfo='' documentation='' type='SFNode' value=''/>
        <field name='position' accessType='inputOutput' appinfo='' documentation='' type='SFNode' value=''>
          <Transform USE='DECLx3dconnector_connector1_trans'/>
        </field>
        <field name='rotscale' accessType='inputOutput' appinfo='' documentation='' type='SFNode' value=''>
          <Transform USE='DECLx3dconnector_connector1_rotscale'/>
        </field>
        <field name='set_startpoint' accessType='inputOnly' appinfo='' documentation='' type='SFVec3f' value=''/>
        <field name='set_endpoint' accessType='inputOnly' appinfo='' documentation='' type='SFVec3f' value=''/>
<![CDATA[
ecmascript:
        function recompute(startpoint,endpoint){
	    if (typeof endpoint === 'undefined') {
		    if (typeof Quaternion !== 'undefined') {
			    return {
				    scale : new SFVec3f(1.0,1.0,1.0),
				    translation : new SFVec3f(1.0,1.0,1.0),
			    	    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), 1.0)
			    };
	    	    } else if (typeof SFRotation !== 'undefined') {
			    return {
				    scale : new SFVec3f(1.0,1.0,1.0),
				    translation : new SFVec3f(1.0,1.0,1.0),
			    	    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),1.0)
			    };
	    	    } else {
			    return {
				    scale : new SFVec3f(1.0,1.0,1.0),
				    translation : new SFVec3f(1.0,1.0,1.0)
			    };
		    }
	    }
            var dif = endpoint.subtract(startpoint);
            var dist = dif.length()*0.5;
            var dif2 = dif.multiply(0.5);
            var norm = dif.normalize();
            var transl = startpoint.add(dif2);
	    if (typeof Quaternion !== 'undefined') {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)
		    };
	    } else if (typeof SFRotation !== 'undefined') {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)
		    };
	    } else {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl
		    };
	    }
	}
	function recompute_and_route(startpoint, endpoint) {
	      var trafo = recompute(startpoint, endpoint);
	      position.translation = trafo.translation;
	      rotscale.rotation = trafo.rotation;
	      rotscale.scale = trafo.scale;
	}
        function initialize(){
            recompute_and_route(startnode.translation,endnode.translation);
        }
        function set_startpoint(val,t){
            recompute_and_route(val,endnode.translation);
        }
        function set_endpoint(val,t){
            recompute_and_route(startnode.translation,val);
        }
]]>
      </Script>
    </Group>
    <ROUTE fromField='translation_changed' fromNode='DECLpoint_G1_node' toField='set_startpoint' toNode='DECLx3dconnector_connector1_S1'/>
    <ROUTE fromField='translation_changed' fromNode='DECLpoint_G2_node' toField='set_endpoint' toNode='DECLx3dconnector_connector1_S1'/>
  </Scene>
</X3D>
