<!--
x3d.py package 4.0.64.4 loaded, have fun with X3D Graphics!
-->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta content='arc2.x3d' name='title'/>
    <meta content='Lost, Doug Sanden I think' name='creator'/>
    <meta content='manual' name='generator'/>
    <meta content='https://coderextreme.net/X3DJSONLD/src/main/data/arc1.x3d' name='identifier'/>
    <meta content='a generic proto to connect two objects' name='description'/>
    <meta content='22 June 2023' name='translated'/>
    <meta content='X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html' name='generator'/>
    <meta content='X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding' name='reference'/>
  </head>
  <Scene>
    <Viewpoint description='Only Viewpoint' position='0 0 5'/>
    <Background skyColor='0.4 0.4 0.4'/>
    <Transform DEF='G1'>
      <Transform DEF='DECLpoint_INSTANCE_node'>
        <Shape>
          <Appearance>
            <Material diffuseColor='1 0 0'/>
          </Appearance>
          <Sphere radius='0.1'/>
        </Shape>
        <PositionInterpolator DEF='DECLpoint_INSTANCE_PI1' key='0.0 1.0' keyValue='0 0 0 0 5 0'/>
        <Script DEF='DECLpoint_INSTANCE_MB1'>
          <field accessType='inputOutput' name='translation' type='SFVec3f' value='0 0 0'/>
          <field accessType='inputOutput' name='old' type='SFVec3f' value='0 0 0'/>
          <field accessType='inputOnly' name='set_location' type='SFTime'/>
          <field accessType='inputOutput' name='keyValue' type='MFVec3f' value='0 0 0 0 5 0'/>
        <![CDATA[['', '', '', 'ecmascript:', '               function set_location(value) {', '                    old = translation;', '                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);', '                    keyValue = new MFVec3f(old, translation);', '               }', '', '', '']]]>
        </Script>
        <TimeSensor DEF='DECLpoint_INSTANCE_CL1' cycleInterval='3' loop='true'/>
        <ROUTE fromField='cycleTime' fromNode='DECLpoint_INSTANCE_CL1' toField='set_location' toNode='DECLpoint_INSTANCE_MB1'/>
        <ROUTE fromField='fraction_changed' fromNode='DECLpoint_INSTANCE_CL1' toField='set_fraction' toNode='DECLpoint_INSTANCE_PI1'/>
        <ROUTE fromField='keyValue' fromNode='DECLpoint_INSTANCE_MB1' toField='keyValue' toNode='DECLpoint_INSTANCE_PI1'/>
        <ROUTE fromField='value_changed' fromNode='DECLpoint_INSTANCE_PI1' toField='set_translation' toNode='DECLpoint_INSTANCE_node'/>
        <ROUTE fromField='translation_changed' fromNode='DECLpoint_INSTANCE_MB1' toField='set_translation' toNode='DECLpoint_INSTANCE_node'/>
      </Transform>
    </Transform>
    <Transform DEF='G2'>
      <Transform DEF='DECLpoint_INSTANCE1000_node'>
        <Shape>
          <Appearance>
            <Material diffuseColor='1 0 0'/>
          </Appearance>
          <Sphere radius='0.1'/>
        </Shape>
        <PositionInterpolator DEF='DECLpoint_INSTANCE1000_PI1' key='0.0 1.0' keyValue='0 0 0 0 5 0'/>
        <Script DEF='DECLpoint_INSTANCE1000_MB1'>
          <field accessType='inputOutput' name='translation' type='SFVec3f' value='0 0 0'/>
          <field accessType='inputOutput' name='old' type='SFVec3f' value='0 0 0'/>
          <field accessType='inputOnly' name='set_location' type='SFTime'/>
          <field accessType='inputOutput' name='keyValue' type='MFVec3f' value='0 0 0 0 5 0'/>
        <![CDATA[['', '', '', 'ecmascript:', '               function set_location(value) {', '                    old = translation;', '                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);', '                    keyValue = new MFVec3f(old, translation);', '               }', '', '', '']]]>
        </Script>
        <TimeSensor DEF='DECLpoint_INSTANCE1000_CL1' cycleInterval='3' loop='true'/>
        <ROUTE fromField='cycleTime' fromNode='DECLpoint_INSTANCE1000_CL1' toField='set_location' toNode='DECLpoint_INSTANCE1000_MB1'/>
        <ROUTE fromField='fraction_changed' fromNode='DECLpoint_INSTANCE1000_CL1' toField='set_fraction' toNode='DECLpoint_INSTANCE1000_PI1'/>
        <ROUTE fromField='keyValue' fromNode='DECLpoint_INSTANCE1000_MB1' toField='keyValue' toNode='DECLpoint_INSTANCE1000_PI1'/>
        <ROUTE fromField='value_changed' fromNode='DECLpoint_INSTANCE1000_PI1' toField='set_translation' toNode='DECLpoint_INSTANCE1000_node'/>
        <ROUTE fromField='translation_changed' fromNode='DECLpoint_INSTANCE1000_MB1' toField='set_translation' toNode='DECLpoint_INSTANCE1000_node'/>
      </Transform>
    </Transform>
    <Transform DEF='transC1'>
      <Transform DEF='rotscaleC1'>
        <Shape>
          <Appearance>
            <Material diffuseColor='0.2 0.7 0.7' transparency='0.5'/>
          </Appearance>
          <Cylinder radius='0.05'/>
        </Shape>
      </Transform>
    </Transform>
    <Script DEF='DECLx3dconnector_connector1_S1'>
      <field accessType='initializeOnly' name='startnode' type='SFNode'>
        <Transform USE='G1'/>
      </field>
      <field accessType='initializeOnly' name='endnode' type='SFNode'>
        <Transform USE='G2'/>
      </field>
      <field accessType='initializeOnly' name='transC1' type='SFNode'>
        <Transform USE='transC1'/>
      </field>
      <field accessType='initializeOnly' name='rotscaleC1' type='SFNode'>
        <Transform USE='rotscaleC1'/>
      </field>
      <field accessType='inputOnly' name='set_startpoint' type='SFVec3f'/>
      <field accessType='inputOnly' name='set_endpoint' type='SFVec3f'/>
    <![CDATA[['', '', '            ecmascript:', '        function recompute(startpoint,endpoint){', "	    if (typeof endpoint === 'undefined') {", '		return;', '	    }', '            var dif = endpoint.subtract(startpoint);', '            var dist = dif.length()*0.5;', '            var dif2 = dif.multiply(0.5);', '            var norm = dif.normalize();', '            var transl = startpoint.add(dif2);', "	    if (typeof Quaternion !== 'undefined') {", '		    return {', '			    scale : new SFVec3f(1.0,dist,1.0),', '			    translation : transl,', '			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)', '		    };', '	    } else {', '		    return {', '			    scale : new SFVec3f(1.0,dist,1.0),', '			    translation : transl,', '			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)', '		    };', '	    }', '	}', '	function recompute_and_route(startpoint, endpoint) {', '	      var trafo = recompute(startpoint, endpoint);', '	      transC1.translation = trafo.translation;', '	      rotscaleC1.rotation = trafo.rotation;', '	      rotscaleC1.scale = trafo.scale;', '	}', '        function initialize(){', '            recompute_and_route(startnode.translation,endnode.translation);', '        }', '        function set_startpoint(val,t){', '            recompute_and_route(val,endnode.translation);', '        }', '        function set_endpoint(val,t){', '            recompute_and_route(startnode.translation,val);', '        }', '', '', '']]]>
    </Script>
    <ROUTE fromField='translation_changed' fromNode='G1' toField='set_startpoint' toNode='DECLx3dconnector_connector1_S1'/>
    <ROUTE fromField='translation_changed' fromNode='G2' toField='set_endpoint' toNode='DECLx3dconnector_connector1_S1'/>
  </Scene>
</X3D>

