{
  "X3D": {
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-3.3.xsd",
    "head": {
      "component": [
        {
          "@name": "Shaders",
          "@level": 1
        },
        {
          "@name": "CubeMapTexturing",
          "@level": 1
        }
      ],
      "meta": [
        {
          "@name": "title",
          "@content": "flowers7.x3d"
        },
        {
          "@name": "creator",
          "@content": "John Carlson"
        },
        {
          "@name": "generator",
          "@content": "manual"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/flowers7.x3d"
        },
        {
          "@name": "description",
          "@content": "a flower"
        },
        {
          "@name": "translated",
          "@content": "6 March 2018"
        },
        {
          "@name": "generator",
          "@content": "DOM2JSONSerializer.js, https://github.com/coderextreme/X3DJSONLD/blob/master/src/main/node/DOM2JSONSerializer.js"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "NavigationInfo": {}
        },
        {
          "#comment": "Images courtesy of Paul Debevec's Light Probe Image Gallery"
        },
        {
          "Background": {
            "@DEF": "background",
            "@backUrl": [
              "../resources/images/all_probes/beach_cross/beach_back.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_back.png"
            ],
            "@bottomUrl": [
              "../resources/images/all_probes/beach_cross/beach_bottom.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_bottom.png"
            ],
            "@frontUrl": [
              "../resources/images/all_probes/beach_cross/beach_front.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_front.png"
            ],
            "@leftUrl": [
              "../resources/images/all_probes/beach_cross/beach_left.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_left.png"
            ],
            "@rightUrl": [
              "../resources/images/all_probes/beach_cross/beach_right.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_right.png"
            ],
            "@topUrl": [
              "../resources/images/all_probes/beach_cross/beach_top.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_top.png"
            ]
          }
        },
        {
          "Viewpoint": {
            "@position": [
              0,
              0,
              40
            ],
            "@description": "Transparent rose"
          }
        },
        {
          "Transform": {
            "@DEF": "Rose01",
            "-children": [
              {
                "Shape": {
                  "-appearance": {
                    "Appearance": {
                      "-material": {
                        "Material": {
                          "@diffuseColor": [
                            0.7,
                            0.7,
                            0.7
                          ],
                          "@specularColor": [
                            0.5,
                            0.5,
                            0.5
                          ]
                        }
                      },
                      "-texture": {
                        "ComposedCubeMapTexture": {
                          "@DEF": "texture",
                          "-back": {
                            "ImageTexture": {
                              "@DEF": "backShader",
                              "@url": [
                                "../resources/images/all_probes/beach_cross/beach_back.png",
                                "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_back.png"
                              ]
                            }
                          },
                          "-bottom": {
                            "ImageTexture": {
                              "@DEF": "bottomShader",
                              "@url": [
                                "../resources/images/all_probes/beach_cross/beach_bottom.png",
                                "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_bottom.png"
                              ]
                            }
                          },
                          "-front": {
                            "ImageTexture": {
                              "@DEF": "frontShader",
                              "@url": [
                                "../resources/images/all_probes/beach_cross/beach_front.png",
                                "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_front.png"
                              ]
                            }
                          },
                          "-left": {
                            "ImageTexture": {
                              "@DEF": "leftShader",
                              "@url": [
                                "../resources/images/all_probes/beach_cross/beach_left.png",
                                "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_left.png"
                              ]
                            }
                          },
                          "-right": {
                            "ImageTexture": {
                              "@DEF": "rightShader",
                              "@url": [
                                "../resources/images/all_probes/beach_cross/beach_right.png",
                                "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_right.png"
                              ]
                            }
                          },
                          "-top": {
                            "ImageTexture": {
                              "@DEF": "topShader",
                              "@url": [
                                "../resources/images/all_probes/beach_cross/beach_top.png",
                                "https://coderextreme.net/X3DJSONLD/images/all_probes/beach_cross/beach_top.png"
                              ]
                            }
                          }
                        }
                      },
                      "-shaders": [
                        {
                          "ComposedShader": {
                            "@DEF": "x3dom",
                            "@language": "GLSL",
                            "field": [
                              {
                                "@name": "cube",
                                "@type": "SFInt32",
                                "@accessType": "inputOutput",
                                "@value": 0
                              },
                              {
                                "@name": "chromaticDispertion",
                                "@accessType": "initializeOnly",
                                "@type": "SFVec3f",
                                "@value": [
                                  0.98,
                                  1,
                                  1.033
                                ]
                              },
                              {
                                "@name": "bias",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 0.5
                              },
                              {
                                "@name": "scale",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 0.5
                              },
                              {
                                "@name": "power",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 2
                              },
                              {
                                "@name": "a",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 10
                              },
                              {
                                "@name": "b",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 1
                              },
                              {
                                "@name": "c",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 20
                              },
                              {
                                "@name": "d",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 20
                              },
                              {
                                "@name": "tdelta",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 0
                              },
                              {
                                "@name": "pdelta",
                                "@type": "SFFloat",
                                "@accessType": "inputOutput",
                                "@value": 0
                              }
                            ],
                            "-children": [
                              {
                                "#comment": "field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field"
                              }
                            ],
                            "-parts": [
                              {
                                "ShaderPart": {
                                  "@url": [
                                    "../shaders/x3dom_flowers_chromatic.vs",
                                    "https://coderextreme.net/X3DJSONLD/src/main/shaders/x3dom_flowers_chromatic.vs"
                                  ],
                                  "@type": "VERTEX"
                                }
                              },
                              {
                                "ShaderPart": {
                                  "@url": [
                                    "../shaders/pc_bubbles.fs",
                                    "https://coderextreme.net/X3DJSONLD/src/main/shaders/common.fs"
                                  ],
                                  "@type": "FRAGMENT"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "ComposedShader": {
                            "@DEF": "x_ite",
                            "@language": "GLSL",
                            "field": [
                              {
                                "@name": "cube",
                                "@type": "SFNode",
                                "@accessType": "inputOutput",
                                "-children": [
                                  {
                                    "ComposedCubeMapTexture": {
                                      "@USE": "texture"
                                    }
                                  }
                                ]
                              },
                              {
                                "@name": "chromaticDispertion",
                                "@accessType": "initializeOnly",
                                "@type": "SFVec3f",
                                "@value": [
                                  0.98,
                                  1,
                                  1.033
                                ]
                              },
                              {
                                "@name": "bias",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 0.5
                              },
                              {
                                "@name": "scale",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 0.5
                              },
                              {
                                "@name": "power",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 2
                              },
                              {
                                "@name": "a",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 10
                              },
                              {
                                "@name": "b",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 1
                              },
                              {
                                "@name": "c",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 20
                              },
                              {
                                "@name": "d",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 20
                              },
                              {
                                "@name": "tdelta",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 0
                              },
                              {
                                "@name": "pdelta",
                                "@type": "SFFloat",
                                "@accessType": "inputOnly",
                                "@value": 0
                              }
                            ],
                            "-parts": [
                              {
                                "ShaderPart": {
                                  "@url": [
                                    "../shaders/x_ite_flowers_chromatic.vs",
                                    "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite_flowers_chromatic.vs"
                                  ],
                                  "@type": "VERTEX"
                                }
                              },
                              {
                                "ShaderPart": {
                                  "@url": [
                                    "../shaders/common.fs",
                                    "https://coderextreme.net/X3DJSONLD/src/main/shaders/common.fs"
                                  ],
                                  "@type": "FRAGMENT"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "-geometry": {
                    "Sphere": {
                      "@solid": true
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "Script": {
            "@DEF": "UrlSelector",
            "@directOutput": true,
            "field": [
              {
                "@name": "frontUrls",
                "@type": "MFString",
                "@accessType": "initializeOnly",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_front.png",
                  "../resources/images/all_probes/building_cross/building_front.png",
                  "../resources/images/all_probes/campus_cross/campus_front.png",
                  "../resources/images/all_probes/galileo_cross/galileo_front.png",
                  "../resources/images/all_probes/grace_cross/grace_front.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_front.png",
                  "../resources/images/all_probes/rnl_cross/rnl_front.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_front.png"
                ]
              },
              {
                "@name": "backUrls",
                "@type": "MFString",
                "@accessType": "initializeOnly",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_back.png",
                  "../resources/images/all_probes/building_cross/building_back.png",
                  "../resources/images/all_probes/campus_cross/campus_back.png",
                  "../resources/images/all_probes/galileo_cross/galileo_back.png",
                  "../resources/images/all_probes/grace_cross/grace_back.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_back.png",
                  "../resources/images/all_probes/rnl_cross/rnl_back.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_back.png"
                ]
              },
              {
                "@name": "leftUrls",
                "@type": "MFString",
                "@accessType": "initializeOnly",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_left.png",
                  "../resources/images/all_probes/building_cross/building_left.png",
                  "../resources/images/all_probes/campus_cross/campus_left.png",
                  "../resources/images/all_probes/galileo_cross/galileo_left.png",
                  "../resources/images/all_probes/grace_cross/grace_left.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_left.png",
                  "../resources/images/all_probes/rnl_cross/rnl_left.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_left.png"
                ]
              },
              {
                "@name": "rightUrls",
                "@type": "MFString",
                "@accessType": "initializeOnly",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_right.png",
                  "../resources/images/all_probes/building_cross/building_right.png",
                  "../resources/images/all_probes/campus_cross/campus_right.png",
                  "../resources/images/all_probes/galileo_cross/galileo_right.png",
                  "../resources/images/all_probes/grace_cross/grace_right.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_right.png",
                  "../resources/images/all_probes/rnl_cross/rnl_right.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_right.png"
                ]
              },
              {
                "@name": "topUrls",
                "@type": "MFString",
                "@accessType": "initializeOnly",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_top.png",
                  "../resources/images/all_probes/building_cross/building_top.png",
                  "../resources/images/all_probes/campus_cross/campus_top.png",
                  "../resources/images/all_probes/galileo_cross/galileo_top.png",
                  "../resources/images/all_probes/grace_cross/grace_top.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_top.png",
                  "../resources/images/all_probes/rnl_cross/rnl_top.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_top.png"
                ]
              },
              {
                "@name": "bottomUrls",
                "@type": "MFString",
                "@accessType": "initializeOnly",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_bottom.png",
                  "../resources/images/all_probes/building_cross/building_bottom.png",
                  "../resources/images/all_probes/campus_cross/campus_bottom.png",
                  "../resources/images/all_probes/galileo_cross/galileo_bottom.png",
                  "../resources/images/all_probes/grace_cross/grace_bottom.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_bottom.png",
                  "../resources/images/all_probes/rnl_cross/rnl_bottom.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_bottom.png"
                ]
              },
              {
                "@name": "front",
                "@type": "MFString",
                "@accessType": "inputOutput"
              },
              {
                "@name": "back",
                "@type": "MFString",
                "@accessType": "inputOutput"
              },
              {
                "@name": "left",
                "@type": "MFString",
                "@accessType": "inputOutput"
              },
              {
                "@name": "right",
                "@type": "MFString",
                "@accessType": "inputOutput"
              },
              {
                "@name": "top",
                "@type": "MFString",
                "@accessType": "inputOutput"
              },
              {
                "@name": "bottom",
                "@type": "MFString",
                "@accessType": "inputOutput"
              },
              {
                "@name": "set_fraction",
                "@type": "SFFloat",
                "@accessType": "inputOnly"
              },
              {
                "@name": "old",
                "@type": "SFInt32",
                "@accessType": "inputOutput",
                "@value": -1
              }
            ],
            "#sourceText": [
              "ecmascript: function set_fraction( f, tm ) { var side = Math.floor(f*frontUrls.length); if (side > frontUrls.length-1) { side = 0; } if (side != old) { old = side; front[0] = frontUrls[side]; back[0] = backUrls[side]; left[0] = leftUrls[side]; right[0] = rightUrls[side]; top[0] = topUrls[side]; bottom[0] = bottomUrls[side]; } }",
              ""
            ]
          }
        },
        {
          "#comment": "<TimeSensor DEF=\"Clock\"cycleInterval=\"45\"loop='true'/> <ROUTE fromNode='Clock' fromField='fraction_changed' toNode='UrlSelector' toField='set_fraction'/> <ROUTE fromNode='UrlSelector' fromField='front' toNode='background' toField='frontUrl'/> <ROUTE fromNode='UrlSelector' fromField='back' toNode='background' toField='backUrl'/> <ROUTE fromNode='UrlSelector' fromField='left' toNode='background' toField='leftUrl'/> <ROUTE fromNode='UrlSelector' fromField='right' toNode='background' toField='rightUrl'/> <ROUTE fromNode='UrlSelector' fromField='top' toNode='background' toField='topUrl'/> <ROUTE fromNode='UrlSelector' fromField='bottom' toNode='background' toField='bottomUrl'/> <ROUTE fromNode='UrlSelector' fromField='front' toNode='frontShader' toField='url'/> <ROUTE fromNode='UrlSelector' fromField='back' toNode='backShader' toField='url'/> <ROUTE fromNode='UrlSelector' fromField='left' toNode='leftShader' toField='url'/> <ROUTE fromNode='UrlSelector' fromField='right' toNode='rightShader' toField='url'/> <ROUTE fromNode='UrlSelector' fromField='top' toNode='topShader' toField='url'/> <ROUTE fromNode='UrlSelector' fromField='bottom' toNode='bottomShader' toField='url'/>"
        },
        {
          "Script": {
            "@DEF": "Animate",
            "@directOutput": true,
            "field": [
              {
                "@name": "set_fraction",
                "@type": "SFFloat",
                "@accessType": "inputOnly"
              },
              {
                "@name": "a",
                "@type": "SFFloat",
                "@accessType": "inputOutput",
                "@value": 10
              },
              {
                "@name": "b",
                "@type": "SFFloat",
                "@accessType": "inputOutput",
                "@value": 1
              },
              {
                "@name": "c",
                "@type": "SFFloat",
                "@accessType": "inputOutput",
                "@value": 20
              },
              {
                "@name": "d",
                "@type": "SFFloat",
                "@accessType": "inputOutput",
                "@value": 20
              },
              {
                "@name": "tdelta",
                "@type": "SFFloat",
                "@accessType": "inputOutput",
                "@value": 0
              },
              {
                "@name": "pdelta",
                "@type": "SFFloat",
                "@accessType": "inputOutput",
                "@value": 0
              }
            ],
            "#sourceText": [
              "ecmascript: function set_fraction() { var choice = Math.floor(Math.random() * 4); if (choice == 0) { a = a + Math.floor(Math.random() * 2) * 2 - 1; } else if (choice == 1) { b = b + Math.floor(Math.random() * 2) * 2 - 1; } else if (choice == 2) { c = c + Math.floor(Math.random() * 2) * 2 - 1; } else if (choice == 3) { d = d + Math.floor(Math.random() * 2) * 2 - 1; } tdelta = tdelta + 0.5; pdelta = pdelta + 0.5; if (a < 1) { a = 10; } if (b < 1) { b = 10; } if (c < 1) { c = 4; } if (c > 20) { c = 4; } if (d < 1) { d = 4; } if (d > 20) { d = 4; } }",
              ""
            ]
          }
        },
        {
          "TimeSensor": {
            "@DEF": "TourTime",
            "@cycleInterval": 5,
            "@loop": true
          }
        }
      ],
      "ROUTE": [
        {
          "@fromNode": "TourTime",
          "@fromField": "fraction_changed",
          "@toNode": "Animate",
          "@toField": "set_fraction"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "a",
          "@toNode": "x_ite",
          "@toField": "a"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "b",
          "@toNode": "x_ite",
          "@toField": "b"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "c",
          "@toNode": "x_ite",
          "@toField": "c"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "d",
          "@toNode": "x_ite",
          "@toField": "d"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "pdelta",
          "@toNode": "x_ite",
          "@toField": "pdelta"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "tdelta",
          "@toNode": "x_ite",
          "@toField": "tdelta"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "a",
          "@toNode": "x3dom",
          "@toField": "a"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "b",
          "@toNode": "x3dom",
          "@toField": "b"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "c",
          "@toNode": "x3dom",
          "@toField": "c"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "d",
          "@toNode": "x3dom",
          "@toField": "d"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "pdelta",
          "@toNode": "x3dom",
          "@toField": "pdelta"
        },
        {
          "@fromNode": "Animate",
          "@fromField": "tdelta",
          "@toNode": "x3dom",
          "@toField": "tdelta"
        }
      ]
    },
    "encoding": "UTF-8",
    "JSON schema": "http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json"
  }
}