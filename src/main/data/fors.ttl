@prefix : <https://coderextreme.net/X3DJSONLD/force.ttl#> .
@prefix dc: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix x3d: <https://www.web3d.org/semantics/ontologies/X3dOntology4.0#> .

:Scene rdf:type owl:NamedIndividual, x3d:Scene .
:ProtoDeclare_2 rdf:type owl:NamedIndividual, x3d:ProtoDeclare ;
  x3d:name "node" .
:ProtoInterface_2_1 rdf:type owl:NamedIndividual, x3d:ProtoInterface .
:field_2_1_1 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "position" ;
  x3d:accessType "inputOutput" ;
  x3d:type "SFVec3f" ;
  x3d:value "0 0 0" .
:ProtoBody_2_1 rdf:type owl:NamedIndividual, x3d:ProtoBody .
:transform rdf:type owl:NamedIndividual, x3d:Transform .
:transform x3d:hasIS :IS_2_1_2_1 .
:IS_2_1_2_1 rdf:type owl:NamedIndividual, x3d:IS .
:connect_2_1_2_1_1 rdf:type owl:NamedIndividual, x3d:connect ;
  x3d:nodeField "translation" ;
  x3d:protoField "position" .
:transform x3d:hasShape :Shape_2_1_2_1 .
:Shape_2_1_2_1 rdf:type owl:NamedIndividual, x3d:Shape .
:Sphere_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:Sphere .
:Appearance_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:Appearance .
:Material_2_1_2_1_2_2 rdf:type owl:NamedIndividual, x3d:Material ;
  x3d:diffuseColor "1 0 0" .
:transform x3d:hasTransform :Transform_2_1_2_1 .
:Transform_2_1_2_1 rdf:type owl:NamedIndividual, x3d:Transform ;
  x3d:translation "1 0 0" .
:Shape_2_1_2_1_3 rdf:type owl:NamedIndividual, x3d:Shape .
:Text_2_1_2_1_3_1 rdf:type owl:NamedIndividual, x3d:Text ;
  x3d:string "Node" .
:FontStyle_2_1_2_1_3_1_1 rdf:type owl:NamedIndividual, x3d:FontStyle ;
  x3d:justify "MIDDLE MIDDLE" ;
  x3d:size "5" .
:Appearance_2_1_2_1_3_1 rdf:type owl:NamedIndividual, x3d:Appearance .
:Material_2_1_2_1_3_1_2 rdf:type owl:NamedIndividual, x3d:Material ;
  x3d:diffuseColor "0 0 1" .
:NodePosition rdf:type owl:NamedIndividual, x3d:PositionInterpolator ;
  x3d:key "0 1" ;
  x3d:keyValue "0 0 0 0 5 0" .
:MoveBall rdf:type owl:NamedIndividual, x3d:Script .

                    :MoveBall x3d:hasfield :field_2_1_2_3 .
:field_2_1_2_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "translation" ;
  x3d:accessType "inputOutput" ;
  x3d:type "SFVec3f" ;
  x3d:value "50 50 0" .

                    :MoveBall x3d:hasfield :field_2_1_2_3 .
:field_2_1_2_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "old" ;
  x3d:accessType "inputOutput" ;
  x3d:type "SFVec3f" ;
  x3d:value "0 0 0" .

                    :MoveBall x3d:hasfield :field_2_1_2_3 .
:field_2_1_2_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "set_cycle" ;
  x3d:accessType "inputOnly" ;
  x3d:type "SFTime" .

                    :MoveBall x3d:hasfield :field_2_1_2_3 .
:field_2_1_2_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "keyValue" ;
  x3d:accessType "outputOnly" ;
  x3d:type "MFVec3f" .


ecmascript:
					function set_cycle(value) {
                                                old = translation;
						translation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);
                                                keyValue = new MFVec3f([old, translation]);
						// Browser.println(translation);
					}

                :nodeClock rdf:type owl:NamedIndividual, x3d:TimeSensor ;
  x3d:cycleInterval "3" ;
  x3d:loop "true" .
:ROUTE_2_1_2 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "nodeClock" ;
  x3d:fromField "cycleTime" ;
  x3d:toNode "MoveBall" ;
  x3d:toField "set_cycle" .
:ROUTE_2_1_2 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "nodeClock" ;
  x3d:fromField "fraction_changed" ;
  x3d:toNode "NodePosition" ;
  x3d:toField "set_fraction" .
:ROUTE_2_1_2 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "MoveBall" ;
  x3d:fromField "keyValue" ;
  x3d:toNode "NodePosition" ;
  x3d:toField "keyValue" .
:ROUTE_2_1_2 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "NodePosition" ;
  x3d:fromField "value_changed" ;
  x3d:toNode "transform" ;
  x3d:toField "set_translation" .
:ProtoDeclare_2 rdf:type owl:NamedIndividual, x3d:ProtoDeclare ;
  x3d:name "cylinder" .
:ProtoInterface_2_2 rdf:type owl:NamedIndividual, x3d:ProtoInterface .
:field_2_2_1 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "set_positionA" ;
  x3d:accessType "inputOnly" ;
  x3d:type "SFVec3f" .
:field_2_2_1 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "set_positionB" ;
  x3d:accessType "inputOnly" ;
  x3d:type "SFVec3f" .
:ProtoBody_2_2 rdf:type owl:NamedIndividual, x3d:ProtoBody .
:Shape_2_2_2 rdf:type owl:NamedIndividual, x3d:Shape .
:extrusion rdf:type owl:NamedIndividual, x3d:Extrusion ;
  x3d:creaseAngle "0.785" ;
  x3d:crossSection "1.00 0.00 0.92 -0.38 0.71 -0.71 0.38 -0.92 0.00 -1.00 -0.38 -0.92 -0.71 -0.71 -0.92 -0.38 -1.00 -0.00 -0.92 0.38 -0.71 0.71 -0.38 0.92 0.00 1.00 0.38 0.92 0.71 0.71 0.92 0.38 1.00 0.00" ;
  x3d:spine "0 -50 0 0 50 0" .
:Appearance_2_2_2_1 rdf:type owl:NamedIndividual, x3d:Appearance .
:Material_2_2_2_1_2 rdf:type owl:NamedIndividual, x3d:Material ;
  x3d:diffuseColor "0 1 0" .
:MoveCylinder rdf:type owl:NamedIndividual, x3d:Script .

                    :MoveCylinder x3d:hasfield :field_2_2_2_2 .
:field_2_2_2_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "spine" ;
  x3d:accessType "inputOutput" ;
  x3d:type "MFVec3f" ;
  x3d:value "0 -50 0 0 50 0" .

                    :MoveCylinder x3d:hasfield :field_2_2_2_2 .
:field_2_2_2_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "set_endA" ;
  x3d:accessType "inputOnly" ;
  x3d:type "SFVec3f" .

                    :MoveCylinder x3d:hasfield :field_2_2_2_2 .
:field_2_2_2_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "set_endB" ;
  x3d:accessType "inputOnly" ;
  x3d:type "SFVec3f" .

                    :MoveCylinder x3d:hasIS :IS_2_2_2_2 .
:IS_2_2_2_2 rdf:type owl:NamedIndividual, x3d:IS .
:connect_2_2_2_2_4 rdf:type owl:NamedIndividual, x3d:connect ;
  x3d:nodeField "set_endA" ;
  x3d:protoField "set_positionA" .
:connect_2_2_2_2_4 rdf:type owl:NamedIndividual, x3d:connect ;
  x3d:nodeField "set_endB" ;
  x3d:protoField "set_positionB" .


ecmascript:

                function set_endA(value) {
		    if (typeof spine === 'undefined') {
		        spine = new MFVec3f([value, value]);
		    } else {
		        spine = new MFVec3f([value, spine[1]]);
		    }
                }
                
                function set_endB(value) {
		    if (typeof spine === 'undefined') {
		        spine = new MFVec3f([value, value]);
		    } else {
		        spine = new MFVec3f([spine[0], value]);
		    }
                }
                
                function set_spine(value) {
                    spine = value;
                }

                :ROUTE_2_2_2 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "MoveCylinder" ;
  x3d:fromField "spine" ;
  x3d:toNode "extrusion" ;
  x3d:toField "set_spine" .
:HoldsContent rdf:type owl:NamedIndividual, x3d:Transform ;
  x3d:scale "0.1 0.1 0.1" .
:HoldsContent x3d:hasPlaneSensor :clickGenerator .
:clickGenerator rdf:type owl:NamedIndividual, x3d:PlaneSensor ;
  x3d:minPosition "-50 -50" ;
  x3d:maxPosition "50 50" ;
  x3d:description "click on background to add nodes, click on nodes to add links" .
:HoldsContent x3d:hasProtoInstance :nodeA .
:nodeA rdf:type owl:NamedIndividual, x3d:ProtoInstance ;
  x3d:name "node" .
:nodeA x3d:hasfieldValue :fieldValue_2_3_2 .
:fieldValue_2_3_2 rdf:type owl:NamedIndividual, x3d:fieldValue ;
  x3d:name "position" ;
  x3d:value "0.0 0.0 0.0" .
:HoldsContent x3d:hasProtoInstance :nodeB .
:nodeB rdf:type owl:NamedIndividual, x3d:ProtoInstance ;
  x3d:name "node" .
:nodeB x3d:hasfieldValue :fieldValue_2_3_3 .
:fieldValue_2_3_3 rdf:type owl:NamedIndividual, x3d:fieldValue ;
  x3d:name "position" ;
  x3d:value "50.0 50.0 50.0" .
:HoldsContent x3d:hasProtoInstance :linkA .
:linkA rdf:type owl:NamedIndividual, x3d:ProtoInstance ;
  x3d:name "cylinder" .
:linkA x3d:hasfieldValue :fieldValue_2_3_4 .
:fieldValue_2_3_4 rdf:type owl:NamedIndividual, x3d:fieldValue ;
  x3d:name "set_positionA" ;
  x3d:value "0 0 0" .
:linkA x3d:hasfieldValue :fieldValue_2_3_4 .
:fieldValue_2_3_4 rdf:type owl:NamedIndividual, x3d:fieldValue ;
  x3d:name "set_positionB" ;
  x3d:value "50 50 50" .
:ROUTE_2 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "nodeA" ;
  x3d:fromField "position" ;
  x3d:toNode "linkA" ;
  x3d:toField "set_positionA" .
:ROUTE_2 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "nodeB" ;
  x3d:fromField "position" ;
  x3d:toNode "linkA" ;
  x3d:toField "set_positionB" .
