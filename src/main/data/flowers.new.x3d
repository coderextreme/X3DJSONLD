<!--
x3d.py package 4.0.64.4 loaded, have fun with X3D Graphics!
-->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "https://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D profile='Immersive' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='Scripting'/>
    <component name='Shaders'/>
    <component name='CubeMapTexturing'/>
    <component name='Texturing'/>
    <component name='Rendering'/>
    <component level='4' name='Shape'/>
    <component level='3' name='Grouping'/>
    <meta content='flowers.x3d' name='title'/>
    <meta content='John Carlson' name='creator'/>
    <meta content='5 or more prismatic flowers' name='description'/>
    <meta content='X3D-Edit, https://savage.nps.edu/X3D-Edit' name='generator'/>
    <meta content='https://coderextreme.net/X3DJSONLD/flowers.x3d' name='identifier'/>
    <meta content='29 June 2023' name='translated'/>
    <meta content='X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html' name='generator'/>
    <meta content='X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding' name='reference'/>
  </head>
  <Scene>
    <NavigationInfo/>
    <!--  Images courtesy of Paul Debevec's Light Probe Image Gallery  -->
    <Background backUrl='"../resources/images/all_probes/stpeters_cross/stpeters_back.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"' bottomUrl='"../resources/images/all_probes/stpeters_cross/stpeters_bottom.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"' frontUrl='"../resources/images/all_probes/stpeters_cross/stpeters_front.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"' leftUrl='"../resources/images/all_probes/stpeters_cross/stpeters_left.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"' rightUrl='"../resources/images/all_probes/stpeters_cross/stpeters_right.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"' topUrl='"../resources/images/all_probes/stpeters_cross/stpeters_top.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"'/>
    <ProtoDeclare name='flower'>
      <ProtoBody>
        <Transform DEF='animate_transform'>
          <Shape>
            <Appearance>
              <Material diffuseColor='0.7 0.7 0.7' specularColor='0.5 0.5 0.5'/>
              <ComposedCubeMapTexture DEF='texture'>
                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_back.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"'/>
                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_bottom.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"'/>
                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_front.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"'/>
                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_left.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"'/>
                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_right.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"'/>
                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_top.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"'/>
              </ComposedCubeMapTexture>
              <ComposedShader DEF='x3dom' language='GLSL'>
                <field accessType='inputOutput' name='cube' type='SFInt32'/>
                <field accessType='initializeOnly' name='chromaticDispertion' type='SFVec3f' value='0.98 1.0 1.033'/>
                <field accessType='inputOutput' name='bias' type='SFFloat' value='0.5'/>
                <field accessType='inputOutput' name='scale' type='SFFloat' value='0.5'/>
                <field accessType='inputOutput' name='power' type='SFFloat' value='2'/>
                <field accessType='inputOutput' name='a' type='SFFloat' value='10'/>
                <field accessType='inputOutput' name='b' type='SFFloat' value='1'/>
                <field accessType='inputOutput' name='c' type='SFFloat' value='20'/>
                <field accessType='inputOutput' name='d' type='SFFloat' value='20'/>
                <field accessType='inputOutput' name='tdelta' type='SFFloat'/>
                <field accessType='inputOutput' name='pdelta' type='SFFloat'/>
                <ShaderPart url='"../shaders/x3dom_flowers_chromatic.vs" "https://coderextreme.net/X3DJSONLD/src/main/shaders/x3dom_flowers_chromatic.vs"'/>
                <ShaderPart type='FRAGMENT' url='"../shaders/common.fs" "https://coderextreme.net/X3DJSONLD/src/main/shaders/common.fs"'/>
              </ComposedShader>
              <ComposedShader DEF='x_ite' language='GLSL'>
                <field accessType='inputOutput' name='cube' type='SFNode'>
                  <ComposedCubeMapTexture USE='texture'/>
                </field>
                <field accessType='initializeOnly' name='chromaticDispertion' type='SFVec3f' value='0.98 1.0 1.033'/>
                <field accessType='inputOnly' name='bias' type='SFFloat' value='0.5'/>
                <field accessType='inputOnly' name='scale' type='SFFloat' value='0.5'/>
                <field accessType='inputOnly' name='power' type='SFFloat' value='2'/>
                <field accessType='inputOnly' name='a' type='SFFloat' value='10'/>
                <field accessType='inputOnly' name='b' type='SFFloat' value='1'/>
                <field accessType='inputOnly' name='c' type='SFFloat' value='20'/>
                <field accessType='inputOnly' name='d' type='SFFloat' value='20'/>
                <field accessType='inputOnly' name='tdelta' type='SFFloat'/>
                <field accessType='inputOnly' name='pdelta' type='SFFloat'/>
                <ShaderPart url='"../shaders/x_ite_flowers_chromatic.vs" "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite_flowers_chromatic.vs"'/>
                <ShaderPart type='FRAGMENT' url='"../shaders/x_ite.fs" "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.fs"'/>
              </ComposedShader>
            </Appearance>
            <Sphere/>
          </Shape>
        </Transform>
        <Script DEF='Animate'>
          <field accessType='inputOutput' name='translation' type='SFVec3f' value='0 0 0'/>
          <field accessType='inputOutput' name='velocity' type='SFVec3f' value='0 0 0'/>
          <field accessType='inputOnly' name='set_fraction' type='SFFloat'/>
          <field accessType='inputOutput' name='a' type='SFFloat' value='0.5'/>
          <field accessType='inputOutput' name='b' type='SFFloat' value='0.5'/>
          <field accessType='inputOutput' name='c' type='SFFloat' value='3'/>
          <field accessType='inputOutput' name='d' type='SFFloat' value='3'/>
          <field accessType='inputOutput' name='tdelta' type='SFFloat' value='0.5'/>
          <field accessType='inputOutput' name='pdelta' type='SFFloat' value='0.5'/>
        <![CDATA[['', '', 'ecmascript:', '', '			function initialize() {', '			    translation = new SFVec3f(0, 0, 0);', '			    velocity = new SFVec3f(', '			    	Math.random() - 0.5,', '				Math.random() - 0.5,', '				Math.random() - 0.5);', '			}', '			function set_fraction() {', '			    translation = new SFVec3f(', '			    	translation.x + velocity.x,', '				translation.y + velocity.y,', '				translation.z + velocity.z);', '			    for (var j = 0; j <= 2; j++) {', '				    if (Math.abs(translation.x) > 10) {', '					initialize();', '				    } else if (Math.abs(translation.y) > 10) {', '					initialize();', '				    } else if (Math.abs(translation.z) > 10) {', '					initialize();', '				    } else {', '					velocity.x += Math.random() * 0.2 - 0.1;', '					velocity.y += Math.random() * 0.2 - 0.1;', '					velocity.z += Math.random() * 0.2 - 0.1;', '				    }', '			    }', '			    animate_flowers();', '			}', '', '			function animate_flowers(fraction, eventTime) {', '				var choice = Math.floor(Math.random() * 4);', '				switch (choice) {', '				case 0:', '					a += Math.random() * 0.2 - 0.1;', '					break;', '				case 1:', '					b += Math.random() * 0.2 - 0.1;', '					break;', '				case 2:', '					c += Math.random() * 2 - 1;', '					break;', '				case 3:', '					d += Math.random() * 2 - 1;', '					break;', '				}', '				tdelta = tdelta + 0.5;', '				pdelta = pdelta + 0.5;', '				if (a > 1) {', '					a =  0.5;', '				}', '				if (b > 1) {', '					b =  0.5;', '				}', '				if (c < 1) {', '					c =  4;', '				}', '				if (d < 1) {', '					d =  4;', '				}', '				if (c > 10) {', '					c = 4;', '				}', '				if (d > 10) {', '					d = 4;', '				}', '			}', '', '']]]>
        </Script>
        <TimeSensor DEF='TourTime' cycleInterval='5' loop='true'/>
        <ROUTE fromField='fraction_changed' fromNode='TourTime' toField='set_fraction' toNode='Animate'/>
        <ROUTE fromField='translation_changed' fromNode='Animate' toField='set_translation' toNode='animate_transform'/>
        <ROUTE fromField='a' fromNode='Animate' toField='a' toNode='x_ite'/>
        <ROUTE fromField='b' fromNode='Animate' toField='b' toNode='x_ite'/>
        <ROUTE fromField='c' fromNode='Animate' toField='c' toNode='x_ite'/>
        <ROUTE fromField='d' fromNode='Animate' toField='d' toNode='x_ite'/>
        <ROUTE fromField='pdelta' fromNode='Animate' toField='pdelta' toNode='x_ite'/>
        <ROUTE fromField='tdelta' fromNode='Animate' toField='tdelta' toNode='x_ite'/>
        <ROUTE fromField='a' fromNode='Animate' toField='a' toNode='x3dom'/>
        <ROUTE fromField='b' fromNode='Animate' toField='b' toNode='x3dom'/>
        <ROUTE fromField='c' fromNode='Animate' toField='c' toNode='x3dom'/>
        <ROUTE fromField='d' fromNode='Animate' toField='d' toNode='x3dom'/>
        <ROUTE fromField='pdelta' fromNode='Animate' toField='pdelta' toNode='x3dom'/>
        <ROUTE fromField='tdelta' fromNode='Animate' toField='tdelta' toNode='x3dom'/>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoInstance name='flower'/>
    <ProtoInstance name='flower'/>
    <ProtoInstance name='flower'/>
  </Scene>
</X3D>

