<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Immersive" version="3.3" xsd:noNamespaceSchemaLocation="https://www.web3d.org/specifications/x3d-3.3.xsd" ><!--x3dVersionComparisonTest for this model: supportsX3dVersion(X3D.VERSION_3_0)=true--><head><!--comment #1--><!--comment #2--><!--comment #3--><!--comment #4--><component name="Navigation" level="3"></component>
<component name="Shaders" level="1"></component>
<component name="CADGeometry" level="2"></component>
<component name="DIS" level="2"></component>
<component name="H-Anim" level="1"></component>
<component name="Grouping" level="1"></component>
<component name="Layering" level="1"></component>
<unit name="AngleUnitConversion" category="angle" conversionFactor="1"></unit>
<unit name="LengthUnitConversion" category="length" conversionFactor="1"></unit>
<unit name="ForceFromPoundsToNewtons" category="force" conversionFactor="4.4482"></unit>
<meta name="title" content="HelloWorldProgramOutput.x3d"></meta>
<meta name="info" content="continued development and testing in progress"></meta>
<meta name="description" content="Example HelloWorldProgram creates an X3D model using the X3D Java Scene Access Interface Library (X3DJSAIL)"></meta>
<meta name="reference" content="https://www.web3d.org/specifications/java/X3DJSAIL.html"></meta>
<meta name="generator" content="HelloWorldProgramOutput.java"></meta>
<meta name="created" content="6 September 2016"></meta>
<meta name="modified" content="9 June 2020"></meta>
<meta name="generator" content="X3D Java Scene Access Interface Library (X3DJSAIL)"></meta>
<meta name="generator" content="https://www.web3d.org/specifications/java/examples/HelloWorldProgram.java"></meta>
<meta name="generator" content="Netbeans http://www.netbeans.org"></meta>
<meta name="creator" content="Don Brutzman"></meta>
<meta name="reference" content="https://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/stylesheets/java/examples/HelloWorldProgramOutput.x3d"></meta>
<meta name="reference" content="Console output, ClassicVRML encoding, VRML97 encoding and pretty-print documentation:"></meta>
<meta name="reference" content="HelloWorldProgramOutput.txt"></meta>
<meta name="reference" content="HelloWorldProgramOutput.x3dv"></meta>
<meta name="reference" content="HelloWorldProgramOutput.wrl"></meta>
<meta name="reference" content="HelloWorldProgramOutput.html"></meta>
<meta name="reference" content="https://savage.nps.edu/X3dValidator?url=https://www.web3d.org/specifications/java/examples/HelloWorldProgramOutput.x3d"></meta>
<meta name="identifier" content="https://www.web3d.org/specifications/java/examples/HelloWorldProgramOutput.x3d"></meta>
<meta name="license" content="../license.html"></meta>
</head>
<Scene><ViewpointGroup description="Available viewpoints"><Viewpoint DEF="DefaultView" description="Hello X3DJSAIL"></Viewpoint>
<Viewpoint DEF="TopDownView" description="top-down view from above" orientation="1 0 0 -1.570796" position="0 100 0"></Viewpoint>
</ViewpointGroup>
<NavigationInfo type="&quot;EXAMINE&quot; &quot;FLY&quot; &quot;ANY&quot;"></NavigationInfo>
<WorldInfo DEF="WorldInfoDEF" title="HelloWorldProgram produced by X3D Java SAI Library (X3DJSAIL)"></WorldInfo>
<WorldInfo USE="WorldInfoDEF"></WorldInfo>
<WorldInfo USE="WorldInfoDEF"></WorldInfo>
<MetadataString name="test" DEF="scene.addChildMetadata" value="&quot;Top-level root Metadata node beneath Scene needs to be one of '-children' in JSON encoding&quot;"></MetadataString>
<LayerSet DEF="scene.addChildLayerSetTest"></LayerSet>
<Transform DEF="LogoGeometryTransform" translation="0 1.5 0"><Anchor description="select for X3D Java SAI Library (X3DJSAIL) description" url="&quot;../X3DJSAIL.html&quot; &quot;https://www.web3d.org/specifications/java/X3DJSAIL.html&quot;"><Shape DEF="BoxShape"><Appearance><Material DEF="GreenMaterial" diffuseColor="0 1 1" emissiveColor="0.8 0 0" transparency="0.1"></Material>
<ImageTexture containerField="texture" url="&quot;images/X3dJavaSceneAccessInterfaceSaiLibrary.png&quot; &quot;https://www.web3d.org/specifications/java/examples/images/X3dJavaSceneAccessInterfaceSaiLibrary.png&quot;"></ImageTexture>
</Appearance>
<Box containerField="geometry" DEF="test-NMTOKEN_regex.0123456789" class="untextured"></Box>
</Shape>
</Anchor>
</Transform>
<Shape DEF="LineShape"><Appearance><Material emissiveColor="0.6 0.19607843 0.8"></Material>
</Appearance>
<IndexedLineSet containerField="geometry" coordIndex="0 1 2 3 4 0"><!--Coordinate 3-tuple point count: 6--><Coordinate containerField="coord" point="0 1.5 0 2 1.5 0 2 1.5 -2 -2 1.5 -2 -2 1.5 0 0 1.5 0"></Coordinate>
</IndexedLineSet>
</Shape>
<PositionInterpolator DEF="BoxPathAnimator" key="0 0.125 0.375 0.625 0.875 1" keyValue="0 1.5 0 2 1.5 0 2 1.5 -2 -2 1.5 -2 -2 1.5 0 0 1.5 0"></PositionInterpolator>
<TimeSensor DEF="OrbitClock" cycleInterval="8" loop="true"></TimeSensor>
<ROUTE fromField="fraction_changed" fromNode="OrbitClock" toField="set_fraction" toNode="BoxPathAnimator"></ROUTE>
<ROUTE fromField="value_changed" fromNode="BoxPathAnimator" toField="set_translation" toNode="LogoGeometryTransform"></ROUTE>
<Transform DEF="TextTransform" translation="0 -1.5 0"><Shape><Appearance><Material USE="GreenMaterial"></Material>
</Appearance>
<Text containerField="geometry" string="&quot;X3D Java&quot; &quot;SAI Library&quot; &quot;X3DJSAIL&quot;"><!--Comment example A, plain quotation marks: He said, "Immel did it!"--><!--Comment example B, XML character entities: He said, &quot;Immel did it!&quot;--><MetadataSet containerField="metadata" name="EscapedQuotationMarksMetadataSet"><MetadataString name="quotesTestC" value="&quot;MFString example C, backslash-escaped quotes: He said, \&quot;Immel did it!\&quot;&quot;" containerField="value"></MetadataString>
<MetadataString name="extraChildTest" value="&quot;checks MetadataSet addValue() method&quot;"></MetadataString>
</MetadataSet>
<FontStyle justify="&quot;MIDDLE&quot; &quot;MIDDLE&quot;"></FontStyle>
</Text>
</Shape>
<Collision><!--test containerField='proxy'--><Shape containerField="proxy" DEF="ProxyShape"><!--alternative XML encoding: Text string='"One, Two, Comment" "" "He said, \&quot;Immel did it!\&quot;"'--><!--alternative XML encoding: Text string='"One, Two, Comment" "" "He said, \&quot;Immel did it!\&quot;" ""'--><!--alternative Java source: .setString(new String [] {"One, Two, Comment", "", "He said, \""Immel did it!\"""})--><!--reference: https://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/StringArrayEncodingExamplesIndex.html--><Text containerField="geometry" string="&quot;One, Two, Text&quot; &quot;&quot; &quot;He said, \&quot;Immel did it!\&quot; \&quot;\&quot;&quot;"></Text>
</Shape>
</Collision>
<!--It's a beautiful world--><!--... for you!--><!--https://en.wikipedia.org/wiki/Beautiful_World_(Devo_song)--></Transform>
<!--repeatedly spin 180 degrees as a readable special effect--><OrientationInterpolator DEF="SpinInterpolator" key="0 0.5 1" keyValue="0 1 0 4.712389 0 1 0 0 0 1 0 1.5707964"></OrientationInterpolator>
<TimeSensor DEF="SpinClock" cycleInterval="5" loop="true"></TimeSensor>
<ROUTE fromField="fraction_changed" fromNode="SpinClock" toField="set_fraction" toNode="SpinInterpolator"></ROUTE>
<ROUTE fromField="value_changed" fromNode="SpinInterpolator" toField="rotation" toNode="TextTransform"></ROUTE>
<Group DEF="BackgroundGroup"><Background DEF="GradualBackground"></Background>
<Script DEF="colorTypeConversionScript"><field name="colorInput" accessType="inputOnly" type="SFColor"></field>
<field name="colorsOutput" accessType="outputOnly" type="MFColor"></field>
<![CDATA[ecmascript:

function colorInput (eventValue) // Example source code
{
   colorsOutput = new MFColor(eventValue); // assigning value sends output event
// Browser.print('colorInput=' + eventValue + ', colorsOutput=' + colorsOutput + '\n');
}]]></Script>
<ColorInterpolator DEF="ColorAnimator" key="0 0.5 1" keyValue="0.9411765 1 1 0.29411766 0 0.50980395 0.9411765 1 1"><!--AZURE to INDIGO and back again--></ColorInterpolator>
<TimeSensor DEF="ColorClock" cycleInterval="60" loop="true"></TimeSensor>
<ROUTE fromField="colorsOutput" fromNode="colorTypeConversionScript" toField="skyColor" toNode="GradualBackground"></ROUTE>
<ROUTE fromField="value_changed" fromNode="ColorAnimator" toField="colorInput" toNode="colorTypeConversionScript"></ROUTE>
<ROUTE fromField="fraction_changed" fromNode="ColorClock" toField="set_fraction" toNode="ColorAnimator"></ROUTE>
</Group>
<ProtoDeclare name="ArtDeco01Material" appinfo="tooltip: ArtDeco01Material prototype is a Material node"><ProtoInterface><field name="description" accessType="inputOutput" appinfo="tooltip for descriptionField" type="SFString" value="ArtDeco01Material prototype is a Material node"></field>
<field name="enabled" accessType="inputOutput" type="SFBool" value="true"></field>
</ProtoInterface>
<ProtoBody><!--Initial node of ProtoBody determines prototype node type--><Material ambientIntensity="0.25" diffuseColor="0.282435 0.085159 0.134462" shininess="0.127273" specularColor="0.276305 0.11431 0.139857"></Material>
<!--[HelloWorldProgram diagnostic] should be connected to scene graph: artDeco01ProtoDeclare.getNodeType()="Material"--><!--presence of follow-on TouchSensor shows that additional nodes are allowed in ProtoBody after initial node, regardless of node types--><TouchSensor description="within ProtoBody"><IS><connect nodeField="description" protoField="description"></connect>
<connect nodeField="enabled" protoField="enabled"></connect>
</IS>
</TouchSensor>
</ProtoBody>
</ProtoDeclare>
<ExternProtoDeclare name="ArtDeco02Material" appinfo="this is a different Material node" url="&quot;http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ArtDecoPrototypesExcerpt.x3d#ArtDeco02Material&quot; &quot;http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ArtDecoPrototypesExcerpt.x3dv#ArtDeco02Material&quot;"><!--[HelloWorldProgram diagnostic] artDeco02ExternProtoDeclare.getNodeType()="ERROR_UNKNOWN_EXTERNPROTODECLARE_NODE_TYPE: ExternProtoDeclare name='ArtDeco02Material' type cannot be remotely accessed at run time. TODO X3DJSAIL needs to add further capability that retrieves the ExternProtoDeclare file."--><field name="description" accessType="inputOutput" appinfo="tooltip for descriptionField" type="SFString"></field>
</ExternProtoDeclare>
<!--Tested ArtDeco01ProtoInstance, ArtDeco02ProtoInstance for improper node type when ProtoInstance is added in wrong place--><Shape DEF="TestShape1"><Appearance DEF="TestAppearance1"><!--ArtDeco01Material prototype goes here... TODO ensure setContainerField is handled in exported Java--><ProtoInstance containerField="material" name="ArtDeco01Material"><!--[HelloWorldProgram diagnostic] ArtDeco01ProtoInstance.getNodeType()="Material"--><fieldValue name="description" value="ArtDeco01Material can substitute for a Material node"></fieldValue>
</ProtoInstance>
</Appearance>
<Sphere containerField="geometry" radius="0.001"></Sphere>
</Shape>
<Shape DEF="TestShape2"><Appearance DEF="TestAppearance2"><!--ArtDeco02Material prototype goes here... TODO ensure setContainerField is handled in exported Java--><ProtoInstance containerField="material" name="ArtDeco02Material" DEF="ArtDeco02MaterialDEF"><!--[HelloWorldProgram diagnostic] ArtDeco02ProtoInstance.getNodeType()="ERROR_UNKNOWN_EXTERNPROTODECLARE_NODE_TYPE: ExternProtoDeclare name='ArtDeco02Material' type cannot be remotely accessed at run time. TODO X3DJSAIL needs to add further capability that retrieves the ExternProtoDeclare file."--><fieldValue name="description" value="ArtDeco02Material can substitute for another Material node"></fieldValue>
</ProtoInstance>
</Appearance>
<Cone containerField="geometry" bottomRadius="0.001" height="0.001"></Cone>
</Shape>
<Shape DEF="TestShape3"><Appearance DEF="TestAppearance3"><!--ArtDeco02Material ProtoInstance USE goes here. Note that name field is NOT defined as part of ProtoInstance USE.--><ProtoInstance containerField="material" USE="ArtDeco02MaterialDEF"></ProtoInstance>
</Appearance>
<Cylinder containerField="geometry" height="0.001" radius="0.001"></Cylinder>
</Shape>
<Inline DEF="inlineSceneDef" url="&quot;someOtherScene.x3d&quot; &quot;https://www.web3d.org/specifications/java/examples/someOtherScene.x3d&quot;"></Inline>
<IMPORT AS="WorldInfoDEF2" importedDEF="WorldInfoDEF" inlineDEF="inlineSceneDef"></IMPORT>
<EXPORT AS="WorldInfoDEF3" localDEF="WorldInfoDEF"></EXPORT>
<ProtoDeclare name="MaterialModulator" appinfo="mimic a Material node and modulate fields as an animation effect" documentation="http://x3dgraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/MaterialModulatorIndex.html"><ProtoInterface><field name="enabled" accessType="inputOutput" type="SFBool" value="true"></field>
<field name="diffuseColor" accessType="inputOutput" type="SFColor" value="0 0 0"></field>
<field name="emissiveColor" accessType="inputOutput" type="SFColor" value="0.05 0.05 0.5"></field>
<field name="specularColor" accessType="inputOutput" type="SFColor" value="0 0 0"></field>
<field name="transparency" accessType="inputOutput" type="SFFloat" value="0"></field>
<field name="shininess" accessType="inputOutput" type="SFFloat" value="0"></field>
<field name="ambientIntensity" accessType="inputOutput" type="SFFloat" value="0"></field>
</ProtoInterface>
<ProtoBody><Material DEF="MaterialNode"><IS><connect nodeField="diffuseColor" protoField="diffuseColor"></connect>
<connect nodeField="emissiveColor" protoField="emissiveColor"></connect>
<connect nodeField="specularColor" protoField="specularColor"></connect>
<connect nodeField="transparency" protoField="transparency"></connect>
<connect nodeField="shininess" protoField="shininess"></connect>
<connect nodeField="ambientIntensity" protoField="ambientIntensity"></connect>
</IS>
</Material>
<!--Only first node (the node type) is renderable, others are along for the ride--><Script DEF="MaterialModulatorScript"><field name="enabled" accessType="inputOutput" type="SFBool"></field>
<field name="diffuseColor" accessType="inputOutput" type="SFColor"></field>
<field name="newColor" accessType="outputOnly" type="SFColor"></field>
<field name="clockTrigger" accessType="inputOnly" type="SFTime"></field>
<IS><connect nodeField="enabled" protoField="enabled"></connect>
<connect nodeField="diffuseColor" protoField="diffuseColor"></connect>
</IS>
<![CDATA[ecmascript:
function initialize ()
{
    newColor = diffuseColor; // start with correct color
}
function set_enabled (newValue)
{
	enabled = newValue;
}
function clockTrigger (timeValue)
{
    if (!enabled) return;
    red   = newColor.r;
    green = newColor.g;
    blue  = newColor.b;

    // note different modulation rates for each color component, % is modulus operator
    newColor = new SFColor ((red + 0.02) % 1, (green + 0.03) % 1, (blue + 0.04) % 1);
	if (enabled)
	{
		Browser.print ('diffuseColor=(' + red + ',' + green + ',' + blue + ') newColor=' + newColor.toString() + '\n');
	}
}]]></Script>
</ProtoBody>
</ProtoDeclare>
<!--Test success: declarative statement createDeclarativeShapeTests()--><Group DEF="DeclarativeGroupExample"><Shape><MetadataString containerField="metadata" name="findThisNameValue" DEF="FindableMetadataStringTest" value="&quot;test case&quot;"></MetadataString>
<Appearance DEF="DeclarativeAppearanceExample"><!--DeclarativeMaterialExample gets overridden by subsequently added MaterialModulator ProtoInstance--><ProtoInstance containerField="material" name="MaterialModulator" DEF="MyMaterialModulator"></ProtoInstance>
</Appearance>
<Cone containerField="geometry" bottom="false" bottomRadius="0.05" height="0.1"></Cone>
</Shape>
<!--Test success: declarativeGroup.addChild() singleton pipeline method--></Group>
<!--Test success: declarative statement addChild()--><!--Test success: x3dModel.findNodeByDEF(DeclarativeAppearanceExample) = <Appearance DEF='DeclarativeAppearanceExample'></Appearance> i.e. <Appearance DEF='DeclarativeAppearanceExample'> <!- - DeclarativeMaterialExample gets overridden by subsequently added MaterialModulator ProtoInstance - -> <ProtoInstance DEF='MyMaterialModulator' name='MaterialModulator' containerField='material'></ProtoInstance> </Appearance>--><!--Test success: x3dModel.findElementByNameValue(findThisNameValue) = <MetadataString DEF='FindableMetadataStringTest' name='findThisNameValue' value='"test case"'></MetadataString>--><!--Test success: x3dModel.findElementByNameValue("ArtDeco01Material", "ProtoDeclare") found--><!--Test success: x3dModel.findElementByNameValue("MaterialModulator", "ProtoDeclare") found--><!--Test success: x3dModel.findElementByNameValue("MaterialModulator", "ProtoInstance") found--><Group DEF="TestFieldObjectsGroup"><!--testFieldObjects() results--><!--SFBool default=true, true=true, false=false, negate()=true--><!--MFBool default=, initial=true false true, negate()=false true false--><!--SFFloat default=0.0, initial=1.0, setValue(2)=2.0, setValue(3.0f)=3.0, setValue(4.0)=4.0--><!--MFFloat default=, initial=1 2 3, append(5)=1 2 3 5, inserts(3,4)(0,0)=0 1 2 3 4 5, append(6)=0 1 2 3 4 5 6, size()=7--><!--... get1Value[3]=3.0, remove[1]=0 2 3 4 5 6, set1Value(0,10)=10 2 3 4 5 6, multiply(2)=20 4 6 8 10 12, clear=--><!--SFVec3f default=0 0 0, initial=1 2 3, setValue=4 5 6, multiply(2)=8 10 12, normalize()=0.45584232 0.5698029 0.68376344, regex matches()=true--><!--regex test SFVec3f().matches("1 2 3")=true, regex test SFVec3f().matches("1 2 3 4")=false, regex test (SFRotation.matches("0 0 0 0")=true, failure detecting illegal (zero axis) rotation value--></Group>
<Sound location="0 1.6 0"><!--set sound-ellipsoid location height at 1.6m to match typical avatar height--><AudioClip containerField="source" description="chimes" url="&quot;chimes.wav&quot; &quot;https://www.web3d.org/x3d/content/examples/ConformanceNist/Sounds/AudioClip/chimes.wav&quot;"><!--Scene example fragment from https://www.web3d.org/x3d/content/examples/ConformanceNist/Sounds/AudioClip/default.x3d--></AudioClip>
</Sound>
<Sound location="0 1.6 0"><!--set sound-ellipsoid location height at 1.6m to match typical avatar height--><MovieTexture containerField="source" description="mpgsys.mpg from ConformanceNist suite" url="&quot;mpgsys.mpg&quot; &quot;https://www.web3d.org/x3d/content/examples/ConformanceNist/Appearance/MovieTexture/mpgsys.mpg&quot;"><!--Scene example fragment from https://www.web3d.org/x3d/content/examples/ConformanceNist/Appearance/MovieTexture/mpeg1-systems.x3d--><!--Expected containerField='source', allowed containerField values="texture" "source" "back" "bottom" "front" "left" "right" "top" "backTexture" "bottomTexture" "frontTexture" "leftTexture" "rightTexture" "topTexture" "watchList"--></MovieTexture>
</Sound>
<!--Test success: Anchor.isNode()=true, siteAnchor.isNode()=true--><!--Test success: Anchor.isStatement()=false, siteAnchor.isStatement()=false--><!--Test success: ROUTE.isNode()=false, orbitPositionROUTE.isNode()=false--><!--Test success: ROUTE.isStatement()=true, orbitPositionROUTE.isStatement()=true--><!--Test success: CommentsBlock.isNode()=false, testComments.isNode()=false--><!--Test failure: CommentsBlock.isStatement()=true, testComments.isStatement()=true--><Shape DEF="ExtrusionShape"><!--ExampleExtrusion isCrossSectionClosed()=true, crossSection='[1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0]'--><!--ExampleExtrusion isSpineClosed()=false, spine='[0.0, 0.0, 0.0, 0.0, 1.0, 0.0]'--><Appearance DEF="TransparentAppearance"><Material transparency="1"></Material>
</Appearance>
<Extrusion containerField="geometry" DEF="ExampleExtrusion"></Extrusion>
</Shape>
<Group><!--Test MFNode children array as an ordered list consisting of comments, statements, ProtoInstance and nodes--><ProtoDeclare name="NewWorldInfo"><ProtoInterface><field name="description" accessType="initializeOnly" type="SFString"></field>
</ProtoInterface>
<ProtoBody><WorldInfo></WorldInfo>
</ProtoBody>
</ProtoDeclare>
<ProtoInstance name="NewWorldInfo" DEF="Proto1"><fieldValue name="description" value="testing 1 2 3"></fieldValue>
</ProtoInstance>
<Group DEF="Node2"><!--intentionally empty--></Group>
<ProtoInstance name="NewWorldInfo" DEF="Proto3"></ProtoInstance>
<Transform DEF="Node4"><!--intentionally empty--></Transform>
<!--Test satisfactorily creates MFNode children array as an ordered list with mixed content--></Group>
<ProtoDeclare name="ShaderProto"><ProtoBody><ProgramShader></ProgramShader>
</ProtoBody>
</ProtoDeclare>
<Shape><Appearance><!--Test MFNode shaders array as an ordered list consisting of comments, ProtoInstance and nodes--><!--Test satisfactorily creates MFNode shaders array as an ordered list with mixed content--><ProgramShader DEF="TestShader1"><ShaderProgram DEF="TestShader2" type="VERTEX"></ShaderProgram>
</ProgramShader>
<ProtoInstance name="ShaderProto" DEF="TestShader3"></ProtoInstance>
<ComposedShader DEF="TestShader4"><ShaderPart DEF="TestShader5" type="VERTEX"></ShaderPart>
</ComposedShader>
</Appearance>
</Shape>
<Transform DEF="SpecialtyNodes"><CADLayer><CADAssembly><CADPart><CADFace></CADFace>
</CADPart>
</CADAssembly>
</CADLayer>
<EspduTransform></EspduTransform>
<ReceiverPdu></ReceiverPdu>
<SignalPdu></SignalPdu>
<TransmitterPdu></TransmitterPdu>
<DISEntityManager><DISEntityTypeMapping></DISEntityTypeMapping>
</DISEntityManager>
</Transform>
</Scene>
</X3D>