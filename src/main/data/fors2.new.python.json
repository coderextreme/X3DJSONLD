{
    "X3D":,
    {
        "encoding":"UTF-8",
        "$id":   "https://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "@version":"4.0",
        "@profile":"Immersive",
    "head":
    {
        "component":
        {
      {
        "@name":"Scripting"
      }
    },
        "meta":
        {
      {
        "@content":"John W Carlson",
        "@name":"creator"
      }
    },
        "meta":
        {
      {
        "@content":"December 13 2015",
        "@name":"created"
      }
    },
        "meta":
        {
      {
        "@content":"July 14 2025",
        "@name":"modified"
      }
    },
        "meta":
        {
      {
        "@content":"fors2.x3d",
        "@name":"title"
      }
    },
        "meta":
        {
      {
        "@content":"https://coderextreme.net/X3DJSONLD/src/main/data/fors2.x3d",
        "@name":"identifier"
      }
    },
        "meta":
        {
      {
        "@content":"beginnings of a force directed graph in 3D",
        "@name":"description"
      }
    },
        "meta":
        {
      {
        "@content":"Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit",
        "@name":"generator"
      }
    },
    }    "Scene":
    {
        "ProtoDeclare":
        {
      {
        "@name":"node"
      }
            "ProtoInterface":
            {
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"position",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
            }            "ProtoBody":
            {
                "Group":
                {
                    "Transform":
                    {
      {
        "@DEF":"transform"
      }
                        "IS":
                        {
                            "connect":
                            {
      {
        "@nodeField":"translation",
        "@protoField":"position"
      }
    },
                        }                        "Shape":
                        {
                            "Appearance":
                            {
                                "Material":
                                {
      {
        "@diffuseColor":"1 0 0"
      }
    },
                            }                            "Sphere":
                            {
    },
                        }                    }                    "PositionInterpolator":
                    {
      {
        "@DEF":"NodePosition",
        "@key":"0 1"
      }
    },
                    "Script":
                    {
      {
        "@DEF":"MoveBall",
        "@sourceCode":"ecmascript:
&quot;+
&quot;			function set_cycle(value) {
&quot;+
&quot;				old = translation;
&quot;+
&quot;				translation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);
&quot;+
&quot;				keyValue = new MFVec3f(old, translation);
&quot;+
&quot;			}"
      }
                        "field":
                        {
      {
        "@accessType":"inputOutput",
        "@name":"translation",
        "@type":"SFVec3f",
        "@value":"[50, 50, 0]"
      }
    },
                        "field":
                        {
      {
        "@accessType":"inputOutput",
        "@name":"old",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                        "field":
                        {
      {
        "@accessType":"inputOnly",
        "@name":"set_cycle",
        "@type":"SFTime"
      }
    },
                        "field":
                        {
      {
        "@accessType":"outputOnly",
        "@name":"keyValue",
        "@type":"MFVec3f"
      }
    },
                    }                    "TimeSensor":
                    {
      {
        "@DEF":"nodeClock",
        "@cycleInterval":"3",
        "@loop":"true"
      }
    },
                    "ROUTE":
                    {
      {
        "@fromField":"cycleTime",
        "@fromNode":"nodeClock",
        "@toField":"set_cycle",
        "@toNode":"MoveBall"
      }
    },
                    "ROUTE":
                    {
      {
        "@fromField":"fraction_changed",
        "@fromNode":"nodeClock",
        "@toField":"set_fraction",
        "@toNode":"NodePosition"
      }
    },
                    "ROUTE":
                    {
      {
        "@fromField":"keyValue",
        "@fromNode":"MoveBall",
        "@toField":"keyValue",
        "@toNode":"NodePosition"
      }
    },
                    "ROUTE":
                    {
      {
        "@fromField":"value_changed",
        "@fromNode":"NodePosition",
        "@toField":"set_translation",
        "@toNode":"transform"
      }
    },
                }            }        }        "ProtoDeclare":
        {
      {
        "@name":"cyl"
      }
            "ProtoInterface":
            {
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"positionA",
        "@type":"SFVec3f"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"positionB",
        "@type":"SFVec3f"
      }
    },
            }            "ProtoBody":
            {
                "Group":
                {
                    "Shape":
                    {
                        "Appearance":
                        {
                            "Material":
                            {
      {
        "@diffuseColor":"0 1 0"
      }
    },
                        }                        "Extrusion":
                        {
      {
        "@DEF":"extrusion",
        "@creaseAngle":"0.785"
      }
    },
                    }                    "Script":
                    {
      {
        "@DEF":"MoveCylinder",
        "@sourceCode":"ecmascript:
&quot;+
&quot;			function set_endA(value) {
&quot;+
&quot;				spine = new MFVec3f(value, spine[1]);
&quot;+
&quot;			}
&quot;+
&quot;
&quot;+
&quot;			function set_endB(value) {
&quot;+
&quot;				spine = new MFVec3f(spine[0], value);
&quot;+
&quot;			}"
      }
                        "IS":
                        {
                            "connect":
                            {
      {
        "@nodeField":"endA",
        "@protoField":"positionA"
      }
    },
                            "connect":
                            {
      {
        "@nodeField":"endB",
        "@protoField":"positionB"
      }
    },
                        }                        "field":
                        {
      {
        "@accessType":"inputOutput",
        "@name":"spine",
        "@type":"MFVec3f"
      }
    },
                        "field":
                        {
      {
        "@accessType":"inputOutput",
        "@name":"endA",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                        "field":
                        {
      {
        "@accessType":"inputOutput",
        "@name":"endB",
        "@type":"SFVec3f",
        "@value":"[50, 50, 50]"
      }
    },
                    }                    "ROUTE":
                    {
      {
        "@fromField":"spine",
        "@fromNode":"MoveCylinder",
        "@toField":"set_spine",
        "@toNode":"extrusion"
      }
    },
                }            }        }        "Transform":
        {
      {
        "@scale":"0.1 0.1 0.1"
      }
            "ProtoInstance":
            {
      {
        "@DEF":"nodeA",
        "@name":"node"
      }
                "fieldValue":
                {
      {
        "@name":"position",
        "@value":"-50 -50 -50"
      }
    },
            }            "ProtoInstance":
            {
      {
        "@DEF":"nodeB",
        "@name":"node"
      }
                "fieldValue":
                {
      {
        "@name":"position",
        "@value":"50 50 50"
      }
    },
            }            "ProtoInstance":
            {
      {
        "@DEF":"linkA",
        "@name":"cyl"
      }
    },
        }        "ROUTE":
        {
      {
        "@fromField":"position",
        "@fromNode":"nodeA",
        "@toField":"positionA",
        "@toNode":"linkA"
      }
    },
        "ROUTE":
        {
      {
        "@fromField":"position",
        "@fromNode":"nodeB",
        "@toField":"positionB",
        "@toNode":"linkA"
      }
    },
    }}
