{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"4.0",
    "@xsd:noNamespaceSchemaLocation":"https://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-4.0-JSONSchema.autogenerated.json",
    "head": {
        "component": [
          {
            "@name":"Scripting",
            "@level":1
          },
          {
            "@name":"EnvironmentalEffects",
            "@level":3
          },
          {
            "@name":"Shaders",
            "@level":1
          },
          {
            "@name":"CubeMapTexturing",
            "@level":1
          },
          {
            "@name":"Texturing",
            "@level":1
          },
          {
            "@name":"Rendering",
            "@level":1
          },
          {
            "@name":"Shape",
            "@level":4
          },
          {
            "@name":"Grouping",
            "@level":3
          },
          {
            "@name":"Core",
            "@level":1
          },
          {
            "@name":"DIS",
            "@level":2
          }
        ],
        "meta": [
          {
            "@name":"title",
            "@content":"bumpyfreewrlsliders.x3d"
          },
          {
            "@name":"description",
            "@content":"Bumpy Orbitals with Sliders for FreeWRL"
          },
          {
            "@name":"creator",
            "@content":"Doug Sanden, Christoph Valentin, John Carlson"
          },
          {
            "@name":"identifier",
            "@content":"https:/coderextreme.net/X3DJSONLD/src/main/data/bumpyfreewrlsliders.x3d"
          },
          {
            "@name":"license",
            "@content":"license.html"
          },
          {
            "@name":"translated",
            "@content":"16 August 2025"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          {
            "#comment":"LayerSet with two layers, navigation happens in layer 1"
          },
          { "LayerSet":
            {
              "@activeLayer":1,
              "@order":[1,2],
              "-children":[
                {
                  "#comment":"the first Layer contains the main scenery - \"The Review of the Flower (DIS Multiuser)\""
                },
                {
                  "#comment":"the second layer contains the sliders that are moved with the user's display like a HUD (heads up display)"
                }
              ],
              "-layers":[
                { "Layer":
                  {
                    "@pickable":true,
                    "@objectType":["ALL"],
                    "-children":[
                      {
                        "#comment":"basic nodes, which might be present in any scene"
                      },
                      { "NavigationInfo":
                        {
                          "@type":["EXAMINE","FLY","LOOKAT","ANY"],
                          "@avatarSize":[0.25,1.75,0.75]
                        }
                      },
                      { "DirectionalLight":
                        {
                          "@ambientIntensity":0.2,
                          "@direction":[0,-1,-0]
                        }
                      },
                      { "DirectionalLight":
                        {
                          "@ambientIntensity":0.2,
                          "@direction":[-1,-0.1,-1]
                        }
                      },
                      { "Viewpoint":
                        {
                          "@description":"My Overview",
                          "@fieldOfView":1.570796,
                          "@position":[0,1.75,60]
                        }
                      },
                      {
                        "#comment":"this group contains the red/green/blue 3D crosshair"
                      },
                      { "Group":
                        {
                          "-children":[
                            {
                              "#comment":"Arrow X"
                            },
                            { "Transform":
                              {
                                "@translation":[25,0,0],
                                "@rotation":[0,0,-1,1.57],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-geometry":
                                        { "Cylinder":
                                          {
                                            "@DEF":"Shaft",
                                            "@radius":0.35,
                                            "@height":50
                                          }
                                        },
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@DEF":"RED",
                                                  "@diffuseColor":[1,0,0],
                                                  "@emissiveColor":[1,0,0]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@translation":[50,0,0],
                                "@rotation":[0,0,-1,1.57],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-geometry":
                                        { "Cone":
                                          {
                                            "@DEF":"Tip",
                                            "@bottomRadius":0.8,
                                            "@height":3
                                          }
                                        },
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@USE":"RED"
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "#comment":"Arrow Y"
                            },
                            { "Transform":
                              {
                                "@translation":[0,25,0],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-geometry":
                                        { "Cylinder":
                                          {
                                            "@USE":"Shaft"
                                          }
                                        },
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@DEF":"GREEN",
                                                  "@diffuseColor":[0,1,0],
                                                  "@emissiveColor":[0,1,0]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@translation":[0,50,0],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-geometry":
                                        { "Cone":
                                          {
                                            "@USE":"Tip"
                                          }
                                        },
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@USE":"GREEN"
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "#comment":"Arrow Z"
                            },
                            { "Transform":
                              {
                                "@translation":[0,0,25],
                                "@rotation":[1,0,0,1.57],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-geometry":
                                        { "Cylinder":
                                          {
                                            "@USE":"Shaft"
                                          }
                                        },
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@DEF":"BLUE",
                                                  "@diffuseColor":[0,0,1],
                                                  "@emissiveColor":[0,0,1]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@translation":[0,0,50],
                                "@rotation":[1,0,0,1.57],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-geometry":
                                        { "Cone":
                                          {
                                            "@USE":"Tip"
                                          }
                                        },
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@USE":"BLUE"
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "#comment":"the model that is being reviewed by the users of this scene"
                      },
                      { "Transform":
                        {
                          "@DEF":"FlowerTransform",
                          "-children":[
                            {
                              "#comment":"<Inline DEF=\"Flower\" url='\"bumpyfreewrl.x3d\"' />"
                            },
                            {
                              "#comment":"Images courtesy of Paul Debevec's Light Probe Image Gallery"
                            },
                            { "Background":
                              {
                                "@backUrl":["../resources/images/all_probes/stpeters_cross/stpeters_back.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"],
                                "@bottomUrl":["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"],
                                "@frontUrl":["../resources/images/all_probes/stpeters_cross/stpeters_front.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"],
                                "@leftUrl":["../resources/images/all_probes/stpeters_cross/stpeters_left.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"],
                                "@rightUrl":["../resources/images/all_probes/stpeters_cross/stpeters_right.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"],
                                "@topUrl":["../resources/images/all_probes/stpeters_cross/stpeters_top.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
                              }
                            },
                            { "Transform":
                              {
                                "-children":[
                                  { "Shape":
                                    {
                                      "-geometry":
                                        { "Sphere":
                                          {
                                            "@radius":5
                                          }
                                        },
                                      "-children":[
                                        {
                                          "#comment":"<IndexedFaceSet convex=\"false\" DEF=\"Orbit\" creaseAngle=\"0\"> <Coordinate DEF=\"OrbitCoordinates\"/> </IndexedFaceSet>"
                                        }
                                      ],
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@diffuseColor":[0.7,0.7,0.7],
                                                  "@specularColor":[0.5,0.5,0.5]
                                                }
                                              },
                                            "-texture":
                                              { "ComposedCubeMapTexture":
                                                {
                                                  "@DEF":"texture",
                                                  "-backTexture":
                                                    { "ImageTexture":
                                                      {
                                                        "@url":["../resources/images/all_probes/stpeters_cross/stpeters_back.png","https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"]
                                                      }
                                                    },
                                                  "-bottomTexture":
                                                    { "ImageTexture":
                                                      {
                                                        "@url":["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png","https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
                                                      }
                                                    },
                                                  "-frontTexture":
                                                    { "ImageTexture":
                                                      {
                                                        "@url":["../resources/images/all_probes/stpeters_cross/stpeters_front.png","https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"]
                                                      }
                                                    },
                                                  "-leftTexture":
                                                    { "ImageTexture":
                                                      {
                                                        "@url":["../resources/images/all_probes/stpeters_cross/stpeters_left.png","https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"]
                                                      }
                                                    },
                                                  "-rightTexture":
                                                    { "ImageTexture":
                                                      {
                                                        "@url":["../resources/images/all_probes/stpeters_cross/stpeters_right.png","https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"]
                                                      }
                                                    },
                                                  "-topTexture":
                                                    { "ImageTexture":
                                                      {
                                                        "@url":["../resources/images/all_probes/stpeters_cross/stpeters_top.png","https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
                                                      }
                                                    }
                                                }
                                              },
                                            "-shaders":[
                                              { "ComposedShader":
                                                {
                                                  "@DEF":"freewrlShader",
                                                  "@language":"GLSL",
                                                  "field": [
                                                    {
                                                      "@name":"fw_textureCoordGenType",
                                                      "@accessType":"inputOutput",
                                                      "@type":"SFInt32",
                                                      "@value":0
                                                    },
                                                    {
                                                      "@name":"chromaticDispertion",
                                                      "@accessType":"initializeOnly",
                                                      "@type":"SFVec3f",
                                                      "@value":[0.98,1.0,1.033]
                                                    },
                                                    {
                                                      "@name":"bias",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":0.5
                                                    },
                                                    {
                                                      "@name":"scale",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":0.5
                                                    },
                                                    {
                                                      "@name":"power",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":2
                                                    },
                                                    {
                                                      "@name":"a",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":15
                                                    },
                                                    {
                                                      "@name":"b",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":5
                                                    },
                                                    {
                                                      "@name":"c",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":20
                                                    },
                                                    {
                                                      "@name":"d",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":20
                                                    },
                                                    {
                                                      "@name":"tdelta",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":0
                                                    },
                                                    {
                                                      "@name":"pdelta",
                                                      "@type":"SFFloat",
                                                      "@accessType":"inputOutput",
                                                      "@value":0
                                                    }
                                                  ],
                                                  "-children":[
                                                    {
                                                      "#comment":"<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                                    }
                                                  ],
                                                  "-parts":[
                                                    { "ShaderPart":
                                                      {
                                                        "@type":"VERTEX",
                                                        "IS": {
                                                            "connect": [
                                                              {
                                                                "@nodeField":"url",
                                                                "@protoField":"vertex"
                                                              }
                                                            ]
                                                        }
                                                      }
                                                    },
                                                    { "ShaderPart":
                                                      {
                                                        "@type":"FRAGMENT",
                                                        "IS": {
                                                            "connect": [
                                                              {
                                                                "@nodeField":"url",
                                                                "@protoField":"fragment"
                                                              }
                                                            ]
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "-children":[
                                              {
                                                "#comment":"<ComposedShader DEF=\"freewrlShader\" language=\"GLSL\"> <field name='fw_textureCoordGenType' accessType='inputOutput' type='SFInt32' value='0'></field> <field name='chromaticDispertion' accessType='initializeOnly' type='SFVec3f' value='0.98 1.0 1.033'></field> <field name='bias' type='SFFloat' accessType='inputOutput' value='0.5'></field> <field name='scale' type='SFFloat' accessType='inputOutput' value='0.5'></field> <field name='power' type='SFFloat' accessType='inputOutput' value='2'></field> <field name='a' type='SFFloat' accessType='inputOutput' value='15'></field> <field name='b' type='SFFloat' accessType='inputOutput' value='5'></field> <field name='c' type='SFFloat' accessType='inputOutput' value='20'></field> <field name='d' type='SFFloat' accessType='inputOutput' value='20'></field> <field name='tdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <field name='pdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <ShaderPart type='VERTEX'> <IS> <connect nodeField=\"url\" protoField=\"vertex\"/> </IS> </ShaderPart> <ShaderPart type='FRAGMENT'> <IS> <connect nodeField=\"url\" protoField=\"fragment\"/> </IS> </ShaderPart> </ComposedShader>"
                                              }
                                            ]
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "#comment":"<Script DEF=\"OrbitScript\"> <field accessType=\"inputOutput\" name=\"coordinates\" type=\"MFVec3f\"/> <field accessType=\"outputOnly\" name=\"coordIndexes\" type=\"MFInt32\"/> <field name='a' type='SFFloat' accessType='inputOutput' value='10'></field> <field name='b' type='SFFloat' accessType='inputOutput' value='10'></field> <field name='c' type='SFFloat' accessType='inputOutput' value='2'></field> <field name='d' type='SFFloat' accessType='inputOutput' value='2'></field> <field name='pdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <field name='tdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <![CDATA[ecmascript: function initialize() { var resolution = 300; var theta = 0.0; var phi = 0.0; var delta = (2 * 3.141592653) / (resolution-1); var crds = new MFVec3f(); for ( i = 0; i < resolution; i++) { for ( j = 0; j < resolution; j++) { var rho = a + b * Math.cos(c * theta + tdelta) * Math.cos(d * phi + pdelta); crds.push(new SFVec3f( rho * Math.cos(phi) * Math.cos(theta), rho * Math.cos(phi) * Math.sin(theta), rho * Math.sin(phi) )); theta += delta; } phi += delta; } coordinates = crds; var cis = new MFInt32(); for ( i = 0; i < resolution-1; i++) { for ( j = 0; j < resolution-1; j++) { cis.push(i*resolution+j); cis.push(i*resolution+j+1); cis.push((i+1)*resolution+j+1); cis.push((i+1)*resolution+j); cis.push(-1); } } coordIndexes = cis; } ]]></Script> <ROUTE fromField=\"coordIndexes\" fromNode=\"OrbitScript\" toField=\"set_coordIndex\" toNode=\"Orbit\"/> <ROUTE fromField=\"coordinates\" fromNode=\"OrbitScript\" toField=\"set_point\" toNode=\"OrbitCoordinates\"/>"
                      },
                      {
                        "#comment":"DIS multiuser facilities"
                      },
                      { "DISEntityManager":
                        {
                          "@DEF":"EntityManager",
                          "-children":[
                            { "DISEntityTypeMapping":
                              {
                                "@category":77,
                                "@specific":1,
                                "@url":["../data/Leif8Final.x3d","https://coderextreme.net/X3DJSONLD/src/main/data/Leif8Final.x3d"]
                              }
                            },
                            { "DISEntityTypeMapping":
                              {
                                "@category":77,
                                "@specific":2,
                                "@url":["../data/Lily8Final.x3d","https://coderextreme.net/X3DJSONLD/src/main/data/Lily8Final.x3d"]
                              }
                            },
                            { "DISEntityTypeMapping":
                              {
                                "@category":77,
                                "@specific":3,
                                "@url":["../data/Tufani8Final.x3d","https://coderextreme.net/X3DJSONLD/src/main/data/Tufani8Final.x3d"]
                              }
                            },
                            { "DISEntityTypeMapping":
                              {
                                "@category":77,
                                "@specific":4,
                                "@url":["../data/Gramps8Final.x3d","https://coderextreme.net/X3DJSONLD/src/main/data/Gramps8Final.x3d"]
                              }
                            }
                          ]
                        }
                      },
                      { "Collision":
                        {
                          "-children":[
                            { "Group":
                              {
                                "@DEF":"AvatarHolder"
                              }
                            }
                          ]
                        }
                      },
                      { "ROUTE":
                        {
                          "@fromField":"addedEntities",
                          "@fromNode":"EntityManager",
                          "@toField":"addChildren",
                          "@toNode":"AvatarHolder"
                        }
                      },
                      { "ROUTE":
                        {
                          "@fromField":"removedEntities",
                          "@fromNode":"EntityManager",
                          "@toField":"removeChildren",
                          "@toNode":"AvatarHolder"
                        }
                      }
                    ]
                  }
                },
                { "LayoutLayer":
                  {
                    "@pickable":true,
                    "@objectType":["ALL"],
                    "-children":[
                      {
                        "#comment":"positioning the LayoutLayer"
                      },
                      {
                        "#comment":"clipping the LayoutLayer"
                      },
                      {
                        "#comment":"the content (children) of the LayoutLayer"
                      },
                      {
                        "#comment":"first, the slider for scaling the model"
                      },
                      { "Transform":
                        {
                          "@translation":[0,0,-3],
                          "-children":[
                            { "Shape":
                              {
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "-material":
                                        { "Material":
                                          {
                                            "@diffuseColor":[0.1,0.1,0.1],
                                            "@transparency":1.0
                                          }
                                        }
                                    }
                                  },
                                "-geometry":
                                  { "Box":
                                    {
                                      "@size":[100,100,0.02]
                                    }
                                  }
                              }
                            }
                          ]
                        }
                      },
                      { "Transform":
                        {
                          "@DEF":"equationTransform",
                          "-children":[
                            { "Transform":
                              {
                                "@translation":[0,0,-20],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-geometry":
                                        { "Text":
                                          {
                                            "@DEF":"equation",
                                            "@string":["r = a + b * cos(c * theta + tdelta) * cos (d * phi + pdelta)"],
                                            "-fontStyle":
                                              { "FontStyle":
                                                {
                                                  "@size":0.09
                                                }
                                              }
                                          }
                                        },
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@diffuseColor":[0,1,1]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      { "ProtoDeclare":
                        {
                          "@name":"SliderProto",
                          "ProtoInterface": {
                              "field": [
                                {
                                  "@name":"sliderTranslation",
                                  "@accessType":"inputOutput",
                                  "@type":"SFVec3f",
                                  "@value":[0,0.7,0]
                                },
                                {
                                  "@name":"transformTranslation",
                                  "@accessType":"inputOutput",
                                  "@type":"SFVec3f",
                                  "@value":[0,0,0.1]
                                },
                                {
                                  "@name":"sensorTranslation",
                                  "@accessType":"inputOutput",
                                  "@type":"SFVec3f",
                                  "@value":[0,0,0.0]
                                },
                                {
                                  "@name":"numberTranslation",
                                  "@accessType":"inputOutput",
                                  "@type":"SFVec3f",
                                  "@value":[0.2,0,0.0]
                                },
                                {
                                  "@name":"textString",
                                  "@accessType":"inputOutput",
                                  "@type":"MFString",
                                  "@value":["a="]
                                },
                                {
                                  "@name":"parameterName",
                                  "@accessType":"inputOutput",
                                  "@type":"SFString",
                                  "@value":"a"
                                },
                                {
                                  "@name":"parameterScale",
                                  "@accessType":"inputOutput",
                                  "@type":"SFFloat",
                                  "@value":30
                                },
                                {
                                  "@name":"shaderNode",
                                  "@accessType":"inputOutput",
                                  "@type":"SFNode"
                                }
                              ]
                          },
                          "ProtoBody": {
                              "-children":[
                                { "Group":
                                  {
                                    "-children":[
                                      { "Transform":
                                        {
                                          "@DEF":"protoSlider",
                                          "@translation":[0,0.7,0],
                                          "IS": {
                                              "connect": [
                                                {
                                                  "@nodeField":"translation",
                                                  "@protoField":"sliderTranslation"
                                                }
                                              ]
                                          },
                                          "-children":[
                                            { "Transform":
                                              {
                                                "@DEF":"protoTransform",
                                                "@translation":[0,0,0.1],
                                                "IS": {
                                                    "connect": [
                                                      {
                                                        "@nodeField":"translation",
                                                        "@protoField":"transformTranslation"
                                                      }
                                                    ],
                                                    "connect": [
                                                      {
                                                        "@nodeField":"translation",
                                                        "@protoField":"sensorTranslation"
                                                      }
                                                    ]
                                                },
                                                "-children":[
                                                  { "PlaneSensor":
                                                    {
                                                      "@DEF":"protoSensor",
                                                      "@maxPosition":[2,0]
                                                    }
                                                  },
                                                  { "Transform":
                                                    {
                                                      "@translation":[0,0.0,0],
                                                      "-children":[
                                                        { "TouchSensor":
                                                          {
                                                            "@DEF":"protoTS"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  { "Transform":
                                                    {
                                                      "-children":[
                                                        { "Shape":
                                                          {
                                                            "-geometry":
                                                              { "Text":
                                                                {
                                                                  "@DEF":"protoText",
                                                                  "@string":["a="],
                                                                  "IS": {
                                                                      "connect": [
                                                                        {
                                                                          "@nodeField":"string",
                                                                          "@protoField":"textString"
                                                                        }
                                                                      ]
                                                                  },
                                                                  "-fontStyle":
                                                                    { "FontStyle":
                                                                      {
                                                                        "@size":0.20
                                                                      }
                                                                    }
                                                                }
                                                              },
                                                            "-appearance":
                                                              { "Appearance":
                                                                {
                                                                  "-material":
                                                                    { "Material":
                                                                      {
                                                                        "@diffuseColor":[1,1,1]
                                                                      }
                                                                    }
                                                                }
                                                              }
                                                          }
                                                        },
                                                        { "Transform":
                                                          {
                                                            "IS": {
                                                                "connect": [
                                                                  {
                                                                    "@nodeField":"translation",
                                                                    "@protoField":"numberTranslation"
                                                                  }
                                                                ]
                                                            },
                                                            "-children":[
                                                              { "Shape":
                                                                {
                                                                  "-geometry":
                                                                    { "Text":
                                                                      {
                                                                        "@DEF":"protoNumber",
                                                                        "@string":["0"],
                                                                        "-fontStyle":
                                                                          { "FontStyle":
                                                                            {
                                                                              "@size":0.20
                                                                            }
                                                                          }
                                                                      }
                                                                    },
                                                                  "-appearance":
                                                                    { "Appearance":
                                                                      {
                                                                        "-material":
                                                                          { "Material":
                                                                            {
                                                                              "@diffuseColor":[1,1,1]
                                                                            }
                                                                          }
                                                                      }
                                                                    }
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      { "Script":
                                        {
                                          "@DEF":"protoValueTransformerScript",
                                          "@directOutput":true,
                                          "@mustEvaluate":true,
                                          "field": [
                                            {
                                              "@name":"protoScale",
                                              "@accessType":"inputOutput",
                                              "@type":"SFFloat",
                                              "@value":30
                                            },
                                            {
                                              "@name":"shader",
                                              "@accessType":"inputOutput",
                                              "@type":"SFNode"
                                            },
                                            {
                                              "@name":"newTranslation",
                                              "@accessType":"inputOutput",
                                              "@type":"SFVec3f",
                                              "@value":[1.0,1.0,1.0]
                                            },
                                            {
                                              "@name":"protoValue_changed",
                                              "@accessType":"inputOutput",
                                              "@type":"SFFloat",
                                              "@value":1.0
                                            },
                                            {
                                              "@name":"protoNumber_changed",
                                              "@accessType":"inputOutput",
                                              "@type":"MFString",
                                              "@value":["0.0"]
                                            },
                                            {
                                              "@name":"protoParameterName",
                                              "@accessType":"inputOutput",
                                              "@type":"SFString",
                                              "@value":"a"
                                            }
                                          ],
                                          "IS": {
                                              "connect": [
                                                {
                                                  "@nodeField":"protoScale",
                                                  "@protoField":"parameterScale"
                                                },
                                                {
                                                  "@nodeField":"protoParameterName",
                                                  "@protoField":"parameterName"
                                                },
                                                {
                                                  "@nodeField":"shader",
                                                  "@protoField":"shaderNode"
                                                }
                                              ]
                                          },
                                          "#sourceCode":[
"",
"ecmascript:",
"\tconst newTranslation = function(Value) {",
"\t    protoValue_changed = Value[0] * protoScale;",
"\t    protoNumber_changed = new MFString(protoValue_changed.toFixed(2).toString());",
"\t    Browser.println(\"In newTranslation:\");",
"\t    Browser.println(shader);",
"\t    Browser.println(Value[0]);",
"\t    Browser.println(Value.x);",
"\t    Browser.println(protoScale);",
"\t    Browser.println(Value[0] * protoScale);",
"\t    Browser.println(protoParameterName);",
"\t\t\t\t\t// shader[protoParameterName] = Value[0] * protoScale;",
"\t};",
"",
"\t      "
]
                                        }
                                      },
                                      { "ROUTE":
                                        {
                                          "@fromField":"translation_changed",
                                          "@fromNode":"protoSensor",
                                          "@toField":"set_translation",
                                          "@toNode":"protoTransform"
                                        }
                                      },
                                      { "ROUTE":
                                        {
                                          "@fromField":"translation_changed",
                                          "@fromNode":"protoSensor",
                                          "@toField":"newTranslation",
                                          "@toNode":"protoValueTransformerScript"
                                        }
                                      },
                                      { "ROUTE":
                                        {
                                          "@fromField":"protoNumber_changed",
                                          "@fromNode":"protoValueTransformerScript",
                                          "@toField":"string",
                                          "@toNode":"protoNumber"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                          }
                        }
                      },
                      { "ProtoInstance":
                        {
                          "@name":"SliderProto",
                          "@DEF":"aPI",
                          "fieldValue": [
                            {
                              "@name":"sliderTranslation",
                              "@value":[0,0.7,0]
                            },
                            {
                              "@name":"transformTranslation",
                              "@value":[0,0,0.1]
                            },
                            {
                              "@name":"sensorTranslation",
                              "@value":[0,0,0.0]
                            },
                            {
                              "@name":"numberTranslation",
                              "@value":[0.3,0,0.0]
                            },
                            {
                              "@name":"textString",
                              "@value":["a="]
                            },
                            {
                              "@name":"parameterName",
                              "@value":"a"
                            },
                            {
                              "@name":"parameterScale",
                              "@value":30
                            },
                            {
                              "@name":"shaderNode",
                              "-children":[
                                { "ComposedShader":
                                  {
                                    "@USE":"freewrlShader"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      { "ProtoInstance":
                        {
                          "@name":"SliderProto",
                          "@DEF":"bPI",
                          "fieldValue": [
                            {
                              "@name":"sliderTranslation",
                              "@value":[0,0.4,0]
                            },
                            {
                              "@name":"transformTranslation",
                              "@value":[0,0,0.1]
                            },
                            {
                              "@name":"sensorTranslation",
                              "@value":[0,0,0.0]
                            },
                            {
                              "@name":"numberTranslation",
                              "@value":[0.3,0,0.0]
                            },
                            {
                              "@name":"textString",
                              "@value":["b="]
                            },
                            {
                              "@name":"parameterName",
                              "@value":"b"
                            },
                            {
                              "@name":"parameterScale",
                              "@value":30
                            },
                            {
                              "@name":"shaderNode",
                              "-children":[
                                { "ComposedShader":
                                  {
                                    "@USE":"freewrlShader"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      { "ProtoInstance":
                        {
                          "@name":"SliderProto",
                          "@DEF":"cPI",
                          "fieldValue": [
                            {
                              "@name":"sliderTranslation",
                              "@value":[0,0.1,0]
                            },
                            {
                              "@name":"transformTranslation",
                              "@value":[0,0,0.1]
                            },
                            {
                              "@name":"sensorTranslation",
                              "@value":[0,0,0.0]
                            },
                            {
                              "@name":"numberTranslation",
                              "@value":[0.3,0,0.0]
                            },
                            {
                              "@name":"textString",
                              "@value":["c="]
                            },
                            {
                              "@name":"parameterName",
                              "@value":"c"
                            },
                            {
                              "@name":"parameterScale",
                              "@value":20
                            },
                            {
                              "@name":"shaderNode",
                              "-children":[
                                { "ComposedShader":
                                  {
                                    "@USE":"freewrlShader"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      { "ProtoInstance":
                        {
                          "@name":"SliderProto",
                          "@DEF":"dPI",
                          "fieldValue": [
                            {
                              "@name":"sliderTranslation",
                              "@value":[0,-0.2,0]
                            },
                            {
                              "@name":"transformTranslation",
                              "@value":[0,0,0.1]
                            },
                            {
                              "@name":"sensorTranslation",
                              "@value":[0,0,0.0]
                            },
                            {
                              "@name":"numberTranslation",
                              "@value":[0.3,0,0.0]
                            },
                            {
                              "@name":"textString",
                              "@value":["d="]
                            },
                            {
                              "@name":"parameterName",
                              "@value":"d"
                            },
                            {
                              "@name":"parameterScale",
                              "@value":20
                            },
                            {
                              "@name":"shaderNode",
                              "-children":[
                                { "ComposedShader":
                                  {
                                    "@USE":"freewrlShader"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      { "ProtoInstance":
                        {
                          "@name":"SliderProto",
                          "@DEF":"tdeltaPI",
                          "fieldValue": [
                            {
                              "@name":"sliderTranslation",
                              "@value":[0,-0.5,0]
                            },
                            {
                              "@name":"transformTranslation",
                              "@value":[0,0,0.1]
                            },
                            {
                              "@name":"sensorTranslation",
                              "@value":[0,0,0.0]
                            },
                            {
                              "@name":"numberTranslation",
                              "@value":[0.8,0,0.0]
                            },
                            {
                              "@name":"textString",
                              "@value":["tdelta="]
                            },
                            {
                              "@name":"parameterName",
                              "@value":"tdelta"
                            },
                            {
                              "@name":"parameterScale",
                              "@value":6.28
                            },
                            {
                              "@name":"shaderNode",
                              "-children":[
                                { "ComposedShader":
                                  {
                                    "@USE":"freewrlShader"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      { "ProtoInstance":
                        {
                          "@name":"SliderProto",
                          "@DEF":"pdeltaPI",
                          "fieldValue": [
                            {
                              "@name":"sliderTranslation",
                              "@value":[0,-0.8,0]
                            },
                            {
                              "@name":"transformTranslation",
                              "@value":[0,0,0.1]
                            },
                            {
                              "@name":"sensorTranslation",
                              "@value":[0,0,0.0]
                            },
                            {
                              "@name":"numberTranslation",
                              "@value":[0.8,0,0.0]
                            },
                            {
                              "@name":"textString",
                              "@value":["pdelta="]
                            },
                            {
                              "@name":"parameterName",
                              "@value":"pdelta"
                            },
                            {
                              "@name":"parameterScale",
                              "@value":6.28
                            },
                            {
                              "@name":"shaderNode",
                              "-children":[
                                { "ComposedShader":
                                  {
                                    "@USE":"freewrlShader"
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    "-layout":
                      { "Layout":
                        {
                          "@align":["LEFT","BOTTOM"],
                          "@offset":[-0.50,0]
                        }
                      },
                    "-viewport":
                      { "Viewport":
                        {
                        }
                      }
                  }
                }
              ]
            }
          }
        ]
    }
  }
}