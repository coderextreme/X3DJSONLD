<svrl:schematron-output xmlns:iso="http://purl.oclc.org/dsdl/schematron" xmlns:schold="http://www.ascc.net/xml/schematron" xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" title="X3D Graphics Validity Checks using Schematron" schemaVersion=""><!--   
		   
		   
		 -->
   <svrl:active-pattern document="file:/C:/Users/jcarl/X3DJSONLD/src/main/data/InlineSoundSource.x3d"/>
   <svrl:fired-rule context="X3D | *[(upper-case(local-name()) = 'X3D')]"/>
   <svrl:successful-report test="$profileLegal and not($profileMatch) and not(/X3D/head/component) and $interactiveProfile" role="info" location="/X3D">
      <svrl:text>&lt;X3D profile='Full'&gt; definition is insufficient since nodes in scene have actual profile='Interactive'
         </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$profileLegal and not($profileMatch) and not(/X3D/head/component) and $cadInterchangeProfile" role="info" location="/X3D">
      <svrl:text>&lt;X3D profile='Full'&gt; definition is insufficient since nodes in scene have actual profile='CADInterchange'
         </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$profileLegal and not($profileMatch) and not(/X3D/head/component) and $medicalInterchangeProfile" role="info" location="/X3D">
      <svrl:text>&lt;X3D profile='Full'&gt; definition is insufficient since nodes in scene have actual profile='MedicalInterchange'
         </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$profileLegal and (//Inline[not(MetadataString)][not(@USE)]) and not($fullProfile)" role="info" location="/X3D">
      <svrl:text>&lt;X3D profile='Full'&gt; is satisfactory for this model - also ensure that child Inline models do not exceed
         this profile/component combination, since this parent scene must have an equal or
         higher combination </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="(@version='4.0')" role="diagnostic" location="/X3D">
      <svrl:text>X3D version 4.0 was approved by Web3D Consortium and ISO in 2023.</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="(@version='4.0')" role="diagnostic" location="/X3D">
      <svrl:text>X3D version 4.0 offers many new features including interoperability with HTML5, glTF
         2.0 Physically Based Rendering (PBR), and Web Audio API.</svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="head | *[(lower-case(local-name()) = 'head')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta[(@name='error') or (@name='warning') or (@name='hint') or (@name='info') or starts-with(@name,'TODO')]"/>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/head/meta[3]">
      <svrl:text>&lt;meta name='info' content='This work presents an innovative solution of the spatial sound in X3DOM framework,
         that based on a combinational methodology. Specifically, we suggested the enrichment
         of X3DOM with spatial sound features, using both the X3D sound nodes and the structure
         of Web Audio API.'/&gt; </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta[(@name='error') or (@name='warning') or (@name='hint') or (@name='info') or starts-with(@name,'TODO')]"/>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/head/meta[8]">
      <svrl:text>&lt;meta name='TODO' content='credit for audio files'/&gt; </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="Scene | *[(lower-case(local-name()) = 'scene')]"/>
   <svrl:fired-rule context="WorldInfo"/>
   <svrl:fired-rule context="NavigationInfo"/>
   <svrl:fired-rule context="Background"/>
   <svrl:fired-rule context="Viewpoint | OrthoViewpoint"/>
   <svrl:failed-assert test="not(@description = @DEF) or (string-length(@description) = 0)" role="hint" location="/X3D/Scene/Viewpoint">
      <svrl:text>&lt;Viewpoint DEF='Camera001'/&gt; description should be different than DEF, provide a descriptive phrase for description
         instead </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="IndexedFaceSet | IndexedLineSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="Normal"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Inline"/>
</svrl:schematron-output>