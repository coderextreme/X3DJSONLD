{
  "X3D": {
    "@profile": "Immersive",
    "@version": "4.0",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "arc2.x3d"
        },
        {
          "@name": "creator",
          "@content": "Lost, Doug Sanden I think"
        },
        {
          "@name": "generator",
          "@content": "manual"
        },
        {
          "@name": "generator",
          "@content": "x3d-tidy V1.0.117, https://www.npmjs.com/package/x3d-tidy"
        },
        {
          "@name": "translated",
          "@content": "15 December 2023"
        },
        {
          "@name": "generator",
          "@content": "DOM2JSONSerializer.js, https://github.com/coderextreme/X3DJSONLD/blob/master/src/main/node/DOM2JSONSerializer.js"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "Viewpoint": {
            "@description": "Only Viewpoint",
            "@position": [
              0,
              0,
              5
            ]
          }
        },
        {
          "Background": {
            "@skyColor": [
              0.4,
              0.4,
              0.4
            ]
          }
        },
        {
          "Transform": {
            "@DEF": "G1",
            "-children": [
              {
                "Transform": {
                  "@DEF": "DECLpoint_INSTANCE_node",
                  "@translation": [
                    0,
                    3.063334,
                    0
                  ],
                  "-children": [
                    {
                      "Shape": {
                        "-children": [
                          {
                            "Appearance": {
                              "-children": [
                                {
                                  "Material": {
                                    "@diffuseColor": [
                                      1,
                                      0,
                                      0
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "Sphere": {
                              "@radius": 0.1
                            }
                          }
                        ]
                      }
                    },
                    {
                      "PositionInterpolator": {
                        "@DEF": "DECLpoint_INSTANCE_PI1",
                        "@key": [
                          0,
                          1
                        ],
                        "@keyValue": [
                          0,
                          0,
                          0,
                          0,
                          5,
                          0
                        ]
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "DECLpoint_INSTANCE_MB1",
                        "field": [
                          {
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@name": "translation"
                          },
                          {
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@name": "old"
                          },
                          {
                            "@accessType": "inputOnly",
                            "@type": "SFTime",
                            "@name": "set_location"
                          },
                          {
                            "@accessType": "inputOutput",
                            "@type": "MFVec3f",
                            "@name": "keyValue",
                            "@value": [
                              0,
                              0,
                              0,
                              0,
                              5,
                              0
                            ]
                          }
                        ],
                        "#sourceCode": [
                          "ecmascript:\r",
                          "               function set_location(value) {\r",
                          "                    old = translation;\r",
                          "                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\r",
                          "                    keyValue = new MFVec3f(old, translation);\r",
                          "               }"
                        ]
                      }
                    },
                    {
                      "TimeSensor": {
                        "@DEF": "DECLpoint_INSTANCE_CL1",
                        "@cycleInterval": 3,
                        "@loop": true
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "Transform": {
            "@DEF": "G2",
            "-children": [
              {
                "Transform": {
                  "@DEF": "DECLpoint_INSTANCE1000_node",
                  "@translation": [
                    0,
                    3.063334,
                    0
                  ],
                  "-children": [
                    {
                      "Shape": {
                        "-children": [
                          {
                            "Appearance": {
                              "-children": [
                                {
                                  "Material": {
                                    "@diffuseColor": [
                                      1,
                                      0,
                                      0
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "Sphere": {
                              "@radius": 0.1
                            }
                          }
                        ]
                      }
                    },
                    {
                      "PositionInterpolator": {
                        "@DEF": "DECLpoint_INSTANCE1000_PI1",
                        "@key": [
                          0,
                          1
                        ],
                        "@keyValue": [
                          0,
                          0,
                          0,
                          0,
                          5,
                          0
                        ]
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "DECLpoint_INSTANCE1000_MB1",
                        "field": [
                          {
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@name": "translation"
                          },
                          {
                            "@accessType": "inputOutput",
                            "@type": "SFVec3f",
                            "@name": "old"
                          },
                          {
                            "@accessType": "inputOnly",
                            "@type": "SFTime",
                            "@name": "set_location"
                          },
                          {
                            "@accessType": "inputOutput",
                            "@type": "MFVec3f",
                            "@name": "keyValue",
                            "@value": [
                              0,
                              0,
                              0,
                              0,
                              5,
                              0
                            ]
                          }
                        ],
                        "#sourceCode": [
                          "ecmascript:\r",
                          "               function set_location(value) {\r",
                          "                    old = translation;\r",
                          "                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\r",
                          "                    keyValue = new MFVec3f(old, translation);\r",
                          "               }"
                        ]
                      }
                    },
                    {
                      "TimeSensor": {
                        "@DEF": "DECLpoint_INSTANCE1000_CL1",
                        "@cycleInterval": 3,
                        "@loop": true
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "Transform": {
            "@DEF": "transC1",
            "-children": [
              {
                "Transform": {
                  "@DEF": "rotscaleC1",
                  "-children": [
                    {
                      "Shape": {
                        "-children": [
                          {
                            "Appearance": {
                              "-children": [
                                {
                                  "Material": {
                                    "@diffuseColor": [
                                      0.2,
                                      0.7,
                                      0.7
                                    ],
                                    "@transparency": 0.5
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "Cylinder": {
                              "@radius": 0.05
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "Script": {
            "@DEF": "DECLx3dconnector_connector1_S1",
            "field": [
              {
                "@accessType": "initializeOnly",
                "@type": "SFNode",
                "@name": "startnode",
                "-children": [
                  {
                    "Transform": {
                      "@USE": "G1"
                    }
                  }
                ]
              },
              {
                "@accessType": "initializeOnly",
                "@type": "SFNode",
                "@name": "endnode",
                "-children": [
                  {
                    "Transform": {
                      "@USE": "G2"
                    }
                  }
                ]
              },
              {
                "@accessType": "initializeOnly",
                "@type": "SFNode",
                "@name": "transC1",
                "-children": [
                  {
                    "Transform": {
                      "@USE": "transC1"
                    }
                  }
                ]
              },
              {
                "@accessType": "initializeOnly",
                "@type": "SFNode",
                "@name": "rotscaleC1",
                "-children": [
                  {
                    "Transform": {
                      "@USE": "rotscaleC1"
                    }
                  }
                ]
              },
              {
                "@accessType": "inputOnly",
                "@type": "SFVec3f",
                "@name": "set_startpoint"
              },
              {
                "@accessType": "inputOnly",
                "@type": "SFVec3f",
                "@name": "set_endpoint"
              }
            ],
            "#sourceCode": [
              "ecmascript:\r",
              "        function recompute(startpoint,endpoint){\r",
              "\t    if (typeof endpoint === 'undefined') {\r",
              "\t\treturn;\r",
              "\t    }\r",
              "            var dif = endpoint.subtract(startpoint);\r",
              "            var dist = dif.length()*0.5;\r",
              "            var dif2 = dif.multiply(0.5);\r",
              "            var norm = dif.normalize();\r",
              "            var transl = startpoint.add(dif2);\r",
              "\t    if (typeof Quaternion !== 'undefined') {\r",
              "\t\t    return {\r",
              "\t\t\t    scale : new SFVec3f(1.0,dist,1.0),\r",
              "\t\t\t    translation : transl,\r",
              "\t\t\t    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)\r",
              "\t\t    };\r",
              "\t    } else {\r",
              "\t\t    return {\r",
              "\t\t\t    scale : new SFVec3f(1.0,dist,1.0),\r",
              "\t\t\t    translation : transl,\r",
              "\t\t\t    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)\r",
              "\t\t    };\r",
              "\t    }\r",
              "\t}\r",
              "\tfunction recompute_and_route(startpoint, endpoint) {\r",
              "\t      var trafo = recompute(startpoint, endpoint);\r",
              "\t      transC1.translation = trafo.translation;\r",
              "\t      rotscaleC1.rotation = trafo.rotation;\r",
              "\t      rotscaleC1.scale = trafo.scale;\r",
              "\t}\r",
              "        function initialize(){\r",
              "            recompute_and_route(startnode.translation,endnode.translation);\r",
              "        }\r",
              "        function set_startpoint(val,t){\r",
              "            recompute_and_route(val,endnode.translation);\r",
              "        }\r",
              "        function set_endpoint(val,t){\r",
              "            recompute_and_route(startnode.translation,val);\r",
              "        }"
            ]
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE_CL1",
            "@fromField": "cycleTime",
            "@toNode": "DECLpoint_INSTANCE_MB1",
            "@toField": "set_location"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE_CL1",
            "@fromField": "fraction_changed",
            "@toNode": "DECLpoint_INSTANCE_PI1",
            "@toField": "set_fraction"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE_MB1",
            "@fromField": "keyValue",
            "@toNode": "DECLpoint_INSTANCE_PI1",
            "@toField": "keyValue"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE_PI1",
            "@fromField": "value_changed",
            "@toNode": "DECLpoint_INSTANCE_node",
            "@toField": "translation"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE_MB1",
            "@fromField": "translation",
            "@toNode": "DECLpoint_INSTANCE_node",
            "@toField": "translation"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE1000_CL1",
            "@fromField": "cycleTime",
            "@toNode": "DECLpoint_INSTANCE1000_MB1",
            "@toField": "set_location"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE1000_CL1",
            "@fromField": "fraction_changed",
            "@toNode": "DECLpoint_INSTANCE1000_PI1",
            "@toField": "set_fraction"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE1000_MB1",
            "@fromField": "keyValue",
            "@toNode": "DECLpoint_INSTANCE1000_PI1",
            "@toField": "keyValue"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE1000_PI1",
            "@fromField": "value_changed",
            "@toNode": "DECLpoint_INSTANCE1000_node",
            "@toField": "translation"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLpoint_INSTANCE1000_MB1",
            "@fromField": "translation",
            "@toNode": "DECLpoint_INSTANCE1000_node",
            "@toField": "translation"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "G1",
            "@fromField": "translation",
            "@toNode": "DECLx3dconnector_connector1_S1",
            "@toField": "set_startpoint"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "G2",
            "@fromField": "translation",
            "@toNode": "DECLx3dconnector_connector1_S1",
            "@toField": "set_endpoint"
          }
        }
      ]
    },
    "encoding": "UTF-8",
    "JSON schema": "https://www.web3d.org/specifications/x3d-4.0-JSONSchema.json"
  }
}