{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"https://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-4.0-JSONSchema.autogenerated.json",
    "head": {
        "meta": [
          {
            "@name":"creator",
            "@content":"John W Carlson"
          },
          {
            "@name":"created",
            "@content":"December 13 2015"
          },
          {
            "@name":"modified",
            "@content":"April 18 2017"
          },
          {
            "@name":"title",
            "@content":"fors2.x3d"
          },
          {
            "@name":"identifier",
            "@content":"https://coderextreme.net/X3DJSONLD/src/main/data/fors2.x3d"
          },
          {
            "@name":"description",
            "@content":"beginnings of a force directed graph in 3D"
          },
          {
            "@name":"generator",
            "@content":"Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"translated",
            "@content":"14 September 2023"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"node",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"position",
                      "@accessType":"inputOutput",
                      "@type":"SFVec3f",
                      "@value":[0,0,0]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Transform":
                      {
                        "@DEF":"transform",
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"translation",
                                "@protoField":"position"
                              }
                            ]
                        },
                        "-children":[
                          { "Shape":
                            {
                              "-children":[
                                {
                                  "#comment":"comment before Sphere"
                                },
                                {
                                  "#comment":"comment after Sphere"
                                },
                                {
                                  "#comment":"comment after Appearance"
                                }
                              ],
                              "-geometry":
                                { "Sphere":
                                  {
                                  }
                                },
                              "-appearance":
                                { "Appearance":
                                  {
                                    "-children":[
                                      {
                                        "#comment":"comment before Material"
                                      },
                                      {
                                        "#comment":"comment after Material"
                                      }
                                    ],
                                    "-material":
                                      { "Material":
                                        {
                                          "@diffuseColor":[1,0,0]
                                        }
                                      }
                                  }
                                }
                            }
                          }
                        ]
                      }
                    },
                    { "PositionInterpolator":
                      {
                        "@DEF":"NodePosition",
                        "@key":[0,1],
                        "@keyValue":[0,0,0,0,5,0]
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"MoveBall",
                        "field": [
                          {
                            "@name":"translation",
                            "@accessType":"inputOutput",
                            "@type":"SFVec3f",
                            "@value":[50,50,0]
                          },
                          {
                            "@name":"old",
                            "@accessType":"inputOutput",
                            "@type":"SFVec3f",
                            "@value":[0,0,0]
                          },
                          {
                            "@name":"set_cycle",
                            "@accessType":"inputOnly",
                            "@type":"SFTime"
                          },
                          {
                            "@name":"keyValue",
                            "@accessType":"outputOnly",
                            "@type":"MFVec3f"
                          }
                        ],
                        "#sourceCode":[
"",
" ecmascript:",
"\t\t\t\t\tfunction set_cycle(value) {",
"                                                old = translation;",
"\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);",
"                                                keyValue = new MFVec3f([old, translation]);",
"\t\t\t\t\t\t// Browser.println(translation);",
"\t\t\t\t\t}",
""
]
                      }
                    },
                    { "TimeSensor":
                      {
                        "@DEF":"nodeClock",
                        "@cycleInterval":3,
                        "@loop":true
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"nodeClock",
                        "@fromField":"cycleTime",
                        "@toNode":"MoveBall",
                        "@toField":"set_cycle"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"nodeClock",
                        "@fromField":"fraction_changed",
                        "@toNode":"NodePosition",
                        "@toField":"set_fraction"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"MoveBall",
                        "@fromField":"keyValue",
                        "@toNode":"NodePosition",
                        "@toField":"keyValue"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"NodePosition",
                        "@fromField":"value_changed",
                        "@toNode":"transform",
                        "@toField":"set_translation"
                      }
                    }
                  ]
              }
            }
          },
          { "ProtoDeclare":
            {
              "@name":"cylinder",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"positionA",
                      "@accessType":"inputOnly",
                      "@type":"SFVec3f"
                    },
                    {
                      "@name":"positionB",
                      "@accessType":"inputOnly",
                      "@type":"SFVec3f"
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Shape":
                      {
                        "-geometry":
                          { "Extrusion":
                            {
                              "@DEF":"extrusion",
                              "@creaseAngle":0.785,
                              "@crossSection":[1,0,0.92,-0.38,0.71,-0.71,0.38,-0.92,0,-1,-0.38,-0.92,-0.71,-0.71,-0.92,-0.38,-1,0,-0.92,0.38,-0.71,0.71,-0.38,0.92,0,1,0.38,0.92,0.71,0.71,0.92,0.38,1,0],
                              "@spine":[0,-50,0,0,0,0,0,50,0]
                            }
                          },
                        "-appearance":
                          { "Appearance":
                            {
                              "-material":
                                { "Material":
                                  {
                                    "@diffuseColor":[0,1,0]
                                  }
                                }
                            }
                          }
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"MoveCylinder",
                        "field": [
                          {
                            "@name":"spine",
                            "@accessType":"inputOutput",
                            "@type":"MFVec3f",
                            "@value":[0,-50,0,0,0,0,0,50,0]
                          },
                          {
                            "@name":"set_endA",
                            "@accessType":"inputOnly",
                            "@type":"SFVec3f"
                          },
                          {
                            "@name":"set_endB",
                            "@accessType":"inputOnly",
                            "@type":"SFVec3f"
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"set_endA",
                                "@protoField":"positionA"
                              },
                              {
                                "@nodeField":"set_endB",
                                "@protoField":"positionB"
                              }
                            ]
                        },
                        "#sourceCode":[
"",
" ecmascript:",
"",
"                function set_endA(value) {",
"\t\t    if (typeof spine === \"undefined\") {",
"\t\t        spine = new MFVec3f([value, value]);",
"\t\t    } else {",
"\t\t        spine = new MFVec3f([value, spine[1]]);",
"\t\t    }",
"                }",
"",
"                function set_endB(value) {",
"\t\t    if (typeof spine === \"undefined\") {",
"\t\t        spine = new MFVec3f([value, value]);",
"\t\t    } else {",
"\t\t        spine = new MFVec3f([spine[0], value]);",
"\t\t    }",
"                }",
"",
"                function set_spine(value) {",
"\t\t    Browser.print('\n'+'\"');",
"                    spine = value;",
"                }",
""
]
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"MoveCylinder",
                        "@fromField":"spine",
                        "@toNode":"extrusion",
                        "@toField":"set_spine"
                      }
                    }
                  ]
              }
            }
          },
          { "Transform":
            {
              "@scale":[0.1,0.1,0.1],
              "-children":[
                { "ProtoInstance":
                  {
                    "@name":"node",
                    "@DEF":"nodeA",
                    "fieldValue": [
                      {
                        "@name":"position",
                        "@value":[-50,-50,-50]
                      }
                    ]
                  }
                },
                { "ProtoInstance":
                  {
                    "@name":"node",
                    "@DEF":"nodeB",
                    "fieldValue": [
                      {
                        "@name":"position",
                        "@value":[50,50,50]
                      }
                    ]
                  }
                },
                { "ProtoInstance":
                  {
                    "@name":"cylinder",
                    "@DEF":"linkA",
                    "fieldValue": [
                      {
                        "@name":"positionA",
                        "@value":[0,0,0]
                      },
                      {
                        "@name":"positionB",
                        "@value":[50,50,50]
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "ROUTE":
            {
              "@fromNode":"nodeA",
              "@fromField":"position",
              "@toNode":"linkA",
              "@toField":"positionA"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"nodeB",
              "@fromField":"position",
              "@toNode":"linkA",
              "@toField":"positionB"
            }
          }
        ]
    }
  }
}