{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "4.0",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "arc"
        },
        {
          "@name": "creator",
          "@content": "Lost, Doug Sanden I think"
        },
        {
          "@name": "generator",
          "@content": "manual"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/src/main/data/x3dconnectorProto.x3d"
        },
        {
          "@name": "description",
          "@content": "a generic proto to connect two objects"
        },
        {
          "@name": "converter",
          "@content": "x3d-tidy V1.0.56, https://www.npmjs.com/package/x3d-tidy"
        },
        {
          "@name": "converted",
          "@content": "Mon, 04 Sep 2023 09:25:28 GMT"
        }
      ]
    },
    "Scene": {
      "-children": [
        { "ProtoDeclare":
          {
            "@name":"point",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "inputOutput",
                  "@type": "SFVec3f",
                  "@name": "translation"
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                { "Transform":
                  {
                    "@DEF": "node",
                    "-children": [
                      { "Shape":
                        {
                          "-appearance": { "Appearance":
                            {
                              "-material": { "Material":
                                {
                                  "@diffuseColor": [ 1, 0, 0 ]
                                }
                              }
                            }
                          },
                          "-geometry": { "Sphere":
                            {
                              "@radius": 0.1
                            }
                          }
                        }
                      },
                      { "PositionInterpolator":
                        {
                          "@DEF": "PI1",
                          "@key": [
                            0,
                            1
                          ],
                          "@keyValue": [
                            0, 0, 0,
                            0, 5, 0
                          ]
                        }
                      },
                      { "Script":
                        {
                          "@DEF": "MB1",
                          "field": [
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFVec3f",
                              "@name": "translation",
                              "@value": [ 50, 50, 0 ]
                            },
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFVec3f",
                              "@name": "old"
                            },
                            {
                              "@accessType": "inputOnly",
                              "@type": "SFTime",
                              "@name": "set_location"
                            },
                            {
                              "@accessType": "inputOutput",
                              "@type": "MFVec3f",
                              "@name": "keyValue",
                              "@value": [
                                0, 0, 0,
                                0, 5, 0
                              ]
                            }
                          ],
                          "#sourceText": [
                            "\r",
                            "ecmascript:\r",
                            "\t\tfunction set_location(value) {\r",
                            "                    old = translation;\r",
                            "\t\t    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\r",
                            "                    keyValue = new MFVec3f([old, translation]);\r",
                            "\t\t    // Browser.println(keyValue);\r",
                            "\t\t}\r",
                            ""
                          ]
                        }
                      },
                      { "TimeSensor":
                        {
                          "@DEF": "CL1",
                          "@cycleInterval": 3,
                          "@loop": true
                        }
                      }
                    ],
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "translation",
                          "@protoField": "translation"
                        }
                      ]
                    }
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "CL1",
                    "@fromField": "cycleTime",
                    "@toNode": "MB1",
                    "@toField": "set_location"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "CL1",
                    "@fromField": "fraction_changed",
                    "@toNode": "PI1",
                    "@toField": "set_fraction"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "MB1",
                    "@fromField": "keyValue",
                    "@toNode": "PI1",
                    "@toField": "keyValue"
                  }
                },
                { "ROUTE":
                  {
                    "@fromNode": "PI1",
                    "@fromField": "value_changed",
                    "@toNode": "node",
                    "@toField": "translation"
                  }
                }
              ]
            }
          }
        },
        { "ProtoDeclare":
          {
            "@name":"x3dconnector",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "initializeOnly",
                  "@type": "SFNode",
                  "@name": "startnode"
                },
                {
                  "@accessType": "initializeOnly",
                  "@type": "SFNode",
                  "@name": "endnode"
                },
                {
                  "@accessType": "inputOnly",
                  "@type": "SFVec3f",
                  "@name": "set_startpoint"
                },
                {
                  "@accessType": "inputOnly",
                  "@type": "SFVec3f",
                  "@name": "set_endpoint"
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                { "Group":
                  {
                    "-children": [
                      { "Transform":
                        {
                          "@DEF": "trans",
                          "-children": [
                            { "Transform":
                              {
                                "@DEF": "rotscale",
                                "-children": [
                                  { "Shape":
                                    {
                                      "-appearance": { "Appearance":
                                        {
                                          "-material": { "Material":
                                            {
                                              "@diffuseColor": [ 0.2, 0.7, 0.7 ],
                                              "@transparency": 0.5
                                            }
                                          }
                                        }
                                      },
                                      "-geometry": { "Cylinder":
                                        {
                                          "@radius": 0.05
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      { "Script":
                        {
                          "@DEF": "S1",
                          "field": [
                            {
                              "@accessType": "initializeOnly",
                              "@type": "SFNode",
                              "@name": "startnode"
                            },
                            {
                              "@accessType": "initializeOnly",
                              "@type": "SFNode",
                              "@name": "endnode"
                            },
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFNode",
                              "@name": "position",
                              "-children": [
                                { "Transform":
                                  {
                                    "@USE": "trans"
                                  }
                                }
                              ]
                            },
                            {
                              "@accessType": "inputOutput",
                              "@type": "SFNode",
                              "@name": "rotscale",
                              "-children": [
                                { "Transform":
                                  {
                                    "@USE": "rotscale"
                                  }
                                }
                              ]
                            },
                            {
                              "@accessType": "inputOnly",
                              "@type": "SFVec3f",
                              "@name": "set_startpoint"
                            },
                            {
                              "@accessType": "inputOnly",
                              "@type": "SFVec3f",
                              "@name": "set_endpoint"
                            }
                          ],
                          "#sourceText": [
                            "ecmascript:\r",
                            "        function recompute(startpoint,endpoint){\r",
                            "\t    if (typeof endpoint === 'undefined') {\r",
                            "\t\treturn;\r",
                            "\t    }\r",
                            "            var dif = endpoint.subtract(startpoint);\r",
                            "            var dist = dif.length()*0.5;\r",
                            "            var dif2 = dif.multiply(0.5);\r",
                            "            var norm = dif.normalize();\r",
                            "            var transl = startpoint.add(dif2);\r",
                            "\t    if (typeof Quaternion !== 'undefined') {\r",
                            "\t\t    return {\r",
                            "\t\t\t    scale : new SFVec3f(1.0,dist,1.0),\r",
                            "\t\t\t    translation : transl,\r",
                            "\t\t\t    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)\r",
                            "\t\t    };\r",
                            "\t    } else if (typeof SFRotation !== 'undefined') {\r",
                            "\t\t    return {\r",
                            "\t\t\t    scale : new SFVec3f(1.0,dist,1.0),\r",
                            "\t\t\t    translation : transl,\r",
                            "\t\t\t    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)\r",
                            "\t\t    };\r",
                            "\t    } else {\r",
                            "\t\t    return {\r",
                            "\t\t\t    scale : new SFVec3f(1.0,dist,1.0),\r",
                            "\t\t\t    translation : transl\r",
                            "\t\t    };\r",
                            "\t    }\r",
                            "\t}\r",
                            "\tfunction recompute_and_route(startpoint, endpoint) {\r",
                            "\t      var trafo = recompute(startpoint, endpoint);\r",
                            "\t      if (trafo) {\r",
                            "\t\t      position.translation = trafo.translation;\r",
                            "\t\t      rotscale.rotation = trafo.rotation;\r",
                            "\t\t      rotscale.scale = trafo.scale;\r",
                            "\t      }\r",
                            "\t}\r",
                            "        function initialize(){\r",
                            "            recompute_and_route(startnode.translation,endnode.translation);\r",
                            "        }\r",
                            "        function set_startpoint(val,t){\r",
                            "            recompute_and_route(val,endnode.translation);\r",
                            "        }\r",
                            "        function set_endpoint(val,t){\r",
                            "            recompute_and_route(startnode.translation,val);\r",
                            "        }\r",
                            "            "
                          ],
                          "IS": {
                            "connect": [
                              {
                                "@nodeField": "startnode",
                                "@protoField": "startnode"
                              },
                              {
                                "@nodeField": "endnode",
                                "@protoField": "endnode"
                              },
                              {
                                "@nodeField": "set_startpoint",
                                "@protoField": "set_startpoint"
                              },
                              {
                                "@nodeField": "set_endpoint",
                                "@protoField": "set_endpoint"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        { "Viewpoint":
          {
            "@description": "Only Viewpoint",
            "@position": [ 0, 0, 5 ]
          }
        },
        { "Background":
          {
            "@skyColor": [
              0.4, 0.4, 0.4
            ]
          }
        },
        { "ProtoInstance":
          {
            "@DEF": "G1",
            "@name": "point"
          }
        },
        { "ProtoInstance":
          {
            "@DEF": "G2",
            "@name": "point"
          }
        },
        { "ProtoInstance":
          {
            "@DEF": "G3",
            "@name": "point"
          }
        },
        { "ProtoInstance":
          {
            "@DEF": "G4",
            "@name": "point"
          }
        },
        { "ProtoInstance":
          {
            "@DEF": "connector1",
            "@name": "x3dconnector",
            "fieldValue": [
              {
                "@name": "startnode",
                "-children": [
                  { "ProtoInstance":
                    {
                      "@name": "point",
                      "@USE": "G1"
                    }
                  }
                ]
              },
              {
                "@name": "endnode",
                "-children": [
                  { "ProtoInstance":
                    {
                      "@name": "point",
                      "@USE": "G2"
                    }
                  }
                ]
              }
            ]
          }
        },
        { "ProtoInstance":
          {
            "@DEF": "connector2",
            "@name": "x3dconnector",
            "fieldValue": [
              {
                "@name": "startnode",
                "-children": [
                  { "ProtoInstance":
                    {
                      "@name": "point",
                      "@USE": "G1"
                    }
                  }
                ]
              },
              {
                "@name": "endnode",
                "-children": [
                  { "ProtoInstance":
                    {
                      "@name": "point",
                      "@USE": "G3"
                    }
                  }
                ]
              }
            ]
          }
        },
        { "ProtoInstance":
          {
            "@DEF": "connector3",
            "@name": "x3dconnector",
            "fieldValue": [
              {
                "@name": "startnode",
                "-children": [
                  { "ProtoInstance":
                    {
                      "@name": "point",
                      "@USE": "G1"
                    }
                  }
                ]
              },
              {
                "@name": "endnode",
                "-children": [
                  { "ProtoInstance":
                    {
                      "@name": "point",
                      "@USE": "G4"
                    }
                  }
                ]
              }
            ]
          }
        },
        { "ROUTE":
          {
            "@fromNode": "G1",
            "@fromField": "translation",
            "@toNode": "connector1",
            "@toField": "set_startpoint"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "G2",
            "@fromField": "translation",
            "@toNode": "connector1",
            "@toField": "set_endpoint"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "G1",
            "@fromField": "translation",
            "@toNode": "connector2",
            "@toField": "set_startpoint"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "G3",
            "@fromField": "translation",
            "@toNode": "connector2",
            "@toField": "set_endpoint"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "G1",
            "@fromField": "translation",
            "@toNode": "connector3",
            "@toField": "set_startpoint"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "G4",
            "@fromField": "translation",
            "@toNode": "connector3",
            "@toField": "set_endpoint"
          }
        }
      ]
    }
  }
}