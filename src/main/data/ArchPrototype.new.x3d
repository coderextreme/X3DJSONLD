<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
    <head>
        <meta name='title' content='ArchPrototype.x3d'/>
        <meta name='description' content='Create an arch. Can modify general parameters: clearSpanWidth, riseHeight, depth, topAbutmentHeight, pierWidth, pierHeight. See the reference file ArchModelingDiagrams.pdf to find further information. See also ArchPrototypeScript_more_readable.js.'/>
        <meta name='description' content='Possibility to create shapes related to arch: ArchHalf; IntradosOnly; ArchFilled; ArchHalfFilled; Lintel. See the reference file ArchModelingDiagrams.pdf to find further information.'/>
        <meta name='creator' content='Michele Foti, Don Brutzman'/>
        <meta name='created' content='15 December 2014'/>
        <meta name='modified' content='27 November 2015'/>
        <meta name='reference' content='ArchModelingDiagrams.pdf'/>
        <meta name='reference' content='https://en.wikipedia.org/wiki/Arch'/>
        <meta name='identifier' content='http://X3dGraphics.com/examples/X3dForAdvancedModeling/Buildings/ArchPrototype.x3d'/>
        <meta name='generator' content='X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit'/>
        <meta name='license' content='../license.html'/>
    </head>
    <Scene>
        <ProtoDeclare name='ArchPrototype' appinfo='Create an arch. Can modify general parameters: clearSpanWidth, riseHeight, depth, topAbutmentHeight, pierWidth, pierHeight. - Possibility to create shapes related to an arch: ArchHalf; IntradosOnly; ArchFilled; ArchHalfFilled; Lintel. See the reference file ArchModelingDiagrams.pdf to find further information. See also ArchPrototypeScript_more_readable.js.js.'>
            <ProtoInterface>
                <!-- COLOR OF ARCH -->
                <!-- INPUT PARAMETERS -->
                <!-- General parameters: measures in meters -->
                <!-- Parameters to create to create shapes related to arch: put true to apply -->
                <field name='diffuseColor' accessType='inputOutput' appinfo='color of arch' type='SFColor' value='0.2 0.8 0.8'/>
                <field name='emissiveColor' accessType='inputOutput' appinfo='color of arch' type='SFColor' value='0.2 0.8 0.8'/>
                <field name='clearSpanWidth' accessType='initializeOnly' appinfo='clearSpanWidth: clearSpanWidth must be double of riseHeight to obtain an half circumference' type='SFFloat' value='4.0'/>
                <field name='riseHeight' accessType='initializeOnly' appinfo='riseHeight: riseHeight must be half of clearSpanWidth to obtain an half circumference' type='SFFloat' value='2.0'/>
                <field name='depth' accessType='initializeOnly' appinfo='depth' type='SFFloat' value='3.0'/>
                <field name='topAbutmentHeight' accessType='initializeOnly' appinfo='topAbutmentHeight:topAbutmentHeight=0 means no topAbutment' type='SFFloat' value='0.5'/>
                <field name='pierWidth' accessType='initializeOnly' appinfo='pierWidth:pierWidtht=0 means no pierWidth' type='SFFloat' value='0.5'/>
                <field name='pierHeight' accessType='initializeOnly' appinfo='pierHeight: pierHeight=0 means no pierHeight' type='SFFloat' value='1.0'/>
                <field name='archHalf' accessType='initializeOnly' appinfo='archHalf: can modify also clearSpanWidth, riseHeight, depth, pierWidth, pierHeight, topAbutmentHeight, archHalfExtensionWidth at purpose, clearSpanWidth measure refers to a full arc, consider clearSpanWidth/2 for the archHalf width' type='SFBool' value='false'/>
                <field name='archHalfExtensionWidth' accessType='initializeOnly' appinfo='archHalfExtensionWidth: measure in meters, use only if archHalf=true, it is the width of the etension of the abutment of the archHalf. See the reference file ArchModelingDiagrams.pdf to find further information.' type='SFFloat' value='0.0'/>
                <field name='onlyIntrados' accessType='initializeOnly' appinfo='onlyIntrados: note it is a flat curved surface, can modify also clearSpanWidth, riseHeight, depth at purpose, if needed apply archHalf=true.' type='SFBool' value='false'/>
                <field name='archFilled' accessType='initializeOnly' appinfo='archFilled: note it is an half cylinder, can modify also clearSpanWidth, riseHeight, depth at purpose.' type='SFBool' value='false'/>
                <field name='archHalfFilled' accessType='initializeOnly' appinfo='archHalfFilled: note it is a quarter cylinder, can modify also clearSpanWidth, riseHeight, depth at purpose, clearSpanWidth measure refers to a full arc, consider clearSpanWidth/2 for the archHalfFilled width.' type='SFBool' value='false'/>
                <field name='lintel' accessType='initializeOnly' appinfo='lintel: no arc is rendered, but a lintel: topAbutmentHeight on pierHeight, total height is pierHeight + topAbutmentHeight, if needed apply archHalf=true.' type='SFBool' value='false'/>
            </ProtoInterface>
            <ProtoBody>
                <!-- First node determines node type of this prototype -->
                <!-- IndexedFaceset creates arch -->
                <Transform DEF='ArchTransform'>
                    <Shape DEF='Arch'>
                        <!-- note that convex='false' (meaning concave geometry) is crucial for this IFS of a geometric chord to render properly -->
                        <Appearance>
                            <Material DEF='MaterialNode'>
                                <IS>
                                    <connect nodeField='emissiveColor' protoField='emissiveColor'/>
                                    <connect nodeField='diffuseColor' protoField='diffuseColor'/>
                                </IS>
                            </Material>
                        </Appearance>
                        <IndexedFaceSet DEF='ArchIndex' convex='false' solid='false'>
                            <Coordinate DEF='ArchChord'/>
                        </IndexedFaceSet>
                    </Shape>
                </Transform>
                <!-- Subsequent nodes do not render, but still must be a valid X3D subgraph -->
                <!-- This embedded Script provides the X3D author with additional visibility and control over prototype inputs and outputs -->
                <Script DEF='ArchPrototypeScript' url='"../node/ArchPrototypeScript.js"'>
                    <!-- INPUT PARAMETERS -->
                    <!-- General parameters -->
                    <!-- Parameters to create to create shapes related to arch: put true to apply -->
                    <!-- OUTPUT PARAMETERS -->
                    <field name='clearSpanWidth' accessType='initializeOnly' appinfo='user or default input for clearSpanWidth parameter' type='SFFloat'/>
                    <field name='riseHeight' accessType='initializeOnly' appinfo='user or default input for riseHeight parameter' type='SFFloat'/>
                    <field name='depth' accessType='initializeOnly' appinfo='user or default input for depth parameter' type='SFFloat'/>
                    <field name='topAbutmentHeight' accessType='initializeOnly' appinfo='user or default input for topAbutmentHeight parameter' type='SFFloat'/>
                    <field name='pierWidth' accessType='initializeOnly' appinfo='user or default input for pierWidth parameter' type='SFFloat'/>
                    <field name='pierHeight' accessType='initializeOnly' appinfo='user or default input for pierHeight parameter' type='SFFloat'/>
                    <field name='archHalf' accessType='initializeOnly' appinfo='user or default input for archHalf parameter' type='SFBool'/>
                    <field name='archHalfExtensionWidth' accessType='initializeOnly' appinfo='user or default input for archHalfExtensionWidth parameter' type='SFFloat'/>
                    <field name='onlyIntrados' accessType='initializeOnly' appinfo='user or default input for onlyIntrados parameter' type='SFBool'/>
                    <field name='archFilled' accessType='initializeOnly' appinfo='user or default input for archFilled parameter' type='SFBool'/>
                    <field name='archHalfFilled' accessType='initializeOnly' appinfo='user or default input for archHalfFilled parameter' type='SFBool'/>
                    <field name='lintel' accessType='initializeOnly' appinfo='user or default input for lintel parameter' type='SFBool'/>
                    <field name='computedScale' accessType='outputOnly' appinfo='computedScale: modify scale field - NOTE it is not used to modify the whole arch, but to modify clearSpanWidth, riseHeight, depth. It does not affect topAbutmentHeight, pierWidth, pierHeight, archHalfExtensionWidth' type='SFVec3f'/>
                    <field name='pointOut' accessType='outputOnly' appinfo='send computed points to the Coordinate node' type='MFVec3f'/>
                    <field name='indexOut' accessType='outputOnly' appinfo='send computed indices to the IndexedFaceSet node' type='MFInt32'/>
                    <IS>
                        <connect nodeField='clearSpanWidth' protoField='clearSpanWidth'/>
                        <connect nodeField='riseHeight' protoField='riseHeight'/>
                        <connect nodeField='depth' protoField='depth'/>
                        <connect nodeField='pierWidth' protoField='pierWidth'/>
                        <connect nodeField='topAbutmentHeight' protoField='topAbutmentHeight'/>
                        <connect nodeField='pierHeight' protoField='pierHeight'/>
                        <connect nodeField='archHalf' protoField='archHalf'/>
                        <connect nodeField='archHalfExtensionWidth' protoField='archHalfExtensionWidth'/>
                        <connect nodeField='onlyIntrados' protoField='onlyIntrados'/>
                        <connect nodeField='archFilled' protoField='archFilled'/>
                        <connect nodeField='archHalfFilled' protoField='archHalfFilled'/>
                        <connect nodeField='lintel' protoField='lintel'/>
                    </IS>
                </Script>
                <ROUTE fromField='computedScale' fromNode='ArchPrototypeScript' toField='scale' toNode='ArchTransform'/>
                <ROUTE fromField='pointOut' fromNode='ArchPrototypeScript' toField='point' toNode='ArchChord'/>
                <ROUTE fromField='indexOut' fromNode='ArchPrototypeScript' toField='set_coordIndex' toNode='ArchIndex'/>
            </ProtoBody>
        </ProtoDeclare>
        <ProtoInstance DEF='ArchInstance' name='ArchPrototype'>
            <fieldValue name='diffuseColor' value='0.5 0.3 0.6'/>
            <fieldValue name='emissiveColor' value='0.5 0.3 0.6'/>
            <fieldValue name='clearSpanWidth' value='5.0'/>
            <fieldValue name='riseHeight' value='2.5'/>
            <fieldValue name='depth' value='2.0'/>
            <fieldValue name='topAbutmentHeight' value='0.6'/>
            <fieldValue name='pierWidth' value='1.0'/>
            <fieldValue name='pierHeight' value='2.0'/>
        </ProtoInstance>
        <!-- Add any ROUTEs here that connect ProtoInstance to/from prior nodes in Scene (and outside of ProtoDeclare) -->
        <Inline DEF='CoordinateAxes' url='"../data/CoordinateAxes.x3d"'/>
    </Scene>
</X3D>
