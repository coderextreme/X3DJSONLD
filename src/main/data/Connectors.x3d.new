<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "https://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="4.0" xsd:noNamespaceSchemaLocation="https://www.web3d.org/specifications/x3d-4.0.xsd" ><head><meta name="comment" content="World of Titania"></meta>
<meta name="created" content="Fri, 04 Sep 2015 10:19:01 GMT"></meta>
<meta name="creator" content="Holger Seelig"></meta>
<meta name="generator" content="Titania V3.0.4, http://titania.create3000.de"></meta>
<meta name="identifier" content="file:///home/holger/Projekte/Cobweb/excite/tests/Components/Shape/Connectors.x3d"></meta>
<meta name="modified" content="Tue, 25 Jul 2017 09:42:17 GMT"></meta>
<meta name="title" content="Connectors"></meta>
</head>
<Scene><ProtoDeclare name="RoundedRectangle2D"><ProtoInterface><field name="cornerRadius" accessType="initializeOnly" type="SFFloat" value="1"></field>
<field name="size" accessType="initializeOnly" type="SFVec2f" value="2 2"></field>
<field name="solid" accessType="initializeOnly" type="SFBool" value="true"></field>
</ProtoInterface>
<ProtoBody><IndexedFaceSet DEF="Geometry"><IS><connect nodeField="solid" protoField="solid"></connect>
</IS>
<Coordinate></Coordinate>
</IndexedFaceSet>
<Script DEF="RoundedRectangle2D" directOutput="true"><field name="cornerDimension" accessType="initializeOnly" type="SFFloat" value="10"></field>
<field name="cornerRadius" accessType="initializeOnly" type="SFFloat"></field>
<field name="size" accessType="initializeOnly" type="SFVec2f"></field>
<field name="geometry" accessType="initializeOnly" type="SFNode"><IndexedFaceSet USE="Geometry"></IndexedFaceSet>
</field>
<IS><connect nodeField="cornerRadius" protoField="cornerRadius"></connect>
<connect nodeField="size" protoField="size"></connect>
</IS>
<![CDATA[ecmascript:

function initialize ()
{
	var point         = new SFVec3f (cornerRadius, 0, 0);
	var startRotation = new SFRotation ();
	var endRotation   = new SFRotation (0, 0, 1, Math .PI / 2);
	var corner        = new MFVec3f ();
	var coordIndex    = new MFInt32 ();
	var points        = new MFVec3f ();

	for (var i = 0; i < cornerDimension * 4; ++ i)
		coordIndex [coordIndex .length] = i;

	geometry .coordIndex = coordIndex;

	for (var i = 0; i < cornerDimension; ++i)
		corner [i] = startRotation .slerp (endRotation, i / (cornerDimension - 1)) .multVec (point);

	var translation = new SFVec3f (size .x / 2 - cornerRadius, size .y / 2 - cornerRadius, 0);

	for (var i = 0; i < cornerDimension; ++ i)
		points [points .length] = corner [i] .add (translation);

	var translation = new SFVec3f (-size .x / 2 + cornerRadius, size .y / 2 - cornerRadius, 0);
	var rotation    = new SFRotation (0, 0, 1, Math .PI * 0.5);

	for (var i = 0; i < cornerDimension; ++ i)
		points [points .length] = rotation .multVec (corner [i]) .add (translation);

	var translation = new SFVec3f (-size .x / 2 + cornerRadius, -size .y / 2 + cornerRadius, 0);
	var rotation    = new SFRotation (0, 0, 1, Math .PI);

	for (var i = 0; i < cornerDimension; ++ i)
		points [points .length] = rotation .multVec (corner [i]) .add (translation);

	var translation = new SFVec3f (size .x / 2 - cornerRadius, -size .y / 2 + cornerRadius, 0);
	var rotation    = new SFRotation (0, 0, 1, Math .PI * 1.5);

	for (var i = 0; i < cornerDimension; ++ i)
		points [points .length] = rotation .multVec (corner [i]) .add (translation);

	geometry .coord .point = points;
}]]></Script>
</ProtoBody>
</ProtoDeclare>
<ProtoDeclare name="Widget"><ProtoInterface><field name="fillColor" accessType="inputOutput" type="SFColor" value="0.1 0.1 0.1"></field>
<field name="lineColor" accessType="inputOutput" type="SFColor" value="0.4 0.4 0.4"></field>
<field name="linewidthScaleFactor" accessType="inputOutput" type="SFFloat" value="1"></field>
<field name="geometry" accessType="inputOutput" type="SFNode"></field>
</ProtoInterface>
<ProtoBody><Transform DEF="Shape"><Shape><IS><connect nodeField="geometry" protoField="geometry"></connect>
</IS>
<Appearance containerField="appearance"><Material containerField="material"><IS><connect nodeField="diffuseColor" protoField="fillColor"></connect>
</IS>
</Material>
</Appearance>
</Shape>
<Shape><IS><connect nodeField="geometry" protoField="geometry"></connect>
</IS>
<Appearance containerField="appearance"><FillProperties containerField="fillProperties" filled="false" hatched="false"></FillProperties>
<LineProperties containerField="lineProperties"><IS><connect nodeField="linewidthScaleFactor" protoField="linewidthScaleFactor"></connect>
</IS>
</LineProperties>
<Material containerField="material" diffuseColor="0 0 0"><IS><connect nodeField="emissiveColor" protoField="lineColor"></connect>
</IS>
</Material>
</Appearance>
</Shape>
</Transform>
</ProtoBody>
</ProtoDeclare>
<ProtoDeclare name="Node"><ProtoInterface><field name="translation" accessType="inputOutput" type="SFVec3f"></field>
</ProtoInterface>
<ProtoBody><Group><PlaneSensor DEF="PlaneSensor"></PlaneSensor>
<Transform DEF="Node"><IS><connect nodeField="translation" protoField="translation"></connect>
</IS>
<ProtoInstance name="Widget"><fieldValue name="geometry"><ProtoInstance name="RoundedRectangle2D"><fieldValue name="cornerRadius" value="0.12"></fieldValue>
<fieldValue name="size" value="2 1"></fieldValue>
</ProtoInstance>
</fieldValue>
</ProtoInstance>
<Transform DEF="Input" translation="-1 0 0"><ProtoInstance name="Widget"><fieldValue name="lineColor" value="0.72 0.14 0.23"></fieldValue>
<fieldValue name="geometry"><Disk2D DEF="Connector" outerRadius="0.2"></Disk2D>
</fieldValue>
</ProtoInstance>
</Transform>
<Transform DEF="Output" translation="1 0 0"><ProtoInstance name="Widget"><fieldValue name="lineColor" value="0.44 0.5 0.72"></fieldValue>
<fieldValue name="geometry"><Disk2D USE="Connector"></Disk2D>
</fieldValue>
</ProtoInstance>
</Transform>
</Transform>
</Group>
<Script directOutput="true"><field name="translation" accessType="inputOutput" type="SFVec3f"></field>
<field name="sensor" accessType="initializeOnly" type="SFNode"><PlaneSensor USE="PlaneSensor"></PlaneSensor>
</field>
<field name="transform" accessType="initializeOnly" type="SFNode"><Transform USE="Node"></Transform>
</field>
<IS><connect nodeField="translation" protoField="translation"></connect>
</IS>
<![CDATA[ecmascript:
function initialize ()
{
	sensor .offset = translation;
}]]></Script>
<ROUTE fromNode="PlaneSensor" fromField="translation_changed" toNode="Node" toField="set_translation"></ROUTE>
</ProtoBody>
</ProtoDeclare>
<ProtoDeclare name="Route"><ProtoInterface><field name="lineColor" accessType="inputOutput" type="SFColor" value="0.43 0.43 0.98"></field>
<field name="linewidthScaleFactor" accessType="inputOutput" type="SFFloat" value="2"></field>
<field name="output" accessType="initializeOnly" type="SFNode"></field>
<field name="input" accessType="initializeOnly" type="SFNode"></field>
</ProtoInterface>
<ProtoBody><Shape><Appearance containerField="appearance"><LineProperties containerField="lineProperties"><IS><connect nodeField="linewidthScaleFactor" protoField="linewidthScaleFactor"></connect>
</IS>
</LineProperties>
<Material containerField="material" diffuseColor="0 0 0"><IS><connect nodeField="emissiveColor" protoField="lineColor"></connect>
</IS>
</Material>
</Appearance>
<LineSet DEF="Geometry_1" vertexCount="2"><Coordinate point="-1 0 0 1 0 0"></Coordinate>
</LineSet>
</Shape>
<Script DEF="Route" directOutput="true"><field name="set_translation" accessType="inputOnly" type="SFVec3f"></field>
<field name="routeDimension" accessType="initializeOnly" type="SFInt32" value="21"></field>
<field name="output" accessType="initializeOnly" type="SFNode"></field>
<field name="input" accessType="initializeOnly" type="SFNode"></field>
<field name="geometry" accessType="initializeOnly" type="SFNode"><LineSet USE="Geometry_1"></LineSet>
</field>
<field name="self" accessType="initializeOnly" type="SFNode"><Script USE="Route"></Script>
</field>
<IS><connect nodeField="output" protoField="output"></connect>
<connect nodeField="input" protoField="input"></connect>
</IS>
<![CDATA[ecmascript:
function initialize ()
{
	Browser .addRoute (output, 'translation_changed', self, 'set_translation');
	Browser .addRoute (input,  'translation_changed', self, 'set_translation');

	set_translation ();
}

function set_translation ()
{
	geometry .vertexCount [0] = routeDimension;

	var outPoint = output .translation .add (new SFVec3f ( 1, 0, 0));
	var inPoint  = input  .translation .add (new SFVec3f (-1, 0, 0));

	var w = inPoint .x - outPoint .x;
	var h = outPoint .y - inPoint .y;

	for (var i = 0; i < routeDimension; ++ i)
	{
		var t = i / (routeDimension - 1);
		var y = h / 2 * (Math .cos (t * Math .PI) - 1);

		geometry .coord .point [i] = outPoint .add (new SFVec3f (t * w, y, 0));
	}
}]]></Script>
</ProtoBody>
</ProtoDeclare>
<NavigationInfo type="&quot;FLY&quot; &quot;ANY&quot;"></NavigationInfo>
<Background skyColor="0.2 0.2 0.2"></Background>
<OrthoViewpoint description="OthoViewpoint" position="-3.13496 -4.19776 10" centerOfRotation="-3.13496 -4.19776 0" fieldOfView="0 0 10 10"></OrthoViewpoint>
<Viewpoint description="Viewpoint"></Viewpoint>
<Transform DEF="Connectors"><ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" DEF="N1"><fieldValue name="translation" value="-3.98323 2.88948 0"></fieldValue>
</ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" DEF="N2"><fieldValue name="translation" value="-0.0890862 2.96049 0"></fieldValue>
</ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N1"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" DEF="N3"><fieldValue name="translation" value="-0.104169 1.16371 0"></fieldValue>
</ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N1"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" DEF="N4"><fieldValue name="translation" value="-0.0998688 -0.40172 0"></fieldValue>
</ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N1"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" DEF="N5"><fieldValue name="translation" value="-0.0998687 -2.14742 0"></fieldValue>
</ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N2"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" DEF="N6"><fieldValue name="translation" value="3.55694 2.4116 0"></fieldValue>
</ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N3"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" USE="N6"></ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N4"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" DEF="N7"><fieldValue name="translation" value="3.75106 -0.0794556 0"></fieldValue>
</ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N5"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" USE="N7"></ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N6"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" DEF="N8"><fieldValue name="translation" value="7.68077 1.21228 0"></fieldValue>
</ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Route"><fieldValue name="output"><ProtoInstance name="Node" USE="N7"></ProtoInstance>
</fieldValue>
<fieldValue name="input"><ProtoInstance name="Node" USE="N8"></ProtoInstance>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="Node" USE="N1"></ProtoInstance>
<ProtoInstance name="Node" USE="N2"></ProtoInstance>
<ProtoInstance name="Node" USE="N3"></ProtoInstance>
<ProtoInstance name="Node" USE="N4"></ProtoInstance>
<ProtoInstance name="Node" USE="N5"></ProtoInstance>
<ProtoInstance name="Node" USE="N6"></ProtoInstance>
<ProtoInstance name="Node" USE="N7"></ProtoInstance>
<ProtoInstance name="Node" USE="N8"></ProtoInstance>
</Transform>
</Scene>
</X3D>