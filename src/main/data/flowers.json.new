{
  "X3D": {
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-3.3.xsd",
    "head": {
      "component": [
        {
          "@name": "Shaders",
          "@level": 1
        },
        {
          "@name": "CubeMapTexturing",
          "@level": 1
        }
      ],
      "meta": [
        {
          "@name": "title",
          "@content": "flowers.x3d"
        },
        {
          "@name": "creator",
          "@content": "John Carlson"
        },
        {
          "@name": "description",
          "@content": "5 or more prismatic flowers"
        },
        {
          "@name": "generator",
          "@content": "X3D-Edit, https://savage.nps.edu/X3D-Edit"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/flowers.x3d"
        },
        {
          "@name": "translated",
          "@content": "6 March 2018"
        },
        {
          "@name": "generator",
          "@content": "DOM2JSONSerializer.js, https://github.com/coderextreme/X3DJSONLD/blob/master/src/main/node/DOM2JSONSerializer.js"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "NavigationInfo": {}
        },
        {
          "Background": {
            "@backUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
            ],
            "@bottomUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
            ],
            "@frontUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
            ],
            "@leftUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
            ],
            "@rightUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
            ],
            "@topUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
            ]
          }
        },
        {
          "ProtoDeclare": {
            "@name": "flower",
            "-protobody": {
              "ProtoBody": {
                "-children": [
                  {
                    "Transform": {
                      "@DEF": "transform",
                      "-children": [
                        {
                          "Shape": {
                            "-appearance": {
                              "Appearance": {
                                "-material": {
                                  "Material": {
                                    "@diffuseColor": [
                                      0.7,
                                      0.7,
                                      0.7
                                    ],
                                    "@specularColor": [
                                      0.5,
                                      0.5,
                                      0.5
                                    ]
                                  }
                                },
                                "-texture": {
                                  "ComposedCubeMapTexture": {
                                    "@DEF": "texture",
                                    "-back": {
                                      "ImageTexture": {
                                        "@url": [
                                          "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                          "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                        ]
                                      }
                                    },
                                    "-bottom": {
                                      "ImageTexture": {
                                        "@url": [
                                          "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                          "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                        ]
                                      }
                                    },
                                    "-front": {
                                      "ImageTexture": {
                                        "@url": [
                                          "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                          "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                        ]
                                      }
                                    },
                                    "-left": {
                                      "ImageTexture": {
                                        "@url": [
                                          "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                          "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                        ]
                                      }
                                    },
                                    "-right": {
                                      "ImageTexture": {
                                        "@url": [
                                          "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                          "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                        ]
                                      }
                                    },
                                    "-top": {
                                      "ImageTexture": {
                                        "@url": [
                                          "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                          "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "-shaders": [
                                  {
                                    "ComposedShader": {
                                      "@language": "GLSL",
                                      "field": [
                                        {
                                          "@name": "xxxcube",
                                          "@type": "SFInt32",
                                          "@accessType": "inputOutput",
                                          "@value": 0
                                        },
                                        {
                                          "@name": "cube",
                                          "@type": "SFNode",
                                          "@accessType": "inputOutput",
                                          "-children": [
                                            {
                                              "ComposedCubeMapTexture": {
                                                "@USE": "texture"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "@name": "chromaticDispertion",
                                          "@type": "SFVec3f",
                                          "@accessType": "inputOutput",
                                          "@value": [
                                            0.98,
                                            1,
                                            1.033
                                          ]
                                        },
                                        {
                                          "@name": "bias",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 0.5
                                        },
                                        {
                                          "@name": "scale",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 0.5
                                        },
                                        {
                                          "@name": "power",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 2
                                        }
                                      ],
                                      "-parts": [
                                        {
                                          "ShaderPart": {
                                            "@url": [
                                              "../shaders/common.vs",
                                              "https://coderextreme.net/X3DJSONLD/src/main/shaders/common.vs"
                                            ],
                                            "@type": "VERTEX"
                                          }
                                        },
                                        {
                                          "ShaderPart": {
                                            "@url": [
                                              "../shaders/gl_flowers_chromatic.fs",
                                              "https://coderextreme.net/X3DJSONLD/src/main/shaders/gl_flowers_chromatic.fs"
                                            ],
                                            "@type": "FRAGMENT"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "ComposedShader": {
                                      "@language": "GLSL",
                                      "field": [
                                        {
                                          "@name": "xxxcube",
                                          "@type": "SFInt32",
                                          "@accessType": "inputOutput",
                                          "@value": 0
                                        },
                                        {
                                          "@name": "cube",
                                          "@type": "SFNode",
                                          "@accessType": "inputOutput",
                                          "-children": [
                                            {
                                              "ComposedCubeMapTexture": {
                                                "@USE": "texture"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "@name": "chromaticDispertion",
                                          "@type": "SFVec3f",
                                          "@accessType": "inputOutput",
                                          "@value": [
                                            0.98,
                                            1,
                                            1.033
                                          ]
                                        },
                                        {
                                          "@name": "bias",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 0.5
                                        },
                                        {
                                          "@name": "scale",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 0.5
                                        },
                                        {
                                          "@name": "power",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 2
                                        }
                                      ],
                                      "-parts": [
                                        {
                                          "ShaderPart": {
                                            "@url": [
                                              "../shaders/x3dom.vs",
                                              "https://coderextreme.net/X3DJSONLD/src/main/shaders/x3dom.vs"
                                            ],
                                            "@type": "VERTEX"
                                          }
                                        },
                                        {
                                          "ShaderPart": {
                                            "@url": [
                                              "../shaders/pc_bubbles.fs",
                                              "https://coderextreme.net/X3DJSONLD/src/main/shaders/pc_bubbles.fs"
                                            ],
                                            "@type": "FRAGMENT"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "ComposedShader": {
                                      "@DEF": "shader",
                                      "@language": "GLSL",
                                      "field": [
                                        {
                                          "@name": "xxxcube",
                                          "@type": "SFInt32",
                                          "@accessType": "inputOutput",
                                          "@value": 0
                                        },
                                        {
                                          "@name": "cube",
                                          "@type": "SFNode",
                                          "@accessType": "inputOutput",
                                          "-children": [
                                            {
                                              "ComposedCubeMapTexture": {
                                                "@USE": "texture"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "@name": "chromaticDispertion",
                                          "@type": "SFVec3f",
                                          "@accessType": "inputOutput",
                                          "@value": [
                                            0.98,
                                            1,
                                            1.033
                                          ]
                                        },
                                        {
                                          "@name": "bias",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 10
                                        },
                                        {
                                          "@name": "scale",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 10
                                        },
                                        {
                                          "@name": "power",
                                          "@type": "SFFloat",
                                          "@accessType": "inputOutput",
                                          "@value": 2
                                        }
                                      ],
                                      "-parts": [
                                        {
                                          "ShaderPart": {
                                            "@url": [
                                              "../shaders/x_ite.vs",
                                              "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.vs"
                                            ],
                                            "@type": "VERTEX"
                                          }
                                        },
                                        {
                                          "ShaderPart": {
                                            "@url": [
                                              "../shaders/pc_bubbles.fs",
                                              "https://coderextreme.net/X3DJSONLD/src/main/shaders/pc_bubbles.fs"
                                            ],
                                            "@type": "FRAGMENT"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            "-children": [
                              {
                                "#comment": "<Sphere></Sphere>"
                              }
                            ],
                            "-geometry": {
                              "IndexedFaceSet": {
                                "@convex": true,
                                "@DEF": "Orbit",
                                "-coord": {
                                  "Coordinate": {
                                    "@DEF": "OrbitCoordinates"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  },
                  {
                    "Script": {
                      "@DEF": "Bounce",
                      "field": [
                        {
                          "@name": "translation",
                          "@accessType": "inputOutput",
                          "@type": "SFVec3f",
                          "@value": [
                            0,
                            0,
                            0
                          ]
                        },
                        {
                          "@name": "velocity",
                          "@accessType": "inputOutput",
                          "@type": "SFVec3f",
                          "@value": [
                            0,
                            0,
                            0
                          ]
                        },
                        {
                          "@name": "set_fraction",
                          "@accessType": "inputOnly",
                          "@type": "SFTime"
                        },
                        {
                          "@name": "coordinates",
                          "@accessType": "inputOutput",
                          "@type": "MFVec3f"
                        },
                        {
                          "@name": "coordIndexes",
                          "@accessType": "outputOnly",
                          "@type": "MFInt32"
                        },
                        {
                          "@name": "a",
                          "@type": "SFFloat",
                          "@accessType": "inputOutput",
                          "@value": 0.5
                        },
                        {
                          "@name": "b",
                          "@type": "SFFloat",
                          "@accessType": "inputOutput",
                          "@value": 0.5
                        },
                        {
                          "@name": "c",
                          "@type": "SFFloat",
                          "@accessType": "inputOutput",
                          "@value": 3
                        },
                        {
                          "@name": "d",
                          "@type": "SFFloat",
                          "@accessType": "inputOutput",
                          "@value": 3
                        },
                        {
                          "@name": "tdelta",
                          "@type": "SFFloat",
                          "@accessType": "inputOutput",
                          "@value": 0.5
                        },
                        {
                          "@name": "pdelta",
                          "@type": "SFFloat",
                          "@accessType": "inputOutput",
                          "@value": 0.5
                        }
                      ],
                      "#sourceText": [
                        "ecmascript: function newBubble() { translation = new SFVec3f(0, 0, 0); velocity = new SFVec3f( Math.random() - 0.5, Math.random() - 0.5, Math.random() - 0.5); } function set_fraction() { translation = new SFVec3f( translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z); if (Math.abs(translation.x) > 10) { newBubble(); } else if (Math.abs(translation.y) > 10) { newBubble(); } else if (Math.abs(translation.z) > 10) { newBubble(); } else { velocity = new SFVec3f( velocity.x + Math.random() * 0.2 - 0.1, velocity.y + Math.random() * 0.2 - 0.1, velocity.z + Math.random() * 0.2 - 0.1 ); } animate_flowers(); } function initialize() { var cis = []; newBubble(); resolution = 100; updateCoordinates(resolution); for ( i = 0; i < resolution-1; i++) { for ( j = 0; j < resolution-1; j++) { cis.push(i*resolution+j); cis.push(i*resolution+j+1); cis.push((i+1)*resolution+j+1); cis.push((i+1)*resolution+j); cis.push(-1); } } coordIndexes = new MFInt32(cis); } function updateCoordinates(resolution) { theta = 0.0; phi = 0.0; delta = (2 * 3.141592653) / (resolution-1); var crds = []; for ( i = 0; i < resolution; i++) { for ( j = 0; j < resolution; j++) { rho = a + b * Math.cos(c * theta) * Math.cos(d * phi); crds.push(new SFVec3f( rho * Math.cos(phi) * Math.cos(theta), rho * Math.cos(phi) * Math.sin(theta), rho * Math.sin(phi) )); theta += delta; } phi += delta; coordinates = new MFVec3f(crds); } } function animate_flowers(fraction, eventTime) { choice = Math.floor(Math.random() * 4); switch (choice) { case 0: a += Math.random() * 0.2 - 0.1; break; case 1: b += Math.random() * 0.2 - 0.1; break; case 2: c += Math.random() * 2 - 1; break; case 3: d += Math.random() * 2 - 1; break; } if (a > 1) { a = 0.5; } if (b > 1) { b = 0.5; } if (c < 1) { c = 4; } if (d < 1) { d = 4; } if (c > 10) { c = 4; } if (d > 10) { d = 4; } resolution = 100; updateCoordinates(resolution); }",
                        ""
                      ]
                    }
                  },
                  {
                    "TimeSensor": {
                      "@DEF": "TourTime",
                      "@cycleInterval": 0.15,
                      "@loop": true
                    }
                  },
                  {
                    "TimeSensor": {
                      "@DEF": "SongTime",
                      "@loop": true
                    }
                  },
                  {
                    "Sound": {
                      "@maxBack": 100,
                      "@maxFront": 100,
                      "@minBack": 20,
                      "@minFront": 20,
                      "-source": {
                        "AudioClip": {
                          "@DEF": "AudioClip",
                          "@description": "Chandubabamusic #1",
                          "@url": [
                            "../resources/chandubabamusic1.wav"
                          ]
                        }
                      }
                    }
                  },
                  {
                    "#comment": "<ROUTE fromField=\"coordIndexes\"fromNode=\"Bounce\"toField=\"set_coordIndex\"toNode=\"Orbit\"/> <ROUTE fromField=\"coordinates\"fromNode=\"Bounce\"toField=\"set_point\"toNode=\"OrbitCoordinates\"/>"
                  }
                ],
                "ROUTE": [
                  {
                    "@fromField": "cycleTime",
                    "@fromNode": "SongTime",
                    "@toField": "startTime",
                    "@toNode": "AudioClip"
                  },
                  {
                    "@fromNode": "TourTime",
                    "@fromField": "cycleTime",
                    "@toNode": "Bounce",
                    "@toField": "set_fraction"
                  },
                  {
                    "@fromNode": "Bounce",
                    "@fromField": "translation",
                    "@toNode": "transform",
                    "@toField": "set_translation"
                  }
                ]
              }
            }
          }
        },
        {
          "Transform": {
            "-children": [
              {
                "ProtoInstance": {
                  "@name": "flower"
                }
              },
              {
                "#comment": "<ProtoInstance name=\"flower\"/> <ProtoInstance name=\"flower\"/>"
              }
            ]
          }
        }
      ]
    },
    "encoding": "UTF-8",
    "JSON schema": "http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json"
  }
}