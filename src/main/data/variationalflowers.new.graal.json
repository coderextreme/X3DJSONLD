{ "X3D": {
    "encoding":"UTF-8",
"@profile":"Full",
"@version":"4.0",
"@xsd:noNamespaceSchemaLocation":"https://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-4.0-JSONSchema.autogenerated.json",
"head": {
"component": [
{
"@name":"EnvironmentalEffects",
"@level":3
},
{
"@name":"Shaders",
"@level":1
},
{
"@name":"CubeMapTexturing",
"@level":1
},
{
"@name":"Texturing",
"@level":1
},
{
"@name":"Rendering",
"@level":1
},
{
"@name":"Grouping",
"@level":3
},
{
"@name":"Core",
"@level":1
},
{
"@name":"ParticleSystems",
"@level":3
}
],
"meta": [
{
"@name":"title",
"@content":"particleflowers.x3d"
},
{
"@name":"creator",
"@content":"John Carlson"
},
{
"@name":"description",
"@content":"A flower proto with configurable shaders"
},
{
"@name":"identifier",
"@content":"https://coderextreme.net/X3DJSONLD/src/main/data/particleflowers.x3d"
},
{
"@name":"translated",
"@content":"26 June 2025"
},
{
"@name":"generator",
"@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
},
{
"@name":"reference",
"@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
}
]
},
"Scene": {
"-children":[
{ "WorldInfo":
{
"@title":"particleflowers.x3d"
}
},
{ "NavigationInfo":
{
"@type":"\"ANY\" \"EXAMINE\" \"FLY\" \"LOOKAT\""
}
},
{ "Viewpoint":
{
"@description":"Tour Views",
"@position":[0,0,12]
}
},
{ "Background":
{
"@backUrl":["../resources/images/all_probes/stpeters_cross/stpeters_back.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"],
"@bottomUrl":["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"],
"@frontUrl":["../resources/images/all_probes/stpeters_cross/stpeters_front.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"],
"@leftUrl":["../resources/images/all_probes/stpeters_cross/stpeters_left.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"],
"@rightUrl":["../resources/images/all_probes/stpeters_cross/stpeters_right.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"],
"@topUrl":["../resources/images/all_probes/stpeters_cross/stpeters_top.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
}
},
{ "Transform":
{
"-children":[
{ "ParticleSystem":
{
"@geometryType":"GEOMETRY",
"@maxParticles":100,
"-children":[
{
"#comment":"* values - array of MFFloats to pass to ComposedShader * variations in
values - array of MFFloats to pass to ComposedShader that varies values * lastFrame
- last frame that was rendered (0 for default) * updateRate - update rate is amount
of time between frames"
},
{
"#comment":"&lt;VariationPhysicsModel values=\"2 2 5 5 0 0\" varations=\"2 1 3 3 0.1
0.1\" lastFrame='0' updateRate='0.1'&gt; &lt;/VariationPhysicsModel&gt;"
}
],
"-appearance":
{ "Appearance":
{
"-children":[
{
"#comment":"&lt;ComposedShader language='GLSL'&gt; &lt;field name='chromaticDispertion' accessType='inputOutput'
type='SFVec3f' value='0.98 1 1.033'&gt;&lt;/field&gt; &lt;field name='cube' type='SFNode' accessType=\"inputOutput\"&gt;
&lt;ComposedCubeMapTexture USE=\"texture\"&gt;&lt;/ComposedCubeMapTexture&gt; &lt;/field&gt; &lt;field
name='bias' accessType='inputOutput' type='SFFloat' value='0.5'&gt;&lt;/field&gt; &lt;field name='scale'
accessType='inputOutput' type='SFFloat' value='0.5'&gt;&lt;/field&gt; &lt;field name='power' accessType='inputOutput'
type='SFFloat' value='2'&gt;&lt;/field&gt; &lt;ShaderPart url='\"../shaders/freewrl.vs\" \"https://coderextreme.net/X3DJSONLD/src/main/shaders/freewrl.vs\"'
type=\"VERTEX\" containerField='parts'&gt;&lt;/ShaderPart&gt; &lt;ShaderPart url='\"../shaders/freewrl.fs\"
\"https://coderextreme.net/X3DJSONLD/src/main/shaders/freewrl.fs\"' containerField='parts'
type='FRAGMENT'&gt;&lt;/ShaderPart&gt; &lt;/ComposedShader&gt;"
},
{
"#comment":"&lt;ComposedShader DEF=\"shader\" language=\"GLSL\"&gt; &lt;field name='cube' type='SFInt32'
accessType='inputOutput' value='0'&gt;&lt;/field&gt; &lt;field name='chromaticDispertion' accessType='initializeOnly'
type='SFVec3f' value='0.98 1.0 1.033'&gt;&lt;/field&gt; &lt;field name='bias' type='SFFloat' accessType='inputOutput'
value='0.5'&gt;&lt;/field&gt; &lt;field name='scale' type='SFFloat' accessType='inputOutput' value='0.5'&gt;&lt;/field&gt;
&lt;field name='power' type='SFFloat' accessType='inputOutput' value='2'&gt;&lt;/field&gt; &lt;ShaderPart
type=\"VERTEX\" url='\"../shaders/castle.vs\" \"https://coderextreme.net/X3DJSONLD/src/main/shaders/castle.vs\"'/&gt;
&lt;ShaderPart type='FRAGMENT' url='\"../shaders/castle.fs\" \"https://coderextreme.net/X3DJSONLD/src/main/shaders/castle.fs\"'/&gt;
&lt;/ComposedShader&gt;"
}
],
"-material":
{ "Material":
{
"@diffuseColor":[0.7,0.7,0.7],
"@specularColor":[0.5,0.5,0.5]
}
},
"-shaders":[
{ "ComposedShader":
{
"@DEF":"x_ite",
"@language":"GLSL",
"field": [
{
"@name":"chromaticDispertion",
"@accessType":"initializeOnly",
"@type":"SFVec3f",
"@value":[0.98,1,1.033]
},
{
"@name":"cube",
"@accessType":"initializeOnly",
"@type":"SFNode",
"-children":[
{ "ComposedCubeMapTexture":
{
"@USE":"texture"
}
}
]
},
{
"@name":"bias",
"@accessType":"initializeOnly",
"@type":"SFFloat",
"@value":0.5
},
{
"@name":"scale",
"@accessType":"initializeOnly",
"@type":"SFFloat",
"@value":0.5
},
{
"@name":"power",
"@accessType":"initializeOnly",
"@type":"SFFloat",
"@value":2.0
},
{
"@name":"x3d_ParticleValues",
"@accessType":"inputOutput",
"@type":"MFFloat",
"@value":[2,1,4,4,0,0]
}
],
"-parts":[
{ "ShaderPart":
{
"@url":["../shaders/x_ite_variations.vs","https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite_variations.vs"],
"@type":"VERTEX"
}
},
{ "ShaderPart":
{
"@type":"FRAGMENT",
"@url":["../shaders/commonnew.fs","https://coderextreme.net/X3DJSONLD/src/main/shaders/commonnew.fs"]
}
}
]
}
}
],
"-texture":
{ "ComposedCubeMapTexture":
{
"@DEF":"texture",
"-backTexture":
{ "ImageTexture":
{
"@url":["../resources/images/all_probes/stpeters_cross/stpeters_back.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"]
}
},
"-bottomTexture":
{ "ImageTexture":
{
"@url":["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
}
},
"-frontTexture":
{ "ImageTexture":
{
"@url":["../resources/images/all_probes/stpeters_cross/stpeters_front.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"]
}
},
"-leftTexture":
{ "ImageTexture":
{
"@url":["../resources/images/all_probes/stpeters_cross/stpeters_left.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"]
}
},
"-rightTexture":
{ "ImageTexture":
{
"@url":["../resources/images/all_probes/stpeters_cross/stpeters_right.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"]
}
},
"-topTexture":
{ "ImageTexture":
{
"@url":["../resources/images/all_probes/stpeters_cross/stpeters_top.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
}
}
}
}
}
},
"-emitter":
{ "ExplosionEmitter":
{
"@speed":1.0,
"@variation":0.75
}
},
"-geometry":
{ "Sphere":
{
}
}
}
},
{ "Script":
{
"@DEF":"Animate",
"field": [
{
"@name":"set_fraction",
"@accessType":"inputOnly",
"@type":"SFFloat"
},
{
"@name":"values",
"@accessType":"inputOutput",
"@type":"MFFloat",
"@value":[2,2,5,5,0,0]
},
{
"@name":"variations",
"@accessType":"inputOutput",
"@type":"MFFloat",
"@value":[0.2,0.1,0.3,0.3,0.01,0.01]
},
{
"@name":"lastframe",
"@accessType":"inputOutput",
"@type":"SFFloat",
"@value":0.0
},
{
"@name":"updaterate",
"@accessType":"inputOutput",
"@type":"SFFloat",
"@value":0.1
}
],
"#sourceCode":[
"",
"",
"ecmascript:",
"\t\t\tfunction set_fraction(f, tm) {",
"\t\t\t    if (lastframe + updaterate &lt; tm) {",
"\t\t\t  \tlastframe = tm;",
"\t\t\t\tfor (let v in values) {",
"\t\t\t\t\tvalues[v] = values[v] + (2 * Math.random() - 1) * variations[v];",
"\t\t\t\t}",
"\t\t\t    }",
"\t\t\t}",
"",
""
]
}
},
{ "TimeSensor":
{
"@DEF":"TourTime",
"@cycleInterval":45.0,
"@loop":true
}
},
{ "ROUTE":
{
"@fromField":"fraction_changed",
"@fromNode":"TourTime",
"@toField":"set_fraction",
"@toNode":"Animate"
}
},
{ "ROUTE":
{
"@fromField":"values",
"@fromNode":"Animate",
"@toField":"x3d_ParticleValues",
"@toNode":"x_ite"
}
}
]
}
}
]
}
  }
}