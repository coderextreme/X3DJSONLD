<!--
x3d.py package 4.0.64.4 loaded, have fun with X3D Graphics!
-->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta content='John W Carlson' name='creator'/>
    <meta content='December 13 2015' name='created'/>
    <meta content='April 18 2017' name='modified'/>
    <meta content='fors2.x3d' name='title'/>
    <meta content='https://coderextreme.net/X3DJSONLD/fors2.x3d' name='identifier'/>
    <meta content='beginnings of a force directed graph in 3D' name='description'/>
    <meta content='Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit' name='generator'/>
    <meta content='16 July 2023' name='translated'/>
    <meta content='X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html' name='generator'/>
    <meta content='X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding' name='reference'/>
  </head>
  <Scene>
    <ProtoDeclare name='node'>
      <ProtoInterface>
        <field accessType='inputOutput' name='position' type='SFVec3f' value='0 0 0'/>
      </ProtoInterface>
      <ProtoBody>
        <Transform DEF='transform'>
          <IS>
            <connect nodeField='translation' protoField='position'/>
          </IS>
          <Shape>
            <Appearance>
              <Material diffuseColor='1 0 0'/>
            </Appearance>
            <Sphere/>
          </Shape>
        </Transform>
        <PositionInterpolator DEF='NodePosition' key='0.0 1.0' keyValue='0 0 0 0 5 0'/>
        <Script DEF='MoveBall'>
          <field accessType='inputOutput' name='translation' type='SFVec3f' value='50 50 0'/>
          <field accessType='inputOutput' name='old' type='SFVec3f' value='0 0 0'/>
          <field accessType='inputOnly' name='set_cycle' type='SFTime'/>
          <field accessType='outputOnly' name='keyValue' type='MFVec3f'/>
        <![CDATA[['', ' ecmascript:', '					function set_cycle(value) {', '                                                old = translation;', '						translation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);', '                                                keyValue = new MFVec3f([old, translation]);', '						// Browser.println(translation);', '					}', '']]]>
        </Script>
        <TimeSensor DEF='nodeClock' cycleInterval='3' loop='true'/>
        <ROUTE fromField='cycleTime' fromNode='nodeClock' toField='set_cycle' toNode='MoveBall'/>
        <ROUTE fromField='fraction_changed' fromNode='nodeClock' toField='set_fraction' toNode='NodePosition'/>
        <ROUTE fromField='keyValue' fromNode='MoveBall' toField='keyValue' toNode='NodePosition'/>
        <ROUTE fromField='value_changed' fromNode='NodePosition' toField='set_translation' toNode='transform'/>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name='cylinder'>
      <ProtoInterface>
        <field accessType='inputOnly' name='positionA' type='SFVec3f'/>
        <field accessType='inputOnly' name='positionB' type='SFVec3f'/>
      </ProtoInterface>
      <ProtoBody>
        <Shape>
          <Appearance>
            <Material diffuseColor='0 1 0'/>
          </Appearance>
          <Extrusion DEF='extrusion' creaseAngle='0.785' crossSection='1 0 0.92 -0.38 0.71 -0.71 0.38 -0.92 0 -1 -0.38 -0.92 -0.71 -0.71 -0.92 -0.38 -1 0 -0.92 0.38 -0.71 0.71 -0.38 0.92 0 1 0.38 0.92 0.71 0.71 0.92 0.38 1 0' spine='0 -50 0 0 0 0 0 50 0'/>
        </Shape>
        <Script DEF='MoveCylinder'>
          <IS>
            <connect nodeField='set_endA' protoField='positionA'/>
            <connect nodeField='set_endB' protoField='positionB'/>
          </IS>
          <field accessType='inputOutput' name='spine' type='MFVec3f' value='0 -50 0 0 0 0 0 50 0'/>
          <field accessType='inputOnly' name='set_endA' type='SFVec3f'/>
          <field accessType='inputOnly' name='set_endB' type='SFVec3f'/>
        <![CDATA[['', ' ecmascript:', '', '                function set_endA(value) {', '		    if (typeof spine === "undefined") {', '		        spine = new MFVec3f([value, value]);', '		    } else {', '		        spine = new MFVec3f([value, spine[1]]);', '		    }', '                }', '', '                function set_endB(value) {', '		    if (typeof spine === "undefined") {', '		        spine = new MFVec3f([value, value]);', '		    } else {', '		        spine = new MFVec3f([spine[0], value]);', '		    }', '                }', '', '                function set_spine(value) {', '		    Browser.print('
'+'"');', '                    spine = value;', '                }', '']]]>
        </Script>
        <ROUTE fromField='spine' fromNode='MoveCylinder' toField='set_spine' toNode='extrusion'/>
      </ProtoBody>
    </ProtoDeclare>
    <Transform scale='0.1 0.1 0.1'>
      <ProtoInstance DEF='nodeA' name='node'>
        <fieldValue name='position' value='-50 -50 -50'/>
      </ProtoInstance>
      <ProtoInstance DEF='nodeB' name='node'>
        <fieldValue name='position' value='50 50 50'/>
      </ProtoInstance>
      <ProtoInstance DEF='linkA' name='cylinder'>
        <fieldValue name='positionA' value='0 0 0'/>
        <fieldValue name='positionB' value='50 50 50'/>
      </ProtoInstance>
    </Transform>
    <ROUTE fromField='position' fromNode='nodeA' toField='positionA' toNode='linkA'/>
    <ROUTE fromField='position' fromNode='nodeB' toField='positionB' toNode='linkA'/>
  </Scene>
</X3D>

