<svrl:schematron-output xmlns:iso="http://purl.oclc.org/dsdl/schematron" xmlns:schold="http://www.ascc.net/xml/schematron" xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" title="X3D Graphics Validity Checks using Schematron" schemaVersion=""><!--   
		   
		   
		 -->
   <svrl:active-pattern document="file:/C:/Users/jcarl/X3DJSONLD/src/main/data/SplitChannels.x3d"/>
   <svrl:fired-rule context="X3D | *[(upper-case(local-name()) = 'X3D')]"/>
   <svrl:successful-report test="(@version='4.0')" role="diagnostic" location="/X3D">
      <svrl:text>X3D version 4.0 was approved by Web3D Consortium and ISO in 2023.</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="(@version='4.0')" role="diagnostic" location="/X3D">
      <svrl:text>X3D version 4.0 offers many new features including interoperability with HTML5, glTF
         2.0 Physically Based Rendering (PBR), and Web Audio API.</svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="head | *[(lower-case(local-name()) = 'head')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta[(@name='error') or (@name='warning') or (@name='hint') or (@name='info') or starts-with(@name,'TODO')]"/>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/head/meta[3]">
      <svrl:text>&lt;meta name='info' content='This work presents an innovative solution of the spatial sound in X3DOM framework,
         that based on a combinational methodology. Specifically, we suggested the enrichment
         of X3DOM with spatial sound features, using both the X3D sound nodes and the structure
         of Web Audio API.'/&gt; </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta[(@name='error') or (@name='warning') or (@name='hint') or (@name='info') or starts-with(@name,'TODO')]"/>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/head/meta[8]">
      <svrl:text>&lt;meta name='TODO' content='credit for audio files'/&gt; </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="Scene | *[(lower-case(local-name()) = 'scene')]"/>
   <svrl:fired-rule context="WorldInfo"/>
   <svrl:fired-rule context="NavigationInfo"/>
   <svrl:fired-rule context="Background"/>
   <svrl:fired-rule context="Viewpoint | OrthoViewpoint"/>
   <svrl:successful-report test="contains(local-name(),'Viewpoint') and (string-length(@description) lt 1) and not(@USE) and not(boolean(IS/connect/@nodeField='description'))" role="warning" location="/X3D/Scene/Viewpoint">
      <svrl:text>&lt;Viewpoint DEF=''/&gt; is missing description which is important for accessibility and usability.  Example:
         description='initial view, rotate to examine object' </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Box | Cone | Cylinder | Sphere"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="ImageTexture | MovieTexture"/>
   <svrl:fired-rule context="Box | Cone | Cylinder | Sphere"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Box | Cone | Cylinder | Sphere"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="ImageTexture | MovieTexture"/>
   <svrl:successful-report test="not(local-name()='Anchor') and not(parent::field) and not(parent::fieldValue) and not(ancestor::ProtoDeclare) and not(ancestor::ExternProtoDeclare) and (string-length($normalizedStringUrl) &gt; 0) and preceding::*[normalize-space(@url) = $normalizedStringUrl] and (count(preceding::*[local-name()=$nodeName][normalize-space(@url) = $normalizedStringUrl]) &gt; 0)" role="warning" location="/X3D/Scene/Transform[2]/Transform[2]/Shape/Appearance/ImageTexture">
      <svrl:text>&lt;ImageTexture DEF=''/&gt; url array address(es) duplicate the url definition found in a preceding node,
         consider DEF/USE to reduce download delays and memory requirements for url content
         (url='"images/line.png" "https://www.web3d.org/x3d/content/examples/X3dForAdvancedModeling/AudioSpatialSound/images/line.png"') </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Box | Cone | Cylinder | Sphere"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Box | Cone | Cylinder | Sphere"/>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:successful-report test="(@USE) and (string-length($USE) &gt; 0) and (count(//*[@DEF=$USE]) = 1) and (count(following::*[@DEF=$USE]) &gt; 0)" role="error" location="/X3D/Scene/StreamAudioDestination/Gain/ChannelMerger/ChannelSelector[1]/Gain">
      <svrl:text>&lt;Gain USE='ChannelSplitter'/&gt; found USE node that precedes matching DEF node, count(following::*[@DEF=$USE])=1</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="(@USE) and (not($nodeName=$DEFNodeName) and (string-length($nodeName) &gt; 0) and (string-length($DEFNodeName) &gt; 0))" role="error" location="/X3D/Scene/StreamAudioDestination/Gain/ChannelMerger/ChannelSelector[1]/Gain">
      <svrl:text>&lt;Gain USE='ChannelSplitter'/&gt; node type must match node type of original &lt;ChannelSplitter DEF='ChannelSplitter'/&gt; </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:successful-report test="(@USE) and (string-length($USE) &gt; 0) and (count(//*[@DEF=$USE]) = 1) and (count(following::*[@DEF=$USE]) &gt; 0)" role="error" location="/X3D/Scene/StreamAudioDestination/Gain/ChannelMerger/ChannelSelector[2]/Gain">
      <svrl:text>&lt;Gain USE='ChannelSplitter'/&gt; found USE node that precedes matching DEF node, count(following::*[@DEF=$USE])=1</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="(@USE) and (not($nodeName=$DEFNodeName) and (string-length($nodeName) &gt; 0) and (string-length($DEFNodeName) &gt; 0))" role="error" location="/X3D/Scene/StreamAudioDestination/Gain/ChannelMerger/ChannelSelector[2]/Gain">
      <svrl:text>&lt;Gain USE='ChannelSplitter'/&gt; node type must match node type of original &lt;ChannelSplitter DEF='ChannelSplitter'/&gt; </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="AcousticProperties |  AudioDestination | BiquadFilter | BufferAudioSource |              ChannelMerger | ChannelSelector | ChannelSplitter | Convolver | Delay | DynamicsCompressor |              Gain | ListenerPointSource | MicrophoneSource | OscillatorSource | PeriodicWave | SpatialSound |              StreamAudioDestination | StreamAudioSource | WaveShaper"/>
   <svrl:fired-rule context="AudioClip"/>
   <svrl:successful-report test="(string-length(@url) &gt; 2) and not(contains(@url,'.wav')) and not(contains(@url,'.mid')) and not(contains(@url,'.midi'))" role="warning" location="/X3D/Scene/ChannelSplitter/AudioClip">
      <svrl:text>&lt;AudioClip DEF=''/&gt; url array does not contains link to .wav or .midi sound files, browsers not required
         to support other formats (url='"sound/violin.mp3" "https://www.web3d.org/x3d/content/examples/X3dForAdvancedModeling/AudioSpatialSound/sound/violin.mp3"') </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="ImageTexture | MovieTexture"/>
   <svrl:fired-rule context="Box | Cone | Cylinder | Sphere"/>
</svrl:schematron-output>