@prefix : <https://coderextreme.net/X3DJSONLD/flowerproto.ttl#> .
@prefix dc: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix x3d: <https://www.web3d.org/semantics/ontologies/X3dOntology4.0#> .

:Scene rdf:type owl:NamedIndividual, x3d:Scene .
:ProtoDeclare_2 rdf:type owl:NamedIndividual, x3d:ProtoDeclare ;
  x3d:name "FlowerProto" .
:ProtoInterface_2_1 rdf:type owl:NamedIndividual, x3d:ProtoInterface .
:field_2_1_1 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:accessType "inputOutput" ;
  x3d:name "vertex" ;
  x3d:type "MFString" ;
  x3d:value "../shaders/gl_flowers_chromatic.vs" .
:field_2_1_1 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:accessType "inputOutput" ;
  x3d:name "fragment" ;
  x3d:type "MFString" ;
  x3d:value "../shaders/pc_flowers.fs" .
:ProtoBody_2_1 rdf:type owl:NamedIndividual, x3d:ProtoBody .
:transform rdf:type owl:NamedIndividual, x3d:Transform .
:transform x3d:hasShape :Shape_2_1_2_1 .
:Shape_2_1_2_1 rdf:type owl:NamedIndividual, x3d:Shape .
:Appearance_2_1_2_1_1 rdf:type owl:NamedIndividual, x3d:Appearance .
:Material_2_1_2_1_1_1 rdf:type owl:NamedIndividual, x3d:Material ;
  x3d:diffuseColor ".7 .7 .7" ;
  x3d:specularColor ".5 .5 .5" .
:texture rdf:type owl:NamedIndividual, x3d:ComposedCubeMapTexture ;
  x3d:containerField "texture" .
:texture x3d:hasImageTexture :ImageTexture_2_1_2_1_1_1_2 .
:ImageTexture_2_1_2_1_1_1_2 rdf:type owl:NamedIndividual, x3d:ImageTexture ;
  x3d:url "../resources/images/all_probes/stpeters_cross/stpeters_back.png https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png" ;
  x3d:containerField "back" .
:texture x3d:hasImageTexture :ImageTexture_2_1_2_1_1_1_2 .
:ImageTexture_2_1_2_1_1_1_2 rdf:type owl:NamedIndividual, x3d:ImageTexture ;
  x3d:url "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png" ;
  x3d:containerField "bottom" .
:texture x3d:hasImageTexture :ImageTexture_2_1_2_1_1_1_2 .
:ImageTexture_2_1_2_1_1_1_2 rdf:type owl:NamedIndividual, x3d:ImageTexture ;
  x3d:url "../resources/images/all_probes/stpeters_cross/stpeters_front.png https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png" ;
  x3d:containerField "front" .
:texture x3d:hasImageTexture :ImageTexture_2_1_2_1_1_1_2 .
:ImageTexture_2_1_2_1_1_1_2 rdf:type owl:NamedIndividual, x3d:ImageTexture ;
  x3d:url "../resources/images/all_probes/stpeters_cross/stpeters_left.png https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png" ;
  x3d:containerField "left" .
:texture x3d:hasImageTexture :ImageTexture_2_1_2_1_1_1_2 .
:ImageTexture_2_1_2_1_1_1_2 rdf:type owl:NamedIndividual, x3d:ImageTexture ;
  x3d:url "../resources/images/all_probes/stpeters_cross/stpeters_right.png https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png" ;
  x3d:containerField "right" .
:texture x3d:hasImageTexture :ImageTexture_2_1_2_1_1_1_2 .
:ImageTexture_2_1_2_1_1_1_2 rdf:type owl:NamedIndividual, x3d:ImageTexture ;
  x3d:url "../resources/images/all_probes/stpeters_cross/stpeters_top.png https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png" ;
  x3d:containerField "top" .
:shader rdf:type owl:NamedIndividual, x3d:ComposedShader ;
  x3d:language "GLSL" ;
  x3d:containerField "shaders" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "cube" ;
  x3d:type "SFInt32" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "chromaticDispertion" ;
  x3d:accessType "initializeOnly" ;
  x3d:type "SFVec3f" ;
  x3d:value "0.98 1.0 1.033" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "bias" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0.5" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "scale" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0.5" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "power" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "2" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "a" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "10" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "b" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "1" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "c" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "20" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "d" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "20" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "tdelta" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0" .
:shader x3d:hasfield :field_2_1_2_1_1_1_3 .
:field_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "pdelta" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0" .
:shader x3d:hasShaderPart :ShaderPart_2_1_2_1_1_1_3 .
:ShaderPart_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:ShaderPart ;
  x3d:containerField "parts" .

					:IS_2_1_2_1_1_1_3_12 rdf:type owl:NamedIndividual, x3d:IS .
:connect_2_1_2_1_1_1_3_12_1 rdf:type owl:NamedIndividual, x3d:connect ;
  x3d:nodeField "url" ;
  x3d:protoField "vertex" .

                                :shader x3d:hasShaderPart :ShaderPart_2_1_2_1_1_1_3 .
:ShaderPart_2_1_2_1_1_1_3 rdf:type owl:NamedIndividual, x3d:ShaderPart ;
  x3d:type "FRAGMENT" ;
  x3d:containerField "parts" .

					:IS_2_1_2_1_1_1_3_13 rdf:type owl:NamedIndividual, x3d:IS .
:connect_2_1_2_1_1_1_3_13_1 rdf:type owl:NamedIndividual, x3d:connect ;
  x3d:nodeField "url" ;
  x3d:protoField "fragment" .

                                :Sphere_2_1_2_1_1 rdf:type owl:NamedIndividual, x3d:Sphere .
:transform x3d:hasScript :Animate .
:Animate rdf:type owl:NamedIndividual, x3d:Script .

                  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "translation" ;
  x3d:accessType "inputOutput" ;
  x3d:type "SFVec3f" ;
  x3d:value "0 0 0" .

                  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "velocity" ;
  x3d:accessType "inputOutput" ;
  x3d:type "SFVec3f" ;
  x3d:value "0 0 0" .

                  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "set_fraction" ;
  x3d:accessType "inputOnly" ;
  x3d:type "SFFloat" .

		  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "a" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0.5" .

		  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "b" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0.5" .

		  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "c" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "3" .

		  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "d" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "3" .

		  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "tdelta" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0.5" .

		  :Animate x3d:hasfield :field_2_1_2_1_2 .
:field_2_1_2_1_2 rdf:type owl:NamedIndividual, x3d:field ;
  x3d:name "pdelta" ;
  x3d:type "SFFloat" ;
  x3d:accessType "inputOutput" ;
  x3d:value "0.5" .


  
ecmascript:
			function initialize() {
			    translation = new SFVec3f(0, 0, 0);
			    velocity = new SFVec3f(
			    	Math.random() - 0.5,
				Math.random() - 0.5,
				Math.random() - 0.5);
			}
			function set_fraction() {
			    translation = new SFVec3f(
			    	translation.x + velocity.x,
				translation.y + velocity.y,
				translation.z + velocity.z);
			    for (var j = 0; j <= 2; j++) {
				    if (Math.abs(translation.x) > 10) {
					initialize();
				    } else if (Math.abs(translation.y) > 10) {
					initialize();
				    } else if (Math.abs(translation.z) > 10) {
					initialize();
				    } else {
					velocity.x += Math.random() * 0.2 - 0.1;
					velocity.y += Math.random() * 0.2 - 0.1;
					velocity.z += Math.random() * 0.2 - 0.1;
				    }
			    }
			    animate_flowers();
			}

			function animate_flowers(fraction, eventTime) {
				var choice = Math.floor(Math.random() * 4);
				switch (choice) {
				case 0:
					a += Math.random() * 0.2 - 0.1;
					break;
				case 1:
					b += Math.random() * 0.2 - 0.1;
					break;
				case 2:
					c += Math.random() * 2 - 1;
					break;
				case 3:
					d += Math.random() * 2 - 1;
					break;
				}
				tdelta += 0.5;
				pdelta += 0.5;
				if (a > 1) {
					a =  0.5;
				}
				if (b > 1) {
					b =  0.5;
				}
				if (c < 1) {
					c =  4;
				}
				if (d < 1) {
					d =  4;
				}
				if (c > 10) {
					c = 4;
				}
				if (d > 10) {
					d = 4;
				}
			}


            :transform x3d:hasTimeSensor :TourTime .
:TourTime rdf:type owl:NamedIndividual, x3d:TimeSensor ;
  x3d:cycleInterval "5" ;
  x3d:loop "true" .
:transform x3d:hasROUTE :ROUTE_2_1_2_1 .
:ROUTE_2_1_2_1 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "TourTime" ;
  x3d:fromField "fraction_changed" ;
  x3d:toNode "Animate" ;
  x3d:toField "set_fraction" .
:transform x3d:hasROUTE :ROUTE_2_1_2_1 .
:ROUTE_2_1_2_1 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "Animate" ;
  x3d:fromField "translation_changed" ;
  x3d:toNode "transform" ;
  x3d:toField "set_translation" .
:transform x3d:hasROUTE :ROUTE_2_1_2_1 .
:ROUTE_2_1_2_1 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "Animate" ;
  x3d:fromField "a" ;
  x3d:toNode "shader" ;
  x3d:toField "a" .
:transform x3d:hasROUTE :ROUTE_2_1_2_1 .
:ROUTE_2_1_2_1 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "Animate" ;
  x3d:fromField "b" ;
  x3d:toNode "shader" ;
  x3d:toField "b" .
:transform x3d:hasROUTE :ROUTE_2_1_2_1 .
:ROUTE_2_1_2_1 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "Animate" ;
  x3d:fromField "c" ;
  x3d:toNode "shader" ;
  x3d:toField "c" .
:transform x3d:hasROUTE :ROUTE_2_1_2_1 .
:ROUTE_2_1_2_1 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "Animate" ;
  x3d:fromField "d" ;
  x3d:toNode "shader" ;
  x3d:toField "d" .
:transform x3d:hasROUTE :ROUTE_2_1_2_1 .
:ROUTE_2_1_2_1 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "Animate" ;
  x3d:fromField "tdelta" ;
  x3d:toNode "shader" ;
  x3d:toField "tdelta" .
:transform x3d:hasROUTE :ROUTE_2_1_2_1 .
:ROUTE_2_1_2_1 rdf:type owl:NamedIndividual, x3d:ROUTE ;
  x3d:fromNode "Animate" ;
  x3d:fromField "pdelta" ;
  x3d:toNode "shader" ;
  x3d:toField "pdelta" .
