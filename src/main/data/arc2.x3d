<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D  xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Immersive" version="3.3" >
    <head>
        <meta name="title" content="arc2.x3d"></meta>
        <meta name="creator" content="Lost, Doug Sanden I think"></meta>
        <meta name="generator" content="manual"></meta>
        <meta name="identifier" content="https://coderextreme.net/X3DJSONLD/src/main/data/arc1.x3d"></meta>
        <meta name="description" content="a generic proto to connect two objects"></meta>
    </head>
    <Scene>
        <Viewpoint position="0 0 5" description="Only Viewpoint"></Viewpoint>
        <Background skyColor="0.4 0.4 0.4"></Background>
        <Transform DEF="G1">
            <Transform DEF="DECLpoint_INSTANCE_node" translation="0 0 0">
                <Shape>
                    <Sphere containerField="geometry" radius="0.1"></Sphere>
                    <Appearance containerField="appearance">
                        <Material containerField="material" diffuseColor="1 0 0"></Material>
                    </Appearance>
                </Shape>
                <PositionInterpolator DEF="DECLpoint_INSTANCE_PI1" key="0 1" keyValue="0 0 0 0 5 0"></PositionInterpolator>
                <Script DEF="DECLpoint_INSTANCE_MB1">
                    <field name="translation" accessType="inputOutput" type="SFVec3f" value="0 0 0"></field>
                    <field name="old" accessType="inputOutput" type="SFVec3f" value="0 0 0"></field>
                    <field name="set_location" accessType="inputOnly" type="SFTime"></field>
                    <field name="keyValue" accessType="inputOutput" type="MFVec3f" value="0 0 0 0 5 0"></field>
<![CDATA[

ecmascript:
               function set_location(value) {
                    old = translation;
                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f(old, translation);
               }


]]></Script>
                <TimeSensor DEF="DECLpoint_INSTANCE_CL1" cycleInterval="3" loop="true"></TimeSensor>
                <ROUTE fromNode="DECLpoint_INSTANCE_CL1" fromField="cycleTime" toNode="DECLpoint_INSTANCE_MB1" toField="set_location"></ROUTE>
                <ROUTE fromNode="DECLpoint_INSTANCE_CL1" fromField="fraction_changed" toNode="DECLpoint_INSTANCE_PI1" toField="set_fraction"></ROUTE>
                <ROUTE fromNode="DECLpoint_INSTANCE_MB1" fromField="keyValue" toNode="DECLpoint_INSTANCE_PI1" toField="keyValue"></ROUTE>
                <ROUTE fromNode="DECLpoint_INSTANCE_PI1" fromField="value_changed" toNode="DECLpoint_INSTANCE_node" toField="set_translation"></ROUTE>
                <ROUTE fromNode="DECLpoint_INSTANCE_MB1" fromField="translation_changed" toNode="DECLpoint_INSTANCE_node" toField="set_translation"></ROUTE>
            </Transform>
        </Transform>
        <Transform DEF="G2">
            <Transform DEF="DECLpoint_INSTANCE1000_node" translation="0 0 0">
                <Shape>
                    <Sphere containerField="geometry" radius="0.1"></Sphere>
                    <Appearance containerField="appearance">
                        <Material containerField="material" diffuseColor="1 0 0"></Material>
                    </Appearance>
                </Shape>
                <PositionInterpolator DEF="DECLpoint_INSTANCE1000_PI1" key="0 1" keyValue="0 0 0 0 5 0"></PositionInterpolator>
                <Script DEF="DECLpoint_INSTANCE1000_MB1">
                    <field name="translation" accessType="inputOutput" type="SFVec3f" value="0 0 0"></field>
                    <field name="old" accessType="inputOutput" type="SFVec3f" value="0 0 0"></field>
                    <field name="set_location" accessType="inputOnly" type="SFTime"></field>
                    <field name="keyValue" accessType="inputOutput" type="MFVec3f" value="0 0 0 0 5 0"></field>
<![CDATA[

ecmascript:
               function set_location(value) {
                    old = translation;
                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f(old, translation);
               }


]]></Script>
                <TimeSensor DEF="DECLpoint_INSTANCE1000_CL1" cycleInterval="3" loop="true"></TimeSensor>
                <ROUTE fromNode="DECLpoint_INSTANCE1000_CL1" fromField="cycleTime" toNode="DECLpoint_INSTANCE1000_MB1" toField="set_location"></ROUTE>
                <ROUTE fromNode="DECLpoint_INSTANCE1000_CL1" fromField="fraction_changed" toNode="DECLpoint_INSTANCE1000_PI1" toField="set_fraction"></ROUTE>
                <ROUTE fromNode="DECLpoint_INSTANCE1000_MB1" fromField="keyValue" toNode="DECLpoint_INSTANCE1000_PI1" toField="keyValue"></ROUTE>
                <ROUTE fromNode="DECLpoint_INSTANCE1000_PI1" fromField="value_changed" toNode="DECLpoint_INSTANCE1000_node" toField="set_translation"></ROUTE>
                <ROUTE fromNode="DECLpoint_INSTANCE1000_MB1" fromField="translation_changed" toNode="DECLpoint_INSTANCE1000_node" toField="set_translation"></ROUTE>
            </Transform>
        </Transform>
        <Transform DEF="transC1">
            <Transform DEF="rotscaleC1">
                <Shape>
                    <Appearance containerField="appearance">
                        <Material containerField="material" diffuseColor="0.2 0.7 0.7" transparency="0.5"></Material>
                    </Appearance>
                    <Cylinder containerField="geometry" radius="0.05"></Cylinder>
                </Shape>
            </Transform>
        </Transform>
        <Script DEF="DECLx3dconnector_connector1_S1">
            <field name="startnode" accessType="initializeOnly" type="SFNode">
                <Transform USE="G1"></Transform>
            </field>
            <field name="endnode" accessType="initializeOnly" type="SFNode">
                <Transform USE="G2"></Transform>
            </field>
            <field name="transC1" accessType="initializeOnly" type="SFNode">
                <Transform USE="transC1"></Transform>
            </field>
            <field name="rotscaleC1" accessType="initializeOnly" type="SFNode">
                <Transform USE="rotscaleC1"></Transform>
            </field>
            <field name="set_startpoint" accessType="inputOnly" type="SFVec3f"></field>
            <field name="set_endpoint" accessType="inputOnly" type="SFVec3f"></field>
<![CDATA[
            ecmascript:
        function recompute(startpoint,endpoint){
	    if (typeof endpoint === 'undefined') {
		return;
	    }
            var dif = endpoint.subtract(startpoint);
            var dist = dif.length()*0.5;
            var dif2 = dif.multiply(0.5);
            var norm = dif.normalize();
            var transl = startpoint.add(dif2);
	    if (typeof Quaternion !== 'undefined') {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)
		    };
	    } else {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)
		    };
	    }
	}
	function recompute_and_route(startpoint, endpoint) {
	      var trafo = recompute(startpoint, endpoint);
	      transC1.translation = trafo.translation;
	      rotscaleC1.rotation = trafo.rotation;
	      rotscaleC1.scale = trafo.scale;
	}
        function initialize(){
            recompute_and_route(startnode.translation,endnode.translation);
        }
        function set_startpoint(val,t){
            recompute_and_route(val,endnode.translation);
        }
        function set_endpoint(val,t){
            recompute_and_route(startnode.translation,val);
        }


]]></Script>
        <ROUTE fromNode="G1" fromField="translation_changed" toNode="DECLx3dconnector_connector1_S1" toField="set_startpoint"></ROUTE>
        <ROUTE fromNode="G2" fromField="translation_changed" toNode="DECLx3dconnector_connector1_S1" toField="set_endpoint"></ROUTE>
    </Scene>
</X3D>
