{
  "X3D": {
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "https://www.web3d.org/specifications/x3d-3.3.xsd",
    "head": {
      "-children": [
        {
          "#comment": " Originally these fundamental prototypes were defined in InterchangableActorsViaDynamicRoutingPrototypes.x3d "
        }
      ],
      "meta": [
        {
          "@content": "HAnimPrototypes.x3d",
          "@name": "title"
        },
        {
          "@content": "Example implementation of X3D Humanoid Animation (HAnim) nodes using X3D prototypes.",
          "@name": "description"
        },
        {
          "@content": "These are developmental examples that can assist X3D player implementations and support interoperability. They are not intended for author use in regular X3D scenes.",
          "@name": "warning"
        },
        {
          "@content": "Developer note: names for these HAnim Prototypes need to be corrected if used internally in an X3D player implementation (e.g. Joint to HAnimJoint).",
          "@name": "warning"
        },
        {
          "@content": "Need support for skin",
          "@name": "warning"
        },
        {
          "@content": "Ozan APAYDIN, Don Brutzman",
          "@name": "creator"
        },
        {
          "@content": "Ozan APAYDIN, Don Brutzman",
          "@name": "translator"
        },
        {
          "@content": "15 November 2001",
          "@name": "created"
        },
        {
          "@content": "23 May 2020",
          "@name": "modified"
        },
        {
          "@content": "upgrade to match support requirements for HAnim 2.2",
          "@name": "TODO"
        },
        {
          "@content": "https://www.web3d.org/files/specifications/19774/V1.0/HAnim/HAnim.html",
          "@name": "reference"
        },
        {
          "@content": "https://www.web3d.org/files/specifications/19775-1/V3.3/Part01/components/hanim.html",
          "@name": "reference"
        },
        {
          "@content": "http://HAnim.org/Models/HAnim2001/boxman/boxman.wrl",
          "@name": "reference"
        },
        {
          "@content": "http://HAnim.org/Specifications/HAnim2001",
          "@name": "reference"
        },
        {
          "@content": "http://www.HAnim.org",
          "@name": "reference"
        },
        {
          "@content": "http://HAnim.org/Models",
          "@name": "reference"
        },
        {
          "@content": "http://HAnim.org/Specifications",
          "@name": "reference"
        },
        {
          "@content": "InterchangableActorsViaDynamicRoutingPrototypes.x3d",
          "@name": "reference"
        },
        {
          "@content": "https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/HAnimPrototypes.x3d",
          "@name": "identifier"
        },
        {
          "@content": "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit",
          "@name": "generator"
        },
        {
          "@content": "../license.html",
          "@name": "license"
        },
        {
          "@name": "translated",
          "@content": "7 January 2021"
        },
        {
          "@name": "generator",
          "@content": "DOM2JSONSerializer.js, https://github.com/coderextreme/X3DJSONLD/blob/master/src/main/node/DOM2JSONSerializer.js"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "#comment": " **********Human Model Protypes********* "
        },
        {
          "ProtoDeclare": {
            "@appinfo": "The Humanoid node serves as overall container for the Joint Segment Site and Viewpoint nodes which define the skeleton geometry and landmarks of the humanoid figure. Additionally the node provides a means for defining information about the author copyright and usage restrictions of the model.",
            "@documentation": "http://HAnim.org/Specifications/HAnim2001/part1/Humanoid.html",
            "@name": "Humanoid1_1",
            "ProtoInterface": {
              "-children": [
                {
                  "#comment": " HAnim v1.1 field definitions "
                }
              ],
              "field": [
                {
                  "@accessType": "inputOutput",
                  "@name": "name",
                  "@type": "SFString"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "legal values: 1.1 or 2.0",
                  "@name": "version",
                  "@type": "SFString",
                  "@value": "1.1"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "Version of the humanoid being modeled. Hint: HAnim version 2.0",
                  "@name": "humanoidVersion",
                  "@type": "SFString"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "info",
                  "@type": "MFString"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "translation",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "rotation",
                  "@type": "SFRotation",
                  "@value": [
                    0,
                    0,
                    1,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "center",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "scale",
                  "@type": "SFVec3f",
                  "@value": [
                    1,
                    1,
                    1
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "scaleOrientation",
                  "@type": "SFRotation",
                  "@value": [
                    0,
                    0,
                    1,
                    0
                  ]
                },
                {
                  "@accessType": "initializeOnly",
                  "@name": "bboxCenter",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "initializeOnly",
                  "@name": "bboxSize",
                  "@type": "SFVec3f",
                  "@value": [
                    -1,
                    -1,
                    -1
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "HAnim 1.1 field container for body head. Hint: replaced by 2.0 skeleton.",
                  "@documentation": "http://HAnim.org/Specifications/HAnim1.1/#humanoid",
                  "@name": "humanoidBody",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "HAnim 2.0 field container for body geometry Hint: replaces 1.1 humanoidBody",
                  "@documentation": "http://HAnim.org/Specifications/HAnim2001/part1/Humanoid.html",
                  "@name": "skeleton",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "Container field for Joint nodes",
                  "@name": "joints",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "Container field for Segment nodes",
                  "@name": "segments",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "Container field for Site nodes",
                  "@name": "sites",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "Container field for Viewpoint nodes",
                  "@name": "viewpoints",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "Hint: HAnim version 2.0",
                  "@name": "skinCoord",
                  "@type": "SFNode",
                  "-children": [
                    {
                      "#comment": " NULL "
                    }
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "Hint: HAnim version 2.0",
                  "@name": "skinNormal",
                  "@type": "SFNode",
                  "-children": [
                    {
                      "#comment": " NULL "
                    }
                  ]
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                {
                  "Transform": {
                    "@DEF": "HumanoidTransform",
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "translation",
                          "@protoField": "translation"
                        },
                        {
                          "@nodeField": "rotation",
                          "@protoField": "rotation"
                        },
                        {
                          "@nodeField": "center",
                          "@protoField": "center"
                        },
                        {
                          "@nodeField": "scale",
                          "@protoField": "scale"
                        },
                        {
                          "@nodeField": "scaleOrientation",
                          "@protoField": "scaleOrientation"
                        },
                        {
                          "@nodeField": "bboxCenter",
                          "@protoField": "bboxCenter"
                        },
                        {
                          "@nodeField": "bboxSize",
                          "@protoField": "bboxSize"
                        }
                      ]
                    },
                    "-children": [
                      {
                        "Group": {
                          "@DEF": "HumanoidGroup1",
                          "IS": {
                            "connect": [
                              {
                                "@nodeField": "children",
                                "@protoField": "humanoidBody"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "Group": {
                          "@DEF": "HumanoidGroup2",
                          "IS": {
                            "connect": [
                              {
                                "@nodeField": "children",
                                "@protoField": "skeleton"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "Group": {
                          "@DEF": "HumanoidGroup3",
                          "IS": {
                            "connect": [
                              {
                                "@nodeField": "children",
                                "@protoField": "viewpoints"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        {
          "ProtoDeclare": {
            "@appinfo": "The Joint node is used as a building block to describe the articulations of the humanoid figure. Each articulation of the humanoid figure is represented by a Joint node each of which is organized into a hierarchy that describes the overall skeleton of the humanoid.",
            "@documentation": "http://HAnim.org/Specifications/HAnim2001/part1/Joint.html",
            "@name": "Joint",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "inputOutput",
                  "@name": "name",
                  "@type": "SFString"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "ulimit",
                  "@type": "MFFloat"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "llimit",
                  "@type": "MFFloat"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "limitOrientation",
                  "@type": "SFRotation",
                  "@value": [
                    0,
                    0,
                    1,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "skinCoordIndex",
                  "@type": "MFInt32"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "skinCoordWeight",
                  "@type": "MFFloat"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "stiffness",
                  "@type": "MFFloat",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "translation",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "rotation",
                  "@type": "SFRotation",
                  "@value": [
                    0,
                    0,
                    1,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "scale",
                  "@type": "SFVec3f",
                  "@value": [
                    1,
                    1,
                    1
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "scaleOrientation",
                  "@type": "SFRotation",
                  "@value": [
                    0,
                    0,
                    1,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "center",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "initializeOnly",
                  "@name": "bboxCenter",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "initializeOnly",
                  "@name": "bboxSize",
                  "@type": "SFVec3f",
                  "@value": [
                    -1,
                    -1,
                    -1
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "children",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOnly",
                  "@name": "addChildren",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOnly",
                  "@name": "removeChildren",
                  "@type": "MFNode"
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                {
                  "Transform": {
                    "@DEF": "JointTransform",
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "translation",
                          "@protoField": "translation"
                        },
                        {
                          "@nodeField": "rotation",
                          "@protoField": "rotation"
                        },
                        {
                          "@nodeField": "center",
                          "@protoField": "center"
                        },
                        {
                          "@nodeField": "scale",
                          "@protoField": "scale"
                        },
                        {
                          "@nodeField": "scaleOrientation",
                          "@protoField": "scaleOrientation"
                        },
                        {
                          "@nodeField": "bboxCenter",
                          "@protoField": "bboxCenter"
                        },
                        {
                          "@nodeField": "bboxSize",
                          "@protoField": "bboxSize"
                        },
                        {
                          "@nodeField": "children",
                          "@protoField": "children"
                        },
                        {
                          "@nodeField": "addChildren",
                          "@protoField": "addChildren"
                        },
                        {
                          "@nodeField": "removeChildren",
                          "@protoField": "removeChildren"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "ProtoDeclare": {
            "@appinfo": "The Segment node is used describe the attributes of the physical links between the joints of the humanoid figure. Each body part (pelvis thigh calf etc.) of the humanoid figure is represented by a Segment node.",
            "@documentation": "http://HAnim.org/Specifications/HAnim2001/part1/Segment.html",
            "@name": "Segment",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "inputOutput",
                  "@name": "name",
                  "@type": "SFString"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "mass",
                  "@type": "SFFloat",
                  "@value": 0
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "centerOfMass",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "momentsOfInertia",
                  "@type": "MFFloat",
                  "@value": [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "initializeOnly",
                  "@name": "bboxCenter",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "initializeOnly",
                  "@name": "bboxSize",
                  "@type": "SFVec3f",
                  "@value": [
                    -1,
                    -1,
                    -1
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "children",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOnly",
                  "@name": "addChildren",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOnly",
                  "@name": "removeChildren",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "contains Coordinate nodes",
                  "@name": "coord",
                  "@type": "SFNode",
                  "-children": [
                    {
                      "#comment": " NULL "
                    }
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@appinfo": "contains Displacer nodes",
                  "@name": "displacers",
                  "@type": "MFNode"
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                {
                  "Group": {
                    "@DEF": "SegmentGroup",
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "bboxCenter",
                          "@protoField": "bboxCenter"
                        },
                        {
                          "@nodeField": "bboxSize",
                          "@protoField": "bboxSize"
                        },
                        {
                          "@nodeField": "children",
                          "@protoField": "children"
                        },
                        {
                          "@nodeField": "addChildren",
                          "@protoField": "addChildren"
                        },
                        {
                          "@nodeField": "removeChildren",
                          "@protoField": "removeChildren"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "ProtoDeclare": {
            "@appinfo": "The Site node can be used for three purposes: (a) to define an \"end effector\" location which can be used by an inverse kinematics system (b) to define an attachment point for accessories such as jewelry and clothing and (c) to define a location for a virtual camera in the reference frame of a Segment node (such as a view \"through the eyes\" of the humanoid for use in multi-user worlds).",
            "@documentation": "http://HAnim.org/Specifications/HAnim2001/part1/Site.html",
            "@name": "Site",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "inputOutput",
                  "@name": "name",
                  "@type": "SFString"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "translation",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "rotation",
                  "@type": "SFRotation",
                  "@value": [
                    0,
                    0,
                    1,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "scale",
                  "@type": "SFVec3f",
                  "@value": [
                    1,
                    1,
                    1
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "scaleOrientation",
                  "@type": "SFRotation",
                  "@value": [
                    0,
                    0,
                    1,
                    0
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "center",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "initializeOnly",
                  "@name": "bboxCenter",
                  "@type": "SFVec3f",
                  "@value": [
                    0,
                    0,
                    0
                  ]
                },
                {
                  "@accessType": "initializeOnly",
                  "@name": "bboxSize",
                  "@type": "SFVec3f",
                  "@value": [
                    -1,
                    -1,
                    -1
                  ]
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "children",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOnly",
                  "@name": "addChildren",
                  "@type": "MFNode"
                },
                {
                  "@accessType": "inputOnly",
                  "@name": "removeChildren",
                  "@type": "MFNode"
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                {
                  "Transform": {
                    "@DEF": "SiteTransform",
                    "IS": {
                      "connect": [
                        {
                          "@nodeField": "translation",
                          "@protoField": "translation"
                        },
                        {
                          "@nodeField": "rotation",
                          "@protoField": "rotation"
                        },
                        {
                          "@nodeField": "center",
                          "@protoField": "center"
                        },
                        {
                          "@nodeField": "scale",
                          "@protoField": "scale"
                        },
                        {
                          "@nodeField": "scaleOrientation",
                          "@protoField": "scaleOrientation"
                        },
                        {
                          "@nodeField": "bboxCenter",
                          "@protoField": "bboxCenter"
                        },
                        {
                          "@nodeField": "bboxSize",
                          "@protoField": "bboxSize"
                        },
                        {
                          "@nodeField": "children",
                          "@protoField": "children"
                        },
                        {
                          "@nodeField": "addChildren",
                          "@protoField": "addChildren"
                        },
                        {
                          "@nodeField": "removeChildren",
                          "@protoField": "removeChildren"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "ProtoDeclare": {
            "@appinfo": "A Displacer can be used in three different ways: (a) identify the vertices corresponding to a particular feature on a Segment (b) represent a particular muscular action which displaces the vertices in various directions (linearly or radially) and (c) represent a complete configuration of the vertices in a Segment.",
            "@documentation": "http://HAnim.org/Specifications/HAnim2001/part1/Displacer.html",
            "@name": "Displacer",
            "ProtoInterface": {
              "field": [
                {
                  "@accessType": "inputOutput",
                  "@name": "name",
                  "@type": "SFString"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "coordIndex",
                  "@type": "MFInt32"
                },
                {
                  "@accessType": "inputOutput",
                  "@name": "displacements",
                  "@type": "MFVec3f"
                }
              ]
            },
            "ProtoBody": {
              "-children": [
                {
                  "WorldInfo": {
                    "@info": [
                      "null body node"
                    ]
                  }
                }
              ]
            }
          }
        },
        {
          "Shape": {
            "-children": [
              {
                "Text": {
                  "@string": [
                    "Humanoid Animation",
                    "(HAnim) prototype",
                    "implementations"
                  ],
                  "-children": [
                    {
                      "FontStyle": {
                        "@justify": [
                          "MIDDLE",
                          "MIDDLE"
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Appearance": {
                  "-children": [
                    {
                      "Material": {
                        "@ambientIntensity": 0.25,
                        "@diffuseColor": [
                          0.795918,
                          0.505869,
                          0.093315
                        ],
                        "@shininess": 0.39,
                        "@specularColor": [
                          0.923469,
                          0.428866,
                          0.006369
                        ],
                        "-children": [
                          {
                            "#comment": " Universal Media Library: Autumn 9 "
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    },
    "encoding": "UTF-8",
    "JSON schema": "https://www.web3d.org/specifications/x3d-4.0-JSONSchema.json"
  }
}