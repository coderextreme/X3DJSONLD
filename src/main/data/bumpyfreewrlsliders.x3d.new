<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "https://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="4.0" xsd:noNamespaceSchemaLocation="https://www.web3d.org/specifications/x3d-4.0.xsd" ><head><component name="Scripting" level="1"></component>
<component name="EnvironmentalEffects" level="3"></component>
<component name="Shaders" level="1"></component>
<component name="CubeMapTexturing" level="1"></component>
<component name="Texturing" level="1"></component>
<component name="Rendering" level="1"></component>
<component name="Shape" level="4"></component>
<component name="Grouping" level="3"></component>
<component name="Core" level="1"></component>
<component name="DIS" level="2"></component>
<meta name="title" content="bumpyfreewrlsliders.x3d"></meta>
<meta name="description" content="Bumpy Orbitals with Sliders for FreeWRL"></meta>
<meta name="creator" content="Doug Sanden, Christoph Valentin, John Carlson"></meta>
<meta name="identifier" content="https:/coderextreme.net/X3DJSONLD/src/main/data/bumpyfreewrlsliders.x3d"></meta>
<meta name="license" content="license.html"></meta>
</head>
<Scene><!--LayerSet with two layers, navigation happens in layer 1--><LayerSet activeLayer="1" order="1 2"><!--the first Layer contains the main scenery - "The Review of the Flower (DIS Multiuser)"--><!--the second layer contains the sliders that are moved with the user's display like a HUD (heads up display)--><Layer pickable="true" objectType="&quot;ALL&quot;"><!--basic nodes, which might be present in any scene--><NavigationInfo type="&quot;EXAMINE&quot; &quot;FLY&quot; &quot;LOOKAT&quot; &quot;ANY&quot;" avatarSize="0.25 1.75 0.75"></NavigationInfo>
<DirectionalLight ambientIntensity="0.2" direction="0 -1 0"></DirectionalLight>
<DirectionalLight ambientIntensity="0.2" direction="-1 -0.1 -1"></DirectionalLight>
<Viewpoint description="My Overview" fieldOfView="1.570796" position="0 1.75 60"></Viewpoint>
<!--this group contains the red/green/blue 3D crosshair--><Group><!--Arrow X--><Transform translation="25 0 0" rotation="0 0 -1 1.57"><Shape><Cylinder DEF="Shaft" radius="0.35" height="50"></Cylinder>
<Appearance containerField="appearance"><Material containerField="material" DEF="RED" diffuseColor="1 0 0" emissiveColor="1 0 0"></Material>
</Appearance>
</Shape>
</Transform>
<Transform translation="50 0 0" rotation="0 0 -1 1.57"><Shape><Cone DEF="Tip" bottomRadius="0.8" height="3"></Cone>
<Appearance containerField="appearance"><Material containerField="material" USE="RED"></Material>
</Appearance>
</Shape>
</Transform>
<!--Arrow Y--><Transform translation="0 25 0"><Shape><Cylinder USE="Shaft"></Cylinder>
<Appearance containerField="appearance"><Material containerField="material" DEF="GREEN" diffuseColor="0 1 0" emissiveColor="0 1 0"></Material>
</Appearance>
</Shape>
</Transform>
<Transform translation="0 50 0"><Shape><Cone USE="Tip"></Cone>
<Appearance containerField="appearance"><Material containerField="material" USE="GREEN"></Material>
</Appearance>
</Shape>
</Transform>
<!--Arrow Z--><Transform translation="0 0 25" rotation="1 0 0 1.57"><Shape><Cylinder USE="Shaft"></Cylinder>
<Appearance containerField="appearance"><Material containerField="material" DEF="BLUE" diffuseColor="0 0 1" emissiveColor="0 0 1"></Material>
</Appearance>
</Shape>
</Transform>
<Transform translation="0 0 50" rotation="1 0 0 1.57"><Shape><Cone USE="Tip"></Cone>
<Appearance containerField="appearance"><Material containerField="material" USE="BLUE"></Material>
</Appearance>
</Shape>
</Transform>
</Group>
<!--the model that is being reviewed by the users of this scene--><Transform DEF="FlowerTransform"><!--<Inline DEF="Flower" url='"bumpyfreewrl.x3d"' ></Inline>--><!--Images courtesy of Paul Debevec's Light Probe Image Gallery--><Background backUrl="&quot;../resources/images/all_probes/stpeters_cross/stpeters_back.png&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png&quot;" bottomUrl="&quot;../resources/images/all_probes/stpeters_cross/stpeters_bottom.png&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png&quot;" frontUrl="&quot;../resources/images/all_probes/stpeters_cross/stpeters_front.png&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png&quot;" leftUrl="&quot;../resources/images/all_probes/stpeters_cross/stpeters_left.png&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png&quot;" rightUrl="&quot;../resources/images/all_probes/stpeters_cross/stpeters_right.png&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png&quot;" topUrl="&quot;../resources/images/all_probes/stpeters_cross/stpeters_top.png&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png&quot;"></Background>
<Transform><Shape><Sphere radius="5"></Sphere>
<!--<IndexedFaceSet convex="false" DEF="Orbit" creaseAngle="0"> <Coordinate DEF="OrbitCoordinates"></Coordinate> </IndexedFaceSet>--><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.7 0.7 0.7" specularColor="0.5 0.5 0.5"></Material>
<ComposedCubeMapTexture containerField="texture" DEF="texture"><ImageTexture containerField="back" url="&quot;../resources/images/all_probes/stpeters_cross/stpeters_back.png&quot; &quot;https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png&quot;"></ImageTexture>
<ImageTexture containerField="bottom" url="&quot;../resources/images/all_probes/stpeters_cross/stpeters_bottom.png&quot; &quot;https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png&quot;"></ImageTexture>
<ImageTexture containerField="front" url="&quot;../resources/images/all_probes/stpeters_cross/stpeters_front.png&quot; &quot;https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png&quot;"></ImageTexture>
<ImageTexture containerField="left" url="&quot;../resources/images/all_probes/stpeters_cross/stpeters_left.png&quot; &quot;https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png&quot;"></ImageTexture>
<ImageTexture containerField="right" url="&quot;../resources/images/all_probes/stpeters_cross/stpeters_right.png&quot; &quot;https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png&quot;"></ImageTexture>
<ImageTexture containerField="top" url="&quot;../resources/images/all_probes/stpeters_cross/stpeters_top.png&quot; &quot;https://coderextreme.net/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png&quot;"></ImageTexture>
</ComposedCubeMapTexture>
<ComposedShader DEF="freewrlShader" language="GLSL"><field name="fw_textureCoordGenType" accessType="inputOutput" type="SFInt32" value="0"></field>
<field name="chromaticDispertion" accessType="initializeOnly" type="SFVec3f" value="0.98 1 1.033"></field>
<field name="bias" type="SFFloat" accessType="inputOutput" value="0.5"></field>
<field name="scale" type="SFFloat" accessType="inputOutput" value="0.5"></field>
<field name="power" type="SFFloat" accessType="inputOutput" value="2"></field>
<field name="a" type="SFFloat" accessType="inputOutput" value="15"></field>
<field name="b" type="SFFloat" accessType="inputOutput" value="5"></field>
<field name="c" type="SFFloat" accessType="inputOutput" value="20"></field>
<field name="d" type="SFFloat" accessType="inputOutput" value="20"></field>
<field name="tdelta" type="SFFloat" accessType="inputOutput" value="0"></field>
<field name="pdelta" type="SFFloat" accessType="inputOutput" value="0"></field>
<!--<field name='cube' type='SFNode' accessType="inputOutput"> <ComposedCubeMapTexture USE="texture"></ComposedCubeMapTexture> </field>--><ShaderPart type="VERTEX"><IS><connect nodeField="url" protoField="vertex"></connect>
</IS>
</ShaderPart>
<ShaderPart type="FRAGMENT"><IS><connect nodeField="url" protoField="fragment"></connect>
</IS>
</ShaderPart>
</ComposedShader>
<!--<ComposedShader DEF="freewrlShader" language="GLSL"> <field name='fw_textureCoordGenType' accessType='inputOutput' type='SFInt32' value='0'></field> <field name='chromaticDispertion' accessType='initializeOnly' type='SFVec3f' value='0.98 1.0 1.033'></field> <field name='bias' type='SFFloat' accessType='inputOutput' value='0.5'></field> <field name='scale' type='SFFloat' accessType='inputOutput' value='0.5'></field> <field name='power' type='SFFloat' accessType='inputOutput' value='2'></field> <field name='a' type='SFFloat' accessType='inputOutput' value='15'></field> <field name='b' type='SFFloat' accessType='inputOutput' value='5'></field> <field name='c' type='SFFloat' accessType='inputOutput' value='20'></field> <field name='d' type='SFFloat' accessType='inputOutput' value='20'></field> <field name='tdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <field name='pdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <ShaderPart type='VERTEX'> <IS> <connect nodeField="url" protoField="vertex"></connect> </IS> </ShaderPart> <ShaderPart type='FRAGMENT'> <IS> <connect nodeField="url" protoField="fragment"></connect> </IS> </ShaderPart> </ComposedShader>--></Appearance>
</Shape>
</Transform>
</Transform>
<!--<Script DEF="OrbitScript"> <field accessType="inputOutput" name="coordinates" type="MFVec3f"></field> <field accessType="outputOnly" name="coordIndexes" type="MFInt32"></field> <field name='a' type='SFFloat' accessType='inputOutput' value='10'></field> <field name='b' type='SFFloat' accessType='inputOutput' value='10'></field> <field name='c' type='SFFloat' accessType='inputOutput' value='2'></field> <field name='d' type='SFFloat' accessType='inputOutput' value='2'></field> <field name='pdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <field name='tdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <![CDATA[ecmascript: function initialize() { var resolution = 300; var theta = 0.0; var phi = 0.0; var delta = (2 * 3.141592653) / (resolution-1); var crds = new MFVec3f(); for ( i = 0; i < resolution; i++) { for ( j = 0; j < resolution; j++) { var rho = a + b * Math.cos(c * theta + tdelta) * Math.cos(d * phi + pdelta); crds.push(new SFVec3f( rho * Math.cos(phi) * Math.cos(theta), rho * Math.cos(phi) * Math.sin(theta), rho * Math.sin(phi) )); theta += delta; } phi += delta; } coordinates = crds; var cis = new MFInt32(); for ( i = 0; i < resolution-1; i++) { for ( j = 0; j < resolution-1; j++) { cis.push(i*resolution+j); cis.push(i*resolution+j+1); cis.push((i+1)*resolution+j+1); cis.push((i+1)*resolution+j); cis.push(-1); } } coordIndexes = cis; } ]]></Script> <ROUTE fromField="coordIndexes" fromNode="OrbitScript" toField="set_coordIndex" toNode="Orbit"></ROUTE> <ROUTE fromField="coordinates" fromNode="OrbitScript" toField="set_point" toNode="OrbitCoordinates"></ROUTE>--><!--DIS multiuser facilities--><DISEntityManager DEF="EntityManager"><DISEntityTypeMapping category="77" specific="1" url="&quot;../data/Leif8Final.x3d&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/data/Leif8Final.x3d&quot;"></DISEntityTypeMapping>
<DISEntityTypeMapping category="77" specific="2" url="&quot;../data/Lily8Final.x3d&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/data/Lily8Final.x3d&quot;"></DISEntityTypeMapping>
<DISEntityTypeMapping category="77" specific="3" url="&quot;../data/Tufani8Final.x3d&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/data/Tufani8Final.x3d&quot;"></DISEntityTypeMapping>
<DISEntityTypeMapping category="77" specific="4" url="&quot;../data/Gramps8Final.x3d&quot; &quot;https://coderextreme.net/X3DJSONLD/src/main/data/Gramps8Final.x3d&quot;"></DISEntityTypeMapping>
</DISEntityManager>
<Collision><Group DEF="AvatarHolder"></Group>
</Collision>
<ROUTE fromField="addedEntities" fromNode="EntityManager" toField="addChildren" toNode="AvatarHolder"></ROUTE>
<ROUTE fromField="removedEntities" fromNode="EntityManager" toField="removeChildren" toNode="AvatarHolder"></ROUTE>
</Layer>
<LayoutLayer pickable="true" objectType="&quot;ALL&quot;"><!--positioning the LayoutLayer--><!--clipping the LayoutLayer--><!--the content (children) of the LayoutLayer--><!--first, the slider for scaling the model--><Transform translation="0 0 -3"><Shape><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0.1 0.1 0.1" transparency="1"></Material>
</Appearance>
<Box size="100 100 0.02"></Box>
</Shape>
</Transform>
<Transform DEF="equationTransform"><Transform translation="0 0 -20"><Shape><Text DEF="equation" string="&quot;r = a + b * cos(c * theta + tdelta) * cos (d * phi + pdelta)&quot;"><FontStyle containerField="fontStyle" size="0.09"></FontStyle>
</Text>
<Appearance containerField="appearance"><Material containerField="material" diffuseColor="0 1 1"></Material>
</Appearance>
</Shape>
</Transform>
</Transform>
<ProtoDeclare name="SliderProto"><ProtoInterface><field name="sliderTranslation" accessType="inputOutput" type="SFVec3f" value="0 0.7 0"></field>
<field name="transformTranslation" accessType="inputOutput" type="SFVec3f" value="0 0 0.1"></field>
<field name="sensorTranslation" accessType="inputOutput" type="SFVec3f" value="0 0 0"></field>
<field name="numberTranslation" accessType="inputOutput" type="SFVec3f" value="0.2 0 0"></field>
<field name="textString" accessType="inputOutput" type="MFString" value="&quot;a=&quot;"></field>
<field name="parameterName" accessType="inputOutput" type="SFString" value="a"></field>
<field name="parameterScale" accessType="inputOutput" type="SFFloat" value="30"></field>
<field name="shaderNode" accessType="inputOutput" type="SFNode"></field>
</ProtoInterface>
<ProtoBody><Group><Transform DEF="protoSlider" translation="0 0.7 0"><IS><connect nodeField="translation" protoField="sliderTranslation"></connect>
</IS>
<Transform DEF="protoTransform" translation="0 0 0.1"><IS><connect nodeField="translation" protoField="sensorTranslation"></connect>
</IS>
<PlaneSensor DEF="protoSensor" maxPosition="2 0"></PlaneSensor>
<Transform translation="0 0 0"><TouchSensor DEF="protoTS"></TouchSensor>
</Transform>
<Transform><Shape><Text DEF="protoText" string="&quot;a=&quot;"><IS><connect nodeField="string" protoField="textString"></connect>
</IS>
<FontStyle containerField="fontStyle" size="0.2"></FontStyle>
</Text>
<Appearance containerField="appearance"><Material containerField="material" diffuseColor="1 1 1"></Material>
</Appearance>
</Shape>
<Transform><IS><connect nodeField="translation" protoField="numberTranslation"></connect>
</IS>
<Shape><Text DEF="protoNumber" string="&quot;0&quot;"><FontStyle containerField="fontStyle" size="0.2"></FontStyle>
</Text>
<Appearance containerField="appearance"><Material containerField="material" diffuseColor="1 1 1"></Material>
</Appearance>
</Shape>
</Transform>
</Transform>
</Transform>
</Transform>
<Script DEF="protoValueTransformerScript" directOutput="true" mustEvaluate="true"><field name="protoScale" accessType="inputOutput" type="SFFloat" value="30"></field>
<field name="shader" accessType="inputOutput" type="SFNode"></field>
<field name="newTranslation" accessType="inputOutput" type="SFVec3f" value="1 1 1"></field>
<field name="protoValue_changed" accessType="inputOutput" type="SFFloat" value="1"></field>
<field name="protoNumber_changed" accessType="inputOutput" type="MFString" value="&quot;0.0&quot;"></field>
<field name="protoParameterName" accessType="inputOutput" type="SFString" value="a"></field>
<IS><connect nodeField="protoScale" protoField="parameterScale"></connect>
<connect nodeField="protoParameterName" protoField="parameterName"></connect>
<connect nodeField="shader" protoField="shaderNode"></connect>
</IS>
<![CDATA[ecmascript:
	const newTranslation = function(Value) {
	    protoValue_changed = Value[0] * protoScale;
	    protoNumber_changed = new MFString(protoValue_changed.toFixed(2).toString());
	    Browser.println("In newTranslation:");
	    Browser.println(shader);
	    Browser.println(Value[0]);
	    Browser.println(Value.x);
	    Browser.println(protoScale);
	    Browser.println(Value[0] * protoScale);
	    Browser.println(protoParameterName);
					// shader[protoParameterName] = Value[0] * protoScale;
	};]]></Script>
<ROUTE fromField="translation_changed" fromNode="protoSensor" toField="set_translation" toNode="protoTransform"></ROUTE>
<ROUTE fromField="translation_changed" fromNode="protoSensor" toField="newTranslation" toNode="protoValueTransformerScript"></ROUTE>
<ROUTE fromField="protoNumber_changed" fromNode="protoValueTransformerScript" toField="string" toNode="protoNumber"></ROUTE>
</Group>
</ProtoBody>
</ProtoDeclare>
<ProtoInstance name="SliderProto" DEF="aPI"><fieldValue name="sliderTranslation" value="0 0.7 0"></fieldValue>
<fieldValue name="transformTranslation" value="0 0 0.1"></fieldValue>
<fieldValue name="sensorTranslation" value="0 0 0"></fieldValue>
<fieldValue name="numberTranslation" value="0.3 0 0"></fieldValue>
<fieldValue name="textString" value="&quot;a=&quot;"></fieldValue>
<fieldValue name="parameterName" value="a"></fieldValue>
<fieldValue name="parameterScale" value="30"></fieldValue>
<fieldValue name="shaderNode"><ComposedShader USE="freewrlShader"></ComposedShader>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="SliderProto" DEF="bPI"><fieldValue name="sliderTranslation" value="0 0.4 0"></fieldValue>
<fieldValue name="transformTranslation" value="0 0 0.1"></fieldValue>
<fieldValue name="sensorTranslation" value="0 0 0"></fieldValue>
<fieldValue name="numberTranslation" value="0.3 0 0"></fieldValue>
<fieldValue name="textString" value="&quot;b=&quot;"></fieldValue>
<fieldValue name="parameterName" value="b"></fieldValue>
<fieldValue name="parameterScale" value="30"></fieldValue>
<fieldValue name="shaderNode"><ComposedShader USE="freewrlShader"></ComposedShader>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="SliderProto" DEF="cPI"><fieldValue name="sliderTranslation" value="0 0.1 0"></fieldValue>
<fieldValue name="transformTranslation" value="0 0 0.1"></fieldValue>
<fieldValue name="sensorTranslation" value="0 0 0"></fieldValue>
<fieldValue name="numberTranslation" value="0.3 0 0"></fieldValue>
<fieldValue name="textString" value="&quot;c=&quot;"></fieldValue>
<fieldValue name="parameterName" value="c"></fieldValue>
<fieldValue name="parameterScale" value="20"></fieldValue>
<fieldValue name="shaderNode"><ComposedShader USE="freewrlShader"></ComposedShader>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="SliderProto" DEF="dPI"><fieldValue name="sliderTranslation" value="0 -0.2 0"></fieldValue>
<fieldValue name="transformTranslation" value="0 0 0.1"></fieldValue>
<fieldValue name="sensorTranslation" value="0 0 0"></fieldValue>
<fieldValue name="numberTranslation" value="0.3 0 0"></fieldValue>
<fieldValue name="textString" value="&quot;d=&quot;"></fieldValue>
<fieldValue name="parameterName" value="d"></fieldValue>
<fieldValue name="parameterScale" value="20"></fieldValue>
<fieldValue name="shaderNode"><ComposedShader USE="freewrlShader"></ComposedShader>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="SliderProto" DEF="tdeltaPI"><fieldValue name="sliderTranslation" value="0 -0.5 0"></fieldValue>
<fieldValue name="transformTranslation" value="0 0 0.1"></fieldValue>
<fieldValue name="sensorTranslation" value="0 0 0"></fieldValue>
<fieldValue name="numberTranslation" value="0.8 0 0"></fieldValue>
<fieldValue name="textString" value="&quot;tdelta=&quot;"></fieldValue>
<fieldValue name="parameterName" value="tdelta"></fieldValue>
<fieldValue name="parameterScale" value="6.28"></fieldValue>
<fieldValue name="shaderNode"><ComposedShader USE="freewrlShader"></ComposedShader>
</fieldValue>
</ProtoInstance>
<ProtoInstance name="SliderProto" DEF="pdeltaPI"><fieldValue name="sliderTranslation" value="0 -0.8 0"></fieldValue>
<fieldValue name="transformTranslation" value="0 0 0.1"></fieldValue>
<fieldValue name="sensorTranslation" value="0 0 0"></fieldValue>
<fieldValue name="numberTranslation" value="0.8 0 0"></fieldValue>
<fieldValue name="textString" value="&quot;pdelta=&quot;"></fieldValue>
<fieldValue name="parameterName" value="pdelta"></fieldValue>
<fieldValue name="parameterScale" value="6.28"></fieldValue>
<fieldValue name="shaderNode"><ComposedShader USE="freewrlShader"></ComposedShader>
</fieldValue>
</ProtoInstance>
<Layout containerField="layout" align="&quot;LEFT&quot; &quot;BOTTOM&quot;" offset="-0.5 0"></Layout>
<Viewport containerField="viewport"></Viewport>
</LayoutLayer>
</LayerSet>
</Scene>
</X3D>