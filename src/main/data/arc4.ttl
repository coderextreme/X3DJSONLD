@prefix : <https://www.web3d.org/semantics/scenes/X3dScene1#> .
@prefix dc: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <http://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix x3d: <https://www.web3d.org/semantics/ontologies/X3dOntology4.0#> .

[ rdf:type owl:Ontology ;
   owl:imports <file:/E:/Rackstation-SVN/Papers/2019/IC3D-X3D/Paper/Files/X3dOntology4.0.ttl>
 ] .

:Scene-anonymous rdf:type owl:NamedIndividual , x3d:Scene .
:Viewpoint-anonymous rdf:type owl:NamedIndividual , x3d:Viewpoint ;
	x3d:position "0 0 5" ;
	x3d:description "Only Viewpoint" ;
	x3d:fieldOfView "0.7854" ;
	x3d:jump "true" ;
	x3d:orientation "0 0 1 0" ;
	x3d:centerOfRotation "0 0 0" ;
	x3d:retainUserOffsets "false" ;
	x3d:containerField "children" .
:Background-anonymous rdf:type owl:NamedIndividual , x3d:Background ;
	x3d:skyColor "0.4 0.4 0.4" ;
	x3d:transparency "0" ;
	x3d:containerField "children" .
:DECLpoint_G1_node rdf:type owl:NamedIndividual , x3d:Transform ;
	x3d:translation "0 0 0" ;
	x3d:center "0 0 0" ;
	x3d:rotation "0 0 1 0" ;
	x3d:scale "1 1 1" ;
	x3d:scaleOrientation "0 0 1 0" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" ;
	x3d:containerField "children" .
:DECLpoint_G1_node x3d:hasShape :Shape-anonymous .
:Shape-anonymous rdf:type owl:NamedIndividual , x3d:Shape ;
	x3d:containerField "children" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" .
:Sphere-anonymous rdf:type owl:NamedIndividual , x3d:Sphere ;
	x3d:containerField "geometry" ;
	x3d:radius "0.1" ;
	x3d:solid "true" .
:Appearance-anonymous rdf:type owl:NamedIndividual , x3d:Appearance ;
	x3d:containerField "appearance" .
:Material-anonymous rdf:type owl:NamedIndividual , x3d:Material ;
	x3d:containerField "material" ;
	x3d:diffuseColor "1 0 0" ;
	x3d:ambientIntensity "0.2" ;
	x3d:emissiveColor "0 0 0" ;
	x3d:shininess "0.2" ;
	x3d:specularColor "0 0 0" ;
	x3d:transparency "0" .
:DECLpoint_G1_node x3d:hasPositionInterpolator :DECLpoint_G1_PI1 .
:DECLpoint_G1_PI1 rdf:type owl:NamedIndividual , x3d:PositionInterpolator ;
	x3d:key "0 1" ;
	x3d:keyValue "0 0 0 0 5 0" ;
	x3d:containerField "children" .
:DECLpoint_G1_node x3d:hasScript :DECLpoint_G1_MB1 .
:DECLpoint_G1_MB1 rdf:type owl:NamedIndividual , x3d:Script ;
	x3d:directOutput "false" ;
	x3d:mustEvaluate "false" ;
	x3d:containerField "children" .
:DECLpoint_G1_MB1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "translation" ;
	x3d:accessType "inputOutput" ;
	x3d:value "0 0 0" .

:DECLpoint_G1_MB1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "old" ;
	x3d:accessType "inputOutput" ;
	x3d:value "0 0 0" .

:DECLpoint_G1_MB1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "set_location" ;
	x3d:accessType "inputOnly" .

:DECLpoint_G1_MB1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "keyValue" ;
	x3d:accessType "inputOutput" ;
	x3d:value "0 0 0 0 5 0" .

ecmascript:
		function set_location(value) {
                    old = translation;
		    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f([old, translation]);
		    // Browser.println(keyValue);
		}


:DECLpoint_G1_node x3d:hasTimeSensor :DECLpoint_G1_CL1 .
:DECLpoint_G1_CL1 rdf:type owl:NamedIndividual , x3d:TimeSensor ;
	x3d:cycleInterval "3" ;
	x3d:loop "true" ;
	x3d:enabled "true" ;
	x3d:startTime "0" ;
	x3d:stopTime "0" ;
	x3d:pauseTime "0" ;
	x3d:resumeTime "0" ;
	x3d:containerField "children" .
:DECLpoint_G1_node x3d:hasROUTE :ROUTE-anonymous .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G1_CL1" ;
	x3d:fromField "cycleTime" ;
	x3d:toNode "DECLpoint_G1_MB1" ;
	x3d:toField "set_location" .
:DECLpoint_G1_node x3d:hasROUTE :ROUTE-anonymous .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G1_CL1" ;
	x3d:fromField "fraction_changed" ;
	x3d:toNode "DECLpoint_G1_PI1" ;
	x3d:toField "set_fraction" .
:DECLpoint_G1_node x3d:hasROUTE :ROUTE-anonymous .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G1_MB1" ;
	x3d:fromField "keyValue" ;
	x3d:toNode "DECLpoint_G1_PI1" ;
	x3d:toField "keyValue" .
:DECLpoint_G1_node x3d:hasROUTE :ROUTE-anonymous .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G1_PI1" ;
	x3d:fromField "value_changed" ;
	x3d:toNode "DECLpoint_G1_node" ;
	x3d:toField "set_translation" .
:DECLpoint_G2_node rdf:type owl:NamedIndividual , x3d:Transform ;
	x3d:translation "0 0 0" ;
	x3d:center "0 0 0" ;
	x3d:rotation "0 0 1 0" ;
	x3d:scale "1 1 1" ;
	x3d:scaleOrientation "0 0 1 0" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" ;
	x3d:containerField "children" .
:DECLpoint_G2_node x3d:hasShape :Shape-anonymous .
:Shape-anonymous rdf:type owl:NamedIndividual , x3d:Shape ;
	x3d:containerField "children" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" .
:Sphere-anonymous rdf:type owl:NamedIndividual , x3d:Sphere ;
	x3d:containerField "geometry" ;
	x3d:radius "0.1" ;
	x3d:solid "true" .
:Appearance-anonymous rdf:type owl:NamedIndividual , x3d:Appearance ;
	x3d:containerField "appearance" .
:Material-anonymous rdf:type owl:NamedIndividual , x3d:Material ;
	x3d:containerField "material" ;
	x3d:diffuseColor "1 0 0" ;
	x3d:ambientIntensity "0.2" ;
	x3d:emissiveColor "0 0 0" ;
	x3d:shininess "0.2" ;
	x3d:specularColor "0 0 0" ;
	x3d:transparency "0" .
:DECLpoint_G2_node x3d:hasPositionInterpolator :DECLpoint_G2_PI1 .
:DECLpoint_G2_PI1 rdf:type owl:NamedIndividual , x3d:PositionInterpolator ;
	x3d:key "0 1" ;
	x3d:keyValue "0 0 0 0 5 0" ;
	x3d:containerField "children" .
:DECLpoint_G2_node x3d:hasScript :DECLpoint_G2_MB1 .
:DECLpoint_G2_MB1 rdf:type owl:NamedIndividual , x3d:Script ;
	x3d:directOutput "false" ;
	x3d:mustEvaluate "false" ;
	x3d:containerField "children" .
:DECLpoint_G2_MB1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "translation" ;
	x3d:accessType "inputOutput" ;
	x3d:value "0 0 0" .

:DECLpoint_G2_MB1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "old" ;
	x3d:accessType "inputOutput" ;
	x3d:value "0 0 0" .

:DECLpoint_G2_MB1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "set_location" ;
	x3d:accessType "inputOnly" .

:DECLpoint_G2_MB1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "keyValue" ;
	x3d:accessType "inputOutput" ;
	x3d:value "0 0 0 0 5 0" .

ecmascript:
		function set_location(value) {
                    old = translation;
		    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f([old, translation]);
		    // Browser.println(keyValue);
		}


:DECLpoint_G2_node x3d:hasTimeSensor :DECLpoint_G2_CL1 .
:DECLpoint_G2_CL1 rdf:type owl:NamedIndividual , x3d:TimeSensor ;
	x3d:cycleInterval "3" ;
	x3d:loop "true" ;
	x3d:enabled "true" ;
	x3d:startTime "0" ;
	x3d:stopTime "0" ;
	x3d:pauseTime "0" ;
	x3d:resumeTime "0" ;
	x3d:containerField "children" .
:DECLpoint_G2_node x3d:hasROUTE :ROUTE-anonymous .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G2_CL1" ;
	x3d:fromField "cycleTime" ;
	x3d:toNode "DECLpoint_G2_MB1" ;
	x3d:toField "set_location" .
:DECLpoint_G2_node x3d:hasROUTE :ROUTE-anonymous .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G2_CL1" ;
	x3d:fromField "fraction_changed" ;
	x3d:toNode "DECLpoint_G2_PI1" ;
	x3d:toField "set_fraction" .
:DECLpoint_G2_node x3d:hasROUTE :ROUTE-anonymous .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G2_MB1" ;
	x3d:fromField "keyValue" ;
	x3d:toNode "DECLpoint_G2_PI1" ;
	x3d:toField "keyValue" .
:DECLpoint_G2_node x3d:hasROUTE :ROUTE-anonymous .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G2_PI1" ;
	x3d:fromField "value_changed" ;
	x3d:toNode "DECLpoint_G2_node" ;
	x3d:toField "set_translation" .
:Group-anonymous rdf:type owl:NamedIndividual , x3d:Group ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" ;
	x3d:containerField "children" .
:DECLx3dconnector_connector1_trans rdf:type owl:NamedIndividual , x3d:Transform ;
	x3d:center "0 0 0" ;
	x3d:rotation "0 0 1 0" ;
	x3d:scale "1 1 1" ;
	x3d:scaleOrientation "0 0 1 0" ;
	x3d:translation "0 0 0" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" ;
	x3d:containerField "children" .
:DECLx3dconnector_connector1_trans x3d:hasTransform :DECLx3dconnector_connector1_rotscale .
:DECLx3dconnector_connector1_rotscale rdf:type owl:NamedIndividual , x3d:Transform ;
	x3d:center "0 0 0" ;
	x3d:rotation "0 0 1 0" ;
	x3d:scale "1 1 1" ;
	x3d:scaleOrientation "0 0 1 0" ;
	x3d:translation "0 0 0" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" ;
	x3d:containerField "children" .
:DECLx3dconnector_connector1_rotscale x3d:hasShape :Shape-anonymous .
:Shape-anonymous rdf:type owl:NamedIndividual , x3d:Shape ;
	x3d:containerField "children" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" .
:Appearance-anonymous rdf:type owl:NamedIndividual , x3d:Appearance ;
	x3d:containerField "appearance" .
:Material-anonymous rdf:type owl:NamedIndividual , x3d:Material ;
	x3d:containerField "material" ;
	x3d:diffuseColor "0.2 0.7 0.7" ;
	x3d:transparency "0.5" ;
	x3d:ambientIntensity "0.2" ;
	x3d:emissiveColor "0 0 0" ;
	x3d:shininess "0.2" ;
	x3d:specularColor "0 0 0" .
:Cylinder-anonymous rdf:type owl:NamedIndividual , x3d:Cylinder ;
	x3d:containerField "geometry" ;
	x3d:radius "0.05" ;
	x3d:bottom "true" ;
	x3d:height "2" ;
	x3d:side "true" ;
	x3d:top "true" ;
	x3d:solid "true" .
:DECLx3dconnector_connector1_S1 rdf:type owl:NamedIndividual , x3d:Script ;
	x3d:directOutput "false" ;
	x3d:mustEvaluate "false" ;
	x3d:containerField "children" .
:DECLx3dconnector_connector1_S1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "startnode" ;
	x3d:accessType "initializeOnly" .

:DECLx3dconnector_connector1_S1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "endnode" ;
	x3d:accessType "initializeOnly" .

:DECLx3dconnector_connector1_S1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "position" ;
	x3d:accessType "inputOutput" .
:Transform-anonymous rdf:type owl:NamedIndividual , x3d:Transform ;
	x3d:USE "DECLx3dconnector_connector1_trans" ;
	x3d:center "0 0 0" ;
	x3d:rotation "0 0 1 0" ;
	x3d:scale "1 1 1" ;
	x3d:scaleOrientation "0 0 1 0" ;
	x3d:translation "0 0 0" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" ;
	x3d:containerField "children" .

:DECLx3dconnector_connector1_S1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "rotscale" ;
	x3d:accessType "inputOutput" .
:Transform-anonymous rdf:type owl:NamedIndividual , x3d:Transform ;
	x3d:USE "DECLx3dconnector_connector1_rotscale" ;
	x3d:center "0 0 0" ;
	x3d:rotation "0 0 1 0" ;
	x3d:scale "1 1 1" ;
	x3d:scaleOrientation "0 0 1 0" ;
	x3d:translation "0 0 0" ;
	x3d:bboxCenter "0 0 0" ;
	x3d:bboxSize "-1 -1 -1" ;
	x3d:containerField "children" .

:DECLx3dconnector_connector1_S1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "set_startpoint" ;
	x3d:accessType "inputOnly" .

:DECLx3dconnector_connector1_S1 x3d:hasfield :field-anonymous .
:field-anonymous rdf:type owl:NamedIndividual , x3d:field ;
	x3d:name "set_endpoint" ;
	x3d:accessType "inputOnly" .

ecmascript:
        function recompute(startpoint,endpoint){
	    if (typeof endpoint === 'undefined') {
		    if (typeof Quaternion !== 'undefined') {
			    return {
				    scale : new SFVec3f(1.0,1.0,1.0),
				    translation : new SFVec3f(1.0,1.0,1.0),
			    	    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), 1.0)
			    };
	    	    } else if (typeof SFRotation !== 'undefined') {
			    return {
				    scale : new SFVec3f(1.0,1.0,1.0),
				    translation : new SFVec3f(1.0,1.0,1.0),
			    	    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),1.0)
			    };
	    	    } else {
			    return {
				    scale : new SFVec3f(1.0,1.0,1.0),
				    translation : new SFVec3f(1.0,1.0,1.0)
			    };
		    }
	    }
            var dif = endpoint.subtract(startpoint);
            var dist = dif.length()*0.5;
            var dif2 = dif.multiply(0.5);
            var norm = dif.normalize();
            var transl = startpoint.add(dif2);
	    if (typeof Quaternion !== 'undefined') {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)
		    };
	    } else if (typeof SFRotation !== 'undefined') {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)
		    };
	    } else {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl
		    };
	    }
	}
	function recompute_and_route(startpoint, endpoint) {
	      var trafo = recompute(startpoint, endpoint);
	      position.translation = trafo.translation;
	      rotscale.rotation = trafo.rotation;
	      rotscale.scale = trafo.scale;
	}
        function initialize(){
            recompute_and_route(startnode.translation,endnode.translation);
        }
        function set_startpoint(val,t){
            recompute_and_route(val,endnode.translation);
        }
        function set_endpoint(val,t){
            recompute_and_route(startnode.translation,val);
        }
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G1_node" ;
	x3d:fromField "translation_changed" ;
	x3d:toNode "DECLx3dconnector_connector1_S1" ;
	x3d:toField "set_startpoint" .
:ROUTE-anonymous rdf:type owl:NamedIndividual , x3d:ROUTE ;
	x3d:fromNode "DECLpoint_G2_node" ;
	x3d:fromField "translation_changed" ;
	x3d:toNode "DECLx3dconnector_connector1_S1" ;
	x3d:toField "set_endpoint" .
