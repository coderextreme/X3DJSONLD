{
    "X3D":,
    {
        "encoding":"UTF-8",
        "$id":   "https://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "@version":"4.0",
        "@profile":"Immersive",
    "head":
    {
        "meta":
        {
      {
        "@content":"bubs3.x3d",
        "@name":"title"
      }
    },
        "meta":
        {
      {
        "@content":"John Carlson",
        "@name":"creator"
      }
    },
        "meta":
        {
      {
        "@content":"Tour around a prismatic sphere",
        "@name":"description"
      }
    },
        "meta":
        {
      {
        "@content":"X3D-Edit, https://savage.nps.edu/X3D-Edit",
        "@name":"generator"
      }
    },
        "meta":
        {
      {
        "@content":"https://coderextreme.net/X3DJSONLD/src/main/data/bubs.x3d",
        "@name":"identifier"
      }
    },
    }    "Scene":
    {
        "NavigationInfo":
        {
      {
        "@type":""EXAMINE""
      }
    },
        "Viewpoint":
        {
      {
        "@description":"Bubbles in action",
        "@orientation":"1 0 0 0",
        "@position":"0 0 4"
      }
    },
        "Background":
        {
      {
        "@backUrl":""../resources/images/BK.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/BK.png"",
        "@bottomUrl":""../resources/images/BT.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/BT.png"",
        "@frontUrl":""../resources/images/FR.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/FR.png"",
        "@leftUrl":""../resources/images/LF.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/LF.png"",
        "@rightUrl":""../resources/images/RT.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/RT.png"",
        "@topUrl":""../resources/images/TP.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/TP.png""
      }
    },
        "Transform":
        {
      {
        "@DEF":"DECLBubble_bubbleA"
      }
            "Shape":
            {
                "Appearance":
                {
                    "Material":
                    {
      {
        "@diffuseColor":"1 0 0",
        "@transparency":"0.2"
      }
    },
                }                "Sphere":
                {
      {
        "@radius":"0.25"
      }
    },
            }            "Script":
            {
      {
        "@DEF":"DECLBubble_bubbleA_bounce",
        "@sourceCode":"ecmascript:
&quot;+
&quot;function initialize() {
&quot;+
&quot;    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);
&quot;+
&quot;
&quot;+
&quot;    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);
&quot;+
&quot;}
&quot;+
&quot;
&quot;+
&quot;function set_fraction(value) {
&quot;+
&quot;    translation = new SFVec3f(	translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z);
&quot;+
&quot;    scale = new SFVec3f(scale.x + scalvel.x, scale.y + scalvel.y, scale.z + scalvel.z);
&quot;+
&quot;    // if you get to far away or too big, explode
&quot;+
&quot;    if ( Math.abs(translation.x) > 256) {
&quot;+
&quot;	translation.x = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if ( Math.abs(translation.y) > 256) {
&quot;+
&quot;	translation.y = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if ( Math.abs(translation.z) > 256) {
&quot;+
&quot;	translation.z = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.x) > 20) {
&quot;+
&quot;	scale.x = scale.x/20;
&quot;+
&quot;	translation.x = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.y) > 20) {
&quot;+
&quot;	scale.y = scale.y/20;
&quot;+
&quot;	translation.y = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.z) > 20) {
&quot;+
&quot;	scale.z = scale.z/20;
&quot;+
&quot;	translation.z = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;}"
      }
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"scale",
        "@type":"SFVec3f",
        "@value":"[1, 1, 1]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"translation",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"velocity",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"scalvel",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOnly",
        "@name":"set_fraction",
        "@type":"SFFloat"
      }
    },
            }            "TimeSensor":
            {
      {
        "@DEF":"DECLBubble_bubbleA_bubbleClock",
        "@cycleInterval":"10",
        "@loop":"true"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"translation_changed",
        "@fromNode":"DECLBubble_bubbleA_bounce",
        "@toField":"set_translation",
        "@toNode":"DECLBubble_transform"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"scale_changed",
        "@fromNode":"DECLBubble_bubbleA_bounce",
        "@toField":"set_scale",
        "@toNode":"DECLBubble_transform"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"fraction_changed",
        "@fromNode":"DECLBubble_bubbleA_bubbleClock",
        "@toField":"set_fraction",
        "@toNode":"DECLBubble_bubbleA_bounce"
      }
    },
        }        "Transform":
        {
      {
        "@DEF":"DECLBubble_bubbleB"
      }
            "Shape":
            {
                "Appearance":
                {
                    "Material":
                    {
      {
        "@diffuseColor":"1 0 0",
        "@transparency":"0.2"
      }
    },
                }                "Sphere":
                {
      {
        "@radius":"0.25"
      }
    },
            }            "Script":
            {
      {
        "@DEF":"DECLBubble_bubbleB_bounce",
        "@sourceCode":"ecmascript:
&quot;+
&quot;function initialize() {
&quot;+
&quot;    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);
&quot;+
&quot;
&quot;+
&quot;    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);
&quot;+
&quot;}
&quot;+
&quot;
&quot;+
&quot;function set_fraction(value) {
&quot;+
&quot;    translation = new SFVec3f(	translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z);
&quot;+
&quot;    scale = new SFVec3f(scale.x + scalvel.x, scale.y + scalvel.y, scale.z + scalvel.z);
&quot;+
&quot;    // if you get to far away or too big, explode
&quot;+
&quot;    if ( Math.abs(translation.x) > 256) {
&quot;+
&quot;	translation.x = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if ( Math.abs(translation.y) > 256) {
&quot;+
&quot;	translation.y = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if ( Math.abs(translation.z) > 256) {
&quot;+
&quot;	translation.z = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.x) > 20) {
&quot;+
&quot;	scale.x = scale.x/20;
&quot;+
&quot;	translation.x = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.y) > 20) {
&quot;+
&quot;	scale.y = scale.y/20;
&quot;+
&quot;	translation.y = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.z) > 20) {
&quot;+
&quot;	scale.z = scale.z/20;
&quot;+
&quot;	translation.z = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;}"
      }
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"scale",
        "@type":"SFVec3f",
        "@value":"[1, 1, 1]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"translation",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"velocity",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"scalvel",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOnly",
        "@name":"set_fraction",
        "@type":"SFFloat"
      }
    },
            }            "TimeSensor":
            {
      {
        "@DEF":"DECLBubble_bubbleB_bubbleClock",
        "@cycleInterval":"10",
        "@loop":"true"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"translation_changed",
        "@fromNode":"DECLBubble_bubbleB_bounce",
        "@toField":"set_translation",
        "@toNode":"DECLBubble_transform"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"scale_changed",
        "@fromNode":"DECLBubble_bubbleB_bounce",
        "@toField":"set_scale",
        "@toNode":"DECLBubble_transform"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"fraction_changed",
        "@fromNode":"DECLBubble_bubbleB_bubbleClock",
        "@toField":"set_fraction",
        "@toNode":"DECLBubble_bubbleB_bounce"
      }
    },
        }        "Transform":
        {
      {
        "@DEF":"DECLBubble_bubbleC"
      }
            "Shape":
            {
                "Appearance":
                {
                    "Material":
                    {
      {
        "@diffuseColor":"1 0 0",
        "@transparency":"0.2"
      }
    },
                }                "Sphere":
                {
      {
        "@radius":"0.25"
      }
    },
            }            "Script":
            {
      {
        "@DEF":"DECLBubble_bubbleC_bounce",
        "@sourceCode":"ecmascript:
&quot;+
&quot;function initialize() {
&quot;+
&quot;    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);
&quot;+
&quot;
&quot;+
&quot;    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);
&quot;+
&quot;}
&quot;+
&quot;
&quot;+
&quot;function set_fraction(value) {
&quot;+
&quot;    translation = new SFVec3f(	translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z);
&quot;+
&quot;    scale = new SFVec3f(scale.x + scalvel.x, scale.y + scalvel.y, scale.z + scalvel.z);
&quot;+
&quot;    // if you get to far away or too big, explode
&quot;+
&quot;    if ( Math.abs(translation.x) > 256) {
&quot;+
&quot;	translation.x = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if ( Math.abs(translation.y) > 256) {
&quot;+
&quot;	translation.y = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if ( Math.abs(translation.z) > 256) {
&quot;+
&quot;	translation.z = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.x) > 20) {
&quot;+
&quot;	scale.x = scale.x/20;
&quot;+
&quot;	translation.x = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.y) > 20) {
&quot;+
&quot;	scale.y = scale.y/20;
&quot;+
&quot;	translation.y = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.z) > 20) {
&quot;+
&quot;	scale.z = scale.z/20;
&quot;+
&quot;	translation.z = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;}"
      }
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"scale",
        "@type":"SFVec3f",
        "@value":"[1, 1, 1]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"translation",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"velocity",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"scalvel",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOnly",
        "@name":"set_fraction",
        "@type":"SFFloat"
      }
    },
            }            "TimeSensor":
            {
      {
        "@DEF":"DECLBubble_bubbleC_bubbleClock",
        "@cycleInterval":"10",
        "@loop":"true"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"translation_changed",
        "@fromNode":"DECLBubble_bubbleC_bounce",
        "@toField":"set_translation",
        "@toNode":"DECLBubble_transform"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"scale_changed",
        "@fromNode":"DECLBubble_bubbleC_bounce",
        "@toField":"set_scale",
        "@toNode":"DECLBubble_transform"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"fraction_changed",
        "@fromNode":"DECLBubble_bubbleC_bubbleClock",
        "@toField":"set_fraction",
        "@toNode":"DECLBubble_bubbleC_bounce"
      }
    },
        }        "Transform":
        {
      {
        "@DEF":"DECLBubble_bubbleD"
      }
            "Shape":
            {
                "Appearance":
                {
                    "Material":
                    {
      {
        "@diffuseColor":"1 0 0",
        "@transparency":"0.2"
      }
    },
                }                "Sphere":
                {
      {
        "@radius":"0.25"
      }
    },
            }            "Script":
            {
      {
        "@DEF":"DECLBubble_bubbleD_bounce",
        "@sourceCode":"ecmascript:
&quot;+
&quot;function initialize() {
&quot;+
&quot;    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);
&quot;+
&quot;
&quot;+
&quot;    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);
&quot;+
&quot;}
&quot;+
&quot;
&quot;+
&quot;function set_fraction(value) {
&quot;+
&quot;    translation = new SFVec3f(	translation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z);
&quot;+
&quot;    scale = new SFVec3f(scale.x + scalvel.x, scale.y + scalvel.y, scale.z + scalvel.z);
&quot;+
&quot;    // if you get to far away or too big, explode
&quot;+
&quot;    if ( Math.abs(translation.x) > 256) {
&quot;+
&quot;	translation.x = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if ( Math.abs(translation.y) > 256) {
&quot;+
&quot;	translation.y = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if ( Math.abs(translation.z) > 256) {
&quot;+
&quot;	translation.z = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.x) > 20) {
&quot;+
&quot;	scale.x = scale.x/20;
&quot;+
&quot;	translation.x = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.y) > 20) {
&quot;+
&quot;	scale.y = scale.y/20;
&quot;+
&quot;	translation.y = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;    if (Math.abs(scale.z) > 20) {
&quot;+
&quot;	scale.z = scale.z/20;
&quot;+
&quot;	translation.z = 0;
&quot;+
&quot;	initialize();
&quot;+
&quot;    }
&quot;+
&quot;}"
      }
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"scale",
        "@type":"SFVec3f",
        "@value":"[1, 1, 1]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"translation",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"velocity",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOutput",
        "@name":"scalvel",
        "@type":"SFVec3f",
        "@value":"[0, 0, 0]"
      }
    },
                "field":
                {
      {
        "@accessType":"inputOnly",
        "@name":"set_fraction",
        "@type":"SFFloat"
      }
    },
            }            "TimeSensor":
            {
      {
        "@DEF":"DECLBubble_bubbleD_bubbleClock",
        "@cycleInterval":"10",
        "@loop":"true"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"translation_changed",
        "@fromNode":"DECLBubble_bubbleD_bounce",
        "@toField":"set_translation",
        "@toNode":"DECLBubble_transform"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"scale_changed",
        "@fromNode":"DECLBubble_bubbleD_bounce",
        "@toField":"set_scale",
        "@toNode":"DECLBubble_transform"
      }
    },
            "ROUTE":
            {
      {
        "@fromField":"fraction_changed",
        "@fromNode":"DECLBubble_bubbleD_bubbleClock",
        "@toField":"set_fraction",
        "@toNode":"DECLBubble_bubbleD_bounce"
      }
    },
        }    }}
