<svrl:schematron-output xmlns:iso="http://purl.oclc.org/dsdl/schematron" xmlns:schold="http://www.ascc.net/xml/schematron" xmlns:svrl="http://purl.oclc.org/dsdl/svrl" xmlns:xs="http://www.w3.org/2001/XMLSchema" title="X3D Graphics Validity Checks using Schematron" schemaVersion=""><!--   
		   
		   
		 -->
   <svrl:active-pattern document="file:/C:/Users/jcarl/X3DJSONLD/src/main/data/Humanoid3.x3d"/>
   <svrl:fired-rule context="X3D | *[(upper-case(local-name()) = 'X3D')]"/>
   <svrl:successful-report test="(@version='4.0')" role="diagnostic" location="/X3D">
      <svrl:text>X3D version 4.0 was approved by Web3D Consortium and ISO in 2023.</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="(@version='4.0')" role="diagnostic" location="/X3D">
      <svrl:text>X3D version 4.0 offers many new features including interoperability with HTML5, glTF
         2.0 Physically Based Rendering (PBR), and Web Audio API.</svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="head | *[(lower-case(local-name()) = 'head')]"/>
   <svrl:fired-rule context="component | *[(lower-case(local-name()) = 'component')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="meta | *[(lower-case(local-name()) = 'meta')]"/>
   <svrl:fired-rule context="Scene | *[(lower-case(local-name()) = 'scene')]"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="IndexedFaceSet | IndexedLineSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="Color"/>
   <svrl:fired-rule context="Group"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Box | Cone | Cylinder | Sphere"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="IndexedFaceSet | IndexedLineSet"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="NavigationInfo"/>
   <svrl:fired-rule context="Viewpoint | OrthoViewpoint"/>
   <svrl:fired-rule context="HAnimHumanoid"/>
   <svrl:successful-report test="true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; version='2.0' with X3D version='4.0' </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>====================================================================================================================
         </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(HAnimJoint)           within skeleton hierarchy        = 94</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(HAnimSegment)         within skeleton hierarchy        = 75</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(HAnimSite)            within HAnimHumanoid             = 102</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(HAnimSite//Viewpoint) within skeleton hierarchy        = 0</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(HAnimDisplacer)       within skeleton hierarchy        = 0</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(&lt;HAnimJoint   USE='*' containerField = 'joints'/&gt;)     = 94</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(&lt;HAnimSegment USE='*' containerField = 'segments'/&gt;)   = 75</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(&lt;HAnimSite    USE='*' containerField = 'sites'/&gt;)      = 102</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>&lt;HAnimHumanoid DEF='hanim_HAnim' name='HAnim'/&gt; node count(&lt;HAnimSite    DEF='*' name ends with '_view'/&gt;)        = 0</svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="not(@USE) and true()" role="diagnostic" location="/X3D/Scene/HAnimHumanoid">
      <svrl:text>====================================================================================================================
         </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="IndexedFaceSet | IndexedLineSet"/>
   <svrl:successful-report test="$colorIndexMissing and (Color/@color) and not(IS/connect[@nodeField='colorIndex']) and not(contains(local-name(),'Triangle')) and not($pointSpaces ge $colorSpaces)" role="error" location="/X3D/Scene/HAnimHumanoid/Shape/IndexedFaceSet">
      <svrl:text>&lt;IndexedFaceSet DEF=''/&gt; missing colorIndex array for contained Color node </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="Color"/>
   <svrl:fired-rule context="Appearance"/>
   <svrl:fired-rule context="ImageTexture | MovieTexture"/>
   <svrl:fired-rule context="Material"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_pelvis' name='pelvis'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0000 0.9149 0.0016' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_buttocks_standing_wall_contact_point' name='buttocks_standing_wall_contact_point'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_crotch' name='crotch'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_asis' name='l_asis'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_iliocristale' name='l_iliocristale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_psis' name='l_psis'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[5]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[5]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[6]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_trochanterion' name='l_trochanterion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_trochanter') and not(contains(.,'trochanterion'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[6]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_trochanterion' name='l_trochanterion'/&gt; is an HAnimSite alias for 'l_trochanterion', recommend updating X3D model source
         </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[6]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[6]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[7]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_asis' name='r_asis'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[7]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[7]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[8]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_iliocristale' name='r_iliocristale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[8]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[8]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[9]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_psis' name='r_psis'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[9]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[9]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[10]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_trochanterion' name='r_trochanterion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_trochanter') and not(contains(.,'trochanterion'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[10]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_trochanterion' name='r_trochanterion'/&gt; is an HAnimSite alias for 'r_trochanterion', recommend updating X3D model source
         </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[10]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[10]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_thigh' name='l_thigh'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0961 0.9124 -0.0001' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_femoral_lateral_epicondyles' name='l_femoral_lateral_epicondyles'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_femoral_lateral_epicondyles')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_femoral_lateral_epicondyles' name='l_femoral_lateral_epicondyles'/&gt; is an HAnimSite alias for 'l_femoral_lateral_epicondyle', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_femoral_medial_epicondyles' name='l_femoral_medial_epicondyles'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_femoral_medial_epicondyles')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_femoral_medial_epicondyles' name='l_femoral_medial_epicondyles'/&gt; is an HAnimSite alias for 'l_femoral_medial_epicondyle', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_knee_crease' name='l_knee_crease'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_suprapatella' name='l_suprapatella'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_calf' name='l_calf'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1040 0.4867 0.0308' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_lateral_malleolus' name='l_lateral_malleolus'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_medial_malleolus' name='l_medial_malleolus'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tibiale' name='l_tibiale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_talus' name='l_talus'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1101 0.0656 -0.0736' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="parent::*[local-name(..)='HAnimJoint'] and Transform and (parent::*[local-name(..)='HAnimJoint']/@center != Transform/@translation)" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_talus' name='l_talus'/&gt; has parent &lt;HAnimJoint DEF='hanim_l_talocrural' center='0.1101 0.0656 -0.0736'/&gt; that does not match child &lt;Transform DEF='' translation='0.08 0.06 -0.025'/&gt;, resulting in mismatched local coordinate system </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_calcaneus_posterior' name='l_calcaneus_posterior'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_sphyrion' name='l_sphyrion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='l_tarsometatarsal_2') and parent::HAnimJoint[not(@name='l_cuneonavicular_2')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint">
      <svrl:text>&lt;HAnimJoint DEF='hanim_l_tarsometatarsal_2' name='l_tarsometatarsal_2'/&gt; has parent HAnimJoint name='l_talocrural' rather than expected parent name='l_cuneonavicular_2', recommend checking model
         </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_metatarsal_2' name='l_metatarsal_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0800 0.0175 -0.0608' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_tarsal_proximal_phalanx_2' name='l_tarsal_proximal_phalanx_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0824 0.0064 -0.0040' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metatarsal_phalanx_1' name='l_metatarsal_phalanx_1'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'l_metatarsal')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metatarsal_phalanx_1' name='l_metatarsal_phalanx_1'/&gt; contains an HAnimSegment alias for 'l_metatarsal_2', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metatarsal_phalanx_5' name='l_metatarsal_phalanx_5'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'l_metatarsal')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metatarsal_phalanx_5' name='l_metatarsal_phalanx_5'/&gt; contains an HAnimSegment alias for 'l_metatarsal_2', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_1_tip' name='l_tarsal_distal_phalanx_1_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='l_tarsal_proximal_phalanx_2' (meaning name='l_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'l_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_1_tip' name='l_tarsal_distal_phalanx_1_tip'/&gt; contains an HAnimSegment alias for 'l_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_2_tip' name='l_tarsal_distal_phalanx_2_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='l_tarsal_proximal_phalanx_2' (meaning name='l_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'l_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_2_tip' name='l_tarsal_distal_phalanx_2_tip'/&gt; contains an HAnimSegment alias for 'l_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_3_tip' name='l_tarsal_distal_phalanx_3_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='l_tarsal_proximal_phalanx_2' (meaning name='l_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'l_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_3_tip' name='l_tarsal_distal_phalanx_3_tip'/&gt; contains an HAnimSegment alias for 'l_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_4_tip' name='l_tarsal_distal_phalanx_4_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='l_tarsal_proximal_phalanx_2' (meaning name='l_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'l_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_4_tip' name='l_tarsal_distal_phalanx_4_tip'/&gt; contains an HAnimSegment alias for 'l_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_5_tip' name='l_tarsal_distal_phalanx_5_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='l_tarsal_proximal_phalanx_2' (meaning name='l_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'l_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tarsal_distal_phalanx_5_tip' name='l_tarsal_distal_phalanx_5_tip'/&gt; contains an HAnimSegment alias for 'l_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='l_tarsal_distal_interphalangeal_2') and parent::HAnimJoint[not(@name='l_tarsal_proximal_interphalangeal_2')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint">
      <svrl:text>&lt;HAnimJoint DEF='hanim_l_tarsal_distal_interphalangeal_2' name='l_tarsal_distal_interphalangeal_2'/&gt; has parent HAnimJoint name='l_metatarsophalangeal_2' rather than expected parent name='l_tarsal_proximal_interphalangeal_2', recommend
         checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_thigh' name='r_thigh'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.0950 0.9171 0.0029' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_femoral_lateral_epicondyles' name='r_femoral_lateral_epicondyles'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_femoral_lateral_epicondyles')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_femoral_lateral_epicondyles' name='r_femoral_lateral_epicondyles'/&gt; is an HAnimSite alias for 'r_femoral_lateral_epicondyle', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_femoral_medial_epicondyles' name='r_femoral_medial_epicondyles'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_femoral_medial_epicondyles')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_femoral_medial_epicondyles' name='r_femoral_medial_epicondyles'/&gt; is an HAnimSite alias for 'r_femoral_medial_epicondyle', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_knee_crease' name='r_knee_crease'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_suprapatella' name='r_suprapatella'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_calf' name='r_calf'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.0867 0.4913 0.0318' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_lateral_malleolus' name='r_lateral_malleolus'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_medial_malleolus' name='r_medial_malleolus'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tibiale' name='r_tibiale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_talus' name='r_talus'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.0801 0.0712 -0.0766' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="parent::*[local-name(..)='HAnimJoint'] and Transform and (parent::*[local-name(..)='HAnimJoint']/@center != Transform/@translation)" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_talus' name='r_talus'/&gt; has parent &lt;HAnimJoint DEF='hanim_r_talocrural' center='-0.0801 0.0712 -0.0766'/&gt; that does not match child &lt;Transform DEF='' translation='-0.05 0.06 -0.025'/&gt;, resulting in mismatched local coordinate system </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_calcaneus_posterior' name='r_calcaneus_posterior'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_sphyrion' name='r_sphyrion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='r_tarsometatarsal_2') and parent::HAnimJoint[not(@name='r_cuneonavicular_2')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint">
      <svrl:text>&lt;HAnimJoint DEF='hanim_r_tarsometatarsal_2' name='r_tarsometatarsal_2'/&gt; has parent HAnimJoint name='r_talocrural' rather than expected parent name='r_cuneonavicular_2', recommend checking model
         </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_metatarsal_2' name='r_metatarsal_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.0800 0.0175 -0.0608' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_tarsal_proximal_phalanx_2' name='r_tarsal_proximal_phalanx_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.0823 0.0064 -0.0040' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_metatarsal_phalanx_1' name='r_metatarsal_phalanx_1'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_metatarsal_phalanx_5' name='r_metatarsal_phalanx_5'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_1_tip' name='r_tarsal_distal_phalanx_1_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='r_tarsal_proximal_phalanx_2' (meaning name='r_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'r_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_1_tip' name='r_tarsal_distal_phalanx_1_tip'/&gt; contains an HAnimSegment alias for 'r_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_2_tip' name='r_tarsal_distal_phalanx_2_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='r_tarsal_proximal_phalanx_2' (meaning name='r_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'r_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_2_tip' name='r_tarsal_distal_phalanx_2_tip'/&gt; contains an HAnimSegment alias for 'r_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_3_tip' name='r_tarsal_distal_phalanx_3_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='r_tarsal_proximal_phalanx_2' (meaning name='r_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'r_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_3_tip' name='r_tarsal_distal_phalanx_3_tip'/&gt; contains an HAnimSegment alias for 'r_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_4_tip' name='r_tarsal_distal_phalanx_4_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='r_tarsal_proximal_phalanx_2' (meaning name='r_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'r_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_4_tip' name='r_tarsal_distal_phalanx_4_tip'/&gt; contains an HAnimSegment alias for 'r_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(@USE) and ends-with(normalize-space(@name),'_tip') and not(@name=concat(ancestor::HAnimSegment/@name,'_tip'))" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_5_tip' name='r_tarsal_distal_phalanx_5_tip'/&gt; needs to match name of parent &lt;HAnimSegment name='r_tarsal_proximal_phalanx_2' (meaning name='r_tarsal_proximal_phalanx_2_tip') </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and contains(@name,'r_tarsal_distal_phalanx')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tarsal_distal_phalanx_5_tip' name='r_tarsal_distal_phalanx_5_tip'/&gt; contains an HAnimSegment alias for 'r_tarsal_distal_phalanx_2', recommend updating
         X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='r_tarsal_distal_interphalangeal_2') and parent::HAnimJoint[not(@name='r_tarsal_proximal_interphalangeal_2')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint">
      <svrl:text>&lt;HAnimJoint DEF='hanim_r_tarsal_distal_interphalangeal_2' name='r_tarsal_distal_interphalangeal_2'/&gt; has parent HAnimJoint name='r_metatarsophalangeal_2' rather than expected parent name='r_tarsal_proximal_interphalangeal_2', recommend
         checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l5' name='l5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0028 1.0568 -0.0776' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_navel' name='navel'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_waist_preferred_anterior' name='waist_preferred_anterior'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'waist_preferred_ant') and not(contains(.,'waist_preferred_anterior'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_waist_preferred_anterior' name='waist_preferred_anterior'/&gt; is an HAnimSite alias for 'waist_preferred_anterior', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_waist_preferred_posterior' name='waist_preferred_posterior'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'waist_preferred_post') and not(contains(.,'waist_preferred_posterior'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_waist_preferred_posterior' name='waist_preferred_posterior'/&gt; is an HAnimSite alias for 'waist_preferred_posterior', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l4' name='l4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0035 1.0925 -0.0787' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l3' name='l3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0041 1.1276 -0.0796' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l2' name='l2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0045 1.1546 -0.0800' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_rib10' name='l_rib10'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_rib10' name='r_rib10'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_spine_2_middle_back' name='spine_2_middle_back'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:failed-assert test="(string-length(normalize-space(@USE)) &gt; 0) or not($isHAnim2) or starts-with(@name,'skull_vertex') or starts-with(@name,'glabella') or starts-with(@name,'sellion') or starts-with(@name,'l_infraorbitale') or starts-with(@name,'l_tragion') or starts-with(@name,'l_gonion') or starts-with(@name,'r_infraorbitale') or starts-with(@name,'r_tragion') or starts-with(@name,'r_gonion') or starts-with(@name,'supramenton') or starts-with(@name,'cervicale') or starts-with(@name,'adams_apple') or starts-with(@name,'suprasternale') or starts-with(@name,'substernale') or starts-with(@name,'l_clavicle') or starts-with(@name,'l_acromion') or starts-with(@name,'l_axilla_proximal') or starts-with(@name,'l_axilla_distal') or starts-with(@name,'l_axilla_posterior_folds') or starts-with(@name,'r_clavicle') or starts-with(@name,'r_acromion') or starts-with(@name,'r_axilla_proximal') or starts-with(@name,'r_axilla_distal') or starts-with(@name,'r_axilla_posterior_folds') or starts-with(@name,'spine_1_middle_back') or starts-with(@name,'spine_2_lower_back') or starts-with(@name,'waist_preferred_anterior') or starts-with(@name,'waist_preferred_posterior') or starts-with(@name,'l_rib10') or starts-with(@name,'l_thelion') or starts-with(@name,'r_rib10') or starts-with(@name,'r_thelion') or starts-with(@name,'l_asis') or starts-with(@name,'l_iliocristale') or starts-with(@name,'l_psis') or starts-with(@name,'r_asis') or starts-with(@name,'r_iliocristale') or starts-with(@name,'r_psis') or starts-with(@name,'crotch') or starts-with(@name,'l_femoral_lateral_epicondyle') or starts-with(@name,'l_femoral_medial_epicondyle') or starts-with(@name,'l_suprapatella') or starts-with(@name,'l_trochanterion') or starts-with(@name,'r_femoral_lateral_epicondyle') or starts-with(@name,'r_femoral_medial_epicondyle') or starts-with(@name,'r_suprapatella') or starts-with(@name,'r_trochanterion') or starts-with(@name,'l_tibiale') or starts-with(@name,'l_medial_malleolus') or starts-with(@name,'l_lateral_malleolus') or starts-with(@name,'l_sphyrion') or starts-with(@name,'r_tibiale') or starts-with(@name,'r_medial_malleolus') or starts-with(@name,'r_lateral_malleolus') or starts-with(@name,'r_sphyrion') or starts-with(@name,'l_metatarsal_phalanx_1') or starts-with(@name,'l_metatarsal_phalanx_5') or starts-with(@name,'l_dactylion') or starts-with(@name,'l_calcaneus_posterior') or starts-with(@name,'r_metatarsal_phalanx_1') or starts-with(@name,'r_metatarsal_phalanx_5') or starts-with(@name,'r_dactylion') or starts-with(@name,'r_calcaneus_posterior') or starts-with(@name,'l_humeral_lateral_epicondyle') or starts-with(@name,'l_humeral_medial_epicondyle') or starts-with(@name,'l_olecranon') or starts-with(@name,'r_humeral_lateral_epicondyle') or starts-with(@name,'r_humeral_medial_epicondyle') or starts-with(@name,'r_olecranon') or starts-with(@name,'l_radiale') or starts-with(@name,'l_ulnar_styloid') or starts-with(@name,'l_radial_styloid') or starts-with(@name,'r_radiale') or starts-with(@name,'r_ulnar_styloid') or starts-with(@name,'r_radial_styloid') or starts-with(@name,'l_metacarpal_phalanx_2') or starts-with(@name,'l_metacarpal_phalanx_3') or starts-with(@name,'l_metacarpal_phalanx_5') or starts-with(@name,'r_metacarpal_phalanx_2') or starts-with(@name,'r_metacarpal_phalanx_3') or starts-with(@name,'r_metacarpal_phalanx_5') or starts-with(@name,'nuchale') or starts-with(@name,'l_neck_base') or starts-with(@name,'r_neck_base') or starts-with(@name,'navel') or starts-with(@name,'l_ectocanthus') or starts-with(@name,'r_ectocanthus') or starts-with(@name,'menton') or starts-with(@name,'mesosternale') or starts-with(@name,'opisthocranion') or starts-with(@name,'l_knee_crease') or starts-with(@name,'r_knee_crease') or starts-with(@name,'rear_center_midsagittal_plane') or starts-with(@name,'buttocks_standing_wall_contact_point') or starts-with(@name,'l_chest_midsagittal_plane') or starts-with(@name,'r_chest_midsagittal_plane') or starts-with(@name,'l_bideltoid') or starts-with(@name,'r_bideltoid') or starts-with(@name,'l_carpal_distal_phalanx_1') or starts-with(@name,'l_carpal_distal_phalanx_2') or starts-with(@name,'l_carpal_distal_phalanx_3') or starts-with(@name,'l_carpal_distal_phalanx_4') or starts-with(@name,'l_carpal_distal_phalanx_5') or starts-with(@name,'r_carpal_distal_phalanx_1') or starts-with(@name,'r_carpal_distal_phalanx_2') or starts-with(@name,'r_carpal_distal_phalanx_3') or starts-with(@name,'r_carpal_distal_phalanx_4') or starts-with(@name,'r_carpal_distal_phalanx_5') or starts-with(@name,'l_tarsal_distal_phalanx_1') or starts-with(@name,'l_tarsal_distal_phalanx_2') or starts-with(@name,'l_tarsal_distal_phalanx_3') or starts-with(@name,'l_tarsal_distal_phalanx_4') or starts-with(@name,'l_tarsal_distal_phalanx_5') or starts-with(@name,'r_tarsal_distal_phalanx_1') or starts-with(@name,'r_tarsal_distal_phalanx_2') or starts-with(@name,'r_tarsal_distal_phalanx_3') or starts-with(@name,'r_tarsal_distal_phalanx_4') or starts-with(@name,'r_tarsal_distal_phalanx_5') or contains(@name,'sacrum') or contains(@name,'pelvis') or contains(@name,'l_thigh') or contains(@name,'l_calf') or contains(@name,'l_talus') or contains(@name,'l_navicular') or contains(@name,'l_cuneiform_1') or contains(@name,'l_metatarsal_1') or contains(@name,'l_tarsal_proximal_phalanx_1') or contains(@name,'l_tarsal_distal_phalanx_1') or contains(@name,'l_cuneiform_2') or contains(@name,'l_metatarsal_2') or contains(@name,'l_tarsal_proximal_phalanx_2') or contains(@name,'l_tarsal_middle_phalanx_2') or contains(@name,'l_tarsal_distal_phalanx_2') or contains(@name,'l_cuneiform_3') or contains(@name,'l_metatarsal_3') or contains(@name,'l_tarsal_proximal_phalanx_3') or contains(@name,'l_tarsal_middle_phalanx_3') or contains(@name,'l_tarsal_distal_phalanx_3') or contains(@name,'l_calcaneus') or contains(@name,'l_cuboid') or contains(@name,'l_metatarsal_4') or contains(@name,'l_tarsal_proximal_phalanx_4') or contains(@name,'l_tarsal_middle_phalanx_4') or contains(@name,'l_tarsal_distal_phalanx_4') or contains(@name,'l_metatarsal_5') or contains(@name,'l_tarsal_proximal_phalanx_5') or contains(@name,'l_tarsal_middle_phalanx_5') or contains(@name,'l_tarsal_distal_phalanx_5') or contains(@name,'r_thigh') or contains(@name,'r_calf') or contains(@name,'r_talus') or contains(@name,'r_navicular') or contains(@name,'r_cuneiform_1') or contains(@name,'r_metatarsal_1') or contains(@name,'r_tarsal_proximal_phalanx_1') or contains(@name,'r_tarsal_distal_phalanx_1') or contains(@name,'r_cuneiform_2') or contains(@name,'r_metatarsal_2') or contains(@name,'r_tarsal_proximal_phalanx_2') or contains(@name,'r_tarsal_middle_phalanx_2') or contains(@name,'r_tarsal_distal_phalanx_2') or contains(@name,'r_cuneiform_3') or contains(@name,'r_metatarsal_3') or contains(@name,'r_tarsal_proximal_phalanx_3') or contains(@name,'r_tarsal_middle_phalanx_3') or contains(@name,'r_tarsal_distal_phalanx_3') or contains(@name,'r_calcaneus') or contains(@name,'r_cuboid') or contains(@name,'r_metatarsal_4') or contains(@name,'r_tarsal_proximal_phalanx_4') or contains(@name,'r_tarsal_middle_phalanx_4') or contains(@name,'r_tarsal_distal_phalanx_4') or contains(@name,'r_metatarsal_5') or contains(@name,'r_tarsal_proximal_phalanx_5') or contains(@name,'r_tarsal_middle_phalanx_5') or contains(@name,'r_tarsal_distal_phalanx_5') or contains(@name,'l5') or contains(@name,'l4') or contains(@name,'l3') or contains(@name,'l2') or contains(@name,'l1') or contains(@name,'t12') or contains(@name,'t11') or contains(@name,'t10') or contains(@name,'t9') or contains(@name,'t8') or contains(@name,'t7') or contains(@name,'t6') or contains(@name,'t5') or contains(@name,'t4') or contains(@name,'t3') or contains(@name,'t2') or contains(@name,'t1') or contains(@name,'c7') or contains(@name,'c6') or contains(@name,'c5') or contains(@name,'c4') or contains(@name,'c3') or contains(@name,'c2') or contains(@name,'c1') or contains(@name,'skull') or contains(@name,'l_eyelid') or contains(@name,'r_eyelid') or contains(@name,'l_eyeball') or contains(@name,'r_eyeball') or contains(@name,'l_eyebrow') or contains(@name,'r_eyebrow') or contains(@name,'jaw') or contains(@name,'l_clavicle') or contains(@name,'l_scapula') or contains(@name,'l_upperarm') or contains(@name,'l_forearm') or contains(@name,'l_carpal') or contains(@name,'l_trapezium') or contains(@name,'l_metacarpal_1') or contains(@name,'l_carpal_proximal_phalanx_1') or contains(@name,'l_carpal_distal_phalanx_1') or contains(@name,'l_trapezoid') or contains(@name,'l_metacarpal_2') or contains(@name,'l_carpal_proximal_phalanx_2') or contains(@name,'l_carpal_middle_phalanx_2') or contains(@name,'l_carpal_distal_phalanx_2') or contains(@name,'l_capitate') or contains(@name,'l_metacarpal_3') or contains(@name,'l_carpal_proximal_phalanx_3') or contains(@name,'l_carpal_middle_phalanx_3') or contains(@name,'l_carpal_distal_phalanx_3') or contains(@name,'l_hamate') or contains(@name,'l_metacarpal_4') or contains(@name,'l_carpal_proximal_phalanx_4') or contains(@name,'l_carpal_middle_phalanx_4') or contains(@name,'l_carpal_distal_phalanx_4') or contains(@name,'l_metacarpal_5') or contains(@name,'l_carpal_proximal_phalanx_5') or contains(@name,'l_carpal_middle_phalanx_5') or contains(@name,'l_carpal_distal_phalanx_5') or contains(@name,'r_clavicle') or contains(@name,'r_scapula') or contains(@name,'r_upperarm') or contains(@name,'r_forearm') or contains(@name,'r_carpal') or contains(@name,'r_trapezium') or contains(@name,'r_metacarpal_1') or contains(@name,'r_carpal_proximal_phalanx_1') or contains(@name,'r_carpal_distal_phalanx_1') or contains(@name,'r_trapezoid') or contains(@name,'r_metacarpal_2') or contains(@name,'r_carpal_proximal_phalanx_2') or contains(@name,'r_carpal_middle_phalanx_2') or contains(@name,'r_carpal_distal_phalanx_2') or contains(@name,'r_capitate') or contains(@name,'r_metacarpal_3') or contains(@name,'r_carpal_proximal_phalanx_3') or contains(@name,'r_carpal_middle_phalanx_3') or contains(@name,'r_carpal_distal_phalanx_3') or contains(@name,'r_hamate') or contains(@name,'r_metacarpal_4') or contains(@name,'r_carpal_proximal_phalanx_4') or contains(@name,'r_carpal_middle_phalanx_4') or contains(@name,'r_carpal_distal_phalanx_4') or contains(@name,'r_metacarpal_5') or contains(@name,'r_carpal_proximal_phalanx_5') or contains(@name,'r_carpal_middle_phalanx_5') or contains(@name,'r_carpal_distal_phalanx_5')" role="info" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_spine_2_middle_back' name='spine_2_middle_back'/&gt; is not a recognized name for HAnim2 HAnimSite </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l1' name='l1'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0048 1.1912 -0.0805' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t12' name='t12'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0051 1.2278 -0.0808' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t11' name='t11'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0053 1.2679 -0.0810' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t10' name='t10'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0056 1.2848 -0.0822' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_substernale' name='substernale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t9' name='t9'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0057 1.3126 -0.0838' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_thelion' name='l_thelion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_thelion' name='r_thelion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t8' name='t8'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0057 1.3382 -0.0845' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t7' name='t7'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0058 1.3625 -0.0833' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t6' name='t6'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0059 1.3866 -0.0800' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_chest_midsagittal_plane' name='l_chest_midsagittal_plane'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_mesosternale' name='mesosternale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_chest_midsagittal_plane' name='r_chest_midsagittal_plane'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_rear_center_midsagittal_plane' name='rear_center_midsagittal_plane'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t5' name='t5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0060 1.4102 -0.0745' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_spine_1_middle_back' name='spine_1_middle_back'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t4' name='t4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0061 1.4320 -0.0675' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t3' name='t3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0062 1.4583 -0.0570' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t2' name='t2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0063 1.4761 -0.0484' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_t1' name='t1'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0065 1.4951 -0.0387' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_cervicale' name='cervicale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_suprasternale' name='suprasternale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_c7' name='c7'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0066 1.5132 -0.0301' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_neck_base' name='l_neck_base'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_neck_base' name='r_neck_base'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_c6' name='c6'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0066 1.5357 -0.0143' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_c5' name='c5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0066 1.5520 -0.0082' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_c4' name='c4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0066 1.5662 -0.0084' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_c3' name='c3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0066 1.5800 -0.0103' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_c2' name='c2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0066 1.5928 -0.0103' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_adams_apple' name='adams_apple'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_c1' name='c1'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0066 1.6144 -0.0034' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_skull' name='skull'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0044 1.6209 0.0236' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_glabella' name='glabella'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_ectocanthus' name='l_ectocanthus'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_infraorbitale' name='l_infraorbitale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_tragion' name='l_tragion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_nuchale' name='nuchale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'nuchal') and not(contains(.,'nuchale'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_nuchale' name='nuchale'/&gt; is an HAnimSite alias for 'nuchale', recommend updating X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[5]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]">
      <svrl:text>&lt;HAnimSite DEF='hanim_opisthocranion' name='opisthocranion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[6]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_ectocanthus' name='r_ectocanthus'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[7]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[8]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_infraorbitale' name='r_infraorbitale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[8]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[8]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[9]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_tragion' name='r_tragion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[9]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[9]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[10]">
      <svrl:text>&lt;HAnimSite DEF='hanim_sellion' name='sellion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[10]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[10]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[11]">
      <svrl:text>&lt;HAnimSite DEF='hanim_skull_vertex' name='skull_vertex'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[11]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[11]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_clavicle' name='l_clavicle'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0820 1.4488 -0.0353' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_acromion' name='l_acromion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_axilla_distal' name='l_axilla_distal'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_axilla_posterior_folds' name='l_axilla_posterior_folds'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_axilla_post')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_axilla_posterior_folds' name='l_axilla_posterior_folds'/&gt; is an HAnimSite alias for 'l_axilla_distal', recommend updating X3D model source
         </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_axilla_proximal' name='l_axilla_proximal'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_clavicale' name='l_clavicale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:failed-assert test="(string-length(normalize-space(@USE)) &gt; 0) or not($isHAnim2) or starts-with(@name,'skull_vertex') or starts-with(@name,'glabella') or starts-with(@name,'sellion') or starts-with(@name,'l_infraorbitale') or starts-with(@name,'l_tragion') or starts-with(@name,'l_gonion') or starts-with(@name,'r_infraorbitale') or starts-with(@name,'r_tragion') or starts-with(@name,'r_gonion') or starts-with(@name,'supramenton') or starts-with(@name,'cervicale') or starts-with(@name,'adams_apple') or starts-with(@name,'suprasternale') or starts-with(@name,'substernale') or starts-with(@name,'l_clavicle') or starts-with(@name,'l_acromion') or starts-with(@name,'l_axilla_proximal') or starts-with(@name,'l_axilla_distal') or starts-with(@name,'l_axilla_posterior_folds') or starts-with(@name,'r_clavicle') or starts-with(@name,'r_acromion') or starts-with(@name,'r_axilla_proximal') or starts-with(@name,'r_axilla_distal') or starts-with(@name,'r_axilla_posterior_folds') or starts-with(@name,'spine_1_middle_back') or starts-with(@name,'spine_2_lower_back') or starts-with(@name,'waist_preferred_anterior') or starts-with(@name,'waist_preferred_posterior') or starts-with(@name,'l_rib10') or starts-with(@name,'l_thelion') or starts-with(@name,'r_rib10') or starts-with(@name,'r_thelion') or starts-with(@name,'l_asis') or starts-with(@name,'l_iliocristale') or starts-with(@name,'l_psis') or starts-with(@name,'r_asis') or starts-with(@name,'r_iliocristale') or starts-with(@name,'r_psis') or starts-with(@name,'crotch') or starts-with(@name,'l_femoral_lateral_epicondyle') or starts-with(@name,'l_femoral_medial_epicondyle') or starts-with(@name,'l_suprapatella') or starts-with(@name,'l_trochanterion') or starts-with(@name,'r_femoral_lateral_epicondyle') or starts-with(@name,'r_femoral_medial_epicondyle') or starts-with(@name,'r_suprapatella') or starts-with(@name,'r_trochanterion') or starts-with(@name,'l_tibiale') or starts-with(@name,'l_medial_malleolus') or starts-with(@name,'l_lateral_malleolus') or starts-with(@name,'l_sphyrion') or starts-with(@name,'r_tibiale') or starts-with(@name,'r_medial_malleolus') or starts-with(@name,'r_lateral_malleolus') or starts-with(@name,'r_sphyrion') or starts-with(@name,'l_metatarsal_phalanx_1') or starts-with(@name,'l_metatarsal_phalanx_5') or starts-with(@name,'l_dactylion') or starts-with(@name,'l_calcaneus_posterior') or starts-with(@name,'r_metatarsal_phalanx_1') or starts-with(@name,'r_metatarsal_phalanx_5') or starts-with(@name,'r_dactylion') or starts-with(@name,'r_calcaneus_posterior') or starts-with(@name,'l_humeral_lateral_epicondyle') or starts-with(@name,'l_humeral_medial_epicondyle') or starts-with(@name,'l_olecranon') or starts-with(@name,'r_humeral_lateral_epicondyle') or starts-with(@name,'r_humeral_medial_epicondyle') or starts-with(@name,'r_olecranon') or starts-with(@name,'l_radiale') or starts-with(@name,'l_ulnar_styloid') or starts-with(@name,'l_radial_styloid') or starts-with(@name,'r_radiale') or starts-with(@name,'r_ulnar_styloid') or starts-with(@name,'r_radial_styloid') or starts-with(@name,'l_metacarpal_phalanx_2') or starts-with(@name,'l_metacarpal_phalanx_3') or starts-with(@name,'l_metacarpal_phalanx_5') or starts-with(@name,'r_metacarpal_phalanx_2') or starts-with(@name,'r_metacarpal_phalanx_3') or starts-with(@name,'r_metacarpal_phalanx_5') or starts-with(@name,'nuchale') or starts-with(@name,'l_neck_base') or starts-with(@name,'r_neck_base') or starts-with(@name,'navel') or starts-with(@name,'l_ectocanthus') or starts-with(@name,'r_ectocanthus') or starts-with(@name,'menton') or starts-with(@name,'mesosternale') or starts-with(@name,'opisthocranion') or starts-with(@name,'l_knee_crease') or starts-with(@name,'r_knee_crease') or starts-with(@name,'rear_center_midsagittal_plane') or starts-with(@name,'buttocks_standing_wall_contact_point') or starts-with(@name,'l_chest_midsagittal_plane') or starts-with(@name,'r_chest_midsagittal_plane') or starts-with(@name,'l_bideltoid') or starts-with(@name,'r_bideltoid') or starts-with(@name,'l_carpal_distal_phalanx_1') or starts-with(@name,'l_carpal_distal_phalanx_2') or starts-with(@name,'l_carpal_distal_phalanx_3') or starts-with(@name,'l_carpal_distal_phalanx_4') or starts-with(@name,'l_carpal_distal_phalanx_5') or starts-with(@name,'r_carpal_distal_phalanx_1') or starts-with(@name,'r_carpal_distal_phalanx_2') or starts-with(@name,'r_carpal_distal_phalanx_3') or starts-with(@name,'r_carpal_distal_phalanx_4') or starts-with(@name,'r_carpal_distal_phalanx_5') or starts-with(@name,'l_tarsal_distal_phalanx_1') or starts-with(@name,'l_tarsal_distal_phalanx_2') or starts-with(@name,'l_tarsal_distal_phalanx_3') or starts-with(@name,'l_tarsal_distal_phalanx_4') or starts-with(@name,'l_tarsal_distal_phalanx_5') or starts-with(@name,'r_tarsal_distal_phalanx_1') or starts-with(@name,'r_tarsal_distal_phalanx_2') or starts-with(@name,'r_tarsal_distal_phalanx_3') or starts-with(@name,'r_tarsal_distal_phalanx_4') or starts-with(@name,'r_tarsal_distal_phalanx_5') or contains(@name,'sacrum') or contains(@name,'pelvis') or contains(@name,'l_thigh') or contains(@name,'l_calf') or contains(@name,'l_talus') or contains(@name,'l_navicular') or contains(@name,'l_cuneiform_1') or contains(@name,'l_metatarsal_1') or contains(@name,'l_tarsal_proximal_phalanx_1') or contains(@name,'l_tarsal_distal_phalanx_1') or contains(@name,'l_cuneiform_2') or contains(@name,'l_metatarsal_2') or contains(@name,'l_tarsal_proximal_phalanx_2') or contains(@name,'l_tarsal_middle_phalanx_2') or contains(@name,'l_tarsal_distal_phalanx_2') or contains(@name,'l_cuneiform_3') or contains(@name,'l_metatarsal_3') or contains(@name,'l_tarsal_proximal_phalanx_3') or contains(@name,'l_tarsal_middle_phalanx_3') or contains(@name,'l_tarsal_distal_phalanx_3') or contains(@name,'l_calcaneus') or contains(@name,'l_cuboid') or contains(@name,'l_metatarsal_4') or contains(@name,'l_tarsal_proximal_phalanx_4') or contains(@name,'l_tarsal_middle_phalanx_4') or contains(@name,'l_tarsal_distal_phalanx_4') or contains(@name,'l_metatarsal_5') or contains(@name,'l_tarsal_proximal_phalanx_5') or contains(@name,'l_tarsal_middle_phalanx_5') or contains(@name,'l_tarsal_distal_phalanx_5') or contains(@name,'r_thigh') or contains(@name,'r_calf') or contains(@name,'r_talus') or contains(@name,'r_navicular') or contains(@name,'r_cuneiform_1') or contains(@name,'r_metatarsal_1') or contains(@name,'r_tarsal_proximal_phalanx_1') or contains(@name,'r_tarsal_distal_phalanx_1') or contains(@name,'r_cuneiform_2') or contains(@name,'r_metatarsal_2') or contains(@name,'r_tarsal_proximal_phalanx_2') or contains(@name,'r_tarsal_middle_phalanx_2') or contains(@name,'r_tarsal_distal_phalanx_2') or contains(@name,'r_cuneiform_3') or contains(@name,'r_metatarsal_3') or contains(@name,'r_tarsal_proximal_phalanx_3') or contains(@name,'r_tarsal_middle_phalanx_3') or contains(@name,'r_tarsal_distal_phalanx_3') or contains(@name,'r_calcaneus') or contains(@name,'r_cuboid') or contains(@name,'r_metatarsal_4') or contains(@name,'r_tarsal_proximal_phalanx_4') or contains(@name,'r_tarsal_middle_phalanx_4') or contains(@name,'r_tarsal_distal_phalanx_4') or contains(@name,'r_metatarsal_5') or contains(@name,'r_tarsal_proximal_phalanx_5') or contains(@name,'r_tarsal_middle_phalanx_5') or contains(@name,'r_tarsal_distal_phalanx_5') or contains(@name,'l5') or contains(@name,'l4') or contains(@name,'l3') or contains(@name,'l2') or contains(@name,'l1') or contains(@name,'t12') or contains(@name,'t11') or contains(@name,'t10') or contains(@name,'t9') or contains(@name,'t8') or contains(@name,'t7') or contains(@name,'t6') or contains(@name,'t5') or contains(@name,'t4') or contains(@name,'t3') or contains(@name,'t2') or contains(@name,'t1') or contains(@name,'c7') or contains(@name,'c6') or contains(@name,'c5') or contains(@name,'c4') or contains(@name,'c3') or contains(@name,'c2') or contains(@name,'c1') or contains(@name,'skull') or contains(@name,'l_eyelid') or contains(@name,'r_eyelid') or contains(@name,'l_eyeball') or contains(@name,'r_eyeball') or contains(@name,'l_eyebrow') or contains(@name,'r_eyebrow') or contains(@name,'jaw') or contains(@name,'l_clavicle') or contains(@name,'l_scapula') or contains(@name,'l_upperarm') or contains(@name,'l_forearm') or contains(@name,'l_carpal') or contains(@name,'l_trapezium') or contains(@name,'l_metacarpal_1') or contains(@name,'l_carpal_proximal_phalanx_1') or contains(@name,'l_carpal_distal_phalanx_1') or contains(@name,'l_trapezoid') or contains(@name,'l_metacarpal_2') or contains(@name,'l_carpal_proximal_phalanx_2') or contains(@name,'l_carpal_middle_phalanx_2') or contains(@name,'l_carpal_distal_phalanx_2') or contains(@name,'l_capitate') or contains(@name,'l_metacarpal_3') or contains(@name,'l_carpal_proximal_phalanx_3') or contains(@name,'l_carpal_middle_phalanx_3') or contains(@name,'l_carpal_distal_phalanx_3') or contains(@name,'l_hamate') or contains(@name,'l_metacarpal_4') or contains(@name,'l_carpal_proximal_phalanx_4') or contains(@name,'l_carpal_middle_phalanx_4') or contains(@name,'l_carpal_distal_phalanx_4') or contains(@name,'l_metacarpal_5') or contains(@name,'l_carpal_proximal_phalanx_5') or contains(@name,'l_carpal_middle_phalanx_5') or contains(@name,'l_carpal_distal_phalanx_5') or contains(@name,'r_clavicle') or contains(@name,'r_scapula') or contains(@name,'r_upperarm') or contains(@name,'r_forearm') or contains(@name,'r_carpal') or contains(@name,'r_trapezium') or contains(@name,'r_metacarpal_1') or contains(@name,'r_carpal_proximal_phalanx_1') or contains(@name,'r_carpal_distal_phalanx_1') or contains(@name,'r_trapezoid') or contains(@name,'r_metacarpal_2') or contains(@name,'r_carpal_proximal_phalanx_2') or contains(@name,'r_carpal_middle_phalanx_2') or contains(@name,'r_carpal_distal_phalanx_2') or contains(@name,'r_capitate') or contains(@name,'r_metacarpal_3') or contains(@name,'r_carpal_proximal_phalanx_3') or contains(@name,'r_carpal_middle_phalanx_3') or contains(@name,'r_carpal_distal_phalanx_3') or contains(@name,'r_hamate') or contains(@name,'r_metacarpal_4') or contains(@name,'r_carpal_proximal_phalanx_4') or contains(@name,'r_carpal_middle_phalanx_4') or contains(@name,'r_carpal_distal_phalanx_4') or contains(@name,'r_metacarpal_5') or contains(@name,'r_carpal_proximal_phalanx_5') or contains(@name,'r_carpal_middle_phalanx_5') or contains(@name,'r_carpal_distal_phalanx_5')" role="info" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_clavicale' name='l_clavicale'/&gt; is not a recognized name for HAnim2 HAnimSite </svrl:text>
   </svrl:failed-assert>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_clavicale')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_clavicale' name='l_clavicale'/&gt; is an HAnimSite alias for 'l_clavicle', recommend updating X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[5]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite[5]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_scapula' name='l_scapula'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.0962 1.4269 -0.0424' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_upperarm' name='l_upperarm'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.2029 1.4376 -0.0387' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_bideltoid' name='l_bideltoid'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_humeral_lateral_epicondyles' name='l_humeral_lateral_epicondyles'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_humeral_lateral_epicondyles')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_humeral_lateral_epicondyles' name='l_humeral_lateral_epicondyles'/&gt; is an HAnimSite alias for 'l_humeral_lateral_epicondyle', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_forearm' name='l_forearm'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.2014 1.1357 -0.0682' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_humeral_medial_epicondyles' name='l_humeral_medial_epicondyles'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_humeral_medial_epicondyles')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_humeral_medial_epicondyles' name='l_humeral_medial_epicondyles'/&gt; is an HAnimSite alias for 'l_humeral_medial_epicondyle', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_olecranon' name='l_olecranon'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_radial_styloid' name='l_radial_styloid'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_radiale' name='l_radiale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal' name='l_carpal'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1984 0.8663 -0.0583' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="parent::*[local-name(..)='HAnimJoint'] and Transform and (parent::*[local-name(..)='HAnimJoint']/@center != Transform/@translation)" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal' name='l_carpal'/&gt; has parent &lt;HAnimJoint DEF='hanim_l_radiocarpal' center='0.1984 0.8663 -0.0583'/&gt; that does not match child &lt;Transform DEF='' translation='0.20 0.85 -0.05'/&gt;, resulting in mismatched local coordinate system </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_ulnar_styloid' name='l_ulnar_styloid'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='l_carpometacarpal_1') and parent::HAnimJoint[not(@name='l_midcarpal_1')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_l_carpometacarpal_1' name='l_carpometacarpal_1'/&gt; has parent HAnimJoint name='l_radiocarpal' rather than expected parent name='l_midcarpal_1', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_metacarpal_1' name='l_metacarpal_1'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1924 0.8472 -0.0534' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_proximal_phalanx_1' name='l_carpal_proximal_phalanx_1'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1951 0.8226 0.0246' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='l_carpometacarpal_2') and parent::HAnimJoint[not(@name='l_midcarpal_2')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_l_carpometacarpal_2' name='l_carpometacarpal_2'/&gt; has parent HAnimJoint name='l_radiocarpal' rather than expected parent name='l_midcarpal_2', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_metacarpal_2' name='l_metacarpal_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1983 0.8024 -0.0280' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metacarpal_phalanx_2' name='l_metacarpal_phalanx_2'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_metacarpal_phalanx') and not(contains(.,'phalanx_'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metacarpal_phalanx_2' name='l_metacarpal_phalanx_2'/&gt; is an HAnimSite alias for 'l_metacarpal_phalanx_2', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_proximal_phalanx_2' name='l_carpal_proximal_phalanx_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1983 0.7815 -0.0280' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_middle_phalanx_2' name='l_carpal_middle_phalanx_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.2017 0.7363 -0.0248' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='l_carpometacarpal_3') and parent::HAnimJoint[not(@name='l_midcarpal_3')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_l_carpometacarpal_3' name='l_carpometacarpal_3'/&gt; has parent HAnimJoint name='l_radiocarpal' rather than expected parent name='l_midcarpal_3', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_metacarpal_3' name='l_metacarpal_3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1987 0.8029 -0.0530' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metacarpal_phalanx_3' name='l_metacarpal_phalanx_3'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_metacarpal_phalanx') and not(contains(.,'phalanx_'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metacarpal_phalanx_3' name='l_metacarpal_phalanx_3'/&gt; is an HAnimSite alias for 'l_metacarpal_phalanx_2', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_proximal_phalanx_3' name='l_carpal_proximal_phalanx_3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1987 0.7818 -0.0530' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_middle_phalanx_3' name='l_carpal_middle_phalanx_3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.2013 0.7273 -0.0503' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='l_carpometacarpal_4') and parent::HAnimJoint[not(@name='l_midcarpal_4_5')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[4]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_l_carpometacarpal_4' name='l_carpometacarpal_4'/&gt; has parent HAnimJoint name='l_radiocarpal' rather than expected parent name='l_midcarpal_4_5', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[4]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_metacarpal_4' name='l_metacarpal_4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1956 0.8019 -0.0794' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[4]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_proximal_phalanx_4' name='l_carpal_proximal_phalanx_4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1956 0.7815 -0.0794' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[4]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_middle_phalanx_4' name='l_carpal_middle_phalanx_4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1973 0.7287 -0.0777' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='l_carpometacarpal_5') and parent::HAnimJoint[not(@name='l_midcarpal_4_5')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_l_carpometacarpal_5' name='l_carpometacarpal_5'/&gt; has parent HAnimJoint name='l_radiocarpal' rather than expected parent name='l_midcarpal_4_5', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_metacarpal_5' name='l_metacarpal_5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1925 0.8066 -0.1036' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metacarpal_phalanx_5' name='l_metacarpal_phalanx_5'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'l_metacarpal_phalanx') and not(contains(.,'phalanx_'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_l_metacarpal_phalanx_5' name='l_metacarpal_phalanx_5'/&gt; is an HAnimSite alias for 'l_metacarpal_phalanx_2', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_proximal_phalanx_5' name='l_carpal_proximal_phalanx_5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1925 0.7866 -0.1036' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_l_carpal_middle_phalanx_5' name='l_carpal_middle_phalanx_5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='0.1938 0.7452 -0.1024' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_clavicle' name='r_clavicle'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.0694 1.4600 -0.0330' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_acromion' name='r_acromion'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_axilla_distal' name='r_axilla_distal'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_axilla_posterior_folds' name='r_axilla_posterior_folds'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_axilla_post')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_axilla_posterior_folds' name='r_axilla_posterior_folds'/&gt; is an HAnimSite alias for 'r_axilla_distal', recommend updating X3D model source
         </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_axilla_proximal' name='r_axilla_proximal'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_clavicale' name='r_clavicale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:failed-assert test="(string-length(normalize-space(@USE)) &gt; 0) or not($isHAnim2) or starts-with(@name,'skull_vertex') or starts-with(@name,'glabella') or starts-with(@name,'sellion') or starts-with(@name,'l_infraorbitale') or starts-with(@name,'l_tragion') or starts-with(@name,'l_gonion') or starts-with(@name,'r_infraorbitale') or starts-with(@name,'r_tragion') or starts-with(@name,'r_gonion') or starts-with(@name,'supramenton') or starts-with(@name,'cervicale') or starts-with(@name,'adams_apple') or starts-with(@name,'suprasternale') or starts-with(@name,'substernale') or starts-with(@name,'l_clavicle') or starts-with(@name,'l_acromion') or starts-with(@name,'l_axilla_proximal') or starts-with(@name,'l_axilla_distal') or starts-with(@name,'l_axilla_posterior_folds') or starts-with(@name,'r_clavicle') or starts-with(@name,'r_acromion') or starts-with(@name,'r_axilla_proximal') or starts-with(@name,'r_axilla_distal') or starts-with(@name,'r_axilla_posterior_folds') or starts-with(@name,'spine_1_middle_back') or starts-with(@name,'spine_2_lower_back') or starts-with(@name,'waist_preferred_anterior') or starts-with(@name,'waist_preferred_posterior') or starts-with(@name,'l_rib10') or starts-with(@name,'l_thelion') or starts-with(@name,'r_rib10') or starts-with(@name,'r_thelion') or starts-with(@name,'l_asis') or starts-with(@name,'l_iliocristale') or starts-with(@name,'l_psis') or starts-with(@name,'r_asis') or starts-with(@name,'r_iliocristale') or starts-with(@name,'r_psis') or starts-with(@name,'crotch') or starts-with(@name,'l_femoral_lateral_epicondyle') or starts-with(@name,'l_femoral_medial_epicondyle') or starts-with(@name,'l_suprapatella') or starts-with(@name,'l_trochanterion') or starts-with(@name,'r_femoral_lateral_epicondyle') or starts-with(@name,'r_femoral_medial_epicondyle') or starts-with(@name,'r_suprapatella') or starts-with(@name,'r_trochanterion') or starts-with(@name,'l_tibiale') or starts-with(@name,'l_medial_malleolus') or starts-with(@name,'l_lateral_malleolus') or starts-with(@name,'l_sphyrion') or starts-with(@name,'r_tibiale') or starts-with(@name,'r_medial_malleolus') or starts-with(@name,'r_lateral_malleolus') or starts-with(@name,'r_sphyrion') or starts-with(@name,'l_metatarsal_phalanx_1') or starts-with(@name,'l_metatarsal_phalanx_5') or starts-with(@name,'l_dactylion') or starts-with(@name,'l_calcaneus_posterior') or starts-with(@name,'r_metatarsal_phalanx_1') or starts-with(@name,'r_metatarsal_phalanx_5') or starts-with(@name,'r_dactylion') or starts-with(@name,'r_calcaneus_posterior') or starts-with(@name,'l_humeral_lateral_epicondyle') or starts-with(@name,'l_humeral_medial_epicondyle') or starts-with(@name,'l_olecranon') or starts-with(@name,'r_humeral_lateral_epicondyle') or starts-with(@name,'r_humeral_medial_epicondyle') or starts-with(@name,'r_olecranon') or starts-with(@name,'l_radiale') or starts-with(@name,'l_ulnar_styloid') or starts-with(@name,'l_radial_styloid') or starts-with(@name,'r_radiale') or starts-with(@name,'r_ulnar_styloid') or starts-with(@name,'r_radial_styloid') or starts-with(@name,'l_metacarpal_phalanx_2') or starts-with(@name,'l_metacarpal_phalanx_3') or starts-with(@name,'l_metacarpal_phalanx_5') or starts-with(@name,'r_metacarpal_phalanx_2') or starts-with(@name,'r_metacarpal_phalanx_3') or starts-with(@name,'r_metacarpal_phalanx_5') or starts-with(@name,'nuchale') or starts-with(@name,'l_neck_base') or starts-with(@name,'r_neck_base') or starts-with(@name,'navel') or starts-with(@name,'l_ectocanthus') or starts-with(@name,'r_ectocanthus') or starts-with(@name,'menton') or starts-with(@name,'mesosternale') or starts-with(@name,'opisthocranion') or starts-with(@name,'l_knee_crease') or starts-with(@name,'r_knee_crease') or starts-with(@name,'rear_center_midsagittal_plane') or starts-with(@name,'buttocks_standing_wall_contact_point') or starts-with(@name,'l_chest_midsagittal_plane') or starts-with(@name,'r_chest_midsagittal_plane') or starts-with(@name,'l_bideltoid') or starts-with(@name,'r_bideltoid') or starts-with(@name,'l_carpal_distal_phalanx_1') or starts-with(@name,'l_carpal_distal_phalanx_2') or starts-with(@name,'l_carpal_distal_phalanx_3') or starts-with(@name,'l_carpal_distal_phalanx_4') or starts-with(@name,'l_carpal_distal_phalanx_5') or starts-with(@name,'r_carpal_distal_phalanx_1') or starts-with(@name,'r_carpal_distal_phalanx_2') or starts-with(@name,'r_carpal_distal_phalanx_3') or starts-with(@name,'r_carpal_distal_phalanx_4') or starts-with(@name,'r_carpal_distal_phalanx_5') or starts-with(@name,'l_tarsal_distal_phalanx_1') or starts-with(@name,'l_tarsal_distal_phalanx_2') or starts-with(@name,'l_tarsal_distal_phalanx_3') or starts-with(@name,'l_tarsal_distal_phalanx_4') or starts-with(@name,'l_tarsal_distal_phalanx_5') or starts-with(@name,'r_tarsal_distal_phalanx_1') or starts-with(@name,'r_tarsal_distal_phalanx_2') or starts-with(@name,'r_tarsal_distal_phalanx_3') or starts-with(@name,'r_tarsal_distal_phalanx_4') or starts-with(@name,'r_tarsal_distal_phalanx_5') or contains(@name,'sacrum') or contains(@name,'pelvis') or contains(@name,'l_thigh') or contains(@name,'l_calf') or contains(@name,'l_talus') or contains(@name,'l_navicular') or contains(@name,'l_cuneiform_1') or contains(@name,'l_metatarsal_1') or contains(@name,'l_tarsal_proximal_phalanx_1') or contains(@name,'l_tarsal_distal_phalanx_1') or contains(@name,'l_cuneiform_2') or contains(@name,'l_metatarsal_2') or contains(@name,'l_tarsal_proximal_phalanx_2') or contains(@name,'l_tarsal_middle_phalanx_2') or contains(@name,'l_tarsal_distal_phalanx_2') or contains(@name,'l_cuneiform_3') or contains(@name,'l_metatarsal_3') or contains(@name,'l_tarsal_proximal_phalanx_3') or contains(@name,'l_tarsal_middle_phalanx_3') or contains(@name,'l_tarsal_distal_phalanx_3') or contains(@name,'l_calcaneus') or contains(@name,'l_cuboid') or contains(@name,'l_metatarsal_4') or contains(@name,'l_tarsal_proximal_phalanx_4') or contains(@name,'l_tarsal_middle_phalanx_4') or contains(@name,'l_tarsal_distal_phalanx_4') or contains(@name,'l_metatarsal_5') or contains(@name,'l_tarsal_proximal_phalanx_5') or contains(@name,'l_tarsal_middle_phalanx_5') or contains(@name,'l_tarsal_distal_phalanx_5') or contains(@name,'r_thigh') or contains(@name,'r_calf') or contains(@name,'r_talus') or contains(@name,'r_navicular') or contains(@name,'r_cuneiform_1') or contains(@name,'r_metatarsal_1') or contains(@name,'r_tarsal_proximal_phalanx_1') or contains(@name,'r_tarsal_distal_phalanx_1') or contains(@name,'r_cuneiform_2') or contains(@name,'r_metatarsal_2') or contains(@name,'r_tarsal_proximal_phalanx_2') or contains(@name,'r_tarsal_middle_phalanx_2') or contains(@name,'r_tarsal_distal_phalanx_2') or contains(@name,'r_cuneiform_3') or contains(@name,'r_metatarsal_3') or contains(@name,'r_tarsal_proximal_phalanx_3') or contains(@name,'r_tarsal_middle_phalanx_3') or contains(@name,'r_tarsal_distal_phalanx_3') or contains(@name,'r_calcaneus') or contains(@name,'r_cuboid') or contains(@name,'r_metatarsal_4') or contains(@name,'r_tarsal_proximal_phalanx_4') or contains(@name,'r_tarsal_middle_phalanx_4') or contains(@name,'r_tarsal_distal_phalanx_4') or contains(@name,'r_metatarsal_5') or contains(@name,'r_tarsal_proximal_phalanx_5') or contains(@name,'r_tarsal_middle_phalanx_5') or contains(@name,'r_tarsal_distal_phalanx_5') or contains(@name,'l5') or contains(@name,'l4') or contains(@name,'l3') or contains(@name,'l2') or contains(@name,'l1') or contains(@name,'t12') or contains(@name,'t11') or contains(@name,'t10') or contains(@name,'t9') or contains(@name,'t8') or contains(@name,'t7') or contains(@name,'t6') or contains(@name,'t5') or contains(@name,'t4') or contains(@name,'t3') or contains(@name,'t2') or contains(@name,'t1') or contains(@name,'c7') or contains(@name,'c6') or contains(@name,'c5') or contains(@name,'c4') or contains(@name,'c3') or contains(@name,'c2') or contains(@name,'c1') or contains(@name,'skull') or contains(@name,'l_eyelid') or contains(@name,'r_eyelid') or contains(@name,'l_eyeball') or contains(@name,'r_eyeball') or contains(@name,'l_eyebrow') or contains(@name,'r_eyebrow') or contains(@name,'jaw') or contains(@name,'l_clavicle') or contains(@name,'l_scapula') or contains(@name,'l_upperarm') or contains(@name,'l_forearm') or contains(@name,'l_carpal') or contains(@name,'l_trapezium') or contains(@name,'l_metacarpal_1') or contains(@name,'l_carpal_proximal_phalanx_1') or contains(@name,'l_carpal_distal_phalanx_1') or contains(@name,'l_trapezoid') or contains(@name,'l_metacarpal_2') or contains(@name,'l_carpal_proximal_phalanx_2') or contains(@name,'l_carpal_middle_phalanx_2') or contains(@name,'l_carpal_distal_phalanx_2') or contains(@name,'l_capitate') or contains(@name,'l_metacarpal_3') or contains(@name,'l_carpal_proximal_phalanx_3') or contains(@name,'l_carpal_middle_phalanx_3') or contains(@name,'l_carpal_distal_phalanx_3') or contains(@name,'l_hamate') or contains(@name,'l_metacarpal_4') or contains(@name,'l_carpal_proximal_phalanx_4') or contains(@name,'l_carpal_middle_phalanx_4') or contains(@name,'l_carpal_distal_phalanx_4') or contains(@name,'l_metacarpal_5') or contains(@name,'l_carpal_proximal_phalanx_5') or contains(@name,'l_carpal_middle_phalanx_5') or contains(@name,'l_carpal_distal_phalanx_5') or contains(@name,'r_clavicle') or contains(@name,'r_scapula') or contains(@name,'r_upperarm') or contains(@name,'r_forearm') or contains(@name,'r_carpal') or contains(@name,'r_trapezium') or contains(@name,'r_metacarpal_1') or contains(@name,'r_carpal_proximal_phalanx_1') or contains(@name,'r_carpal_distal_phalanx_1') or contains(@name,'r_trapezoid') or contains(@name,'r_metacarpal_2') or contains(@name,'r_carpal_proximal_phalanx_2') or contains(@name,'r_carpal_middle_phalanx_2') or contains(@name,'r_carpal_distal_phalanx_2') or contains(@name,'r_capitate') or contains(@name,'r_metacarpal_3') or contains(@name,'r_carpal_proximal_phalanx_3') or contains(@name,'r_carpal_middle_phalanx_3') or contains(@name,'r_carpal_distal_phalanx_3') or contains(@name,'r_hamate') or contains(@name,'r_metacarpal_4') or contains(@name,'r_carpal_proximal_phalanx_4') or contains(@name,'r_carpal_middle_phalanx_4') or contains(@name,'r_carpal_distal_phalanx_4') or contains(@name,'r_metacarpal_5') or contains(@name,'r_carpal_proximal_phalanx_5') or contains(@name,'r_carpal_middle_phalanx_5') or contains(@name,'r_carpal_distal_phalanx_5')" role="info" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_clavicale' name='r_clavicale'/&gt; is not a recognized name for HAnim2 HAnimSite </svrl:text>
   </svrl:failed-assert>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_clavicale')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[5]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_clavicale' name='r_clavicale'/&gt; is an HAnimSite alias for 'r_clavicle', recommend updating X3D model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[5]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite[5]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_scapula' name='r_scapula'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.0836 1.4281 -0.0401' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_upperarm' name='r_upperarm'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1907 1.4407 -0.0325' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_bideltoid' name='r_bideltoid'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_humeral_lateral_epicondyles' name='r_humeral_lateral_epicondyles'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_humeral_lateral_epicondyles')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_humeral_lateral_epicondyles' name='r_humeral_lateral_epicondyles'/&gt; is an HAnimSite alias for 'r_humeral_lateral_epicondyle', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_forearm' name='r_forearm'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1949 1.1388 -0.0620' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_humeral_medial_epicondyles' name='r_humeral_medial_epicondyles'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_humeral_medial_epicondyles')" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_humeral_medial_epicondyles' name='r_humeral_medial_epicondyles'/&gt; is an HAnimSite alias for 'r_humeral_medial_epicondyle', recommend updating X3D
         model source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[1]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_olecranon' name='r_olecranon'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[2]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_radial_styloid' name='r_radial_styloid'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[3]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_radiale' name='r_radiale'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite[4]/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal' name='r_carpal'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1959 0.8694 -0.0521' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="parent::*[local-name(..)='HAnimJoint'] and Transform and (parent::*[local-name(..)='HAnimJoint']/@center != Transform/@translation)" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal' name='r_carpal'/&gt; has parent &lt;HAnimJoint DEF='hanim_r_radiocarpal' center='-0.1959 0.8694 -0.0521'/&gt; that does not match child &lt;Transform DEF='' translation='-0.20 0.85 -0.05'/&gt;, resulting in mismatched local coordinate system </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_ulnar_styloid' name='r_ulnar_styloid'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='r_carpometacarpal_1') and parent::HAnimJoint[not(@name='r_midcarpal_1')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_r_carpometacarpal_1' name='r_carpometacarpal_1'/&gt; has parent HAnimJoint name='r_radiocarpal' rather than expected parent name='r_midcarpal_1', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_metacarpal_1' name='r_metacarpal_1'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1899 0.8502 -0.0473' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[1]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_proximal_phalanx_1' name='r_carpal_proximal_phalanx_1'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1874 0.8256 0.0306' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='r_carpometacarpal_2') and parent::HAnimJoint[not(@name='r_midcarpal_2')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_r_carpometacarpal_2' name='r_carpometacarpal_2'/&gt; has parent HAnimJoint name='r_radiocarpal' rather than expected parent name='r_midcarpal_2', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_metacarpal_2' name='r_metacarpal_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1961 0.8055 -0.0218' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_metacarpal_phalanx_2' name='r_metacarpal_phalanx_2'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_metacarpal_phalanx') and not(contains(.,'phalanx_'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_metacarpal_phalanx_2' name='r_metacarpal_phalanx_2'/&gt; is an HAnimSite alias for 'r_metacarpal_phalanx_2', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_proximal_phalanx_2' name='r_carpal_proximal_phalanx_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1961 0.7846 -0.0218' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_middle_phalanx_2' name='r_carpal_middle_phalanx_2'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1954 0.7393 -0.0185' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='r_carpometacarpal_3') and parent::HAnimJoint[not(@name='r_midcarpal_3')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_r_carpometacarpal_3' name='r_carpometacarpal_3'/&gt; has parent HAnimJoint name='r_radiocarpal' rather than expected parent name='r_midcarpal_3', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_metacarpal_3' name='r_metacarpal_3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1972 0.8060 -0.0468' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_metacarpal_phalanx_3' name='r_metacarpal_phalanx_3'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_metacarpal_phalanx') and not(contains(.,'phalanx_'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_metacarpal_phalanx_3' name='r_metacarpal_phalanx_3'/&gt; is an HAnimSite alias for 'r_metacarpal_phalanx_2', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_proximal_phalanx_3' name='r_carpal_proximal_phalanx_3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1972 0.7849 -0.0468' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_middle_phalanx_3' name='r_carpal_middle_phalanx_3'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1950 0.7304 -0.0441' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='r_carpometacarpal_4') and parent::HAnimJoint[not(@name='r_midcarpal_4_5')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[4]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_r_carpometacarpal_4' name='r_carpometacarpal_4'/&gt; has parent HAnimJoint name='r_radiocarpal' rather than expected parent name='r_midcarpal_4_5', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[4]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_metacarpal_4' name='r_metacarpal_4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1951 0.8049 -0.0732' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[4]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_proximal_phalanx_4' name='r_carpal_proximal_phalanx_4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1951 0.7845 -0.0732' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[4]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_middle_phalanx_4' name='r_carpal_middle_phalanx_4'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1920 0.7318 -0.0716' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:successful-report test="$isHAnim2 and (@name='r_carpometacarpal_5') and parent::HAnimJoint[not(@name='r_midcarpal_4_5')]" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]">
      <svrl:text>&lt;HAnimJoint DEF='hanim_r_carpometacarpal_5' name='r_carpometacarpal_5'/&gt; has parent HAnimJoint name='r_radiocarpal' rather than expected parent name='r_midcarpal_4_5', recommend checking model </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_metacarpal_5' name='r_metacarpal_5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1926 0.8096 -0.0975' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:successful-report test="not(ends-with(@name,'_tip')) and not(ends-with(@name,'_view')) and not(ends-with(@name,'_pt')) and not(@USE)" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_metacarpal_phalanx_5' name='r_metacarpal_phalanx_5'/&gt; has incomplete name that must have suffix '_tip' or '_view' or '_pt' appended,
         depending on function </svrl:text>
   </svrl:successful-report>
   <svrl:successful-report test="$isHAnim2 and starts-with(@name,'r_metacarpal_phalanx') and not(contains(.,'phalanx_'))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment/HAnimSite">
      <svrl:text>&lt;HAnimSite DEF='hanim_r_metacarpal_phalanx_5' name='r_metacarpal_phalanx_5'/&gt; is an HAnimSite alias for 'r_metacarpal_phalanx_2', recommend updating X3D model
         source </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="TouchSensor | CylinderSensor | PlaneSensor | SphereSensor"/>
   <svrl:successful-report test="../Billboard" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment/HAnimSite/TouchSensor">
      <svrl:text>&lt;TouchSensor DEF=''/&gt; has peer Billboard node which may make user selection of geometry difficult, consider
         superimposing additional transparent Shape geometry to assist selection </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Billboard"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:failed-assert test="((@USE) and (string-length(@USE) &gt; 0)) or comment() or boolean(Appearance | ProtoInstance | descendant::Color | descendant::ColorRGBA | IS | parent::ProtoBody | parent::field | parent::fieldValue) or ((local-name(..)='Collision') and (@containerField='proxy')) or ((local-name(..)='LOD') and not(*)) or ((local-name(..)='Switch') and not(*))" role="warning" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimSegment/HAnimSite/Billboard/Shape">
      <svrl:text>&lt;Shape DEF=''/&gt; found without child Appearance node, or child Color node </svrl:text>
   </svrl:failed-assert>
   <svrl:fired-rule context="Text"/>
   <svrl:fired-rule context="FontStyle"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_proximal_phalanx_5' name='r_carpal_proximal_phalanx_5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1926 0.7896 -0.0975' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:successful-report test="(parent::HAnimJoint) and (Shape) and not(Transform/Shape) and not(../@containerField='skeleton')" role="error" location="/X3D/Scene/HAnimHumanoid/HAnimJoint[1]/HAnimJoint[2]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[3]/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint/HAnimJoint[5]/HAnimJoint/HAnimJoint/HAnimSegment">
      <svrl:text>&lt;HAnimSegment DEF='hanim_r_carpal_middle_phalanx_5' name='r_carpal_middle_phalanx_5'/&gt; has contained Shape geometry, but needs an intermediate Transform with translation
         value matching parent HAnimJoint/translation='-0.1902 0.7483 -0.0963' in order to be in the right location </svrl:text>
   </svrl:successful-report>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Transform"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="Shape"/>
   <svrl:fired-rule context="LineSet | PointSet"/>
   <svrl:fired-rule context="Coordinate"/>
   <svrl:fired-rule context="ColorRGBA"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimJoint"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSegment"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
   <svrl:fired-rule context="HAnimSite"/>
</svrl:schematron-output>