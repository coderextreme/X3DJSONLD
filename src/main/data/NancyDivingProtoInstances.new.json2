{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Immersive",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"https://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"title",
            "@content":"NancyDivingProtoInstances.x3d"
          },
          {
            "@name":"description",
            "@content":"Nancy having fun scuba diving - developmental model using ProtoInstance instead of HAnim native tags, do not use this pattern."
          },
          {
            "@name":"warning",
            "@content":"This is a developmental example, use HAnim native tags as shown in other examples instead of the prototypes and ProtoInstances shown here."
          },
          {
            "@name":"creator",
            "@content":"Etsuko Lippi"
          },
          {
            "@name":"translators",
            "@content":"Tom Miller and Don Brutzman, NPS"
          },
          {
            "@name":"created",
            "@content":"19 November 2001"
          },
          {
            "@name":"modified",
            "@content":"4 July 2020"
          },
          {
            "@name":"TODO",
            "@content":"left arm motion still has a problem"
          },
          {
            "@name":"creator",
            "@content":"Cindy Ballreich cindy@ballreich.net 3Name3D"
          },
          {
            "@name":"rights",
            "@content":"1997 3Name3D / Yglesias, Wallock, Divekar, Inc., all rights reserved."
          },
          {
            "@name":"identifier",
            "@content":"https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyDivingProtoInstances.x3d"
          },
          {
            "@name":"generator",
            "@content":"X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
          },
          {
            "@name":"license",
            "@content":"../license.html"
          },
          {
            "@name":"translated",
            "@content":"14 March 2021"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ExternProtoDeclare":
            {
              "@name":"Joint",
              "@appinfo":"The Joint node is used as a building block to describe the articulations of the humanoid figure. Each articulation of the humanoid figure is represented by a Joint node each of which is organized into a hierarchy that describes the overall skeleton of the humanoid.",
              "@documentation":"http://HAnim.org/Specifications/HAnim2001/part1/Joint.html",
              "@url":["NancyPrototypes.x3d#Joint","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyPrototypes.x3d#Joint","NancyPrototypes.wrl#Joint","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyPrototypes.wrl#Joint"],
              "field": [
                {
                  "@name":"center",
                  "@accessType":"inputOutput",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"children",
                  "@accessType":"inputOutput",
                  "@type":"MFNode"
                },
                {
                  "@name":"llimit",
                  "@accessType":"inputOutput",
                  "@type":"MFFloat"
                },
                {
                  "@name":"limitOrientation",
                  "@accessType":"inputOutput",
                  "@type":"SFRotation"
                },
                {
                  "@name":"name",
                  "@accessType":"inputOutput",
                  "@type":"SFString"
                },
                {
                  "@name":"rotation",
                  "@accessType":"inputOutput",
                  "@type":"SFRotation"
                },
                {
                  "@name":"scale",
                  "@accessType":"inputOutput",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"scaleOrientation",
                  "@accessType":"inputOutput",
                  "@type":"SFRotation"
                },
                {
                  "@name":"stiffness",
                  "@accessType":"inputOutput",
                  "@type":"MFFloat"
                },
                {
                  "@name":"translation",
                  "@accessType":"inputOutput",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"ulimit",
                  "@accessType":"inputOutput",
                  "@type":"MFFloat"
                },
                {
                  "@name":"removeChildren",
                  "@accessType":"inputOnly",
                  "@type":"MFNode"
                },
                {
                  "@name":"bboxSize",
                  "@accessType":"initializeOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"skinCoordIndex",
                  "@accessType":"inputOutput",
                  "@type":"MFInt32"
                },
                {
                  "@name":"bboxCenter",
                  "@accessType":"initializeOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"skinCoordWeight",
                  "@accessType":"inputOutput",
                  "@type":"MFFloat"
                },
                {
                  "@name":"addChildren",
                  "@accessType":"inputOnly",
                  "@type":"MFNode"
                }
              ]
            }
          },
          { "ExternProtoDeclare":
            {
              "@name":"Segment",
              "@appinfo":"The Segment node is used describe the attributes of the physical links between the joints of the humanoid figure. Each body part (pelvis thigh calf etc) of the humanoid figure is represented by a Segment node.",
              "@documentation":"http://HAnim.org/Specifications/HAnim2001/part1/Segment.html",
              "@url":["NancyPrototypes.x3d#Segment","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyPrototypes.x3d#Segment","NancyPrototypes.wrl#Segment","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyPrototypes.wrl#Segment"],
              "field": [
                {
                  "@name":"bboxCenter",
                  "@accessType":"initializeOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"bboxSize",
                  "@accessType":"initializeOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"centerOfMass",
                  "@accessType":"inputOutput",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"children",
                  "@accessType":"inputOutput",
                  "@type":"MFNode"
                },
                {
                  "@name":"coord",
                  "@accessType":"inputOutput",
                  "@appinfo":"contains Coordinate nodes",
                  "@type":"SFNode"
                },
                {
                  "@name":"displacers",
                  "@accessType":"inputOutput",
                  "@appinfo":"contains Displacer nodes",
                  "@type":"MFNode"
                },
                {
                  "@name":"mass",
                  "@accessType":"inputOutput",
                  "@type":"SFFloat"
                },
                {
                  "@name":"momentsOfInertia",
                  "@accessType":"inputOutput",
                  "@type":"MFFloat"
                },
                {
                  "@name":"name",
                  "@accessType":"inputOutput",
                  "@type":"SFString"
                },
                {
                  "@name":"addChildren",
                  "@accessType":"inputOnly",
                  "@type":"MFNode"
                },
                {
                  "@name":"removeChildren",
                  "@accessType":"inputOnly",
                  "@type":"MFNode"
                }
              ]
            }
          },
          { "ExternProtoDeclare":
            {
              "@name":"Humanoid",
              "@appinfo":"The Humanoid node serves as overall container for the Joint Segment Site and Viewpoint nodes which define the skeleton geometry and landmarks of the humanoid figure. Additionally the node provides a means for defining information about the author copyright and usage restrictions of the model.",
              "@documentation":"http://HAnim.org/Specifications/HAnim2001/part1/Humanoid.html",
              "@url":["NancyPrototypes.x3d#Humanoid","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyPrototypes.x3d#Humanoid","NancyPrototypes.wrl#Humanoid","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyPrototypes.wrl#Humanoid"],
              "field": [
                {
                  "@name":"bboxCenter",
                  "@accessType":"initializeOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"bboxSize",
                  "@accessType":"initializeOnly",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"center",
                  "@accessType":"inputOutput",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"humanoidBody",
                  "@accessType":"inputOutput",
                  "@appinfo":"HAnim 1.1 field container for body geometry Hint: replaced by 2.0 skeleton",
                  "@documentation":"http://HAnim.org/Specifications/HAnim1.1/#humanoid",
                  "@type":"MFNode"
                },
                {
                  "@name":"info",
                  "@accessType":"inputOutput",
                  "@type":"MFString"
                },
                {
                  "@name":"joints",
                  "@accessType":"inputOutput",
                  "@appinfo":"Container field for Joint nodes",
                  "@type":"MFNode"
                },
                {
                  "@name":"name",
                  "@accessType":"inputOutput",
                  "@type":"SFString"
                },
                {
                  "@name":"rotation",
                  "@accessType":"inputOutput",
                  "@type":"SFRotation"
                },
                {
                  "@name":"scale",
                  "@accessType":"inputOutput",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"scaleOrientation",
                  "@accessType":"inputOutput",
                  "@type":"SFRotation"
                },
                {
                  "@name":"segments",
                  "@accessType":"inputOutput",
                  "@appinfo":"Container field for Segment nodes",
                  "@type":"MFNode"
                },
                {
                  "@name":"sites",
                  "@accessType":"inputOutput",
                  "@appinfo":"Container field for Site nodes",
                  "@type":"MFNode"
                },
                {
                  "@name":"translation",
                  "@accessType":"inputOutput",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"version",
                  "@accessType":"inputOutput",
                  "@appinfo":"legal values: 1.1 or 2.0",
                  "@type":"SFString"
                },
                {
                  "@name":"viewpoints",
                  "@accessType":"inputOutput",
                  "@appinfo":"Container field for Viewpoint nodes",
                  "@type":"MFNode"
                },
                {
                  "@name":"skinNormal",
                  "@accessType":"inputOutput",
                  "@appinfo":"Hint: HAnim version 2.0",
                  "@type":"SFNode"
                },
                {
                  "@name":"humanoidVersion",
                  "@accessType":"inputOutput",
                  "@appinfo":"Version of the humanoid being modeled. Hint: HAnim version 2.0",
                  "@type":"SFString"
                },
                {
                  "@name":"skeleton",
                  "@accessType":"inputOutput",
                  "@appinfo":"HAnim 2.0 field container for body geometry Hint: replaces 1.1 humanoidBody",
                  "@documentation":"http://HAnim.org/Specifications/HAnim2001/part1/Humanoid.html",
                  "@type":"MFNode"
                },
                {
                  "@name":"skinCoord",
                  "@accessType":"inputOutput",
                  "@appinfo":"Hint: HAnim version 2.0",
                  "@type":"SFNode"
                }
              ]
            }
          },
          {
            "#comment":"===================="
          },
          { "ExternProtoDeclare":
            {
              "@name":"ViewPositionOrientation",
              "@appinfo":"ViewPositionOrientation provides provides console output of local position and orientation as user navigates",
              "@url":["../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation","../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation"],
              "field": [
                {
                  "@name":"enabled",
                  "@accessType":"inputOutput",
                  "@appinfo":"Whether or not ViewPositionOrientation sends output to console",
                  "@type":"SFBool"
                },
                {
                  "@name":"traceEnabled",
                  "@accessType":"initializeOnly",
                  "@appinfo":"Output internal trace messages for debugging this node, intended for developer use only",
                  "@type":"SFBool"
                },
                {
                  "@name":"set_traceEnabled",
                  "@accessType":"inputOnly",
                  "@appinfo":"Ability to turn output tracing on/off at runtime",
                  "@type":"SFBool"
                },
                {
                  "@name":"position_changed",
                  "@accessType":"outputOnly",
                  "@appinfo":"Output local position",
                  "@type":"SFVec3f"
                },
                {
                  "@name":"orientation_changed",
                  "@accessType":"outputOnly",
                  "@appinfo":"Output local orientation",
                  "@type":"SFRotation"
                },
                {
                  "@name":"outputViewpointString",
                  "@accessType":"outputOnly",
                  "@appinfo":"MFString value of new Viewpoint, suitable for use in string field of a Text node",
                  "@type":"MFString"
                }
              ]
            }
          },
          {
            "#comment":"Example use: https://savage.nps.edu/Savage/Tools/Animation/ViewPositionOrientationExample.x3d"
          },
          {
            "#comment":"===================="
          },
          {
            "#comment":"Start scene graph."
          },
          { "ROUTE":
            {
              "@fromField":"enterTime",
              "@fromNode":"TriggerProximitySensor",
              "@toField":"startTime",
              "@toNode":"Dive_Time"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"r_ankle_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"r_knee_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"r_hip_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"l_ankle_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"l_knee_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"l_hip_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"lower_body_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"head_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"neck_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"upper_body_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"whole_body_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"whole_body_TranslationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"r_ankle_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_r_ankle"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"r_knee_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_r_knee"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"r_hip_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_r_hip"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"l_ankle_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_l_ankle"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"l_knee_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_l_knee"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"l_hip_RotationInterpolator_BasicDive",
              "@toField":"set_rotationL",
              "@toNode":"finWarpScript"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"l_hip_RotationInterpolator_BasicDive",
              "@toField":"set_rotationR",
              "@toNode":"finWarpScript"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fin_warpL",
              "@fromNode":"finWarpScript",
              "@toField":"finL",
              "@toNode":"FinScript"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fin_warpR",
              "@fromNode":"finWarpScript",
              "@toField":"finR",
              "@toNode":"FinScript"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"l_hip_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_l_hip"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"lower_body_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_sacroiliac"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"head_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_skullbase"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"neck_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_vc4"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"upper_body_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_vl1"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"whole_body_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_humanoid_root"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"whole_body_TranslationInterpolator_BasicDive",
              "@toField":"set_translation",
              "@toNode":"hanim_humanoid_root"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"r_wrist_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"r_elbow_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"r_shoulder_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"l_wrist_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"l_elbow_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"fraction_changed",
              "@fromNode":"Dive_Time",
              "@toField":"set_fraction",
              "@toNode":"l_shoulder_RotationInterpolator_BasicDive"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"r_wrist_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_r_wrist"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"r_elbow_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_r_elbow"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"r_shoulder_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_r_shoulder"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"l_wrist_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_l_wrist"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"l_elbow_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_l_elbow"
            }
          },
          { "ROUTE":
            {
              "@fromField":"value_changed",
              "@fromNode":"l_shoulder_RotationInterpolator_BasicDive",
              "@toField":"set_rotation",
              "@toNode":"hanim_l_shoulder"
            }
          }
        ]
    }
  }
}