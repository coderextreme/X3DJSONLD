require "java"
require "../../../X3DJSAIL.4.0.full.jar"

ConfigurationProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ConfigurationProperties")
CommentsBlock = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.CommentsBlock")
AcousticProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.AcousticProperties")
Analyser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Analyser")
Anchor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.Anchor")
Appearance = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.Appearance")
Arc2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Arc2D")
ArcClose2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.ArcClose2D")
AudioClip = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.AudioClip")
AudioDestination = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.AudioDestination")
Background = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.Background")
BallJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.BallJoint")
Billboard = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.Billboard")
BiquadFilter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.BiquadFilter")
BlendedVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.BlendedVolumeStyle")
BooleanFilter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.BooleanFilter")
BooleanSequencer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.BooleanSequencer")
BooleanToggle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.BooleanToggle")
BooleanTrigger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.BooleanTrigger")
BoundaryEnhancementVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.BoundaryEnhancementVolumeStyle")
BoundedPhysicsModel = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.BoundedPhysicsModel")
Box = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Box")
BufferAudioSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.BufferAudioSource")
CADAssembly = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.CADAssembly")
CADFace = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.CADFace")
CADLayer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.CADLayer")
CADPart = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.CADPart")
CartoonVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.CartoonVolumeStyle")
ChannelMerger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.ChannelMerger")
ChannelSelector = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.ChannelSelector")
ChannelSplitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.ChannelSplitter")
Circle2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Circle2D")
ClipPlane = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.ClipPlane")
CollidableOffset = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollidableOffset")
CollidableShape = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollidableShape")
Collision = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.Collision")
CollisionCollection = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollisionCollection")
CollisionSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSensor")
CollisionSpace = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSpace")
Color = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.Color")
ColorChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.ColorChaser")
ColorDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.ColorDamper")
ColorInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.ColorInterpolator")
ColorRGBA = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.ColorRGBA")
ComposedCubeMapTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CubeMapTexturing.ComposedCubeMapTexture")
ComposedShader = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.ComposedShader")
ComposedTexture3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.ComposedTexture3D")
ComposedVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.ComposedVolumeStyle")
Cone = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Cone")
ConeEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.ConeEmitter")
Contact = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.Contact")
Contour2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.Contour2D")
ContourPolyline2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.ContourPolyline2D")
Convolver = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Convolver")
Coordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.Coordinate")
CoordinateChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.CoordinateChaser")
CoordinateDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.CoordinateDamper")
CoordinateDouble = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.CoordinateDouble")
CoordinateInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator")
CoordinateInterpolator2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator2D")
Cylinder = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Cylinder")
CylinderSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.PointingDeviceSensor.CylinderSensor")
Delay = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Delay")
DirectionalLight = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Lighting.DirectionalLight")
DISEntityManager = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.DISEntityManager")
DISEntityTypeMapping = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.DISEntityTypeMapping")
Disk2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Disk2D")
DoubleAxisHingeJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.DoubleAxisHingeJoint")
DynamicsCompressor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.DynamicsCompressor")
EaseInEaseOut = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.EaseInEaseOut")
EdgeEnhancementVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.EdgeEnhancementVolumeStyle")
ElevationGrid = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.ElevationGrid")
EspduTransform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.EspduTransform")
ExplosionEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.ExplosionEmitter")
Extrusion = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Extrusion")
FillProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.FillProperties")
FloatVertexAttribute = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.FloatVertexAttribute")
Fog = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.Fog")
FogCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.FogCoordinate")
FontStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Text.FontStyle")
ForcePhysicsModel = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.ForcePhysicsModel")
Gain = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Gain")
GeneratedCubeMapTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CubeMapTexturing.GeneratedCubeMapTexture")
GeoCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoCoordinate")
GeoElevationGrid = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoElevationGrid")
GeoLocation = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoLocation")
GeoLOD = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoLOD")
GeoMetadata = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoMetadata")
GeoOrigin = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoOrigin")
GeoPositionInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoPositionInterpolator")
GeoProximitySensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoProximitySensor")
GeoTouchSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoTouchSensor")
GeoTransform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoTransform")
GeoViewpoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoViewpoint")
Group = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Grouping.Group")
HAnimDisplacer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimDisplacer")
HAnimHumanoid = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimHumanoid")
HAnimJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimJoint")
HAnimMotion = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimMotion")
HAnimSegment = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimSegment")
HAnimSite = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimSite")
ImageCubeMapTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CubeMapTexturing.ImageCubeMapTexture")
ImageTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.ImageTexture")
ImageTexture3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.ImageTexture3D")
IndexedFaceSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.IndexedFaceSet")
IndexedLineSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.IndexedLineSet")
IndexedQuadSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.IndexedQuadSet")
IndexedTriangleFanSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.IndexedTriangleFanSet")
IndexedTriangleSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.IndexedTriangleSet")
IndexedTriangleStripSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.IndexedTriangleStripSet")
Inline = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.Inline")
IntegerSequencer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.IntegerSequencer")
IntegerTrigger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.IntegerTrigger")
IsoSurfaceVolumeData = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.IsoSurfaceVolumeData")
KeySensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.KeyDeviceSensor.KeySensor")
Layer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layering.Layer")
LayerSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layering.LayerSet")
Layout = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.Layout")
LayoutGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.LayoutGroup")
LayoutLayer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.LayoutLayer")
LinePickSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.LinePickSensor")
LineProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.LineProperties")
LineSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.LineSet")
ListenerPointSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.ListenerPointSource")
LoadSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.LoadSensor")
LocalFog = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.LocalFog")
LOD = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.LOD")
Material = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.Material")
Matrix3VertexAttribute = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.Matrix3VertexAttribute")
Matrix4VertexAttribute = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.Matrix4VertexAttribute")
MetadataBoolean = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataBoolean")
MetadataDouble = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataDouble")
MetadataFloat = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataFloat")
MetadataInteger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataInteger")
MetadataSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataSet")
MetadataString = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataString")
MicrophoneSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.MicrophoneSource")
MotorJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.MotorJoint")
MovieTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.MovieTexture")
MultiTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.MultiTexture")
MultiTextureCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.MultiTextureCoordinate")
MultiTextureTransform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.MultiTextureTransform")
NavigationInfo = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.NavigationInfo")
Normal = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.Normal")
NormalInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.NormalInterpolator")
NurbsCurve = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsCurve")
NurbsCurve2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsCurve2D")
NurbsOrientationInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsOrientationInterpolator")
NurbsPatchSurface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsPatchSurface")
NurbsPositionInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsPositionInterpolator")
NurbsSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsSet")
NurbsSurfaceInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsSurfaceInterpolator")
NurbsSweptSurface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsSweptSurface")
NurbsSwungSurface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsSwungSurface")
NurbsTextureCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsTextureCoordinate")
NurbsTrimmedSurface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsTrimmedSurface")
OpacityMapVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.OpacityMapVolumeStyle")
OrientationChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.OrientationChaser")
OrientationDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.OrientationDamper")
OrientationInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.OrientationInterpolator")
OrthoViewpoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.OrthoViewpoint")
OscillatorSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.OscillatorSource")
PackagedShader = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.PackagedShader")
ParticleSystem = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.ParticleSystem")
PeriodicWave = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.PeriodicWave")
PhysicalMaterial = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.PhysicalMaterial")
PickableGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.PickableGroup")
PixelTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.PixelTexture")
PixelTexture3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.PixelTexture3D")
PlaneSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.PointingDeviceSensor.PlaneSensor")
PointEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.PointEmitter")
PointLight = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Lighting.PointLight")
PointPickSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.PointPickSensor")
PointProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.PointProperties")
PointSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.PointSet")
Polyline2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Polyline2D")
PolylineEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.PolylineEmitter")
Polypoint2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Polypoint2D")
PositionChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.PositionChaser")
PositionChaser2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.PositionChaser2D")
PositionDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.PositionDamper")
PositionDamper2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.PositionDamper2D")
PositionInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.PositionInterpolator")
PositionInterpolator2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.PositionInterpolator2D")
PrimitivePickSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.PrimitivePickSensor")
ProgramShader = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.ProgramShader")
ProjectionVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.ProjectionVolumeStyle")
ProtoInstance = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ProtoInstance")
ProximitySensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalSensor.ProximitySensor")
QuadSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.QuadSet")
ReceiverPdu = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.ReceiverPdu")
Rectangle2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Rectangle2D")
RigidBody = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.RigidBody")
RigidBodyCollection = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.RigidBodyCollection")
ScalarChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.ScalarChaser")
ScalarDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.ScalarDamper")
ScalarInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.ScalarInterpolator")
ScreenFontStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.ScreenFontStyle")
ScreenGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.ScreenGroup")
Script = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Scripting.Script")
SegmentedVolumeData = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.SegmentedVolumeData")
ShadedVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.ShadedVolumeStyle")
ShaderPart = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.ShaderPart")
ShaderProgram = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.ShaderProgram")
Shape = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.Shape")
SignalPdu = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.SignalPdu")
SilhouetteEnhancementVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.SilhouetteEnhancementVolumeStyle")
SingleAxisHingeJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.SingleAxisHingeJoint")
SliderJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.SliderJoint")
Sound = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Sound")
SpatialSound = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.SpatialSound")
Sphere = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Sphere")
SphereSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.PointingDeviceSensor.SphereSensor")
SplinePositionInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator")
SplinePositionInterpolator2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator2D")
SplineScalarInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.SplineScalarInterpolator")
SpotLight = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Lighting.SpotLight")
SquadOrientationInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.SquadOrientationInterpolator")
StaticGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Grouping.StaticGroup")
StreamAudioDestination = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.StreamAudioDestination")
StreamAudioSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.StreamAudioSource")
StringSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.KeyDeviceSensor.StringSensor")
SurfaceEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.SurfaceEmitter")
Switch = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Grouping.Switch")
TexCoordChaser2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.TexCoordChaser2D")
TexCoordDamper2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.TexCoordDamper2D")
Text = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Text.Text")
TextureBackground = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.TextureBackground")
TextureCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.TextureCoordinate")
TextureCoordinate3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.TextureCoordinate3D")
TextureCoordinate4D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.TextureCoordinate4D")
TextureCoordinateGenerator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.TextureCoordinateGenerator")
TextureProjector = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.TextureProjection.TextureProjector")
TextureProjectorParallel = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.TextureProjection.TextureProjectorParallel")
TextureProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.TextureProperties")
TextureTransform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.TextureTransform")
TextureTransform3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.TextureTransform3D")
TextureTransformMatrix3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.TextureTransformMatrix3D")
TimeSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Time.TimeSensor")
TimeTrigger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.TimeTrigger")
ToneMappedVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.ToneMappedVolumeStyle")
TouchSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.PointingDeviceSensor.TouchSensor")
Transform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Grouping.Transform")
TransformSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalSensor.TransformSensor")
TransmitterPdu = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.TransmitterPdu")
TriangleFanSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.TriangleFanSet")
TriangleSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.TriangleSet")
TriangleSet2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.TriangleSet2D")
TriangleStripSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.TriangleStripSet")
TwoSidedMaterial = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.TwoSidedMaterial")
UniversalJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.UniversalJoint")
UnlitMaterial = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.UnlitMaterial")
Viewpoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.Viewpoint")
ViewpointGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.ViewpointGroup")
Viewport = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layering.Viewport")
VisibilitySensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalSensor.VisibilitySensor")
VolumeData = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.VolumeData")
VolumeEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.VolumeEmitter")
VolumePickSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.VolumePickSensor")
WaveShaper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.WaveShaper")
WindPhysicsModel = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.WindPhysicsModel")
WorldInfo = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.WorldInfo")
Component = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.component")
Connect = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.connect")
EXPORT = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.EXPORT")
ExternProtoDeclare = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ExternProtoDeclare")
Field = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.field")
FieldValue = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.fieldValue")
Head = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.head")
IMPORT = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.IMPORT")
IS = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.IS")
Meta = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.meta")
ProtoBody = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ProtoBody")
ProtoDeclare = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ProtoDeclare")
ProtoInterface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ProtoInterface")
ROUTE = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ROUTE")
Scene = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.Scene")
Unit = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.unit")
X3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.X3D")
SFBool = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFBool")
MFBool = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFBool")
SFColor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFColor")
MFColor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFColor")
SFColorRGBA = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFColorRGBA")
MFColorRGBA = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFColorRGBA")
SFDouble = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFDouble")
MFDouble = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFDouble")
SFFloat = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFFloat")
MFFloat = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFFloat")
SFImage = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFImage")
MFImage = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFImage")
SFInt32 = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFInt32")
MFInt32 = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFInt32")
SFMatrix3d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFMatrix3d")
MFMatrix3d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFMatrix3d")
SFMatrix3f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFMatrix3f")
MFMatrix3f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFMatrix3f")
SFMatrix4d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFMatrix4d")
MFMatrix4d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFMatrix4d")
SFMatrix4f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFMatrix4f")
MFMatrix4f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFMatrix4f")
SFString = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFString")
SFNode = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFNode")
MFNode = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFNode")
SFRotation = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFRotation")
MFRotation = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFRotation")
MFString = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFString")
SFTime = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFTime")
MFTime = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFTime")
SFVec2d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec2d")
MFVec2d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec2d")
SFVec2f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec2f")
MFVec2f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec2f")
SFVec3d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec3d")
MFVec3d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec3d")
SFVec3f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec3f")
MFVec3f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec3f")
SFVec4d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec4d")
MFVec4d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec4d")
SFVec4f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec4f")
MFVec4f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec4f")
ConfigurationProperties.setDeleteIntermediateFiles(false);
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
ConfigurationProperties.setXsltEngine(Java::OrgWeb3dX3dJsail::ConfigurationProperties::XSLT_ENGINE_NATIVE_JAVA);
x3D0 = X3D.new
    .setProfile("Immersive")
    .setVersion("4.0")
    .setHead(Head.new()
        .addMeta(Meta.new()
            .setName("title")
            .setContent("ArtDecoPrototypes.x3d")
        )
        .addMeta(Meta.new()
            .setName("description")
            .setContent("Prototype declarations defining values for X3D/VRML materials, originally converted from SGI's Open Inventor material examples.")
        )
        .addMeta(Meta.new()
            .setName("creator")
            .setContent("David Roussel")
        )
        .addMeta(Meta.new()
            .setName("translator")
            .setContent("James Harney, Don Brutzman NPS")
        )
        .addMeta(Meta.new()
            .setName("created")
            .setContent("7 April 2002")
        )
        .addMeta(Meta.new()
            .setName("modified")
            .setContent("20 October 2019")
        )
        .addMeta(Meta.new()
            .setName("reference")
            .setContent("http://vrmlstuff.free.fr/materials")
        )
        .addMeta(Meta.new()
            .setName("subject")
            .setContent("Universal Media Material Library")
        )
        .addMeta(Meta.new()
            .setName("identifier")
            .setContent("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials/ArtDecoPrototypes.x3d")
        )
        .addMeta(Meta.new()
            .setName("generator")
            .setContent("Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html")
        )
        .addMeta(Meta.new()
            .setName("license")
            .setContent("../license.html")
        )
    )
    .setScene(Scene.new()
        .addChild(WorldInfo.new()
            .setTitle("ArtDecoPrototypes.x3d")
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco00")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25)
                    .setDiffuseColor([0.282435, 0.085159, 0.134462].to_java Java::float)
                    .setShininess(0.127273)
                    .setSpecularColor([0.276305, 0.11431, 0.139857].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco01")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.254777)
                    .setDiffuseColor([0.685208, 0.134679, 0.332385].to_java Java::float)
                    .setShininess(0.071429)
                    .setSpecularColor([0.122449, 0.050035, 0.050035].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco02")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .addComments(CommentsBlock.new("computed conversion ambientIntensity=1.745282, normalized to 1.0"))
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(1.0)
                    .setDiffuseColor([0.536861, 0.0529, 0.245479].to_java Java::float)
                    .setShininess(0.832432)
                    .setSpecularColor([0.805292, 0.765198, 0.747416].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco03")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.248649)
                    .setDiffuseColor([1, 0.452381, 0.40339].to_java Java::float)
                    .setShininess(0.902703)
                    .setSpecularColor([0.686486, 0.396903, 0.419275].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco04")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25)
                    .setDiffuseColor([0.748016, 0.298362, 0.342624].to_java Java::float)
                    .setShininess(0.69697)
                    .setSpecularColor([0.345455, 0.345455, 0.345455].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco05")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.24359)
                    .setDiffuseColor([0.945455, 0.318988, 0.321717].to_java Java::float)
                    .setShininess(0.018182)
                    .setSpecularColor([0.072727, 0.021705, 0.010732].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco06")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25946)
                    .setDiffuseColor([0.228655, 0.195513, 0.425484].to_java Java::float)
                    .setShininess(0.542553)
                    .setSpecularColor([0.324504, 0.404255, 0.404255].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco07")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.333333)
                    .setDiffuseColor([0.200348, 0.100857, 0.320833].to_java Java::float)
                    .setShininess(0.133333)
                    .setSpecularColor([0.311358, 0.387879, 0.387879].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco08")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.242424)
                    .setDiffuseColor([0.330519, 0.3389, 0.6].to_java Java::float)
                    .setShininess(0.787879)
                    .setSpecularColor([0.290909, 0.290909, 0.290909].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco09")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.333333)
                    .setDiffuseColor([0.237059, 0.096273, 0.215625].to_java Java::float)
                    .setShininess(0.133333)
                    .setSpecularColor([0.311358, 0.387879, 0.387879].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco10")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.242425)
                    .setDiffuseColor([0.304, 0.09025, 0.207364].to_java Java::float)
                    .setShininess(0.072727)
                    .setSpecularColor([0.6665, 0.579046, 0.830303].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco11")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.258928)
                    .setDiffuseColor([0.335631, 0.207672, 0.238304].to_java Java::float)
                    .setEmissiveColor([0.010638, 0.010638, 0.010638].to_java Java::float)
                    .setShininess(0.021277)
                    .setSpecularColor([0.198631, 0.075403, 0.138803].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco12")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.240838)
                    .setDiffuseColor([0.876873, 0.14715, 0.00856].to_java Java::float)
                    .setShininess(0.076531)
                    .setSpecularColor([0.193878, 0.029416, 0.029416].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco13")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25)
                    .setDiffuseColor([0.794445, 0.249425, 0].to_java Java::float)
                    .setShininess(0.551515)
                    .setSpecularColor([0.62904, 0.194211, 0.033663].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco14")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25)
                    .setDiffuseColor([0.510609, 0.17264, 0.059872].to_java Java::float)
                    .setShininess(0.933333)
                    .setSpecularColor([0.533333, 0.533333, 0.533333].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco15")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.255814)
                    .setDiffuseColor([0.914894, 0.444404, 0.348914].to_java Java::float)
                    .setShininess(0.12766)
                    .setSpecularColor([0.345745, 0.143066, 0].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco16")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.240838)
                    .setDiffuseColor([0.876873, 0.323147, 0.199564].to_java Java::float)
                    .setShininess(0.80102)
                    .setSpecularColor([0.816327, 0.278677, 0.278677].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco17")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.242424)
                    .setDiffuseColor([0.515625, 0.315496, 0.252441].to_java Java::float)
                    .setShininess(0.933333)
                    .setSpecularColor([0.533333, 0.533333, 0.533333].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco18")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.264706)
                    .setDiffuseColor([0, 0.346939, 0.253624].to_java Java::float)
                    .setShininess(0.316327)
                    .setSpecularColor([0, 0.311074, 0.357143].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco19")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.259259)
                    .setDiffuseColor([0, 0.251004, 0.239248].to_java Java::float)
                    .setShininess(0.060606)
                    .setSpecularColor([0.177935, 0.249369, 0.229278].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco20")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.24)
                    .setDiffuseColor([0.228298, 0.385771, 0.186794].to_java Java::float)
                    .setShininess(0.393939)
                    .setSpecularColor([0.200464, 0.300145, 0.293518].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco21")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25)
                    .setDiffuseColor([0.315389, 0.544, 0.258052].to_java Java::float)
                    .setShininess(0.509389)
                    .setSpecularColor([0.456, 0.456, 0.456].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco22")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.246032)
                    .setDiffuseColor([0.251104, 0.312562, 0.201724].to_java Java::float)
                    .setShininess(0.086735)
                    .setSpecularColor([0.209184, 0.113842, 0.111328].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco23")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.242424)
                    .setDiffuseColor([0.392348, 0.456, 0.417708].to_java Java::float)
                    .setShininess(0.933333)
                    .setSpecularColor([0.533333, 0.533333, 0.533333].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco24")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.253968)
                    .setDiffuseColor([1, 0.854922, 0].to_java Java::float)
                    .setShininess(1.0)
                    .setSpecularColor([0.872449, 0.247119, 0.254214].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco25")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25641)
                    .setDiffuseColor([0.795918, 0.505869, 0.093315].to_java Java::float)
                    .setShininess(0.397959)
                    .setSpecularColor([0.923469, 0.428866, 0.006369].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco26")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .addComments(CommentsBlock.new("computed conversion ambientIntensity=2.226234, normalized to 1.0"))
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(1.0)
                    .setDiffuseColor([0.331633, 0.296582, 0.279057].to_java Java::float)
                    .setShininess(0.096939)
                    .setSpecularColor([0.311224, 0.25183, 0.133042].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco27")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.263158)
                    .setDiffuseColor([0.345455, 0.163262, 0.122622].to_java Java::float)
                    .setShininess(0.048649)
                    .setSpecularColor([0.212121, 0.107475, 0].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco28")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.240506)
                    .setDiffuseColor([0.277281, 0.104336, 0.0799].to_java Java::float)
                    .setShininess(0.09697)
                    .setSpecularColor([0.305587, 0.141916, 0.270572].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco29")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.215686)
                    .setDiffuseColor([0.087034, 0.025888, 0].to_java Java::float)
                    .setShininess(0.045918)
                    .setSpecularColor([0.224138, 0.104091, 0.104091].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco30")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.0)
                    .setDiffuseColor([0, 0, 0].to_java Java::float)
                    .setShininess(0.081633)
                    .setSpecularColor([0.293243, 0.297387, 0.290421].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco31")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25641)
                    .setDiffuseColor([0.236364, 0.236364, 0.236364].to_java Java::float)
                    .setShininess(0.054546)
                    .setSpecularColor([0.29697, 0.245839, 0.295962].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco32")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.242424)
                    .setDiffuseColor([0.38087, 0.382957, 0.417708].to_java Java::float)
                    .setShininess(0.933333)
                    .setSpecularColor([0.533333, 0.533333, 0.533333].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco33")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.230089)
                    .setDiffuseColor([0.610811, 0.610811, 0.610811].to_java Java::float)
                    .setShininess(0.897297)
                    .setSpecularColor([0.767568, 0.756757, 0.764964].to_java Java::float)
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("ArtDeco34")
            .setAppinfo("UniversalMediaMaterials prototype")
            .setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
            .setProtoBody(ProtoBody.new()
                .addChild(Material.new()
                    .setAmbientIntensity(0.25)
                    .setShininess(0.0)
                    .setSpecularColor([0.2, 0.2, 0.2].to_java Java::float)
                )
            )
        )
        .addChild(Anchor.new()
            .setDescription("ArtDecoPrototypeExample")
            .setParameter(["target=_blank"].to_java Java::java.lang.String)
            .setUrl(["../data/ArtDecoExamples.json", "../data/ArtDecoExamples.x3d", "ArtDecoExamples.json", "ArtDecoExamples.x3d"].to_java Java::java.lang.String)
            .addChild(Shape.new()
                .setAppearance(Appearance.new()
                    .setMaterial(Material.new()
                        .setDiffuseColor([0.8, 0.4, 0].to_java Java::float)
                    )
                )
                .setGeometry(Text.new()
                    .setString(["ArtDecoExamples.x3d", "is a Materials Prototype declaration file.", "", "For an example scene using these node,", "click this text and view", "ArtDecoExamples.x3d"].to_java Java::java.lang.String)
                    .setFontStyle(FontStyle.new()
                        .setJustify(["MIDDLE", "MIDDLE"].to_java Java::java.lang.String)
                        .setSize(0.8)
                    )
                )
            )
        )
    )
x3D0.toFileX3D "../data/ArtDecoPrototypes.new.jruby.x3d"
x3D0.toFileJSON "../data/ArtDecoPrototypes.new.jruby.json"
