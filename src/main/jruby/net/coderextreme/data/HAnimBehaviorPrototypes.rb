require "java"
require "../../../X3DJSAIL.4.0.full.jar"

ConfigurationProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ConfigurationProperties")
CommentsBlock = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.CommentsBlock")
AcousticProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.AcousticProperties")
Analyser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Analyser")
Anchor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.Anchor")
Appearance = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.Appearance")
Arc2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Arc2D")
ArcClose2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.ArcClose2D")
AudioClip = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.AudioClip")
AudioDestination = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.AudioDestination")
Background = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.Background")
BallJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.BallJoint")
Billboard = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.Billboard")
BiquadFilter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.BiquadFilter")
BlendedVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.BlendedVolumeStyle")
BooleanFilter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.BooleanFilter")
BooleanSequencer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.BooleanSequencer")
BooleanToggle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.BooleanToggle")
BooleanTrigger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.BooleanTrigger")
BoundaryEnhancementVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.BoundaryEnhancementVolumeStyle")
BoundedPhysicsModel = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.BoundedPhysicsModel")
Box = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Box")
BufferAudioSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.BufferAudioSource")
CADAssembly = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.CADAssembly")
CADFace = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.CADFace")
CADLayer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.CADLayer")
CADPart = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.CADPart")
CartoonVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.CartoonVolumeStyle")
ChannelMerger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.ChannelMerger")
ChannelSelector = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.ChannelSelector")
ChannelSplitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.ChannelSplitter")
Circle2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Circle2D")
ClipPlane = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.ClipPlane")
CollidableOffset = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollidableOffset")
CollidableShape = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollidableShape")
Collision = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.Collision")
CollisionCollection = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollisionCollection")
CollisionSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSensor")
CollisionSpace = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSpace")
Color = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.Color")
ColorChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.ColorChaser")
ColorDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.ColorDamper")
ColorInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.ColorInterpolator")
ColorRGBA = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.ColorRGBA")
ComposedCubeMapTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CubeMapTexturing.ComposedCubeMapTexture")
ComposedShader = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.ComposedShader")
ComposedTexture3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.ComposedTexture3D")
ComposedVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.ComposedVolumeStyle")
Cone = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Cone")
ConeEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.ConeEmitter")
Contact = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.Contact")
Contour2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.Contour2D")
ContourPolyline2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.ContourPolyline2D")
Convolver = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Convolver")
Coordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.Coordinate")
CoordinateChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.CoordinateChaser")
CoordinateDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.CoordinateDamper")
CoordinateDouble = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.CoordinateDouble")
CoordinateInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator")
CoordinateInterpolator2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator2D")
Cylinder = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Cylinder")
CylinderSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.PointingDeviceSensor.CylinderSensor")
Delay = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Delay")
DirectionalLight = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Lighting.DirectionalLight")
DISEntityManager = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.DISEntityManager")
DISEntityTypeMapping = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.DISEntityTypeMapping")
Disk2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Disk2D")
DoubleAxisHingeJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.DoubleAxisHingeJoint")
DynamicsCompressor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.DynamicsCompressor")
EaseInEaseOut = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.EaseInEaseOut")
EdgeEnhancementVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.EdgeEnhancementVolumeStyle")
ElevationGrid = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.ElevationGrid")
EspduTransform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.EspduTransform")
ExplosionEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.ExplosionEmitter")
Extrusion = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Extrusion")
FillProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.FillProperties")
FloatVertexAttribute = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.FloatVertexAttribute")
Fog = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.Fog")
FogCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.FogCoordinate")
FontStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Text.FontStyle")
ForcePhysicsModel = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.ForcePhysicsModel")
Gain = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Gain")
GeneratedCubeMapTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CubeMapTexturing.GeneratedCubeMapTexture")
GeoCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoCoordinate")
GeoElevationGrid = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoElevationGrid")
GeoLocation = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoLocation")
GeoLOD = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoLOD")
GeoMetadata = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoMetadata")
GeoOrigin = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoOrigin")
GeoPositionInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoPositionInterpolator")
GeoProximitySensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoProximitySensor")
GeoTouchSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoTouchSensor")
GeoTransform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoTransform")
GeoViewpoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geospatial.GeoViewpoint")
Group = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Grouping.Group")
HAnimDisplacer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimDisplacer")
HAnimHumanoid = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimHumanoid")
HAnimJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimJoint")
HAnimMotion = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimMotion")
HAnimSegment = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimSegment")
HAnimSite = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.HAnim.HAnimSite")
ImageCubeMapTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CubeMapTexturing.ImageCubeMapTexture")
ImageTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.ImageTexture")
ImageTexture3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.ImageTexture3D")
IndexedFaceSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.IndexedFaceSet")
IndexedLineSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.IndexedLineSet")
IndexedQuadSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.IndexedQuadSet")
IndexedTriangleFanSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.IndexedTriangleFanSet")
IndexedTriangleSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.IndexedTriangleSet")
IndexedTriangleStripSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.IndexedTriangleStripSet")
Inline = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.Inline")
IntegerSequencer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.IntegerSequencer")
IntegerTrigger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.IntegerTrigger")
IsoSurfaceVolumeData = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.IsoSurfaceVolumeData")
KeySensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.KeyDeviceSensor.KeySensor")
Layer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layering.Layer")
LayerSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layering.LayerSet")
Layout = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.Layout")
LayoutGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.LayoutGroup")
LayoutLayer = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.LayoutLayer")
LinePickSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.LinePickSensor")
LineProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.LineProperties")
LineSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.LineSet")
ListenerPointSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.ListenerPointSource")
LoadSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.LoadSensor")
LocalFog = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.LocalFog")
LOD = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.LOD")
Material = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.Material")
Matrix3VertexAttribute = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.Matrix3VertexAttribute")
Matrix4VertexAttribute = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.Matrix4VertexAttribute")
MetadataBoolean = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataBoolean")
MetadataDouble = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataDouble")
MetadataFloat = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataFloat")
MetadataInteger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataInteger")
MetadataSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataSet")
MetadataString = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.MetadataString")
MicrophoneSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.MicrophoneSource")
MotorJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.MotorJoint")
MovieTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.MovieTexture")
MultiTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.MultiTexture")
MultiTextureCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.MultiTextureCoordinate")
MultiTextureTransform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.MultiTextureTransform")
NavigationInfo = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.NavigationInfo")
Normal = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.Normal")
NormalInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.NormalInterpolator")
NurbsCurve = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsCurve")
NurbsCurve2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsCurve2D")
NurbsOrientationInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsOrientationInterpolator")
NurbsPatchSurface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsPatchSurface")
NurbsPositionInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsPositionInterpolator")
NurbsSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsSet")
NurbsSurfaceInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsSurfaceInterpolator")
NurbsSweptSurface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsSweptSurface")
NurbsSwungSurface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsSwungSurface")
NurbsTextureCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsTextureCoordinate")
NurbsTrimmedSurface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.NURBS.NurbsTrimmedSurface")
OpacityMapVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.OpacityMapVolumeStyle")
OrientationChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.OrientationChaser")
OrientationDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.OrientationDamper")
OrientationInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.OrientationInterpolator")
OrthoViewpoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.OrthoViewpoint")
OscillatorSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.OscillatorSource")
PackagedShader = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.PackagedShader")
ParticleSystem = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.ParticleSystem")
PeriodicWave = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.PeriodicWave")
PhysicalMaterial = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.PhysicalMaterial")
PickableGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.PickableGroup")
PixelTexture = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.PixelTexture")
PixelTexture3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.PixelTexture3D")
PlaneSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.PointingDeviceSensor.PlaneSensor")
PointEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.PointEmitter")
PointLight = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Lighting.PointLight")
PointPickSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.PointPickSensor")
PointProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.PointProperties")
PointSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.PointSet")
Polyline2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Polyline2D")
PolylineEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.PolylineEmitter")
Polypoint2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Polypoint2D")
PositionChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.PositionChaser")
PositionChaser2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.PositionChaser2D")
PositionDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.PositionDamper")
PositionDamper2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.PositionDamper2D")
PositionInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.PositionInterpolator")
PositionInterpolator2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.PositionInterpolator2D")
PrimitivePickSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.PrimitivePickSensor")
ProgramShader = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.ProgramShader")
ProjectionVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.ProjectionVolumeStyle")
ProtoInstance = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ProtoInstance")
ProximitySensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalSensor.ProximitySensor")
QuadSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.CADGeometry.QuadSet")
ReceiverPdu = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.ReceiverPdu")
Rectangle2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.Rectangle2D")
RigidBody = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.RigidBody")
RigidBodyCollection = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.RigidBodyCollection")
ScalarChaser = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.ScalarChaser")
ScalarDamper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.ScalarDamper")
ScalarInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.ScalarInterpolator")
ScreenFontStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.ScreenFontStyle")
ScreenGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layout.ScreenGroup")
Script = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Scripting.Script")
SegmentedVolumeData = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.SegmentedVolumeData")
ShadedVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.ShadedVolumeStyle")
ShaderPart = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.ShaderPart")
ShaderProgram = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shaders.ShaderProgram")
Shape = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.Shape")
SignalPdu = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.SignalPdu")
SilhouetteEnhancementVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.SilhouetteEnhancementVolumeStyle")
SingleAxisHingeJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.SingleAxisHingeJoint")
SliderJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.SliderJoint")
Sound = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.Sound")
SpatialSound = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.SpatialSound")
Sphere = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry3D.Sphere")
SphereSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.PointingDeviceSensor.SphereSensor")
SplinePositionInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator")
SplinePositionInterpolator2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator2D")
SplineScalarInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.SplineScalarInterpolator")
SpotLight = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Lighting.SpotLight")
SquadOrientationInterpolator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Interpolation.SquadOrientationInterpolator")
StaticGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Grouping.StaticGroup")
StreamAudioDestination = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.StreamAudioDestination")
StreamAudioSource = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.StreamAudioSource")
StringSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.KeyDeviceSensor.StringSensor")
SurfaceEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.SurfaceEmitter")
Switch = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Grouping.Switch")
TexCoordChaser2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.TexCoordChaser2D")
TexCoordDamper2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Followers.TexCoordDamper2D")
Text = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Text.Text")
TextureBackground = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalEffects.TextureBackground")
TextureCoordinate = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.TextureCoordinate")
TextureCoordinate3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.TextureCoordinate3D")
TextureCoordinate4D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.TextureCoordinate4D")
TextureCoordinateGenerator = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.TextureCoordinateGenerator")
TextureProjector = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.TextureProjection.TextureProjector")
TextureProjectorParallel = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.TextureProjection.TextureProjectorParallel")
TextureProperties = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.TextureProperties")
TextureTransform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing.TextureTransform")
TextureTransform3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.TextureTransform3D")
TextureTransformMatrix3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Texturing3D.TextureTransformMatrix3D")
TimeSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Time.TimeSensor")
TimeTrigger = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EventUtilities.TimeTrigger")
ToneMappedVolumeStyle = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.ToneMappedVolumeStyle")
TouchSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.PointingDeviceSensor.TouchSensor")
Transform = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Grouping.Transform")
TransformSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalSensor.TransformSensor")
TransmitterPdu = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.DIS.TransmitterPdu")
TriangleFanSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.TriangleFanSet")
TriangleSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.TriangleSet")
TriangleSet2D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Geometry2D.TriangleSet2D")
TriangleStripSet = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Rendering.TriangleStripSet")
TwoSidedMaterial = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.TwoSidedMaterial")
UniversalJoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.RigidBodyPhysics.UniversalJoint")
UnlitMaterial = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Shape.UnlitMaterial")
Viewpoint = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.Viewpoint")
ViewpointGroup = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Navigation.ViewpointGroup")
Viewport = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Layering.Viewport")
VisibilitySensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.EnvironmentalSensor.VisibilitySensor")
VolumeData = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.VolumeRendering.VolumeData")
VolumeEmitter = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.VolumeEmitter")
VolumePickSensor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Picking.VolumePickSensor")
WaveShaper = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Sound.WaveShaper")
WindPhysicsModel = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.ParticleSystems.WindPhysicsModel")
WorldInfo = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.WorldInfo")
Component = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.component")
Connect = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.connect")
EXPORT = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.EXPORT")
ExternProtoDeclare = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ExternProtoDeclare")
Field = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.field")
FieldValue = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.fieldValue")
Head = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.head")
IMPORT = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Networking.IMPORT")
IS = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.IS")
Meta = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.meta")
ProtoBody = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ProtoBody")
ProtoDeclare = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ProtoDeclare")
ProtoInterface = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ProtoInterface")
ROUTE = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.ROUTE")
Scene = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.Scene")
Unit = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.unit")
X3D = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.Core.X3D")
SFBool = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFBool")
MFBool = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFBool")
SFColor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFColor")
MFColor = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFColor")
SFColorRGBA = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFColorRGBA")
MFColorRGBA = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFColorRGBA")
SFDouble = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFDouble")
MFDouble = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFDouble")
SFFloat = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFFloat")
MFFloat = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFFloat")
SFImage = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFImage")
MFImage = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFImage")
SFInt32 = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFInt32")
MFInt32 = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFInt32")
SFMatrix3d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFMatrix3d")
MFMatrix3d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFMatrix3d")
SFMatrix3f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFMatrix3f")
MFMatrix3f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFMatrix3f")
SFMatrix4d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFMatrix4d")
MFMatrix4d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFMatrix4d")
SFMatrix4f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFMatrix4f")
MFMatrix4f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFMatrix4f")
SFString = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFString")
SFNode = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFNode")
MFNode = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFNode")
SFRotation = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFRotation")
MFRotation = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFRotation")
MFString = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFString")
SFTime = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFTime")
MFTime = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFTime")
SFVec2d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec2d")
MFVec2d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec2d")
SFVec2f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec2f")
MFVec2f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec2f")
SFVec3d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec3d")
MFVec3d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec3d")
SFVec3f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec3f")
MFVec3f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec3f")
SFVec4d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec4d")
MFVec4d = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec4d")
SFVec4f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.SFVec4f")
MFVec4f = JavaUtilities.get_proxy_class("org.web3d.x3d.jsail.fields.MFVec4f")
ConfigurationProperties.setDeleteIntermediateFiles(false);
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
ConfigurationProperties.setXsltEngine(Java::OrgWeb3dX3dJsail::ConfigurationProperties::XSLT_ENGINE_NATIVE_JAVA);
x3D0 = X3D.new
    .setProfile("Immersive")
    .setVersion("4.0")
    .setHead(Head.new()
        .addComponent(Component.new()
            .setName("HAnim")
            .setLevel(1)
        )
        .addMeta(Meta.new()
            .setName("title")
            .setContent("HAnimBehaviorPrototypes.x3d")
        )
        .addMeta(Meta.new()
            .setName("description")
            .setContent("Prototypes for HAnimBehavior node, which collects OrientationInterpolators for aggregate animation of an HAnim humanoid model, and HAnimBodyBehaviorChooser, which selects one body and enables/disables multiple aggregated behaviors.")
        )
        .addMeta(Meta.new()
            .setName("creator")
            .setContent("Don Brutzman, Jeff Weekley, MV4205 Advanced X3D Authoring class, and Keith Victor")
        )
        .addMeta(Meta.new()
            .setName("created")
            .setContent("2 May 2006")
        )
        .addMeta(Meta.new()
            .setName("modified")
            .setContent("4 July 2020")
        )
        .addMeta(Meta.new()
            .setName("reference")
            .setContent("Web3D2007BlendedBehaviorsChangeableBodies.pdf")
        )
        .addMeta(Meta.new()
            .setName("reference")
            .setContent("https://www.web3d.org/files/specifications/19774/V1.0")
        )
        .addMeta(Meta.new()
            .setName("reference")
            .setContent("https://www.web3d.org/x3d/specifications/ISO-IEC-19775-X3DAbstractSpecification_Revision1_to_Part1/Part01/components/hanim.html")
        )
        .addMeta(Meta.new()
            .setName("reference")
            .setContent("InterchangableActorsViaDynamicRoutingPrototypes.x3d")
        )
        .addMeta(Meta.new()
            .setName("reference")
            .setContent("ApaydinThesis.pdf")
        )
        .addMeta(Meta.new()
            .setName("subject")
            .setContent("X3D HAnim humanoid animation behaviors")
        )
        .addMeta(Meta.new()
            .setName("warning")
            .setContent("under development. should joint translations be exposed? upgrade to HAnim v2.2")
        )
        .addMeta(Meta.new()
            .setName("identifier")
            .setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/HAnimBehaviorPrototypes.x3d")
        )
        .addMeta(Meta.new()
            .setName("generator")
            .setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit")
        )
        .addMeta(Meta.new()
            .setName("license")
            .setContent("../license.html")
        )
    )
    .setScene(Scene.new()
        .addChild(WorldInfo.new()
            .setTitle("HAnimBehaviorPrototypes.x3d")
        )
        .addChild(ProtoDeclare.new()
            .setName("HAnimBehavior")
            .setAppinfo("The HAnimBehavior node models a single humanoid behavior either for an entire body or simply parts of a body. It collects a TimeSensor clock with a single PositionInterpolator and multiple OrientationInterpolator nodes to provide a single humanoid behavior.")
            .setDocumentation("https://www.web3d.org/files/specifications/19774/V1.0/")
            .setProtoInterface(ProtoInterface.new()
            .addComments(CommentsBlock.new("supported Level of Articulation (LOA)"))
            .addComments(CommentsBlock.new("shared common input for single TimeSensor animating all interpolators, since different Behaviors may have different cycleInterval durations"))
            .addComments(CommentsBlock.new("TODO: add other X3D 3.0 TimeSensor fields (pause etc.)"))
            .addComments(CommentsBlock.new("Not supported: animated translation of individual joints"))
            .addComments(CommentsBlock.new("pass in key/keyValue array pairs for single PositionInterpolator"))
            .addComments(CommentsBlock.new("pass in key/keyValue array pairs and expose named output for each OrientationInterpolator, joint by joint"))
                .addField(Field.new()
                    .setName("supportedLOA")
                    .setAccessType("inputOutput")
                    .setAppinfo("Supported Level of Articulation (LOA) support needed by authored HAnimBehavior set of OrientationInterpolator values. Legal values 0 1 2 3.")
                    .setType("SFInt32")
                    .setValue("-1")
                )
                .addField(Field.new()
                    .setName("enabled")
                    .setAccessType("inputOutput")
                    .setAppinfo("is this behavior enabled?")
                    .setType("SFBool")
                    .setValue("true")
                )
                .addField(Field.new()
                    .setName("cycleInterval")
                    .setAccessType("inputOutput")
                    .setAppinfo("how long do these interpolators take to execute?")
                    .setType("SFTime")
                    .setValue("1")
                )
                .addField(Field.new()
                    .setName("loop")
                    .setAccessType("inputOutput")
                    .setAppinfo("whether or not this behavior loops (e.g. walking) or is single shot (e.g. shake hands).")
                    .setType("SFBool")
                    .setValue("false")
                )
                .addField(Field.new()
                    .setName("startTime")
                    .setAccessType("inputOutput")
                    .setAppinfo("when time now >= startTime isActive becomes true and TimeSensor becomes active")
                    .setType("SFTime")
                    .setValue("0")
                )
                .addField(Field.new()
                    .setName("stopTime")
                    .setAccessType("inputOutput")
                    .setAppinfo("when stopTime becomes <= time now isActive becomes false and TimeSensor becomes inactive")
                    .setType("SFTime")
                    .setValue("0")
                )
                .addField(Field.new()
                    .setName("pauseTime")
                    .setAccessType("inputOutput")
                    .setAppinfo("when time now >= pauseTime isPaused becomes true and TimeSensor becomes paused")
                    .setType("SFTime")
                    .setValue("0")
                )
                .addField(Field.new()
                    .setName("resumeTime")
                    .setAccessType("inputOutput")
                    .setAppinfo("when resumeTime becomes <= time now isPaused becomes false and TimeSensor becomes inactive")
                    .setType("SFTime")
                    .setValue("0")
                )
                .addField(Field.new()
                    .setName("cycleTime")
                    .setAccessType("outputOnly")
                    .setAppinfo("cycleTime sends a time outputOnly at startTime and also at the beginning of each new cycle")
                    .setType("SFTime")
                )
                .addField(Field.new()
                    .setName("isActive")
                    .setAccessType("outputOnly")
                    .setAppinfo("isActive true/false events are sent when TimeSensor starts/stops running")
                    .setType("SFBool")
                )
                .addField(Field.new()
                    .setName("isPaused")
                    .setAccessType("outputOnly")
                    .setAppinfo("isPaused true/false events are sent when TimeSensor is paused/resumed")
                    .setType("SFBool")
                )
                .addField(Field.new()
                    .setName("elapsedTime")
                    .setAccessType("outputOnly")
                    .setAppinfo("current elapsed time since TimeSensor activated/running cumulative in seconds and not counting any paused time")
                    .setType("SFBool")
                )
                .addField(Field.new()
                    .setName("time")
                    .setAccessType("outputOnly")
                    .setAppinfo("continuously sends the absolute time (since January 1 1970)")
                    .setType("SFBool")
                )
                .addField(Field.new()
                    .setName("fraction_changed")
                    .setAccessType("outputOnly")
                    .setAppinfo("fraction_changed continuously sends value in range [0 1] showing time progress in the current cycle.")
                    .setType("SFFloat")
                )
                .addField(Field.new()
                    .setName("HumanoidRoot_translation_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("HumanoidRoot_translation_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFVec3f")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("HumanoidRoot_translation_changed")
                    .setAccessType("outputOnly")
                    .setType("SFVec3f")
                )
                .addField(Field.new()
                    .setName("HumanoidRoot_rotation_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("HumanoidRoot_rotation_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("HumanoidRoot_rotation_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("c1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("c2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("c3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("c4_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c4_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c4_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("c5_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c5_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c5_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("c6_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c6_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c6_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("c7_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c7_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("c7_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("jaw_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("jaw_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("jaw_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l4_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l4_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l4_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l5_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l5_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l5_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_acromioclavicular_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_acromioclavicular_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_acromioclavicular_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ankle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ankle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ankle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_calf_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_calf_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_calf_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_clavicle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_clavicle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_clavicle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_elbow_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_elbow_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_elbow_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_eyeball_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyeball_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyeball_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_eyeball_joint_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyeball_joint_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyeball_joint_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_eyebrow_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyebrow_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyebrow_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_eyebrow_joint_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyebrow_joint_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyebrow_joint_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_eyelid_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyelid_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyelid_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_eyelid_joint_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyelid_joint_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_eyelid_joint_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_forearm_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_forearm_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_forearm_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_forefoot_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_forefoot_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_forefoot_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_hand_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_hand_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_hand_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_hindfoot_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_hindfoot_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_hindfoot_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_hip_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_hip_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_hip_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_index0_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index0_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index0_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_index1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_index2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_index3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_index_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_index_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_index_middle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index_middle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index_middle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_index_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_index_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_knee_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_knee_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_knee_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_metatarsal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_metatarsal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_metatarsal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middistal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middistal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middistal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middle0_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle0_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle0_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middle1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middle2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middle3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middle_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middle_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middle_middle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle_middle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle_middle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_middle_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_middle_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_midproximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_midproximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_midproximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_midtarsal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_midtarsal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_midtarsal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_pinky0_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky0_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky0_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_pinky1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_pinky2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_pinky3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_pinky_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_pinky_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_pinky_middle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky_middle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky_middle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_pinky_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_pinky_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ring0_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring0_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring0_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ring1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ring2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ring3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ring_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ring_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ring_middle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring_middle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring_middle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_ring_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_ring_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_scapula_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_scapula_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_scapula_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_shoulder_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_shoulder_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_shoulder_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_sternoclavicular_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_sternoclavicular_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_sternoclavicular_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_subtalar_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_subtalar_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_subtalar_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_thigh_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thigh_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thigh_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_thumb1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_thumb2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_thumb3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_thumb_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_thumb_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_thumb_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_thumb_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_upperarm_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_upperarm_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_upperarm_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("l_wrist_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_wrist_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("l_wrist_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("pelvis_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("pelvis_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("pelvis_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_acromioclavicular_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_acromioclavicular_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_acromioclavicular_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ankle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ankle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ankle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_calf_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_calf_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_calf_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_clavicle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_clavicle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_clavicle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_elbow_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_elbow_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_elbow_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_eyeball_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyeball_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyeball_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_eyeball_joint_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyeball_joint_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyeball_joint_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_eyebrow_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyebrow_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyebrow_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_eyebrow_joint_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyebrow_joint_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyebrow_joint_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_eyelid_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyelid_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyelid_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_eyelid_joint_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyelid_joint_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_eyelid_joint_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_forearm_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_forearm_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_forearm_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_forefoot_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_forefoot_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_forefoot_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_hand_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_hand_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_hand_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_hindfoot_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_hindfoot_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_hindfoot_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_hip_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_hip_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_hip_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_index0_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index0_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index0_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_index1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_index2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_index3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_index_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_index_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_index_middle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index_middle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index_middle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_index_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_index_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_knee_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_knee_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_knee_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_metatarsal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_metatarsal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_metatarsal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middistal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middistal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middistal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middle0_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle0_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle0_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middle1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middle2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middle3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middle_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middle_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middle_middle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle_middle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle_middle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_middle_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_middle_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_midproximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_midproximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_midproximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_midtarsal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_midtarsal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_midtarsal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_pinky0_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky0_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky0_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_pinky1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_pinky2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_pinky3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_pinky_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_pinky_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_pinky_middle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky_middle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky_middle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_pinky_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_pinky_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ring0_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring0_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring0_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ring1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ring2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ring3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ring_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ring_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ring_middle_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring_middle_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring_middle_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_ring_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_ring_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_scapula_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_scapula_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_scapula_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_shoulder_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_shoulder_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_shoulder_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_sternoclavicular_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_sternoclavicular_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_sternoclavicular_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_subtalar_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_subtalar_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_subtalar_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_thigh_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thigh_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thigh_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_thumb1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_thumb2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_thumb3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_thumb_distal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb_distal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb_distal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_thumb_metacarpal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb_metacarpal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb_metacarpal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_thumb_proximal_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb_proximal_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_thumb_proximal_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_upperarm_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_upperarm_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_upperarm_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("r_wrist_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_wrist_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("r_wrist_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("sacroiliac_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("sacroiliac_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("sacroiliac_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("sacrum_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("sacrum_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("sacrum_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("skull_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("skull_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("skull_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("skullbase_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("skullbase_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("skullbase_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t10_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t10_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t10_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t11_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t11_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t11_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t12_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t12_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t12_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t4_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t4_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t4_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t5_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t5_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t5_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t6_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t6_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t6_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t7_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t7_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t7_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t8_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t8_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t8_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("t9_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t9_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("t9_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("temporomandibular_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("temporomandibular_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("temporomandibular_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vc1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vc2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vc3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vc4_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc4_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc4_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vc5_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc5_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc5_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vc6_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc6_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc6_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vc7_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc7_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vc7_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vl1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vl2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vl3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vl4_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl4_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl4_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vl5_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl5_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vl5_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt10_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt10_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt10_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt11_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt11_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt11_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt12_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt12_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt12_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt1_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt1_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt1_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt2_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt2_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt2_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt3_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt3_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt3_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt4_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt4_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt4_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt5_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt5_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt5_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt6_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt6_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt6_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt7_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt7_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt7_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt8_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt8_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt8_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
                .addField(Field.new()
                    .setName("vt9_key")
                    .setAccessType("inputOutput")
                    .setType("MFFloat")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt9_keyValue")
                    .setAccessType("inputOutput")
                    .setType("MFRotation")
              .addComments(CommentsBlock.new("no default value"))
                )
                .addField(Field.new()
                    .setName("vt9_changed")
                    .setAccessType("outputOnly")
                    .setType("SFRotation")
                )
            )
            .setProtoBody(ProtoBody.new()
            .addComments(CommentsBlock.new("design alternative: move TimeSensor out of the prototype, instead expose set_fraction globally to all interpolators"))
                .addChild(TimeSensor.new()
                    .setDEF("BehaviorClock")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("enabled")
                            .setProtoField("enabled")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("cycleInterval")
                            .setProtoField("cycleInterval")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("loop")
                            .setProtoField("loop")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("startTime")
                            .setProtoField("startTime")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("stopTime")
                            .setProtoField("stopTime")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("pauseTime")
                            .setProtoField("pauseTime")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("resumeTime")
                            .setProtoField("resumeTime")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("cycleTime")
                            .setProtoField("cycleTime")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("isActive")
                            .setProtoField("isActive")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("isPaused")
                            .setProtoField("isPaused")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("elapsedTime")
                            .setProtoField("elapsedTime")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("time")
                            .setProtoField("time")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("fraction_changed")
                            .setProtoField("fraction_changed")
                        )
                    )
                )
            .addComments(CommentsBlock.new("note that other nodes following the first node in the ProtoBody are not rendered but remain active nevertheless"))
                .addChild(Switch.new()
                    .setDEF("SupportedLoaHolder1")
                    .setWhichChoice(-1)
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("whichChoice")
                            .setProtoField("supportedLOA")
                        )
                    )
                )
                .addChild(PositionInterpolator.new()
                    .setDEF("HumanoidRootPI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("HumanoidRoot_translation_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("HumanoidRoot_translation_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("HumanoidRoot_translation_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("HumanoidRootPI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("HumanoidRootOI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("HumanoidRoot_rotation_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("HumanoidRoot_rotation_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("HumanoidRoot_rotation_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("HumanoidRootOI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("c1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("c1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("c1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("c1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("c1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("c2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("c2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("c2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("c2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("c2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("c3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("c3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("c3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("c3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("c3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("c4_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("c4_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("c4_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("c4_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("c4_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("c5_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("c5_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("c5_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("c5_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("c5_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("c6_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("c6_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("c6_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("c6_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("c6_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("c7_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("c7_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("c7_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("c7_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("c7_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("jaw_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("jaw_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("jaw_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("jaw_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("jaw_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l4_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l4_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l4_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l4_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l4_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l5_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l5_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l5_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l5_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l5_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_acromioclavicular_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_acromioclavicular_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_acromioclavicular_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_acromioclavicular_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_acromioclavicular_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ankle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ankle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ankle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ankle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ankle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_calf_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_calf_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_calf_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_calf_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_calf_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_clavicle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_clavicle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_clavicle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_clavicle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_clavicle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_elbow_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_elbow_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_elbow_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_elbow_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_elbow_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_eyeball_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_eyeball_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_eyeball_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_eyeball_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_eyeball_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_eyeball_joint_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_eyeball_joint_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_eyeball_joint_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_eyeball_joint_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_eyeball_joint_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_eyebrow_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_eyebrow_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_eyebrow_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_eyebrow_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_eyebrow_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_eyebrow_joint_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_eyebrow_joint_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_eyebrow_joint_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_eyebrow_joint_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_eyebrow_joint_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_eyelid_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_eyelid_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_eyelid_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_eyelid_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_eyelid_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_eyelid_joint_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_eyelid_joint_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_eyelid_joint_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_eyelid_joint_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_eyelid_joint_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_forearm_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_forearm_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_forearm_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_forearm_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_forearm_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_forefoot_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_forefoot_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_forefoot_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_forefoot_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_forefoot_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_hand_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_hand_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_hand_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_hand_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_hand_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_hindfoot_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_hindfoot_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_hindfoot_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_hindfoot_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_hindfoot_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_hip_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_hip_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_hip_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_hip_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_hip_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_index0_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_index0_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_index0_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_index0_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_index0_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_index1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_index1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_index1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_index1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_index1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_index2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_index2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_index2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_index2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_index2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_index3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_index3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_index3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_index3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_index3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_index_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_index_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_index_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_index_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_index_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_index_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_index_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_index_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_index_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_index_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_index_middle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_index_middle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_index_middle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_index_middle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_index_middle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_index_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_index_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_index_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_index_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_index_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_knee_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_knee_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_knee_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_knee_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_knee_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_metatarsal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_metatarsal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_metatarsal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_metatarsal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_metatarsal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middistal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middistal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middistal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middistal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middistal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middle0_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middle0_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middle0_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middle0_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middle0_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middle1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middle1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middle1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middle1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middle1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middle2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middle2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middle2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middle2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middle2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middle3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middle3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middle3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middle3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middle3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middle_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middle_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middle_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middle_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middle_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middle_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middle_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middle_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middle_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middle_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middle_middle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middle_middle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middle_middle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middle_middle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middle_middle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_middle_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_middle_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_middle_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_middle_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_middle_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_midproximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_midproximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_midproximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_midproximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_midproximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_midtarsal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_midtarsal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_midtarsal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_midtarsal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_midtarsal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_pinky0_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_pinky0_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_pinky0_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_pinky0_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_pinky0_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_pinky1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_pinky1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_pinky1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_pinky1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_pinky1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_pinky2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_pinky2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_pinky2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_pinky2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_pinky2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_pinky3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_pinky3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_pinky3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_pinky3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_pinky3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_pinky_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_pinky_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_pinky_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_pinky_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_pinky_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_pinky_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_pinky_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_pinky_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_pinky_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_pinky_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_pinky_middle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_pinky_middle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_pinky_middle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_pinky_middle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_pinky_middle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_pinky_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_pinky_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_pinky_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_pinky_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_pinky_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ring0_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ring0_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ring0_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ring0_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ring0_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ring1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ring1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ring1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ring1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ring1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ring2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ring2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ring2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ring2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ring2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ring3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ring3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ring3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ring3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ring3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ring_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ring_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ring_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ring_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ring_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ring_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ring_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ring_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ring_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ring_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ring_middle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ring_middle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ring_middle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ring_middle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ring_middle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_ring_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_ring_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_ring_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_ring_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_ring_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_scapula_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_scapula_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_scapula_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_scapula_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_scapula_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_shoulder_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_shoulder_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_shoulder_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_shoulder_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_shoulder_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_sternoclavicular_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_sternoclavicular_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_sternoclavicular_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_sternoclavicular_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_sternoclavicular_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_subtalar_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_subtalar_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_subtalar_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_subtalar_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_subtalar_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_thigh_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_thigh_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_thigh_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_thigh_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_thigh_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_thumb1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_thumb1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_thumb1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_thumb1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_thumb1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_thumb2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_thumb2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_thumb2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_thumb2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_thumb2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_thumb3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_thumb3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_thumb3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_thumb3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_thumb3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_thumb_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_thumb_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_thumb_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_thumb_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_thumb_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_thumb_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_thumb_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_thumb_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_thumb_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_thumb_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_thumb_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_thumb_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_thumb_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_thumb_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_thumb_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_upperarm_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_upperarm_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_upperarm_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_upperarm_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_upperarm_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("l_wrist_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("l_wrist_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("l_wrist_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("l_wrist_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("l_wrist_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("pelvis_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("pelvis_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("pelvis_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("pelvis_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("pelvis_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_acromioclavicular_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_acromioclavicular_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_acromioclavicular_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_acromioclavicular_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_acromioclavicular_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ankle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ankle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ankle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ankle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ankle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_calf_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_calf_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_calf_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_calf_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_calf_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_clavicle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_clavicle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_clavicle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_clavicle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_clavicle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_elbow_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_elbow_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_elbow_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_elbow_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_elbow_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_eyeball_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_eyeball_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_eyeball_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_eyeball_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_eyeball_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_eyeball_joint_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_eyeball_joint_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_eyeball_joint_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_eyeball_joint_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_eyeball_joint_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_eyebrow_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_eyebrow_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_eyebrow_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_eyebrow_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_eyebrow_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_eyebrow_joint_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_eyebrow_joint_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_eyebrow_joint_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_eyebrow_joint_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_eyebrow_joint_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_eyelid_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_eyelid_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_eyelid_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_eyelid_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_eyelid_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_eyelid_joint_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_eyelid_joint_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_eyelid_joint_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_eyelid_joint_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_eyelid_joint_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_forearm_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_forearm_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_forearm_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_forearm_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_forearm_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_forefoot_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_forefoot_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_forefoot_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_forefoot_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_forefoot_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_hand_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_hand_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_hand_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_hand_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_hand_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_hindfoot_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_hindfoot_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_hindfoot_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_hindfoot_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_hindfoot_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_hip_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_hip_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_hip_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_hip_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_hip_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_index0_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_index0_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_index0_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_index0_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_index0_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_index1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_index1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_index1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_index1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_index1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_index2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_index2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_index2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_index2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_index2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_index3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_index3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_index3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_index3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_index3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_index_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_index_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_index_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_index_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_index_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_index_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_index_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_index_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_index_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_index_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_index_middle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_index_middle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_index_middle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_index_middle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_index_middle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_index_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_index_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_index_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_index_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_index_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_knee_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_knee_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_knee_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_knee_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_knee_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_metatarsal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_metatarsal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_metatarsal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_metatarsal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_metatarsal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middistal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middistal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middistal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middistal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middistal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middle0_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middle0_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middle0_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middle0_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middle0_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middle1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middle1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middle1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middle1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middle1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middle2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middle2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middle2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middle2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middle2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middle3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middle3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middle3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middle3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middle3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middle_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middle_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middle_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middle_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middle_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middle_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middle_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middle_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middle_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middle_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middle_middle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middle_middle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middle_middle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middle_middle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middle_middle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_middle_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_middle_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_middle_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_middle_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_middle_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_midproximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_midproximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_midproximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_midproximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_midproximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_midtarsal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_midtarsal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_midtarsal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_midtarsal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_midtarsal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_pinky0_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_pinky0_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_pinky0_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_pinky0_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_pinky0_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_pinky1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_pinky1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_pinky1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_pinky1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_pinky1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_pinky2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_pinky2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_pinky2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_pinky2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_pinky2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_pinky3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_pinky3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_pinky3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_pinky3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_pinky3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_pinky_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_pinky_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_pinky_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_pinky_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_pinky_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_pinky_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_pinky_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_pinky_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_pinky_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_pinky_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_pinky_middle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_pinky_middle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_pinky_middle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_pinky_middle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_pinky_middle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_pinky_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_pinky_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_pinky_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_pinky_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_pinky_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ring0_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ring0_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ring0_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ring0_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ring0_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ring1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ring1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ring1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ring1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ring1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ring2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ring2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ring2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ring2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ring2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ring3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ring3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ring3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ring3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ring3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ring_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ring_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ring_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ring_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ring_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ring_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ring_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ring_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ring_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ring_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ring_middle_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ring_middle_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ring_middle_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ring_middle_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ring_middle_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_ring_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_ring_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_ring_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_ring_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_ring_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_scapula_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_scapula_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_scapula_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_scapula_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_scapula_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_shoulder_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_shoulder_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_shoulder_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_shoulder_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_shoulder_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_sternoclavicular_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_sternoclavicular_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_sternoclavicular_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_sternoclavicular_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_sternoclavicular_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_subtalar_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_subtalar_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_subtalar_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_subtalar_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_subtalar_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_thigh_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_thigh_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_thigh_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_thigh_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_thigh_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_thumb1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_thumb1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_thumb1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_thumb1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_thumb1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_thumb2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_thumb2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_thumb2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_thumb2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_thumb2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_thumb3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_thumb3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_thumb3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_thumb3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_thumb3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_thumb_distal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_thumb_distal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_thumb_distal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_thumb_distal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_thumb_distal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_thumb_metacarpal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_thumb_metacarpal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_thumb_metacarpal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_thumb_metacarpal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_thumb_metacarpal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_thumb_proximal_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_thumb_proximal_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_thumb_proximal_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_thumb_proximal_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_thumb_proximal_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_upperarm_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_upperarm_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_upperarm_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_upperarm_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_upperarm_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("r_wrist_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("r_wrist_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("r_wrist_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("r_wrist_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("r_wrist_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("sacroiliac_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("sacroiliac_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("sacroiliac_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("sacroiliac_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("sacroiliac_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("sacrum_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("sacrum_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("sacrum_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("sacrum_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("sacrum_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("skull_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("skull_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("skull_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("skull_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("skull_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("skullbase_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("skullbase_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("skullbase_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("skullbase_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("skullbase_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t4_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t4_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t4_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t4_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t4_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t5_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t5_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t5_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t5_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t5_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t6_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t6_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t6_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t6_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t6_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t7_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t7_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t7_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t7_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t7_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t8_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t8_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t8_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t8_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t8_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t9_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t9_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t9_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t9_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t9_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t10_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t10_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t10_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t10_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t10_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t11_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t11_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t11_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t11_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t11_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("t12_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("t12_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("t12_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("t12_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("t12_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("temporomandibular_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("temporomandibular_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("temporomandibular_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("temporomandibular_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("temporomandibular_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vc1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vc1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vc1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vc1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vc1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vc2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vc2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vc2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vc2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vc2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vc3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vc3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vc3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vc3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vc3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vc4_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vc4_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vc4_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vc4_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vc4_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vc5_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vc5_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vc5_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vc5_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vc5_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vc6_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vc6_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vc6_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vc6_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vc6_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vc7_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vc7_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vc7_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vc7_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vc7_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vl1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vl1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vl1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vl1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vl1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vl2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vl2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vl2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vl2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vl2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vl3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vl3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vl3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vl3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vl3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vl4_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vl4_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vl4_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vl4_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vl4_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vl5_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vl5_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vl5_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vl5_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vl5_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt1_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt1_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt1_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt1_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt1_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt2_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt2_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt2_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt2_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt2_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt3_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt3_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt3_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt3_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt3_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt4_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt4_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt4_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt4_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt4_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt5_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt5_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt5_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt5_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt5_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt6_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt6_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt6_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt6_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt6_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt7_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt7_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt7_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt7_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt7_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt8_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt8_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt8_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt8_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt8_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt9_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt9_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt9_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt9_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt9_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt10_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt10_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt10_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt10_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt10_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt11_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt11_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt11_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt11_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt11_OI")
                )
                .addChild(OrientationInterpolator.new()
                    .setDEF("vt12_OI")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("key")
                            .setProtoField("vt12_key")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("keyValue")
                            .setProtoField("vt12_keyValue")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("value_changed")
                            .setProtoField("vt12_changed")
                        )
                    )
                )
                .addChild(ROUTE.new()
                    .setFromField("fraction_changed")
                    .setFromNode("BehaviorClock")
                    .setToField("set_fraction")
                    .setToNode("vt12_OI")
                )
            )
        )
        .addChild(ProtoDeclare.new()
            .setName("HAnimBodyBehaviorChooser")
            .setAppinfo("The HAnimBodyBehaviorChooser node allows an author to select one of several HAnimHumanoid bodies and simultaneously apply multiple HAnimBehavior animations to the active body. Individual behaviors may be enabled or disabled at any time.")
            .setProtoInterface(ProtoInterface.new()
            .addComments(CommentsBlock.new("TODO: supported Level of Articulation (LOA) might be adapted to more efficiently setup/teardown pertinent ROUTEs"))
            .addComments(CommentsBlock.new("accessType=\"inputOutput\" avoided to maintain backwards compatilibility with VRML97 scripting constraints"))
            .addComments(CommentsBlock.new("shared common TimeSensor inputs for all BehaviorAnimation nodes, connected via ROUTEs"))
            .addComments(CommentsBlock.new("TODO: consider named accessors, e.g. enableBehaviorByName and disableBehaviorByName"))
            .addComments(CommentsBlock.new("TODO: consider addBody, removeBody, addBehavior, removeBehavior"))
            .addComments(CommentsBlock.new("TODO: consider startBehaviorByIndex, stopBehaviorByIndex, startBehaviorByName, stopBehaviorByName"))
                .addField(Field.new()
                    .setName("supportedLOA")
                    .setAccessType("inputOutput")
                    .setAppinfo("Level of Articulation (LOA) support needed by authored HAnimBehavior set of OrientationInterpolator values. Legal values 0 1 2 3.")
                    .setType("SFInt32")
                    .setValue("-1")
                )
                .addField(Field.new()
                    .setName("HumanoidArray")
                    .setAccessType("initializeOnly")
                    .setAppinfo("[HAnimHumanoid] nodes only")
                    .setType("MFNode")
              .addComments(CommentsBlock.new("default NULL"))
                )
                .addField(Field.new()
                    .setName("whichBody")
                    .setAccessType("initializeOnly")
                    .setAppinfo("whichBody is selected default is initial member of HumanoidArray")
                    .setType("SFInt32")
                    .setValue("-1")
                )
                .addField(Field.new()
                    .setName("set_whichBody")
                    .setAccessType("inputOnly")
                    .setAppinfo("whichBody is selected default is none")
                    .setType("SFInt32")
                )
                .addField(Field.new()
                    .setName("whichBody_changed")
                    .setAccessType("outputOnly")
                    .setAppinfo("whichBody is selected default is none")
                    .setType("SFInt32")
                )
                .addField(Field.new()
                    .setName("hAnimBehaviorNodes")
                    .setAccessType("initializeOnly")
                    .setAppinfo("[HAnimBehavior] nodes only some or all of which may be enabled. Warning: do not animate a single joint with more than one interpolator at a given time.")
                    .setType("MFNode")
              .addComments(CommentsBlock.new("default NULL"))
                )
                .addField(Field.new()
                    .setName("enabledBehaviorsArray")
                    .setAccessType("initializeOnly")
                    .setAppinfo("indicate which HAnimBehavior nodes are activated, empty indicates all enabled true")
                    .setType("MFBool")
              .addComments(CommentsBlock.new("no default values"))
                )
                .addField(Field.new()
                    .setName("enableBehavior")
                    .setAccessType("inputOnly")
                    .setAppinfo("enable corresponding behavior identified by index number")
                    .setType("SFInt32")
                )
                .addField(Field.new()
                    .setName("disableBehavior")
                    .setAccessType("inputOnly")
                    .setAppinfo("disable corresponding behavior identified by index number")
                    .setType("SFInt32")
                )
                .addField(Field.new()
                    .setName("startTime")
                    .setAccessType("inputOutput")
                    .setType("SFTime")
                    .setValue("0")
                )
                .addField(Field.new()
                    .setName("stopTime")
                    .setAccessType("inputOutput")
                    .setType("SFTime")
                    .setValue("0")
                )
            )
            .setProtoBody(ProtoBody.new()
                .addChild(Switch.new()
                    .setDEF("BodySwitch")
                    .setWhichChoice(-1)
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("whichChoice")
                            .setProtoField("whichBody")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("children")
                            .setProtoField("HumanoidArray")
                        )
                    )
                )
            .addComments(CommentsBlock.new("note that other nodes following the first node in the ProtoBody are not rendered but remain active nevertheless"))
                .addChild(Group.new()
                    .setDEF("BehaviorArrayHolder")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("children")
                            .setProtoField("hAnimBehaviorNodes")
                        )
                    )
                )
                .addChild(TimeSensor.new()
                    .setDEF("TimeSensorHolderStartStopTimes")
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("startTime")
                            .setProtoField("startTime")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("stopTime")
                            .setProtoField("stopTime")
                        )
                    )
                )
                .addChild(Switch.new()
                    .setDEF("SupportedLoaHolder2")
                    .setWhichChoice(-1)
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("whichChoice")
                            .setProtoField("supportedLOA")
                        )
                    )
                )
                .addChild(Script.new()
                    .setDEF("BehaviorSelectionScript")
                    .setDirectOutput(true)
                    .setUrl(["HAnimBehaviorPrototypesScript.js", "https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/HAnimBehaviorPrototypesScript.js"].to_java Java::java.lang.String)
                    .addField(Field.new()
                        .setName("HumanoidArray")
                        .setAccessType("initializeOnly")
                        .setAppinfo("[HAnimHumanoid] nodes only")
                        .setType("MFNode")
                    )
                    .addField(Field.new()
                        .setName("whichBody")
                        .setAccessType("initializeOnly")
                        .setAppinfo("whichBody is selected default is none")
                        .setType("SFInt32")
                    )
                    .addField(Field.new()
                        .setName("set_whichBody")
                        .setAccessType("inputOnly")
                        .setAppinfo("whichBody is selected default is none")
                        .setType("SFInt32")
                    )
                    .addField(Field.new()
                        .setName("whichBody_changed")
                        .setAccessType("outputOnly")
                        .setAppinfo("whichBody is selected default is none")
                        .setType("SFInt32")
                    )
                    .addField(Field.new()
                        .setName("hAnimBehaviorNodes")
                        .setAccessType("initializeOnly")
                        .setAppinfo("[HAnimBehavior] nodes only")
                        .setType("MFNode")
                .addComments(CommentsBlock.new("TODO: might consider accessType=\"inputOutput\" if VRML97 compatibility not needed"))
                    )
                    .addField(Field.new()
                        .setName("enabledBehaviorsArray")
                        .setAccessType("initializeOnly")
                        .setType("MFBool")
                    )
                    .addField(Field.new()
                        .setName("enableBehavior")
                        .setAccessType("inputOnly")
                        .setAppinfo("enable corresponding behavior")
                        .setType("SFInt32")
                    )
                    .addField(Field.new()
                        .setName("disableBehavior")
                        .setAccessType("inputOnly")
                        .setAppinfo("enable corresponding behavior")
                        .setType("SFInt32")
                    )
                    .addField(Field.new()
                        .setName("timeSensorNode")
                        .setAccessType("initializeOnly")
                        .setType("SFNode")
                        .addChild(TimeSensor.new()
                            .setUSE("TimeSensorHolderStartStopTimes")
                        )
                    )
                    .addField(Field.new()
                        .setName("previousBodyIndex")
                        .setAccessType("initializeOnly")
                        .setAppinfo("remember prior body index to avoid unnecessary ROUTE teardown and creation")
                        .setType("SFInt32")
                        .setValue("-1")
                    )
                    .addField(Field.new()
                        .setName("traceEnabled")
                        .setAccessType("initializeOnly")
                        .setType("SFBool")
                        .setValue("true")
                    )
                    .setIS(IS.new()
                        .addConnect(Connect.new()
                            .setNodeField("HumanoidArray")
                            .setProtoField("HumanoidArray")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("whichBody")
                            .setProtoField("whichBody")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("set_whichBody")
                            .setProtoField("set_whichBody")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("whichBody_changed")
                            .setProtoField("whichBody_changed")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("hAnimBehaviorNodes")
                            .setProtoField("hAnimBehaviorNodes")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("enabledBehaviorsArray")
                            .setProtoField("enabledBehaviorsArray")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("enableBehavior")
                            .setProtoField("enableBehavior")
                        )
                        .addConnect(Connect.new()
                            .setNodeField("disableBehavior")
                            .setProtoField("disableBehavior")
                        )
                    )
                )
            )
        )
        .addComments(CommentsBlock.new("TODO: Goal is to have 3 different ways to present a body: local creation, Inline with IMPORT/EXPORT, or external prototype."))
        .addChild(ProtoInstance.new()
            .setName("HAnimBehavior")
            .setDEF("BehaviorTest1")
          .addComments(CommentsBlock.new("only one PositionInterpolator key/keyValue definition for entire humanoid - optional"))
          .addComments(CommentsBlock.new("must have paired overrides of each key/keyValue array being defined"))
            .addFieldValue(FieldValue.new()
                .setName("HumanoidRoot_translation_key")
                .setValue("0 0.25 0.5 0.75 1")
            )
            .addFieldValue(FieldValue.new()
                .setName("HumanoidRoot_translation_keyValue")
                .setValue("0 0 0 0 0 10 0 0 20 0 0 30 0 0 40 0 0 50")
            )
            .addFieldValue(FieldValue.new()
                .setName("r_ankle_key")
                .setValue("0 0.5 1")
            )
            .addFieldValue(FieldValue.new()
                .setName("r_ankle_keyValue")
                .setValue("0 1 0 0 0 1 0 0.2 0 1 0 0.4")
            )
        )
        .addChild(ProtoInstance.new()
            .setName("HAnimBodyBehaviorChooser")
            .setDEF("ChooserTest")
            .addFieldValue(FieldValue.new()
                .setName("HumanoidArray")
                .addChild(HAnimHumanoid.new()
                    .setName("DiamondManLOA-1")
                    .setDEF("hanim_DiamondManLOA-1")
                    .setVersion("2.0")
                )
            )
            .addFieldValue(FieldValue.new()
                .setName("whichBody")
                .setValue("0")
            )
            .addFieldValue(FieldValue.new()
                .setName("hAnimBehaviorNodes")
                .addChild(ProtoInstance.new()
                    .setUSE("BehaviorTest1")
                )
            )
            .addFieldValue(FieldValue.new()
                .setName("enabledBehaviorsArray")
                .setValue("true")
            )
        )
    )
x3D0.toFileX3D "../data/HAnimBehaviorPrototypes.new.jruby.x3d"
x3D0.toFileJSON "../data/HAnimBehaviorPrototypes.new.jruby.json"
