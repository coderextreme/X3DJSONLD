<?xml version="1.0" encoding="UTF-8"?>
<html><body><div><headU-a-entity><metaU-a-entity/></headU-a-entity><a-scene><ViewpointU-a-entity position="0,0,5" description="Only Viewpoint"/><BackgroundU-a-entity skyColor="0.4,0.4,0.4"/><a-entity DEF="G1"><a-entity DEF="DECLpoint_INSTANCE_node"><a-entity><a-entity radius="0.1" geometry="primitive: sphere"/><AppearanceU-a-entity><MaterialU-a-entity diffuseColor="1,0,0"/></AppearanceU-a-entity></a-entity><PositionInterpolatorU-a-entity DEF="DECLpoint_INSTANCE_PI1" key="0,1" keyValue="0,0,0,0,5,0"/><ScriptU-a-entity DEF="DECLpoint_INSTANCE_MB1"><fieldU-a-entity/><![CDATA[


ecmascript:
               function set_location(value) {
                    old = translation;
                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f([old, translation]);
               }


]]></ScriptU-a-entity><TimeSensorU-a-entity DEF="DECLpoint_INSTANCE_CL1" cycleInterval="3" loop="true"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE_CL1" fromField="cycleTime" toNode="DECLpoint_INSTANCE_MB1" toField="set_location"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE_CL1" fromField="fraction_changed" toNode="DECLpoint_INSTANCE_PI1" toField="set_fraction"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE_MB1" fromField="keyValue" toNode="DECLpoint_INSTANCE_PI1" toField="keyValue"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE_PI1" fromField="value_changed" toNode="DECLpoint_INSTANCE_node" toField="set_translation"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE_MB1" fromField="translation_changed" toNode="DECLpoint_INSTANCE_node" toField="set_translation"/></a-entity></a-entity><a-entity DEF="G2"><a-entity DEF="DECLpoint_INSTANCE1000_node"><a-entity><a-entity radius="0.1" geometry="primitive: sphere"/><AppearanceU-a-entity><MaterialU-a-entity diffuseColor="1,0,0"/></AppearanceU-a-entity></a-entity><PositionInterpolatorU-a-entity DEF="DECLpoint_INSTANCE1000_PI1" key="0,1" keyValue="0,0,0,0,5,0"/><ScriptU-a-entity DEF="DECLpoint_INSTANCE1000_MB1"><fieldU-a-entity/><![CDATA[


ecmascript:
               function set_location(value) {
                    old = translation;
                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f([old, translation]);
               }


]]></ScriptU-a-entity><TimeSensorU-a-entity DEF="DECLpoint_INSTANCE1000_CL1" cycleInterval="3" loop="true"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE1000_CL1" fromField="cycleTime" toNode="DECLpoint_INSTANCE1000_MB1" toField="set_location"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE1000_CL1" fromField="fraction_changed" toNode="DECLpoint_INSTANCE1000_PI1" toField="set_fraction"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE1000_MB1" fromField="keyValue" toNode="DECLpoint_INSTANCE1000_PI1" toField="keyValue"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE1000_PI1" fromField="value_changed" toNode="DECLpoint_INSTANCE1000_node" toField="set_translation"/><ROUTEU-a-entity fromNode="DECLpoint_INSTANCE1000_MB1" fromField="translation_changed" toNode="DECLpoint_INSTANCE1000_node" toField="set_translation"/></a-entity></a-entity><a-entity DEF="transC1"><a-entity DEF="rotscaleC1"><a-entity><AppearanceU-a-entity><MaterialU-a-entity diffuseColor="0.2,0.7,0.7" transparency="0.5"/></AppearanceU-a-entity><a-entity radius="0.05" geometry="primitive: cylinder; radius: 0.05" material="radius: 0.05"/></a-entity></a-entity></a-entity><ScriptU-a-entity DEF="DECLx3dconnector_connector1_S1"><fieldU-a-entity><a-entity USE="G1"/><a-entity USE="G2"/><a-entity USE="transC1"/><a-entity USE="rotscaleC1"/></fieldU-a-entity><![CDATA[

            ecmascript:
        function recompute(startpoint,endpoint){
	    if (typeof endpoint === 'undefined') {
		return;
	    }
            var dif = endpoint.subtract(startpoint);
            var dist = dif.length()*0.5;
            var dif2 = dif.multiply(0.5);
            var norm = dif.normalize();
            var transl = startpoint.add(dif2);
	    if (typeof Quaternion !== 'undefined') {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)
		    };
	    } else {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)
		    };
	    }
	}
	function recompute_and_route(startpoint, endpoint) {
	      var trafo = recompute(startpoint, endpoint);
	      transC1.translation = trafo.translation;
	      rotscaleC1.rotation = trafo.rotation;
	      rotscaleC1.scale = trafo.scale;
	}
        function initialize(){
            recompute_and_route(startnode.translation,endnode.translation);
        }
        function set_startpoint(val,t){
            recompute_and_route(val,endnode.translation);
        }
        function set_endpoint(val,t){
            recompute_and_route(startnode.translation,val);
        }


]]></ScriptU-a-entity><ROUTEU-a-entity fromNode="G1" fromField="translation_changed" toNode="DECLx3dconnector_connector1_S1" toField="set_startpoint"/><ROUTEU-a-entity fromNode="G2" fromField="translation_changed" toNode="DECLx3dconnector_connector1_S1" toField="set_endpoint"/></a-scene></div></body></html>