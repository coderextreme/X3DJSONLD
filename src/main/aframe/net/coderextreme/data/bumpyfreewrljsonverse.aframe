<?xml version="1.0" encoding="UTF-8"?>
<html><body><div><headU-a-entity><componentU-a-entity/><!--<component name='Shape' level='4'></component>--><!--Additional authoring resources for meta-tags: http://www.dublincore.org/documents/dcmi-terms http://www.dublincore.org/documents/dces http://www.w3.org/TR/html4/struct/global.html#h-7.4.4 http://vancouver-webpages.com/META http://vancouver-webpages.com/META/about-mk-metas2.html Additional authoring resources for language codes: ftp://ftp.isi.edu/in-notes/bcp/bcp47.txt http://www.loc.gov/standards/iso639-2/langhome.html http://www.iana.org/numbers.html#L--><metaU-a-entity/></headU-a-entity><!--"The Flower Review (TPREV)", a simple MU scene using DIS Sensor Event Distribution, It is assumed the reviewers (users) have a non-X3D voice channel (e.g. TeamSpeak) open for their "discussion about the teapot"--><a-scene><!--basic nodes, which might be present in any scene--><NavigationInfoU-a-entity avatarSize="0.25,1.75,0.75"/><DirectionalLightU-a-entity ambientIntensity="0.2" direction="0,-1,0"/><DirectionalLightU-a-entity ambientIntensity="0.2" direction="-1,-0.1,-1"/><ViewpointU-a-entity description="My Overview" fieldOfView="1.570796" position="0,1.75,60"/><!--LayerSet with two layers, navigation happens in layer 1--><LayerSetU-a-entity activeLayer="1" order="1,2"><!--the first Layer contains the main scenery - "The Review of the Flower (DIS Multiuser)"--><!--the second layer contains the sliders that are moved with the user's display like a HUD (heads up display)--><LayerU-a-entity pickable="true" objectType="ALL"><!--this group contains the red/green/blue 3D crosshair--><a-entity><!--Arrow X--><a-entity position="25,0,0" rotation="0,0,-1,1.57"><a-entity><a-entity DEF="Shaft" radius="0.35" height="50" geometry="primitive: cylinder; radius: 0.35; height: 50" material="radius: 0.35; height: 50"/><AppearanceU-a-entity><MaterialU-a-entity DEF="RED" diffuseColor="1,0,0" emissiveColor="1,0,0"/></AppearanceU-a-entity></a-entity></a-entity><a-entity position="50,0,0" rotation="0,0,-1,1.57"><a-entity><a-entity DEF="Tip" bottomRadius="0.8" height="3" geometry="primitive: cone; radiusBottom: 0.8; height: 3" material="radiusBottom: 0.8; height: 3"/><AppearanceU-a-entity><MaterialU-a-entity USE="RED"/></AppearanceU-a-entity></a-entity></a-entity><!--Arrow Y--><a-entity position="0,25,0"><a-entity><a-entity USE="Shaft" geometry="primitive: cylinder"/><AppearanceU-a-entity><MaterialU-a-entity DEF="GREEN" diffuseColor="0,1,0" emissiveColor="0,1,0"/></AppearanceU-a-entity></a-entity></a-entity><a-entity position="0,50,0"><a-entity><a-entity USE="Tip" geometry="primitive: cone"/><AppearanceU-a-entity><MaterialU-a-entity USE="GREEN"/></AppearanceU-a-entity></a-entity></a-entity><!--Arrow Z--><a-entity position="0,0,25" rotation="1,0,0,1.57"><a-entity><a-entity USE="Shaft" geometry="primitive: cylinder"/><AppearanceU-a-entity><MaterialU-a-entity DEF="BLUE" diffuseColor="0,0,1" emissiveColor="0,0,1"/></AppearanceU-a-entity></a-entity></a-entity><a-entity position="0,0,50" rotation="1,0,0,1.57"><a-entity><a-entity USE="Tip" geometry="primitive: cone"/><AppearanceU-a-entity><MaterialU-a-entity USE="BLUE"/></AppearanceU-a-entity></a-entity></a-entity></a-entity><!--the model that is being reviewed by the users of this scene--><a-entity DEF="FlowerTransform"><!--<Inline DEF="Flower" url='"bumpyfreewrl.x3d"' />--><!--Images courtesy of Paul Debevec's Light Probe Image Gallery--><BackgroundU-a-entity backUrl="../resources/images/all_probes/stpeters_cross/stpeters_back.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png" bottomUrl="../resources/images/all_probes/stpeters_cross/stpeters_bottom.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png" frontUrl="../resources/images/all_probes/stpeters_cross/stpeters_front.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png" leftUrl="../resources/images/all_probes/stpeters_cross/stpeters_left.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png" rightUrl="../resources/images/all_probes/stpeters_cross/stpeters_right.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png" topUrl="../resources/images/all_probes/stpeters_cross/stpeters_top.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"/><a-entity><a-entity><!--<Sphere radius='40'></Sphere>--><IndexedFaceSetU-a-entity convex="false" DEF="Orbit"><CoordinateU-a-entity DEF="OrbitCoordinates"/></IndexedFaceSetU-a-entity><AppearanceU-a-entity><MaterialU-a-entity diffuseColor="0.7,0.7,0.7" specularColor="0.5,0.5,0.5"/><ComposedCubeMapTextureU-a-entity DEF="texture"><a-image url="../resources/images/all_probes/stpeters_cross/stpeters_back.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png" geometry="src: ../resources/images/all_probes/stpeters_cross/stpeters_back.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png" material="src: ../resources/images/all_probes/stpeters_cross/stpeters_back.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"/><a-image url="../resources/images/all_probes/stpeters_cross/stpeters_bottom.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png" geometry="src: ../resources/images/all_probes/stpeters_cross/stpeters_bottom.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png" material="src: ../resources/images/all_probes/stpeters_cross/stpeters_bottom.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"/><a-image url="../resources/images/all_probes/stpeters_cross/stpeters_front.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png" geometry="src: ../resources/images/all_probes/stpeters_cross/stpeters_front.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png" material="src: ../resources/images/all_probes/stpeters_cross/stpeters_front.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"/><a-image url="../resources/images/all_probes/stpeters_cross/stpeters_left.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png" geometry="src: ../resources/images/all_probes/stpeters_cross/stpeters_left.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png" material="src: ../resources/images/all_probes/stpeters_cross/stpeters_left.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"/><a-image url="../resources/images/all_probes/stpeters_cross/stpeters_right.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png" geometry="src: ../resources/images/all_probes/stpeters_cross/stpeters_right.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png" material="src: ../resources/images/all_probes/stpeters_cross/stpeters_right.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"/><a-image url="../resources/images/all_probes/stpeters_cross/stpeters_top.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png" geometry="src: ../resources/images/all_probes/stpeters_cross/stpeters_top.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png" material="src: ../resources/images/all_probes/stpeters_cross/stpeters_top.png,https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"/></ComposedCubeMapTextureU-a-entity><ComposedShaderU-a-entity DEF="freewrlShader" language="GLSL"><fieldU-a-entity/><ShaderPartU-a-entity url="../shaders/freewrl_flowers_chromatic.vs,https://coderextreme.net/X3DJSONLD/src/main/shaders/freewrl_flowers_chromatic.vs"/><ShaderPartU-a-entity url="../shaders/freewrl.fs,https://coderextreme.net/X3DJSONLD/src/main/shaders/freewrl_bubbles.fs"/><!--TO CONVERT TO A SPHERE <ShaderPart url='"../shaders/freewrl.vs"' type="VERTEX" containerField='parts'></ShaderPart> <ShaderPart url='"../shaders/freewrl_bubbles.fs"' containerField='parts' type='FRAGMENT'></ShaderPart>--></ComposedShaderU-a-entity></AppearanceU-a-entity></a-entity></a-entity></a-entity><ScriptU-a-entity DEF="OrbitScript"><fieldU-a-entity/><![CDATA[
ecmascript:
function initialize() {
     var resolution = 100;
     var theta = 0.0;
     var phi = 0.0;
     var delta = (2 * 3.141592653) / (resolution-1);
     var crds = new MFVec3f();
     var vecCount = 0;
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		var rho = a + b * Math.cos(c * theta + tdelta) * Math.cos(d * phi + pdelta);
		crds[vecCount] = new SFVec3f(
			rho * Math.cos(phi) * Math.cos(theta),
			rho * Math.cos(phi) * Math.sin(theta),
			rho * Math.sin(phi)
		);
		vecCount++;
		theta += delta;
	}
	phi += delta;
     }
     coordinates = crds;
     // coordinates = new MFVec3f(...crds);


     var cis = new MFInt32();
     var intCount = 0;
     for ( i = 0; i < resolution-1; i++) {
     	for ( j = 0; j < resolution-1; j++) {
	     cis[intCount++] = i*resolution+j;
	     cis[intCount++] = i*resolution+j+1;
	     cis[intCount++] = (i+1)*resolution+j+1;
	     cis[intCount++] = (i+1)*resolution+j;
	     cis[intCount++] = -1;
	}
    }
    coordIndexes = cis;
    // coordIndexes = new MFInt32(...cis);
}

]]></ScriptU-a-entity><ROUTEU-a-entity fromField="coordIndexes" fromNode="OrbitScript" toField="set_coordIndex" toNode="Orbit"/><ROUTEU-a-entity fromField="coordinates" fromNode="OrbitScript" toField="set_point" toNode="OrbitCoordinates"/><!--DIS multiuser facilities--><DISEntityManagerU-a-entity DEF="EntityManager" networkMode="networkReader"><DISEntityTypeMappingU-a-entity readInterval="3" category="77" specific="1" url="../data/Gramps8Final.x3d,https://coderextreme.net/X3DJSONLD/src/main/data/Gramps8Final.x3d"/><DISEntityTypeMappingU-a-entity readInterval="3" category="77" specific="2" url="../data/Leif8Final.x3d,https://coderextreme.net/X3DJSONLD/src/main/data/Leif8Final.x3d"/><DISEntityTypeMappingU-a-entity readInterval="3" category="77" specific="3" url="../data/Lily8Final.x3d,https://coderextreme.net/X3DJSONLD/src/main/data/Lily8Final.x3d"/><DISEntityTypeMappingU-a-entity readInterval="3" category="77" specific="4" url="../data/Tufani8Final.x3d,https://coderextreme.net/X3DJSONLD/src/main/data/Tufani8Final.x3d"/></DISEntityManagerU-a-entity><CollisionU-a-entity enabled="false"><a-entity DEF="AvatarHolder"/></CollisionU-a-entity><ROUTEU-a-entity fromField="addedEntities" fromNode="EntityManager" toField="addChildren" toNode="AvatarHolder"/><ROUTEU-a-entity fromField="removedEntities" fromNode="EntityManager" toField="removeChildren" toNode="AvatarHolder"/></LayerU-a-entity><LayoutLayerU-a-entity pickable="true" objectType="ALL"><!--positioning the LayoutLayer--><!--clipping the LayoutLayer--><!--the content (children) of the LayoutLayer--><!--first, the slider for scaling the model--><a-entity position="0,0,-3"><a-entity><AppearanceU-a-entity><MaterialU-a-entity diffuseColor="0,0,0" transparency="0.7"/></AppearanceU-a-entity><a-entity size="100,100,0.02" geometry="primitive: box; width: 100; height: 100; depth: 0.02" material="width: 100; height: 100; depth: 0.02"/></a-entity></a-entity><a-entity DEF="equationTransform"><a-entity position="0,0,-20"><a-entity><a-entity DEF="equation" value="r = a + b * cos(c * theta + tdelta) * cos (d * phi + pdelta)" geometry="primitive: text"><FontStyleU-a-entity size="0.09"/></a-entity><AppearanceU-a-entity><MaterialU-a-entity diffuseColor="1,1,0"/></AppearanceU-a-entity></a-entity></a-entity></a-entity><ProtoDeclareU-a-entity name="SliderProto"><ProtoInterfaceU-a-entity><fieldU-a-entity/></ProtoInterfaceU-a-entity><ProtoBodyU-a-entity><a-entity><a-entity DEF="protoSlider" position="0,0.7,0"><ISU-a-entity><connectU-a-entity/></ISU-a-entity><a-entity DEF="protoTransform" position="0,0,0.1"><ISU-a-entity><connectU-a-entity/></ISU-a-entity><PlaneSensorU-a-entity DEF="protoSensor" maxPosition="1,0"/><a-entity position="0,0,0"><TouchSensorU-a-entity DEF="protoTS"/></a-entity><a-entity><a-entity><a-entity DEF="protoText" value="a=" geometry="primitive: text"><ISU-a-entity><connectU-a-entity/></ISU-a-entity><FontStyleU-a-entity size="0.23"/></a-entity><AppearanceU-a-entity><MaterialU-a-entity/></AppearanceU-a-entity></a-entity></a-entity></a-entity></a-entity><ScriptU-a-entity DEF="protoValueTransformerScript" directOutput="true" mustEvaluate="true"><fieldU-a-entity/><ISU-a-entity><connectU-a-entity/></ISU-a-entity><![CDATA[
ecmascript:
const newTranslation = function(Value) {
	'use strict';
	protoValue_changed = Value.x * protoScale;
	protoText_changed = new MFString(protoParameterName+'='+protoValue_changed.toFixed(2));

        var orientation = Value.x;

        var ps = Browser.currentScene.getNamedNode("protoSensor");
        var t = Browser.currentScene.getNamedNode("protoTransform");
        var txt = Browser.currentScene.getNamedNode("protoText");
        if (shader) {
            shader.getField(protoParameterName).setValue(orientation * protoScale);
        }
        if (txt) {
            var stringField = txt.getField("string");
            var label = protoParameterName;
            stringField.setValue(new MFString(label+"="+(orientation * protoScale).toFixed(2)));
        }
        if (ps) {
            ps.offset = new SFVec3f(orientation, ps.offset[1], ps.offset[2]);
        }
        if (t) {
            t.translation = new SFVec3f(orientation, t.translation[1], t.translation[2]);
        }
}


				]]></ScriptU-a-entity><ROUTEU-a-entity fromField="translation_changed" fromNode="protoSensor" toField="set_translation" toNode="protoTransform"/><ROUTEU-a-entity fromField="translation_changed" fromNode="protoSensor" toField="newTranslation" toNode="protoValueTransformerScript"/><ROUTEU-a-entity fromField="protoText_changed" fromNode="protoValueTransformerScript" toField="string" toNode="protoText"/></a-entity></ProtoBodyU-a-entity></ProtoDeclareU-a-entity><ProtoInstanceU-a-entity name="SliderProto" DEF="aPI"><fieldValueU-a-entity><ComposedShaderU-a-entity USE="freewrlShader"/></fieldValueU-a-entity></ProtoInstanceU-a-entity><ProtoInstanceU-a-entity name="SliderProto" DEF="bPI"><fieldValueU-a-entity><ComposedShaderU-a-entity USE="freewrlShader"/></fieldValueU-a-entity></ProtoInstanceU-a-entity><ProtoInstanceU-a-entity name="SliderProto" DEF="cPI"><fieldValueU-a-entity><ComposedShaderU-a-entity USE="freewrlShader"/></fieldValueU-a-entity></ProtoInstanceU-a-entity><ProtoInstanceU-a-entity name="SliderProto" DEF="dPI"><fieldValueU-a-entity><ComposedShaderU-a-entity USE="freewrlShader"/></fieldValueU-a-entity></ProtoInstanceU-a-entity><ProtoInstanceU-a-entity name="SliderProto" DEF="tdeltaPI"><fieldValueU-a-entity><ComposedShaderU-a-entity USE="freewrlShader"/></fieldValueU-a-entity></ProtoInstanceU-a-entity><ProtoInstanceU-a-entity name="SliderProto" DEF="pdeltaPI"><fieldValueU-a-entity><ComposedShaderU-a-entity USE="freewrlShader"/></fieldValueU-a-entity></ProtoInstanceU-a-entity><LayoutU-a-entity align="LEFT,BOTTOM" offset="-0.2,0.19" offsetUnits="WORLD,WORLD" scaleMode="NONE,NONE" size="0.4,0.6" sizeUnits="WORLD,WORLD"/><ViewportU-a-entity clipBoundary="0,1,0,1"/></LayoutLayerU-a-entity></LayerSetU-a-entity></a-scene></div></body></html>