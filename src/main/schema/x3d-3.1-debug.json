{
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "$id": "https://www.web3d.org/specifications/x3d-3.1-JSONSchema.json",
        "title": "X3D V3.1 JSON Schema, generated 2024/12/05 16:15:02",
        "description": "Experimental JSON Schema for X3D V3.1",
        "type": "object",
        "properties": {
                "X3D": {
                        "$ref": "#/$defs/X3D"
                }
        },
        "required": [
                "X3D"
        ],
        "additionalProperties": false,
        "$defs": {
                "-childStatements": {
                        "description": "Comments and ROUTEs",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                                "type": "object",
                                "properties": {
                                        "#comment": {
                                                "type": "string"
                                        },
                                        "ROUTE": {
                                                "$ref": "#/$defs/ROUTE"
                                        },
                                        "IMPORT": {
                                                "$ref": "#/$defs/IMPORT"
                                        },
                                        "ProtoDeclare": {
                                                "$ref": "#/$defs/ProtoDeclare"
                                        },
                                        "ExternProtoDeclare": {
                                                "$ref": "#/$defs/ExternProtoDeclare"
                                        },
                                        "EXPORT": {
                                                "$ref": "#/$defs/EXPORT"
                                        }
                                },
                                "additionalProperties": false
                        }
                },
		"@geoSystem": {
			"description": "Attempts to validate all possible combinations",
			"oneOf": [
				{
					"type": "array",
					"minItems": 2,
					"maxItems": 3,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"GD",
								"GDC"
							],
							"default": "GD"
						},
						{
							"type": "string",
							"enum": [
								"WGS84"
							]
						}
					],
					"items": {
						"type": "string",
						"enum": [
							"AM",
							"AN",
							"BN",
							"BR",
							"CC",
							"CD",
							"EA",
							"EB",
							"EC",
							"ED",
							"EE",
							"EF",
							"FA",
							"HE",
							"HO",
							"ID",
							"IN",
							"KA",
							"RF",
							"SA",
							"WD",
							"WE"
						],
						"default": "WE"
					}
				},
				{
					"type": "array",
					"minItems": 1,
					"maxItems": 3,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"GD",
								"GDC"
							],
							"default": "GD"
						},
						{
							"type": "string",
							"enum": [
								"AM",
								"AN",
								"BN",
								"BR",
								"CC",
								"CD",
								"EA",
								"EB",
								"EC",
								"ED",
								"EE",
								"EF",
								"FA",
								"HE",
								"HO",
								"ID",
								"IN",
								"KA",
								"RF",
								"SA",
								"WD",
								"WE"
							],
							"default": "WE"
						}
					],
					"items": {
						"type": "string",
						"enum": [
							"WGS84"
						]
					}
				},
				{
					"type": "array",
					"minItems": 4,
					"maxItems": 5,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"UTM"
							],
							"default": "GD"
						},
						{
							"type": "string",
							"enum": [
								"Z01",
								"Z1",
								"Z02",
								"Z2",
								"Z03",
								"Z3",
								"Z04",
								"Z4",
								"Z05",
								"Z5",
								"Z06",
								"Z6",
								"Z07",
								"Z7",
								"Z08",
								"Z8",
								"Z09",
								"Z9",
								"Z10",
								"Z11",
								"Z12",
								"Z13",
								"Z14",
								"Z15",
								"Z16",
								"Z17",
								"Z18",
								"Z19",
								"Z20",
								"Z21",
								"Z22",
								"Z23",
								"Z24",
								"Z25",
								"Z26",
								"Z27",
								"Z28",
								"Z29",
								"Z30",
								"Z31",
								"Z32",
								"Z33",
								"Z34",
								"Z35",
								"Z36",
								"Z37",
								"Z38",
								"Z39",
								"Z40",
								"Z41",
								"Z42",
								"Z43",
								"Z44",
								"Z45",
								"Z46",
								"Z47",
								"Z48",
								"Z49",
								"Z50",
								"Z51",
								"Z52",
								"Z53",
								"Z54",
								"Z55",
								"Z56",
								"Z57",
								"Z58",
								"Z59",
								"Z60"
							],
							"default": "WE"
						},
						{
							"type": "string",
							"enum": [
								"AM",
								"AN",
								"BN",
								"BR",
								"CC",
								"CD",
								"EA",
								"EB",
								"EC",
								"ED",
								"EE",
								"EF",
								"FA",
								"HE",
								"HO",
								"ID",
								"IN",
								"KA",
								"RF",
								"SA",
								"WD",
								"WE"
							]
						},
						{
							"type": "string",
							"enum": [
								"WGS84"
							]
						}
					],
					"items": {
						"type": "string",
						"enum": [
							"S",
							"N"
						]
					}
				},
				{
					"type": "array",
					"minItems": 3,
					"maxItems": 5,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"UTM"
							],
							"default": "GD"
						},
						{
							"type": "string",
							"enum": [
								"Z01",
								"Z1",
								"Z02",
								"Z2",
								"Z03",
								"Z3",
								"Z04",
								"Z4",
								"Z05",
								"Z5",
								"Z06",
								"Z6",
								"Z07",
								"Z7",
								"Z08",
								"Z8",
								"Z09",
								"Z9",
								"Z10",
								"Z11",
								"Z12",
								"Z13",
								"Z14",
								"Z15",
								"Z16",
								"Z17",
								"Z18",
								"Z19",
								"Z20",
								"Z21",
								"Z22",
								"Z23",
								"Z24",
								"Z25",
								"Z26",
								"Z27",
								"Z28",
								"Z29",
								"Z30",
								"Z31",
								"Z32",
								"Z33",
								"Z34",
								"Z35",
								"Z36",
								"Z37",
								"Z38",
								"Z39",
								"Z40",
								"Z41",
								"Z42",
								"Z43",
								"Z44",
								"Z45",
								"Z46",
								"Z47",
								"Z48",
								"Z49",
								"Z50",
								"Z51",
								"Z52",
								"Z53",
								"Z54",
								"Z55",
								"Z56",
								"Z57",
								"Z58",
								"Z59",
								"Z60"
							],
							"default": "WE"
						},
						{
							"type": "string",
							"enum": [
								"AM",
								"AN",
								"BN",
								"BR",
								"CC",
								"CD",
								"EA",
								"EB",
								"EC",
								"ED",
								"EE",
								"EF",
								"FA",
								"HE",
								"HO",
								"ID",
								"IN",
								"KA",
								"RF",
								"SA",
								"WD",
								"WE"
							]
						},
						{
							"type": "string",
							"enum": [
								"S",
								"N"
							]
						}
					],
					"items": {
						"type": "string",
						"enum": [
							"WGS84"
						]
					}
				},
				{
					"type": "array",
					"minItems": 4,
					"maxItems": 5,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"UTM"
							],
							"default": "GD"
						},
						{
							"type": "string",
							"enum": [
								"Z01",
								"Z1",
								"Z02",
								"Z2",
								"Z03",
								"Z3",
								"Z04",
								"Z4",
								"Z05",
								"Z5",
								"Z06",
								"Z6",
								"Z07",
								"Z7",
								"Z08",
								"Z8",
								"Z09",
								"Z9",
								"Z10",
								"Z11",
								"Z12",
								"Z13",
								"Z14",
								"Z15",
								"Z16",
								"Z17",
								"Z18",
								"Z19",
								"Z20",
								"Z21",
								"Z22",
								"Z23",
								"Z24",
								"Z25",
								"Z26",
								"Z27",
								"Z28",
								"Z29",
								"Z30",
								"Z31",
								"Z32",
								"Z33",
								"Z34",
								"Z35",
								"Z36",
								"Z37",
								"Z38",
								"Z39",
								"Z40",
								"Z41",
								"Z42",
								"Z43",
								"Z44",
								"Z45",
								"Z46",
								"Z47",
								"Z48",
								"Z49",
								"Z50",
								"Z51",
								"Z52",
								"Z53",
								"Z54",
								"Z55",
								"Z56",
								"Z57",
								"Z58",
								"Z59",
								"Z60"
							],
							"default": "WE"
						},
						{
							"type": "string",
							"enum": [
								"WGS84"
							]
						},
						{
							"type": "string",
							"enum": [
								"AM",
								"AN",
								"BN",
								"BR",
								"CC",
								"CD",
								"EA",
								"EB",
								"EC",
								"ED",
								"EE",
								"EF",
								"FA",
								"HE",
								"HO",
								"ID",
								"IN",
								"KA",
								"RF",
								"SA",
								"WD",
								"WE"
							]
						}
					],
					"items": {
						"type": "string",
						"enum": [
							"S",
							"N"
						]
					}
				},
				{
					"type": "array",
					"minItems": 3,
					"maxItems": 5,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"UTM"
							],
							"default": "GD"
						},
						{
							"type": "string",
							"enum": [
								"Z01",
								"Z1",
								"Z02",
								"Z2",
								"Z03",
								"Z3",
								"Z04",
								"Z4",
								"Z05",
								"Z5",
								"Z06",
								"Z6",
								"Z07",
								"Z7",
								"Z08",
								"Z8",
								"Z09",
								"Z9",
								"Z10",
								"Z11",
								"Z12",
								"Z13",
								"Z14",
								"Z15",
								"Z16",
								"Z17",
								"Z18",
								"Z19",
								"Z20",
								"Z21",
								"Z22",
								"Z23",
								"Z24",
								"Z25",
								"Z26",
								"Z27",
								"Z28",
								"Z29",
								"Z30",
								"Z31",
								"Z32",
								"Z33",
								"Z34",
								"Z35",
								"Z36",
								"Z37",
								"Z38",
								"Z39",
								"Z40",
								"Z41",
								"Z42",
								"Z43",
								"Z44",
								"Z45",
								"Z46",
								"Z47",
								"Z48",
								"Z49",
								"Z50",
								"Z51",
								"Z52",
								"Z53",
								"Z54",
								"Z55",
								"Z56",
								"Z57",
								"Z58",
								"Z59",
								"Z60"
							],
							"default": "WE"
						},
						{
							"type": "string",
							"enum": [
								"WGS84"
							]
						},
						{
							"type": "string",
							"enum": [
								"S",
								"N"
							]
						}
					],
					"items": {
						"type": "string",
						"enum": [
							"AM",
							"AN",
							"BN",
							"BR",
							"CC",
							"CD",
							"EA",
							"EB",
							"EC",
							"ED",
							"EE",
							"EF",
							"FA",
							"HE",
							"HO",
							"ID",
							"IN",
							"KA",
							"RF",
							"SA",
							"WD",
							"WE"
						]
					}
				},
				{
					"type": "array",
					"minItems": 4,
					"maxItems": 5,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"UTM"
							],
							"default": "GD"
						},
						{
							"type": "string",
							"enum": [
								"Z01",
								"Z1",
								"Z02",
								"Z2",
								"Z03",
								"Z3",
								"Z04",
								"Z4",
								"Z05",
								"Z5",
								"Z06",
								"Z6",
								"Z07",
								"Z7",
								"Z08",
								"Z8",
								"Z09",
								"Z9",
								"Z10",
								"Z11",
								"Z12",
								"Z13",
								"Z14",
								"Z15",
								"Z16",
								"Z17",
								"Z18",
								"Z19",
								"Z20",
								"Z21",
								"Z22",
								"Z23",
								"Z24",
								"Z25",
								"Z26",
								"Z27",
								"Z28",
								"Z29",
								"Z30",
								"Z31",
								"Z32",
								"Z33",
								"Z34",
								"Z35",
								"Z36",
								"Z37",
								"Z38",
								"Z39",
								"Z40",
								"Z41",
								"Z42",
								"Z43",
								"Z44",
								"Z45",
								"Z46",
								"Z47",
								"Z48",
								"Z49",
								"Z50",
								"Z51",
								"Z52",
								"Z53",
								"Z54",
								"Z55",
								"Z56",
								"Z57",
								"Z58",
								"Z59",
								"Z60"
							],
							"default": "WE"
						},
						{
							"type": "string",
							"enum": [
								"S",
								"N"
							]
						},
						{
							"type": "string",
							"enum": [
								"WGS84"
							]
						}
					],
					"items": {
						"type": "string",
						"enum": [
							"AM",
							"AN",
							"BN",
							"BR",
							"CC",
							"CD",
							"EA",
							"EB",
							"EC",
							"ED",
							"EE",
							"EF",
							"FA",
							"HE",
							"HO",
							"ID",
							"IN",
							"KA",
							"RF",
							"SA",
							"WD",
							"WE"
						]
					}
				},
				{
					"type": "array",
					"minItems": 2,
					"maxItems": 5,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"UTM"
							],
							"default": "GD"
						},
						{
							"type": "string",
							"enum": [
								"Z01",
								"Z1",
								"Z02",
								"Z2",
								"Z03",
								"Z3",
								"Z04",
								"Z4",
								"Z05",
								"Z5",
								"Z06",
								"Z6",
								"Z07",
								"Z7",
								"Z08",
								"Z8",
								"Z09",
								"Z9",
								"Z10",
								"Z11",
								"Z12",
								"Z13",
								"Z14",
								"Z15",
								"Z16",
								"Z17",
								"Z18",
								"Z19",
								"Z20",
								"Z21",
								"Z22",
								"Z23",
								"Z24",
								"Z25",
								"Z26",
								"Z27",
								"Z28",
								"Z29",
								"Z30",
								"Z31",
								"Z32",
								"Z33",
								"Z34",
								"Z35",
								"Z36",
								"Z37",
								"Z38",
								"Z39",
								"Z40",
								"Z41",
								"Z42",
								"Z43",
								"Z44",
								"Z45",
								"Z46",
								"Z47",
								"Z48",
								"Z49",
								"Z50",
								"Z51",
								"Z52",
								"Z53",
								"Z54",
								"Z55",
								"Z56",
								"Z57",
								"Z58",
								"Z59",
								"Z60"
							],
							"default": "WE"
						},
						{
							"type": "string",
							"enum": [
								"S",
								"N"
							]
						},
						{
							"type": "string",
							"enum": [
								"AM",
								"AN",
								"BN",
								"BR",
								"CC",
								"CD",
								"EA",
								"EB",
								"EC",
								"ED",
								"EE",
								"EF",
								"FA",
								"HE",
								"HO",
								"ID",
								"IN",
								"KA",
								"RF",
								"SA",
								"WD",
								"WE"
							]
						}
					],
					"items": {
						"type": "string",
						"enum": [
							"WGS84"
						]
					}
				},
				{
					"type": "array",
					"minItems": 1,
					"maxItems": 1,
					"prefixItems": [
						{
							"type": "string",
							"enum": [
								"GC",
								"GCC"
							],
							"default": "GD"
						}
					],
					"items": false
				}
			]
		},
		"SceneGraphStructureStatement" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
		},
		"Anchor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@parameter" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"type":"string"
						}					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Appearance" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-fillProperties" : {
						"$ref":"#/$defs/-FillPropertiesSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-lineProperties" : {
						"$ref":"#/$defs/-LinePropertiesSFNode"
					},
					"-material" : {
						"$ref":"#/$defs/-X3DMaterialNodeSFNode"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-shaders" : {
						"$ref":"#/$defs/-X3DShaderNodeMFNode"
					},
					"-texture" : {
						"$ref":"#/$defs/-X3DTextureNodeSFNode"
					},
					"-textureTransform" : {
						"$ref":"#/$defs/-X3DTextureTransformNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Arc2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@endAngle" : {
						"exclusiveMaximum" : 6.2832,
						"exclusiveMinimum" : -6.2832,
						"default":1.570796,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@radius" : {
						"exclusiveMinimum" : 0,
						"default":1,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@startAngle" : {
						"exclusiveMaximum" : 6.2832,
						"exclusiveMinimum" : -6.2832,
						"default":0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ArcClose2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@closureType" : {
						"enum": [
							"PIE",
							"CHORD"
						],
						"default":"PIE",
						"$comment":"SFString initializeOnly",
						"type":"string"
					},
					"@endAngle" : {
						"exclusiveMaximum" : 6.2832,
						"exclusiveMinimum" : -6.2832,
						"default":1.570796,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@radius" : {
						"exclusiveMinimum" : 0,
						"default":1,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@solid" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@startAngle" : {
						"exclusiveMaximum" : 6.2832,
						"exclusiveMinimum" : -6.2832,
						"default":0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"AudioClip" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@loop" : {
						"default":false,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@pauseTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@pitch" : {
						"exclusiveMinimum" : 0,
						"default":1.0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@resumeTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@startTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@stopTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Background" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@backUrl" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@bottomUrl" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@frontUrl" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@groundAngle" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"maximum" : 1.5708,
						"minimum" : 0,
						"type":"number"
						}					},
					"@groundColor" : {
						"$comment":"MFColor inputOutput",
						"type":"array",
						"$comment":"MFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@leftUrl" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@rightUrl" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@skyAngle" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"maximum" : 3.1416,
						"minimum" : 0,
						"type":"number"
						}					},
					"@skyColor" : {
						"$comment":"MFColor inputOutput",
						"type":"array",
						"$comment":"MFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
							"default":0,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@topUrl" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@transparency" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Billboard" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@axisOfRotation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"BooleanFilter" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"BooleanSequencer" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFBool inputOutput",
						"type":"array",
						"$comment":"MFBool inputOutput",
						"type":"array",
						"items": {
						"type":"boolean"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"BooleanToggle" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@toggle" : {
						"default":false,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"BooleanTrigger" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Box" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@size" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":2,
						"type":"number"
						}					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"CADAssembly" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"CADFace" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"-shape" : {
						"$ref":"#/$defs/-Shape-LOD-TransformSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"CADLayer" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@visible" : {
						"$comment":"MFBool inputOutput",
						"type":"array",
						"$comment":"MFBool inputOutput",
						"type":"array",
						"items": {
						"type":"boolean"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"CADPart" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-CADFaceMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@rotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@scale" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"type":"number"
						}					},
					"@scaleOrientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@translation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Circle2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@radius" : {
						"exclusiveMinimum" : 0,
						"default":1,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Collision" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-proxy" : {
						"$ref":"#/$defs/-X3DChildNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Color" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@color" : {
						"$comment":"MFColor inputOutput",
						"type":"array",
						"$comment":"MFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ColorInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFColor inputOutput",
						"type":"array",
						"$comment":"MFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ColorRGBA" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@color" : {
						"$comment":"MFColorRGBA inputOutput",
						"type":"array",
						"$comment":"MFColorRGBA inputOutput",
						"type":"array",
						"minItems" : 4,
						"items": {
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"component" : {
			"type" : "array",
			"items" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@level" : {
						"maximum" : 5,
						"minimum" : 1,
						"default":1,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@name" : {
						"enum": [
							"Core",
							"CADGeometry",
							"CubeMapTexturing",
							"DIS",
							"EnvironmentalEffects",
							"EnvironmentalSensor",
							"EventUtilities",
							"Geometry2D",
							"Geometry3D",
							"Geospatial",
							"Grouping",
							"H-Anim",
							"Interpolation",
							"KeyDeviceSensor",
							"Lighting",
							"Navigation",
							"Networking",
							"NURBS",
							"PointingDeviceSensor",
							"Rendering",
							"Scripting",
							"Shaders",
							"Shape",
							"Sound",
							"Text",
							"Texturing",
							"Texturing3D",
							"Time"
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"required": [
					"@level",
					"@name"
				],
				"additionalProperties": false
			}
		},
		"ComposedCubeMapTexture" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-back" : {
						"$ref":"#/$defs/-X3DTexture2DNodeSFNode"
					},
					"-bottom" : {
						"$ref":"#/$defs/-X3DTexture2DNodeSFNode"
					},
					"-front" : {
						"$ref":"#/$defs/-X3DTexture2DNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-left" : {
						"$ref":"#/$defs/-X3DTexture2DNodeSFNode"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-right" : {
						"$ref":"#/$defs/-X3DTexture2DNodeSFNode"
					},
					"-top" : {
						"$ref":"#/$defs/-X3DTexture2DNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ComposedShader" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "field": {
                                        "$ref": "#/$defs/field"
                                },
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"field" : {
						"$ref":"#/$defs/field"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@language" : {
						"anyOf" : [ {
						"enum": [
							"Cg",
							"GLSL",
							"HLSL"
						]						},
						{ "type" : "string" }
						],
						"$comment":"SFString initializeOnly",
						"type":"string"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-parts" : {
						"$ref":"#/$defs/-ShaderPartMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ComposedTexture3D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@repeatR" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatS" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatT" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texture" : {
						"$ref":"#/$defs/-X3DTexture2DNodeMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Cone" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@bottom" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@bottomRadius" : {
						"exclusiveMinimum" : 0,
						"default":1,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@height" : {
						"exclusiveMinimum" : 0,
						"default":2,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@side" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"connect" : {
			"type" : "array",
			"items" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@nodeField" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@protoField" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"required": [
					"@nodeField",
					"@protoField"
				],
				"additionalProperties": false
			}
		},
		"Contour2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"-children" : {
						"$ref":"#/$defs/-NurbsCurve2D-ContourPolyline2DMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ContourPolyline2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@controlPoint" : {
						"$comment":"MFVec2d inputOutput",
						"type":"array",
						"$comment":"MFVec2d inputOutput",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Coordinate" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@point" : {
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"CoordinateDouble" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@point" : {
						"$comment":"MFVec3d inputOutput",
						"type":"array",
						"$comment":"MFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"CoordinateInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"CoordinateInterpolator2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Cylinder" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@bottom" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@height" : {
						"exclusiveMinimum" : 0,
						"default":2,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@radius" : {
						"exclusiveMinimum" : 0,
						"default":1,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@side" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@top" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"CylinderSensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@autoOffset" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@axisRotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@diskAngle" : {
						"maximum" : 1.5708,
						"minimum" : 0,
						"default":0.26179167,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@maxAngle" : {
						"exclusiveMaximum" : 6.2832,
						"exclusiveMinimum" : -6.2832,
						"default":-1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@minAngle" : {
						"exclusiveMaximum" : 6.2832,
						"exclusiveMinimum" : -6.2832,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@offset" : {
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"DirectionalLight" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@ambientIntensity" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@color" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@direction" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":-1,
						"type":"number"
						}
						],
						"items": false
					},
					"@global" : {
						"default":false,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@intensity" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@on" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Disk2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@innerRadius" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@outerRadius" : {
						"exclusiveMinimum" : 0,
						"default":1,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@solid" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ElevationGrid" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@creaseAngle" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"@height" : {
						"$comment":"MFFloat initializeOnly",
						"type":"array",
						"$comment":"MFFloat initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@xDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@xSpacing" : {
						"exclusiveMinimum" : 0,
						"default":1.0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@zDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@zSpacing" : {
						"exclusiveMinimum" : 0,
						"default":1.0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"EspduTransform" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@address" : {
						"default":"localhost",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@applicationID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@articulationParameterArray" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@articulationParameterChangeIndicatorArray" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"type":"integer"
						}					},
					"@articulationParameterCount" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@articulationParameterDesignatorArray" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"type":"integer"
						}					},
					"@articulationParameterIdPartAttachedToArray" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"type":"integer"
						}					},
					"@articulationParameterTypeArray" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"type":"integer"
						}					},
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"@collisionType" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@deadReckoning" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@detonationLocation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@detonationRelativeLocation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@detonationResult" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@entityCategory" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@entityCountry" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@entityDomain" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@entityExtra" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@entityID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@entityKind" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@entitySpecific" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@entitySubcategory" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@eventApplicationID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@eventEntityID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@eventNumber" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@eventSiteID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@fired1" : {
						"default":false,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@fired2" : {
						"default":false,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@fireMissionIndex" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@firingRange" : {
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@firingRate" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@forceID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@fuse" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@geoCoords" : {
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@linearAcceleration" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@linearVelocity" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@marking" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@multicastRelayHost" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@multicastRelayPort" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@munitionApplicationID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@munitionEndPoint" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@munitionEntityID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@munitionQuantity" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@munitionSiteID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@munitionStartPoint" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@networkMode" : {
						"enum": [
							"standAlone",
							"networkReader",
							"networkWriter"
						],
						"default":"standAlone",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@port" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@readInterval" : {
						"minimum" : 0,
						"default":0.1,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@rotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@rtpHeaderExpected" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@scale" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"type":"number"
						}					},
					"@scaleOrientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@siteID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@translation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@warhead" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@writeInterval" : {
						"minimum" : 0,
						"default":1.0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"EXPORT" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@AS" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@localDEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"required": [
					"@localDEF"
				],
				"additionalProperties": false
		},
		"ExternProtoDeclare" : {
                                 "type": "object",
                                 "properties": {
                                "field": {
                                        "$ref": "#/$defs/field"
                                },
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@appinfo" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@documentation" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"field" : {
						"$ref":"#/$defs/field"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					}
				},
				"required": [
					"@name",
					"@url"
				],
				"additionalProperties": false
		},
		"Extrusion" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"field" : {
			"type" : "array",
			"items" : {
                                 "type": "object",
                                 "properties": {
					"@accessType" : {
						"enum": [
							"initializeOnly",
							"inputOnly",
							"outputOnly",
							"inputOutput"
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@appinfo" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"-children" : {
						"$ref":"#/$defs/-X3DNodeMFNode"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@documentation" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@type" : {
						"enum": [
							"SFBool",
							"MFBool",
							"SFColor",
							"MFColor",
							"SFColorRGBA",
							"MFColorRGBA",
							"SFDouble",
							"MFDouble",
							"SFFloat",
							"MFFloat",
							"SFImage",
							"MFImage",
							"SFInt32",
							"MFInt32",
							"SFNode",
							"MFNode",
							"SFRotation",
							"MFRotation",
							"SFString",
							"MFString",
							"SFTime",
							"MFTime",
							"SFVec2d",
							"MFVec2d",
							"SFVec2f",
							"MFVec2f",
							"SFVec3d",
							"MFVec3d",
							"SFVec3f",
							"MFVec3f",
							"SFVec4d",
							"MFVec4d",
							"SFVec4f",
							"MFVec4f",
							"SFMatrix3d",
							"MFMatrix3d",
							"SFMatrix3f",
							"MFMatrix3f",
							"SFMatrix4d",
							"MFMatrix4d",
							"SFMatrix4f",
							"MFMatrix4f"
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@value" : {
					}
				},
				"required": [
					"@accessType",
					"@name",
					"@type"
				],
				"additionalProperties": false
			}
		},
		"fieldValue" : {
			"type" : "array",
			"items" : {
                                 "type": "object",
                                 "properties": {
					"-children" : {
						"$ref":"#/$defs/-X3DNodeMFNode"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@value" : {
					}
				},
				"required": [
					"@name"
				],
				"additionalProperties": false
			}
		},
		"FillProperties" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@filled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@hatchColor" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@hatched" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@hatchStyle" : {
						"default":1,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"FloatVertexAttribute" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@numComponents" : {
						"maximum" : 4,
						"minimum" : 1,
						"default":4,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@value" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Fog" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@color" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@fogType" : {
						"enum": [
							"LINEAR",
							"EXPONENTIAL"
						],
						"default":"LINEAR",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@visibilityRange" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"FogCoordinate" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@depth" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"FontStyle" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@family" : {
						"$comment":"MFString initializeOnly",
						"type":"array",
						"$comment":"MFString initializeOnly",
						"type":"array",
						"items": {
						"anyOf" : [ {
							"enum": [
								"SANS",
								"SERIF",
								"TYPEWRITER"
							]
						},
						{ "type" : "string" }
						],
							"default":"SERIF",
						"type":"string"
						}					},
					"@horizontal" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@justify" : {
						"$comment":"MFString initializeOnly",
						"type":"array",
						"$comment":"MFString initializeOnly",
						"type":"array",
						"items": {
							"enum": [
								"MIDDLE",
								"\"MIDDLE\" \"BEGIN\"",
								"\"MIDDLE\" \"END\"",
								"\"MIDDLE\" \"FIRST\"",
								"\"MIDDLE\" \"MIDDLE\"",
								"BEGIN",
								"\"BEGIN\" \"BEGIN\"",
								"\"BEGIN\" \"END\"",
								"\"BEGIN\" \"FIRST\"",
								"\"BEGIN\" \"MIDDLE\"",
								"END",
								"\"END\" \"BEGIN\"",
								"\"END\" \"END\"",
								"\"END\" \"FIRST\"",
								"\"END\" \"MIDDLE\"",
								"FIRST",
								"\"FIRST\" \"BEGIN\"",
								"\"FIRST\" \"END\"",
								"\"FIRST\" \"FIRST\"",
								"\"FIRST\" \"MIDDLE\""
							]
,
							"default":"BEGIN",
						"type":"string"
						}					},
					"@language" : {
						"$comment":"SFString initializeOnly",
						"type":"string"
					},
					"@leftToRight" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@size" : {
						"exclusiveMinimum" : 0,
						"default":1.0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@spacing" : {
						"minimum" : 0,
						"default":1.0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@style" : {
						"enum": [
							"PLAIN",
							"BOLD",
							"ITALIC",
							"BOLDITALIC"
						],
						"default":"PLAIN",
						"$comment":"SFString initializeOnly",
						"type":"string"
					},
					"@topToBottom" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeneratedCubeMapTexture" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@size" : {
						"exclusiveMinimum" : 0,
						"default":128,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@update" : {
						"enum": [
							"NONE",
							"NEXT_FRAME_ONLY",
							"ALWAYS"
						],
						"default":"NONE",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoCoordinate" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-geoOrigin" : {
						"$ref":"#/$defs/-GeoOriginSFNode"
					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@point" : {
						"$comment":"MFVec3d inputOutput",
						"type":"array",
						"$comment":"MFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoElevationGrid" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@creaseAngle" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFDouble initializeOnly",
						"type":"number"
					},
					"@geoGridOrigin" : {
						"$comment":"SFVec3d initializeOnly",
						"type":"array",
						"$comment":"SFVec3d initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-geoOrigin" : {
						"$ref":"#/$defs/-GeoOriginSFNode"
					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"@height" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
							"default":0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@xDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@xSpacing" : {
						"exclusiveMinimum" : 0,
						"default":1.0,
						"$comment":"SFDouble initializeOnly",
						"type":"number"
					},
					"@yScale" : {
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@zDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@zSpacing" : {
						"exclusiveMinimum" : 0,
						"default":1.0,
						"$comment":"SFDouble initializeOnly",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoLocation" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"@geoCoords" : {
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-geoOrigin" : {
						"$ref":"#/$defs/-GeoOriginSFNode"
					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoLOD" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@center" : {
						"$comment":"SFVec3d initializeOnly",
						"type":"array",
						"$comment":"SFVec3d initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@child1Url" : {
						"$comment":"MFString initializeOnly",
						"type":"array",
						"$comment":"MFString initializeOnly",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@child2Url" : {
						"$comment":"MFString initializeOnly",
						"type":"array",
						"$comment":"MFString initializeOnly",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@child3Url" : {
						"$comment":"MFString initializeOnly",
						"type":"array",
						"$comment":"MFString initializeOnly",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@child4Url" : {
						"$comment":"MFString initializeOnly",
						"type":"array",
						"$comment":"MFString initializeOnly",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"-geoOrigin" : {
						"$ref":"#/$defs/-GeoOriginSFNode"
					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@range" : {
						"minimum" : 0,
						"default":10,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"-rootNode" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"@rootUrl" : {
						"$comment":"MFString initializeOnly",
						"type":"array",
						"$comment":"MFString initializeOnly",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoMetadata" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-data" : {
						"$ref":"#/$defs/-X3DNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@summary" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"type":"string"
						}					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoOrigin" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@geoCoords" : {
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@rotateYUp" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoPositionInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-geoOrigin" : {
						"$ref":"#/$defs/-GeoOriginSFNode"
					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFVec3d inputOutput",
						"type":"array",
						"$comment":"MFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoTouchSensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"-geoOrigin" : {
						"$ref":"#/$defs/-GeoOriginSFNode"
					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"GeoViewpoint" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@centerOfRotation" : {
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@fieldOfView" : {
						"exclusiveMaximum" : 3.1416,
						"exclusiveMinimum" : 0,
						"default":0.7854,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"-geoOrigin" : {
						"$ref":"#/$defs/-GeoOriginSFNode"
					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"@headlight" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@jump" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@navType" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"prefixItems": [
						{
								"default":"EXAMINE",
						"type":"string"
						},
						{
								"default":"ANY",
						"type":"string"
						}						],
						"items": {
						"type":"string"
						}					},
					"@orientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@position" : {
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":100000,
						"type":"number"
						}
						],
						"items": false
					},
					"@retainUserOffsets" : {
						"default":false,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@speedFactor" : {
						"minimum" : 0,
						"default":1.0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Group" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"HAnimDisplacer" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@coordIndex" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"type":"integer"
						}					},
					"@displacements" : {
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"anyOf" : [ {
						"enum": [
							"sellion",
							"r_infraorbitale",
							"l_infraorbitale",
							"supramenton",
							"r_tragion",
							"r_gonion",
							"l_tragion",
							"l_gonion",
							"nuchale",
							"r_clavicale",
							"suprasternale",
							"l_clavicale",
							"r_thelion",
							"l_thelion",
							"substernale",
							"r_rib10",
							"r_asis",
							"l_rib10",
							"l_asis",
							"r_iliocristale",
							"r_trochanterion",
							"l_iliocristale",
							"l_trochanterion",
							"cervicale",
							"rib10_midspine",
							"r_psis",
							"l_psis",
							"waist_preferred_post",
							"r_acromion",
							"r_axilla_ant",
							"r_radial_styloid",
							"r_axilla_post",
							"r_olecranon",
							"r_humeral_lateral_epicn",
							"r_humeral_medial_epicn",
							"r_radiale",
							"r_metacarpal_pha2",
							"r_dactylion",
							"r_ulnar_styloid",
							"r_metacarpal_pha5",
							"l_acromion",
							"l_axilla_ant",
							"l_radial_styloid",
							"l_axilla_post",
							"l_olecranon",
							"l_humeral_lateral_epicn",
							"l_humeral_medial_epicn",
							"l_radiale",
							"l_metacarpal_pha2",
							"l_dactylion",
							"l_ulnar_styloid",
							"l_metacarpal_pha5",
							"r_knee_crease",
							"r_femoral_lateral_epicn",
							"r_femoral_medial_epicn",
							"r_metatarsal_pha5",
							"r_lateral_malleolus",
							"r_medial_malleolus",
							"r_sphyrion",
							"r_metatarsal_pha1",
							"r_calcaneous_post",
							"r_digit2",
							"l_knee_crease",
							"l_femoral_lateral_epicn",
							"l_femoral_medial_epicn",
							"l_metatarsal_pha5",
							"l_lateral_malleolus",
							"l_medial_malleolus",
							"l_sphyrion",
							"l_metatarsal_pha1",
							"l_calcaneous_post",
							"l_digit2",
							"crotch",
							"r_neck_base",
							"l_neck_base",
							"navel"
						]						},
						{ "type" : "string" }
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@weight" : {
						"default":0.0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"HAnimHumanoid" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@info" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"type":"string"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-joints" : {
						"$ref":"#/$defs/-HAnimJointMFNode"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@rotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@scale" : {
						"exclusiveMinimum" : 0,
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"exclusiveMinimum" : 0,
						"type":"number"
						}					},
					"@scaleOrientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"-segments" : {
						"$ref":"#/$defs/-HAnimSegmentMFNode"
					},
					"-sites" : {
						"$ref":"#/$defs/-HAnimSiteMFNode"
					},
					"-skeleton" : {
						"$ref":"#/$defs/-HAnimJoint-HAnimSiteMFNode"
					},
					"-skin" : {
						"$ref":"#/$defs/-Group-Transform-Shape-IndexedFaceSetMFNode"
					},
					"-skinCoord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-skinNormal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@translation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@version" : {
						"enum": [
							"1.0",
							"2.0"
						],
						"default":"1.0",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"-viewpoints" : {
						"$ref":"#/$defs/-HAnimSiteMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"HAnimJoint" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-HAnimJoint-HAnimSegmentMFNode"
					},
					"-displacers" : {
						"$ref":"#/$defs/-HAnimDisplacerMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@limitOrientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@llimit" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"anyOf" : [ {
						"enum": [
							"humanoid_root",
							"sacroiliac",
							"l_hip",
							"l_knee",
							"l_ankle",
							"l_subtalar",
							"l_midtarsal",
							"l_metatarsal",
							"r_hip",
							"r_knee",
							"r_ankle",
							"r_subtalar",
							"r_midtarsal",
							"r_metatarsal",
							"vl5",
							"vl4",
							"vl3",
							"vl2",
							"vl1",
							"vt12",
							"vt11",
							"vt10",
							"vt9",
							"vt8",
							"vt7",
							"vt6",
							"vt5",
							"vt4",
							"vt3",
							"vt2",
							"vt1",
							"vc7",
							"vc6",
							"vc5",
							"vc4",
							"vc3",
							"vc2",
							"vc1",
							"skullbase",
							"l_eyelid_joint",
							"r_eyelid_joint",
							"l_eyeball_joint",
							"r_eyeball_joint",
							"l_eyebrow_joint",
							"r_eyebrow_joint",
							"temporomandibular",
							"l_sternoclavicular",
							"l_acromioclavicular",
							"l_shoulder",
							"l_elbow",
							"l_wrist",
							"l_thumb1",
							"l_thumb2",
							"l_thumb3",
							"l_index0",
							"l_index1",
							"l_index2",
							"l_index3",
							"l_middle0",
							"l_middle1",
							"l_middle2",
							"l_middle3",
							"l_ring0",
							"l_ring1",
							"l_ring2",
							"l_ring3",
							"l_pinky0",
							"l_pinky1",
							"l_pinky2",
							"l_pinky3",
							"r_sternoclavicular",
							"r_acromioclavicular",
							"r_shoulder",
							"r_elbow",
							"r_wrist",
							"r_thumb1",
							"r_thumb2",
							"r_thumb3",
							"r_index0",
							"r_index1",
							"r_index2",
							"r_index3",
							"r_middle0",
							"r_middle1",
							"r_middle2",
							"r_middle3",
							"r_ring0",
							"r_ring1",
							"r_ring2",
							"r_ring3",
							"r_pinky0",
							"r_pinky1",
							"r_pinky2",
							"r_pinky3"
						]						},
						{ "type" : "string" }
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@rotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@scale" : {
						"exclusiveMinimum" : 0,
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"exclusiveMinimum" : 0,
						"type":"number"
						}					},
					"@scaleOrientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@skinCoordIndex" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"minimum" : 0,
						"type":"integer"
						}					},
					"@skinCoordWeight" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@stiffness" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
							"default":0,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@translation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@ulimit" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"HAnimSegment" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@centerOfMass" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-displacers" : {
						"$ref":"#/$defs/-HAnimDisplacerMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@mass" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@momentsOfInertia" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
							"default":0,
						"minimum" : 0,
						"type":"number"
						}					},
					"@name" : {
						"anyOf" : [ {
						"enum": [
							"sacrum",
							"pelvis",
							"l_thigh",
							"l_calf",
							"l_hindfoot",
							"l_midproximal",
							"l_middistal",
							"l_forefoot",
							"r_thigh",
							"r_calf",
							"r_hindfoot",
							"r_midproximal",
							"r_middistal",
							"r_forefoot",
							"l5",
							"l4",
							"l3",
							"l2",
							"l1",
							"t12",
							"t11",
							"t10",
							"t9",
							"t8",
							"t7",
							"t6",
							"t5",
							"t4",
							"t3",
							"t2",
							"t1",
							"c7",
							"c6",
							"c5",
							"c4",
							"c3",
							"c2",
							"c1",
							"skull",
							"l_eyelid",
							"r_eyelid",
							"l_eyeball",
							"r_eyeball",
							"l_eyebrow",
							"r_eyebrow",
							"jaw",
							"l_clavicle",
							"l_scapula",
							"l_upperarm",
							"l_forearm",
							"l_hand",
							"l_thumb_metacarpal",
							"l_thumb_proximal",
							"l_thumb_distal",
							"l_index_metacarpal",
							"l_index_proximal",
							"l_index_middle",
							"l_index_distal",
							"l_middle_metacarpal",
							"l_middle_proximal",
							"l_middle_middle",
							"l_middle_distal",
							"l_ring_metacarpal",
							"l_ring_proximal",
							"l_ring_middle",
							"l_ring_distal",
							"l_pinky_metacarpal",
							"l_pinky_proximal",
							"l_pinky_middle",
							"l_pinky_distal",
							"r_clavicle",
							"r_scapula",
							"r_upperarm",
							"r_forearm",
							"r_hand",
							"r_thumb_metacarpal",
							"r_thumb_proximal",
							"r_thumb_distal",
							"r_index_metacarpal",
							"r_index_proximal",
							"r_index_middle",
							"r_index_distal",
							"r_middle_metacarpal",
							"r_middle_proximal",
							"r_middle_middle",
							"r_middle_distal",
							"r_ring_metacarpal",
							"r_ring_proximal",
							"r_ring_middle",
							"r_ring_distal",
							"r_pinky_metacarpal",
							"r_pinky_proximal",
							"r_pinky_middle",
							"r_pinky_distal"
						]						},
						{ "type" : "string" }
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"HAnimSite" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"anyOf" : [ {
						"enum": [
							"sellion",
							"r_infraorbitale",
							"l_infraorbitale",
							"supramenton",
							"r_tragion",
							"r_gonion",
							"l_tragion",
							"l_gonion",
							"nuchale",
							"r_clavicale",
							"suprasternale",
							"l_clavicale",
							"r_thelion",
							"l_thelion",
							"substernale",
							"r_rib10",
							"r_asis",
							"l_rib10",
							"l_asis",
							"r_iliocristale",
							"r_trochanterion",
							"l_iliocristale",
							"l_trochanterion",
							"cervicale",
							"rib10_midspine",
							"r_psis",
							"l_psis",
							"waist_preferred_post",
							"r_acromion",
							"r_axilla_ant",
							"r_radial_styloid",
							"r_axilla_post",
							"r_olecranon",
							"r_humeral_lateral_epicn",
							"r_humeral_medial_epicn",
							"r_radiale",
							"r_metacarpal_pha2",
							"r_dactylion",
							"r_ulnar_styloid",
							"r_metacarpal_pha5",
							"l_acromion",
							"l_axilla_ant",
							"l_radial_styloid",
							"l_axilla_post",
							"l_olecranon",
							"l_humeral_lateral_epicn",
							"l_humeral_medial_epicn",
							"l_radiale",
							"l_metacarpal_pha2",
							"l_dactylion",
							"l_ulnar_styloid",
							"l_metacarpal_pha5",
							"r_knee_crease",
							"r_femoral_lateral_epicn",
							"r_femoral_medial_epicn",
							"r_metatarsal_pha5",
							"r_lateral_malleolus",
							"r_medial_malleolus",
							"r_sphyrion",
							"r_metatarsal_pha1",
							"r_calcaneous_post",
							"r_digit2",
							"l_knee_crease",
							"l_femoral_lateral_epicn",
							"l_femoral_medial_epicn",
							"l_metatarsal_pha5",
							"l_lateral_malleolus",
							"l_medial_malleolus",
							"l_sphyrion",
							"l_metatarsal_pha1",
							"l_calcaneous_post",
							"l_digit2",
							"crotch",
							"r_neck_base",
							"l_neck_base",
							"navel"
						]						},
						{ "type" : "string" }
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@rotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@scale" : {
						"exclusiveMinimum" : 0,
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"exclusiveMinimum" : 0,
						"type":"number"
						}					},
					"@scaleOrientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@translation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"head" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"component" : {
						"$ref":"#/$defs/component"
					},
					"meta" : {
						"$ref":"#/$defs/meta"
					}
				},
				"additionalProperties": false
		},
		"ImageCubeMapTexture" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ImageTexture" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@repeatS" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatT" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ImageTexture3D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@repeatR" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatS" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatT" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IMPORT" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@AS" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@importedDEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@inlineDEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"required": [
					"@importedDEF",
					"@inlineDEF"
				],
				"additionalProperties": false
		},
		"IndexedFaceSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorIndex" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : -1,
						"type":"integer"
						}					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@convex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"@coordIndex" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : -1,
						"type":"integer"
						}					},
					"@creaseAngle" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalIndex" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : -1,
						"type":"integer"
						}					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@texCoordIndex" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : -1,
						"type":"integer"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IndexedLineSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorIndex" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : -1,
						"type":"integer"
						}					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"@coordIndex" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : -1,
						"type":"integer"
						}					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IndexedQuadSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"@index" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : 0,
						"type":"integer"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IndexedTriangleFanSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"@index" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : -1,
						"type":"integer"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IndexedTriangleSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"@index" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : 0,
						"type":"integer"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IndexedTriangleStripSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"@index" : {
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"$comment":"MFInt32 initializeOnly",
						"type":"array",
						"items": {
						"minimum" : -1,
						"type":"integer"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Inline" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@load" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IntegerSequencer" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"type":"integer"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IntegerTrigger" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@integerKey" : {
						"default":-1,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"IS" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"connect" : {
						"$ref":"#/$defs/connect"
					}
				},
				"additionalProperties": false
		},
		"KeySensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"LineProperties" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@applied" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@linetype" : {
						"minimum" : 1,
						"default":1,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@linewidthScaleFactor" : {
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"LineSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@vertexCount" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"minimum" : 2,
						"type":"integer"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"LoadSensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@timeOut" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"-watchList" : {
						"$ref":"#/$defs/-X3DUrlObjectMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"LocalFog" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@color" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@fogType" : {
						"enum": [
							"LINEAR",
							"EXPONENTIAL"
						],
						"default":"LINEAR",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@visibilityRange" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"LOD" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@center" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"@forceTransitions" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@range" : {
						"$comment":"MFFloat initializeOnly",
						"type":"array",
						"$comment":"MFFloat initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Material" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@ambientIntensity" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0.2,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@diffuseColor" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0.8,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@emissiveColor" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@shininess" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0.2,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@specularColor" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@transparency" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Matrix3VertexAttribute" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@value" : {
						"$comment":"MFMatrix3f inputOutput",
						"type":"array",
						"$comment":"MFMatrix3f inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Matrix4VertexAttribute" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@value" : {
						"$comment":"MFMatrix4f inputOutput",
						"type":"array",
						"$comment":"MFMatrix4f inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"meta" : {
			"type" : "array",
			"items" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@content" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@dir" : {
						"enum": [
							"rtl",
							"ltr"
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@http-equiv" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@lang" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@name" : {
						"anyOf" : [ {
						"enum": [
							"accessRights",
							"author",
							"contributor",
							"created",
							"creator",
							"description",
							"disclaimer",
							"drawing",
							"error",
							"generator",
							"hint",
							"identifier",
							"Image",
							"info",
							"information",
							"isVersionOf",
							"keywords",
							"license",
							"mediator",
							"modified",
							"movie",
							"MovingImage",
							"original",
							"photo",
							"photograph",
							"publisher",
							"reference",
							"requires",
							"rights",
							"robots",
							"Sound",
							"source",
							"specificationSection",
							"specificationUrl",
							"subject",
							"Text",
							"title",
							"TODO",
							"translator",
							"translated",
							"version",
							"warning"
						]						},
						{ "type" : "string" }
						],
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@scheme" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"required": [
					"@content",
					"@name"
				],
				"additionalProperties": false
			}
		},
		"MetadataDouble" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@reference" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@value" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"MetadataFloat" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@reference" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@value" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"MetadataInteger" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@reference" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@value" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"type":"integer"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"MetadataSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@reference" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"-value" : {
						"$ref":"#/$defs/-X3DMetadataObjectMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"MetadataString" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@reference" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@value" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"MovieTexture" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@loop" : {
						"default":false,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@pauseTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@pitch" : {
						"exclusiveMinimum" : 0,
						"default":1.0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@repeatS" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatT" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@resumeTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@speed" : {
						"default":1.0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@startTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@stopTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"MultiTexture" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@alpha" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@color" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@function" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"anyOf" : [ {
							"enum": [
								"COMPLEMENT",
								"ALPHAREPLICATE",
								""
							]
						},
						{ "type" : "string" }
						],
						"type":"string"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@mode" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"anyOf" : [ {
							"enum": [
								"ADD",
								"ADDSIGNED",
								"ADDSIGNED2X",
								"ADDSMOOTH",
								"BLENDCURRENTALPHA",
								"BLENDDIFFUSEALPHA",
								"BLENDFACTORALPHA",
								"BLENDTEXTUREALPHA",
								"DOTPRODUCT3",
								"MODULATE",
								"MODULATE2X",
								"MODULATE4X",
								"MODULATEALPHA_ADDCOLOR",
								"MODULATEINVALPHA_ADDCOLOR",
								"MODULATEINVCOLOR_ADDALPHA",
								"OFF",
								"REPLACE",
								"SELECTARG1",
								"SELECTARG2",
								"SUBTRACT"
							]
						},
						{ "type" : "string" }
						],
						"type":"string"
						}					},
					"@source" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"anyOf" : [ {
							"enum": [
								"DIFFUSE",
								"FACTOR",
								"SPECULAR",
								""
							]
						},
						{ "type" : "string" }
						],
						"type":"string"
						}					},
					"-texture" : {
						"$ref":"#/$defs/-X3DTextureNodeMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"MultiTextureCoordinate" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"MultiTextureTransform" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-textureTransform" : {
						"$ref":"#/$defs/-X3DTextureTransformNodeMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NavigationInfo" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@avatarSize" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"prefixItems": [
						{
							"default":0.25,
						"minimum" : 0,
						"type":"number"
						}
,
						{
							"default":1.6,
						"minimum" : 0,
						"type":"number"
						}
,
						{
							"default":0.75,
						"minimum" : 0,
						"type":"number"
						}
						],
						"items": {
						"minimum" : 0,
						"type":"number"
						}					},
					"@headlight" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@speed" : {
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@transitionTime" : {
						"minimum" : 0,
						"default":1.0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@transitionType" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"anyOf" : [ {
							"enum": [
								"TELEPORT",
								"LINEAR",
								"ANIMATE"
							]
						},
						{ "type" : "string" }
						],
							"default":"LINEAR",
						"type":"string"
						}					},
					"@type" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"prefixItems": [
						{
							"enum": [
							"ANY",
								"WALK",
								"EXAMINE",
								"FLY",
								"LOOKAT",
								"NONE",
								"EXPLORE"
							],
								"default":"EXAMINE",
						"type":"string"
						},
						{
							"enum": [
							"ANY",
								"WALK",
								"EXAMINE",
								"FLY",
								"LOOKAT",
								"NONE",
								"EXPLORE"
							],
								"default":"ANY",
						"type":"string"
						}						],
						"items": {
						"type":"string"
						}					},
					"@visibilityLimit" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Normal" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@vector" : {
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"maximum" : 1,
						"minimum" : -1,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NormalInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsCurve" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@closed" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-controlPoint" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@knot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@order" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@tessellation" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@weight" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"exclusiveMinimum" : 0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsCurve2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@closed" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@controlPoint" : {
						"$comment":"MFVec2d inputOutput",
						"type":"array",
						"$comment":"MFVec2d inputOutput",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@knot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@order" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@tessellation" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@weight" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"exclusiveMinimum" : 0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsOrientationInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-controlPoint" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@knot" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@order" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@weight" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsPatchSurface" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-controlPoint" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNode-NurbsTextureCoordinateSFNode"
					},
					"@uClosed" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@uDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@uKnot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@uOrder" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@uTessellation" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@vClosed" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@vDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@vKnot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@vOrder" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@vTessellation" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@weight" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"exclusiveMinimum" : 0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsPositionInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-controlPoint" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@knot" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@order" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@weight" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-geometry" : {
						"$ref":"#/$defs/-X3DNurbsSurfaceGeometryNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@tessellationScale" : {
						"exclusiveMinimum" : 0,
						"default":1.0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsSurfaceInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-controlPoint" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@uDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@uKnot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@uOrder" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@vDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@vKnot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@vOrder" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@weight" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsSweptSurface" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-crossSectionCurve" : {
						"$ref":"#/$defs/-X3DNurbsControlCurveNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-trajectoryCurve" : {
						"$ref":"#/$defs/-NurbsCurveSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsSwungSurface" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-profileCurve" : {
						"$ref":"#/$defs/-X3DNurbsControlCurveNodeSFNode"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-trajectoryCurve" : {
						"$ref":"#/$defs/-X3DNurbsControlCurveNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsTextureCoordinate" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@controlPoint" : {
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@uDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@uKnot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@uOrder" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@vDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@vKnot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@vOrder" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@weight" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"exclusiveMinimum" : 0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"NurbsTrimmedSurface" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-controlPoint" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNode-NurbsTextureCoordinateSFNode"
					},
					"-trimmingContour" : {
						"$ref":"#/$defs/-Contour2DMFNode"
					},
					"@uClosed" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@uDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@uKnot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@uOrder" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@uTessellation" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@vClosed" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@vDimension" : {
						"minimum" : 0,
						"default":0,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@vKnot" : {
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"$comment":"MFDouble initializeOnly",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@vOrder" : {
						"minimum" : 2,
						"default":3,
						"$comment":"SFInt32 initializeOnly",
						"type":"integer"
					},
					"@vTessellation" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@weight" : {
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"$comment":"MFDouble inputOutput",
						"type":"array",
						"items": {
						"exclusiveMinimum" : 0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"OrientationInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFRotation inputOutput",
						"type":"array",
						"$comment":"MFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"PackagedShader" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "field": {
                                        "$ref": "#/$defs/field"
                                },
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"field" : {
						"$ref":"#/$defs/field"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@language" : {
						"anyOf" : [ {
						"enum": [
							"Cg",
							"GLSL",
							"HLSL"
						]						},
						{ "type" : "string" }
						],
						"$comment":"SFString initializeOnly",
						"type":"string"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"PixelTexture" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@image" : {
						"$comment":"SFImage inputOutput",
						"type":"array",
						"$comment":"SFImage inputOutput",
						"type":"array",
						"items": {
							"default":0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@repeatS" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatT" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"PixelTexture3D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@image" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
							"default":0,
						"type":"integer"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@repeatR" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatS" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@repeatT" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"PlaneSensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@autoOffset" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@axisRotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@maxPosition" : {
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"maxItems" : 2,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@minPosition" : {
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"maxItems" : 2,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@offset" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"PointLight" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@ambientIntensity" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@attenuation" : {
						"minimum" : 0,
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"prefixItems": [
						{
							"default":1,
						"minimum" : 0,
						"type":"number"
						}
,
						{
							"default":0,
						"minimum" : 0,
						"type":"number"
						}
,
						{
							"default":0,
						"minimum" : 0,
						"type":"number"
						}
						],
						"items": false
					},
					"@color" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@global" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@intensity" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@location" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@on" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@radius" : {
						"minimum" : 0,
						"default":100,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"PointSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Polyline2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@lineSegments" : {
						"$comment":"MFVec2f initializeOnly",
						"type":"array",
						"$comment":"MFVec2f initializeOnly",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Polypoint2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@point" : {
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"PositionInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"PositionInterpolator2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ProgramShader" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@language" : {
						"anyOf" : [ {
						"enum": [
							"Cg",
							"GLSL",
							"HLSL"
						]						},
						{ "type" : "string" }
						],
						"$comment":"SFString initializeOnly",
						"type":"string"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-programs" : {
						"$ref":"#/$defs/-ShaderProgramMFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ProtoBody" : {
                                 "type": "object",
                                 "properties": {
					"-children" : {
						"$ref":"#/$defs/-X3DNodeMFNode"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
		},
		"ProtoDeclare" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@appinfo" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@documentation" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"ProtoBody" : {
						"$ref":"#/$defs/ProtoBody"
					},
					"ProtoInterface" : {
						"$ref":"#/$defs/ProtoInterface"
					}
				},
				"required": [
					"@name"
				],
				"additionalProperties": false
		},
		"ProtoInstance" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@name": {
                              "$comment": "SFString inputOutput",
                              "type": "string"
                           },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
				"-children": {
					"type": "array",
					"minItems": 1,
					"items": {
						"type": "object",
						"properties": {
							"#comment": {
								"type": "string"
							}
						},
						"additionalProperties": false
					}
				},
					"fieldValue" : {
						"$ref":"#/$defs/fieldValue"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@name" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ProtoInterface" : {
                                 "type": "object",
                                 "properties": {
                                "field": {
                                        "$ref": "#/$defs/field"
                                },
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"field" : {
						"$ref":"#/$defs/field"
					}
				},
				"additionalProperties": false
		},
		"ProximitySensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@size" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"QuadSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ReceiverPdu" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@address" : {
						"default":"localhost",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@applicationID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@entityID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@geoCoords" : {
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@multicastRelayHost" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@multicastRelayPort" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@networkMode" : {
						"enum": [
							"standAlone",
							"networkReader",
							"networkWriter"
						],
						"default":"standAlone",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@port" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@radioID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@readInterval" : {
						"minimum" : 0,
						"default":0.1,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@receivedPower" : {
						"default":0.0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@receiverState" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@rtpHeaderExpected" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@siteID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@transmitterApplicationID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@transmitterEntityID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@transmitterRadioID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@transmitterSiteID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@whichGeometry" : {
						"default":1,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@writeInterval" : {
						"minimum" : 0,
						"default":1.0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Rectangle2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@size" : {
						"$comment":"SFVec2f initializeOnly",
						"type":"array",
						"$comment":"SFVec2f initializeOnly",
						"type":"array",
						"minItems" : 2,
						"maxItems" : 2,
						"items": {
							"default":2,
						"type":"number"
						}					},
					"@solid" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ROUTE" : {
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@fromField" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@fromNode" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@toField" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@toNode" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"required": [
					"@fromField",
					"@fromNode",
					"@toField",
					"@toNode"
				],
				"additionalProperties": false
		},
		"ScalarInterpolator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@key" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@keyValue" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Scene" : {
                                 "type": "object",
                                 "properties": {
					"-children" : {
						"$ref":"#/$defs/-X3DChildNode-X3DMetadataObjectMFNode"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
		},
		"Script" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "#sourceCode": {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                                "type": "string"
                                        }
                                },
                                "field": {
                                        "$ref": "#/$defs/field"
                                },
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@directOutput" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"field" : {
						"$ref":"#/$defs/field"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@mustEvaluate" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ShaderPart" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "#sourceCode": {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                                "type": "string"
                                        }
                                },
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@type" : {
						"anyOf" : [ {
						"enum": [
							"VERTEX",
							"FRAGMENT"
						]						},
						{ "type" : "string" }
						],
						"default":"VERTEX",
						"$comment":"SFString initializeOnly",
						"type":"string"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"ShaderProgram" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "#sourceCode": {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                                "type": "string"
                                        }
                                },
                                "field": {
                                        "$ref": "#/$defs/field"
                                },
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"field" : {
						"$ref":"#/$defs/field"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@type" : {
						"anyOf" : [ {
						"enum": [
							"VERTEX",
							"FRAGMENT"
						]						},
						{ "type" : "string" }
						],
						"default":"VERTEX",
						"$comment":"SFString initializeOnly",
						"type":"string"
					},
					"@url" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"minItems" : 1,
						"items": {
						"format":"iri-reference",
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Shape" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-appearance" : {
						"$ref":"#/$defs/-X3DAppearanceNodeSFNode"
					},
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-geometry" : {
						"$ref":"#/$defs/-X3DGeometryNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"SignalPdu" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@address" : {
						"default":"localhost",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@applicationID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@data" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"type":"integer"
						}					},
					"@dataLength" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@encodingScheme" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@entityID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@geoCoords" : {
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@multicastRelayHost" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@multicastRelayPort" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@networkMode" : {
						"enum": [
							"standAlone",
							"networkReader",
							"networkWriter"
						],
						"default":"standAlone",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@port" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@radioID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@readInterval" : {
						"minimum" : 0,
						"default":0.1,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@rtpHeaderExpected" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@sampleRate" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@samples" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@siteID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@tdlType" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@whichGeometry" : {
						"default":1,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@writeInterval" : {
						"minimum" : 0,
						"default":1.0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Sound" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@direction" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
						],
						"items": false
					},
					"@intensity" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@location" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@maxBack" : {
						"minimum" : 0,
						"default":10,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@maxFront" : {
						"minimum" : 0,
						"default":10,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@minBack" : {
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@minFront" : {
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@priority" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"-source" : {
						"$ref":"#/$defs/-X3DSoundSourceNodeSFNode"
					},
					"@spatialize" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Sphere" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@radius" : {
						"exclusiveMinimum" : 0,
						"default":1,
						"$comment":"SFFloat initializeOnly",
						"type":"number"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"SphereSensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@autoOffset" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@offset" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"SpotLight" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@ambientIntensity" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@attenuation" : {
						"minimum" : 0,
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"prefixItems": [
						{
							"default":1,
						"minimum" : 0,
						"type":"number"
						}
,
						{
							"default":0,
						"minimum" : 0,
						"type":"number"
						}
,
						{
							"default":0,
						"minimum" : 0,
						"type":"number"
						}
						],
						"items": false
					},
					"@beamWidth" : {
						"maximum" : 1.570796,
						"exclusiveMinimum" : 0,
						"default":0.7854,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@color" : {
						"maximum" : 1,
						"minimum" : 0,
						"$comment":"SFColor inputOutput",
						"type":"array",
						"$comment":"SFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"@cutOffAngle" : {
						"maximum" : 1.570796,
						"exclusiveMinimum" : 0,
						"default":1.570796,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@direction" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":-1,
						"type":"number"
						}
						],
						"items": false
					},
					"@global" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@intensity" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":1,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@location" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@on" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@radius" : {
						"minimum" : 0,
						"default":100,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"StaticGroup" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"StringSensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@deletionAllowed" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Switch" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@whichChoice" : {
						"minimum" : -1,
						"default":-1,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Text" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-fontStyle" : {
						"$ref":"#/$defs/-X3DFontStyleNodeSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@length" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"minimum" : 0,
						"type":"number"
						}					},
					"@maxExtent" : {
						"minimum" : 0,
						"default":0.0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@solid" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@string" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"type":"string"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TextureBackground" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-backTexture" : {
						"$ref":"#/$defs/-X3DTexture2DNode-MultiTextureSFNode"
					},
					"-bottomTexture" : {
						"$ref":"#/$defs/-X3DTexture2DNode-MultiTextureSFNode"
					},
					"-frontTexture" : {
						"$ref":"#/$defs/-X3DTexture2DNode-MultiTextureSFNode"
					},
					"@groundAngle" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"maximum" : 1.5708,
						"minimum" : 0,
						"type":"number"
						}					},
					"@groundColor" : {
						"$comment":"MFColor inputOutput",
						"type":"array",
						"$comment":"MFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-leftTexture" : {
						"$ref":"#/$defs/-X3DTexture2DNode-MultiTextureSFNode"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-rightTexture" : {
						"$ref":"#/$defs/-X3DTexture2DNode-MultiTextureSFNode"
					},
					"@skyAngle" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"maximum" : 3.1416,
						"minimum" : 0,
						"type":"number"
						}					},
					"@skyColor" : {
						"$comment":"MFColor inputOutput",
						"type":"array",
						"$comment":"MFColor inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
							"default":0,
						"maximum" : 1,
						"minimum" : 0,
						"type":"number"
						}					},
					"-topTexture" : {
						"$ref":"#/$defs/-X3DTexture2DNode-MultiTextureSFNode"
					},
					"@transparency" : {
						"maximum" : 1,
						"minimum" : 0,
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TextureCoordinate" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@point" : {
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TextureCoordinate3D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@point" : {
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"$comment":"MFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TextureCoordinate4D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@point" : {
						"$comment":"MFVec4f inputOutput",
						"type":"array",
						"$comment":"MFVec4f inputOutput",
						"type":"array",
						"minItems" : 4,
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TextureCoordinateGenerator" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@mode" : {
						"enum": [
							"SPHERE",
							"CAMERASPACENORMAL",
							"CAMERASPACEPOSITION",
							"CAMERASPACEREFLECTIONVECTOR",
							"SPHERE-LOCAL",
							"COORD",
							"COORD-EYE",
							"NOISE",
							"NOISE-EYE",
							"SPHERE-REFLECT",
							"SPHERE-REFLECT-LOCAL"
						],
						"default":"SPHERE",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@parameter" : {
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"$comment":"MFFloat inputOutput",
						"type":"array",
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TextureTransform" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@center" : {
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"maxItems" : 2,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@rotation" : {
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@scale" : {
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"maxItems" : 2,
						"items": {
							"default":1,
						"type":"number"
						}					},
					"@translation" : {
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"$comment":"SFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"maxItems" : 2,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TextureTransform3D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@rotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@scale" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"type":"number"
						}					},
					"@translation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TextureTransformMatrix3D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@matrix" : {
						"$comment":"SFMatrix4f inputOutput",
						"type":"array",
						"$comment":"SFMatrix4f inputOutput",
						"type":"array",
						"prefixItems": [
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
						],
						"items": false
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TimeSensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@cycleInterval" : {
						"minimum" : 0,
						"default":1.0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@loop" : {
						"default":false,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@pauseTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@resumeTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@startTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@stopTime" : {
						"default":0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TimeTrigger" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TouchSensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Transform" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"-children" : {
						"$ref":"#/$defs/-X3DChildNodeMFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@rotation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@scale" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":1,
						"type":"number"
						}					},
					"@scaleOrientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@translation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TransmitterPdu" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@address" : {
						"default":"localhost",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@antennaLocation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@antennaPatternLength" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@antennaPatternType" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@applicationID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@bboxCenter" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@bboxSize" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":-1,
						"type":"number"
						}					},
					"@cryptoKeyID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@cryptoSystem" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"@entityID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@frequency" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@geoCoords" : {
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"$comment":"SFVec3d inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
            "@geoSystem": {
		"$ref": "#/$defs/@geoSystem"
            },
					"@inputSource" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@lengthOfModulationParameters" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@modulationTypeDetail" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@modulationTypeMajor" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@modulationTypeSpreadSpectrum" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@modulationTypeSystem" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@multicastRelayHost" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@multicastRelayPort" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@networkMode" : {
						"enum": [
							"standAlone",
							"networkReader",
							"networkWriter"
						],
						"default":"standAlone",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@port" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@power" : {
						"default":0.0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@radioEntityTypeCategory" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@radioEntityTypeCountry" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@radioEntityTypeDomain" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@radioEntityTypeKind" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@radioEntityTypeNomenclature" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@radioEntityTypeNomenclatureVersion" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@radioID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@readInterval" : {
						"minimum" : 0,
						"default":0.1,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@relativeAntennaLocation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@rtpHeaderExpected" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@siteID" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@transmitFrequencyBandwidth" : {
						"default":0,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"@transmitState" : {
						"default":0,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@whichGeometry" : {
						"default":1,
						"$comment":"SFInt32 inputOutput",
						"type":"integer"
					},
					"@writeInterval" : {
						"minimum" : 0,
						"default":1.0,
						"$comment":"SFTime inputOutput",
						"type":"number"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TriangleFanSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"@fanCount" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"minimum" : 3,
						"type":"integer"
						}					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TriangleSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TriangleSet2D" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@solid" : {
						"default":false,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@vertices" : {
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"$comment":"MFVec2f inputOutput",
						"type":"array",
						"minItems" : 2,
						"items": {
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"TriangleStripSet" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"-attrib" : {
						"$ref":"#/$defs/-X3DVertexAttributeNodeMFNode"
					},
					"@ccw" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-color" : {
						"$ref":"#/$defs/-X3DColorNodeSFNode"
					},
					"@colorPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"-coord" : {
						"$ref":"#/$defs/-X3DCoordinateNodeSFNode"
					},
					"-fogCoord" : {
						"$ref":"#/$defs/-FogCoordinateSFNode"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"-normal" : {
						"$ref":"#/$defs/-X3DNormalNodeSFNode"
					},
					"@normalPerVertex" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@solid" : {
						"default":true,
						"$comment":"SFBool initializeOnly",
						"type":"boolean"
					},
					"@stripCount" : {
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"$comment":"MFInt32 inputOutput",
						"type":"array",
						"items": {
						"minimum" : 3,
						"type":"integer"
						}					},
					"-texCoord" : {
						"$ref":"#/$defs/-X3DTextureCoordinateNodeSFNode"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"Viewpoint" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@centerOfRotation" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@description" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@fieldOfView" : {
						"exclusiveMaximum" : 3.1416,
						"exclusiveMinimum" : 0,
						"default":0.7854,
						"$comment":"SFFloat inputOutput",
						"type":"number"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"@jump" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@orientation" : {
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"$comment":"SFRotation inputOutput",
						"type":"array",
						"minItems" : 4,
						"maxItems" : 4,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":1,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
						],
						"items": false
					},
					"@position" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"prefixItems": [
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":0,
						"type":"number"
						}
,
						{
							"default":10,
						"type":"number"
						}
						],
						"items": false
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"VisibilitySensor" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@center" : {
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"$comment":"SFVec3f inputOutput",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@enabled" : {
						"default":true,
						"$comment":"SFBool inputOutput",
						"type":"boolean"
					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@size" : {
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"$comment":"SFVec3f initializeOnly",
						"type":"array",
						"minItems" : 3,
						"maxItems" : 3,
						"items": {
							"default":0,
						"type":"number"
						}					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"WorldInfo" : {
			"type": "object",
			"oneOf": [
				{
					"type": "object",
					"properties": {
						"@class": {
                            "$comment": "SFString inputOutput",
                            "type": "string"
                        },
                           "@USE": {
                              "$comment": "SFString inputOutput",
                               "type": "string"
                            },
                            "-children": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                            "type": "object",
                                            "properties": {
                                                    "#comment": { "type": "string", "$comment": "#comment statements are the only allowed in -children node when using a USE field" }
                                            },
                                            "additionalProperties": false
                                    }
                            }
                    },
                    "required": [ "@USE" ],
					"additionalProperties": false
				},
				{
                                 "type": "object",
                                 "properties": {
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@info" : {
						"$comment":"MFString inputOutput",
						"type":"array",
						"$comment":"MFString inputOutput",
						"type":"array",
						"items": {
						"type":"string"
						}					},
					"IS" : {
						"$ref":"#/$defs/IS"
					},
					"-metadata" : {
						"$ref":"#/$defs/-X3DMetadataObjectSFNode"
					},
					"@title" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@DEF" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"additionalProperties": false
			}
		]
		},
		"X3D" : {
                                 "type": "object",
                                 "properties": {
                                "@xsd:noNamespaceSchemaLocation": {
                                        "type": "string",
                                        "format": "iri"
                                },
                                "JSON schema": {
                                        "type": "string"
                                },
                                "encoding": {
                                        "type": "string",
                                        "enum": [
                                                "UTF-8",
                                                "UTF-16",
                                                "UTF-32"
                                        ]
                                },
                                "-children": {
                                        "$ref": "#/$defs/-childStatements"
                                },
					"@class" : {
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"head" : {
						"$ref":"#/$defs/head"
					},
					"@profile" : {
						"enum": [
							"Core",
							"Interchange",
							"CADInterchange",
							"Interactive",
							"Immersive",
							"MPEG4Interactive",
							"Full"
						],
						"default":"Immersive",
						"$comment":"SFString inputOutput",
						"type":"string"
					},
					"Scene" : {
						"$ref":"#/$defs/Scene"
					},
					"@version" : {
						"enum": [
							"3.0",
							"3.1"
						],
						"default":"3.3",
						"$comment":"SFString inputOutput",
						"type":"string"
					}
				},
				"required": [
					"@profile",
					"Scene",
					"encoding",
					"@version"
				],
				"additionalProperties": false
		},
					"-X3DChildNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"Background" : {
									"$ref":"#/$defs/Background"
								},
								"TextureBackground" : {
									"$ref":"#/$defs/TextureBackground"
								},
								"Fog" : {
									"$ref":"#/$defs/Fog"
								},
								"GeoViewpoint" : {
									"$ref":"#/$defs/GeoViewpoint"
								},
								"NavigationInfo" : {
									"$ref":"#/$defs/NavigationInfo"
								},
								"Viewpoint" : {
									"$ref":"#/$defs/Viewpoint"
								},
								"Anchor" : {
									"$ref":"#/$defs/Anchor"
								},
								"Billboard" : {
									"$ref":"#/$defs/Billboard"
								},
								"CADAssembly" : {
									"$ref":"#/$defs/CADAssembly"
								},
								"CADLayer" : {
									"$ref":"#/$defs/CADLayer"
								},
								"CADPart" : {
									"$ref":"#/$defs/CADPart"
								},
								"Collision" : {
									"$ref":"#/$defs/Collision"
								},
								"EspduTransform" : {
									"$ref":"#/$defs/EspduTransform"
								},
								"GeoLocation" : {
									"$ref":"#/$defs/GeoLocation"
								},
								"Group" : {
									"$ref":"#/$defs/Group"
								},
								"HAnimSegment" : {
									"$ref":"#/$defs/HAnimSegment"
								},
								"HAnimSite" : {
									"$ref":"#/$defs/HAnimSite"
								},
								"LOD" : {
									"$ref":"#/$defs/LOD"
								},
								"Switch" : {
									"$ref":"#/$defs/Switch"
								},
								"Transform" : {
									"$ref":"#/$defs/Transform"
								},
								"GeoMetadata" : {
									"$ref":"#/$defs/GeoMetadata"
								},
								"WorldInfo" : {
									"$ref":"#/$defs/WorldInfo"
								},
								"ColorInterpolator" : {
									"$ref":"#/$defs/ColorInterpolator"
								},
								"CoordinateInterpolator" : {
									"$ref":"#/$defs/CoordinateInterpolator"
								},
								"CoordinateInterpolator2D" : {
									"$ref":"#/$defs/CoordinateInterpolator2D"
								},
								"GeoPositionInterpolator" : {
									"$ref":"#/$defs/GeoPositionInterpolator"
								},
								"NormalInterpolator" : {
									"$ref":"#/$defs/NormalInterpolator"
								},
								"OrientationInterpolator" : {
									"$ref":"#/$defs/OrientationInterpolator"
								},
								"PositionInterpolator" : {
									"$ref":"#/$defs/PositionInterpolator"
								},
								"PositionInterpolator2D" : {
									"$ref":"#/$defs/PositionInterpolator2D"
								},
								"ScalarInterpolator" : {
									"$ref":"#/$defs/ScalarInterpolator"
								},
								"DirectionalLight" : {
									"$ref":"#/$defs/DirectionalLight"
								},
								"PointLight" : {
									"$ref":"#/$defs/PointLight"
								},
								"SpotLight" : {
									"$ref":"#/$defs/SpotLight"
								},
								"CADFace" : {
									"$ref":"#/$defs/CADFace"
								},
								"Script" : {
									"$ref":"#/$defs/Script"
								},
								"ProximitySensor" : {
									"$ref":"#/$defs/ProximitySensor"
								},
								"VisibilitySensor" : {
									"$ref":"#/$defs/VisibilitySensor"
								},
								"KeySensor" : {
									"$ref":"#/$defs/KeySensor"
								},
								"StringSensor" : {
									"$ref":"#/$defs/StringSensor"
								},
								"LoadSensor" : {
									"$ref":"#/$defs/LoadSensor"
								},
								"ReceiverPdu" : {
									"$ref":"#/$defs/ReceiverPdu"
								},
								"SignalPdu" : {
									"$ref":"#/$defs/SignalPdu"
								},
								"TransmitterPdu" : {
									"$ref":"#/$defs/TransmitterPdu"
								},
								"CylinderSensor" : {
									"$ref":"#/$defs/CylinderSensor"
								},
								"PlaneSensor" : {
									"$ref":"#/$defs/PlaneSensor"
								},
								"SphereSensor" : {
									"$ref":"#/$defs/SphereSensor"
								},
								"GeoTouchSensor" : {
									"$ref":"#/$defs/GeoTouchSensor"
								},
								"TouchSensor" : {
									"$ref":"#/$defs/TouchSensor"
								},
								"TimeSensor" : {
									"$ref":"#/$defs/TimeSensor"
								},
								"BooleanSequencer" : {
									"$ref":"#/$defs/BooleanSequencer"
								},
								"IntegerSequencer" : {
									"$ref":"#/$defs/IntegerSequencer"
								},
								"Shape" : {
									"$ref":"#/$defs/Shape"
								},
								"Sound" : {
									"$ref":"#/$defs/Sound"
								},
								"AudioClip" : {
									"$ref":"#/$defs/AudioClip"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"BooleanTrigger" : {
									"$ref":"#/$defs/BooleanTrigger"
								},
								"IntegerTrigger" : {
									"$ref":"#/$defs/IntegerTrigger"
								},
								"TimeTrigger" : {
									"$ref":"#/$defs/TimeTrigger"
								},
								"BooleanFilter" : {
									"$ref":"#/$defs/BooleanFilter"
								},
								"BooleanToggle" : {
									"$ref":"#/$defs/BooleanToggle"
								},
								"ExternProtoDeclare" : {
									"$ref":"#/$defs/ExternProtoDeclare"
								},
								"GeoLOD" : {
									"$ref":"#/$defs/GeoLOD"
								},
								"HAnimHumanoid" : {
									"$ref":"#/$defs/HAnimHumanoid"
								},
								"HAnimJoint" : {
									"$ref":"#/$defs/HAnimJoint"
								},
								"Inline" : {
									"$ref":"#/$defs/Inline"
								},
								"LocalFog" : {
									"$ref":"#/$defs/LocalFog"
								},
								"NurbsOrientationInterpolator" : {
									"$ref":"#/$defs/NurbsOrientationInterpolator"
								},
								"NurbsPositionInterpolator" : {
									"$ref":"#/$defs/NurbsPositionInterpolator"
								},
								"NurbsSet" : {
									"$ref":"#/$defs/NurbsSet"
								},
								"NurbsSurfaceInterpolator" : {
									"$ref":"#/$defs/NurbsSurfaceInterpolator"
								},
								"ProtoDeclare" : {
									"$ref":"#/$defs/ProtoDeclare"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								},
								"ROUTE" : {
									"$ref":"#/$defs/ROUTE"
								},
								"StaticGroup" : {
									"$ref":"#/$defs/StaticGroup"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DMetadataObjectSFNode" : {
							"type": "object",
							"properties": {
								"MetadataDouble" : {
									"$ref":"#/$defs/MetadataDouble"
								},
								"MetadataFloat" : {
									"$ref":"#/$defs/MetadataFloat"
								},
								"MetadataInteger" : {
									"$ref":"#/$defs/MetadataInteger"
								},
								"MetadataSet" : {
									"$ref":"#/$defs/MetadataSet"
								},
								"MetadataString" : {
									"$ref":"#/$defs/MetadataString"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-FillPropertiesSFNode" : {
							"type": "object",
							"properties": {
								"FillProperties" : {
									"$ref":"#/$defs/FillProperties"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-LinePropertiesSFNode" : {
							"type": "object",
							"properties": {
								"LineProperties" : {
									"$ref":"#/$defs/LineProperties"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DMaterialNodeSFNode" : {
							"type": "object",
							"properties": {
								"Material" : {
									"$ref":"#/$defs/Material"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DShaderNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"ComposedShader" : {
									"$ref":"#/$defs/ComposedShader"
								},
								"PackagedShader" : {
									"$ref":"#/$defs/PackagedShader"
								},
								"ProgramShader" : {
									"$ref":"#/$defs/ProgramShader"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DTextureNodeSFNode" : {
							"type": "object",
							"properties": {
								"ComposedCubeMapTexture" : {
									"$ref":"#/$defs/ComposedCubeMapTexture"
								},
								"GeneratedCubeMapTexture" : {
									"$ref":"#/$defs/GeneratedCubeMapTexture"
								},
								"ImageCubeMapTexture" : {
									"$ref":"#/$defs/ImageCubeMapTexture"
								},
								"ImageTexture" : {
									"$ref":"#/$defs/ImageTexture"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"PixelTexture" : {
									"$ref":"#/$defs/PixelTexture"
								},
								"ComposedTexture3D" : {
									"$ref":"#/$defs/ComposedTexture3D"
								},
								"ImageTexture3D" : {
									"$ref":"#/$defs/ImageTexture3D"
								},
								"PixelTexture3D" : {
									"$ref":"#/$defs/PixelTexture3D"
								},
								"MultiTexture" : {
									"$ref":"#/$defs/MultiTexture"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DTextureTransformNodeSFNode" : {
							"type": "object",
							"properties": {
								"MultiTextureTransform" : {
									"$ref":"#/$defs/MultiTextureTransform"
								},
								"TextureTransform" : {
									"$ref":"#/$defs/TextureTransform"
								},
								"TextureTransform3D" : {
									"$ref":"#/$defs/TextureTransform3D"
								},
								"TextureTransformMatrix3D" : {
									"$ref":"#/$defs/TextureTransformMatrix3D"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-Shape-LOD-TransformSFNode" : {
							"type": "object",
							"properties": {
								"Shape" : {
									"$ref":"#/$defs/Shape"
								},
								"LOD" : {
									"$ref":"#/$defs/LOD"
								},
								"Transform" : {
									"$ref":"#/$defs/Transform"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-CADFaceMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"CADFace" : {
									"$ref":"#/$defs/CADFace"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DChildNodeSFNode" : {
							"type": "object",
							"properties": {
								"Background" : {
									"$ref":"#/$defs/Background"
								},
								"TextureBackground" : {
									"$ref":"#/$defs/TextureBackground"
								},
								"Fog" : {
									"$ref":"#/$defs/Fog"
								},
								"GeoViewpoint" : {
									"$ref":"#/$defs/GeoViewpoint"
								},
								"NavigationInfo" : {
									"$ref":"#/$defs/NavigationInfo"
								},
								"Viewpoint" : {
									"$ref":"#/$defs/Viewpoint"
								},
								"Anchor" : {
									"$ref":"#/$defs/Anchor"
								},
								"Billboard" : {
									"$ref":"#/$defs/Billboard"
								},
								"CADAssembly" : {
									"$ref":"#/$defs/CADAssembly"
								},
								"CADLayer" : {
									"$ref":"#/$defs/CADLayer"
								},
								"CADPart" : {
									"$ref":"#/$defs/CADPart"
								},
								"Collision" : {
									"$ref":"#/$defs/Collision"
								},
								"EspduTransform" : {
									"$ref":"#/$defs/EspduTransform"
								},
								"GeoLocation" : {
									"$ref":"#/$defs/GeoLocation"
								},
								"Group" : {
									"$ref":"#/$defs/Group"
								},
								"HAnimSegment" : {
									"$ref":"#/$defs/HAnimSegment"
								},
								"HAnimSite" : {
									"$ref":"#/$defs/HAnimSite"
								},
								"LOD" : {
									"$ref":"#/$defs/LOD"
								},
								"Switch" : {
									"$ref":"#/$defs/Switch"
								},
								"Transform" : {
									"$ref":"#/$defs/Transform"
								},
								"GeoMetadata" : {
									"$ref":"#/$defs/GeoMetadata"
								},
								"WorldInfo" : {
									"$ref":"#/$defs/WorldInfo"
								},
								"ColorInterpolator" : {
									"$ref":"#/$defs/ColorInterpolator"
								},
								"CoordinateInterpolator" : {
									"$ref":"#/$defs/CoordinateInterpolator"
								},
								"CoordinateInterpolator2D" : {
									"$ref":"#/$defs/CoordinateInterpolator2D"
								},
								"GeoPositionInterpolator" : {
									"$ref":"#/$defs/GeoPositionInterpolator"
								},
								"NormalInterpolator" : {
									"$ref":"#/$defs/NormalInterpolator"
								},
								"OrientationInterpolator" : {
									"$ref":"#/$defs/OrientationInterpolator"
								},
								"PositionInterpolator" : {
									"$ref":"#/$defs/PositionInterpolator"
								},
								"PositionInterpolator2D" : {
									"$ref":"#/$defs/PositionInterpolator2D"
								},
								"ScalarInterpolator" : {
									"$ref":"#/$defs/ScalarInterpolator"
								},
								"DirectionalLight" : {
									"$ref":"#/$defs/DirectionalLight"
								},
								"PointLight" : {
									"$ref":"#/$defs/PointLight"
								},
								"SpotLight" : {
									"$ref":"#/$defs/SpotLight"
								},
								"CADFace" : {
									"$ref":"#/$defs/CADFace"
								},
								"Script" : {
									"$ref":"#/$defs/Script"
								},
								"ProximitySensor" : {
									"$ref":"#/$defs/ProximitySensor"
								},
								"VisibilitySensor" : {
									"$ref":"#/$defs/VisibilitySensor"
								},
								"KeySensor" : {
									"$ref":"#/$defs/KeySensor"
								},
								"StringSensor" : {
									"$ref":"#/$defs/StringSensor"
								},
								"LoadSensor" : {
									"$ref":"#/$defs/LoadSensor"
								},
								"ReceiverPdu" : {
									"$ref":"#/$defs/ReceiverPdu"
								},
								"SignalPdu" : {
									"$ref":"#/$defs/SignalPdu"
								},
								"TransmitterPdu" : {
									"$ref":"#/$defs/TransmitterPdu"
								},
								"CylinderSensor" : {
									"$ref":"#/$defs/CylinderSensor"
								},
								"PlaneSensor" : {
									"$ref":"#/$defs/PlaneSensor"
								},
								"SphereSensor" : {
									"$ref":"#/$defs/SphereSensor"
								},
								"GeoTouchSensor" : {
									"$ref":"#/$defs/GeoTouchSensor"
								},
								"TouchSensor" : {
									"$ref":"#/$defs/TouchSensor"
								},
								"TimeSensor" : {
									"$ref":"#/$defs/TimeSensor"
								},
								"BooleanSequencer" : {
									"$ref":"#/$defs/BooleanSequencer"
								},
								"IntegerSequencer" : {
									"$ref":"#/$defs/IntegerSequencer"
								},
								"Shape" : {
									"$ref":"#/$defs/Shape"
								},
								"Sound" : {
									"$ref":"#/$defs/Sound"
								},
								"AudioClip" : {
									"$ref":"#/$defs/AudioClip"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"BooleanTrigger" : {
									"$ref":"#/$defs/BooleanTrigger"
								},
								"IntegerTrigger" : {
									"$ref":"#/$defs/IntegerTrigger"
								},
								"TimeTrigger" : {
									"$ref":"#/$defs/TimeTrigger"
								},
								"BooleanFilter" : {
									"$ref":"#/$defs/BooleanFilter"
								},
								"BooleanToggle" : {
									"$ref":"#/$defs/BooleanToggle"
								},
								"ExternProtoDeclare" : {
									"$ref":"#/$defs/ExternProtoDeclare"
								},
								"GeoLOD" : {
									"$ref":"#/$defs/GeoLOD"
								},
								"HAnimHumanoid" : {
									"$ref":"#/$defs/HAnimHumanoid"
								},
								"HAnimJoint" : {
									"$ref":"#/$defs/HAnimJoint"
								},
								"Inline" : {
									"$ref":"#/$defs/Inline"
								},
								"LocalFog" : {
									"$ref":"#/$defs/LocalFog"
								},
								"NurbsOrientationInterpolator" : {
									"$ref":"#/$defs/NurbsOrientationInterpolator"
								},
								"NurbsPositionInterpolator" : {
									"$ref":"#/$defs/NurbsPositionInterpolator"
								},
								"NurbsSet" : {
									"$ref":"#/$defs/NurbsSet"
								},
								"NurbsSurfaceInterpolator" : {
									"$ref":"#/$defs/NurbsSurfaceInterpolator"
								},
								"ProtoDeclare" : {
									"$ref":"#/$defs/ProtoDeclare"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								},
								"ROUTE" : {
									"$ref":"#/$defs/ROUTE"
								},
								"StaticGroup" : {
									"$ref":"#/$defs/StaticGroup"
								}
							},
							"additionalProperties": false
					},
					"-X3DTexture2DNodeSFNode" : {
							"type": "object",
							"properties": {
								"ImageTexture" : {
									"$ref":"#/$defs/ImageTexture"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"PixelTexture" : {
									"$ref":"#/$defs/PixelTexture"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-ShaderPartMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"ShaderPart" : {
									"$ref":"#/$defs/ShaderPart"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DTexture2DNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"ImageTexture" : {
									"$ref":"#/$defs/ImageTexture"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"PixelTexture" : {
									"$ref":"#/$defs/PixelTexture"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-NurbsCurve2D-ContourPolyline2DMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"NurbsCurve2D" : {
									"$ref":"#/$defs/NurbsCurve2D"
								},
								"ContourPolyline2D" : {
									"$ref":"#/$defs/ContourPolyline2D"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DVertexAttributeNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"FloatVertexAttribute" : {
									"$ref":"#/$defs/FloatVertexAttribute"
								},
								"Matrix3VertexAttribute" : {
									"$ref":"#/$defs/Matrix3VertexAttribute"
								},
								"Matrix4VertexAttribute" : {
									"$ref":"#/$defs/Matrix4VertexAttribute"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DColorNodeSFNode" : {
							"type": "object",
							"properties": {
								"Color" : {
									"$ref":"#/$defs/Color"
								},
								"ColorRGBA" : {
									"$ref":"#/$defs/ColorRGBA"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-FogCoordinateSFNode" : {
							"type": "object",
							"properties": {
								"FogCoordinate" : {
									"$ref":"#/$defs/FogCoordinate"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DNormalNodeSFNode" : {
							"type": "object",
							"properties": {
								"Normal" : {
									"$ref":"#/$defs/Normal"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DTextureCoordinateNodeSFNode" : {
							"type": "object",
							"properties": {
								"MultiTextureCoordinate" : {
									"$ref":"#/$defs/MultiTextureCoordinate"
								},
								"TextureCoordinate" : {
									"$ref":"#/$defs/TextureCoordinate"
								},
								"TextureCoordinate3D" : {
									"$ref":"#/$defs/TextureCoordinate3D"
								},
								"TextureCoordinate4D" : {
									"$ref":"#/$defs/TextureCoordinate4D"
								},
								"TextureCoordinateGenerator" : {
									"$ref":"#/$defs/TextureCoordinateGenerator"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"Material" : {
									"$ref":"#/$defs/Material"
								},
								"ComposedShader" : {
									"$ref":"#/$defs/ComposedShader"
								},
								"PackagedShader" : {
									"$ref":"#/$defs/PackagedShader"
								},
								"ProgramShader" : {
									"$ref":"#/$defs/ProgramShader"
								},
								"ComposedCubeMapTexture" : {
									"$ref":"#/$defs/ComposedCubeMapTexture"
								},
								"GeneratedCubeMapTexture" : {
									"$ref":"#/$defs/GeneratedCubeMapTexture"
								},
								"ImageCubeMapTexture" : {
									"$ref":"#/$defs/ImageCubeMapTexture"
								},
								"ImageTexture" : {
									"$ref":"#/$defs/ImageTexture"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"PixelTexture" : {
									"$ref":"#/$defs/PixelTexture"
								},
								"ComposedTexture3D" : {
									"$ref":"#/$defs/ComposedTexture3D"
								},
								"ImageTexture3D" : {
									"$ref":"#/$defs/ImageTexture3D"
								},
								"PixelTexture3D" : {
									"$ref":"#/$defs/PixelTexture3D"
								},
								"MultiTexture" : {
									"$ref":"#/$defs/MultiTexture"
								},
								"MultiTextureTransform" : {
									"$ref":"#/$defs/MultiTextureTransform"
								},
								"TextureTransform" : {
									"$ref":"#/$defs/TextureTransform"
								},
								"TextureTransform3D" : {
									"$ref":"#/$defs/TextureTransform3D"
								},
								"TextureTransformMatrix3D" : {
									"$ref":"#/$defs/TextureTransformMatrix3D"
								},
								"FillProperties" : {
									"$ref":"#/$defs/FillProperties"
								},
								"LineProperties" : {
									"$ref":"#/$defs/LineProperties"
								},
								"Appearance" : {
									"$ref":"#/$defs/Appearance"
								},
								"Background" : {
									"$ref":"#/$defs/Background"
								},
								"TextureBackground" : {
									"$ref":"#/$defs/TextureBackground"
								},
								"Fog" : {
									"$ref":"#/$defs/Fog"
								},
								"GeoViewpoint" : {
									"$ref":"#/$defs/GeoViewpoint"
								},
								"NavigationInfo" : {
									"$ref":"#/$defs/NavigationInfo"
								},
								"Viewpoint" : {
									"$ref":"#/$defs/Viewpoint"
								},
								"Anchor" : {
									"$ref":"#/$defs/Anchor"
								},
								"Billboard" : {
									"$ref":"#/$defs/Billboard"
								},
								"CADAssembly" : {
									"$ref":"#/$defs/CADAssembly"
								},
								"CADLayer" : {
									"$ref":"#/$defs/CADLayer"
								},
								"CADPart" : {
									"$ref":"#/$defs/CADPart"
								},
								"Collision" : {
									"$ref":"#/$defs/Collision"
								},
								"EspduTransform" : {
									"$ref":"#/$defs/EspduTransform"
								},
								"GeoLocation" : {
									"$ref":"#/$defs/GeoLocation"
								},
								"Group" : {
									"$ref":"#/$defs/Group"
								},
								"HAnimSegment" : {
									"$ref":"#/$defs/HAnimSegment"
								},
								"HAnimSite" : {
									"$ref":"#/$defs/HAnimSite"
								},
								"LOD" : {
									"$ref":"#/$defs/LOD"
								},
								"Switch" : {
									"$ref":"#/$defs/Switch"
								},
								"Transform" : {
									"$ref":"#/$defs/Transform"
								},
								"GeoMetadata" : {
									"$ref":"#/$defs/GeoMetadata"
								},
								"WorldInfo" : {
									"$ref":"#/$defs/WorldInfo"
								},
								"ColorInterpolator" : {
									"$ref":"#/$defs/ColorInterpolator"
								},
								"CoordinateInterpolator" : {
									"$ref":"#/$defs/CoordinateInterpolator"
								},
								"CoordinateInterpolator2D" : {
									"$ref":"#/$defs/CoordinateInterpolator2D"
								},
								"GeoPositionInterpolator" : {
									"$ref":"#/$defs/GeoPositionInterpolator"
								},
								"NormalInterpolator" : {
									"$ref":"#/$defs/NormalInterpolator"
								},
								"OrientationInterpolator" : {
									"$ref":"#/$defs/OrientationInterpolator"
								},
								"PositionInterpolator" : {
									"$ref":"#/$defs/PositionInterpolator"
								},
								"PositionInterpolator2D" : {
									"$ref":"#/$defs/PositionInterpolator2D"
								},
								"ScalarInterpolator" : {
									"$ref":"#/$defs/ScalarInterpolator"
								},
								"DirectionalLight" : {
									"$ref":"#/$defs/DirectionalLight"
								},
								"PointLight" : {
									"$ref":"#/$defs/PointLight"
								},
								"SpotLight" : {
									"$ref":"#/$defs/SpotLight"
								},
								"CADFace" : {
									"$ref":"#/$defs/CADFace"
								},
								"Script" : {
									"$ref":"#/$defs/Script"
								},
								"ProximitySensor" : {
									"$ref":"#/$defs/ProximitySensor"
								},
								"VisibilitySensor" : {
									"$ref":"#/$defs/VisibilitySensor"
								},
								"KeySensor" : {
									"$ref":"#/$defs/KeySensor"
								},
								"StringSensor" : {
									"$ref":"#/$defs/StringSensor"
								},
								"LoadSensor" : {
									"$ref":"#/$defs/LoadSensor"
								},
								"ReceiverPdu" : {
									"$ref":"#/$defs/ReceiverPdu"
								},
								"SignalPdu" : {
									"$ref":"#/$defs/SignalPdu"
								},
								"TransmitterPdu" : {
									"$ref":"#/$defs/TransmitterPdu"
								},
								"CylinderSensor" : {
									"$ref":"#/$defs/CylinderSensor"
								},
								"PlaneSensor" : {
									"$ref":"#/$defs/PlaneSensor"
								},
								"SphereSensor" : {
									"$ref":"#/$defs/SphereSensor"
								},
								"GeoTouchSensor" : {
									"$ref":"#/$defs/GeoTouchSensor"
								},
								"TouchSensor" : {
									"$ref":"#/$defs/TouchSensor"
								},
								"TimeSensor" : {
									"$ref":"#/$defs/TimeSensor"
								},
								"BooleanSequencer" : {
									"$ref":"#/$defs/BooleanSequencer"
								},
								"IntegerSequencer" : {
									"$ref":"#/$defs/IntegerSequencer"
								},
								"Shape" : {
									"$ref":"#/$defs/Shape"
								},
								"Sound" : {
									"$ref":"#/$defs/Sound"
								},
								"AudioClip" : {
									"$ref":"#/$defs/AudioClip"
								},
								"BooleanTrigger" : {
									"$ref":"#/$defs/BooleanTrigger"
								},
								"IntegerTrigger" : {
									"$ref":"#/$defs/IntegerTrigger"
								},
								"TimeTrigger" : {
									"$ref":"#/$defs/TimeTrigger"
								},
								"BooleanFilter" : {
									"$ref":"#/$defs/BooleanFilter"
								},
								"BooleanToggle" : {
									"$ref":"#/$defs/BooleanToggle"
								},
								"ExternProtoDeclare" : {
									"$ref":"#/$defs/ExternProtoDeclare"
								},
								"GeoLOD" : {
									"$ref":"#/$defs/GeoLOD"
								},
								"HAnimHumanoid" : {
									"$ref":"#/$defs/HAnimHumanoid"
								},
								"HAnimJoint" : {
									"$ref":"#/$defs/HAnimJoint"
								},
								"Inline" : {
									"$ref":"#/$defs/Inline"
								},
								"LocalFog" : {
									"$ref":"#/$defs/LocalFog"
								},
								"NurbsOrientationInterpolator" : {
									"$ref":"#/$defs/NurbsOrientationInterpolator"
								},
								"NurbsPositionInterpolator" : {
									"$ref":"#/$defs/NurbsPositionInterpolator"
								},
								"NurbsSet" : {
									"$ref":"#/$defs/NurbsSet"
								},
								"NurbsSurfaceInterpolator" : {
									"$ref":"#/$defs/NurbsSurfaceInterpolator"
								},
								"ProtoDeclare" : {
									"$ref":"#/$defs/ProtoDeclare"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								},
								"ROUTE" : {
									"$ref":"#/$defs/ROUTE"
								},
								"StaticGroup" : {
									"$ref":"#/$defs/StaticGroup"
								},
								"FontStyle" : {
									"$ref":"#/$defs/FontStyle"
								},
								"Color" : {
									"$ref":"#/$defs/Color"
								},
								"ColorRGBA" : {
									"$ref":"#/$defs/ColorRGBA"
								},
								"Coordinate" : {
									"$ref":"#/$defs/Coordinate"
								},
								"CoordinateDouble" : {
									"$ref":"#/$defs/CoordinateDouble"
								},
								"GeoCoordinate" : {
									"$ref":"#/$defs/GeoCoordinate"
								},
								"Normal" : {
									"$ref":"#/$defs/Normal"
								},
								"MultiTextureCoordinate" : {
									"$ref":"#/$defs/MultiTextureCoordinate"
								},
								"TextureCoordinate" : {
									"$ref":"#/$defs/TextureCoordinate"
								},
								"TextureCoordinate3D" : {
									"$ref":"#/$defs/TextureCoordinate3D"
								},
								"TextureCoordinate4D" : {
									"$ref":"#/$defs/TextureCoordinate4D"
								},
								"TextureCoordinateGenerator" : {
									"$ref":"#/$defs/TextureCoordinateGenerator"
								},
								"FloatVertexAttribute" : {
									"$ref":"#/$defs/FloatVertexAttribute"
								},
								"Matrix3VertexAttribute" : {
									"$ref":"#/$defs/Matrix3VertexAttribute"
								},
								"Matrix4VertexAttribute" : {
									"$ref":"#/$defs/Matrix4VertexAttribute"
								},
								"FogCoordinate" : {
									"$ref":"#/$defs/FogCoordinate"
								},
								"HAnimDisplacer" : {
									"$ref":"#/$defs/HAnimDisplacer"
								},
								"IndexedFaceSet" : {
									"$ref":"#/$defs/IndexedFaceSet"
								},
								"IndexedQuadSet" : {
									"$ref":"#/$defs/IndexedQuadSet"
								},
								"IndexedTriangleFanSet" : {
									"$ref":"#/$defs/IndexedTriangleFanSet"
								},
								"IndexedTriangleSet" : {
									"$ref":"#/$defs/IndexedTriangleSet"
								},
								"IndexedTriangleStripSet" : {
									"$ref":"#/$defs/IndexedTriangleStripSet"
								},
								"QuadSet" : {
									"$ref":"#/$defs/QuadSet"
								},
								"TriangleFanSet" : {
									"$ref":"#/$defs/TriangleFanSet"
								},
								"TriangleSet" : {
									"$ref":"#/$defs/TriangleSet"
								},
								"TriangleStripSet" : {
									"$ref":"#/$defs/TriangleStripSet"
								},
								"NurbsPatchSurface" : {
									"$ref":"#/$defs/NurbsPatchSurface"
								},
								"NurbsTrimmedSurface" : {
									"$ref":"#/$defs/NurbsTrimmedSurface"
								},
								"NurbsCurve" : {
									"$ref":"#/$defs/NurbsCurve"
								},
								"NurbsSweptSurface" : {
									"$ref":"#/$defs/NurbsSweptSurface"
								},
								"NurbsSwungSurface" : {
									"$ref":"#/$defs/NurbsSwungSurface"
								},
								"Arc2D" : {
									"$ref":"#/$defs/Arc2D"
								},
								"ArcClose2D" : {
									"$ref":"#/$defs/ArcClose2D"
								},
								"Box" : {
									"$ref":"#/$defs/Box"
								},
								"Circle2D" : {
									"$ref":"#/$defs/Circle2D"
								},
								"Cone" : {
									"$ref":"#/$defs/Cone"
								},
								"Cylinder" : {
									"$ref":"#/$defs/Cylinder"
								},
								"Disk2D" : {
									"$ref":"#/$defs/Disk2D"
								},
								"ElevationGrid" : {
									"$ref":"#/$defs/ElevationGrid"
								},
								"Extrusion" : {
									"$ref":"#/$defs/Extrusion"
								},
								"GeoElevationGrid" : {
									"$ref":"#/$defs/GeoElevationGrid"
								},
								"IndexedLineSet" : {
									"$ref":"#/$defs/IndexedLineSet"
								},
								"LineSet" : {
									"$ref":"#/$defs/LineSet"
								},
								"PointSet" : {
									"$ref":"#/$defs/PointSet"
								},
								"Polyline2D" : {
									"$ref":"#/$defs/Polyline2D"
								},
								"Polypoint2D" : {
									"$ref":"#/$defs/Polypoint2D"
								},
								"Rectangle2D" : {
									"$ref":"#/$defs/Rectangle2D"
								},
								"Sphere" : {
									"$ref":"#/$defs/Sphere"
								},
								"Text" : {
									"$ref":"#/$defs/Text"
								},
								"TriangleSet2D" : {
									"$ref":"#/$defs/TriangleSet2D"
								},
								"ContourPolyline2D" : {
									"$ref":"#/$defs/ContourPolyline2D"
								},
								"NurbsCurve2D" : {
									"$ref":"#/$defs/NurbsCurve2D"
								},
								"Contour2D" : {
									"$ref":"#/$defs/Contour2D"
								},
								"GeoOrigin" : {
									"$ref":"#/$defs/GeoOrigin"
								},
								"MetadataDouble" : {
									"$ref":"#/$defs/MetadataDouble"
								},
								"MetadataFloat" : {
									"$ref":"#/$defs/MetadataFloat"
								},
								"MetadataInteger" : {
									"$ref":"#/$defs/MetadataInteger"
								},
								"MetadataSet" : {
									"$ref":"#/$defs/MetadataSet"
								},
								"MetadataString" : {
									"$ref":"#/$defs/MetadataString"
								},
								"NurbsTextureCoordinate" : {
									"$ref":"#/$defs/NurbsTextureCoordinate"
								},
								"ShaderPart" : {
									"$ref":"#/$defs/ShaderPart"
								},
								"ShaderProgram" : {
									"$ref":"#/$defs/ShaderProgram"
								}
							},
							"additionalProperties": false
						}
					},
					"-GeoOriginSFNode" : {
							"type": "object",
							"properties": {
								"GeoOrigin" : {
									"$ref":"#/$defs/GeoOrigin"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-HAnimJointMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"HAnimJoint" : {
									"$ref":"#/$defs/HAnimJoint"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-HAnimSegmentMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"HAnimSegment" : {
									"$ref":"#/$defs/HAnimSegment"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-HAnimSiteMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"HAnimSite" : {
									"$ref":"#/$defs/HAnimSite"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-HAnimJoint-HAnimSiteMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"HAnimJoint" : {
									"$ref":"#/$defs/HAnimJoint"
								},
								"HAnimSite" : {
									"$ref":"#/$defs/HAnimSite"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-Group-Transform-Shape-IndexedFaceSetMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"Group" : {
									"$ref":"#/$defs/Group"
								},
								"Transform" : {
									"$ref":"#/$defs/Transform"
								},
								"Shape" : {
									"$ref":"#/$defs/Shape"
								},
								"IndexedFaceSet" : {
									"$ref":"#/$defs/IndexedFaceSet"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DCoordinateNodeSFNode" : {
							"type": "object",
							"properties": {
								"Coordinate" : {
									"$ref":"#/$defs/Coordinate"
								},
								"CoordinateDouble" : {
									"$ref":"#/$defs/CoordinateDouble"
								},
								"GeoCoordinate" : {
									"$ref":"#/$defs/GeoCoordinate"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-HAnimJoint-HAnimSegmentMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"HAnimJoint" : {
									"$ref":"#/$defs/HAnimJoint"
								},
								"HAnimSegment" : {
									"$ref":"#/$defs/HAnimSegment"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-HAnimDisplacerMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"HAnimDisplacer" : {
									"$ref":"#/$defs/HAnimDisplacer"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DUrlObjectMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"Script" : {
									"$ref":"#/$defs/Script"
								},
								"Anchor" : {
									"$ref":"#/$defs/Anchor"
								},
								"AudioClip" : {
									"$ref":"#/$defs/AudioClip"
								},
								"GeoMetadata" : {
									"$ref":"#/$defs/GeoMetadata"
								},
								"ImageCubeMapTexture" : {
									"$ref":"#/$defs/ImageCubeMapTexture"
								},
								"ImageTexture" : {
									"$ref":"#/$defs/ImageTexture"
								},
								"ImageTexture3D" : {
									"$ref":"#/$defs/ImageTexture3D"
								},
								"Inline" : {
									"$ref":"#/$defs/Inline"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"PackagedShader" : {
									"$ref":"#/$defs/PackagedShader"
								},
								"ShaderPart" : {
									"$ref":"#/$defs/ShaderPart"
								},
								"ShaderProgram" : {
									"$ref":"#/$defs/ShaderProgram"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DMetadataObjectMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"MetadataDouble" : {
									"$ref":"#/$defs/MetadataDouble"
								},
								"MetadataFloat" : {
									"$ref":"#/$defs/MetadataFloat"
								},
								"MetadataInteger" : {
									"$ref":"#/$defs/MetadataInteger"
								},
								"MetadataSet" : {
									"$ref":"#/$defs/MetadataSet"
								},
								"MetadataString" : {
									"$ref":"#/$defs/MetadataString"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DTextureNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"ComposedCubeMapTexture" : {
									"$ref":"#/$defs/ComposedCubeMapTexture"
								},
								"GeneratedCubeMapTexture" : {
									"$ref":"#/$defs/GeneratedCubeMapTexture"
								},
								"ImageCubeMapTexture" : {
									"$ref":"#/$defs/ImageCubeMapTexture"
								},
								"ImageTexture" : {
									"$ref":"#/$defs/ImageTexture"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"PixelTexture" : {
									"$ref":"#/$defs/PixelTexture"
								},
								"ComposedTexture3D" : {
									"$ref":"#/$defs/ComposedTexture3D"
								},
								"ImageTexture3D" : {
									"$ref":"#/$defs/ImageTexture3D"
								},
								"PixelTexture3D" : {
									"$ref":"#/$defs/PixelTexture3D"
								},
								"MultiTexture" : {
									"$ref":"#/$defs/MultiTexture"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DTextureCoordinateNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"MultiTextureCoordinate" : {
									"$ref":"#/$defs/MultiTextureCoordinate"
								},
								"TextureCoordinate" : {
									"$ref":"#/$defs/TextureCoordinate"
								},
								"TextureCoordinate3D" : {
									"$ref":"#/$defs/TextureCoordinate3D"
								},
								"TextureCoordinate4D" : {
									"$ref":"#/$defs/TextureCoordinate4D"
								},
								"TextureCoordinateGenerator" : {
									"$ref":"#/$defs/TextureCoordinateGenerator"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DTextureTransformNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"MultiTextureTransform" : {
									"$ref":"#/$defs/MultiTextureTransform"
								},
								"TextureTransform" : {
									"$ref":"#/$defs/TextureTransform"
								},
								"TextureTransform3D" : {
									"$ref":"#/$defs/TextureTransform3D"
								},
								"TextureTransformMatrix3D" : {
									"$ref":"#/$defs/TextureTransformMatrix3D"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DTextureCoordinateNode-NurbsTextureCoordinateSFNode" : {
							"type": "object",
							"properties": {
								"MultiTextureCoordinate" : {
									"$ref":"#/$defs/MultiTextureCoordinate"
								},
								"TextureCoordinate" : {
									"$ref":"#/$defs/TextureCoordinate"
								},
								"TextureCoordinate3D" : {
									"$ref":"#/$defs/TextureCoordinate3D"
								},
								"TextureCoordinate4D" : {
									"$ref":"#/$defs/TextureCoordinate4D"
								},
								"TextureCoordinateGenerator" : {
									"$ref":"#/$defs/TextureCoordinateGenerator"
								},
								"NurbsTextureCoordinate" : {
									"$ref":"#/$defs/NurbsTextureCoordinate"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DNurbsSurfaceGeometryNodeMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"NurbsPatchSurface" : {
									"$ref":"#/$defs/NurbsPatchSurface"
								},
								"NurbsTrimmedSurface" : {
									"$ref":"#/$defs/NurbsTrimmedSurface"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DNurbsControlCurveNodeSFNode" : {
							"type": "object",
							"properties": {
								"ContourPolyline2D" : {
									"$ref":"#/$defs/ContourPolyline2D"
								},
								"NurbsCurve2D" : {
									"$ref":"#/$defs/NurbsCurve2D"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-NurbsCurveSFNode" : {
							"type": "object",
							"properties": {
								"NurbsCurve" : {
									"$ref":"#/$defs/NurbsCurve"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-Contour2DMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"Contour2D" : {
									"$ref":"#/$defs/Contour2D"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-ShaderProgramMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"ShaderProgram" : {
									"$ref":"#/$defs/ShaderProgram"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DChildNode-X3DMetadataObjectMFNode" : {
						"$comment":"MFNode inputOutput",
						"type": "array",
						"minItems": 1,
						"items": {
							"type": "object",
							"properties": {
								"#comment": {
									"type": "string"
								},
								"Background" : {
									"$ref":"#/$defs/Background"
								},
								"TextureBackground" : {
									"$ref":"#/$defs/TextureBackground"
								},
								"Fog" : {
									"$ref":"#/$defs/Fog"
								},
								"GeoViewpoint" : {
									"$ref":"#/$defs/GeoViewpoint"
								},
								"NavigationInfo" : {
									"$ref":"#/$defs/NavigationInfo"
								},
								"Viewpoint" : {
									"$ref":"#/$defs/Viewpoint"
								},
								"Anchor" : {
									"$ref":"#/$defs/Anchor"
								},
								"Billboard" : {
									"$ref":"#/$defs/Billboard"
								},
								"CADAssembly" : {
									"$ref":"#/$defs/CADAssembly"
								},
								"CADLayer" : {
									"$ref":"#/$defs/CADLayer"
								},
								"CADPart" : {
									"$ref":"#/$defs/CADPart"
								},
								"Collision" : {
									"$ref":"#/$defs/Collision"
								},
								"EspduTransform" : {
									"$ref":"#/$defs/EspduTransform"
								},
								"GeoLocation" : {
									"$ref":"#/$defs/GeoLocation"
								},
								"Group" : {
									"$ref":"#/$defs/Group"
								},
								"HAnimSegment" : {
									"$ref":"#/$defs/HAnimSegment"
								},
								"HAnimSite" : {
									"$ref":"#/$defs/HAnimSite"
								},
								"LOD" : {
									"$ref":"#/$defs/LOD"
								},
								"Switch" : {
									"$ref":"#/$defs/Switch"
								},
								"Transform" : {
									"$ref":"#/$defs/Transform"
								},
								"GeoMetadata" : {
									"$ref":"#/$defs/GeoMetadata"
								},
								"WorldInfo" : {
									"$ref":"#/$defs/WorldInfo"
								},
								"ColorInterpolator" : {
									"$ref":"#/$defs/ColorInterpolator"
								},
								"CoordinateInterpolator" : {
									"$ref":"#/$defs/CoordinateInterpolator"
								},
								"CoordinateInterpolator2D" : {
									"$ref":"#/$defs/CoordinateInterpolator2D"
								},
								"GeoPositionInterpolator" : {
									"$ref":"#/$defs/GeoPositionInterpolator"
								},
								"NormalInterpolator" : {
									"$ref":"#/$defs/NormalInterpolator"
								},
								"OrientationInterpolator" : {
									"$ref":"#/$defs/OrientationInterpolator"
								},
								"PositionInterpolator" : {
									"$ref":"#/$defs/PositionInterpolator"
								},
								"PositionInterpolator2D" : {
									"$ref":"#/$defs/PositionInterpolator2D"
								},
								"ScalarInterpolator" : {
									"$ref":"#/$defs/ScalarInterpolator"
								},
								"DirectionalLight" : {
									"$ref":"#/$defs/DirectionalLight"
								},
								"PointLight" : {
									"$ref":"#/$defs/PointLight"
								},
								"SpotLight" : {
									"$ref":"#/$defs/SpotLight"
								},
								"CADFace" : {
									"$ref":"#/$defs/CADFace"
								},
								"Script" : {
									"$ref":"#/$defs/Script"
								},
								"ProximitySensor" : {
									"$ref":"#/$defs/ProximitySensor"
								},
								"VisibilitySensor" : {
									"$ref":"#/$defs/VisibilitySensor"
								},
								"KeySensor" : {
									"$ref":"#/$defs/KeySensor"
								},
								"StringSensor" : {
									"$ref":"#/$defs/StringSensor"
								},
								"LoadSensor" : {
									"$ref":"#/$defs/LoadSensor"
								},
								"ReceiverPdu" : {
									"$ref":"#/$defs/ReceiverPdu"
								},
								"SignalPdu" : {
									"$ref":"#/$defs/SignalPdu"
								},
								"TransmitterPdu" : {
									"$ref":"#/$defs/TransmitterPdu"
								},
								"CylinderSensor" : {
									"$ref":"#/$defs/CylinderSensor"
								},
								"PlaneSensor" : {
									"$ref":"#/$defs/PlaneSensor"
								},
								"SphereSensor" : {
									"$ref":"#/$defs/SphereSensor"
								},
								"GeoTouchSensor" : {
									"$ref":"#/$defs/GeoTouchSensor"
								},
								"TouchSensor" : {
									"$ref":"#/$defs/TouchSensor"
								},
								"TimeSensor" : {
									"$ref":"#/$defs/TimeSensor"
								},
								"BooleanSequencer" : {
									"$ref":"#/$defs/BooleanSequencer"
								},
								"IntegerSequencer" : {
									"$ref":"#/$defs/IntegerSequencer"
								},
								"Shape" : {
									"$ref":"#/$defs/Shape"
								},
								"Sound" : {
									"$ref":"#/$defs/Sound"
								},
								"AudioClip" : {
									"$ref":"#/$defs/AudioClip"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"BooleanTrigger" : {
									"$ref":"#/$defs/BooleanTrigger"
								},
								"IntegerTrigger" : {
									"$ref":"#/$defs/IntegerTrigger"
								},
								"TimeTrigger" : {
									"$ref":"#/$defs/TimeTrigger"
								},
								"BooleanFilter" : {
									"$ref":"#/$defs/BooleanFilter"
								},
								"BooleanToggle" : {
									"$ref":"#/$defs/BooleanToggle"
								},
								"ExternProtoDeclare" : {
									"$ref":"#/$defs/ExternProtoDeclare"
								},
								"GeoLOD" : {
									"$ref":"#/$defs/GeoLOD"
								},
								"HAnimHumanoid" : {
									"$ref":"#/$defs/HAnimHumanoid"
								},
								"HAnimJoint" : {
									"$ref":"#/$defs/HAnimJoint"
								},
								"Inline" : {
									"$ref":"#/$defs/Inline"
								},
								"LocalFog" : {
									"$ref":"#/$defs/LocalFog"
								},
								"NurbsOrientationInterpolator" : {
									"$ref":"#/$defs/NurbsOrientationInterpolator"
								},
								"NurbsPositionInterpolator" : {
									"$ref":"#/$defs/NurbsPositionInterpolator"
								},
								"NurbsSet" : {
									"$ref":"#/$defs/NurbsSet"
								},
								"NurbsSurfaceInterpolator" : {
									"$ref":"#/$defs/NurbsSurfaceInterpolator"
								},
								"ProtoDeclare" : {
									"$ref":"#/$defs/ProtoDeclare"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								},
								"ROUTE" : {
									"$ref":"#/$defs/ROUTE"
								},
								"StaticGroup" : {
									"$ref":"#/$defs/StaticGroup"
								},
								"MetadataDouble" : {
									"$ref":"#/$defs/MetadataDouble"
								},
								"MetadataFloat" : {
									"$ref":"#/$defs/MetadataFloat"
								},
								"MetadataInteger" : {
									"$ref":"#/$defs/MetadataInteger"
								},
								"MetadataSet" : {
									"$ref":"#/$defs/MetadataSet"
								},
								"MetadataString" : {
									"$ref":"#/$defs/MetadataString"
								}
							},
							"additionalProperties": false
						}
					},
					"-X3DAppearanceNodeSFNode" : {
							"type": "object",
							"properties": {
								"Appearance" : {
									"$ref":"#/$defs/Appearance"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DGeometryNodeSFNode" : {
							"type": "object",
							"properties": {
								"IndexedFaceSet" : {
									"$ref":"#/$defs/IndexedFaceSet"
								},
								"IndexedQuadSet" : {
									"$ref":"#/$defs/IndexedQuadSet"
								},
								"IndexedTriangleFanSet" : {
									"$ref":"#/$defs/IndexedTriangleFanSet"
								},
								"IndexedTriangleSet" : {
									"$ref":"#/$defs/IndexedTriangleSet"
								},
								"IndexedTriangleStripSet" : {
									"$ref":"#/$defs/IndexedTriangleStripSet"
								},
								"QuadSet" : {
									"$ref":"#/$defs/QuadSet"
								},
								"TriangleFanSet" : {
									"$ref":"#/$defs/TriangleFanSet"
								},
								"TriangleSet" : {
									"$ref":"#/$defs/TriangleSet"
								},
								"TriangleStripSet" : {
									"$ref":"#/$defs/TriangleStripSet"
								},
								"NurbsPatchSurface" : {
									"$ref":"#/$defs/NurbsPatchSurface"
								},
								"NurbsTrimmedSurface" : {
									"$ref":"#/$defs/NurbsTrimmedSurface"
								},
								"NurbsCurve" : {
									"$ref":"#/$defs/NurbsCurve"
								},
								"NurbsSweptSurface" : {
									"$ref":"#/$defs/NurbsSweptSurface"
								},
								"NurbsSwungSurface" : {
									"$ref":"#/$defs/NurbsSwungSurface"
								},
								"Arc2D" : {
									"$ref":"#/$defs/Arc2D"
								},
								"ArcClose2D" : {
									"$ref":"#/$defs/ArcClose2D"
								},
								"Box" : {
									"$ref":"#/$defs/Box"
								},
								"Circle2D" : {
									"$ref":"#/$defs/Circle2D"
								},
								"Cone" : {
									"$ref":"#/$defs/Cone"
								},
								"Cylinder" : {
									"$ref":"#/$defs/Cylinder"
								},
								"Disk2D" : {
									"$ref":"#/$defs/Disk2D"
								},
								"ElevationGrid" : {
									"$ref":"#/$defs/ElevationGrid"
								},
								"Extrusion" : {
									"$ref":"#/$defs/Extrusion"
								},
								"GeoElevationGrid" : {
									"$ref":"#/$defs/GeoElevationGrid"
								},
								"IndexedLineSet" : {
									"$ref":"#/$defs/IndexedLineSet"
								},
								"LineSet" : {
									"$ref":"#/$defs/LineSet"
								},
								"PointSet" : {
									"$ref":"#/$defs/PointSet"
								},
								"Polyline2D" : {
									"$ref":"#/$defs/Polyline2D"
								},
								"Polypoint2D" : {
									"$ref":"#/$defs/Polypoint2D"
								},
								"Rectangle2D" : {
									"$ref":"#/$defs/Rectangle2D"
								},
								"Sphere" : {
									"$ref":"#/$defs/Sphere"
								},
								"Text" : {
									"$ref":"#/$defs/Text"
								},
								"TriangleSet2D" : {
									"$ref":"#/$defs/TriangleSet2D"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DSoundSourceNodeSFNode" : {
							"type": "object",
							"properties": {
								"AudioClip" : {
									"$ref":"#/$defs/AudioClip"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DFontStyleNodeSFNode" : {
							"type": "object",
							"properties": {
								"FontStyle" : {
									"$ref":"#/$defs/FontStyle"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					},
					"-X3DTexture2DNode-MultiTextureSFNode" : {
							"type": "object",
							"properties": {
								"ImageTexture" : {
									"$ref":"#/$defs/ImageTexture"
								},
								"MovieTexture" : {
									"$ref":"#/$defs/MovieTexture"
								},
								"PixelTexture" : {
									"$ref":"#/$defs/PixelTexture"
								},
								"MultiTexture" : {
									"$ref":"#/$defs/MultiTexture"
								},
								"ProtoInstance" : {
									"$ref":"#/$defs/ProtoInstance"
								}
							},
							"additionalProperties": false
					}
	}
}
