#X3D V3.3 utf8
# X3D-to-ClassicVRML XSL translation autogenerated by X3dToVrml97.xslt
# http://www.web3d.org/x3d/content/X3dToVrml97.xslt
# Generated using XSLT processor: SAXON 9.1.0.2 from Saxonica

PROFILE Immersive
# [X3D] version=3.3
# [X3D] noNamespaceSchemaLocation=http://www.web3d.org/specifications/x3d-3.3.xsd
# [head]

META "warning" "under development: toStringClassicVrml() export, results in HelloWorldProgramOutput.x3d.x3dv"
META "title" "HelloWorldProgramOutput.x3d"
META "description" " Example HelloWorldProgram creates an X3D model using the X3D Java Scene Access Interface (SAI) Library"
META "reference" "http://www.web3d.org/specifications/java/examples/X3dJavaSceneAuthoringInterface.html"
META "generator" "HelloWorldProgram.java"
META "created" "6 September 2016"
META "modified" "10 November 2016"
META "generator" "X3D Java Scene Access Interface (SAI) Library"
META "generator" "http://www.web3d.org/specifications/java/examples/HelloWorldProgram.java"
META "generator" "Netbeans http://www.netbeans.org"
META "creator" "Don Brutzman"
META "reference" "https://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/stylesheets/java/examples/HelloWorldProgramOutput.x3d"
META "X3dValidator" "https://savage.nps.edu/X3dValidator?url=http://www.web3d.org/specifications/java/examples/HelloWorldProgramOutput.x3d"
META "identifier" "http://www.web3d.org/specifications/java/examples/HelloWorldProgramOutput.x3d"
META "license" "../license.html"
# comment #1
# comment #2
# comment #3
# comment #4

# [Scene] ========== ========== ==========

NavigationInfo { type [ "EXAMINE" "ANY" ] } ###  Default X3D NavigationInfo

DEF DefaultView Viewpoint {
  description "Hello X3D Java SAI"
}
DEF TopDownView Viewpoint {
  description "top-down view from above"
  orientation 1.0 0.0 0.0 -1.570796
  position 0.0 10.0 0.0
}
WorldInfo {
  title "HelloWorldProgram produced by X3D Java SAI Library"
}
DEF LogoGeometryTransform Transform {
  translation 0.0 1.5 0.0
  children [
      Anchor {
        url [ "../X3dJavaSceneAuthoringInterface.html" "http://www.web3d.org/specifications/java/X3dJavaSceneAuthoringInterface.html" ]
        children [
            DEF BoxShape Shape {
              appearance Appearance {
                material DEF GreenMaterial Material {
                  diffuseColor 0.0 1.0 1.0
                  transparency 0.1
                }
                texture ImageTexture {
                  url [ "images/X3dJavaSceneAccessInterfaceSaiLibrary.png" "http://www.web3d.org/specifications/java/examples/images/X3dJavaSceneAccessInterfaceSaiLibrary.png" ]
                }
              }
              geometry Box {
                ### class='textured'
              }
            }
        ]
      }
  ]
}
DEF LineShape Shape {
  appearance Appearance {
    material Material {
      emissiveColor 0.6 0.19607843 0.8
    }
  }
  geometry IndexedLineSet {
    coordIndex [ 0 1 2 3 4 0 ]
    coord Coordinate {
      point [ 0.0 1.5 0.0 2.0 1.5 0.0 2.0 1.5 -2.0 -2.0 1.5 -2.0 -2.0 1.5 0.0 0.0 1.5 0.0 ]
    }
  }
}
DEF BoxPathAnimator CoordinateInterpolator {
  key [ 0.0 0.125 0.375 0.625 0.875 1.0 ]
  keyValue [ 0.0 1.5 0.0 2.0 1.5 0.0 2.0 1.5 -2.0 -2.0 1.5 -2.0 -2.0 1.5 0.0 0.0 1.5 0.0 ]
}
DEF OrbitClock TimeSensor {
  cycleInterval 8.0
  loop TRUE
}
ROUTE OrbitClock.fraction_changed TO BoxPathAnimator.set_fraction
ROUTE BoxPathAnimator.value_changed TO LogoGeometryTransform.translation
 ### Error:  Mismatched type: ROUTE source BoxPathAnimator.value_changed has type MFVec3f, but destination LogoGeometryTransform.translation has type SFVec3f.
DEF TextTransform Transform {
  translation 0.0 -1.5 0.0
  children [
      Shape {
        appearance Appearance {
          material USE GreenMaterial
        }
        geometry Text {
          string [ "Hello!" "SAI Library" "X3D Java" ]
          fontStyle FontStyle {
            justify [ "MIDDLE" "MIDDLE"  ] 
            topToBottom FALSE
          }
        }
      }
      # It's a beautiful world
      # ... for you!
      # https://en.wikipedia.org/wiki/Beautiful_World_(Devo_song)
  ]
}
# repeatedly spin 180 degrees as a readable special effect
DEF SpinInterpolator OrientationInterpolator {
  key [ 0.0 0.5 1.0 ]
  keyValue [ 0.0 1.0 0.0 4.712389 0.0 1.0 0.0 0.0 0.0 1.0 0.0 1.5707964 ]
}
DEF SpinClock TimeSensor {
  cycleInterval 5.0
  loop TRUE
}
ROUTE SpinClock.fraction_changed TO SpinInterpolator.set_fraction
ROUTE SpinInterpolator.value_changed TO TextTransform.rotation
DEF BackgroundGroup Group {
  children [
      DEF GradualBackground Background {
      }
      DEF colorTypeConversionScript Script {
        inputOnly      SFColor	colorInput
        outputOnly     MFColor	colorsOutput

	url [ "ecmascript: // ### X3D Browser.print() not supported by all VRML97 viewers, instead simply using print()


function colorInput (eventValue) // Example source code
{
   colorsOutput = new MFColor(eventValue); // assigning value sends output event
// Browser.print('colorInput=' + eventValue + ', colorsOutput=' + colorsOutput + '\n');
}

            
" ]
      }
      DEF ColorAnimator ColorInterpolator {
        key [ 0.0 0.5 1.0 ]
        keyValue [ 0.9411765 1.0 1.0 0.29411766 0.0 0.50980395 0.9411765 1.0 1.0 ]
      }
      DEF ColorClock TimeSensor {
        cycleInterval 60.0
        loop TRUE
      }
  ]
ROUTE colorTypeConversionScript.colorsOutput TO GradualBackground.skyColor
ROUTE ColorAnimator.value_changed TO colorTypeConversionScript.colorInput
ROUTE ColorClock.fraction_changed TO ColorAnimator.set_fraction
}
