<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Immersive" version="3.3" xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
    <head>
	      <component name='Shaders' level='1'></component>
	      <component name='CubeMapTexturing' level='1'></component>
        <meta name='title' content='flowers4.x3d'/>
        <meta name='creator' content='John Carlson'/>
        <meta name='generator' content='manual'/>
        <meta name='identifier' content='https://coderextreme.net/X3DJSONLD/flowers4.x3d'/>
        <meta name='description' content='an animated flower'/>      
    </head>
    <Scene>
        <NavigationInfo type="&quot;EXAMINE&quot; &quot;ANY&quot;"/>
	<Background
            backUrl='"../resources/images/all_probes/stpeters_cross/stpeters_back.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"'
            bottomUrl='"../resources/images/all_probes/stpeters_cross/stpeters_bottom.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"'
            frontUrl='"../resources/images/all_probes/stpeters_cross/stpeters_front.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"'
            leftUrl='"../resources/images/all_probes/stpeters_cross/stpeters_left.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"'
            rightUrl='"../resources/images/all_probes/stpeters_cross/stpeters_right.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"'
            topUrl='"../resources/images/all_probes/stpeters_cross/stpeters_top.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"'
		></Background>
        <Transform DEF='transform' >
            <Shape>
                <Appearance>
                    <Material diffuseColor=".7 .7 .7" specularColor=".5 .5 .5" />
                    <ComposedCubeMapTexture>
                                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_back.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"' containerField="back"/>
                                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_bottom.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"' containerField="bottom"/>
                                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_front.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"' containerField="front"/>
                                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_left.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"' containerField="left"/>
                                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_right.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"' containerField="right"/>
                                <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_top.png" "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"' containerField="top"/>
                    </ComposedCubeMapTexture>
                    <ComposedShader DEF='shader' language="GLSL">
                        <field name='cube' type='SFInt32' accessType='inputOutput' value='0'/>

                        <field name='chromaticDispertion' accessType='inputOutput' type='SFVec3f' value='0.98 1.0 1.033'/>
                        <field name='bias' type='SFFloat' accessType='inputOutput' value='0.5'/>
                        <field name='scale' type='SFFloat' accessType='inputOutput' value='0.5'/>
                        <field name='power' type='SFFloat' accessType='inputOutput' value='2'/>
                  
                        <ShaderPart url='"../shaders/x3dom.vs" "https://coderextreme.net/X3DJSONLD/shaders/x3dom.vs"' type='VERTEX'></ShaderPart>
                        <ShaderPart url='"../shaders/pc_bubbles.fs" "https://coderextreme.net/X3DJSONLD/shaders/pc_bubbles.fs"' type='FRAGMENT'></ShaderPart>
                    </ComposedShader>
                </Appearance>
		<!--
                <Sphere>
		-->
                <IndexedFaceSet convex="false" DEF="Orbit" creaseAngle="0">
                    <Coordinate DEF="OrbitCoordinates"/>
                </IndexedFaceSet>
            </Shape>
        </Transform>
 
        <Script DEF="OrbitScript">
            <field accessType="inputOnly" name="set_fraction" type="SFFloat"/>
            <field accessType="inputOutput" name="coordinates" type="MFVec3f"/>
            <field accessType="outputOnly" name="coordIndexes" type="MFInt32"/>
<![CDATA[

ecmascript:

var e = 5;
var f = 5;
var g = 5;
var h = 5;

function initialize() {
     resolution = 100;
     updateCoordinates(resolution);
     var cis = [];
     for ( i = 0; i < resolution-1; i++) {
     	for ( j = 0; j < resolution-1; j++) {
	     cis.push(i*resolution+j);
	     cis.push(i*resolution+j+1);
	     cis.push((i+1)*resolution+j+1);
	     cis.push((i+1)*resolution+j);
	     cis.push(-1);
	}
    }
    coordIndexes = new MFInt32(cis);
}

function updateCoordinates(resolution) {
     theta = 0.0;
     phi = 0.0;
     delta = (2 * 3.141592653) / (resolution-1);
     var crds = [];
     for ( i = 0; i < resolution; i++) {
     	for ( j = 0; j < resolution; j++) {
		rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);
		crds.push(new SFVec3f(
			rho * Math.cos(phi) * Math.cos(theta),
			rho * Math.cos(phi) * Math.sin(theta),
			rho * Math.sin(phi)
		));
		theta += delta;
	}
	phi += delta;
     }
     coordinates = new MFVec3f(crds);
}

function set_fraction(fraction, eventTime) {
	choice = Math.floor(Math.random() * 4);
	switch (choice) {
	case 0:
		e += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 1:
		f += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 2:
		g += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	case 3:
		h += Math.floor(Math.random() * 2) * 2 - 1;
		break;
	}
	if (f < 1) {
		f = 10;
	}
	if (g < 1) {
		g = 4;
	}
	if (h < 1) {
		h = 4;
	}
	resolution = 100;
	updateCoordinates(resolution);
}
      ]]></Script>
        <TimeSensor DEF="Clock" cycleInterval="16" loop="true"/>
        <ROUTE fromField="coordIndexes" fromNode="OrbitScript"
               toField="set_coordIndex" toNode="Orbit"/>
        <ROUTE fromField="coordinates" fromNode="OrbitScript"
               toField="set_point" toNode="OrbitCoordinates"/>
        <ROUTE fromField="fraction_changed" fromNode="Clock"
               toField="set_fraction" toNode="OrbitScript"/>
    </Scene>   
</X3D>
