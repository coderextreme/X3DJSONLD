// Generated from c:/Users/john/X3DJSONLD/src/main/cplusplus/net/coderextreme/CPPONGrammar.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CPPONGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, WS=2, PRIMTYPE=3, STAR=4, BRACEOPEN=5, BRACECLOSE=6, IDENTIFIER=7, 
		INDEX=8, REFERENCE=9, EQUALS=10, PARENOPEN=11, PARENCLOSE=12, SEMI=13, 
		DOT=14, SET=15, ADD=16, BRACKETOPEN=17, BRACKETCLOSE=18, QUOTE=19, NOTQUOTE=20, 
		ESCAPEDQUOTE=21, ESCAPEDESCAPE=22, CR=23, NL=24, TAB=25, NEW=26, NOTENTER=27, 
		COMMA=28, INTEGER=29, FLOAT=30, BOOLEAN=31, COMMENT=32, CSTRING=33;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "WS", "PRIMTYPE", "STAR", "BRACEOPEN", "BRACECLOSE", "IDENTIFIER", 
			"INDEX", "REFERENCE", "EQUALS", "PARENOPEN", "PARENCLOSE", "SEMI", "DOT", 
			"SET", "ADD", "BRACKETOPEN", "BRACKETCLOSE", "QUOTE", "NOTQUOTE", "ESCAPEDQUOTE", 
			"ESCAPEDESCAPE", "CR", "NL", "TAB", "NEW", "NOTENTER", "COMMA", "INTEGER", 
			"FLOAT", "BOOLEAN", "COMMENT", "CSTRING"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'\\'", null, null, "'*'", "'{'", "'}'", null, null, "'&'", "'='", 
			"'('", "')'", "';'", "'.'", "'set'", "'add'", "'['", "']'", "'\"'", null, 
			"'\\\"'", "'\\\\'", null, null, null, "'new'", null, "','", null, null, 
			null, null, "'CString'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "WS", "PRIMTYPE", "STAR", "BRACEOPEN", "BRACECLOSE", "IDENTIFIER", 
			"INDEX", "REFERENCE", "EQUALS", "PARENOPEN", "PARENCLOSE", "SEMI", "DOT", 
			"SET", "ADD", "BRACKETOPEN", "BRACKETCLOSE", "QUOTE", "NOTQUOTE", "ESCAPEDQUOTE", 
			"ESCAPEDESCAPE", "CR", "NL", "TAB", "NEW", "NOTENTER", "COMMA", "INTEGER", 
			"FLOAT", "BOOLEAN", "COMMENT", "CSTRING"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CPPONGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CPPONGrammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 28:
			INTEGER_action((RuleContext)_localctx, actionIndex);
			break;
		case 29:
			FLOAT_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void INTEGER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:
			0,1
			break;
		}
	}
	private void FLOAT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:
			0,1
			break;
		case 2:
			0,1
			break;
		case 3:
			0,1
			break;
		case 4:
			0,1
			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u0000!\u00dc\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0001\u0000\u0001"+
		"\u0000\u0001\u0001\u0004\u0001G\b\u0001\u000b\u0001\f\u0001H\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0003\u0002R\b\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0004\u0006\\\b\u0006"+
		"\u000b\u0006\f\u0006]\u0001\u0006\u0001\u0006\u0001\u0007\u0004\u0007"+
		"c\b\u0007\u000b\u0007\f\u0007d\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n"+
		"\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001"+
		"\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001"+
		"\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u001a\u0004\u001a\u0094\b\u001a\u000b\u001a\f"+
		"\u001a\u0095\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c"+
		"\u0004\u001c\u009d\b\u001c\u000b\u001c\f\u001c\u009e\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0004\u001d\u00a4\b\u001d\u000b\u001d\f\u001d\u00a5"+
		"\u0001\u001d\u0001\u001d\u0001\u001d\u0004\u001d\u00ab\b\u001d\u000b\u001d"+
		"\f\u001d\u00ac\u0001\u001d\u0001\u001d\u0001\u001d\u0004\u001d\u00b2\b"+
		"\u001d\u000b\u001d\f\u001d\u00b3\u0001\u001d\u0001\u001d\u0001\u001d\u0004"+
		"\u001d\u00b9\b\u001d\u000b\u001d\f\u001d\u00ba\u0003\u001d\u00bd\b\u001d"+
		"\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001e\u0001\u001e\u0003\u001e\u00c8\b\u001e\u0001\u001f"+
		"\u0001\u001f\u0001\u001f\u0001\u001f\u0005\u001f\u00ce\b\u001f\n\u001f"+
		"\f\u001f\u00d1\t\u001f\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001"+
		" \u0001 \u0001 \u0001 \u0001 \u0000\u0000!\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!\u0001\u0000\f\u0003\u0000\t\n\r\r  \u0003"+
		"\u0000AZ__az\u0004\u000009AZ__az\u0002\u000009^^\u0001\u000009\u0001\u0000"+
		"\"\"\u0001\u0000\r\r\u0001\u0000\n\n\u0001\u0000\t\t\u0002\u0000\n\n\r"+
		"\r\u0002\u0000++--\u0001\u0000..\u00e9\u0000\u0001\u0001\u0000\u0000\u0000"+
		"\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0001C\u0001\u0000\u0000"+
		"\u0000\u0003F\u0001\u0000\u0000\u0000\u0005Q\u0001\u0000\u0000\u0000\u0007"+
		"S\u0001\u0000\u0000\u0000\tU\u0001\u0000\u0000\u0000\u000bW\u0001\u0000"+
		"\u0000\u0000\rY\u0001\u0000\u0000\u0000\u000fb\u0001\u0000\u0000\u0000"+
		"\u0011f\u0001\u0000\u0000\u0000\u0013h\u0001\u0000\u0000\u0000\u0015j"+
		"\u0001\u0000\u0000\u0000\u0017l\u0001\u0000\u0000\u0000\u0019n\u0001\u0000"+
		"\u0000\u0000\u001bp\u0001\u0000\u0000\u0000\u001dr\u0001\u0000\u0000\u0000"+
		"\u001fv\u0001\u0000\u0000\u0000!z\u0001\u0000\u0000\u0000#|\u0001\u0000"+
		"\u0000\u0000%~\u0001\u0000\u0000\u0000\'\u0080\u0001\u0000\u0000\u0000"+
		")\u0082\u0001\u0000\u0000\u0000+\u0085\u0001\u0000\u0000\u0000-\u0088"+
		"\u0001\u0000\u0000\u0000/\u008a\u0001\u0000\u0000\u00001\u008c\u0001\u0000"+
		"\u0000\u00003\u008e\u0001\u0000\u0000\u00005\u0093\u0001\u0000\u0000\u0000"+
		"7\u0097\u0001\u0000\u0000\u00009\u0099\u0001\u0000\u0000\u0000;\u00a0"+
		"\u0001\u0000\u0000\u0000=\u00c7\u0001\u0000\u0000\u0000?\u00c9\u0001\u0000"+
		"\u0000\u0000A\u00d4\u0001\u0000\u0000\u0000CD\u0005\\\u0000\u0000D\u0002"+
		"\u0001\u0000\u0000\u0000EG\u0007\u0000\u0000\u0000FE\u0001\u0000\u0000"+
		"\u0000GH\u0001\u0000\u0000\u0000HF\u0001\u0000\u0000\u0000HI\u0001\u0000"+
		"\u0000\u0000I\u0004\u0001\u0000\u0000\u0000JK\u0005i\u0000\u0000KL\u0005"+
		"n\u0000\u0000LR\u0005t\u0000\u0000MN\u0005c\u0000\u0000NO\u0005h\u0000"+
		"\u0000OP\u0005a\u0000\u0000PR\u0005r\u0000\u0000QJ\u0001\u0000\u0000\u0000"+
		"QM\u0001\u0000\u0000\u0000R\u0006\u0001\u0000\u0000\u0000ST\u0005*\u0000"+
		"\u0000T\b\u0001\u0000\u0000\u0000UV\u0005{\u0000\u0000V\n\u0001\u0000"+
		"\u0000\u0000WX\u0005}\u0000\u0000X\f\u0001\u0000\u0000\u0000Y[\u0007\u0001"+
		"\u0000\u0000Z\\\u0007\u0002\u0000\u0000[Z\u0001\u0000\u0000\u0000\\]\u0001"+
		"\u0000\u0000\u0000][\u0001\u0000\u0000\u0000]^\u0001\u0000\u0000\u0000"+
		"^_\u0001\u0000\u0000\u0000_`\u0007\u0003\u0000\u0000`\u000e\u0001\u0000"+
		"\u0000\u0000ac\u0007\u0004\u0000\u0000ba\u0001\u0000\u0000\u0000cd\u0001"+
		"\u0000\u0000\u0000db\u0001\u0000\u0000\u0000de\u0001\u0000\u0000\u0000"+
		"e\u0010\u0001\u0000\u0000\u0000fg\u0005&\u0000\u0000g\u0012\u0001\u0000"+
		"\u0000\u0000hi\u0005=\u0000\u0000i\u0014\u0001\u0000\u0000\u0000jk\u0005"+
		"(\u0000\u0000k\u0016\u0001\u0000\u0000\u0000lm\u0005)\u0000\u0000m\u0018"+
		"\u0001\u0000\u0000\u0000no\u0005;\u0000\u0000o\u001a\u0001\u0000\u0000"+
		"\u0000pq\u0005.\u0000\u0000q\u001c\u0001\u0000\u0000\u0000rs\u0005s\u0000"+
		"\u0000st\u0005e\u0000\u0000tu\u0005t\u0000\u0000u\u001e\u0001\u0000\u0000"+
		"\u0000vw\u0005a\u0000\u0000wx\u0005d\u0000\u0000xy\u0005d\u0000\u0000"+
		"y \u0001\u0000\u0000\u0000z{\u0005[\u0000\u0000{\"\u0001\u0000\u0000\u0000"+
		"|}\u0005]\u0000\u0000}$\u0001\u0000\u0000\u0000~\u007f\u0005\"\u0000\u0000"+
		"\u007f&\u0001\u0000\u0000\u0000\u0080\u0081\b\u0005\u0000\u0000\u0081"+
		"(\u0001\u0000\u0000\u0000\u0082\u0083\u0005\\\u0000\u0000\u0083\u0084"+
		"\u0005\"\u0000\u0000\u0084*\u0001\u0000\u0000\u0000\u0085\u0086\u0005"+
		"\\\u0000\u0000\u0086\u0087\u0005\\\u0000\u0000\u0087,\u0001\u0000\u0000"+
		"\u0000\u0088\u0089\u0007\u0006\u0000\u0000\u0089.\u0001\u0000\u0000\u0000"+
		"\u008a\u008b\u0007\u0007\u0000\u0000\u008b0\u0001\u0000\u0000\u0000\u008c"+
		"\u008d\u0007\b\u0000\u0000\u008d2\u0001\u0000\u0000\u0000\u008e\u008f"+
		"\u0005n\u0000\u0000\u008f\u0090\u0005e\u0000\u0000\u0090\u0091\u0005w"+
		"\u0000\u0000\u00914\u0001\u0000\u0000\u0000\u0092\u0094\b\t\u0000\u0000"+
		"\u0093\u0092\u0001\u0000\u0000\u0000\u0094\u0095\u0001\u0000\u0000\u0000"+
		"\u0095\u0093\u0001\u0000\u0000\u0000\u0095\u0096\u0001\u0000\u0000\u0000"+
		"\u00966\u0001\u0000\u0000\u0000\u0097\u0098\u0005,\u0000\u0000\u00988"+
		"\u0001\u0000\u0000\u0000\u0099\u009a\u0007\n\u0000\u0000\u009a\u009c\u0006"+
		"\u001c\u0000\u0000\u009b\u009d\u0007\u0004\u0000\u0000\u009c\u009b\u0001"+
		"\u0000\u0000\u0000\u009d\u009e\u0001\u0000\u0000\u0000\u009e\u009c\u0001"+
		"\u0000\u0000\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009f:\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a1\u0007\n\u0000\u0000\u00a1\u00bc\u0006\u001d\u0001"+
		"\u0000\u00a2\u00a4\u0007\u0004\u0000\u0000\u00a3\u00a2\u0001\u0000\u0000"+
		"\u0000\u00a4\u00a5\u0001\u0000\u0000\u0000\u00a5\u00a3\u0001\u0000\u0000"+
		"\u0000\u00a5\u00a6\u0001\u0000\u0000\u0000\u00a6\u00a7\u0001\u0000\u0000"+
		"\u0000\u00a7\u00a8\u0007\u000b\u0000\u0000\u00a8\u00bd\u0006\u001d\u0002"+
		"\u0000\u00a9\u00ab\u0007\u0004\u0000\u0000\u00aa\u00a9\u0001\u0000\u0000"+
		"\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000"+
		"\u0000\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad\u00ae\u0001\u0000\u0000"+
		"\u0000\u00ae\u00af\u0007\u000b\u0000\u0000\u00af\u00b1\u0006\u001d\u0003"+
		"\u0000\u00b0\u00b2\u0007\u0004\u0000\u0000\u00b1\u00b0\u0001\u0000\u0000"+
		"\u0000\u00b2\u00b3\u0001\u0000\u0000\u0000\u00b3\u00b1\u0001\u0000\u0000"+
		"\u0000\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00bd\u0001\u0000\u0000"+
		"\u0000\u00b5\u00b6\u0007\u000b\u0000\u0000\u00b6\u00b8\u0006\u001d\u0004"+
		"\u0000\u00b7\u00b9\u0007\u0004\u0000\u0000\u00b8\u00b7\u0001\u0000\u0000"+
		"\u0000\u00b9\u00ba\u0001\u0000\u0000\u0000\u00ba\u00b8\u0001\u0000\u0000"+
		"\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00bd\u0001\u0000\u0000"+
		"\u0000\u00bc\u00a3\u0001\u0000\u0000\u0000\u00bc\u00aa\u0001\u0000\u0000"+
		"\u0000\u00bc\u00b5\u0001\u0000\u0000\u0000\u00bd<\u0001\u0000\u0000\u0000"+
		"\u00be\u00bf\u0005t\u0000\u0000\u00bf\u00c0\u0005r\u0000\u0000\u00c0\u00c1"+
		"\u0005u\u0000\u0000\u00c1\u00c8\u0005e\u0000\u0000\u00c2\u00c3\u0005f"+
		"\u0000\u0000\u00c3\u00c4\u0005a\u0000\u0000\u00c4\u00c5\u0005l\u0000\u0000"+
		"\u00c5\u00c6\u0005s\u0000\u0000\u00c6\u00c8\u0005e\u0000\u0000\u00c7\u00be"+
		"\u0001\u0000\u0000\u0000\u00c7\u00c2\u0001\u0000\u0000\u0000\u00c8>\u0001"+
		"\u0000\u0000\u0000\u00c9\u00ca\u0005/\u0000\u0000\u00ca\u00cb\u0005/\u0000"+
		"\u0000\u00cb\u00cf\u0001\u0000\u0000\u0000\u00cc\u00ce\b\t\u0000\u0000"+
		"\u00cd\u00cc\u0001\u0000\u0000\u0000\u00ce\u00d1\u0001\u0000\u0000\u0000"+
		"\u00cf\u00cd\u0001\u0000\u0000\u0000\u00cf\u00d0\u0001\u0000\u0000\u0000"+
		"\u00d0\u00d2\u0001\u0000\u0000\u0000\u00d1\u00cf\u0001\u0000\u0000\u0000"+
		"\u00d2\u00d3\u0006\u001f\u0005\u0000\u00d3@\u0001\u0000\u0000\u0000\u00d4"+
		"\u00d5\u0005C\u0000\u0000\u00d5\u00d6\u0005S\u0000\u0000\u00d6\u00d7\u0005"+
		"t\u0000\u0000\u00d7\u00d8\u0005r\u0000\u0000\u00d8\u00d9\u0005i\u0000"+
		"\u0000\u00d9\u00da\u0005n\u0000\u0000\u00da\u00db\u0005g\u0000\u0000\u00db"+
		"B\u0001\u0000\u0000\u0000\u000e\u0000HQ]d\u0095\u009e\u00a5\u00ac\u00b3"+
		"\u00ba\u00bc\u00c7\u00cf\u0006\u0001\u001c\u0000\u0001\u001d\u0001\u0001"+
		"\u001d\u0002\u0001\u001d\u0003\u0001\u001d\u0004\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}