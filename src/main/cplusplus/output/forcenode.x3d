<?xml version="1.0" encoding="UTF-8" standalone="no" ?><X3D profile="Immersive" version="3.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" xsd:noNamespaceSchemaLocation="https://www.web3d.org/specifications/x3d-3.3.xsd"><head><meta content="John W Carlson" name="creator"/><meta content="December 13 2015" name="created"/><meta content="forcenode.x3d" name="title"/><meta content="https://coderextreme.net/X3DJSONLD/force.x3d" name="identifier"/><meta content="beginnings of a force directed graph in 3D" name="description"/><meta content="Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit" name="generator"/><meta content="21 November 2020" name="translated"/><meta content="X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html" name="generator"/><meta content="X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding" name="reference"/></head><Scene><ProtoDeclare name="node"><ProtoInterface><field accessType="inputOutput" name="position" type="SFVec3f" value="0 0 0"/></ProtoInterface><ProtoBody><Group><Transform DEF="transform"><IS><connect nodeField="translation" protoField="position"/></IS><Shape><Sphere containerField="geometry"/><Appearance containerField="appearance"><Material containerField="material" diffuseColor="1 0 0"/></Appearance></Shape><Transform translation="1 0 1"><Shape><Text containerField="geometry" string="&quot;Node&quot;"><FontStyle containerField="fontStyle" justify="&quot;MIDDLE&quot; &quot;MIDDLE&quot;" size="5.000000"/></Text><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0 0 1"/></Appearance></Shape></Transform></Transform><PositionInterpolator DEF="NodePosition" key="0 1" keyValue="0 0 0 0 5 0"/><Script DEF="MoveBall"><field accessType="inputOutput" name="translation" type="SFVec3f" value="50 50 0"/><field accessType="inputOutput" name="old" type="SFVec3f" value="0 0 0"/><field accessType="inputOnly" name="set_cycle" type="SFTime"/><field accessType="outputOnly" name="keyValue" type="MFVec3f"/><![CDATA[

ecmascript:
					function set_cycle(value) {
                                                old = translation;
						translation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);
                                                keyValue = new MFVec3f([old, translation]);
						// Browser.println(translation);
					}

]]></Script><TimeSensor DEF="nodeClock" cycleInterval="3.000000" loop="TRUE"/><ROUTE fromField="cycleTime" fromNode="nodeClock" toField="set_cycle" toNode="MoveBall"/><ROUTE fromField="fraction_changed" fromNode="nodeClock" toField="set_fraction" toNode="NodePosition"/><ROUTE fromField="keyValue" fromNode="MoveBall" toField="keyValue" toNode="NodePosition"/><ROUTE fromField="value_changed" fromNode="NodePosition" toField="set_translation" toNode="transform"/></Group></ProtoBody></ProtoDeclare><ProtoDeclare name="cylinder"><ProtoInterface><field accessType="inputOnly" name="set_positionA" type="SFVec3f"/><field accessType="inputOnly" name="set_positionB" type="SFVec3f"/></ProtoInterface><ProtoBody><Group><Shape><Extrusion DEF="extrusion" containerField="geometry" creaseAngle="0.785000" crossSection="1 0 0.92 -0.38 0.71 -0.71 0.38 -0.92 0 -1 -0.38 -0.92 -0.71 -0.71 -0.92 -0.38 -1 -0 -0.92 0.38 -0.71 0.71 -0.38 0.92 0 1 0.38 0.92 0.71 0.71 0.92 0.38 1 0" spine="0 -50 0 0 50 0"/><Appearance containerField="appearance"><Material containerField="material" diffuseColor="0 1 0"/></Appearance></Shape><Script DEF="MoveCylinder"><field accessType="inputOutput" name="spine" type="MFVec3f" value="0 -50 0 0 50 0"/><field accessType="inputOnly" name="set_endA" type="SFVec3f"/><field accessType="inputOnly" name="set_endB" type="SFVec3f"/><IS><connect nodeField="set_endA" protoField="set_positionA"/><connect nodeField="set_endB" protoField="set_positionB"/></IS><![CDATA[

ecmascript:

                function set_endA(value) {
		    if (typeof spine === 'undefined') {
		        spine = new MFVec3f([value, value]);
		    } else {
		        spine = new MFVec3f([value, spine[1]]);
		    }
                }

                function set_endB(value) {
		    if (typeof spine === 'undefined') {
		        spine = new MFVec3f([value, value]);
		    } else {
		        spine = new MFVec3f([spine[0], value]);
		    }
                }

                function set_spine(value) {
                    spine = value;
                }

]]></Script><ROUTE fromField="spine" fromNode="MoveCylinder" toField="set_spine" toNode="extrusion"/></Group></ProtoBody></ProtoDeclare><Transform DEF="HoldsContent" scale="0.1 0.1 0.1"><PlaneSensor DEF="clickGenerator" description="click on background to add nodes, click on nodes to add links" maxPosition="50 50" minPosition="-50 -50"/><ProtoInstance DEF="nodeA" name="node"><fieldValue name="position" value="0 0 0"/></ProtoInstance><ProtoInstance DEF="nodeB" name="node"><fieldValue name="position" value="50 50 50"/></ProtoInstance><ProtoInstance DEF="nodeC" name="node"><fieldValue name="position" value="-50 -50 -50"/></ProtoInstance><ProtoInstance DEF="nodeD" name="node"><fieldValue name="position" value="50 50 -50"/></ProtoInstance><ProtoInstance DEF="linkA" name="cylinder"><fieldValue name="set_positionA" value="0 0 0"/><fieldValue name="set_positionB" value="50 50 50"/></ProtoInstance><ProtoInstance DEF="linkB" name="cylinder"><fieldValue name="set_positionA" value="0 0 0"/><fieldValue name="set_positionB" value="-50 -50 -50"/></ProtoInstance><ProtoInstance DEF="linkC" name="cylinder"><fieldValue name="set_positionA" value="50 50 50"/><fieldValue name="set_positionB" value="50 50 -50"/></ProtoInstance></Transform><Script DEF="clickHandler"><field accessType="inputOutput" name="counter" type="SFInt32" value="0.000000"/><field accessType="outputOnly" name="node_changed" type="SFNode"/><field accessType="inputOnly" name="add_node" type="SFBool" value="FALSE"/><!--<field name="ModifiableNode" type="SFNode" accessType="inputOutput"> <Transform USE="HoldsContent"/> </field>--><![CDATA[]]></Script><ROUTE fromField="isActive" fromNode="clickGenerator" toField="add_node" toNode="clickHandler"/><ROUTE fromField="position" fromNode="nodeA" toField="set_positionA" toNode="linkA"/><ROUTE fromField="position" fromNode="nodeB" toField="set_positionB" toNode="linkA"/><ROUTE fromField="position" fromNode="nodeA" toField="set_positionA" toNode="linkB"/><ROUTE fromField="position" fromNode="nodeC" toField="set_positionB" toNode="linkB"/><ROUTE fromField="position" fromNode="nodeA" toField="set_positionA" toNode="linkC"/><ROUTE fromField="position" fromNode="nodeD" toField="set_positionB" toNode="linkC"/></Scene></X3D>