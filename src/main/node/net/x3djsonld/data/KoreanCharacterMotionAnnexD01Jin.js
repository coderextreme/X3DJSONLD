var java = require('java');
java.asyncOptions = {
  asyncSuffix: undefined,     // Don't generate node-style methods taking callbacks
  syncSuffix: "",              // Sync methods use the base name(!!)
  promiseSuffix: "Promise",   // Generate methods returning promises, using the suffix Promise.
  promisify: require('util').promisify, // Needs Node.js version 8 or greater, see comment below
  ifReadOnlySuffix: "_alt"
};
var autoclass = require('./X3Dautoclass');

// Javadoc annotations follow, see below for source.
/**
 * <p> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </p>
 <p> Related links: KoreanCharacterMotionAnnexD01Jin.java source, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">net.x3djsonld.data.KoreanCharacterMotionAnnexD01Jin&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Specifications/KoreanCharacterMotionAnnexD01Jin.x3d">KoreanCharacterMotionAnnexD01Jin.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Jin Hoon Lee and Min Joo Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translator </i> </td>
			<td> Chul Hee Jung and Myeong Won Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 31 March 2011 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translated </i> </td>
			<td> 1 November 2014 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> modified </i> </td>
			<td> 23 December 2021 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> KoreanCharacter00ReadMe.txt </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Specifications/KoreanCharacterHumanMotion_Infotech2014_140706.pdf">KoreanCharacterHumanMotion_Infotech2014_140706.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Specifications/KoreanCharactersIllustrated.pdf">KoreanCharactersIllustrated.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Specifications/KoreanCharacterMotionAnnexD01Jin.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Specifications/KoreanCharacterMotionAnnexD01Jin.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> 3DS MAX, <a href="http://www.autodesk.com/products/autodesk-3ds-max/overview" target="_blank">http://www.autodesk.com/products/autodesk-3ds-max/overview</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Suwon HAnim Converter </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Gnu Image Manipulation Program, <a href="http://www.gimp.org" target="_blank">http://www.gimp.org</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Specifications/../license.html">../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToNodeJS.xslt" target="_blank">X3dToNodeJS.xslt</a>
		stylesheet to create NodeJS source code from an <code>.x3d</code> scene.
	</p>

	* @author Jin Hoon Lee and Min Joo Lee
 */

function KoreanCharacterMotionAnnexD01Jin
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
KoreanCharacterMotionAnnexD01Jin.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: MetadataSet reference field, scene-graph level=4, element #22, 1 total value */
	this.MetadataSet_HAnimHumanoid.info_4_22_reference = new autoclass.SFString("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid");

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=8, element #27, 480 total numbers */
	this.IndexedFaceSet_8_27_coordIndex = new autoclass.MFInt32(java.newArray("int", [0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=8, element #27, 480 total numbers */
	this.IndexedFaceSet_8_27_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=9, element #27, 186 total numbers made up of 62 3-tuple values */
	this.Coordinate_9_27_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,10.79,0.1424,0.0,10.06,-2.825,-2.283,10.06,-2.428,-3.954,10.06,-1.948,-4.566,10.06,0.1424,-3.954,10.06,2.233,-2.283,10.06,2.712,0.0,10.06,3.11,2.283,10.06,2.712,3.954,10.06,2.233])))
	.append(new autoclass.MFVec3f(java.newArray("float", [4.566,10.06,0.1424,3.954,10.06,-1.948,2.283,10.06,-2.428,0.0,8.045,-4.614,-2.953,8.045,-3.977,-5.114,8.045,-2.236,-5.905,8.045,0.1424,-5.114,8.045,2.521,-2.953,8.045,3.645,0.0,8.045,4.282])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.953,8.045,3.645,5.114,8.045,2.521,5.905,8.045,0.1424,5.114,8.045,-2.236,2.953,8.045,-3.977,0.0,5.297,-5.018,-3.409,5.297,-4.282,-5.905,5.297,-2.272,-6.819,5.297,0.1424,-5.905,5.297,2.889])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-3.409,5.297,4.282,0.0,5.297,5.018,3.409,5.297,4.282,5.905,5.297,2.889,6.819,5.297,0.1424,5.905,5.297,-2.272,3.409,5.297,-4.282,0.0,2.548,-4.282,-2.953,2.548,-3.645,-5.114,2.548,-1.904])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-5.905,2.548,0.1424,-5.114,2.548,2.521,-2.953,2.548,3.645,0.0,2.548,4.282,2.953,2.548,3.645,5.114,2.548,2.521,5.905,2.548,0.1424,5.114,2.548,-1.904,2.953,2.548,-3.645,0.0,0.5362,-2.272])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.705,0.5362,-1.904,-2.953,0.5362,-1.231,-3.409,0.5362,0.1424,-2.953,0.5362,1.516,-1.705,0.5362,2.521,0.0,0.5362,2.889,1.705,0.5362,2.521,2.953,0.5362,1.516,3.409,0.5362,0.1424,2.953,0.5362,-1.231])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.705,0.5362,-1.904,0.0,-0.2003,0.1424])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=9, element #28, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_9_28_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.6211,0.5754,0.7851,0.572,0.7614,0.572,0.6907,0.5698,0.62,0.5698,0.6158,0.5702,0.5451,0.5702,0.4167,0.5698,0.5451,0.5702,0.6158,0.5702])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.62,0.5698,0.6907,0.5698,0.7614,0.572,0.8036,0.5346,0.7761,0.5346,0.6989,0.4838,0.6219,0.4428,0.6154,0.4438,0.5492,0.4639,0.4166,0.5346])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5492,0.4639,0.6154,0.4438,0.6219,0.4428,0.6989,0.4838,0.7761,0.5346,0.7912,0.4044,0.7635,0.4044,0.7042,0.3925,0.6194,0.3907,0.6148,0.3907])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.545,0.3974,0.4163,0.4938,0.545,0.3974,0.6148,0.3907,0.6194,0.3907,0.7042,0.3925,0.7635,0.4044,0.795,0.3772,0.7662,0.3772,0.6945,0.3645])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.6236,0.3695,0.616,0.3695,0.5438,0.378,0.416,0.453,0.5438,0.378,0.616,0.3695,0.6236,0.3695,0.6945,0.3645,0.7662,0.3772,0.7887,0.3451])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7635,0.3451,0.698,0.3508,0.6262,0.3508,0.6297,0.3503,0.5389,0.3503,0.4181,0.3884,0.5389,0.3503,0.6297,0.3503,0.6262,0.3508,0.698,0.3508])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7635,0.3451,0.6237,0.3398])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #36, 480 total numbers */
	this.IndexedFaceSet_9_36_coordIndex = new autoclass.MFInt32(java.newArray("int", [0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #36, 480 total numbers */
	this.IndexedFaceSet_9_36_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #36, 186 total numbers made up of 62 3-tuple values */
	this.Coordinate_10_36_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,1.053,0.0273,0.0,0.9123,-0.5414,-0.4375,0.9123,-0.4652,-0.7578,0.9123,-0.3733,-0.875,0.9123,0.0273,-0.7578,0.9123,0.4279,-0.4375,0.9123,0.5198,0.0,0.9123,0.596,0.4375,0.9123,0.5198,0.7578,0.9123,0.4279])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.875,0.9123,0.0273,0.7578,0.9123,-0.3733,0.4375,0.9123,-0.4652,0.0,0.5267,-0.8842,-0.5658,0.5267,-0.7621,-0.98,0.5267,-0.4285,-1.132,0.5267,0.0273,-0.98,0.5267,0.483,-0.5658,0.5267,0.6985,0.0,0.5267,0.8206])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.5658,0.5267,0.6985,0.98,0.5267,0.483,1.132,0.5267,0.0273,0.98,0.5267,-0.4285,0.5658,0.5267,-0.7621,0.0,0.0,-0.9616,-0.6534,0.0,-0.8206,-1.132,0.0,-0.4353,-1.307,0.0,0.0273,-1.132,0.0,0.5536])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.6534,0.0,0.8206,0.0,0.0,0.9616,0.6534,0.0,0.8206,1.132,0.0,0.5536,1.307,0.0,0.0273,1.132,0.0,-0.4353,0.6534,0.0,-0.8206,0.0,-0.5267,-0.8206,-0.5658,-0.5267,-0.6985,-0.98,-0.5267,-0.3648])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.132,-0.5267,0.0273,-0.98,-0.5267,0.483,-0.5658,-0.5267,0.6985,0.0,-0.5267,0.8206,0.5658,-0.5267,0.6985,0.98,-0.5267,0.483,1.132,-0.5267,0.0273,0.98,-0.5267,-0.3648,0.5658,-0.5267,-0.6985,0.0,-0.9123,-0.4353])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.3267,-0.9123,-0.3648,-0.5658,-0.9123,-0.2358,-0.6534,-0.9123,0.0273,-0.5658,-0.9123,0.2904,-0.3267,-0.9123,0.483,0.0,-0.9123,0.5536,0.3267,-0.9123,0.483,0.5658,-0.9123,0.2904,0.6534,-0.9123,0.0273,0.5658,-0.9123,-0.2358])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.3267,-0.9123,-0.3648,0.0,-1.053,0.0273])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #37, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_10_37_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.6211,0.5754,0.7851,0.572,0.7614,0.572,0.6907,0.5698,0.62,0.5698,0.6158,0.5702,0.5451,0.5702,0.4167,0.5698,0.5451,0.5702,0.6158,0.5702])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.62,0.5698,0.6907,0.5698,0.7614,0.572,0.8036,0.5346,0.7761,0.5346,0.6989,0.4838,0.6219,0.4428,0.6154,0.4438,0.5492,0.4639,0.4166,0.5346])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5492,0.4639,0.6154,0.4438,0.6219,0.4428,0.6989,0.4838,0.7761,0.5346,0.7912,0.4044,0.7635,0.4044,0.7042,0.3925,0.6194,0.3907,0.6148,0.3907])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.545,0.3974,0.4163,0.4938,0.545,0.3974,0.6148,0.3907,0.6194,0.3907,0.7042,0.3925,0.7635,0.4044,0.795,0.3772,0.7662,0.3772,0.6945,0.3645])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.6236,0.3695,0.616,0.3695,0.5438,0.378,0.416,0.453,0.5438,0.378,0.616,0.3695,0.6236,0.3695,0.6945,0.3645,0.7662,0.3772,0.7887,0.3451])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7635,0.3451,0.698,0.3508,0.6262,0.3508,0.6297,0.3503,0.5389,0.3503,0.4181,0.3884,0.5389,0.3503,0.6297,0.3503,0.6262,0.3508,0.698,0.3508])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7635,0.3451,0.6237,0.3398])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #45, 488 total numbers */
	this.IndexedFaceSet_10_45_coordIndex = new autoclass.MFInt32(java.newArray("int", [47,46,45,-1,45,44,43,-1,45,43,42,-1,47,45,42,-1,48,47,42,-1,0,1,8,-1,8,7,0,-1,1,2,9,-1,9,8,1,-1,2,3,10,-1,10,9,2,-1,3,4,11,-1,11,10,3,-1,4,5,12,-1,12,11,4,-1,5,6,13,-1,13,12,5,-1,6,0,7,-1,7,13,6,-1,7,8,15,-1,15,14,7,-1,8,9,16,-1,16,15,8,-1,9,10,17,-1,17,16,9,-1,10,11,18,-1,18,17,10,-1,11,12,19,-1,19,18,11,-1,12,13,20,-1,20,19,12,-1,13,7,14,-1,14,20,13,-1,14,15,22,-1,22,21,14,-1,15,16,23,-1,23,22,15,-1,16,17,24,-1,24,23,16,-1,17,18,25,-1,25,24,17,-1,18,19,26,-1,26,25,18,-1,19,20,27,-1,27,26,19,-1,20,14,21,-1,21,27,20,-1,56,57,58,-1,58,59,60,-1,58,60,61,-1,56,58,61,-1,62,56,61,-1,29,28,21,-1,21,22,29,-1,30,29,22,-1,22,23,30,-1,31,30,23,-1,23,24,31,-1,32,31,24,-1,24,25,32,-1,33,32,25,-1,25,26,33,-1,34,33,26,-1,26,27,34,-1,28,34,27,-1,27,21,28,-1,36,35,28,-1,28,29,36,-1,37,36,29,-1,29,30,37,-1,38,37,30,-1,30,31,38,-1,39,38,31,-1,31,32,39,-1,40,39,32,-1,32,33,40,-1,41,40,33,-1,33,34,41,-1,35,41,34,-1,34,28,35,-1,42,43,1,-1,1,0,42,-1,43,44,2,-1,2,1,43,-1,44,45,3,-1,3,2,44,-1,45,46,4,-1,4,3,45,-1,46,47,5,-1,5,4,46,-1,47,48,6,-1,6,5,47,-1,48,42,0,-1,0,6,48,-1,50,49,35,-1,35,36,50,-1,51,50,36,-1,36,37,51,-1,52,51,37,-1,37,38,52,-1,53,52,38,-1,38,39,53,-1,54,53,39,-1,39,40,54,-1,55,54,40,-1,40,41,55,-1,49,55,41,-1,41,35,49,-1,57,56,49,-1,49,50,57,-1,58,57,50,-1,50,51,58,-1,59,58,51,-1,51,52,59,-1,60,59,52,-1,52,53,60,-1,61,60,53,-1,53,54,61,-1,62,61,54,-1,54,55,62,-1,56,62,55,-1,55,49,56,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #45, 488 total numbers */
	this.IndexedFaceSet_10_45_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [5,4,3,-1,3,2,0,-1,3,0,1,-1,5,3,1,-1,6,5,1,-1,7,10,8,-1,8,9,7,-1,10,12,11,-1,11,8,10,-1,12,14,13,-1,13,11,12,-1,14,16,15,-1,15,13,14,-1,16,18,17,-1,17,15,16,-1,18,20,19,-1,19,17,18,-1,20,7,9,-1,9,19,20,-1,9,8,21,-1,21,22,9,-1,8,11,23,-1,23,21,8,-1,11,13,24,-1,24,23,11,-1,13,15,25,-1,25,24,13,-1,15,17,26,-1,26,25,15,-1,17,19,27,-1,27,26,17,-1,19,9,22,-1,22,27,19,-1,22,21,28,-1,28,29,22,-1,21,23,30,-1,30,28,21,-1,23,24,31,-1,31,30,23,-1,24,25,32,-1,32,31,24,-1,25,26,33,-1,33,32,25,-1,26,27,34,-1,34,33,26,-1,27,22,29,-1,29,34,27,-1,42,43,44,-1,44,45,46,-1,44,46,47,-1,42,44,47,-1,48,42,47,-1,35,36,29,-1,29,28,35,-1,37,35,28,-1,28,30,37,-1,38,37,30,-1,30,31,38,-1,39,38,31,-1,31,32,39,-1,40,39,32,-1,32,33,40,-1,41,40,33,-1,33,34,41,-1,36,41,34,-1,34,29,36,-1,51,52,49,-1,49,50,51,-1,54,51,50,-1,50,53,54,-1,56,54,53,-1,53,55,56,-1,58,56,55,-1,55,57,58,-1,60,58,57,-1,57,59,60,-1,62,60,59,-1,59,61,62,-1,52,62,61,-1,61,49,52,-1,1,0,10,-1,10,7,1,-1,0,2,12,-1,12,10,0,-1,2,3,14,-1,14,12,2,-1,3,4,16,-1,16,14,3,-1,4,5,18,-1,18,16,4,-1,5,6,20,-1,20,18,5,-1,6,1,7,-1,7,20,6,-1,63,64,52,-1,52,51,63,-1,65,63,51,-1,51,54,65,-1,66,65,54,-1,54,56,66,-1,67,66,56,-1,56,58,67,-1,68,67,58,-1,58,60,68,-1,69,68,60,-1,60,62,69,-1,64,69,62,-1,62,52,64,-1,43,42,64,-1,64,63,43,-1,44,43,63,-1,63,65,44,-1,45,44,65,-1,65,66,45,-1,46,45,66,-1,66,67,46,-1,47,46,67,-1,67,68,47,-1,48,47,68,-1,68,69,48,-1,42,48,69,-1,69,64,42,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #45, 189 total numbers made up of 63 3-tuple values */
	this.Coordinate_11_45_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [2.96,3.738,0.0,1.643,3.738,3.209,-1.316,3.738,4.002,-3.367,3.738,1.781,-3.367,3.738,-1.781,-1.316,3.738,-4.002,1.643,3.738,-3.209,2.96,-0.0114,0.0,1.643,-0.0114,3.209,-1.316,-0.0114,4.002])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-3.367,-0.0114,1.781,-3.367,-0.0114,-1.781,-1.316,-0.0114,-4.002,1.643,-0.0114,-3.209,2.96,-6.507,0.0,1.643,-6.507,3.209,-1.316,-6.507,4.002,-3.367,-6.507,1.781,-3.367,-6.507,-1.781,-1.316,-6.507,-4.002])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.643,-6.507,-3.209,3.367,-13.13,0.0,1.897,-13.13,3.582,-1.407,-13.13,4.467,-3.355,-13.13,1.988,-3.355,-13.13,-1.988,-1.407,-13.13,-4.467,1.897,-13.13,-3.582,2.146,-4.985,0.0,1.136,-4.985,2.462])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.135,-4.985,3.07,-2.633,-4.985,1.366,-2.633,-4.985,-1.366,-1.135,-4.985,-3.07,1.136,-4.985,-2.462,2.156,-11.45,0.0,1.225,-11.45,1.956,-0.8662,-11.45,2.439,-2.543,-11.45,1.085,-2.543,-11.45,-1.085])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.8662,-11.45,-2.439,1.225,-11.45,-1.956,2.051,5.729,0.0,1.076,5.729,2.375,-1.114,5.729,2.961,-2.87,5.729,1.318,-2.87,5.729,-1.318,-1.114,5.729,-2.961,1.076,5.729,-2.375,1.842,-15.12,0.0])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.03,-15.12,1.873,-0.7965,-15.12,2.295,-2.261,-15.12,1.113,-2.261,-15.12,-0.9478,-0.7965,-15.12,-2.13,1.03,-15.12,-1.708,0.6277,-16.1,0.0,0.2723,-16.1,0.912,-0.5262,-16.1,1.096,-1.167,-16.1,0.5796])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.167,-16.1,-0.4145,-0.5262,-16.1,-0.9313,0.2723,-16.1,-0.7469])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #46, 140 total numbers made up of 70 2-tuple values */
	this.TextureCoordinate_11_46_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.719,0.5576,0.6284,0.5576,0.7414,0.5576,0.6787,0.5576,0.5781,0.5576,0.5154,0.5576,0.5378,0.5576,0.6284,0.5029,0.7509,0.3997,0.6284,0.3997])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7509,0.5029,0.7811,0.3997,0.7811,0.5029,0.6964,0.3997,0.6964,0.5029,0.5604,0.3997,0.5604,0.5029,0.4756,0.3997,0.4756,0.5029,0.5059,0.3997])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5059,0.5029,0.7509,0.3197,0.6284,0.3197,0.7811,0.3197,0.6964,0.3197,0.5604,0.3197,0.4756,0.3197,0.5059,0.3197,0.7651,0.2166,0.6284,0.2166])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7989,0.2166,0.7043,0.2166,0.5525,0.2166,0.4579,0.2166,0.4917,0.2166,0.7224,0.263,0.6284,0.263,0.7456,0.263,0.6805,0.263,0.5762,0.263])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5112,0.263,0.5344,0.263,0.8705,0.5452,0.8705,0.5383,0.8705,0.5369,0.8705,0.5408,0.8705,0.5483,0.8705,0.5522,0.8705,0.5509,0.917,0.5452])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.917,0.5266,0.89,0.5304,0.89,0.5452,0.917,0.522,0.89,0.5268,0.917,0.5349,0.89,0.537,0.917,0.5555,0.89,0.5534,0.917,0.5684])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.89,0.5636,0.917,0.5638,0.89,0.56,0.8746,0.531,0.8746,0.5452,0.8746,0.5279,0.8746,0.5368,0.8746,0.5524,0.8746,0.5613,0.8746,0.5581])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #54, 300 total numbers */
	this.IndexedFaceSet_11_54_coordIndex = new autoclass.MFInt32(java.newArray("int", [4,3,2,-1,5,4,2,-1,2,1,0,-1,5,2,0,-1,6,5,0,-1,9,8,7,-1,7,10,9,-1,12,11,8,-1,8,9,12,-1,14,13,11,-1,11,12,14,-1,16,15,13,-1,13,14,16,-1,18,17,15,-1,15,16,18,-1,20,19,17,-1,17,18,20,-1,10,7,19,-1,19,20,10,-1,21,9,10,-1,10,22,21,-1,23,12,9,-1,9,21,23,-1,24,14,12,-1,12,23,24,-1,25,16,14,-1,14,24,25,-1,26,18,16,-1,16,25,26,-1,27,20,18,-1,18,26,27,-1,22,10,20,-1,20,27,22,-1,1,21,22,-1,22,0,1,-1,2,23,21,-1,21,1,2,-1,3,24,23,-1,23,2,3,-1,4,25,24,-1,24,3,4,-1,5,26,25,-1,25,4,5,-1,6,27,26,-1,26,5,6,-1,0,22,27,-1,27,6,0,-1,8,29,28,-1,28,7,8,-1,11,30,29,-1,29,8,11,-1,13,31,30,-1,30,11,13,-1,15,32,31,-1,31,13,15,-1,17,33,32,-1,32,15,17,-1,19,34,33,-1,33,17,19,-1,7,28,34,-1,34,19,7,-1,29,36,35,-1,35,28,29,-1,30,37,36,-1,36,29,30,-1,31,38,37,-1,37,30,31,-1,32,39,38,-1,38,31,32,-1,33,40,39,-1,39,32,33,-1,34,41,40,-1,40,33,34,-1,28,35,41,-1,41,34,28,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #54, 300 total numbers */
	this.IndexedFaceSet_11_54_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [4,3,2,-1,5,4,2,-1,2,1,0,-1,5,2,0,-1,6,5,0,-1,9,8,7,-1,7,10,9,-1,12,11,8,-1,8,9,12,-1,14,13,11,-1,11,12,14,-1,16,15,13,-1,13,14,16,-1,18,17,15,-1,15,16,18,-1,20,19,17,-1,17,18,20,-1,10,7,19,-1,19,20,10,-1,21,9,10,-1,10,22,21,-1,23,12,9,-1,9,21,23,-1,24,14,12,-1,12,23,24,-1,25,16,14,-1,14,24,25,-1,26,18,16,-1,16,25,26,-1,27,20,18,-1,18,26,27,-1,22,10,20,-1,20,27,22,-1,1,21,22,-1,22,0,1,-1,2,23,21,-1,21,1,2,-1,3,24,23,-1,23,2,3,-1,4,25,24,-1,24,3,4,-1,5,26,25,-1,25,4,5,-1,6,27,26,-1,26,5,6,-1,0,22,27,-1,27,6,0,-1,8,29,28,-1,28,7,8,-1,11,30,29,-1,29,8,11,-1,13,31,30,-1,30,11,13,-1,15,32,31,-1,31,13,15,-1,17,33,32,-1,32,15,17,-1,19,34,33,-1,33,17,19,-1,7,28,34,-1,34,19,7,-1,29,36,35,-1,35,28,29,-1,30,37,36,-1,36,29,30,-1,31,38,37,-1,37,30,31,-1,32,39,38,-1,38,31,32,-1,33,40,39,-1,39,32,33,-1,34,41,40,-1,40,33,34,-1,28,35,41,-1,41,34,28,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #54, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_12_54_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [0.7186,0.9688,0.0234,0.3632,0.9688,0.9354,-0.4353,0.9688,1.12,-1.076,0.9688,0.603,-1.076,0.9688,-0.3911,-0.4353,0.9688,-0.9079,0.3632,0.9688,-0.7235,2.337,-4.613,0.0234,1.46,-3.622,2.019,1.236,-1.628,2.42])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.118,-1.912,0.0234,-0.8111,-3.622,2.567,-0.7468,-1.628,2.903,-2.254,-4.613,1.255,-2.337,-1.912,0.9793,-2.254,-5.383,-1.368,-2.337,-1.912,-0.9325,-0.8111,-5.383,-2.903,-0.7468,-1.912,-2.368,1.46,-5.383,-2.355])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.236,-1.912,-1.885,1.121,-0.0032,1.896,1.933,-0.0032,0.0234,-0.7056,-0.0032,2.318,-2.17,-0.0032,1.136,-2.17,-0.0032,-0.9244,-0.7056,-0.0032,-2.061,1.121,-0.0032,-1.64,1.607,-12.92,0.0032,0.9216,-12.91,1.565])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.619,-12.91,1.951,-1.854,-12.92,0.8701,-1.854,-12.94,-0.9762,-0.619,-12.94,-1.742,0.9216,-12.94,-1.356,0.7072,-14.53,0.0239,0.3604,-14.53,0.814,-0.4188,-14.53,1.009,-1.044,-14.53,0.4624,-1.044,-14.54,-0.4714])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.4188,-14.54,-0.8587,0.3604,-14.54,-0.6635])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #55, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_12_55_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9309,0.5848,0.919,0.5848,0.8921,0.5848,0.8706,0.5848,0.8706,0.5848,0.8921,0.5848,0.919,0.5848,0.9845,0.5321,0.955,0.5475,0.9491,0.5599])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9788,0.5571,0.8787,0.5475,0.8825,0.5599,0.8302,0.5321,0.8291,0.5571,0.8302,0.52,0.8291,0.5571,0.8787,0.52,0.8825,0.5571,0.955,0.52])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9491,0.5571,0.9444,0.5755,0.9717,0.5755,0.8831,0.5755,0.8339,0.5755,0.8339,0.5755,0.8831,0.5755,0.9444,0.5755,0.9679,0.2444,0.9449,0.2445])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.8931,0.2445,0.8516,0.2444,0.8516,0.2442,0.8931,0.2442,0.9449,0.2442,0.9372,0.2243,0.9255,0.2244,0.8993,0.2244,0.8783,0.2243,0.8783,0.2243])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.8993,0.2243,0.9255,0.2243])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #63, 408 total numbers */
	this.IndexedFaceSet_12_63_coordIndex = new autoclass.MFInt32(java.newArray("int", [1,11,14,-1,3,4,5,-1,5,6,3,-1,1,0,4,-1,4,3,1,-1,0,2,5,-1,5,4,0,-1,11,1,3,-1,3,6,11,-1,15,2,0,-1,0,12,15,-1,0,1,13,-1,13,12,0,-1,13,1,14,-1,7,18,11,-1,8,6,5,-1,5,9,8,-1,7,8,9,-1,9,10,7,-1,10,9,5,-1,5,2,10,-1,11,6,8,-1,8,7,11,-1,15,16,10,-1,10,2,15,-1,10,16,17,-1,17,7,10,-1,17,18,7,-1,21,22,23,-1,23,24,25,-1,25,26,19,-1,23,25,19,-1,21,23,19,-1,20,21,19,-1,15,12,20,-1,20,19,15,-1,12,13,21,-1,21,20,12,-1,13,14,22,-1,22,21,13,-1,14,11,23,-1,23,22,14,-1,11,18,24,-1,24,23,11,-1,18,17,25,-1,25,24,18,-1,17,16,26,-1,26,25,17,-1,16,15,19,-1,19,26,16,-1,33,31,30,-1,30,27,33,-1,36,27,30,-1,30,38,36,-1,29,33,27,-1,27,28,29,-1,37,28,27,-1,27,36,37,-1,28,37,42,-1,42,29,28,-1,33,32,34,-1,34,31,33,-1,39,40,34,-1,34,32,39,-1,29,35,32,-1,32,33,29,-1,41,39,32,-1,32,35,41,-1,35,29,42,-1,42,41,35,-1,44,45,46,-1,44,46,47,-1,44,47,43,-1,51,52,53,-1,54,48,49,-1,53,54,49,-1,51,53,49,-1,51,49,50,-1,30,31,44,-1,44,43,30,-1,31,34,45,-1,45,44,31,-1,34,40,46,-1,46,45,34,-1,40,38,47,-1,47,46,40,-1,38,30,43,-1,43,47,38,-1,37,36,49,-1,49,48,37,-1,36,38,50,-1,50,49,36,-1,38,40,51,-1,51,50,38,-1,40,39,52,-1,52,51,40,-1,39,41,53,-1,53,52,39,-1,41,42,54,-1,54,53,41,-1,42,37,48,-1,48,54,42,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #63, 408 total numbers */
	this.IndexedFaceSet_12_63_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [1,14,18,-1,3,4,5,-1,5,6,3,-1,1,0,4,-1,4,3,1,-1,0,2,5,-1,5,4,0,-1,14,1,3,-1,3,6,14,-1,19,2,0,-1,0,16,19,-1,0,1,17,-1,17,16,0,-1,17,1,18,-1,7,23,15,-1,9,8,11,-1,11,10,9,-1,7,9,10,-1,10,12,7,-1,12,10,11,-1,11,13,12,-1,15,8,9,-1,9,7,15,-1,20,21,12,-1,12,13,20,-1,12,21,22,-1,22,7,12,-1,22,23,7,-1,26,27,28,-1,28,29,30,-1,30,31,24,-1,28,30,24,-1,26,28,24,-1,25,26,24,-1,19,16,25,-1,25,24,19,-1,16,17,26,-1,26,25,16,-1,17,18,27,-1,27,26,17,-1,18,14,28,-1,28,27,18,-1,15,23,29,-1,29,28,15,-1,23,22,30,-1,30,29,23,-1,22,21,31,-1,31,30,22,-1,21,20,24,-1,24,31,21,-1,34,38,37,-1,37,32,34,-1,46,32,37,-1,37,48,46,-1,35,34,32,-1,32,33,35,-1,47,33,32,-1,32,46,47,-1,33,47,53,-1,53,36,33,-1,40,39,42,-1,42,41,40,-1,49,50,42,-1,42,39,49,-1,44,43,39,-1,39,40,44,-1,51,49,39,-1,39,43,51,-1,43,45,52,-1,52,51,43,-1,55,56,57,-1,55,57,58,-1,55,58,54,-1,62,63,64,-1,65,59,60,-1,64,65,60,-1,62,64,60,-1,62,60,61,-1,37,38,55,-1,55,54,37,-1,41,42,56,-1,56,55,41,-1,42,50,57,-1,57,56,42,-1,50,48,58,-1,58,57,50,-1,48,37,54,-1,54,58,48,-1,47,46,60,-1,60,59,47,-1,46,48,61,-1,61,60,46,-1,48,50,62,-1,62,61,48,-1,50,49,63,-1,63,62,50,-1,49,51,64,-1,64,63,49,-1,51,52,65,-1,65,64,51,-1,53,47,59,-1,59,65,53,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #63, 165 total numbers made up of 55 3-tuple values */
	this.Coordinate_13_63_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [0.9768,-0.0192,-1.681,1.657,-0.0192,0.4309,0.0,-0.0192,-1.681,1.403,0.7316,0.354,0.8174,0.7316,-1.463,0.0,0.7316,-1.463,0.0,0.7316,1.471,-1.657,-0.0192,0.4309,-1.403,0.7316,0.354,-0.8174,0.7316,-1.463])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.9768,-0.0192,-1.681,0.0,-0.0192,1.75,1.109,-0.6007,-2.046,2.045,-0.6007,0.4309,1.695,-0.296,1.429,0.0,-0.6007,-2.046,-1.109,-0.6007,-2.046,-2.045,-0.6007,0.4309,-1.695,-0.296,1.429,0.0,-1.207,-1.841])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.023,-1.207,-1.841,1.913,-1.223,0.5161,1.601,-0.9325,1.406,0.0,-0.6582,1.708,-1.601,-0.9325,1.406,-1.913,-1.223,0.5161,-1.023,-1.207,-1.841,1.409,-1.925,-2.878,1.409,-3.947,-1.681,0.0,-3.947,-1.681])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.109,-0.6007,-2.046,0.0,-0.6007,-2.046,-1.409,-1.925,-2.878,0.0,-1.925,-2.878,-1.109,-0.6007,-2.046,-1.409,-3.947,-1.681,2.927,-1.925,0.4309,2.089,-3.947,0.4309,2.045,-0.6007,0.4309,-2.927,-1.925,0.4309])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.045,-0.6007,0.4309,-2.089,-3.947,0.4309,0.0,-3.947,0.4309,0.9442,-0.3153,-1.692,0.0,-0.3153,-1.692,-0.9442,-0.3153,-1.692,-1.7,-0.3153,0.3093,1.7,-0.3153,0.3093,1.86,-3.793,1.364,2.541,-1.963,1.364])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.861,-0.9431,1.364,-1.861,-0.9431,1.364,-2.541,-1.963,1.364,-1.86,-3.793,1.364,0.0,-3.793,1.364])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #64, 132 total numbers made up of 66 2-tuple values */
	this.TextureCoordinate_13_64_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3819,0.171,0.4216,0.1651,0.3819,0.171,0.4216,0.1651,0.3819,0.171,0.3819,0.171,0.4637,0.1714,0.4216,0.1651,0.4637,0.1714,0.4216,0.1651])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3819,0.171,0.3819,0.171,0.3819,0.171,0.3819,0.171,0.4637,0.1714,0.4637,0.1714,0.3861,0.1398,0.4244,0.1312,0.4394,0.1472,0.3836,0.1404])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3836,0.1404,0.3861,0.1398,0.4244,0.1312,0.4394,0.1472,0.3836,0.1404,0.3861,0.1398,0.4244,0.1312,0.4394,0.1472,0.4637,0.1714,0.4394,0.1472])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4244,0.1312,0.3861,0.1398,0.3873,0.0706,0.3871,0.0221,0.3873,0.0706,0.3871,0.0221,0.3871,0.0221,0.3861,0.1398,0.3836,0.1404,0.3873,0.0706])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3873,0.0706,0.3836,0.1404,0.3861,0.1398,0.3871,0.0221,0.3871,0.0221,0.3871,0.0221,0.433,0.0595,0.4411,0.0186,0.4244,0.1312,0.433,0.0595])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4244,0.1312,0.4411,0.0186,0.4411,0.0186,0.4411,0.0186,0.3861,0.1398,0.3836,0.1404,0.3861,0.1398,0.4244,0.1312,0.4244,0.1312,0.4411,0.0186])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.433,0.0595,0.4244,0.1312,0.4244,0.1312,0.433,0.0595,0.4411,0.0186,0.4411,0.0186])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=13, element #72, 264 total numbers */
	this.IndexedFaceSet_13_72_coordIndex = new autoclass.MFInt32(java.newArray("int", [3,4,10,-1,3,10,11,-1,0,3,11,-1,1,0,11,-1,11,12,1,-1,1,12,16,-1,16,9,1,-1,2,17,10,-1,10,4,2,-1,13,8,6,-1,14,13,6,-1,5,14,6,-1,7,15,14,-1,14,5,7,-1,7,9,16,-1,16,15,7,-1,2,8,13,-1,13,17,2,-1,20,21,22,-1,20,22,23,-1,20,23,24,-1,19,20,24,-1,19,24,18,-1,0,1,19,-1,19,18,0,-1,1,9,20,-1,20,19,1,-1,9,7,21,-1,21,20,9,-1,7,5,22,-1,22,21,7,-1,5,6,23,-1,23,22,5,-1,6,3,24,-1,24,23,6,-1,3,0,18,-1,18,24,3,-1,6,8,2,-1,3,6,2,-1,4,3,2,-1,28,26,25,-1,25,29,28,-1,35,27,26,-1,26,28,35,-1,27,35,40,-1,25,26,31,-1,31,30,25,-1,31,26,27,-1,27,32,31,-1,32,27,40,-1,40,41,32,-1,42,29,25,-1,25,30,42,-1,28,29,34,-1,34,33,28,-1,35,28,33,-1,33,36,35,-1,36,40,35,-1,34,37,38,-1,38,33,34,-1,38,39,36,-1,36,33,38,-1,39,41,40,-1,40,36,39,-1,42,37,34,-1,34,29,42,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=13, element #72, 264 total numbers */
	this.IndexedFaceSet_13_72_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [4,5,12,-1,4,12,13,-1,0,4,13,-1,1,0,13,-1,13,14,1,-1,1,14,19,-1,19,3,1,-1,2,21,12,-1,12,5,2,-1,15,10,7,-1,16,15,7,-1,6,16,7,-1,8,17,16,-1,16,6,8,-1,8,11,18,-1,18,17,8,-1,9,10,15,-1,15,20,9,-1,24,25,26,-1,24,26,27,-1,24,27,28,-1,23,24,28,-1,23,28,22,-1,0,1,23,-1,23,22,0,-1,1,3,24,-1,24,23,1,-1,11,8,25,-1,25,24,11,-1,8,6,26,-1,26,25,8,-1,6,7,27,-1,27,26,6,-1,7,4,28,-1,28,27,7,-1,4,0,22,-1,22,28,4,-1,7,10,9,-1,4,7,9,-1,5,4,9,-1,30,32,31,-1,31,29,30,-1,33,34,32,-1,32,30,33,-1,34,33,35,-1,31,32,37,-1,37,36,31,-1,37,32,34,-1,34,38,37,-1,38,34,35,-1,35,39,38,-1,40,29,31,-1,31,36,40,-1,41,44,43,-1,43,42,41,-1,45,41,42,-1,42,46,45,-1,46,50,45,-1,43,47,48,-1,48,42,43,-1,48,49,46,-1,46,42,48,-1,49,51,50,-1,50,46,49,-1,52,47,43,-1,43,44,52,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=14, element #72, 129 total numbers made up of 43 3-tuple values */
	this.Coordinate_14_72_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [2.927,-1.627,-1.013,2.089,-3.648,-1.013,0.0,0.2797,0.3064,2.045,-0.3017,-1.013,1.695,0.0029,-0.0151,-2.927,-1.627,-1.013,-2.045,-0.3017,-1.013,-2.089,-3.648,-1.013,-1.695,0.0029,-0.0151,0.0,-3.648,-1.013])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.74,-0.3226,1.158,2.661,-1.866,0.9192,2.14,-3.648,0.9192,-1.74,-0.3226,1.158,-2.661,-1.866,0.9192,-2.14,-3.648,0.9192,0.0,-3.648,0.9192,0.0,-0.0274,1.661,2.405,-1.656,-1.915,1.75,-2.942,-1.915])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,-2.942,-1.915,-1.75,-2.942,-1.915,-2.405,-1.656,-1.915,-1.742,-0.5681,-1.915,1.742,-0.5681,-1.915,1.784,-0.648,2.332,2.216,-2.267,4.144,2.216,-3.648,3.776,0.0,-2.267,5.463,0.0,-0.5463,3.95])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.74,-0.3226,1.158,2.661,-1.866,0.9192,2.14,-3.648,0.9192,-2.216,-2.267,4.144,-1.784,-0.648,2.332,0.0,-3.648,5.096,-2.216,-3.648,3.776,-1.74,-0.3226,1.158,-2.661,-1.866,0.9192,-2.14,-3.648,0.9192])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,-3.648,3.776,0.0,-3.648,0.9192,0.0,-0.0274,1.661])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=14, element #73, 106 total numbers made up of 53 2-tuple values */
	this.TextureCoordinate_14_73_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.433,0.0595,0.4411,0.0186,0.4637,0.1714,0.4411,0.0186,0.4244,0.1312,0.4394,0.1472,0.433,0.0595,0.4244,0.1312,0.4411,0.0186,0.4637,0.1714])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4394,0.1472,0.4411,0.0186,0.464,0.1246,0.4607,0.0558,0.4904,0.0166,0.464,0.1246,0.4607,0.0558,0.4904,0.0166,0.4949,0.0186,0.4949,0.0186])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4868,0.1432,0.4868,0.1432,0.433,0.0595,0.4411,0.0186,0.4411,0.0186,0.4411,0.0186,0.433,0.0595,0.4244,0.1312,0.4244,0.1312,0.532,0.098])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5645,0.0707,0.4885,0.102,0.5026,0.044,0.5945,0.0186,0.5487,0.0186,0.5487,0.0186,0.464,0.1246,0.4607,0.0558,0.4904,0.0166,0.4949,0.0186])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4868,0.1432,0.5645,0.0707,0.5026,0.044,0.4885,0.102,0.532,0.098,0.5945,0.0186,0.5487,0.0186,0.464,0.1246,0.4607,0.0558,0.4904,0.0166])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5487,0.0186,0.4949,0.0186,0.4868,0.1432])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #85, 488 total numbers */
	this.IndexedFaceSet_10_85_coordIndex = new autoclass.MFInt32(java.newArray("int", [43,44,45,-1,42,43,45,-1,45,46,47,-1,42,45,47,-1,48,42,47,-1,0,7,8,-1,8,1,0,-1,1,8,9,-1,9,2,1,-1,2,9,10,-1,10,3,2,-1,3,10,11,-1,11,4,3,-1,4,11,12,-1,12,5,4,-1,5,12,13,-1,13,6,5,-1,6,13,7,-1,7,0,6,-1,7,14,15,-1,15,8,7,-1,8,15,16,-1,16,9,8,-1,9,16,17,-1,17,10,9,-1,10,17,18,-1,18,11,10,-1,11,18,19,-1,19,12,11,-1,12,19,20,-1,20,13,12,-1,13,20,14,-1,14,7,13,-1,14,21,22,-1,22,15,14,-1,15,22,23,-1,23,16,15,-1,16,23,24,-1,24,17,16,-1,17,24,25,-1,25,18,17,-1,18,25,26,-1,26,19,18,-1,19,26,27,-1,27,20,19,-1,20,27,21,-1,21,14,20,-1,60,59,58,-1,61,60,58,-1,58,57,56,-1,61,58,56,-1,62,61,56,-1,29,22,21,-1,21,28,29,-1,30,23,22,-1,22,29,30,-1,31,24,23,-1,23,30,31,-1,32,25,24,-1,24,31,32,-1,33,26,25,-1,25,32,33,-1,34,27,26,-1,26,33,34,-1,28,21,27,-1,27,34,28,-1,36,29,28,-1,28,35,36,-1,37,30,29,-1,29,36,37,-1,38,31,30,-1,30,37,38,-1,39,32,31,-1,31,38,39,-1,40,33,32,-1,32,39,40,-1,41,34,33,-1,33,40,41,-1,35,28,34,-1,34,41,35,-1,42,0,1,-1,1,43,42,-1,43,1,2,-1,2,44,43,-1,44,2,3,-1,3,45,44,-1,45,3,4,-1,4,46,45,-1,46,4,5,-1,5,47,46,-1,47,5,6,-1,6,48,47,-1,48,6,0,-1,0,42,48,-1,50,36,35,-1,35,49,50,-1,51,37,36,-1,36,50,51,-1,52,38,37,-1,37,51,52,-1,53,39,38,-1,38,52,53,-1,54,40,39,-1,39,53,54,-1,55,41,40,-1,40,54,55,-1,49,35,41,-1,41,55,49,-1,57,50,49,-1,49,56,57,-1,58,51,50,-1,50,57,58,-1,59,52,51,-1,51,58,59,-1,60,53,52,-1,52,59,60,-1,61,54,53,-1,53,60,61,-1,62,55,54,-1,54,61,62,-1,56,49,55,-1,55,62,56,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #85, 488 total numbers */
	this.IndexedFaceSet_10_85_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [0,2,3,-1,1,0,3,-1,3,4,5,-1,1,3,5,-1,6,1,5,-1,7,9,8,-1,8,10,7,-1,10,8,11,-1,11,12,10,-1,12,11,13,-1,13,14,12,-1,14,13,15,-1,15,16,14,-1,16,15,17,-1,17,18,16,-1,18,17,19,-1,19,20,18,-1,20,19,9,-1,9,7,20,-1,9,22,21,-1,21,8,9,-1,8,21,23,-1,23,11,8,-1,11,23,24,-1,24,13,11,-1,13,24,25,-1,25,15,13,-1,15,25,26,-1,26,17,15,-1,17,26,27,-1,27,19,17,-1,19,27,22,-1,22,9,19,-1,22,29,28,-1,28,21,22,-1,21,28,30,-1,30,23,21,-1,23,30,31,-1,31,24,23,-1,24,31,32,-1,32,25,24,-1,25,32,33,-1,33,26,25,-1,26,33,34,-1,34,27,26,-1,27,34,29,-1,29,22,27,-1,46,45,44,-1,47,46,44,-1,44,43,42,-1,47,44,42,-1,48,47,42,-1,35,28,29,-1,29,36,35,-1,37,30,28,-1,28,35,37,-1,38,31,30,-1,30,37,38,-1,39,32,31,-1,31,38,39,-1,40,33,32,-1,32,39,40,-1,41,34,33,-1,33,40,41,-1,36,29,34,-1,34,41,36,-1,51,50,49,-1,49,52,51,-1,54,53,50,-1,50,51,54,-1,56,55,53,-1,53,54,56,-1,58,57,55,-1,55,56,58,-1,60,59,57,-1,57,58,60,-1,62,61,59,-1,59,60,62,-1,52,49,61,-1,61,62,52,-1,1,7,10,-1,10,0,1,-1,0,10,12,-1,12,2,0,-1,2,12,14,-1,14,3,2,-1,3,14,16,-1,16,4,3,-1,4,16,18,-1,18,5,4,-1,5,18,20,-1,20,6,5,-1,6,20,7,-1,7,1,6,-1,63,51,52,-1,52,64,63,-1,65,54,51,-1,51,63,65,-1,66,56,54,-1,54,65,66,-1,67,58,56,-1,56,66,67,-1,68,60,58,-1,58,67,68,-1,69,62,60,-1,60,68,69,-1,64,52,62,-1,62,69,64,-1,43,63,64,-1,64,42,43,-1,44,65,63,-1,63,43,44,-1,45,66,65,-1,65,44,45,-1,46,67,66,-1,66,45,46,-1,47,68,67,-1,67,46,47,-1,48,69,68,-1,68,47,48,-1,42,64,69,-1,69,48,42,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #85, 189 total numbers made up of 63 3-tuple values */
	this.Coordinate_11_85_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.96,3.738,0.0,-1.643,3.738,3.209,1.316,3.738,4.002,3.367,3.738,1.781,3.367,3.738,-1.781,1.316,3.738,-4.002,-1.643,3.738,-3.209,-2.96,-0.0114,0.0,-1.643,-0.0114,3.209,1.316,-0.0114,4.002])))
	.append(new autoclass.MFVec3f(java.newArray("float", [3.367,-0.0114,1.781,3.367,-0.0114,-1.781,1.316,-0.0114,-4.002,-1.643,-0.0114,-3.209,-2.96,-6.507,0.0,-1.643,-6.507,3.209,1.316,-6.507,4.002,3.367,-6.507,1.781,3.367,-6.507,-1.781,1.316,-6.507,-4.002])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.643,-6.507,-3.209,-3.367,-13.13,0.0,-1.897,-13.13,3.582,1.407,-13.13,4.467,3.355,-13.13,1.988,3.355,-13.13,-1.988,1.407,-13.13,-4.467,-1.897,-13.13,-3.582,-2.146,-4.985,0.0,-1.136,-4.985,2.462])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.135,-4.985,3.07,2.633,-4.985,1.366,2.633,-4.985,-1.366,1.135,-4.985,-3.07,-1.136,-4.985,-2.462,-2.156,-11.45,0.0,-1.225,-11.45,1.956,0.8662,-11.45,2.439,2.543,-11.45,1.085,2.543,-11.45,-1.085])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.8662,-11.45,-2.439,-1.225,-11.45,-1.956,-2.051,5.729,0.0,-1.076,5.729,2.375,1.114,5.729,2.961,2.87,5.729,1.318,2.87,5.729,-1.318,1.114,5.729,-2.961,-1.076,5.729,-2.375,-1.842,-15.12,0.0])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.03,-15.12,1.873,0.7965,-15.12,2.295,2.261,-15.12,1.113,2.261,-15.12,-0.9478,0.7965,-15.12,-2.13,-1.03,-15.12,-1.708,-0.6277,-16.1,0.0,-0.2723,-16.1,0.912,0.5262,-16.1,1.096,1.167,-16.1,0.5796])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.167,-16.1,-0.4145,0.5262,-16.1,-0.9313,-0.2723,-16.1,-0.7469])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #86, 140 total numbers made up of 70 2-tuple values */
	this.TextureCoordinate_11_86_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.719,0.5576,0.6284,0.5576,0.7414,0.5576,0.6787,0.5576,0.5781,0.5576,0.5154,0.5576,0.5378,0.5576,0.6284,0.5029,0.7509,0.3997,0.6284,0.3997])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7509,0.5029,0.7811,0.3997,0.7811,0.5029,0.6964,0.3997,0.6964,0.5029,0.5604,0.3997,0.5604,0.5029,0.4756,0.3997,0.4756,0.5029,0.5059,0.3997])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5059,0.5029,0.7509,0.3197,0.6284,0.3197,0.7811,0.3197,0.6964,0.3197,0.5604,0.3197,0.4756,0.3197,0.5059,0.3197,0.7651,0.2166,0.6284,0.2166])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7989,0.2166,0.7043,0.2166,0.5525,0.2166,0.4579,0.2166,0.4917,0.2166,0.7224,0.263,0.6284,0.263,0.7456,0.263,0.6805,0.263,0.5762,0.263])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5112,0.263,0.5344,0.263,0.8705,0.5452,0.8705,0.5383,0.8705,0.5369,0.8705,0.5408,0.8705,0.5483,0.8705,0.5522,0.8705,0.5509,0.917,0.5452])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.917,0.5266,0.89,0.5304,0.89,0.5452,0.917,0.522,0.89,0.5268,0.917,0.5349,0.89,0.537,0.917,0.5555,0.89,0.5534,0.917,0.5684])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.89,0.5636,0.917,0.5638,0.89,0.56,0.8746,0.531,0.8746,0.5452,0.8746,0.5279,0.8746,0.5368,0.8746,0.5524,0.8746,0.5613,0.8746,0.5581])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #94, 300 total numbers */
	this.IndexedFaceSet_11_94_coordIndex = new autoclass.MFInt32(java.newArray("int", [0,1,2,-1,2,3,4,-1,2,4,5,-1,0,2,5,-1,6,0,5,-1,9,10,7,-1,7,8,9,-1,12,9,8,-1,8,11,12,-1,14,12,11,-1,11,13,14,-1,16,14,13,-1,13,15,16,-1,18,16,15,-1,15,17,18,-1,20,18,17,-1,17,19,20,-1,10,20,19,-1,19,7,10,-1,21,22,10,-1,10,9,21,-1,23,21,9,-1,9,12,23,-1,24,23,12,-1,12,14,24,-1,25,24,14,-1,14,16,25,-1,26,25,16,-1,16,18,26,-1,27,26,18,-1,18,20,27,-1,22,27,20,-1,20,10,22,-1,1,0,22,-1,22,21,1,-1,2,1,21,-1,21,23,2,-1,3,2,23,-1,23,24,3,-1,4,3,24,-1,24,25,4,-1,5,4,25,-1,25,26,5,-1,6,5,26,-1,26,27,6,-1,0,6,27,-1,27,22,0,-1,8,7,28,-1,28,29,8,-1,11,8,29,-1,29,30,11,-1,13,11,30,-1,30,31,13,-1,15,13,31,-1,31,32,15,-1,17,15,32,-1,32,33,17,-1,19,17,33,-1,33,34,19,-1,7,19,34,-1,34,28,7,-1,29,28,35,-1,35,36,29,-1,30,29,36,-1,36,37,30,-1,31,30,37,-1,37,38,31,-1,32,31,38,-1,38,39,32,-1,33,32,39,-1,39,40,33,-1,34,33,40,-1,40,41,34,-1,28,34,41,-1,41,35,28,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #94, 300 total numbers */
	this.IndexedFaceSet_11_94_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [0,1,2,-1,2,3,4,-1,2,4,5,-1,0,2,5,-1,6,0,5,-1,9,10,7,-1,7,8,9,-1,12,9,8,-1,8,11,12,-1,14,12,11,-1,11,13,14,-1,16,14,13,-1,13,15,16,-1,18,16,15,-1,15,17,18,-1,20,18,17,-1,17,19,20,-1,10,20,19,-1,19,7,10,-1,21,22,10,-1,10,9,21,-1,23,21,9,-1,9,12,23,-1,24,23,12,-1,12,14,24,-1,25,24,14,-1,14,16,25,-1,26,25,16,-1,16,18,26,-1,27,26,18,-1,18,20,27,-1,22,27,20,-1,20,10,22,-1,1,0,22,-1,22,21,1,-1,2,1,21,-1,21,23,2,-1,3,2,23,-1,23,24,3,-1,4,3,24,-1,24,25,4,-1,5,4,25,-1,25,26,5,-1,6,5,26,-1,26,27,6,-1,0,6,27,-1,27,22,0,-1,8,7,28,-1,28,29,8,-1,11,8,29,-1,29,30,11,-1,13,11,30,-1,30,31,13,-1,15,13,31,-1,31,32,15,-1,17,15,32,-1,32,33,17,-1,19,17,33,-1,33,34,19,-1,7,19,34,-1,34,28,7,-1,29,28,35,-1,35,36,29,-1,30,29,36,-1,36,37,30,-1,31,30,37,-1,37,38,31,-1,32,31,38,-1,38,39,32,-1,33,32,39,-1,39,40,33,-1,34,33,40,-1,40,41,34,-1,28,34,41,-1,41,35,28,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #94, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_12_94_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.7186,0.9688,0.0234,-0.3632,0.9688,0.9354,0.4353,0.9688,1.12,1.076,0.9688,0.603,1.076,0.9688,-0.3911,0.4353,0.9688,-0.9079,-0.3632,0.9688,-0.7235,-2.337,-4.613,0.0234,-1.46,-3.622,2.019,-1.236,-1.628,2.42])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.118,-1.912,0.0234,0.8111,-3.622,2.567,0.7468,-1.628,2.903,2.254,-4.613,1.255,2.337,-1.912,0.9793,2.254,-5.383,-1.368,2.337,-1.912,-0.9325,0.8111,-5.383,-2.903,0.7468,-1.912,-2.368,-1.46,-5.383,-2.355])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.236,-1.912,-1.885,-1.121,-0.0032,1.896,-1.933,-0.0032,0.0234,0.7056,-0.0032,2.318,2.17,-0.0032,1.136,2.17,-0.0032,-0.9244,0.7056,-0.0032,-2.061,-1.121,-0.0032,-1.64,-1.607,-12.92,0.0032,-0.9216,-12.91,1.565])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.619,-12.91,1.951,1.854,-12.92,0.8701,1.854,-12.94,-0.9762,0.619,-12.94,-1.742,-0.9216,-12.94,-1.356,-0.7072,-14.53,0.0239,-0.3604,-14.53,0.814,0.4188,-14.53,1.009,1.044,-14.53,0.4624,1.044,-14.54,-0.4714])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.4188,-14.54,-0.8587,-0.3604,-14.54,-0.6635])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #95, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_12_95_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9309,0.5848,0.919,0.5848,0.8921,0.5848,0.8706,0.5848,0.8706,0.5848,0.8921,0.5848,0.919,0.5848,0.9845,0.5321,0.955,0.5475,0.9491,0.5599])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9788,0.5571,0.8787,0.5475,0.8825,0.5599,0.8302,0.5321,0.8291,0.5571,0.8302,0.52,0.8291,0.5571,0.8787,0.52,0.8825,0.5571,0.955,0.52])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9491,0.5571,0.9444,0.5755,0.9717,0.5755,0.8831,0.5755,0.8339,0.5755,0.8339,0.5755,0.8831,0.5755,0.9444,0.5755,0.9679,0.2444,0.9449,0.2445])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.8931,0.2445,0.8516,0.2444,0.8516,0.2442,0.8931,0.2442,0.9449,0.2442,0.9372,0.2243,0.9255,0.2244,0.8993,0.2244,0.8783,0.2243,0.8783,0.2243])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.8993,0.2243,0.9255,0.2243])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #103, 408 total numbers */
	this.IndexedFaceSet_12_103_coordIndex = new autoclass.MFInt32(java.newArray("int", [1,14,11,-1,3,6,5,-1,5,4,3,-1,1,3,4,-1,4,0,1,-1,0,4,5,-1,5,2,0,-1,11,6,3,-1,3,1,11,-1,15,12,0,-1,0,2,15,-1,0,12,13,-1,13,1,0,-1,13,14,1,-1,7,11,18,-1,8,9,5,-1,5,6,8,-1,7,10,9,-1,9,8,7,-1,10,2,5,-1,5,9,10,-1,11,7,8,-1,8,6,11,-1,15,2,10,-1,10,16,15,-1,10,7,17,-1,17,16,10,-1,17,7,18,-1,19,26,25,-1,25,24,23,-1,19,25,23,-1,23,22,21,-1,19,23,21,-1,20,19,21,-1,15,19,20,-1,20,12,15,-1,12,20,21,-1,21,13,12,-1,13,21,22,-1,22,14,13,-1,14,22,23,-1,23,11,14,-1,11,23,24,-1,24,18,11,-1,18,24,25,-1,25,17,18,-1,17,25,26,-1,26,16,17,-1,16,26,19,-1,19,15,16,-1,33,27,30,-1,30,31,33,-1,36,38,30,-1,30,27,36,-1,29,28,27,-1,27,33,29,-1,37,36,27,-1,27,28,37,-1,28,29,42,-1,42,37,28,-1,33,31,34,-1,34,32,33,-1,39,32,34,-1,34,40,39,-1,29,33,32,-1,32,35,29,-1,41,35,32,-1,32,39,41,-1,35,41,42,-1,42,29,35,-1,44,43,47,-1,44,47,46,-1,44,46,45,-1,51,50,49,-1,49,48,54,-1,49,54,53,-1,51,49,53,-1,51,53,52,-1,30,43,44,-1,44,31,30,-1,31,44,45,-1,45,34,31,-1,34,45,46,-1,46,40,34,-1,40,46,47,-1,47,38,40,-1,38,47,43,-1,43,30,38,-1,37,48,49,-1,49,36,37,-1,36,49,50,-1,50,38,36,-1,38,50,51,-1,51,40,38,-1,40,51,52,-1,52,39,40,-1,39,52,53,-1,53,41,39,-1,41,53,54,-1,54,42,41,-1,42,54,48,-1,48,37,42,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #103, 408 total numbers */
	this.IndexedFaceSet_12_103_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [1,18,14,-1,3,6,5,-1,5,4,3,-1,1,3,4,-1,4,0,1,-1,0,4,5,-1,5,2,0,-1,14,6,3,-1,3,1,14,-1,19,16,0,-1,0,2,19,-1,0,16,17,-1,17,1,0,-1,17,18,1,-1,7,15,23,-1,9,10,11,-1,11,8,9,-1,7,12,10,-1,10,9,7,-1,12,13,11,-1,11,10,12,-1,15,7,9,-1,9,8,15,-1,20,13,12,-1,12,21,20,-1,12,7,22,-1,22,21,12,-1,22,7,23,-1,24,31,30,-1,30,29,28,-1,24,30,28,-1,28,27,26,-1,24,28,26,-1,25,24,26,-1,19,24,25,-1,25,16,19,-1,16,25,26,-1,26,17,16,-1,17,26,27,-1,27,18,17,-1,18,27,28,-1,28,14,18,-1,15,28,29,-1,29,23,15,-1,23,29,30,-1,30,22,23,-1,22,30,31,-1,31,21,22,-1,21,31,24,-1,24,20,21,-1,34,32,37,-1,37,38,34,-1,46,48,37,-1,37,32,46,-1,35,33,32,-1,32,34,35,-1,47,46,32,-1,32,33,47,-1,33,36,53,-1,53,47,33,-1,40,41,42,-1,42,39,40,-1,49,39,42,-1,42,50,49,-1,44,40,39,-1,39,43,44,-1,51,43,39,-1,39,49,51,-1,43,51,52,-1,52,45,43,-1,55,54,58,-1,55,58,57,-1,55,57,56,-1,62,61,60,-1,60,59,65,-1,60,65,64,-1,62,60,64,-1,62,64,63,-1,37,54,55,-1,55,38,37,-1,41,55,56,-1,56,42,41,-1,42,56,57,-1,57,50,42,-1,50,57,58,-1,58,48,50,-1,48,58,54,-1,54,37,48,-1,47,59,60,-1,60,46,47,-1,46,60,61,-1,61,48,46,-1,48,61,62,-1,62,50,48,-1,50,62,63,-1,63,49,50,-1,49,63,64,-1,64,51,49,-1,51,64,65,-1,65,52,51,-1,53,65,59,-1,59,47,53,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #103, 165 total numbers made up of 55 3-tuple values */
	this.Coordinate_13_103_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.9768,-0.0192,-1.681,-1.657,-0.0192,0.4309,0.0,-0.0192,-1.681,-1.403,0.7316,0.354,-0.8174,0.7316,-1.463,0.0,0.7316,-1.463,0.0,0.7316,1.471,1.657,-0.0192,0.4309,1.403,0.7316,0.354,0.8174,0.7316,-1.463])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.9768,-0.0192,-1.681,0.0,-0.0192,1.75,-1.109,-0.6007,-2.046,-2.045,-0.6007,0.4309,-1.695,-0.296,1.429,0.0,-0.6007,-2.046,1.109,-0.6007,-2.046,2.045,-0.6007,0.4309,1.695,-0.296,1.429,0.0,-1.207,-1.841])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.023,-1.207,-1.841,-1.913,-1.223,0.5161,-1.601,-0.9325,1.406,0.0,-0.6582,1.708,1.601,-0.9325,1.406,1.913,-1.223,0.5161,1.023,-1.207,-1.841,-1.409,-1.925,-2.878,-1.409,-3.947,-1.681,0.0,-3.947,-1.681])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.109,-0.6007,-2.046,0.0,-0.6007,-2.046,1.409,-1.925,-2.878,0.0,-1.925,-2.878,1.109,-0.6007,-2.046,1.409,-3.947,-1.681,-2.927,-1.925,0.4309,-2.089,-3.947,0.4309,-2.045,-0.6007,0.4309,2.927,-1.925,0.4309])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.045,-0.6007,0.4309,2.089,-3.947,0.4309,0.0,-3.947,0.4309,-0.9442,-0.3153,-1.692,0.0,-0.3153,-1.692,0.9442,-0.3153,-1.692,1.7,-0.3153,0.3093,-1.7,-0.3153,0.3093,-1.86,-3.793,1.364,-2.541,-1.963,1.364])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.861,-0.9431,1.364,1.861,-0.9431,1.364,2.541,-1.963,1.364,1.86,-3.793,1.364,0.0,-3.793,1.364])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #104, 132 total numbers made up of 66 2-tuple values */
	this.TextureCoordinate_13_104_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3819,0.171,0.4216,0.1651,0.3819,0.171,0.4216,0.1651,0.3819,0.171,0.3819,0.171,0.4637,0.1714,0.4216,0.1651,0.4637,0.1714,0.4216,0.1651])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3819,0.171,0.3819,0.171,0.3819,0.171,0.3819,0.171,0.4637,0.1714,0.4637,0.1714,0.3861,0.1398,0.4244,0.1312,0.4394,0.1472,0.3836,0.1404])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3836,0.1404,0.3861,0.1398,0.4244,0.1312,0.4394,0.1472,0.3836,0.1404,0.3861,0.1398,0.4244,0.1312,0.4394,0.1472,0.4637,0.1714,0.4394,0.1472])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4244,0.1312,0.3861,0.1398,0.3873,0.0706,0.3871,0.0221,0.3873,0.0706,0.3871,0.0221,0.3871,0.0221,0.3861,0.1398,0.3836,0.1404,0.3873,0.0706])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3873,0.0706,0.3836,0.1404,0.3861,0.1398,0.3871,0.0221,0.3871,0.0221,0.3871,0.0221,0.433,0.0595,0.4411,0.0186,0.4244,0.1312,0.433,0.0595])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4244,0.1312,0.4411,0.0186,0.4411,0.0186,0.4411,0.0186,0.3861,0.1398,0.3836,0.1404,0.3861,0.1398,0.4244,0.1312,0.4244,0.1312,0.4411,0.0186])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.433,0.0595,0.4244,0.1312,0.4244,0.1312,0.433,0.0595,0.4411,0.0186,0.4411,0.0186])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=13, element #112, 264 total numbers */
	this.IndexedFaceSet_13_112_coordIndex = new autoclass.MFInt32(java.newArray("int", [10,4,3,-1,11,10,3,-1,0,11,3,-1,1,12,11,-1,11,0,1,-1,1,9,16,-1,16,12,1,-1,2,4,10,-1,10,17,2,-1,6,8,13,-1,6,13,14,-1,5,6,14,-1,7,5,14,-1,14,15,7,-1,7,15,16,-1,16,9,7,-1,2,17,13,-1,13,8,2,-1,19,18,24,-1,22,21,20,-1,23,22,20,-1,24,23,20,-1,19,24,20,-1,0,18,19,-1,19,1,0,-1,1,19,20,-1,20,9,1,-1,9,20,21,-1,21,7,9,-1,7,21,22,-1,22,5,7,-1,5,22,23,-1,23,6,5,-1,6,23,24,-1,24,3,6,-1,3,24,18,-1,18,0,3,-1,2,8,6,-1,2,6,3,-1,4,2,3,-1,28,29,25,-1,25,26,28,-1,35,28,26,-1,26,27,35,-1,27,40,35,-1,25,30,31,-1,31,26,25,-1,31,32,27,-1,27,26,31,-1,32,41,40,-1,40,27,32,-1,42,30,25,-1,25,29,42,-1,28,33,34,-1,34,29,28,-1,35,36,33,-1,33,28,35,-1,36,35,40,-1,34,33,38,-1,38,37,34,-1,38,33,36,-1,36,39,38,-1,39,36,40,-1,40,41,39,-1,42,29,34,-1,34,37,42,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=13, element #112, 264 total numbers */
	this.IndexedFaceSet_13_112_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [12,5,4,-1,13,12,4,-1,0,13,4,-1,1,14,13,-1,13,0,1,-1,1,3,19,-1,19,14,1,-1,2,5,12,-1,12,21,2,-1,7,10,15,-1,7,15,16,-1,6,7,16,-1,8,6,16,-1,16,17,8,-1,8,17,18,-1,18,11,8,-1,9,20,15,-1,15,10,9,-1,23,22,28,-1,26,25,24,-1,27,26,24,-1,28,27,24,-1,23,28,24,-1,0,22,23,-1,23,1,0,-1,1,23,24,-1,24,3,1,-1,11,24,25,-1,25,8,11,-1,8,25,26,-1,26,6,8,-1,6,26,27,-1,27,7,6,-1,7,27,28,-1,28,4,7,-1,4,28,22,-1,22,0,4,-1,9,10,7,-1,9,7,4,-1,5,9,4,-1,30,29,31,-1,31,32,30,-1,33,30,32,-1,32,34,33,-1,34,35,33,-1,31,36,37,-1,37,32,31,-1,37,38,34,-1,34,32,37,-1,38,39,35,-1,35,34,38,-1,40,36,31,-1,31,29,40,-1,41,42,43,-1,43,44,41,-1,45,46,42,-1,42,41,45,-1,46,45,50,-1,43,42,48,-1,48,47,43,-1,48,42,46,-1,46,49,48,-1,49,46,50,-1,50,51,49,-1,52,44,43,-1,43,47,52,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=14, element #112, 129 total numbers made up of 43 3-tuple values */
	this.Coordinate_14_112_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.927,-1.627,-1.013,-2.089,-3.648,-1.013,0.0,0.2797,0.3064,-2.045,-0.3017,-1.013,-1.695,0.0029,-0.0151,2.927,-1.627,-1.013,2.045,-0.3017,-1.013,2.089,-3.648,-1.013,1.695,0.0029,-0.0151,0.0,-3.648,-1.013])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.74,-0.3226,1.158,-2.661,-1.866,0.9192,-2.14,-3.648,0.9192,1.74,-0.3226,1.158,2.661,-1.866,0.9192,2.14,-3.648,0.9192,0.0,-3.648,0.9192,0.0,-0.0274,1.661,-2.405,-1.656,-1.915,-1.75,-2.942,-1.915])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,-2.942,-1.915,1.75,-2.942,-1.915,2.405,-1.656,-1.915,1.742,-0.5681,-1.915,-1.742,-0.5681,-1.915,-1.784,-0.648,2.332,-2.216,-2.267,4.144,-2.216,-3.648,3.776,0.0,-2.267,5.463,0.0,-0.5463,3.95])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.74,-0.3226,1.158,-2.661,-1.866,0.9192,-2.14,-3.648,0.9192,2.216,-2.267,4.144,1.784,-0.648,2.332,0.0,-3.648,5.096,2.216,-3.648,3.776,1.74,-0.3226,1.158,2.661,-1.866,0.9192,2.14,-3.648,0.9192])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,-3.648,3.776,0.0,-3.648,0.9192,0.0,-0.0274,1.661])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=14, element #113, 106 total numbers made up of 53 2-tuple values */
	this.TextureCoordinate_14_113_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.433,0.0595,0.4411,0.0186,0.4637,0.1714,0.4411,0.0186,0.4244,0.1312,0.4394,0.1472,0.433,0.0595,0.4244,0.1312,0.4411,0.0186,0.4637,0.1714])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4394,0.1472,0.4411,0.0186,0.464,0.1246,0.4607,0.0558,0.4904,0.0166,0.464,0.1246,0.4607,0.0558,0.4904,0.0166,0.4949,0.0186,0.4949,0.0186])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4868,0.1432,0.4868,0.1432,0.433,0.0595,0.4411,0.0186,0.4411,0.0186,0.4411,0.0186,0.433,0.0595,0.4244,0.1312,0.4244,0.1312,0.532,0.098])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5645,0.0707,0.4885,0.102,0.5026,0.044,0.5945,0.0186,0.5487,0.0186,0.5487,0.0186,0.464,0.1246,0.4607,0.0558,0.4904,0.0166,0.4949,0.0186])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4868,0.1432,0.5645,0.0707,0.5026,0.044,0.4885,0.102,0.532,0.098,0.5945,0.0186,0.5487,0.0186,0.464,0.1246,0.4607,0.0558,0.4904,0.0166])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5487,0.0186,0.4949,0.0186,0.4868,0.1432])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #125, 1336 total numbers */
	this.IndexedFaceSet_10_125_coordIndex = new autoclass.MFInt32(java.newArray("int", [3,4,7,-1,7,5,3,-1,4,66,68,-1,68,8,4,-1,4,8,7,-1,1,0,9,-1,9,10,1,-1,0,2,11,-1,11,9,0,-1,15,71,73,-1,73,16,15,-1,14,15,16,-1,16,17,14,-1,71,15,8,-1,8,68,71,-1,15,14,7,-1,7,8,15,-1,73,72,69,-1,69,70,73,-1,16,73,70,-1,70,12,16,-1,16,12,13,-1,13,17,16,-1,21,20,22,-1,22,23,21,-1,20,14,17,-1,17,22,20,-1,20,21,6,-1,6,5,20,-1,14,20,5,-1,5,7,14,-1,23,22,18,-1,18,19,23,-1,22,17,13,-1,13,18,22,-1,2,6,11,-1,28,27,30,-1,30,31,28,-1,27,29,32,-1,32,30,27,-1,29,21,23,-1,23,32,29,-1,27,28,10,-1,10,9,27,-1,29,27,9,-1,9,11,29,-1,21,29,11,-1,11,6,21,-1,31,30,24,-1,24,25,31,-1,30,32,26,-1,26,24,30,-1,32,23,19,-1,19,26,32,-1,12,70,74,-1,74,33,12,-1,24,26,36,-1,36,35,24,-1,33,74,75,-1,75,37,33,-1,34,33,37,-1,37,38,34,-1,39,12,33,-1,33,34,39,-1,19,40,26,-1,26,40,41,-1,41,36,26,-1,39,34,41,-1,41,40,39,-1,35,36,43,-1,43,42,35,-1,36,41,44,-1,44,43,36,-1,41,34,38,-1,38,44,41,-1,37,75,76,-1,76,45,37,-1,38,37,45,-1,45,46,38,-1,42,43,48,-1,48,47,42,-1,44,38,46,-1,46,49,44,-1,45,76,77,-1,77,50,45,-1,46,45,50,-1,50,51,46,-1,47,48,53,-1,53,52,47,-1,48,49,54,-1,54,53,48,-1,49,46,51,-1,51,54,49,-1,50,77,78,-1,78,55,50,-1,51,50,55,-1,55,56,51,-1,52,53,58,-1,58,57,52,-1,53,54,59,-1,59,58,53,-1,54,51,56,-1,56,59,54,-1,19,18,60,-1,60,61,19,-1,18,13,62,-1,62,60,18,-1,13,39,63,-1,63,62,13,-1,40,19,61,-1,61,64,40,-1,39,40,64,-1,64,63,39,-1,2,3,5,-1,2,5,6,-1,13,12,39,-1,25,24,35,-1,70,69,74,-1,67,68,66,-1,66,65,67,-1,79,71,68,-1,68,67,79,-1,72,73,71,-1,71,79,72,-1,49,48,43,-1,43,44,49,-1,63,64,60,-1,60,62,63,-1,60,64,61,-1,86,83,82,-1,82,84,86,-1,141,140,83,-1,83,87,141,-1,83,86,87,-1,88,80,1,-1,1,10,88,-1,89,81,80,-1,80,88,89,-1,144,143,93,-1,93,94,144,-1,94,93,92,-1,92,95,94,-1,87,93,143,-1,143,141,87,-1,86,92,93,-1,93,87,86,-1,69,72,144,-1,144,142,69,-1,142,144,94,-1,94,90,142,-1,91,90,94,-1,94,95,91,-1,100,98,99,-1,99,101,100,-1,95,92,98,-1,98,100,95,-1,85,99,98,-1,98,84,85,-1,84,98,92,-1,92,86,84,-1,96,100,101,-1,101,97,96,-1,91,95,100,-1,100,96,91,-1,81,89,85,-1,106,104,28,-1,28,31,106,-1,107,105,104,-1,104,106,107,-1,101,99,105,-1,105,107,101,-1,10,28,104,-1,104,88,10,-1,88,104,105,-1,105,89,88,-1,89,105,99,-1,99,85,89,-1,102,106,31,-1,31,25,102,-1,103,107,106,-1,106,102,103,-1,97,101,107,-1,107,103,97,-1,145,142,90,-1,90,108,145,-1,111,103,102,-1,102,110,111,-1,146,145,108,-1,108,112,146,-1,112,108,109,-1,109,113,112,-1,108,90,114,-1,114,109,108,-1,97,103,115,-1,116,115,103,-1,103,111,116,-1,116,109,114,-1,114,115,116,-1,118,111,110,-1,110,117,118,-1,119,116,111,-1,111,118,119,-1,113,109,116,-1,116,119,113,-1,147,146,112,-1,112,120,147,-1,120,112,113,-1,113,121,120,-1,123,118,117,-1,117,122,123,-1,121,113,119,-1,119,124,121,-1,148,147,120,-1,120,125,148,-1,125,120,121,-1,121,126,125,-1,128,123,122,-1,122,127,128,-1,129,124,123,-1,123,128,129,-1,126,121,124,-1,124,129,126,-1,149,148,125,-1,125,130,149,-1,130,125,126,-1,126,131,130,-1,133,128,127,-1,127,132,133,-1,134,129,128,-1,128,133,134,-1,131,126,129,-1,129,134,131,-1,135,96,97,-1,97,136,135,-1,137,91,96,-1,96,135,137,-1,138,114,91,-1,91,137,138,-1,136,97,115,-1,115,139,136,-1,139,115,114,-1,114,138,139,-1,81,84,82,-1,81,85,84,-1,91,114,90,-1,25,110,102,-1,142,145,69,-1,140,141,67,-1,67,65,140,-1,141,143,79,-1,79,67,141,-1,143,144,72,-1,72,79,143,-1,118,123,124,-1,124,119,118,-1,135,139,138,-1,138,137,135,-1,135,136,139,-1,25,35,110,-1,117,110,35,-1,35,42,117,-1,47,122,117,-1,117,42,47,-1,127,122,47,-1,47,52,127,-1,132,127,52,-1,52,57,132,-1,69,145,74,-1,75,74,145,-1,145,146,75,-1,76,75,146,-1,146,147,76,-1,77,76,147,-1,147,148,77,-1,78,77,148,-1,148,149,78,-1,57,78,149,-1,149,132,57,-1,58,55,78,-1,78,57,58,-1,59,56,55,-1,55,58,59,-1,132,149,130,-1,130,133,132,-1,133,130,131,-1,131,134,133,-1,151,150,155,-1,155,156,151,-1,150,152,157,-1,157,155,150,-1,152,153,158,-1,158,157,152,-1,153,154,159,-1,159,158,153,-1,160,161,162,-1,162,163,160,-1,154,160,163,-1,163,159,154,-1,168,164,151,-1,151,156,168,-1,169,165,164,-1,164,168,169,-1,170,166,165,-1,165,169,170,-1,171,167,166,-1,166,170,171,-1,162,161,172,-1,172,173,162,-1,173,172,167,-1,167,171,173,-1,4,3,158,-1,158,159,4,-1,66,4,159,-1,159,163,66,-1,0,1,156,-1,156,155,0,-1,2,0,155,-1,155,157,2,-1,3,2,157,-1,157,158,3,-1,65,66,163,-1,163,162,65,-1,82,83,171,-1,171,170,82,-1,83,140,173,-1,173,171,83,-1,1,80,168,-1,168,156,1,-1,80,81,169,-1,169,168,80,-1,81,82,170,-1,170,169,81,-1,140,65,162,-1,162,173,140,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #125, 1336 total numbers */
	this.IndexedFaceSet_10_125_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [2,3,0,-1,0,1,2,-1,3,6,4,-1,4,5,3,-1,3,5,0,-1,20,21,18,-1,18,19,20,-1,21,23,22,-1,22,18,21,-1,26,27,24,-1,24,25,26,-1,29,26,25,-1,25,28,29,-1,27,26,30,-1,30,31,27,-1,26,29,32,-1,32,30,26,-1,24,35,33,-1,33,34,24,-1,25,24,34,-1,34,36,25,-1,25,36,37,-1,37,28,25,-1,40,41,38,-1,38,39,40,-1,41,29,28,-1,28,38,41,-1,41,40,42,-1,42,43,41,-1,29,41,43,-1,43,32,29,-1,39,38,44,-1,44,45,39,-1,38,28,37,-1,37,44,38,-1,23,42,22,-1,48,162,161,-1,161,47,48,-1,49,51,50,-1,50,46,49,-1,51,40,39,-1,39,50,51,-1,163,48,164,-1,164,181,163,-1,51,49,18,-1,18,22,51,-1,40,51,22,-1,22,42,40,-1,47,166,165,-1,165,53,47,-1,46,50,54,-1,54,52,46,-1,50,39,45,-1,45,54,50,-1,36,34,55,-1,55,56,36,-1,52,54,57,-1,57,58,52,-1,56,55,59,-1,59,60,56,-1,62,56,60,-1,60,61,62,-1,63,36,56,-1,56,62,63,-1,45,64,54,-1,54,64,65,-1,65,57,54,-1,63,62,65,-1,65,64,63,-1,58,57,66,-1,66,67,58,-1,57,65,68,-1,68,66,57,-1,65,62,61,-1,61,68,65,-1,60,59,69,-1,69,70,60,-1,61,60,70,-1,70,71,61,-1,67,66,72,-1,72,73,67,-1,68,61,71,-1,71,74,68,-1,70,69,75,-1,75,76,70,-1,71,70,76,-1,76,77,71,-1,73,72,78,-1,78,79,73,-1,72,74,80,-1,80,78,72,-1,74,71,77,-1,77,80,74,-1,76,75,81,-1,81,82,76,-1,77,76,82,-1,82,83,77,-1,79,78,84,-1,84,85,79,-1,78,80,86,-1,86,84,78,-1,80,77,83,-1,83,86,80,-1,45,44,87,-1,87,88,45,-1,44,37,89,-1,89,87,44,-1,37,63,90,-1,90,89,37,-1,64,45,88,-1,88,91,64,-1,63,64,91,-1,91,90,63,-1,7,2,1,-1,23,43,42,-1,37,36,63,-1,53,167,168,-1,34,33,55,-1,9,4,6,-1,6,8,9,-1,93,27,31,-1,31,92,93,-1,35,24,27,-1,27,93,35,-1,74,72,66,-1,66,68,74,-1,90,91,87,-1,87,89,90,-1,87,91,88,-1,10,11,12,-1,12,13,10,-1,14,15,11,-1,11,16,14,-1,11,10,16,-1,94,95,169,-1,169,170,94,-1,96,97,95,-1,95,94,96,-1,98,101,99,-1,99,100,98,-1,100,99,102,-1,102,103,100,-1,104,99,101,-1,101,105,104,-1,106,102,99,-1,99,104,106,-1,33,35,98,-1,98,107,33,-1,107,98,100,-1,100,108,107,-1,109,108,100,-1,100,103,109,-1,110,113,111,-1,111,112,110,-1,103,102,113,-1,113,110,103,-1,114,111,113,-1,113,115,114,-1,115,113,102,-1,102,106,115,-1,116,110,112,-1,112,117,116,-1,109,103,110,-1,110,116,109,-1,97,96,114,-1,118,119,48,-1,48,47,118,-1,120,121,119,-1,119,118,120,-1,112,111,121,-1,121,120,112,-1,171,48,119,-1,119,94,171,-1,94,119,121,-1,121,96,94,-1,96,121,111,-1,111,114,96,-1,122,118,47,-1,47,53,122,-1,123,120,118,-1,118,122,123,-1,117,112,120,-1,120,123,117,-1,124,107,108,-1,108,125,124,-1,126,123,122,-1,122,127,126,-1,128,124,125,-1,125,129,128,-1,129,125,130,-1,130,131,129,-1,125,108,132,-1,132,130,125,-1,117,123,133,-1,134,133,123,-1,123,126,134,-1,134,130,132,-1,132,133,134,-1,135,126,127,-1,127,136,135,-1,137,134,126,-1,126,135,137,-1,131,130,134,-1,134,137,131,-1,138,128,129,-1,129,139,138,-1,139,129,131,-1,131,140,139,-1,141,135,136,-1,136,142,141,-1,140,131,137,-1,137,143,140,-1,144,138,139,-1,139,145,144,-1,145,139,140,-1,140,146,145,-1,147,141,142,-1,142,148,147,-1,149,143,141,-1,141,147,149,-1,146,140,143,-1,143,149,146,-1,150,144,145,-1,145,151,150,-1,151,145,146,-1,146,152,151,-1,153,147,148,-1,148,154,153,-1,155,149,147,-1,147,153,155,-1,152,146,149,-1,149,155,152,-1,156,116,117,-1,117,157,156,-1,158,109,116,-1,116,156,158,-1,159,132,109,-1,109,158,159,-1,157,117,133,-1,133,160,157,-1,160,133,132,-1,132,159,160,-1,17,13,12,-1,97,114,115,-1,109,132,108,-1,53,127,122,-1,107,124,33,-1,15,14,9,-1,9,8,15,-1,105,101,93,-1,93,92,105,-1,101,98,35,-1,35,93,101,-1,135,141,143,-1,143,137,135,-1,156,160,159,-1,159,158,156,-1,156,157,160,-1,53,172,127,-1,136,127,173,-1,173,174,136,-1,176,142,136,-1,136,175,176,-1,148,142,177,-1,177,178,148,-1,154,148,179,-1,179,180,154,-1,33,124,55,-1,59,55,124,-1,124,128,59,-1,69,59,128,-1,128,138,69,-1,75,69,138,-1,138,144,75,-1,81,75,144,-1,144,150,81,-1,85,81,150,-1,150,182,85,-1,84,82,81,-1,81,85,84,-1,86,83,82,-1,82,84,86,-1,154,150,151,-1,151,153,154,-1,153,151,152,-1,152,155,153,-1,185,186,183,-1,183,184,185,-1,186,188,187,-1,187,183,186,-1,188,190,189,-1,189,187,188,-1,190,192,191,-1,191,189,190,-1,195,196,193,-1,193,194,195,-1,192,195,194,-1,194,191,192,-1,197,198,185,-1,185,184,197,-1,199,200,198,-1,198,197,199,-1,201,202,200,-1,200,199,201,-1,203,204,202,-1,202,201,203,-1,193,196,205,-1,205,206,193,-1,206,205,204,-1,204,203,206,-1,3,2,189,-1,189,191,3,-1,6,3,191,-1,191,194,6,-1,207,208,184,-1,184,183,207,-1,7,207,183,-1,183,187,7,-1,2,7,187,-1,187,189,2,-1,8,6,194,-1,194,193,8,-1,12,11,203,-1,203,201,12,-1,11,15,206,-1,206,203,11,-1,208,209,197,-1,197,184,208,-1,209,17,199,-1,199,197,209,-1,17,12,201,-1,201,199,17,-1,15,8,193,-1,193,206,15,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #125, 522 total numbers made up of 174 3-tuple values */
	this.Coordinate_11_125_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [0.6928,14.56,-1.263,0.0,14.61,-1.355,1.47,14.78,-0.9099,2.016,14.75,0.2814,1.573,14.45,1.11,2.914,14.31,0.3331,2.599,15.21,-1.406,3.187,13.44,1.543,2.239,13.23,3.23,0.9629,15.23,-3.152])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,15.21,-3.317,2.035,15.26,-2.815,3.316,12.17,2.97,5.086,12.98,2.011,2.982,14.09,2.181,2.245,13.23,3.821,3.131,12.49,3.9,4.42,13.78,2.105,5.602,13.58,0.1863,5.472,12.91,-1.452])))
	.append(new autoclass.MFVec3f(java.newArray("float", [3.439,15.14,0.3672,3.953,14.28,-2.227,5.073,14.62,0.3672,4.655,13.34,-1.78,1.811,9.683,-2.43,0.0,9.378,-2.564,4.241,10.64,-2.043,1.032,12.38,-4.427,0.0,12.39,-4.562,2.39,12.77,-3.914])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.677,9.038,-3.147,0.0,8.716,-3.266,4.12,10.55,-3.032,4.272,7.978,4.186,6.354,8.61,1.543,2.14,8.428,-2.362,4.3,8.531,-1.848,3.695,5.43,2.768,5.081,5.468,1.505,6.096,10.11,1.67])))
	.append(new autoclass.MFVec3f(java.newArray("float", [5.904,10.1,-0.3303,5.533,8.564,-0.7796,1.419,5.319,-2.22,3.58,5.374,-1.434,4.793,5.424,-0.2489,3.682,3.438,2.824,5.077,3.477,1.527,1.282,3.149,-2.365,3.586,3.347,-1.437,4.792,3.421,-0.2999])))
	.append(new autoclass.MFVec3f(java.newArray("float", [4.178,1.107,3.951,5.76,1.143,1.994,1.52,0.9511,-3.678,3.95,0.9608,-2.536,5.309,1.066,-0.7397,3.789,0.0332,3.209,5.166,0.0649,1.685,1.593,-0.0862,-2.676,3.6,-0.0637,-1.847,4.841,-0.0167,-0.4441])))
	.append(new autoclass.MFVec3f(java.newArray("float", [7.399,13.3,0.1863,6.979,12.49,-1.452,6.998,12.55,1.899,6.298,10.26,1.67,6.292,10.26,-0.3303,0.0,14.19,1.73,0.7806,14.19,1.608,0.0,12.0,3.901,1.373,12.54,3.668,0.0,10.9,3.845])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.713,11.65,3.668,1.38,12.54,4.137,0.0,11.29,4.361,1.593,11.97,4.338,1.579,8.583,4.081,1.292,5.399,3.228,1.281,3.232,3.336,1.635,1.077,4.562,1.595,-0.0055,3.645,0.0,12.05,4.06])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.6928,14.56,-1.263,-1.47,14.78,-0.9099,-2.016,14.75,0.2814,-1.573,14.45,1.11,-2.914,14.31,0.3331,-2.599,15.21,-1.406,-3.187,13.44,1.543,-2.239,13.23,3.23,-0.9629,15.23,-3.152,-2.035,15.26,-2.815])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-3.316,12.17,2.97,-5.086,12.98,2.011,-2.982,14.09,2.181,-2.245,13.23,3.821,-3.131,12.49,3.9,-4.42,13.78,2.105,-5.602,13.58,0.1863,-5.472,12.91,-1.452,-3.439,15.14,0.3672,-3.953,14.28,-2.227])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-5.073,14.62,0.3672,-4.655,13.34,-1.78,-1.811,9.683,-2.43,-4.241,10.64,-2.043,-1.032,12.38,-4.427,-2.39,12.77,-3.914,-1.677,9.038,-3.147,-4.12,10.55,-3.032,-4.272,7.978,4.186,-6.354,8.61,1.543])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.14,8.428,-2.362,-4.3,8.531,-1.848,-3.695,5.43,2.768,-5.081,5.468,1.505,-6.096,10.11,1.67,-5.904,10.1,-0.3303,-5.533,8.564,-0.7796,-1.419,5.319,-2.22,-3.58,5.374,-1.434,-4.793,5.424,-0.2489])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-3.682,3.438,2.824,-5.077,3.477,1.527,-1.282,3.149,-2.365,-3.586,3.347,-1.437,-4.792,3.421,-0.2999,-4.178,1.107,3.951,-5.76,1.143,1.994,-1.52,0.9511,-3.678,-3.95,0.9608,-2.536,-5.309,1.066,-0.7397])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-3.789,0.0332,3.209,-5.166,0.0649,1.685,-1.593,-0.0862,-2.676,-3.6,-0.0637,-1.847,-4.841,-0.0167,-0.4441,-7.399,13.3,0.1863,-6.979,12.49,-1.452,-6.998,12.55,1.899,-6.298,10.26,1.67,-6.292,10.26,-0.3303])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.7806,14.19,1.608,-1.373,12.54,3.668,-1.713,11.65,3.668,-1.38,12.54,4.137,-1.593,11.97,4.338,-1.579,8.583,4.081,-1.292,5.399,3.228,-1.281,3.232,3.336,-1.635,1.077,4.562,-1.595,-0.0055,3.645])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.5369,17.62,-0.941,0.0,17.62,-1.012,1.139,17.62,-0.6672,1.562,17.62,0.2561,1.219,17.62,0.8985,0.5424,14.56,-0.9523,0.0,14.61,-1.024,1.151,14.78,-0.6757,1.578,14.75,0.257,1.232,14.45,0.9059])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.605,17.75,1.285,0.0,17.19,1.379,0.0,14.19,1.391,0.6111,14.19,1.296,-0.5369,17.62,-0.941,-1.139,17.62,-0.6672,-1.562,17.62,0.2561,-1.219,17.62,0.8985,-0.5424,14.56,-0.9523,-1.151,14.78,-0.6757])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.578,14.75,0.257,-1.232,14.45,0.9059,-0.605,17.75,1.285,-0.6111,14.19,1.296])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #126, 420 total numbers made up of 210 2-tuple values */
	this.TextureCoordinate_11_126_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4756,0.618,0.4724,0.6293,0.4618,0.6351,0.4566,0.6312,0.4542,0.6062,0.4644,0.6152,0.4472,0.6278,0.4554,0.6354,0.4381,0.6277,0.4381,0.5991])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4005,0.618,0.4195,0.6312,0.4143,0.6351,0.4037,0.6293,0.4219,0.6062,0.4289,0.6278,0.4117,0.6152,0.4207,0.6354,0.2661,0.5914,0.3505,0.5919])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3554,0.5911,0.2505,0.5754,0.241,0.592,0.2112,0.5805,0.0763,0.4945,0.1025,0.5076,0.0865,0.5614,0.0652,0.5465,0.1412,0.5207,0.1108,0.5655])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.0786,0.5849,0.0516,0.5759,0.1073,0.5839,0.0639,0.4488,0.0877,0.4617,0.0525,0.4715,0.1185,0.4741,0.1474,0.4856,0.1724,0.5255,0.2089,0.5196])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2133,0.556,0.1645,0.5709,0.2067,0.5908,0.1632,0.5887,0.1708,0.4854,0.1963,0.4863,0.2708,0.4736,0.347,0.4316,0.3616,0.5328,0.2733,0.5359])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.238,0.493,0.249,0.5451,0.2638,0.4568,0.3214,0.4203,0.2252,0.4828,0.042,0.406,0.0909,0.398,0.2183,0.385,0.3504,0.3844,0.0206,0.3452])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.0903,0.3446,0.1491,0.3449,0.1525,0.3869,0.1538,0.4251,0.1784,0.4249,0.1911,0.3858,0.2175,0.3427,0.3608,0.3469,0.1838,0.3438,0.0177,0.3051])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.0982,0.302,0.1487,0.2975,0.2175,0.2944,0.3621,0.2922,0.1849,0.2961,0.019,0.2349,0.1011,0.241,0.1445,0.2419,0.2369,0.2375,0.3561,0.2404])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1927,0.24,0.0206,0.2122,0.1067,0.2154,0.1463,0.2162,0.227,0.2131,0.3536,0.2151,0.1879,0.2143,0.1715,0.4655,0.1797,0.4646,0.1569,0.4642])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1544,0.4288,0.1782,0.4286,0.0346,0.5664,0.0399,0.5407,0.2661,0.5914,0.2505,0.5754,0.241,0.592,0.2112,0.5805,0.0763,0.4945,0.0865,0.5614])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1025,0.5076,0.0652,0.5465,0.1108,0.5655,0.1412,0.5207,0.0786,0.5849,0.0516,0.5759,0.1073,0.5839,0.0877,0.4617,0.1185,0.4741,0.1474,0.4857])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1724,0.5255,0.2133,0.556,0.2089,0.5196,0.1645,0.5709,0.2067,0.5908,0.1632,0.5887,0.1708,0.4854,0.1963,0.4863,0.2708,0.4736,0.2733,0.5359])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.238,0.493,0.249,0.5451,0.2638,0.4568,0.2252,0.4828,0.042,0.406,0.0909,0.398,0.2183,0.385,0.3504,0.3844,0.0206,0.3452,0.0903,0.3446])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1525,0.3869,0.1491,0.3449,0.1538,0.4251,0.1784,0.4249,0.1911,0.3858,0.2175,0.3427,0.3608,0.3469,0.1838,0.3438,0.0177,0.3051,0.0982,0.302])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1487,0.2975,0.2175,0.2944,0.3621,0.2922,0.1849,0.2961,0.019,0.2349,0.1011,0.241,0.1445,0.2419,0.2369,0.2375,0.3561,0.2404,0.1927,0.24])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.0206,0.2122,0.1067,0.2154,0.1463,0.2162,0.227,0.2131,0.3536,0.2151,0.1879,0.2143,0.1715,0.4655,0.1797,0.4646,0.1569,0.4642,0.1544,0.4288])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1782,0.4286,0.3477,0.431,0.3623,0.5333,0.3623,0.5333,0.3505,0.5919,0.3223,0.4192,0.3477,0.431,0.3223,0.4192,0.3518,0.3851,0.3554,0.5911])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3505,0.5919,0.3505,0.5919,0.3518,0.3851,0.3518,0.3851,0.3629,0.3439,0.3629,0.3439,0.3633,0.2922,0.3633,0.2922,0.3553,0.2398,0.3553,0.2398])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3555,0.2151,0.3511,0.5932,0.3536,0.2151,0.4444,0.6326,0.4381,0.6333,0.4381,0.6725,0.4444,0.6725,0.4516,0.6354,0.4515,0.6725,0.4566,0.6351])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4565,0.6725,0.4526,0.6312,0.4524,0.6725,0.4381,0.6277,0.4453,0.6278,0.4452,0.6742,0.4381,0.6669,0.4317,0.6326,0.4317,0.6725,0.4245,0.6354])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4246,0.6725,0.4195,0.6351,0.4197,0.6725,0.4235,0.6312,0.4237,0.6725,0.4309,0.6742,0.4309,0.6278,0.4462,0.6326,0.4381,0.6333,0.4299,0.6326])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #134, 2368 total numbers */
	this.IndexedFaceSet_11_134_coordIndex = new autoclass.MFInt32(java.newArray("int", [58,44,47,-1,47,49,58,-1,49,60,59,-1,59,1,49,-1,56,48,47,-1,47,44,56,-1,50,51,59,-1,59,60,50,-1,173,168,58,-1,58,49,173,-1,171,173,49,-1,49,1,171,-1,14,12,18,-1,18,15,14,-1,162,160,14,-1,14,15,162,-1,16,57,33,-1,21,18,12,-1,18,79,19,-1,80,20,19,-1,11,10,79,-1,18,21,79,-1,11,79,21,-1,21,12,78,-1,11,21,22,-1,321,345,320,-1,322,323,346,-1,80,25,24,-1,24,20,80,-1,26,38,24,-1,23,13,38,-1,20,77,18,-1,18,19,20,-1,38,29,30,-1,30,23,38,-1,27,30,29,-1,27,28,30,-1,30,28,23,-1,33,31,16,-1,31,37,16,-1,28,34,23,-1,17,35,36,-1,36,28,17,-1,33,36,35,-1,17,32,35,-1,32,33,35,-1,33,34,36,-1,36,34,28,-1,10,19,79,-1,4,40,37,-1,40,42,41,-1,40,41,37,-1,40,4,42,-1,56,43,4,-1,4,46,56,-1,45,43,56,-1,56,44,45,-1,43,45,4,-1,48,56,46,-1,46,3,48,-1,50,60,3,-1,51,50,3,-1,3,2,51,-1,58,168,52,-1,52,168,170,-1,61,52,170,-1,4,45,52,-1,52,61,4,-1,52,45,44,-1,44,58,52,-1,61,170,53,-1,170,165,39,-1,39,53,170,-1,4,61,53,-1,53,42,4,-1,53,39,41,-1,41,42,53,-1,165,57,39,-1,13,23,54,-1,16,37,57,-1,41,39,57,-1,37,41,57,-1,57,165,166,-1,54,166,13,-1,33,57,34,-1,34,57,54,-1,34,54,23,-1,166,162,55,-1,55,162,15,-1,77,55,15,-1,15,18,77,-1,166,77,13,-1,77,166,55,-1,13,77,24,-1,24,38,13,-1,20,24,77,-1,54,57,166,-1,47,60,49,-1,48,3,47,-1,3,60,47,-1,3,63,2,-1,72,62,63,-1,3,65,63,-1,3,46,64,-1,64,66,3,-1,6,66,64,-1,3,66,65,-1,6,73,8,-1,8,73,67,-1,6,75,73,-1,5,71,73,-1,73,75,5,-1,6,70,75,-1,64,46,69,-1,75,70,69,-1,75,69,344,-1,2,63,62,-1,8,66,6,-1,63,8,72,-1,9,74,71,-1,68,74,9,-1,74,8,67,-1,68,72,74,-1,72,8,74,-1,67,71,74,-1,67,73,71,-1,65,8,63,-1,65,66,8,-1,70,6,64,-1,70,64,69,-1,4,0,344,-1,69,46,4,-1,69,4,344,-1,76,344,0,-1,5,76,0,-1,5,75,76,-1,75,344,76,-1,133,125,123,-1,123,120,133,-1,125,1,59,-1,59,134,125,-1,131,120,123,-1,123,124,131,-1,126,134,59,-1,59,51,126,-1,172,125,133,-1,133,167,172,-1,171,1,125,-1,125,172,171,-1,14,91,94,-1,94,12,14,-1,161,91,14,-1,14,160,161,-1,109,132,92,-1,12,94,97,-1,95,149,94,-1,95,96,150,-1,149,88,89,-1,149,97,94,-1,97,149,89,-1,78,12,97,-1,98,97,89,-1,325,348,324,-1,354,326,327,-1,150,96,100,-1,100,101,150,-1,100,114,102,-1,114,90,99,-1,96,95,94,-1,94,148,96,-1,114,99,106,-1,106,105,114,-1,105,106,103,-1,106,104,103,-1,99,104,106,-1,92,107,109,-1,92,113,107,-1,99,110,104,-1,93,104,112,-1,112,111,93,-1,111,112,109,-1,111,108,93,-1,111,109,108,-1,112,110,109,-1,104,110,112,-1,149,95,88,-1,113,116,83,-1,117,118,116,-1,113,117,116,-1,118,83,116,-1,131,122,83,-1,83,119,131,-1,121,120,131,-1,131,119,121,-1,83,121,119,-1,124,82,122,-1,122,131,124,-1,82,134,126,-1,51,2,82,-1,82,126,51,-1,127,167,133,-1,169,167,127,-1,169,127,135,-1,83,135,127,-1,127,121,83,-1,127,133,120,-1,120,121,127,-1,128,169,135,-1,169,128,115,-1,115,163,169,-1,83,118,128,-1,128,135,83,-1,128,118,117,-1,117,115,128,-1,115,132,163,-1,129,99,90,-1,132,113,92,-1,132,115,117,-1,132,117,113,-1,164,163,132,-1,90,164,129,-1,110,132,109,-1,129,132,110,-1,99,129,110,-1,130,161,164,-1,91,161,130,-1,148,94,91,-1,91,130,148,-1,90,148,164,-1,130,164,148,-1,90,114,100,-1,100,148,90,-1,148,100,96,-1,164,132,129,-1,125,134,123,-1,123,82,124,-1,123,134,82,-1,2,136,82,-1,136,62,72,-1,136,138,82,-1,82,139,137,-1,137,122,82,-1,137,139,85,-1,138,139,82,-1,87,144,85,-1,140,144,87,-1,144,146,85,-1,84,146,144,-1,144,143,84,-1,146,142,85,-1,141,122,137,-1,141,142,146,-1,347,141,146,-1,62,136,2,-1,85,139,87,-1,72,87,136,-1,143,145,9,-1,9,145,68,-1,145,140,87,-1,68,145,72,-1,72,145,87,-1,145,143,140,-1,143,144,140,-1,136,87,138,-1,87,139,138,-1,137,85,142,-1,141,137,142,-1,347,81,83,-1,83,122,141,-1,347,83,141,-1,81,347,147,-1,81,147,84,-1,147,146,84,-1,147,347,146,-1,162,166,152,-1,151,160,162,-1,162,152,151,-1,152,166,165,-1,165,154,152,-1,154,165,170,-1,170,156,154,-1,152,154,155,-1,155,151,152,-1,156,153,155,-1,155,154,156,-1,173,156,170,-1,170,168,173,-1,171,153,156,-1,156,173,171,-1,157,164,161,-1,151,157,161,-1,161,160,151,-1,157,158,163,-1,163,164,157,-1,158,159,169,-1,169,163,158,-1,157,151,155,-1,155,158,157,-1,159,158,155,-1,155,153,159,-1,172,167,169,-1,169,159,172,-1,171,172,159,-1,159,153,171,-1,355,237,223,-1,174,236,237,-1,236,174,175,-1,179,238,176,-1,179,176,177,-1,179,177,178,-1,178,174,179,-1,174,178,175,-1,180,226,236,-1,238,180,236,-1,180,230,226,-1,237,236,223,-1,223,236,218,-1,225,355,223,-1,223,224,225,-1,328,329,239,-1,330,331,350,-1,228,227,219,-1,219,222,228,-1,236,226,218,-1,174,237,0,-1,0,237,355,-1,0,179,174,-1,318,355,225,-1,220,228,222,-1,221,228,220,-1,5,0,355,-1,218,182,223,-1,183,223,182,-1,181,183,185,-1,181,185,242,-1,213,212,244,-1,244,246,213,-1,213,246,245,-1,245,214,213,-1,245,247,184,-1,184,214,245,-1,214,184,206,-1,206,207,214,-1,217,319,225,-1,225,224,217,-1,183,181,217,-1,217,224,183,-1,224,223,183,-1,226,209,218,-1,218,209,184,-1,182,185,183,-1,218,184,182,-1,207,208,232,-1,232,214,207,-1,232,215,214,-1,209,206,184,-1,186,192,190,-1,190,188,186,-1,197,192,208,-1,208,207,197,-1,190,222,219,-1,219,188,190,-1,194,195,190,-1,226,189,209,-1,187,189,226,-1,192,186,208,-1,191,216,205,-1,196,205,216,-1,195,196,216,-1,196,195,194,-1,209,189,198,-1,199,197,207,-1,207,206,199,-1,233,234,197,-1,197,199,233,-1,209,198,199,-1,199,206,209,-1,233,199,198,-1,198,200,233,-1,248,194,202,-1,201,205,250,-1,248,249,196,-1,196,194,248,-1,196,249,250,-1,250,205,196,-1,234,203,197,-1,203,192,197,-1,194,190,202,-1,200,198,189,-1,189,204,200,-1,202,190,192,-1,202,192,203,-1,205,210,191,-1,210,205,201,-1,220,222,193,-1,204,189,187,-1,187,210,204,-1,210,201,204,-1,210,187,191,-1,195,211,190,-1,195,193,211,-1,193,222,211,-1,211,222,190,-1,215,212,213,-1,213,214,215,-1,230,187,226,-1,230,191,187,-1,229,221,230,-1,229,228,221,-1,9,355,318,-1,5,355,71,-1,71,355,9,-1,231,247,185,-1,182,231,185,-1,184,231,182,-1,184,247,231,-1,238,230,180,-1,230,221,191,-1,221,235,191,-1,191,235,216,-1,221,220,235,-1,193,235,220,-1,216,235,193,-1,193,195,216,-1,250,249,233,-1,203,234,248,-1,234,233,249,-1,250,233,200,-1,249,248,234,-1,243,241,240,-1,241,243,247,-1,204,201,250,-1,200,204,250,-1,203,248,202,-1,247,243,242,-1,247,242,185,-1,332,333,349,-1,334,335,7,-1,292,304,353,-1,304,303,251,-1,252,251,303,-1,253,305,256,-1,254,253,256,-1,256,251,255,-1,255,254,256,-1,252,255,251,-1,303,295,257,-1,303,257,305,-1,295,298,257,-1,292,303,304,-1,288,303,292,-1,294,352,292,-1,292,353,294,-1,336,337,293,-1,306,338,339,-1,296,291,219,-1,219,227,296,-1,288,295,303,-1,81,304,251,-1,353,304,81,-1,251,256,81,-1,294,353,317,-1,291,296,289,-1,289,296,290,-1,353,81,84,-1,292,258,288,-1,258,292,259,-1,261,259,181,-1,242,261,181,-1,285,309,244,-1,244,212,285,-1,285,286,308,-1,308,309,285,-1,308,286,260,-1,260,310,308,-1,286,281,280,-1,280,260,286,-1,217,352,294,-1,294,319,217,-1,259,352,217,-1,217,181,259,-1,259,292,352,-1,288,282,295,-1,260,282,288,-1,259,261,258,-1,258,260,288,-1,281,286,232,-1,232,208,281,-1,286,215,232,-1,260,280,282,-1,186,188,264,-1,264,266,186,-1,271,281,208,-1,208,266,271,-1,264,188,219,-1,219,291,264,-1,264,269,268,-1,282,263,295,-1,295,263,262,-1,208,186,266,-1,279,287,265,-1,287,279,270,-1,287,270,269,-1,268,269,270,-1,272,263,282,-1,273,280,281,-1,281,271,273,-1,300,273,271,-1,271,301,300,-1,282,280,273,-1,273,272,282,-1,300,274,272,-1,272,273,300,-1,276,268,311,-1,313,279,275,-1,311,268,270,-1,270,312,311,-1,270,279,313,-1,313,312,270,-1,271,277,301,-1,271,266,277,-1,276,264,268,-1,274,278,263,-1,263,272,274,-1,266,264,276,-1,277,266,276,-1,265,283,279,-1,275,279,283,-1,267,291,289,-1,278,283,262,-1,262,263,278,-1,278,275,283,-1,265,262,283,-1,264,284,269,-1,284,267,269,-1,284,291,267,-1,264,291,284,-1,285,212,215,-1,215,286,285,-1,295,262,298,-1,262,265,298,-1,298,290,297,-1,290,296,297,-1,317,353,9,-1,143,353,84,-1,9,353,143,-1,261,310,299,-1,261,299,258,-1,258,299,260,-1,299,310,260,-1,257,298,305,-1,265,290,298,-1,265,302,290,-1,287,302,265,-1,302,289,290,-1,289,302,267,-1,287,269,267,-1,267,302,287,-1,300,312,313,-1,311,301,277,-1,312,300,301,-1,274,300,313,-1,301,311,312,-1,240,307,243,-1,310,243,307,-1,313,275,278,-1,313,278,274,-1,276,311,277,-1,242,243,310,-1,261,242,310,-1,351,340,341,-1,86,342,343,-1,244,314,315,-1,315,246,244,-1,246,315,247,-1,247,245,246,-1,244,309,316,-1,316,314,244,-1,309,308,310,-1,310,316,309,-1,175,176,238,-1,238,236,175,-1,177,176,175,-1,175,178,177,-1,252,303,305,-1,305,253,252,-1,254,255,252,-1,252,253,254,-1,318,225,319,-1,319,9,318,-1,317,9,319,-1,319,294,317,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #134, 2368 total numbers */
	this.IndexedFaceSet_11_134_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [0,3,2,-1,2,1,0,-1,1,6,5,-1,5,4,1,-1,7,8,2,-1,2,3,7,-1,9,10,5,-1,5,6,9,-1,11,12,0,-1,0,1,11,-1,13,11,1,-1,1,4,13,-1,14,17,16,-1,16,15,14,-1,18,19,14,-1,14,15,18,-1,22,21,20,-1,23,16,17,-1,16,25,24,-1,27,26,24,-1,29,28,25,-1,16,23,25,-1,29,25,23,-1,31,17,30,-1,29,23,32,-1,33,32,31,-1,33,31,30,-1,27,35,34,-1,34,26,27,-1,37,36,34,-1,39,38,36,-1,26,40,16,-1,16,24,26,-1,36,42,41,-1,41,39,36,-1,43,41,42,-1,43,44,41,-1,41,44,39,-1,20,45,22,-1,45,46,22,-1,44,47,39,-1,48,50,49,-1,49,44,48,-1,20,49,50,-1,48,51,50,-1,51,20,50,-1,20,47,49,-1,49,47,44,-1,28,24,25,-1,53,52,46,-1,52,55,54,-1,52,54,46,-1,52,53,55,-1,7,57,53,-1,53,56,7,-1,58,57,7,-1,7,59,58,-1,57,58,53,-1,8,7,56,-1,56,60,8,-1,9,6,60,-1,10,9,60,-1,60,61,10,-1,0,12,62,-1,62,12,63,-1,64,62,63,-1,53,58,62,-1,62,64,53,-1,62,58,59,-1,59,0,62,-1,64,63,65,-1,63,67,66,-1,66,65,63,-1,53,64,65,-1,65,55,53,-1,65,66,54,-1,54,55,65,-1,67,21,66,-1,38,39,68,-1,22,46,21,-1,54,66,21,-1,46,54,21,-1,21,67,69,-1,68,69,38,-1,20,21,47,-1,47,21,68,-1,47,68,39,-1,69,18,70,-1,70,18,15,-1,40,70,15,-1,15,16,40,-1,69,71,38,-1,71,69,70,-1,38,71,34,-1,34,36,38,-1,26,34,71,-1,68,21,69,-1,2,6,1,-1,8,60,2,-1,60,6,2,-1,74,73,72,-1,77,76,75,-1,74,78,73,-1,74,81,80,-1,80,79,74,-1,82,79,80,-1,74,79,78,-1,82,84,83,-1,83,84,85,-1,82,86,84,-1,87,90,89,-1,89,88,87,-1,92,91,88,-1,80,81,93,-1,88,91,94,-1,86,93,95,-1,72,73,96,-1,83,79,82,-1,73,83,97,-1,100,99,98,-1,103,102,101,-1,99,83,85,-1,104,97,99,-1,97,83,99,-1,105,90,102,-1,105,89,90,-1,107,106,75,-1,107,108,106,-1,109,82,80,-1,109,80,93,-1,112,111,110,-1,93,81,113,-1,93,113,95,-1,114,110,111,-1,115,114,111,-1,87,86,116,-1,86,95,116,-1,117,120,119,-1,119,118,117,-1,120,123,122,-1,122,121,120,-1,124,118,119,-1,119,125,124,-1,126,121,122,-1,122,127,126,-1,128,120,117,-1,117,129,128,-1,130,123,120,-1,120,128,130,-1,14,132,131,-1,131,17,14,-1,133,132,14,-1,14,19,133,-1,136,135,134,-1,17,131,137,-1,139,138,131,-1,139,141,140,-1,138,143,142,-1,138,137,131,-1,137,138,142,-1,30,17,144,-1,145,137,142,-1,144,145,146,-1,30,144,146,-1,140,141,148,-1,148,147,140,-1,148,150,149,-1,150,152,151,-1,141,139,131,-1,131,153,141,-1,150,151,155,-1,155,154,150,-1,154,155,156,-1,155,157,156,-1,151,157,155,-1,134,158,136,-1,134,159,158,-1,151,160,157,-1,161,157,163,-1,163,162,161,-1,162,163,136,-1,162,164,161,-1,162,136,164,-1,163,160,136,-1,157,160,163,-1,138,139,143,-1,159,166,165,-1,168,167,166,-1,159,168,166,-1,167,165,166,-1,124,170,165,-1,165,169,124,-1,171,172,124,-1,124,169,171,-1,165,171,169,-1,125,173,170,-1,170,124,125,-1,173,121,126,-1,127,174,173,-1,173,126,127,-1,175,129,117,-1,176,129,175,-1,176,175,177,-1,165,177,175,-1,175,171,165,-1,175,117,172,-1,172,171,175,-1,178,176,177,-1,176,178,180,-1,180,179,176,-1,165,167,178,-1,178,177,165,-1,178,167,168,-1,168,180,178,-1,180,135,179,-1,181,151,152,-1,135,159,134,-1,135,180,168,-1,135,168,159,-1,182,179,135,-1,152,182,181,-1,160,135,136,-1,181,135,160,-1,151,181,160,-1,183,133,182,-1,132,133,183,-1,153,131,132,-1,132,183,153,-1,152,184,182,-1,183,182,184,-1,152,150,148,-1,148,184,152,-1,184,148,141,-1,182,135,181,-1,120,121,119,-1,119,173,125,-1,119,121,173,-1,72,186,185,-1,187,76,77,-1,186,188,185,-1,185,191,190,-1,190,189,185,-1,190,191,192,-1,188,191,185,-1,194,193,192,-1,195,193,194,-1,193,196,192,-1,197,200,199,-1,199,198,197,-1,200,202,201,-1,203,189,190,-1,204,202,200,-1,205,203,196,-1,96,186,72,-1,192,191,194,-1,97,194,186,-1,207,206,100,-1,101,208,103,-1,206,195,194,-1,104,206,97,-1,97,206,194,-1,208,198,209,-1,198,199,209,-1,187,211,210,-1,211,212,210,-1,190,192,213,-1,203,190,213,-1,216,215,214,-1,217,189,203,-1,205,217,203,-1,215,216,218,-1,215,218,219,-1,220,196,197,-1,220,205,196,-1,18,69,221,-1,222,19,18,-1,18,221,222,-1,221,69,67,-1,67,223,221,-1,223,67,63,-1,63,224,223,-1,221,223,225,-1,225,222,221,-1,224,226,225,-1,225,223,224,-1,11,224,63,-1,63,12,11,-1,13,226,224,-1,224,11,13,-1,227,182,133,-1,222,227,133,-1,133,19,222,-1,227,228,179,-1,179,182,227,-1,228,229,176,-1,176,179,228,-1,227,222,225,-1,225,228,227,-1,229,228,225,-1,225,230,229,-1,128,129,176,-1,176,229,128,-1,130,128,229,-1,229,230,130,-1,233,232,231,-1,235,234,232,-1,234,235,236,-1,239,238,237,-1,239,237,240,-1,239,240,241,-1,241,235,239,-1,235,241,236,-1,243,242,234,-1,238,243,234,-1,243,244,242,-1,232,234,231,-1,231,234,245,-1,246,233,231,-1,231,247,246,-1,247,246,233,-1,231,247,233,-1,248,251,250,-1,250,249,248,-1,234,242,245,-1,235,232,252,-1,252,232,233,-1,252,239,235,-1,253,233,246,-1,254,248,249,-1,255,248,254,-1,256,252,233,-1,245,257,231,-1,258,231,257,-1,261,260,259,-1,261,259,262,-1,263,266,265,-1,265,264,263,-1,263,264,268,-1,268,267,263,-1,268,270,269,-1,269,267,268,-1,267,269,272,-1,272,271,267,-1,273,274,246,-1,246,247,273,-1,258,275,273,-1,273,247,258,-1,247,231,258,-1,278,277,276,-1,276,277,269,-1,279,259,260,-1,276,269,279,-1,271,281,280,-1,280,267,271,-1,280,282,267,-1,277,272,269,-1,284,287,286,-1,286,285,284,-1,288,287,281,-1,281,271,288,-1,286,249,250,-1,250,285,286,-1,290,289,286,-1,278,291,277,-1,292,291,278,-1,287,284,283,-1,295,294,293,-1,296,293,294,-1,289,296,294,-1,296,289,290,-1,277,291,297,-1,298,288,271,-1,271,272,298,-1,299,300,288,-1,288,298,299,-1,277,297,298,-1,298,272,277,-1,299,298,297,-1,297,301,299,-1,303,290,302,-1,305,293,304,-1,303,306,296,-1,296,290,303,-1,296,306,304,-1,304,293,296,-1,300,307,288,-1,307,287,288,-1,290,286,302,-1,301,297,291,-1,291,308,301,-1,302,286,287,-1,309,287,307,-1,293,310,295,-1,310,293,305,-1,254,249,311,-1,308,291,292,-1,292,310,308,-1,310,305,308,-1,310,292,295,-1,289,312,286,-1,289,311,312,-1,311,249,312,-1,312,249,286,-1,282,266,263,-1,263,267,282,-1,313,292,278,-1,313,295,292,-1,314,255,313,-1,314,248,255,-1,315,233,253,-1,256,233,316,-1,316,233,315,-1,317,270,259,-1,279,317,259,-1,269,317,279,-1,269,270,317,-1,238,244,243,-1,313,255,295,-1,255,318,295,-1,295,318,294,-1,255,254,318,-1,311,318,254,-1,294,318,311,-1,311,289,294,-1,304,306,299,-1,307,300,303,-1,300,299,306,-1,304,299,301,-1,306,303,300,-1,321,320,319,-1,320,321,270,-1,308,305,304,-1,301,308,304,-1,307,303,309,-1,270,321,262,-1,270,262,259,-1,252,322,239,-1,252,256,322,-1,231,232,233,-1,232,234,235,-1,236,235,234,-1,237,238,239,-1,240,237,239,-1,239,235,241,-1,241,240,239,-1,236,241,235,-1,234,242,243,-1,234,243,238,-1,242,244,243,-1,231,234,232,-1,245,234,231,-1,246,247,231,-1,231,233,246,-1,233,246,247,-1,233,247,231,-1,323,324,250,-1,250,251,323,-1,245,242,234,-1,252,232,235,-1,233,232,252,-1,235,239,252,-1,246,233,253,-1,324,323,325,-1,325,323,326,-1,233,252,256,-1,231,257,245,-1,257,231,258,-1,329,328,327,-1,330,329,327,-1,331,332,265,-1,265,266,331,-1,331,334,333,-1,333,332,331,-1,333,334,336,-1,336,335,333,-1,334,338,337,-1,337,336,334,-1,273,247,246,-1,246,274,273,-1,258,247,273,-1,273,275,258,-1,258,231,247,-1,341,340,339,-1,336,340,341,-1,328,329,342,-1,342,336,341,-1,338,334,280,-1,280,343,338,-1,334,282,280,-1,336,337,340,-1,284,285,345,-1,345,344,284,-1,346,338,343,-1,343,344,346,-1,345,285,250,-1,250,324,345,-1,345,348,347,-1,340,349,339,-1,339,349,350,-1,283,284,344,-1,353,352,351,-1,352,353,354,-1,352,354,348,-1,347,348,354,-1,355,349,340,-1,356,337,338,-1,338,346,356,-1,357,356,346,-1,346,358,357,-1,340,337,356,-1,356,355,340,-1,357,359,355,-1,355,356,357,-1,361,347,360,-1,363,353,362,-1,360,347,354,-1,354,364,360,-1,354,353,363,-1,363,364,354,-1,346,365,358,-1,346,344,365,-1,361,345,347,-1,359,366,349,-1,349,355,359,-1,344,345,361,-1,365,344,367,-1,351,368,353,-1,362,353,368,-1,369,324,325,-1,366,368,350,-1,350,349,366,-1,366,362,368,-1,351,350,368,-1,345,370,348,-1,370,369,348,-1,370,324,369,-1,345,324,370,-1,331,266,282,-1,282,334,331,-1,339,350,371,-1,350,351,371,-1,371,326,372,-1,326,323,372,-1,253,233,315,-1,316,233,256,-1,315,233,316,-1,329,335,373,-1,329,373,342,-1,342,373,336,-1,373,335,336,-1,243,244,238,-1,351,326,371,-1,351,374,326,-1,352,374,351,-1,374,325,326,-1,325,374,369,-1,352,348,369,-1,369,374,352,-1,357,364,363,-1,360,358,365,-1,364,357,358,-1,359,357,363,-1,358,360,364,-1,319,376,375,-1,335,375,376,-1,363,362,366,-1,363,366,359,-1,367,360,365,-1,330,375,335,-1,329,330,335,-1,239,322,252,-1,322,256,252,-1,265,378,377,-1,377,264,265,-1,264,377,270,-1,270,268,264,-1,265,332,379,-1,379,378,265,-1,332,333,335,-1,335,379,332,-1,380,383,382,-1,382,381,380,-1,384,383,380,-1,380,385,384,-1,380,381,382,-1,382,383,380,-1,384,385,380,-1,380,383,384,-1,253,246,274,-1,274,100,253,-1,253,100,274,-1,274,246,253,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #134, 1068 total numbers made up of 356 3-tuple values */
	this.Coordinate_12_134_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [4.734,2.295,-0.478,0.0,7.925,-7.347,0.0,2.738,-7.551,2.596,3.055,-7.113,5.82,3.915,-2.239,3.712,1.225,-2.29,3.261,1.453,-4.252,5.658,2.599,-1.983,1.82,1.289,-5.164,0.0,0.1375,-3.592])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.395,4.95,6.346,0.7761,4.912,6.883,0.0,9.74,6.859,4.408,9.203,3.673,0.0,11.25,5.65,2.225,10.89,5.304,5.962,4.414,1.165,4.041,0.8383,3.523,1.972,9.601,6.357,2.537,7.001,6.362])))
	.append(new autoclass.MFVec3f(java.newArray("float", [3.694,6.649,5.287,0.4475,7.341,7.362,0.513,6.698,7.119,4.843,6.188,3.431,3.886,6.593,4.951,3.681,5.194,5.001,3.826,5.001,4.664,3.284,2.472,4.49,4.543,4.124,3.499,3.859,3.861,4.364])))
	.append(new autoclass.MFVec3f(java.newArray("float", [4.575,3.792,4.006,5.065,1.183,1.247,4.863,1.73,2.37,5.256,2.695,2.024,5.549,5.532,2.714,5.161,2.035,2.722,5.442,3.878,2.887,6.111,4.389,0.2634,4.062,5.868,4.221,6.007,7.856,-0.5637])))
	.append(new autoclass.MFVec3f(java.newArray("float", [7.021,1.661,-0.9157,6.568,4.855,-0.7308,6.326,4.691,-1.55,6.23,0.8303,-3.441,4.977,5.364,-5.673,6.326,4.656,-2.95,4.216,3.427,-5.131,3.522,5.818,-7.166,3.424,1.86,-7.278,2.479,7.925,-6.757])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.927,1.981,-8.89,0.0,3.753,-8.454,5.584,7.691,-2.78,5.853,7.683,-1.772,5.181,8.476,2.104,3.038,10.79,4.444,5.123,3.032,-5.304,5.664,8.061,0.8754,4.721,7.925,-5.258,0.0,5.519,-7.965])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.479,5.82,-7.483,5.595,7.63,-2.141,0.0,0.1227,-8.281,1.173,1.832,-6.114,3.978,2.324,-4.64,2.917,-0.9285,-7.31,3.323,2.08,-5.371,1.968,-1.561,-5.013,0.0,-0.9435,-6.54,4.713,2.444,-3.477])))
	.append(new autoclass.MFVec3f(java.newArray("float", [4.42,-0.2924,-4.477,1.411,0.5541,-3.484,0.0,1.035,-6.031,2.275,0.8807,-3.763,0.9407,0.7103,-4.537,3.818,1.729,-3.139,4.664,1.866,-1.436,3.657,9.188,4.96,0.0,7.548,7.405,1.559,7.266,7.008])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.791,5.041,6.017,-4.734,2.295,-0.478,-2.596,3.055,-7.113,-5.82,3.915,-2.239,-3.712,1.225,-2.29,-3.261,1.453,-4.252,-5.658,2.599,-1.983,-1.82,1.289,-5.164,-2.395,4.95,6.346,-0.7761,4.912,6.883])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-4.408,9.203,3.673,-2.225,10.89,5.304,-5.962,4.414,1.165,-4.041,0.8383,3.523,-1.972,9.601,6.357,-2.537,7.001,6.362,-3.694,6.649,5.287,-0.4475,7.341,7.362,-0.513,6.698,7.119,-4.843,6.188,3.431])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-3.886,6.593,4.951,-3.681,5.194,5.001,-3.826,5.001,4.664,-3.284,2.472,4.49,-4.543,4.124,3.499,-3.859,3.861,4.364,-4.575,3.792,4.006,-5.065,1.183,1.247,-4.863,1.73,2.37,-5.256,2.695,2.024])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-5.549,5.532,2.714,-5.161,2.035,2.722,-5.442,3.878,2.887,-6.111,4.389,0.2634,-4.062,5.868,4.221,-6.007,7.856,-0.5637,-7.021,1.661,-0.9157,-6.568,4.855,-0.7308,-6.326,4.691,-1.55,-6.23,0.8303,-3.441])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-4.977,5.364,-5.673,-6.326,4.656,-2.95,-4.216,3.427,-5.131,-3.522,5.818,-7.166,-3.424,1.86,-7.278,-2.479,7.925,-6.757,-1.927,1.981,-8.89,-5.584,7.691,-2.78,-5.853,7.683,-1.772,-5.181,8.476,2.104])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-3.038,10.79,4.444,-5.123,3.032,-5.304,-5.664,8.061,0.8754,-4.721,7.925,-5.258,-2.479,5.82,-7.483,-5.595,7.63,-2.141,-1.173,1.832,-6.114,-3.978,2.324,-4.64,-2.917,-0.9285,-7.31,-3.323,2.08,-5.371])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.968,-1.561,-5.013,-4.713,2.444,-3.477,-4.42,-0.2924,-4.477,-1.411,0.5541,-3.484,-2.275,0.8807,-3.763,-0.9407,0.7103,-4.537,-3.818,1.729,-3.139,-4.664,1.866,-1.436,-3.657,9.188,4.96,-1.559,7.266,7.008])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.791,5.041,6.017,0.0,12.89,2.191,2.479,12.6,2.191,0.0,12.77,-3.073,2.479,13.01,-0.5905,0.0,13.3,-0.5905,2.479,12.47,-3.073,-2.479,12.6,2.191,-2.479,13.01,-0.5905,-2.479,12.47,-3.073])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,12.19,4.069,-2.479,11.8,3.665,2.479,11.8,3.665,-4.738,11.13,-0.5905,-4.581,10.59,1.893,4.738,11.13,-0.5905,4.581,10.59,1.893,-4.776,9.342,-4.254,4.776,9.342,-4.254,-4.651,10.94,-2.696])))
	.append(new autoclass.MFVec3f(java.newArray("float", [4.651,10.94,-2.696,0.0,10.91,-6.064,-2.479,10.58,-5.873,2.479,10.58,-5.873,5.038,2.087,0.2634,5.351,2.269,0.2568,5.575,4.993,0.4877,5.759,4.313,-0.6689,5.672,3.119,-0.6884,5.054,4.389,0.2634])))
	.append(new autoclass.MFVec3f(java.newArray("float", [4.617,3.919,1.981,0.0,-1.299,4.283,2.507,0.2122,3.467,1.252,-0.7037,3.753,2.181,1.29,4.703,1.083,-0.2065,4.531,0.0,3.949,5.823,4.122,4.752,3.434,0.0,4.457,6.529,3.843,3.486,3.474])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.6247,4.287,6.217,3.884,5.34,4.144,0.2615,3.949,5.823,2.103,4.881,5.78,1.599,4.225,5.429,2.103,4.763,5.713,2.175,4.422,5.292,1.061,2.841,5.24,3.345,2.806,3.987,2.536,2.741,4.559])))
	.append(new autoclass.MFVec3f(java.newArray("float", [3.082,3.581,4.206,3.368,4.077,4.055,1.044,3.885,5.454,1.356,3.642,5.241,3.227,3.707,4.111,3.028,4.567,4.683,2.472,2.023,4.722,0.9194,2.354,5.382,0.0,2.998,5.872,3.515,2.199,3.631])))
	.append(new autoclass.MFVec3f(java.newArray("float", [3.685,4.225,3.891,1.11,4.559,6.074,0.0,1.141,5.968,0.1458,1.141,5.967,0.4592,1.442,5.549,0.0,1.753,6.811,3.24,5.132,4.832,0.0,-1.23,3.575,3.443,1.22,3.201,0.0,6.577,6.529])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.972,6.686,5.769,3.551,6.468,4.66,1.125,6.641,6.224,2.799,0.2961,1.981,1.438,-0.7799,2.92,2.098,-0.0622,0.3894,4.342,2.994,2.484,0.0,9.837,5.8,1.972,10.18,5.298,3.829,8.081,4.078])))
	.append(new autoclass.MFVec3f(java.newArray("float", [4.754,5.519,2.97,1.641,0.4521,4.705,0.0,2.206,6.446,2.795,3.568,4.497,1.835,3.587,5.011,3.243,5.188,4.826,4.074,1.813,1.489,4.073,1.537,-0.251,4.798,4.414,1.165,3.561,1.081,-1.554])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0,0.5923,5.37,0.2244,0.5923,5.37,0.0,-0.2097,4.949,0.0,0.1669,5.375,0.0,0.7989,5.843,0.4079,0.7711,5.733,0.2244,0.7989,5.843,1.184,0.5011,4.895,1.695,4.1,5.387,2.183,4.262,5.159])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.937,4.372,4.659,-5.038,2.087,0.2634,-5.351,2.269,0.2568,-5.575,4.993,0.4877,-5.759,4.313,-0.6689,-5.672,3.119,-0.6884,-5.054,4.389,0.2634,-4.617,3.919,1.981,-2.507,0.2122,3.467,-1.252,-0.7037,3.753])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.181,1.29,4.703,-1.083,-0.2065,4.531,-4.122,4.752,3.434,-3.843,3.486,3.474,-0.6247,4.287,6.217,-3.884,5.34,4.144,-0.2615,3.949,5.823,-2.103,4.881,5.78,-1.599,4.225,5.429,-2.103,4.763,5.713])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.175,4.422,5.292,-1.061,2.841,5.24,-3.345,2.806,3.987,-2.536,2.741,4.559,-3.082,3.581,4.206,-3.368,4.077,4.055,-1.044,3.885,5.454,-1.356,3.642,5.241,-3.227,3.707,4.111,-3.028,4.567,4.683])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.472,2.023,4.722,-0.9194,2.354,5.382,-3.515,2.199,3.631,-3.685,4.225,3.891,-1.11,4.559,6.074,-0.1458,1.141,5.967,-0.4592,1.442,5.549,-3.24,5.132,4.832,-3.443,1.22,3.201,-1.972,6.686,5.769])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-3.551,6.468,4.66,-1.125,6.641,6.224,-2.799,0.2961,1.981,-1.438,-0.7799,2.92,-2.098,-0.0622,0.3894,-4.342,2.994,2.484,-1.972,10.18,5.298,-3.829,8.081,4.078,-4.754,5.519,2.97,-1.641,0.4521,4.705])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.795,3.568,4.497,-1.835,3.587,5.011,-3.243,5.188,4.826,-4.074,1.813,1.489,-4.073,1.537,-0.251,-4.798,4.414,1.165,-3.561,1.081,-1.554,-0.2244,0.5923,5.37,-0.4079,0.7711,5.733,-0.2244,0.7989,5.843])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.184,0.5011,4.895,-1.695,4.1,5.387,-2.183,4.262,5.159,-2.937,4.372,4.659,0.0,0.5907,5.545,0.2244,0.5907,5.545,-0.2244,0.5907,5.545,-2.091,-0.0943,-1.629,2.091,-0.0943,-1.629,0.0,-0.6349,1.532])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.4475,7.341,7.362,0.7761,4.912,6.883,0.7761,4.912,6.883,0.4475,7.341,7.362,-0.7761,4.912,6.883,-0.4475,7.341,7.362,-0.4475,7.341,7.362,-0.7761,4.912,6.883,1.438,-0.7799,2.92,2.098,-0.0622,0.3894])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.799,0.2961,1.981,1.438,-0.7799,2.92,4.734,2.295,-0.478,5.658,2.599,-1.983,4.734,2.295,-0.478,3.712,1.225,-2.29,-3.561,1.081,-1.554,-2.098,-0.0622,0.3894,-1.438,-0.7799,2.92,-2.799,0.2961,1.981])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-5.658,2.599,-1.983,-4.734,2.295,-0.478,-3.712,1.225,-2.29,-4.734,2.295,-0.478,5.658,2.599,-1.983,0.513,6.698,7.119,0.0,7.548,7.405,-5.658,2.599,-1.983,-0.513,6.698,7.119,5.054,4.389,0.2634])))
	.append(new autoclass.MFVec3f(java.newArray("float", [3.561,1.081,-1.554,-5.054,4.389,0.2634,-1.438,-0.7799,2.92,-3.561,1.081,-1.554,0.0,7.548,7.405,3.561,1.081,-1.554])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #135, 772 total numbers made up of 386 2-tuple values */
	this.TextureCoordinate_12_135_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9175,0.8974,0.9509,0.8981,0.9421,0.8701,0.924,0.8702,0.9824,0.8971,0.9824,0.8682,0.9541,0.8718,0.9147,0.8129,0.9437,0.8153,0.9638,0.8095])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9824,0.809,0.9461,0.923,0.9071,0.9135,0.9824,0.9287,0.7343,0.9169,0.7616,0.9147,0.7553,0.8982,0.7343,0.8968,0.7739,0.9327,0.7343,0.9365])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.8187,0.8433,0.8348,0.9045,0.8324,0.8647,0.74,0.8745,0.761,0.8768,0.7497,0.8755,0.777,0.8787,0.7647,0.8593,0.7596,0.8565,0.7438,0.8546])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7343,0.8756,0.7372,0.8736,0.7394,0.8706,0.7405,0.8536,0.7808,0.8802,0.7786,0.8666,0.7875,0.8787,0.7821,0.8667,0.7952,0.9076,0.8011,0.8823])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7745,0.9003,0.7939,0.8518,0.7845,0.8549,0.7731,0.8049,0.7979,0.8609,0.8185,0.8054,0.8439,0.8655,0.8131,0.8741,0.786,0.7876,0.8107,0.8538])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.8058,0.8252,0.8096,0.8166,0.8589,0.7975,0.8767,0.8622,0.8568,0.8668,0.8669,0.8674,0.9208,0.8549,0.8792,0.7991,0.8835,0.8633,0.9139,0.8636])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.9513,0.84,0.9824,0.8358,0.8845,0.9021,0.888,0.931,0.8761,0.9036,0.8705,0.9018,0.8544,0.902,0.8538,0.9345,0.8173,0.9068,0.8156,0.9257])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7753,0.9186,0.7832,0.9041,0.7338,0.8385,0.7279,0.8339,0.7208,0.8401,0.7397,0.7767,0.7338,0.7681,0.7338,0.7727,0.7192,0.8201,0.7171,0.8352])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7139,0.8364,0.7127,0.8419,0.7175,0.832,0.7247,0.8312,0.7224,0.8292,0.7239,0.8169,0.7146,0.8334,0.7152,0.8309,0.753,0.7762,0.7452,0.772])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7409,0.7703,0.756,0.7661,0.7502,0.7748,0.7102,0.837,0.7574,0.7798,0.7054,0.8378,0.7338,0.8253,0.7338,0.8299,0.7267,0.8275,0.7291,0.8283])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7338,0.8254,0.7338,0.7682,0.7385,0.7711,0.7338,0.7628,0.7338,0.82,0.7437,0.7597,0.7429,0.774,0.7484,0.7629,0.7505,0.778,0.7116,0.8233])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7622,0.7806,0.7576,0.779,0.763,0.7872,0.7046,0.8444,0.7572,0.7769,0.7524,0.7737,0.7104,0.8341,0.5511,0.8974,0.5442,0.8881,0.5261,0.888])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5173,0.916,0.5142,0.8897,0.4859,0.8861,0.4859,0.915,0.5538,0.8129,0.5221,0.9505,0.5019,0.9448,0.4833,0.9442,0.5221,0.9409,0.5615,0.9135])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4859,0.9465,0.7132,0.8982,0.707,0.9147,0.6947,0.9327,0.6362,0.8647,0.6338,0.9045,0.6499,0.8433,0.7286,0.8745,0.7189,0.8755,0.7076,0.8768])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7039,0.8593,0.6916,0.8787,0.7247,0.8546,0.709,0.8565,0.7314,0.8736,0.7292,0.8706,0.728,0.8536,0.69,0.8666,0.6878,0.8802,0.6865,0.8667])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.6811,0.8787,0.6675,0.8823,0.6734,0.9076,0.6941,0.9003,0.6841,0.8549,0.6747,0.8518,0.6955,0.8049,0.6707,0.8609,0.65,0.8054,0.6247,0.8655])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.6555,0.8741,0.6826,0.7876,0.6628,0.8252,0.6579,0.8538,0.659,0.8166,0.5919,0.8622,0.6097,0.7975,0.6017,0.8674,0.6119,0.8668,0.5894,0.7991])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.5477,0.8549,0.5851,0.8633,0.5547,0.8636,0.5069,0.9121,0.4833,0.9711,0.5841,0.9021,0.5806,0.931,0.5925,0.9036,0.5981,0.9018,0.6148,0.9345])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.6142,0.902,0.6513,0.9068,0.653,0.9257,0.6932,0.9186,0.6854,0.9041,0.7468,0.8401,0.7397,0.8339,0.7279,0.7767,0.7484,0.8201,0.7549,0.8419])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7538,0.8364,0.7505,0.8352,0.7502,0.832,0.7452,0.8292,0.7429,0.8312,0.7437,0.8169,0.753,0.8334,0.7524,0.8309,0.7267,0.7703,0.7224,0.772])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7146,0.7762,0.7175,0.7748,0.7116,0.7661,0.7574,0.837,0.7102,0.7798,0.7622,0.8378,0.7385,0.8283,0.7409,0.8275,0.7291,0.7711,0.7239,0.7597])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7192,0.7629,0.7247,0.774,0.7171,0.778,0.756,0.8233,0.7046,0.7872,0.71,0.779,0.7054,0.7806,0.763,0.8444,0.7104,0.7769,0.7152,0.7737])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.7572,0.8341,0.7881,0.9479,0.7343,0.9577,0.8497,0.9637,0.9158,0.9539,0.7343,0.9872,0.9824,0.9663,0.6805,0.9479,0.6189,0.9637,0.5528,0.9539])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4859,0.9842,0.4263,0.6263,0.4421,0.6351,0.4514,0.6319,0.4298,0.637,0.4385,0.639,0.4385,0.6403,0.4369,0.6596,0.4321,0.6555,0.4385,0.6553])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4451,0.6548,0.4452,0.6463,0.4227,0.6454,0.4263,0.652,0.4193,0.6633,0.4176,0.6328,0.4376,0.6237,0.4196,0.6187,0.3384,0.9887,0.2979,0.9448])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2441,0.9417,0.2441,0.9723,0.4437,0.6405,0.4519,0.6235,0.3384,0.9469,0.414,0.9365,0.4566,0.6329,0.4157,0.6257,0.4137,0.6192,0.2959,0.626])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3051,0.6166,0.258,0.6076,0.2606,0.6259,0.2511,0.6816,0.2548,0.6653,0.2441,0.6653,0.2441,0.6816,0.2661,0.696,0.2636,0.664,0.3484,0.6888])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3007,0.651,0.2881,0.7397,0.3623,0.7239,0.4151,0.6155,0.4295,0.6197,0.4116,0.6201,0.4088,0.6855,0.4123,0.7323,0.4518,0.7703,0.364,0.6372])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2441,0.7326,0.2496,0.7705,0.2441,0.7109,0.2441,0.7705,0.2441,0.816,0.2441,0.8403,0.274,0.8322,0.2566,0.816,0.2949,0.763,0.3447,0.8549])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3206,0.8292,0.4279,0.7939,0.4413,0.8544,0.3889,0.8456,0.3991,0.8726,0.4299,0.8825,0.3482,0.8386,0.4041,0.7613,0.3654,0.7582,0.3778,0.7978])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3319,0.7987,0.3916,0.7984,0.2943,0.815,0.3252,0.8232,0.3846,0.8362,0.4052,0.8221,0.3485,0.831,0.309,0.8013,0.3985,0.8044,0.2937,0.8109])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4204,0.8292,0.3447,0.8606,0.2972,0.8452,0.4715,0.8911,0.431,0.9594,0.4658,0.6252,0.465,0.6281,0.3226,0.6487,0.3993,0.8753,0.2441,0.6554])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2548,0.6554,0.2557,0.6351,0.4544,0.6426,0.1498,0.9887,0.1903,0.9448,0.1498,0.9469,0.0742,0.9365,0.2323,0.6076,0.1853,0.6166,0.1923,0.626])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2275,0.6259,0.2371,0.6816,0.2334,0.6653,0.2246,0.664,0.2221,0.696,0.1875,0.651,0.1398,0.6888,0.1258,0.7239,0.2001,0.7397,0.0364,0.7703])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.0759,0.7323,0.0794,0.6855,0.1242,0.6372,0.2386,0.7705,0.2316,0.816,0.2142,0.8322,0.1933,0.763,0.1676,0.8292,0.1435,0.8549,0.0602,0.7939])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.0469,0.8544,0.0583,0.8825,0.0891,0.8726,0.0992,0.8456,0.14,0.8386,0.084,0.7613,0.1228,0.7582,0.1104,0.7978,0.1563,0.7987,0.0966,0.7984])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.163,0.8232,0.1939,0.815,0.083,0.8221,0.1036,0.8362,0.1397,0.831,0.1792,0.8013,0.0897,0.8044,0.1944,0.8109,0.0678,0.8292,0.1435,0.8606])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.191,0.8452,0.0166,0.8911,0.0646,0.9594,0.1656,0.6487,0.0889,0.8753,0.2325,0.6351,0.2334,0.6554,0.2548,0.6553,0.2441,0.6553,0.2334,0.6553])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4156,0.6279,0.3783,0.625,0.3984,0.649,0.4325,0.6718,0.4443,0.6446,0.428,0.6022])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #144, 304 total numbers */
	this.IndexedFaceSet_11_144_coordIndex = new autoclass.MFInt32(java.newArray("int", [2,1,0,-1,3,2,0,-1,4,3,0,-1,0,1,6,-1,6,5,0,-1,1,2,7,-1,7,6,1,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,6,7,12,-1,12,11,6,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,11,12,17,-1,17,16,11,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,36,37,38,-1,35,36,38,-1,39,35,38,-1,21,20,15,-1,15,16,21,-1,22,21,16,-1,16,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1,26,25,20,-1,20,21,26,-1,27,26,21,-1,21,22,27,-1,28,27,22,-1,22,23,28,-1,29,28,23,-1,23,24,29,-1,25,29,24,-1,24,20,25,-1,31,30,25,-1,25,26,31,-1,32,31,26,-1,26,27,32,-1,33,32,27,-1,27,28,33,-1,34,33,28,-1,28,29,34,-1,30,34,29,-1,29,25,30,-1,36,35,30,-1,30,31,36,-1,37,36,31,-1,31,32,37,-1,38,37,32,-1,32,33,38,-1,39,38,33,-1,33,34,39,-1,35,39,34,-1,34,30,35,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #144, 304 total numbers */
	this.IndexedFaceSet_11_144_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [2,0,1,-1,3,2,1,-1,61,3,1,-1,1,0,5,-1,5,6,1,-1,0,2,7,-1,7,5,0,-1,2,3,8,-1,8,7,2,-1,25,4,9,-1,9,26,25,-1,4,1,6,-1,6,9,4,-1,6,5,10,-1,10,11,6,-1,5,7,12,-1,12,10,5,-1,7,8,13,-1,13,12,7,-1,27,9,14,-1,14,28,27,-1,9,6,11,-1,11,14,9,-1,11,10,15,-1,15,16,11,-1,10,12,17,-1,17,15,10,-1,12,13,18,-1,18,17,12,-1,29,14,19,-1,19,30,29,-1,14,11,16,-1,16,19,14,-1,54,35,36,-1,53,54,36,-1,37,53,36,-1,20,21,16,-1,16,15,20,-1,22,20,15,-1,15,17,22,-1,23,22,17,-1,17,18,23,-1,24,32,31,-1,31,19,24,-1,21,24,19,-1,19,16,21,-1,40,41,38,-1,38,39,40,-1,43,56,55,-1,55,42,43,-1,45,43,42,-1,42,44,45,-1,47,45,44,-1,44,46,47,-1,41,47,46,-1,46,38,41,-1,48,49,41,-1,41,40,48,-1,50,58,57,-1,57,43,50,-1,51,50,43,-1,43,45,51,-1,52,51,45,-1,45,47,52,-1,49,52,47,-1,47,41,49,-1,34,33,49,-1,49,48,34,-1,35,60,59,-1,59,50,35,-1,36,35,50,-1,50,51,36,-1,37,36,51,-1,51,52,37,-1,33,37,52,-1,52,49,33,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #144, 120 total numbers made up of 40 3-tuple values */
	this.Coordinate_12_144_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [2.525,1.246,-1.68,3.681,1.236,0.0337,2.408,1.247,1.663,0.4657,1.264,0.9556,0.5379,1.264,-1.11,2.743,-0.0209,-2.31,4.339,-0.0351,0.057,2.581,-0.0195,2.307,-0.1009,0.0044,1.33,-0.0013,0.0035,-1.523])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.72,-2.534,-2.31,4.317,-2.548,0.057,2.559,-2.533,2.307,-0.1233,-2.509,1.33,-0.0237,-2.51,-1.523,2.759,-3.609,-2.442,4.448,-3.624,0.0619,2.588,-3.608,2.442,-0.2497,-3.583,1.409,-0.1443,-3.583,-1.61])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.245,-1.758,-1.939,3.465,-1.769,-0.4543,2.834,-1.763,1.629,1.223,-1.749,1.432,0.8596,-1.746,-0.7734,2.263,-7.566,-1.569,3.531,-7.577,-0.378,2.875,-7.571,1.293,1.202,-7.556,1.135,0.8242,-7.553,-0.6339])))
	.append(new autoclass.MFVec3f(java.newArray("float", [2.267,-11.62,-1.511,3.487,-11.63,-0.3651,2.856,-11.62,1.243,1.245,-11.61,1.091,0.8817,-11.6,-0.6115,2.213,-12.17,-0.8985,2.928,-12.17,-0.2266,2.558,-12.17,0.7161,1.614,-12.16,0.6268,1.401,-12.16,-0.3711])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #145, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_12_145_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2986,0.2114,0.2726,0.2114,0.3201,0.2114,0.3415,0.2114,0.2466,0.2114,0.2979,0.2417,0.2726,0.2417,0.3197,0.2417,0.3418,0.2417,0.2473,0.2417])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2979,0.3018,0.2726,0.3018,0.3197,0.3018,0.3418,0.3018,0.2473,0.3018,0.2978,0.3276,0.2726,0.3276,0.3197,0.3276,0.3419,0.3276,0.2474,0.3276])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2932,0.2834,0.2689,0.2834,0.316,0.2834,0.3322,0.2834,0.245,0.2834,0.2251,0.2114,0.2255,0.2417,0.2255,0.2417,0.2255,0.3018,0.2255,0.3018])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2255,0.3276,0.2255,0.3276,0.2159,0.2834,0.4315,0.6736,0.442,0.6736,0.3947,0.6736,0.4041,0.6736,0.418,0.6736,0.4296,0.6167,0.4409,0.6167])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4415,0.6485,0.4303,0.6485,0.3965,0.6167,0.3953,0.6485,0.4047,0.6167,0.4053,0.6485,0.4189,0.6167,0.418,0.6485,0.4415,0.6706,0.4306,0.6706])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.395,0.6706,0.4051,0.6706,0.4182,0.6706,0.3746,0.6736,0.3851,0.6736,0.384,0.6167,0.3845,0.6485,0.3845,0.6485,0.3846,0.6706,0.3846,0.6706])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3851,0.6736,0.3481,0.2114])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #153, 184 total numbers */
	this.IndexedFaceSet_12_153_coordIndex = new autoclass.MFInt32(java.newArray("int", [2,1,0,-1,3,2,0,-1,4,3,0,-1,0,1,6,-1,6,5,0,-1,1,2,7,-1,7,6,1,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,6,7,12,-1,12,11,6,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,11,12,17,-1,17,16,11,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,21,22,23,-1,20,21,23,-1,24,20,23,-1,21,20,15,-1,15,16,21,-1,22,21,16,-1,16,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #153, 184 total numbers */
	this.IndexedFaceSet_12_153_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [2,25,26,-1,3,2,26,-1,4,3,26,-1,0,1,6,-1,6,5,0,-1,27,2,7,-1,7,28,27,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,29,7,12,-1,12,30,29,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,31,12,17,-1,17,32,31,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,34,22,23,-1,33,34,23,-1,24,33,23,-1,21,20,15,-1,15,16,21,-1,22,36,35,-1,35,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #153, 75 total numbers made up of 25 3-tuple values */
	this.Coordinate_13_153_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [0.215,0.3047,-1.152,1.155,0.2966,-0.2588,0.6199,0.3013,1.04,-0.6505,0.3122,0.9491,-0.9008,0.3143,-0.4054,0.1442,-0.8448,-1.625,1.472,-0.8561,-0.4271,0.7164,-0.8496,1.625,-1.079,-0.8342,1.482,-1.433,-0.8312,-0.6588])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.1328,-3.5,-1.607,1.551,-3.513,-0.4225,0.781,-2.925,1.61,-1.136,-2.909,1.468,-1.551,-3.486,-0.6519,0.0592,-8.713,-1.437,1.093,-8.722,-0.1279,0.5047,-8.716,1.51,-0.8932,-8.704,1.377,-1.169,-8.702,-0.3428])))
	.append(new autoclass.MFVec3f(java.newArray("float", [0.0092,-9.336,-0.8855,0.7154,-9.342,0.0084,0.3135,-9.339,1.043,-0.6412,-9.331,0.9519,-0.8292,-9.329,-0.1383])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #154, 74 total numbers made up of 37 2-tuple values */
	this.TextureCoordinate_13_154_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4222,0.6201,0.4327,0.6201,0.3884,0.6201,0.3987,0.6201,0.4103,0.6201,0.4213,0.6265,0.4321,0.6265,0.3894,0.6265,0.399,0.6265,0.4105,0.6265])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4214,0.6413,0.4323,0.6413,0.389,0.6381,0.3992,0.6381,0.4103,0.6413,0.4213,0.6705,0.4336,0.6705,0.3899,0.6705,0.3981,0.6705,0.4094,0.6705])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4215,0.674,0.4346,0.674,0.3899,0.674,0.398,0.674,0.4083,0.674,0.3787,0.6201,0.3682,0.6201,0.3787,0.6201,0.3782,0.6265,0.3782,0.6265])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3783,0.6413,0.3783,0.6413,0.3796,0.6705,0.3676,0.674,0.3806,0.674,0.3796,0.6705,0.3806,0.674])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=13, element #162, 160 total numbers */
	this.IndexedFaceSet_13_162_coordIndex = new autoclass.MFInt32(java.newArray("int", [4,5,0,-1,0,2,4,-1,6,7,3,-1,3,1,6,-1,1,0,5,-1,5,6,1,-1,8,9,5,-1,5,4,8,-1,10,11,7,-1,7,6,10,-1,9,10,6,-1,6,5,9,-1,12,13,9,-1,9,8,12,-1,14,15,11,-1,11,10,14,-1,13,14,10,-1,10,9,13,-1,4,2,16,-1,2,3,7,-1,7,16,2,-1,17,19,18,-1,18,20,17,-1,21,16,7,-1,7,11,21,-1,8,21,12,-1,12,21,11,-1,11,15,12,-1,13,12,15,-1,15,14,13,-1,8,4,19,-1,19,17,8,-1,4,16,18,-1,18,19,4,-1,16,21,20,-1,20,18,16,-1,21,8,17,-1,17,20,21,-1,22,27,23,-1,26,25,24,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=13, element #162, 160 total numbers */
	this.IndexedFaceSet_13_162_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [4,6,5,-1,5,7,4,-1,2,3,1,-1,1,0,2,-1,14,16,15,-1,15,17,14,-1,8,9,6,-1,6,4,8,-1,38,40,39,-1,39,41,38,-1,18,19,36,-1,36,37,18,-1,10,11,9,-1,9,8,10,-1,42,43,40,-1,40,38,42,-1,20,21,19,-1,19,18,20,-1,22,24,23,-1,24,26,25,-1,25,23,24,-1,27,29,28,-1,28,30,27,-1,31,23,25,-1,25,32,31,-1,33,31,34,-1,34,31,32,-1,32,35,34,-1,20,34,35,-1,35,21,20,-1,8,4,12,-1,12,13,8,-1,22,23,28,-1,28,29,22,-1,23,31,30,-1,30,28,23,-1,31,33,27,-1,27,30,31,-1,14,24,26,-1,14,16,24,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=14, element #162, 84 total numbers made up of 28 3-tuple values */
	this.Coordinate_14_162_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [1.247,0.07,0.7975,1.209,0.0872,-1.349,-0.7098,-0.0015,0.8912,-0.7183,0.0002,-1.283,-0.9295,-0.613,1.478,1.647,-0.4252,1.388,1.589,-0.3921,-1.989,-1.044,-0.5947,-1.984,-0.8227,-2.521,2.408,1.951,-2.334,2.08])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.892,-2.301,-2.409,-1.192,-2.614,-2.248,-0.5703,-3.958,1.694,0.8836,-4.2,1.75,0.8251,-4.167,-2.071,-0.7842,-3.968,-1.934,-1.037,-0.5968,-0.1872,-1.642,-2.561,1.941,-1.951,-0.9492,0.058,-1.914,-1.016,1.885])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.649,-2.56,0.1377,-1.066,-2.61,-0.2014,1.209,0.0872,-1.349,-0.7183,0.0002,-1.283,-0.7098,-0.0015,0.8912,1.247,0.07,0.7975,1.209,0.0872,-1.349,-0.7098,-0.0015,0.8912])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=14, element #163, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_14_163_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.8107,0.9924,0.8122,0.9033,0.7694,0.9912,0.7683,0.9026,0.1329,0.0347,0.0307,0.0051,0.0134,0.0353,0.1366,0.0058,0.1249,0.1081,0.0147,0.117])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1349,0.1856,0.0462,0.1842,0.1559,0.0454,0.148,0.1033,0.3244,0.0096,0.1758,0.0039,0.1759,0.011,0.3241,0.0033,0.173,0.1764,0.3074,0.1757])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1732,0.1519,0.3074,0.1513,0.1756,0.032,0.2159,0.0368,0.1791,0.0165,0.3169,0.0458,0.3158,0.0193,0.172,0.0594,0.2087,0.0476,0.1736,0.0504])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2073,0.064,0.2362,0.0821,0.3267,0.0796,0.1717,0.0822,0.1726,0.1297,0.3077,0.1289,0.3074,0.1865,0.1742,0.184,0.0061,0.1086,0.1366,0.0368])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1241,0.1189,0.0168,0.0309,0.0211,0.1882,0.14,0.1857])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #174, 304 total numbers */
	this.IndexedFaceSet_11_174_coordIndex = new autoclass.MFInt32(java.newArray("int", [0,1,2,-1,0,2,3,-1,4,0,3,-1,0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,38,37,36,-1,38,36,35,-1,39,38,35,-1,21,16,15,-1,15,20,21,-1,22,17,16,-1,16,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1,26,21,20,-1,20,25,26,-1,27,22,21,-1,21,26,27,-1,28,23,22,-1,22,27,28,-1,29,24,23,-1,23,28,29,-1,25,20,24,-1,24,29,25,-1,31,26,25,-1,25,30,31,-1,32,27,26,-1,26,31,32,-1,33,28,27,-1,27,32,33,-1,34,29,28,-1,28,33,34,-1,30,25,29,-1,29,34,30,-1,36,31,30,-1,30,35,36,-1,37,32,31,-1,31,36,37,-1,38,33,32,-1,32,37,38,-1,39,34,33,-1,33,38,39,-1,35,30,34,-1,34,39,35,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #174, 304 total numbers */
	this.IndexedFaceSet_11_174_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [1,0,2,-1,1,2,3,-1,61,1,3,-1,1,6,5,-1,5,0,1,-1,0,5,7,-1,7,2,0,-1,2,7,8,-1,8,3,2,-1,25,26,9,-1,9,4,25,-1,4,9,6,-1,6,1,4,-1,6,11,10,-1,10,5,6,-1,5,10,12,-1,12,7,5,-1,7,12,13,-1,13,8,7,-1,27,28,14,-1,14,9,27,-1,9,14,11,-1,11,6,9,-1,11,16,15,-1,15,10,11,-1,10,15,17,-1,17,12,10,-1,12,17,18,-1,18,13,12,-1,29,30,19,-1,19,14,29,-1,14,19,16,-1,16,11,14,-1,36,35,54,-1,36,54,53,-1,37,36,53,-1,20,15,16,-1,16,21,20,-1,22,17,15,-1,15,20,22,-1,23,18,17,-1,17,22,23,-1,24,19,31,-1,31,32,24,-1,21,16,19,-1,19,24,21,-1,40,39,38,-1,38,41,40,-1,43,42,55,-1,55,56,43,-1,45,44,42,-1,42,43,45,-1,47,46,44,-1,44,45,47,-1,41,38,46,-1,46,47,41,-1,48,40,41,-1,41,49,48,-1,50,43,57,-1,57,58,50,-1,51,45,43,-1,43,50,51,-1,52,47,45,-1,45,51,52,-1,49,41,47,-1,47,52,49,-1,34,48,49,-1,49,33,34,-1,35,50,59,-1,59,60,35,-1,36,51,50,-1,50,35,36,-1,37,52,51,-1,51,36,37,-1,33,49,52,-1,52,37,33,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #174, 120 total numbers made up of 40 3-tuple values */
	this.Coordinate_12_174_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.525,1.246,-1.68,-3.681,1.236,0.0337,-2.408,1.247,1.663,-0.4657,1.264,0.9556,-0.5379,1.264,-1.11,-2.743,-0.0209,-2.31,-4.339,-0.0351,0.057,-2.581,-0.0195,2.307,0.1009,0.0044,1.33,0.0013,0.0035,-1.523])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.72,-2.534,-2.31,-4.317,-2.548,0.057,-2.559,-2.533,2.307,0.1233,-2.509,1.33,0.0237,-2.51,-1.523,-2.759,-3.609,-2.442,-4.448,-3.624,0.0619,-2.588,-3.608,2.442,0.2497,-3.583,1.409,0.1443,-3.583,-1.61])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.245,-1.758,-1.939,-3.465,-1.769,-0.4543,-2.834,-1.763,1.629,-1.223,-1.749,1.432,-0.8596,-1.746,-0.7734,-2.263,-7.566,-1.569,-3.531,-7.577,-0.378,-2.875,-7.571,1.293,-1.202,-7.556,1.135,-0.8242,-7.553,-0.6339])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-2.267,-11.62,-1.511,-3.487,-11.63,-0.3651,-2.856,-11.62,1.243,-1.245,-11.61,1.091,-0.8817,-11.6,-0.6115,-2.213,-12.17,-0.8985,-2.928,-12.17,-0.2266,-2.558,-12.17,0.7161,-1.614,-12.16,0.6268,-1.401,-12.16,-0.3711])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #175, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_12_175_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2986,0.2114,0.2726,0.2114,0.3201,0.2114,0.3415,0.2114,0.2466,0.2114,0.2979,0.2417,0.2726,0.2417,0.3197,0.2417,0.3418,0.2417,0.2473,0.2417])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2979,0.3018,0.2726,0.3018,0.3197,0.3018,0.3418,0.3018,0.2473,0.3018,0.2978,0.3276,0.2726,0.3276,0.3197,0.3276,0.3419,0.3276,0.2474,0.3276])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2932,0.2834,0.2689,0.2834,0.316,0.2834,0.3322,0.2834,0.245,0.2834,0.2251,0.2114,0.2255,0.2417,0.2255,0.2417,0.2255,0.3018,0.2255,0.3018])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2255,0.3276,0.2255,0.3276,0.2159,0.2834,0.4315,0.6736,0.442,0.6736,0.3947,0.6736,0.4041,0.6736,0.418,0.6736,0.4296,0.6167,0.4409,0.6167])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4415,0.6485,0.4303,0.6485,0.3965,0.6167,0.3953,0.6485,0.4047,0.6167,0.4053,0.6485,0.4189,0.6167,0.418,0.6485,0.4415,0.6706,0.4306,0.6706])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.395,0.6706,0.4051,0.6706,0.4182,0.6706,0.3746,0.6736,0.3851,0.6736,0.384,0.6167,0.3845,0.6485,0.3845,0.6485,0.3846,0.6706,0.3846,0.6706])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3851,0.6736,0.3481,0.2114])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #183, 184 total numbers */
	this.IndexedFaceSet_12_183_coordIndex = new autoclass.MFInt32(java.newArray("int", [0,1,2,-1,0,2,3,-1,4,0,3,-1,0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,23,22,21,-1,23,21,20,-1,24,23,20,-1,21,16,15,-1,15,20,21,-1,22,17,16,-1,16,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #183, 184 total numbers */
	this.IndexedFaceSet_12_183_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [26,25,2,-1,26,2,3,-1,4,26,3,-1,0,5,6,-1,6,1,0,-1,27,28,7,-1,7,2,27,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,29,30,12,-1,12,7,29,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,31,32,17,-1,17,12,31,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,23,22,34,-1,23,34,33,-1,24,23,33,-1,21,16,15,-1,15,20,21,-1,22,17,35,-1,35,36,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #183, 75 total numbers made up of 25 3-tuple values */
	this.Coordinate_13_183_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.215,0.3047,-1.152,-1.155,0.2966,-0.2588,-0.6199,0.3013,1.04,0.6505,0.3122,0.9491,0.9008,0.3143,-0.4054,-0.1442,-0.8448,-1.625,-1.472,-0.8561,-0.4271,-0.7164,-0.8496,1.625,1.079,-0.8342,1.482,1.433,-0.8312,-0.6588])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.1328,-3.5,-1.607,-1.551,-3.513,-0.4225,-0.781,-2.925,1.61,1.136,-2.909,1.468,1.551,-3.486,-0.6519,-0.0592,-8.713,-1.437,-1.093,-8.722,-0.1279,-0.5047,-8.716,1.51,0.8932,-8.704,1.377,1.169,-8.702,-0.3428])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-0.0092,-9.336,-0.8855,-0.7154,-9.342,0.0084,-0.3135,-9.339,1.043,0.6412,-9.331,0.9519,0.8292,-9.329,-0.1383])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #184, 74 total numbers made up of 37 2-tuple values */
	this.TextureCoordinate_13_184_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4222,0.6201,0.4327,0.6201,0.3884,0.6201,0.3987,0.6201,0.4103,0.6201,0.4213,0.6265,0.4321,0.6265,0.3894,0.6265,0.399,0.6265,0.4105,0.6265])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4214,0.6413,0.4323,0.6413,0.389,0.6381,0.3992,0.6381,0.4103,0.6413,0.4213,0.6705,0.4336,0.6705,0.3899,0.6705,0.3981,0.6705,0.4094,0.6705])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.4215,0.674,0.4346,0.674,0.3899,0.674,0.398,0.674,0.4083,0.674,0.3787,0.6201,0.3682,0.6201,0.3787,0.6201,0.3782,0.6265,0.3782,0.6265])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.3783,0.6413,0.3783,0.6413,0.3796,0.6705,0.3676,0.674,0.3806,0.674,0.3796,0.6705,0.3806,0.674])));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=13, element #192, 160 total numbers */
	this.IndexedFaceSet_13_192_coordIndex = new autoclass.MFInt32(java.newArray("int", [4,2,0,-1,0,5,4,-1,6,1,3,-1,3,7,6,-1,1,6,5,-1,5,0,1,-1,8,4,5,-1,5,9,8,-1,10,6,7,-1,7,11,10,-1,9,5,6,-1,6,10,9,-1,12,8,9,-1,9,13,12,-1,14,10,11,-1,11,15,14,-1,13,9,10,-1,10,14,13,-1,4,16,2,-1,2,16,7,-1,7,3,2,-1,17,20,18,-1,18,19,17,-1,21,11,7,-1,7,16,21,-1,8,12,21,-1,12,15,11,-1,11,21,12,-1,13,14,15,-1,15,12,13,-1,8,17,19,-1,19,4,8,-1,4,19,18,-1,18,16,4,-1,16,18,20,-1,20,21,16,-1,21,20,17,-1,17,8,21,-1,22,23,27,-1,26,24,25,-1]));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=13, element #192, 160 total numbers */
	this.IndexedFaceSet_13_192_texCoordIndex = new autoclass.MFInt32(java.newArray("int", [4,7,5,-1,5,6,4,-1,2,0,1,-1,1,3,2,-1,14,17,15,-1,15,16,14,-1,8,4,6,-1,6,9,8,-1,38,41,39,-1,39,40,38,-1,18,37,36,-1,36,19,18,-1,10,8,9,-1,9,11,10,-1,42,38,40,-1,40,43,42,-1,20,18,19,-1,19,21,20,-1,22,23,24,-1,24,23,25,-1,25,26,24,-1,27,30,28,-1,28,29,27,-1,31,32,25,-1,25,23,31,-1,33,34,31,-1,34,35,32,-1,32,31,34,-1,20,21,35,-1,35,34,20,-1,8,13,12,-1,12,4,8,-1,22,29,28,-1,28,23,22,-1,23,28,30,-1,30,31,23,-1,31,30,27,-1,27,33,31,-1,14,26,24,-1,14,24,16,-1]));

	/** Large attribute array: Coordinate point field, scene-graph level=14, element #192, 84 total numbers made up of 28 3-tuple values */
	this.Coordinate_14_192_point = new autoclass.MFVec3f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.247,0.07,0.7975,-1.209,0.0872,-1.349,0.7098,-0.0015,0.8912,0.7183,0.0002,-1.283,0.9295,-0.613,1.478,-1.647,-0.4252,1.388,-1.589,-0.3921,-1.989,1.044,-0.5947,-1.984,0.8227,-2.521,2.408,-1.951,-2.334,2.08])))
	.append(new autoclass.MFVec3f(java.newArray("float", [-1.892,-2.301,-2.409,1.192,-2.614,-2.248,0.5703,-3.958,1.694,-0.8836,-4.2,1.75,-0.8251,-4.167,-2.071,0.7842,-3.968,-1.934,1.037,-0.5968,-0.1872,1.642,-2.561,1.941,1.951,-0.9492,0.058,1.914,-1.016,1.885])))
	.append(new autoclass.MFVec3f(java.newArray("float", [1.649,-2.56,0.1377,1.066,-2.61,-0.2014,-1.209,0.0872,-1.349,0.7183,0.0002,-1.283,0.7098,-0.0015,0.8912,-1.247,0.07,0.7975,-1.209,0.0872,-1.349,0.7098,-0.0015,0.8912])));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=14, element #193, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_14_193_point = new autoclass.MFVec2f() /* splitting up long array to improve readability */
	.append(new autoclass.MFVec2f(java.newArray("float", [0.8107,0.9924,0.8122,0.9033,0.7694,0.9912,0.7683,0.9026,0.1329,0.0347,0.0307,0.0051,0.0134,0.0353,0.1366,0.0058,0.1249,0.1081,0.0147,0.117])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1349,0.1856,0.0462,0.1842,0.1559,0.0454,0.148,0.1033,0.3244,0.0096,0.1758,0.0039,0.1759,0.011,0.3241,0.0033,0.173,0.1764,0.3074,0.1757])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1732,0.1519,0.3074,0.1513,0.1756,0.032,0.2159,0.0368,0.1791,0.0165,0.3169,0.0458,0.3158,0.0193,0.172,0.0594,0.2087,0.0476,0.1736,0.0504])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.2073,0.064,0.2362,0.0821,0.3267,0.0796,0.1717,0.0822,0.1726,0.1297,0.3077,0.1289,0.3074,0.1865,0.1742,0.184,0.0061,0.1086,0.1366,0.0368])))
	.append(new autoclass.MFVec2f(java.newArray("float", [0.1241,0.1189,0.0168,0.0309,0.0211,0.1882,0.14,0.1857])));

	/** Large attribute array: HAnimMotion channels field, scene-graph level=3, element #241, 75 total values */
	this.HAnimMotion_3_241_channels = new autoclass.SFString("6 Xposition Yposition Zposition Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation 3 Zrotation Xrotation Yrotation");

	/** Large attribute array: HAnimMotion joints field, scene-graph level=3, element #241, 18 total values */
	this.HAnimMotion_3_241_joints = new autoclass.SFString("HumanoidRoot l_hip l_knee l_talocrural r_hip r_knee r_talocrural vl5 IGNORED l_shoulder l_elbow l_radiocarpal IGNORED r_shoulder r_elbow r_radiocarpal IGNORED skullbase");

	/** Large attribute array: HAnimMotion values field, scene-graph level=3, element #241, 22344 total numbers */
	this.HAnimMotion_3_241_values = new autoclass.MFFloat(java.newArray("float", [102.2373,37.3864,-30.7042,25.99,9.39,-76.67,29.91,-61.78,39.39,0.15,30.83,-0.15,-0.26,-28.19,0.29,3.19,-14.91,-9.78,-0.14,22.80,0.13,-3.32,-36.05,-1.04,0.79,-28.37,9.52,0.00,-0.00,0.00,69.07,-22.04,21.58,0.35,-54.30,0.53,29.27,-0.43,-13.04,-0.00,-0.00,-0.00,-44.97,18.14,-34.93,-0.56,-68.67,-0.77,-31.17,-1.10,19.42,-5.97,-15.92,-8.18,10.67,17.77,-18.05,101.0132,37.5130,-29.6601,26.20,9.76,-74.59,24.96,-62.35,33.97,0.15,31.90,-0.16,-0.85,-23.93,0.31,2.67,-11.32,-9.20,-0.14,19.06,0.12,-1.61,-32.41,-0.58,1.74,-30.18,9.77,0.00,-0.00,0.00,67.84,-21.19,21.33,0.33,-51.75,0.51,27.86,-0.57,-11.96,-0.00,-0.00,-0.00,-46.55,18.10,-36.70,-0.51,-66.51,-0.72,-30.61,-1.04,18.43,-7.18,-15.52,-8.48,10.58,18.63,-18.73,99.8019,37.6292,-28.4775,26.15,9.40,-72.64,18.33,-61.82,27.66,0.15,32.96,-0.16,-1.23,-21.18,0.38,1.45,-7.38,-9.40,-0.13,15.62,0.11,1.15,-27.53,-0.28,2.14,-32.68,10.00,0.00,-0.00,0.00,66.23,-19.31,19.35,0.31,-49.16,0.49,26.22,-0.64,-10.92,-0.00,-0.00,-0.00,-47.88,18.84,-35.88,-0.49,-65.33,-0.69,-30.28,-1.00,17.89,-7.84,-13.32,-8.37,10.39,19.02,-19.18,98.5371,37.8909,-27.3094,25.87,8.50,-71.67,16.58,-58.87,32.26,0.15,33.83,-0.16,-1.00,-19.18,0.40,-0.12,-3.92,-9.35,-0.13,13.48,0.11,4.16,-21.97,-0.55,1.31,-34.00,10.78,0.00,-0.00,0.00,66.31,-18.11,18.20,0.29,-46.27,0.46,24.47,-0.58,-9.83,-0.00,-0.00,-0.00,-47.65,18.25,-36.23,-0.46,-63.71,-0.66,-29.76,-0.95,17.16,-7.75,-11.48,-8.42,10.67,19.42,-20.03,97.3524,38.1439,-26.1283,25.41,7.45,-70.56,13.04,-55.97,32.74,0.15,34.22,-0.17,-0.68,-18.05,0.39,-1.94,-2.61,-9.49,-0.13,15.44,0.11,6.09,-17.49,-1.13,-0.19,-34.84,10.89,0.00,-0.00,0.00,67.12,-16.77,17.43,0.28,-43.59,0.44,22.94,-0.46,-8.88,-0.00,-0.00,-0.00,-46.90,17.43,-37.05,-0.43,-61.49,-0.63,-28.93,-0.86,16.18,-7.47,-9.75,-8.54,10.76,19.57,-20.81,96.2173,38.4056,-24.9244,24.69,6.66,-68.89,7.37,-53.15,27.51,0.15,33.76,-0.16,-0.61,-18.05,0.38,-3.72,-2.15,-10.11,-0.14,19.14,0.12,7.49,-13.64,-1.82,-2.03,-34.13,10.04,0.00,-0.00,0.00,67.56,-16.62,19.50,0.27,-41.50,0.43,21.74,-0.34,-8.16,-0.00,-0.00,-0.00,-45.96,15.73,-39.13,-0.39,-58.68,-0.59,-27.81,-0.72,14.98,-7.27,-9.14,-8.81,10.66,19.49,-21.42,95.1761,38.6924,-23.7938,24.15,6.42,-66.71,2.82,-50.48,23.33,0.15,32.73,-0.16,-0.47,-18.01,0.36,-4.97,-2.42,-10.52,-0.14,23.12,0.13,9.59,-8.81,-3.08,-2.43,-35.20,8.98,0.00,-0.00,0.00,66.08,-15.05,19.34,0.27,-40.97,0.43,21.31,-0.27,-7.99,-0.00,-0.00,-0.00,-46.61,15.23,-38.76,-0.38,-57.27,-0.57,-27.29,-0.66,14.38,-7.51,-6.45,-8.69,10.34,19.29,-21.80,94.1762,38.9317,-22.7185,23.12,5.98,-64.14,-0.64,-46.82,21.66,0.15,31.49,-0.16,-0.24,-18.64,0.33,-6.39,-2.50,-12.36,-0.14,27.19,0.14,12.08,-3.47,-4.99,-3.87,-35.12,7.85,0.00,-0.00,0.00,65.09,-14.87,19.12,0.27,-40.69,0.43,21.06,-0.21,-7.91,-0.00,-0.00,-0.00,-46.35,15.01,-39.01,-0.36,-55.89,-0.55,-26.78,-0.60,13.80,-7.31,-4.03,-8.75,10.55,18.89,-22.62,93.2366,39.1289,-21.7609,21.45,6.18,-62.86,-1.97,-43.09,19.07,0.15,30.63,-0.15,-0.37,-19.86,0.34,-6.65,-2.81,-12.07,-0.15,31.11,0.16,13.48,0.96,-6.60,-3.20,-34.37,8.50,0.00,-0.00,0.00,63.73,-14.81,18.79,0.27,-40.80,0.43,20.99,-0.17,-7.96,-0.00,-0.00,-0.00,-45.98,14.78,-38.15,-0.35,-54.48,-0.54,-26.16,-0.51,13.23,-7.35,-2.07,-8.79,10.83,18.39,-23.36,92.3888,39.3091,-20.8820,19.91,6.61,-61.14,-2.80,-39.87,17.37,0.15,30.07,-0.15,-0.39,-20.96,0.33,-7.16,-3.88,-12.65,-0.16,34.78,0.17,14.20,5.59,-8.07,-2.13,-34.16,8.98,0.00,-0.00,0.00,62.06,-14.08,17.05,0.27,-41.44,0.43,21.20,-0.16,-8.19,-0.00,-0.00,-0.00,-45.94,14.76,-36.67,-0.35,-54.30,-0.53,-26.12,-0.51,13.15,-7.92,0.86,-8.72,11.42,17.57,-24.43,91.5813,39.4364,-20.0691,18.04,6.98,-59.50,-2.94,-36.77,16.03,0.15,30.04,-0.15,-0.44,-21.88,0.33,-7.09,-4.66,-11.68,-0.16,38.33,0.18,13.82,9.33,-8.68,-0.98,-33.13,9.48,0.00,-0.00,0.00,60.80,-13.97,16.16,0.27,-41.75,0.43,21.16,-0.09,-8.32,-0.00,-0.00,-0.00,-46.05,14.11,-36.09,-0.34,-53.30,-0.52,-25.65,-0.43,12.75,-8.46,2.90,-8.66,12.07,17.16,-25.41,90.8459,39.3922,-19.3562,16.11,7.21,-57.54,-3.34,-34.04,13.83,0.15,30.45,-0.15,-0.54,-22.99,0.32,-7.10,-4.73,-11.05,-0.17,41.88,0.19,10.54,9.27,-6.58,-1.07,-31.24,9.59,0.00,-0.00,0.00,60.87,-14.60,15.39,0.27,-42.26,0.44,21.22,-0.02,-8.53,-0.00,-0.00,-0.00,-45.12,13.77,-35.61,-0.34,-53.57,-0.53,-25.63,-0.40,12.88,-7.97,3.69,-9.09,12.59,16.74,-26.65,90.1361,39.4038,-18.6673,14.17,6.77,-56.09,-3.89,-31.01,11.17,0.15,30.84,-0.16,-0.67,-24.18,0.31,-7.50,-6.13,-10.33,-0.18,46.01,0.21,8.78,11.25,-5.75,-1.02,-28.88,9.92,0.00,-0.00,0.00,60.82,-14.90,15.28,0.28,-42.91,0.44,21.37,0.02,-8.78,-0.00,-0.00,-0.00,-44.75,13.25,-34.40,-0.35,-54.73,-0.54,-25.88,-0.38,13.38,-7.81,4.44,-9.28,13.20,16.07,-27.54,89.5959,39.3571,-18.1248,12.97,6.41,-54.50,-3.90,-28.77,11.47,0.15,31.06,-0.16,-0.78,-25.06,0.30,-8.13,-9.16,-9.76,-0.20,50.94,0.24,7.17,12.89,-4.87,-1.43,-27.90,10.17,0.00,-0.00,0.00,60.84,-14.63,14.23,0.28,-44.13,0.45,21.82,0.02,-9.23,-0.00,-0.00,-0.00,-44.10,13.58,-31.86,-0.37,-56.24,-0.56,-26.19,-0.35,14.04,-7.34,5.95,-9.60,13.40,15.13,-28.59,89.2018,39.2414,-17.5740,11.79,5.12,-52.41,-4.98,-26.13,11.15,0.15,31.15,-0.16,-0.91,-25.81,0.28,-10.13,-11.73,-10.91,-0.23,56.18,0.27,5.49,13.09,-3.75,-2.60,-24.79,9.51,0.00,-0.00,0.00,60.45,-14.62,14.45,0.29,-45.61,0.46,22.38,-0.01,-9.79,-0.00,-0.00,-0.00,-44.25,12.52,-29.24,-0.38,-57.59,-0.57,-26.52,-0.35,14.63,-7.56,5.79,-9.83,13.87,14.57,-29.29,88.8635,39.1751,-17.1212,10.43,3.76,-50.36,-6.10,-23.49,9.21,0.15,31.35,-0.16,-1.02,-26.48,0.26,-11.78,-14.49,-11.76,-0.27,61.34,0.31,4.62,12.66,-3.12,-3.91,-21.25,8.65,0.00,-0.00,0.00,60.62,-14.57,14.82,0.30,-46.77,0.47,23.00,-0.12,-10.20,-0.00,-0.00,-0.00,-44.37,11.71,-26.33,-0.40,-59.50,-0.60,-27.14,-0.44,15.45,-7.72,5.78,-9.61,14.86,13.92,-29.53,88.6095,39.0886,-16.8331,9.11,2.95,-48.70,-6.36,-21.76,8.14,0.15,32.05,-0.16,-1.13,-27.03,0.24,-12.66,-18.42,-12.07,-0.32,66.47,0.37,4.36,11.81,-2.88,-3.85,-18.38,8.31,0.00,-0.00,0.00,59.86,-14.20,14.71,0.30,-47.82,0.48,23.82,-0.33,-10.54,-0.00,-0.00,-0.00,-45.22,11.37,-22.42,-0.43,-61.81,-0.63,-27.88,-0.56,16.46,-8.35,6.01,-9.43,15.42,13.45,-29.73,88.4366,38.9708,-16.6867,8.01,2.21,-47.56,-6.32,-20.85,7.49,0.15,33.37,-0.16,-1.23,-27.37,0.23,-13.58,-23.40,-12.14,-0.40,71.41,0.46,4.19,12.13,-2.77,-3.73,-14.87,7.89,0.00,-0.00,0.00,59.19,-14.02,16.38,0.30,-48.20,0.48,24.61,-0.53,-10.62,-0.00,-0.00,-0.00,-46.17,9.55,-19.17,-0.46,-63.85,-0.67,-28.54,-0.68,17.35,-9.04,5.08,-9.44,15.72,13.32,-29.71,88.3473,38.7864,-16.5983,7.19,1.65,-46.29,-6.38,-20.61,6.65,0.16,35.24,-0.17,-1.39,-28.15,0.20,-15.15,-28.53,-13.27,-0.52,75.66,0.58,4.04,10.02,-2.54,-4.39,-11.69,7.02,0.00,-0.00,0.00,59.23,-13.66,17.56,0.31,-48.33,0.48,25.43,-0.63,-10.61,-0.00,-0.00,-0.00,-46.53,7.20,-16.91,-0.50,-65.80,-0.70,-29.30,-0.84,18.20,-8.96,4.04,-9.47,15.87,12.90,-29.36,88.2985,38.5674,-16.6196,6.57,1.59,-45.41,-5.98,-21.16,6.20,0.16,37.52,-0.18,-1.60,-29.16,0.14,-16.42,-34.12,-14.39,-0.65,78.70,0.72,4.04,8.40,-2.42,-4.51,-9.33,6.34,0.00,-0.00,0.00,59.22,-13.06,18.94,0.31,-48.44,0.48,26.18,-0.60,-10.63,-0.00,-0.00,-0.00,-47.24,4.98,-14.45,-0.54,-67.78,-0.75,-30.26,-1.02,19.06,-9.09,2.88,-9.39,15.89,12.84,-28.76,88.2626,38.3273,-16.6708,6.42,1.63,-45.74,-5.51,-22.23,7.00,0.17,40.02,-0.19,-1.81,-30.35,0.08,-17.55,-40.14,-14.82,-0.75,80.15,0.82,4.17,7.34,-2.42,-4.39,-7.63,6.08,0.00,-0.00,0.00,59.03,-11.63,21.06,0.31,-48.99,0.49,26.86,-0.53,-10.85,-0.00,-0.00,-0.00,-48.66,2.03,-11.83,-0.56,-68.80,-0.78,-31.16,-1.11,19.48,-9.68,1.80,-9.02,16.02,12.65,-27.73,88.2208,38.0047,-16.7127,6.76,1.76,-46.54,-5.47,-23.79,7.61,0.17,42.64,-0.20,-1.87,-31.57,0.03,-18.80,-45.41,-15.44,-0.71,79.53,0.77,3.07,3.55,-1.60,-4.98,-6.01,6.11,0.00,-0.00,0.00,59.31,-10.68,24.32,0.31,-49.76,0.49,27.48,-0.46,-11.17,-0.00,-0.00,-0.00,-49.75,-1.61,-10.26,-0.57,-69.22,-0.79,-31.92,-1.08,19.66,-9.75,0.18,-8.90,16.05,12.10,-26.69,88.1571,37.6510,-16.7239,7.80,1.66,-48.09,-6.03,-25.39,7.93,0.18,44.78,-0.21,-1.86,-33.11,-0.03,-20.00,-50.28,-15.72,-0.55,76.59,0.62,1.61,-1.95,-0.70,-5.76,-5.38,7.10,0.00,-0.00,0.00,59.22,-9.57,26.84,0.32,-50.59,0.50,28.03,-0.38,-11.51,0.00,-0.00,-0.00,-51.00,-4.95,-9.31,-0.58,-69.49,-0.79,-32.52,-0.97,19.80,-10.35,-1.50,-8.85,16.13,12.23,-25.94,88.1025,37.3989,-16.7136,9.48,2.04,-50.26,-6.34,-27.51,8.74,0.19,46.36,-0.21,-1.79,-34.25,-0.06,-21.26,-55.47,-16.88,-0.40,71.32,0.46,0.90,-4.05,-0.39,-6.35,-6.14,8.37,0.00,-0.00,0.00,59.18,-7.74,28.88,0.32,-51.17,0.50,28.47,-0.29,-11.76,-0.00,-0.00,-0.00,-51.65,-8.25,-9.21,-0.58,-69.48,-0.79,-32.93,-0.85,19.81,-10.91,-2.84,-8.64,16.08,12.33,-24.93,87.9962,37.1696,-16.6837,11.40,2.08,-52.93,-6.62,-29.31,10.21,0.19,47.35,-0.22,-1.67,-35.00,-0.06,-22.56,-59.20,-19.24,-0.30,64.46,0.35,0.94,-5.24,-0.40,-7.55,-6.35,9.88,0.00,-0.00,0.00,59.30,-6.18,31.78,0.33,-51.51,0.51,28.76,-0.21,-11.92,-0.00,-0.00,-0.00,-51.81,-12.21,-9.87,-0.56,-68.89,-0.78,-33.20,-0.68,19.57,-11.27,-4.54,-8.64,16.02,11.53,-23.85,87.7643,37.0833,-16.5464,12.93,2.06,-55.91,-6.72,-30.19,11.53,0.19,47.61,-0.22,-1.43,-35.85,-0.04,-22.60,-61.49,-21.53,-0.23,56.34,0.27,1.36,-4.24,-0.61,-7.41,-6.40,11.40,0.00,-0.00,0.00,58.14,-4.32,34.78,0.33,-51.76,0.51,28.98,-0.15,-12.03,-0.00,-0.00,-0.00,-53.22,-16.18,-10.18,-0.54,-68.11,-0.76,-33.42,-0.46,19.25,-12.83,-6.19,-8.53,16.29,11.34,-22.80,87.5180,37.0526,-16.4667,14.67,2.13,-58.44,-6.92,-31.14,12.33,0.19,47.32,-0.22,-1.17,-36.40,0.01,-22.81,-63.61,-24.10,-0.19,48.39,0.22,2.00,-2.00,-0.97,-8.09,-7.68,12.90,0.00,-0.00,0.00,58.15,-2.72,36.53,0.33,-51.49,0.51,29.02,-0.08,-11.93,-0.00,-0.00,-0.00,-53.19,-18.96,-10.25,-0.53,-67.29,-0.74,-33.58,-0.23,18.92,-12.90,-7.12,-8.50,15.69,11.21,-21.93,87.1980,37.0751,-16.3576,15.97,2.13,-60.04,-7.29,-31.51,12.34,0.19,46.74,-0.21,-0.91,-36.37,0.07,-23.51,-64.79,-26.48,-0.17,41.71,0.19,2.87,-0.46,-1.44,-8.43,-8.75,13.60,0.00,-0.00,0.00,57.72,-1.27,38.40,0.33,-51.37,0.51,29.08,-0.02,-11.90,-0.00,-0.00,-0.00,-53.32,-21.15,-8.99,-0.51,-66.46,-0.72,-33.60,-0.07,18.58,-13.16,-7.95,-8.48,15.29,11.56,-21.36,86.7742,37.1565,-16.2769,16.95,2.36,-61.67,-7.26,-31.48,12.23,0.18,45.76,-0.21,-0.76,-36.12,0.11,-21.85,-65.95,-24.35,-0.16,36.47,0.17,4.48,-0.46,-2.19,-8.19,-9.43,14.65,0.00,-0.00,0.00,57.01,-0.61,39.98,0.32,-51.20,0.50,29.08,0.02,-11.84,-0.00,-0.00,-0.00,-53.78,-22.86,-7.50,-0.50,-66.06,-0.71,-33.61,0.01,18.41,-13.44,-8.82,-8.63,15.03,11.84,-21.16,86.2933,37.2549,-16.1715,17.93,2.39,-62.86,-7.67,-30.98,11.62,0.18,44.30,-0.20,-0.54,-36.16,0.16,-19.07,-67.15,-17.25,-0.15,32.85,0.16,6.74,-1.87,-3.05,-8.29,-10.39,15.57,0.00,-0.00,0.00,56.83,-0.09,40.20,0.32,-51.01,0.50,29.00,0.01,-11.76,-0.00,-0.00,-0.00,-53.93,-23.55,-5.41,-0.51,-66.58,-0.72,-33.73,0.00,18.65,-13.56,-9.07,-8.78,15.07,11.98,-21.35,85.7143,37.3685,-16.0444,18.56,2.45,-63.62,-8.13,-29.95,10.42,0.17,42.65,-0.20,-0.15,-36.19,0.25,-13.89,-67.73,-4.24,-0.15,30.65,0.15,9.25,-4.68,-3.67,-8.16,-11.05,16.12,0.00,-0.00,0.00,56.55,0.46,40.37,0.32,-50.93,0.50,28.95,-0.00,-11.72,-0.00,-0.00,-0.00,-54.49,-23.86,-2.51,-0.53,-67.44,-0.74,-33.83,-0.08,19.03,-13.43,-9.63,-8.99,14.58,12.58,-21.48,85.0774,37.4994,-15.9003,19.16,2.77,-64.17,-8.43,-28.90,8.99,0.17,41.02,-0.19,0.22,-36.23,0.34,-12.25,-68.15,0.61,-0.15,29.45,0.15,9.94,-7.66,-3.39,-7.75,-12.17,16.53,0.00,-0.00,0.00,56.24,0.98,40.69,0.32,-50.79,0.50,28.83,-0.04,-11.65,-0.00,-0.00,-0.00,-54.83,-23.90,0.40,-0.54,-67.71,-0.75,-33.65,-0.26,19.12,-13.25,-9.94,-9.15,14.13,13.15,-21.65,84.3668,37.5620,-15.7648,19.99,2.94,-64.76,-8.50,-27.85,8.56,0.17,39.40,-0.18,0.45,-36.30,0.40,-12.50,-68.55,-0.10,-0.15,29.07,0.15,8.97,-11.59,-2.43,-7.85,-14.01,17.13,0.00,-0.00,0.00,56.73,1.43,40.85,0.32,-50.24,0.50,28.53,-0.10,-11.42,-0.00,-0.00,-0.00,-54.57,-23.35,3.70,-0.54,-67.95,-0.75,-33.28,-0.51,19.16,-12.63,-9.51,-9.19,14.00,13.28,-21.97,83.5838,37.5840,-15.6535,20.91,3.11,-65.20,-8.45,-26.74,8.53,0.16,37.69,-0.18,0.66,-36.64,0.45,-12.45,-68.96,-0.64,-0.15,29.25,0.15,7.82,-14.96,-1.66,-7.74,-15.67,17.76,0.00,-0.00,0.00,56.80,1.64,41.29,0.31,-49.77,0.49,28.24,-0.16,-11.22,-0.00,-0.00,-0.00,-55.25,-22.54,6.94,-0.54,-67.81,-0.75,-32.78,-0.73,19.05,-12.68,-9.58,-9.41,14.36,13.88,-22.68,82.7104,37.6562,-15.5250,21.63,3.34,-65.48,-8.24,-25.35,8.45,0.16,35.86,-0.17,0.72,-36.57,0.47,-12.65,-68.98,-1.58,-0.15,29.59,0.15,6.47,-17.69,-1.08,-7.54,-17.08,18.28,0.00,-0.00,0.00,56.90,1.85,41.60,0.31,-49.53,0.49,28.07,-0.19,-11.11,-0.00,-0.00,-0.00,-56.11,-21.71,9.53,-0.51,-66.72,-0.72,-31.87,-0.92,18.50,-12.71,-9.44,-9.63,14.65,13.69,-23.21,81.7785,37.7181,-15.4031,22.16,3.48,-65.26,-7.98,-23.64,8.53,0.15,34.00,-0.16,0.62,-36.25,0.44,-13.95,-68.33,-3.71,-0.15,29.87,0.15,5.06,-20.09,-0.67,-7.78,-18.52,18.40,0.00,-0.00,0.00,57.50,1.67,42.11,0.31,-49.11,0.49,27.77,-0.26,-10.94,-0.00,-0.00,-0.00,-56.67,-20.67,11.73,-0.47,-64.14,-0.67,-30.44,-0.97,17.33,-12.54,-9.22,-9.89,14.89,14.01,-24.00,80.7702,37.7606,-15.2427,22.76,3.73,-64.61,-7.78,-21.92,7.98,0.15,32.11,-0.16,0.47,-35.70,0.41,-16.03,-67.44,-6.77,-0.15,30.06,0.15,3.31,-23.04,-0.35,-8.04,-20.12,18.09,0.00,-0.00,0.00,58.17,1.52,42.17,0.31,-48.79,0.48,27.48,-0.32,-10.80,-0.00,-0.00,-0.00,-57.36,-19.58,13.17,-0.43,-61.55,-0.63,-28.97,-0.87,16.21,-12.46,-8.77,-10.07,15.08,14.24,-24.71,79.6064,37.7910,-15.0872,22.97,4.10,-64.01,-7.11,-19.71,7.69,0.15,30.18,-0.15,0.29,-35.13,0.36,-16.83,-65.97,-8.87,-0.15,30.11,0.15,1.10,-26.62,-0.23,-8.31,-21.41,18.00,0.00,-0.00,0.00,59.09,1.27,41.63,0.31,-48.49,0.48,27.17,-0.39,-10.67,-0.00,-0.00,-0.00,-57.94,-18.27,13.91,-0.40,-59.77,-0.60,-27.90,-0.70,15.48,-12.27,-8.61,-10.34,15.22,14.43,-25.40,78.3476,37.8095,-14.9414,23.35,4.43,-63.25,-6.41,-17.60,7.90,0.15,28.25,-0.15,0.05,-34.18,0.32,-17.99,-64.44,-11.23,-0.15,30.16,0.15,-0.73,-29.56,-0.36,-8.27,-23.17,17.59,0.00,-0.00,0.00,59.50,1.67,40.77,0.31,-48.31,0.48,26.87,-0.46,-10.59,-0.00,-0.00,-0.00,-59.03,-16.76,15.36,-0.39,-58.51,-0.58,-27.07,-0.50,14.99,-12.28,-7.95,-10.35,15.27,14.68,-25.84,76.9685,37.7749,-14.7762,23.77,4.61,-62.55,-5.83,-15.33,7.41,0.14,26.37,-0.14,-0.12,-33.03,0.29,-19.08,-62.73,-13.34,-0.15,30.14,0.15,-1.80,-31.45,-0.53,-8.58,-24.85,17.38,0.00,-0.00,0.00,60.17,1.57,40.17,0.30,-48.06,0.48,26.61,-0.50,-10.48,-0.00,-0.00,-0.00,-60.13,-15.12,16.77,-0.38,-58.01,-0.58,-26.59,-0.34,14.83,-12.12,-7.50,-10.54,15.19,14.83,-26.41,75.4827,37.7198,-14.6104,24.15,4.92,-61.47,-5.10,-12.86,6.17,0.14,24.18,-0.14,-0.33,-31.39,0.27,-20.43,-60.93,-15.97,-0.15,30.48,0.15,-2.24,-32.55,-0.64,-9.27,-27.10,16.76,0.00,-0.00,0.00,61.30,1.29,39.24,0.30,-47.74,0.48,26.22,-0.55,-10.36,-0.00,-0.00,-0.00,-60.48,-13.32,18.47,-0.38,-57.72,-0.57,-26.19,-0.16,14.75,-11.49,-6.70,-10.60,14.97,15.14,-26.89,73.8344,37.8540,-14.4894,24.10,5.87,-60.11,-3.58,-10.08,5.36,0.14,21.36,-0.13,-0.63,-28.80,0.26,-20.30,-59.57,-18.16,-0.15,31.78,0.16,-1.55,-31.26,-0.48,-8.93,-30.28,16.12,0.00,-0.00,0.00,61.99,1.35,37.43,0.30,-47.66,0.47,25.85,-0.60,-10.33,-0.00,-0.00,-0.00,-60.89,-10.69,21.57,-0.39,-58.20,-0.58,-26.10,-0.02,15.01,-11.24,-4.96,-10.42,15.03,15.76,-27.51,72.1085,38.1202,-14.3910,23.82,6.85,-59.44,-1.86,-7.29,4.16,0.14,18.42,-0.12,-1.17,-24.66,0.31,-18.24,-58.67,-18.56,-0.15,33.14,0.16,0.18,-27.82,-0.24,-8.35,-33.06,16.11,0.00,-0.00,0.00,62.86,0.79,36.38,0.30,-47.64,0.47,25.58,-0.62,-10.33,-0.00,-0.00,-0.00,-61.37,-8.52,25.13,-0.40,-59.45,-0.60,-26.34,0.01,15.58,-11.00,-3.42,-10.27,15.28,16.35,-28.15,70.3796,38.4528,-14.3253,23.28,7.32,-59.31,-0.58,-4.86,2.27,0.13,17.03,-0.12,-2.20,-19.44,0.52,-15.57,-57.18,-17.90,-0.15,34.03,0.17,1.85,-24.18,-0.24,-7.59,-34.75,16.75,0.00,-0.00,0.00,63.04,0.51,35.54,0.31,-48.46,0.48,25.55,-0.63,-10.66,-0.00,-0.00,-0.00,-62.00,-6.58,28.50,-0.44,-62.38,-0.64,-27.05,-0.03,16.89,-11.20,-2.67,-10.20,15.85,16.97,-28.82,68.6263,38.6937,-14.3449,21.83,8.04,-59.18,1.50,-3.32,2.24,0.14,18.51,-0.12,-3.38,-14.77,0.92,-12.98,-54.24,-20.07,-0.16,34.37,0.17,2.66,-21.64,-0.36,-6.29,-35.31,17.03,0.00,-0.00,0.00,62.91,0.53,35.20,0.31,-49.45,0.49,25.59,-0.63,-11.07,-0.00,-0.00,-0.00,-62.28,-5.72,30.79,-0.48,-65.00,-0.69,-27.62,-0.07,18.10,-10.88,-2.45,-10.34,15.59,17.17,-29.03,66.9122,38.9690,-14.4053,20.22,8.67,-58.72,3.28,-2.84,2.18,0.14,21.81,-0.13,-4.89,-10.30,1.60,-10.89,-50.84,-23.53,-0.16,34.23,0.17,2.48,-21.28,-0.37,-5.29,-35.53,17.07,0.00,-0.00,0.00,62.48,0.20,34.64,0.32,-50.43,0.50,25.76,-0.63,-11.47,-0.00,-0.00,-0.00,-62.32,-4.99,32.68,-0.52,-66.88,-0.73,-28.02,-0.12,18.97,-10.15,-2.07,-10.49,15.40,17.31,-29.29,65.3395,39.2690,-14.4450,19.21,8.58,-57.89,3.72,-3.20,2.89,0.14,25.42,-0.14,-6.95,-5.79,2.71,-8.59,-47.82,-23.18,-0.15,33.85,0.16,2.30,-21.62,-0.35,-5.37,-35.67,16.58,0.00,-0.00,0.00,62.00,-0.28,33.89,0.32,-51.30,0.51,26.02,-0.64,-11.83,-0.00,-0.00,-0.00,-62.45,-3.74,34.48,-0.59,-69.89,-0.81,-28.69,-0.27,20.36,-9.60,-1.50,-10.57,15.57,17.44,-29.71,63.9115,39.5229,-14.5369,18.59,8.27,-56.96,3.57,-4.41,4.36,0.15,28.92,-0.15,-8.88,-2.31,3.94,-6.90,-45.19,-22.23,-0.15,33.53,0.16,2.14,-21.99,-0.33,-6.74,-35.26,15.60,0.00,-0.00,0.00,62.09,-1.49,33.43,0.33,-51.72,0.51,26.21,-0.66,-11.99,-0.00,-0.00,-0.00,-62.03,-2.59,34.86,-0.68,-72.75,-0.91,-29.31,-0.45,21.68,-8.96,-1.64,-10.83,16.06,17.35,-30.27,62.6141,39.6352,-14.7195,17.19,8.72,-56.20,4.68,-6.00,6.74,0.15,32.41,-0.16,-8.10,-3.39,3.46,-4.00,-42.70,-21.02,-0.15,33.41,0.16,1.82,-22.75,-0.28,-6.66,-34.55,14.56,0.00,-0.00,0.00,61.99,-2.23,32.75,0.33,-52.01,0.51,26.44,-0.68,-12.10,-0.00,-0.00,-0.00,-61.60,-2.05,35.31,-0.78,-74.99,-1.01,-29.94,-0.70,22.69,-8.48,-1.33,-10.90,16.42,17.04,-30.60,61.5609,39.6687,-14.9009,16.57,8.13,-55.97,3.97,-7.76,8.73,0.16,35.12,-0.17,-6.38,-6.81,2.38,-2.46,-41.04,-19.26,-0.15,34.08,0.17,1.49,-23.54,-0.25,-7.49,-33.20,13.39,0.00,-0.00,0.00,61.52,-2.81,32.43,0.33,-52.31,0.51,26.76,-0.70,-12.21,-0.00,-0.00,-0.00,-61.39,-2.43,35.26,-0.89,-76.75,-1.11,-30.52,-0.93,23.48,-8.28,-1.37,-10.90,16.45,16.58,-30.50,60.6604,39.6625,-15.0743,15.65,7.08,-55.99,2.69,-8.81,10.27,0.16,36.89,-0.17,-4.84,-10.60,1.54,-1.42,-39.30,-17.76,-0.16,35.18,0.17,1.19,-24.18,-0.22,-7.95,-30.82,12.56,0.00,-0.00,0.00,60.65,-3.46,31.71,0.33,-52.34,0.51,27.01,-0.70,-12.21,-0.00,-0.00,-0.00,-61.77,-3.21,35.02,-1.04,-78.72,-1.27,-31.08,-1.14,24.38,-8.56,-1.42,-10.77,16.67,15.71,-30.27,59.8265,39.7043,-15.3276,14.03,6.74,-56.34,2.60,-9.50,11.21,0.16,37.60,-0.18,-3.12,-14.38,0.87,0.33,-37.69,-16.77,-0.16,36.51,0.17,1.33,-23.50,-0.23,-6.88,-28.21,11.99,0.00,-0.00,0.00,59.38,-4.06,30.92,0.33,-52.33,0.51,27.19,-0.70,-12.20,-0.00,-0.00,-0.00,-62.43,-4.34,34.99,-1.28,-80.85,-1.51,-31.72,-1.35,25.35,-8.82,-1.33,-10.49,16.75,14.80,-29.72,59.2182,39.8128,-15.6466,13.09,5.80,-56.82,1.55,-10.93,9.80,0.16,37.06,-0.18,-1.49,-17.48,0.49,1.07,-37.31,-15.45,-0.16,38.77,0.18,1.85,-21.81,-0.28,-6.81,-25.43,10.94,0.00,-0.00,0.00,58.30,-4.41,29.76,0.33,-52.40,0.52,27.41,-0.69,-12.23,-0.00,-0.00,-0.00,-63.06,-6.70,34.50,-1.48,-82.12,-1.72,-32.31,-1.50,25.92,-8.93,-1.45,-10.16,16.73,13.94,-28.91,58.8661,39.9087,-15.9749,12.63,4.57,-57.34,-0.34,-13.19,6.96,0.16,36.09,-0.17,-0.51,-20.41,0.34,0.10,-37.93,-16.38,-0.17,41.80,0.19,2.49,-19.52,-0.40,-7.31,-22.49,9.61,0.00,-0.00,0.00,57.24,-4.85,28.68,0.33,-52.44,0.52,27.71,-0.65,-12.24,-0.00,-0.00,-0.00,-63.66,-9.38,33.62,-1.74,-83.31,-1.98,-32.86,-1.59,26.46,-8.88,-1.75,-9.81,16.97,13.16,-28.13,58.7053,39.9326,-16.4452,11.91,3.89,-58.46,-1.58,-15.74,3.48,0.16,35.46,-0.17,-0.36,-22.26,0.32,-0.53,-39.27,-18.11,-0.18,45.16,0.21,3.22,-16.32,-0.64,-6.84,-19.56,9.34,0.00,-0.00,0.00,55.96,-5.93,27.65,0.33,-52.55,0.52,28.03,-0.60,-12.29,-0.00,-0.00,-0.00,-64.36,-11.75,32.49,-2.22,-84.75,-2.46,-33.42,-1.66,27.14,-8.91,-2.17,-9.72,17.27,12.30,-27.76,58.7000,40.0081,-17.0948,11.13,3.38,-60.54,-1.87,-18.36,0.74,0.16,35.64,-0.17,-0.28,-22.27,0.31,-0.91,-41.33,-19.84,-0.19,48.76,0.22,3.99,-11.33,-1.11,-6.27,-15.72,9.50,0.00,-0.00,0.00,55.36,-7.31,27.66,0.33,-52.48,0.52,28.24,-0.55,-12.26,-0.00,-0.00,-0.00,-65.13,-14.85,30.63,-3.25,-86.41,-3.49,-33.98,-1.68,27.95,-8.47,-4.21,-9.89,17.32,11.98,-27.09,58.8460,39.9627,-17.9005,10.89,3.17,-64.26,-1.23,-21.45,-0.90,0.16,36.92,-0.17,0.10,-20.86,0.30,-1.36,-44.70,-21.32,-0.21,52.59,0.25,3.91,-4.69,-1.55,-5.19,-12.45,11.18,0.00,-0.00,0.00,55.07,-8.10,28.18,0.33,-52.56,0.52,28.51,-0.47,-12.30,-0.00,-0.00,-0.00,-66.53,-18.34,28.63,-4.37,-87.33,-4.61,-34.45,-1.65,28.41,-8.27,-6.62,-10.00,17.29,11.31,-26.02,59.1150,39.7143,-18.7173,11.60,2.89,-69.14,-0.22,-23.89,-1.00,0.16,38.76,-0.18,0.07,-21.17,0.30,-3.11,-49.00,-24.08,-0.23,56.38,0.27,2.07,2.52,-1.12,-4.44,-10.47,13.56,0.00,-0.00,0.00,55.47,-7.90,29.29,0.33,-52.35,0.51,28.67,-0.39,-12.23,-0.00,-0.00,-0.00,-68.38,-21.95,26.96,-7.31,-88.40,-7.56,-34.89,-1.59,28.95,-8.48,-9.20,-10.16,17.44,10.72,-24.97,59.4025,39.2844,-19.4436,12.95,2.39,-74.27,0.36,-25.55,0.29,0.17,40.67,-0.19,-0.71,-24.42,0.29,-6.32,-52.74,-28.15,-0.25,58.46,0.29,-2.15,8.07,1.16,-4.50,-9.63,16.45,0.00,-0.00,0.00,56.47,-7.43,30.46,0.33,-52.13,0.51,28.81,-0.30,-12.15,-0.00,-0.00,-0.00,-69.61,-25.55,25.21,-9.12,-88.72,-9.37,-35.22,-1.49,29.13,-8.67,-11.53,-10.62,17.63,10.07,-24.53,59.6259,38.8554,-20.0763,14.52,1.66,-78.97,0.36,-27.14,1.57,0.17,42.80,-0.20,-0.97,-27.44,0.23,-10.50,-54.95,-33.52,-0.24,57.50,0.28,-7.16,7.84,4.07,-5.44,-9.75,19.47,0.00,-0.00,0.00,58.08,-7.50,32.45,0.32,-50.69,0.50,28.48,-0.21,-11.58,-0.00,-0.00,-0.00,-69.03,-28.87,23.38,-5.35,-87.82,-5.60,-35.46,-1.33,28.72,-8.67,-13.21,-11.07,18.10,9.27,-24.43,59.7757,38.3569,-20.6441,16.54,0.81,-82.58,0.26,-29.34,2.67,0.18,44.75,-0.21,-0.80,-29.93,0.20,-15.63,-56.11,-40.90,-0.22,54.53,0.26,-5.01,-0.93,2.05,-6.07,-10.79,21.67,0.00,-0.00,0.00,58.75,-8.12,35.34,0.31,-48.38,0.48,27.78,-0.12,-10.67,-0.00,-0.00,-0.00,-68.07,-31.87,21.82,-2.72,-85.72,-2.97,-35.66,-1.09,27.72,-9.35,-13.98,-11.46,18.30,8.72,-24.46,59.8139,38.0255,-21.2329,18.38,-0.23,-85.44,0.97,-30.99,4.39,0.18,45.55,-0.21,-0.70,-31.78,0.19,-20.47,-56.48,-46.83,-0.20,50.44,0.23,-1.07,-9.52,0.16,-7.73,-11.76,23.31,0.00,-0.00,0.00,60.15,-9.36,38.85,0.29,-45.79,0.46,26.92,-0.04,-9.68,-0.00,-0.00,-0.00,-66.09,-34.78,19.34,-1.51,-82.29,-1.75,-35.74,-0.76,26.10,-9.20,-15.16,-12.07,18.42,8.99,-25.10,59.7365,37.9621,-21.8784,19.55,-1.15,-87.47,2.22,-31.47,6.53,0.18,45.16,-0.21,-0.77,-32.15,0.17,-24.55,-55.86,-50.55,-0.18,45.34,0.21,0.98,-14.00,-0.35,-8.61,-12.40,23.93,0.00,-0.00,0.00,60.85,-9.63,41.84,0.28,-43.41,0.44,26.10,0.04,-8.80,-0.00,-0.00,-0.00,-64.00,-37.13,17.11,-1.03,-78.68,-1.27,-35.60,-0.46,24.38,-9.78,-15.61,-12.46,19.30,9.01,-25.60,59.6176,38.0082,-22.5451,20.76,-2.27,-89.43,3.13,-31.45,8.63,0.18,43.78,-0.20,-0.80,-31.89,0.17,-26.99,-55.64,-49.08,-0.17,39.99,0.19,2.56,-16.74,-0.56,-9.55,-13.34,24.17,0.00,-0.00,0.00,61.28,-9.66,45.15,0.27,-41.09,0.43,25.15,0.06,-7.96,-0.00,-0.00,-0.00,-61.78,-38.84,14.95,-0.76,-74.53,-0.99,-35.19,-0.21,22.41,-10.33,-15.95,-12.63,19.85,9.11,-25.69,59.4223,38.1441,-23.2144,21.71,-3.53,-91.46,3.71,-30.45,10.61,0.17,41.33,-0.19,-0.78,-31.68,0.18,-27.54,-55.90,-41.83,-0.16,35.35,0.17,4.03,-18.75,-0.65,-10.10,-14.67,24.84,0.00,-0.00,0.00,60.75,-9.42,47.26,0.26,-39.75,0.42,24.45,-0.00,-7.48,-0.00,-0.00,-0.00,-60.40,-38.54,13.37,-0.62,-70.93,-0.84,-34.74,0.02,20.73,-10.88,-16.01,-12.78,20.00,9.45,-25.91,59.1306,38.2451,-23.9190,22.50,-4.83,-93.10,3.56,-29.05,10.93,0.16,38.48,-0.18,-0.61,-31.52,0.21,-25.77,-56.91,-27.01,-0.15,31.99,0.16,3.95,-22.91,-0.36,-10.74,-15.80,24.83,0.00,-0.00,0.00,60.72,-8.80,48.77,0.26,-38.04,0.41,23.60,-0.04,-6.89,-0.00,-0.00,-0.00,-59.95,-37.34,11.34,-0.54,-67.74,-0.75,-34.26,0.22,19.27,-11.14,-16.22,-12.87,20.11,9.51,-25.93,58.7591,38.1628,-24.7330,23.23,-6.28,-94.87,3.41,-27.58,10.73,0.16,36.04,-0.17,-0.35,-31.77,0.25,-27.27,-57.08,-22.06,-0.15,29.89,0.15,-2.72,-32.41,-0.72,-11.18,-17.27,24.76,0.00,-0.00,0.00,60.79,-7.14,47.19,0.25,-36.53,0.40,22.97,-0.02,-6.40,-0.00,-0.00,-0.00,-59.04,-35.14,8.85,-0.46,-63.91,-0.67,-33.46,0.35,17.51,-11.42,-16.26,-12.69,20.47,9.91,-25.70,58.3187,37.9867,-25.6619,23.88,-7.54,-97.11,3.69,-25.85,10.21,0.15,33.79,-0.16,0.07,-32.18,0.31,-31.62,-56.41,-30.67,-0.15,29.01,0.15,-7.56,-37.89,-2.28,-10.88,-18.69,24.60,0.00,-0.00,0.00,60.33,-7.05,50.99,0.25,-34.22,0.39,21.52,-0.17,-5.65,-0.00,-0.00,-0.00,-58.63,-32.72,6.62,-0.40,-59.89,-0.60,-32.46,0.45,15.69,-11.67,-16.56,-12.30,20.80,10.46,-24.97,57.8055,37.8835,-26.6825,24.74,-8.88,-100.17,4.04,-23.82,9.73,0.15,30.89,-0.16,0.54,-32.06,0.39,-32.76,-57.16,-36.69,-0.15,30.10,0.15,-9.77,-39.88,-3.22,-11.26,-20.80,24.38,0.00,-0.00,0.00,61.02,-6.17,51.43,0.24,-32.19,0.38,20.17,-0.28,-5.04,-0.00,-0.00,-0.00,-57.33,-29.63,4.44,-0.37,-56.78,-0.56,-31.60,0.52,14.33,-10.91,-17.30,-11.77,21.18,11.12,-24.02,57.1241,37.8049,-27.7955,24.69,-10.95,-103.85,3.70,-19.97,10.46,0.14,26.60,-0.14,0.55,-31.00,0.38,-32.27,-58.41,-40.58,-0.15,33.04,0.16,-12.45,-41.64,-4.42,-12.10,-22.66,24.28,0.00,-0.00,0.00,61.77,-4.79,49.94,0.24,-31.04,0.37,19.33,-0.33,-4.71,-0.00,-0.00,-0.00,-56.04,-26.17,2.68,-0.34,-53.64,-0.53,-30.63,0.56,12.99,-10.04,-17.60,-10.87,21.32,11.51,-22.54,56.4119,37.7886,-29.0674,24.53,-13.16,-107.54,3.41,-15.53,12.03,0.14,21.21,-0.13,-0.23,-28.44,0.30,-32.58,-60.23,-45.05,-0.16,36.44,0.17,-11.75,-40.80,-3.98,-12.98,-24.78,23.33,0.00,-0.00,0.00,62.37,-3.75,48.90,0.23,-29.91,0.37,18.30,-0.39,-4.40,-0.00,-0.00,-0.00,-54.75,-22.57,1.66,-0.32,-50.45,-0.50,-29.56,0.58,11.66,-9.12,-17.59,-9.61,21.37,12.13,-20.64,55.5992,37.8731,-30.4708,23.88,-15.15,-111.13,3.28,-10.80,13.00,0.13,16.21,-0.12,-1.85,-23.90,0.33,-33.01,-60.67,-49.57,-0.16,39.03,0.18,-4.34,-33.67,-1.01,-13.71,-26.45,21.93,0.00,-0.00,0.00,62.58,-3.54,47.38,0.23,-28.79,0.36,17.26,-0.40,-4.12,-0.00,-0.00,-0.00,-53.57,-18.64,0.58,-0.30,-47.62,-0.47,-28.44,0.51,10.50,-8.25,-17.18,-8.10,21.41,12.63,-18.48,54.7932,37.9653,-31.9957,22.85,-16.38,-115.16,4.72,-7.94,13.49,0.13,16.08,-0.12,-2.99,-18.97,0.62,-31.09,-59.72,-52.52,-0.17,40.65,0.19,0.81,-26.56,-0.17,-13.99,-28.34,20.77,0.00,-0.00,0.00,62.53,-4.24,46.19,0.23,-28.41,0.36,16.83,-0.38,-4.03,-0.00,-0.00,-0.00,-51.47,-13.78,-1.24,-0.29,-45.62,-0.46,-27.59,0.44,9.71,-6.38,-16.40,-6.31,20.84,13.34,-16.05,54.0626,38.0846,-33.5978,21.31,-16.73,-120.06,8.00,-7.49,13.63,0.14,22.01,-0.13,-3.16,-13.14,0.98,-24.61,-58.04,-49.71,-0.17,41.05,0.19,2.05,-23.73,-0.21,-12.97,-29.06,20.18,0.00,-0.00,0.00,61.51,-5.60,46.38,0.23,-27.65,0.36,16.26,-0.36,-3.85,-0.00,-0.00,-0.00,-49.49,-8.36,-2.34,-0.29,-44.88,-0.45,-27.19,0.36,9.41,-4.36,-16.06,-4.63,19.43,13.94,-13.24,53.3530,38.5164,-35.2325,19.35,-17.22,-125.29,10.93,-8.77,11.56,0.15,30.20,-0.15,-2.29,-3.10,1.20,-15.84,-55.74,-40.70,-0.17,39.91,0.19,1.99,-23.16,-0.23,-11.52,-28.59,19.73,0.00,-0.00,0.00,59.92,-7.40,46.30,0.23,-26.30,0.35,15.43,-0.33,-3.52,-0.00,-0.00,-0.00,-48.75,-3.47,-6.76,-0.28,-43.67,-0.45,-26.70,0.35,8.95,-3.36,-16.10,-3.08,18.51,14.51,-10.39,52.9042,38.8791,-36.7213,17.56,-18.25,-129.31,13.22,-12.61,9.64,0.16,38.82,-0.18,1.71,8.41,-0.73,-9.19,-53.53,-32.10,-0.16,38.46,0.18,1.48,-23.95,-0.21,-11.46,-27.96,17.58,0.00,-0.00,0.00,58.69,-9.44,43.41,0.23,-25.79,0.35,14.94,-0.28,-3.41,-0.00,-0.00,-0.00,-48.19,1.51,-11.08,-0.28,-43.09,-0.44,-26.41,0.32,8.73,-2.37,-15.97,-1.77,17.72,14.82,-7.97,52.4626,39.0298,-38.0505,15.67,-19.11,-134.46,14.16,-16.05,9.20,0.19,46.80,-0.21,2.96,9.41,-1.52,-3.79,-51.19,-25.19,-0.16,37.43,0.18,0.85,-25.05,-0.19,-11.70,-27.13,16.25,0.00,-0.00,0.00,58.41,-12.90,41.63,0.22,-25.00,0.35,14.16,-0.18,-3.25,-0.00,-0.00,-0.00,-46.89,6.33,-16.34,-0.27,-42.38,-0.44,-26.00,0.24,8.46,-1.28,-16.35,-1.08,17.53,14.85,-6.62,52.1216,39.0972,-39.2721,13.74,-19.81,-140.92,14.67,-18.99,10.11,0.21,53.06,-0.25,0.81,5.11,-0.16,0.88,-48.73,-19.73,-0.16,36.72,0.17,0.50,-25.73,-0.19,-10.62,-25.60,15.26,0.00,-0.00,0.00,57.75,-16.19,40.81,0.22,-24.11,0.34,13.38,-0.06,-3.07,-0.00,-0.00,-0.00,-46.71,9.56,-21.01,-0.27,-41.46,-0.43,-25.52,0.18,8.11,-1.02,-17.00,-0.80,17.17,14.77,-5.76,51.8434,39.1204,-40.4089,10.85,-20.95,-148.67,14.26,-21.69,12.15,0.23,56.42,-0.27,-1.23,-0.23,0.81,3.99,-46.43,-14.90,-0.16,36.37,0.17,0.49,-25.80,-0.19,-10.85,-24.61,14.20,0.00,-0.00,0.00,58.12,-19.15,38.88,0.22,-23.29,0.34,12.62,0.08,-2.92,-0.00,-0.00,-0.00,-45.82,12.27,-24.94,-0.27,-40.69,-0.43,-25.01,0.08,7.82,-0.31,-16.86,-1.01,17.33,14.41,-6.26,51.6546,39.1343,-41.3575,8.45,-22.08,-156.25,13.98,-25.43,13.03,0.23,56.79,-0.27,-2.15,-6.27,1.00,6.41,-44.91,-11.38,-0.16,36.23,0.17,0.62,-25.61,-0.19,-10.72,-24.32,11.82,0.00,-0.00,0.00,58.75,-20.99,35.70,0.22,-22.87,0.34,12.23,0.17,-2.84,-0.00,-0.00,-0.00,-45.50,14.06,-26.89,-0.26,-39.42,-0.42,-24.24,-0.03,7.36,0.21,-15.82,-1.92,18.09,13.42,-8.40,51.3506,39.1164,-42.2798,4.73,-22.86,-165.23,12.11,-28.24,12.49,0.22,54.49,-0.26,-2.61,-12.50,0.85,7.15,-43.15,-8.47,-0.16,36.58,0.17,0.78,-25.34,-0.19,-9.68,-24.94,8.63,0.00,-0.00,0.00,57.59,-19.87,31.34,0.22,-23.65,0.34,12.54,0.21,-3.03,-0.00,-0.00,-0.00,-47.30,14.95,-26.01,-0.26,-38.41,-0.41,-23.64,-0.11,7.01,0.11,-13.44,-2.58,18.42,13.62,-10.57,51.0678,39.0550,-43.1676,1.05,-22.80,-175.41,10.71,-30.61,10.68,0.21,51.41,-0.24,-2.32,-18.08,0.55,8.49,-41.40,-4.30,-0.16,37.25,0.18,0.89,-25.12,-0.19,-7.04,-25.39,6.60,0.00,-0.00,0.00,55.44,-19.50,29.49,0.22,-24.11,0.34,12.54,0.35,-3.16,-0.00,-0.00,-0.00,-50.30,15.32,-24.14,-0.26,-37.83,-0.41,-23.10,-0.21,6.80,-1.60,-10.66,-3.40,19.44,13.62,-13.30,50.7091,39.0129,-43.7992,-2.73,-22.85,174.05,9.32,-34.07,7.19,0.19,48.50,-0.22,-1.34,-22.40,0.33,9.63,-40.77,0.64,-0.16,37.98,0.18,0.98,-24.64,-0.19,-7.71,-25.19,5.29,0.00,-0.00,0.00,56.71,-21.41,26.31,0.22,-24.81,0.35,12.91,0.34,-3.32,-0.00,-0.00,-0.00,-49.54,15.83,-24.83,-0.25,-36.75,-0.40,-22.04,-0.37,6.44,-1.34,-9.24,-5.23,20.94,12.87,-17.53,50.3041,39.0696,-44.4118,-6.94,-22.08,162.51,8.02,-36.86,2.36,0.18,45.22,-0.21,-0.71,-24.43,0.29,10.50,-40.36,6.27,-0.16,38.78,0.18,0.97,-23.49,-0.21,-6.59,-24.49,3.80,0.00,-0.00,0.00,56.06,-21.43,24.80,0.23,-26.29,0.35,13.56,0.40,-3.69,-0.00,-0.00,-0.00,-51.10,14.12,-24.59,-0.25,-34.89,-0.39,-20.53,-0.44,5.86,-2.54,-8.35,-6.09,22.09,12.41,-21.25,49.8465,39.2330,-44.9951,-11.28,-20.23,150.70,7.24,-38.77,-1.96,0.17,41.01,-0.19,-1.00,-23.25,0.31,10.71,-40.55,10.93,-0.17,40.01,0.19,0.66,-21.46,-0.22,-5.35,-23.40,3.00,0.00,-0.00,0.00,55.36,-21.36,22.14,0.23,-27.63,0.36,14.19,0.41,-4.03,-0.00,-0.00,-0.00,-53.16,12.89,-22.78,-0.24,-33.87,-0.39,-19.49,-0.43,5.57,-4.91,-7.26,-7.60,23.73,11.57,-24.86,49.3448,39.3526,-45.6078,-15.90,-17.53,138.24,6.86,-40.13,-4.11,0.16,36.43,-0.17,-0.98,-22.29,0.34,9.90,-41.79,12.59,-0.17,41.54,0.19,0.05,-19.58,-0.19,-6.16,-23.25,2.57,0.00,-0.00,0.00,55.91,-21.95,19.61,0.23,-28.65,0.36,14.70,0.40,-4.30,-0.00,-0.00,-0.00,-53.23,12.15,-20.89,-0.24,-32.91,-0.38,-18.39,-0.34,5.32,-5.52,-6.40,-9.00,25.59,11.80,-28.73,48.8816,39.5165,-46.2072,-19.54,-14.42,126.22,7.26,-41.02,-4.97,0.15,33.61,-0.16,-0.89,-20.98,0.36,9.06,-42.79,11.19,-0.17,42.08,0.19,-0.58,-18.00,-0.11,-6.29,-22.88,2.04,0.00,-0.00,0.00,56.89,-21.86,17.39,0.23,-30.01,0.37,15.31,0.43,-4.68,-0.00,-0.00,-0.00,-53.40,11.04,-19.16,-0.24,-32.39,-0.38,-17.62,-0.19,5.22,-5.91,-5.95,-10.24,27.03,11.63,-31.80,48.3814,39.6968,-46.8359,-21.90,-10.33,114.74,7.73,-40.32,-4.50,0.15,33.82,-0.16,-0.92,-19.41,0.39,7.20,-42.53,7.93,-0.17,40.86,0.19,-0.88,-17.60,-0.08,-6.08,-22.69,1.81,0.00,-0.00,0.00,56.93,-20.73,14.35,0.24,-32.06,0.38,16.12,0.52,-5.29,-0.00,-0.00,-0.00,-54.32,10.81,-16.31,-0.24,-32.71,-0.38,-17.43,-0.07,5.35,-6.50,-4.67,-11.05,28.22,11.24,-34.48,47.8017,39.7381,-47.5066,-23.52,-6.26,102.87,8.76,-39.37,-2.00,0.16,35.92,-0.17,-1.00,-19.75,0.39,4.68,-42.27,3.41,-0.16,38.07,0.18,-0.31,-20.22,-0.18,-5.16,-22.30,2.34,0.00,-0.00,0.00,56.73,-19.30,11.49,0.25,-34.67,0.39,17.20,0.59,-6.10,-0.00,-0.00,-0.00,-55.51,9.83,-14.02,-0.24,-33.78,-0.39