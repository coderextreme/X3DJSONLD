'use strict';
var X3D = require('./x3d.mjs');
try {
	var fs = require('fs');
} catch (e) {
console.log("Problems loading fs. On browser?",e);
}
var SFString = require('./x3d.mjs');
var SFNode = require('./x3d.mjs');
var head = require('./x3d.mjs');
var MFNode = require('./x3d.mjs');
var meta = require('./x3d.mjs');
var Scene = require('./x3d.mjs');
var WorldInfo = require('./x3d.mjs');
var MFString = require('./x3d.mjs');
var Transform = require('./x3d.mjs');
var TimeSensor = require('./x3d.mjs');
var SFBool = require('./x3d.mjs');
var SFTime = require('./x3d.mjs');
var Script = require('./x3d.mjs');
var field = require('./x3d.mjs');
var ProximitySensor = require('./x3d.mjs');
var SFVec3f = require('./x3d.mjs');
var Viewpoint = require('./x3d.mjs');
var SFRotation = require('./x3d.mjs');
var NavigationInfo = require('./x3d.mjs');
var SFFloat = require('./x3d.mjs');
var Group = require('./x3d.mjs');
var PositionInterpolator = require('./x3d.mjs');
var MFFloat = require('./x3d.mjs');
var MFVec3f = require('./x3d.mjs');
var OrientationInterpolator = require('./x3d.mjs');
var MFRotation = require('./x3d.mjs');
var ScalarInterpolator = require('./x3d.mjs');
var Collision = require('./x3d.mjs');
var Shape = require('./x3d.mjs');
var IndexedFaceSet = require('./x3d.mjs');
var MFInt32 = require('./x3d.mjs');
var Color = require('./x3d.mjs');
var MFColor = require('./x3d.mjs');
var Coordinate = require('./x3d.mjs');
var Switch = require('./x3d.mjs');
var SFInt32 = require('./x3d.mjs');
var Appearance = require('./x3d.mjs');
var Material = require('./x3d.mjs');
var SFColor = require('./x3d.mjs');
var ImageTexture = require('./x3d.mjs');
var TextureCoordinate = require('./x3d.mjs');
var MFVec2f = require('./x3d.mjs');
var PointLight = require('./x3d.mjs');
var PixelTexture = require('./x3d.mjs');
var SFImage = require('./x3d.mjs');
var TextureTransform = require('./x3d.mjs');
var SFVec2f = require('./x3d.mjs');
var Inline = require('./x3d.mjs');
var Billboard = require('./x3d.mjs');
var VisibilitySensor = require('./x3d.mjs');
var SpotLight = require('./x3d.mjs');
var TouchSensor = require('./x3d.mjs');
var IndexedLineSet = require('./x3d.mjs');
var PlaneSensor = require('./x3d.mjs');
var ROUTE = require('./x3d.mjs');
var X3D0 =  new X3D({

      profile : new SFString("Full"),
      version : new SFString("3.3"),
      head : new SFNode(
        new head({
          meta : new MFNode([
            new meta({
              name : new SFString("comment"),
              content : new SFString("World of Titania")}),

            new meta({
              name : new SFString("created"),
              content : new SFString("Sun, 22 Mar 2015 12:17:06 GMT")}),

            new meta({
              name : new SFString("creator"),
              content : new SFString("Holger Seelig")}),

            new meta({
              name : new SFString("generator"),
              content : new SFString("Titania V0.7.7, http://titania.create3000.de")}),

            new meta({
              name : new SFString("modified"),
              content : new SFString("Wed, 08 Apr 2015 05:08:00 GMT")}),

            new meta({
              name : new SFString("title"),
              content : new SFString("Horten")})])})),
      Scene : new SFNode(
        new Scene({
          children : new MFNode([
            new WorldInfo({
              info : new MFString([", ","Created in TitaniaPackaged by CosmoPackage"])}),

            new Transform({
              DEF : new SFString("horten"),
              children : new MFNode([
                new TimeSensor({
                  DEF : new SFString("enterWorldTimeSensor"),
                  enabled : new SFBool(false),
                  loop : new SFBool(true),
                  startTime : new SFTime(1)}),

                new Script({
                  DEF : new SFString("enterWorldScript"),
                  field : new MFNode([
                    new field({
                      type : field.TYPE_SFBOOL,
                      name : new SFString("bind_changed"),
                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                    new field({
                      type : field.TYPE_SFTIME,
                      name : new SFString("triggerIn"),
                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),
                  ]),vrmlscript:, function triggerIn(value, time) {
	bind_changed = TRUE;                                             
})}),

                new Transform({
                  DEF : new SFString("WorldProxy"),
                  children : new MFNode([
                    new ProximitySensor({
                      DEF : new SFString("_1"),
                      size : new SFVec3f([556.7,267.4,584.5]),
                      center : new SFVec3f([0,20,0])})])}),

                new Transform({
                  children : new MFNode([
                    new Viewpoint({
                      DEF : new SFString("Entry"),
                      position : new SFVec3f([-55.9927,3.89811,105.981]),
                      orientation : new SFRotation([-0.0899161,-0.995117,0.0406966,0.546317])}),

                    new Transform({
                      DEF : new SFString("Cams"),
                      children : new MFNode([
                        new Transform({
                          DEF : new SFString("Anim"),
                          children : new MFNode([
                            new NavigationInfo({
                              type : ["NONE"],
                              DEF : new SFString("_AnimNavInfo1"),
                              headlight : new SFBool(false),
                              visibilityLimit : new SFFloat(600),
                              transitionType : new MFString(["TELEPORT"])}),

                            new Transform({
                              DEF : new SFString("C1_1"),
                              children : new MFNode([
                                new Transform({
                                  children : new MFNode([
                                    new Group({
                                      children : new MFNode([
                                        new Group({
                                          DEF : new SFString("Cam1_anim"),
                                          children : new MFNode([
                                            new TimeSensor({
                                              DEF : new SFString("CamTime1"),
                                              cycleInterval : new SFTime(20),
                                              startTime : new SFTime(953184905.315),
                                              stopTime : new SFTime(1)})])}),

                                        new PositionInterpolator({
                                          DEF : new SFString("Cam1PositionInterp"),
                                          key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25,0.255,0.26,0.265,0.27,0.275,0.28,0.285,0.29,0.295,0.3,0.305,0.31,0.315,0.32,0.325,0.33,0.335,0.34,0.345,0.35,0.355,0.36,0.365,0.37,0.375,0.38,0.385,0.39,0.395,0.4,0.405,0.41,0.415,0.42,0.425,0.43,0.435,0.44,0.445,0.45,0.455,0.46,0.465,0.47,0.475,0.48,0.485,0.49,0.495,0.5,0.505,0.51,0.515,0.52,0.525,0.53,0.535,0.54,0.545,0.55,0.555,0.56,0.565,0.57,0.575,0.58,0.585,0.59,0.595,0.6,0.605,0.61,0.615,0.62,0.625,0.63,0.635,0.64,0.645,0.65,0.655,0.66,0.665,0.67,0.675,0.68,0.685,0.69,0.695,0.7,0.705,0.71,0.715,0.72,0.725,0.73,0.735,0.74,0.745,0.75,0.755,0.76,0.765,0.77,0.775,0.78,0.785,0.79,0.795,0.8,0.805,0.81,0.815,0.82,0.825,0.83,0.835,0.84,0.845,0.85,0.855,0.86,0.865,0.87,0.875,0.88,0.885,0.89,0.895,0.9,0.905,0.91,0.915,0.92,0.925,0.93,0.935,0.94,0.945,0.95,0.955,0.96,0.965,0.97,0.975,0.98,0.985,0.99,0.995,1]),
                                          keyValue : new MFVec3f([-55.9927,3.89811,105.981,-55.9955,3.8984,105.986,-56.0038,3.89923,106.002,-56.0171,3.90058,106.028,-56.0351,3.90242,106.062,-56.0575,3.90469,106.105,-56.0839,3.90738,106.156,-56.1141,3.91044,106.214,-56.1475,3.91384,106.278,-56.184,3.91754,106.348,-56.2231,3.92151,106.423,-56.2645,3.92572,106.503,-56.3079,3.93013,106.586,-56.3529,3.9347,106.673,-56.3992,3.93939,106.761,-56.4463,3.94419,106.852,-56.4941,3.94904,106.944,-56.5421,3.95391,107.036,-56.5899,3.95877,107.128,-56.6373,3.96359,107.219,-56.6839,3.96832,107.308,-56.7294,3.97294,107.395,-56.7733,3.9774,107.48,-56.8155,3.98168,107.561,-56.8554,3.98573,107.637,-56.8928,3.98953,107.709,-56.9273,3.99303,107.775,-56.9585,3.99621,107.835,-56.9862,3.99903,107.889,-57.01,4.00144,107.934,-57.0296,4.00343,107.972,-57.0445,4.00494,108,-57.0545,4.00595,108.02,-57.0591,4.00643,108.029,-57.0581,4.00633,108.027,-57.0512,4.00562,108.013,-57.0379,4.00427,107.988,-57.0179,4.00224,107.949,-56.9909,3.99949,107.897,-56.9565,3.996,107.831,-56.9144,3.99172,107.751,-56.8642,3.98663,107.654,-56.8056,3.98068,107.542,-56.7383,3.97384,107.412,-56.6618,3.96607,107.266,-56.5759,3.95735,107.101,-56.4803,3.94763,106.917,-56.3744,3.93688,106.714,-56.2581,3.92507,106.491,-56.131,3.91216,106.247,-55.9927,3.89811,105.981,-55.8465,3.88326,105.7,-55.6962,3.86799,105.412,-55.5416,3.85229,105.115,-55.383,3.83618,104.81,-55.2204,3.81967,104.498,-55.054,3.80276,104.179,-54.8837,3.78547,103.852,-54.7098,3.7678,103.518,-54.5321,3.74976,103.177,-54.351,3.73136,102.829,-54.1664,3.71261,102.475,-53.9784,3.69352,102.114,-53.7872,3.67409,101.746,-53.5927,3.65434,101.373,-53.3951,3.63427,100.994,-53.1945,3.6139,100.609,-52.991,3.59323,100.218,-52.7846,3.57226,99.8216,-52.5755,3.55102,99.42,-52.3637,3.52951,99.0133,-52.1493,3.50773,98.6016,-51.9323,3.48569,98.1852,-51.713,3.46341,97.764,-51.4913,3.4409,97.3384,-51.2674,3.41816,96.9085,-51.0413,3.39519,96.4744,-50.8132,3.37202,96.0364,-50.583,3.34864,95.5945,-50.351,3.32507,95.149,-50.1171,3.30132,94.7,-49.8815,3.27739,94.2477,-49.6443,3.2533,93.7922,-49.4055,3.22904,93.3337,-49.1653,3.20464,92.8725,-48.9236,3.1801,92.4085,-48.6807,3.15542,91.9421,-48.4366,3.13063,91.4734,-48.1913,3.10571,91.0025,-47.945,3.0807,90.5296,-47.6978,3.05558,90.0548,-47.4497,3.03038,89.5785,-47.2008,3.0051,89.1006,-46.9512,2.97975,88.6214,-46.701,2.95434,88.1411,-46.4503,2.92888,87.6597,-46.1992,2.90337,87.1775,-45.9477,2.87782,86.6947,-45.6959,2.85225,86.2113,-45.444,2.82667,85.7277,-45.192,2.80107,85.2438,-44.94,2.77548,84.76,-44.6881,2.74989,84.2763,-44.4364,2.72432,83.793,-44.1849,2.69877,83.3101,-43.9337,2.67327,82.8279,-43.683,2.6478,82.3466,-43.4328,2.62239,81.8662,-43.1833,2.59704,81.387,-42.9344,2.57176,80.9092,-42.6863,2.54656,80.4328,-42.439,2.52144,79.9581,-42.1927,2.49643,79.4852,-41.9474,2.47152,79.0143,-41.7033,2.44672,78.5455,-41.4604,2.42204,78.0791,-41.2187,2.3975,77.6152,-40.9785,2.3731,77.1539,-40.7397,2.34885,76.6955,-40.5025,2.32475,76.24,-40.2669,2.30082,75.7877,-40.033,2.27707,75.3387,-39.801,2.2535,74.8932,-39.5709,2.23012,74.4513,-39.3427,2.20695,74.0132,-39.1166,2.18399,73.5792,-38.8927,2.16124,73.1492,-38.671,2.13873,72.7236,-38.4517,2.11645,72.3025,-38.2348,2.09442,71.886,-38.0204,2.07264,71.4743,-37.8085,2.05112,71.0676,-37.5994,2.02988,70.6661,-37.393,2.00892,70.2698,-37.1895,1.98824,69.8791,-36.9889,1.96787,69.4939,-36.7913,1.9478,69.1146,-36.5969,1.92805,68.7412,-36.4056,1.90863,68.374,-36.2176,1.88953,68.0131,-36.033,1.87078,67.6587,-35.8519,1.85238,67.3109,-35.6743,1.83434,66.9699,-35.5003,1.81667,66.6358,-35.33,1.79938,66.3089,-35.1636,1.78247,65.9893,-35.001,1.76596,65.6772,-34.8424,1.74985,65.3727,-34.6879,1.73415,65.076,-34.5375,1.71888,64.7872,-34.3913,1.70403,64.5066,-34.253,1.68998,64.2411,-34.1259,1.67707,63.997,-34.0096,1.66526,63.7737,-33.9037,1.65451,63.5705,-33.8081,1.64479,63.3868,-33.7222,1.63607,63.2219,-33.6457,1.6283,63.0751,-33.5784,1.62146,62.9458,-33.5198,1.61551,62.8334,-33.4696,1.61042,62.737,-33.4275,1.60614,62.6562,-33.3931,1.60265,62.5901,-33.3661,1.5999,62.5383,-33.3461,1.59787,62.4999,-33.3328,1.59652,62.4744,-33.3259,1.59581,62.461,-33.3249,1.59571,62.4591,-33.3295,1.59619,62.468,-33.3395,1.5972,62.4872,-33.3544,1.59871,62.5158,-33.374,1.6007,62.5533,-33.3978,1.60311,62.599,-33.4255,1.60593,62.6522,-33.4567,1.60911,62.7122,-33.4912,1.61261,62.7785,-33.5286,1.61641,62.8503,-33.5685,1.62046,62.9269,-33.6107,1.62474,63.0078,-33.6546,1.6292,63.0922,-33.7001,1.63382,63.1794,-33.7467,1.63855,63.2689,-33.7941,1.64337,63.3599,-33.8419,1.64823,63.4518,-33.8899,1.6531,63.5439,-33.9377,1.65795,63.6356,-33.9848,1.66275,63.7262,-34.0311,1.66744,63.815,-34.0761,1.67201,63.9014,-34.1195,1.67642,63.9847,-34.1609,1.68063,64.0642,-34.2,1.6846,64.1393,-34.2365,1.6883,64.2093,-34.2699,1.6917,64.2736,-34.3001,1.69476,64.3314,-34.3265,1.69745,64.3822,-34.3489,1.69972,64.4252,-34.3669,1.70156,64.4598,-34.3802,1.70291,64.4854,-34.3885,1.70374,64.5012,-34.3913,1.70403,64.5066])}),

                                        new OrientationInterpolator({
                                          DEF : new SFString("Cam1OrientationInterp"),
                                          key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25,0.255,0.26,0.265,0.27,0.275,0.28,0.285,0.29,0.295,0.3,0.305,0.31,0.315,0.32,0.325,0.33,0.335,0.34,0.345,0.35,0.355,0.36,0.365,0.37,0.375,0.38,0.385,0.39,0.395,0.4,0.405,0.41,0.415,0.42,0.425,0.43,0.435,0.44,0.445,0.45,0.455,0.46,0.465,0.47,0.475,0.48,0.485,0.49,0.495,0.5,0.505,0.51,0.515,0.52,0.525,0.53,0.535,0.54,0.545,0.55,0.555,0.56,0.565,0.57,0.575,0.58,0.585,0.59,0.595,0.6,0.605,0.61,0.615,0.62,0.625,0.63,0.635,0.64,0.645,0.65,0.655,0.66,0.665,0.67,0.675,0.68,0.685,0.69,0.695,0.7,0.705,0.71,0.715,0.72,0.725,0.73,0.735,0.74,0.745,0.75,0.755,0.76,0.765,0.77,0.775,0.78,0.785,0.79,0.795,0.8,0.805,0.81,0.815,0.82,0.825,0.83,0.835,0.84,0.845,0.85,0.855,0.86,0.865,0.87,0.875,0.88,0.885,0.89,0.895,0.9,0.905,0.91,0.915,0.92,0.925,0.93,0.935,0.94,0.945,0.95,0.955,0.96,0.965,0.97,0.975,0.98,0.985,0.99,0.995,1]),
                                          keyValue : new MFRotation([-0.0899162,-0.995117,0.0406966,0.546317,-0.0899647,-0.995114,0.0406828,0.54632,-0.0901062,-0.995103,0.0406424,0.546329,-0.0903347,-0.995084,0.0405771,0.546343,-0.0906443,-0.99506,0.0404886,0.546362,-0.0910291,-0.995029,0.0403787,0.546386,-0.091483,-0.994993,0.040249,0.546415,-0.0920001,-0.994951,0.0401012,0.546448,-0.0925744,-0.994905,0.039937,0.546485,-0.0932002,-0.994853,0.0397581,0.546525,-0.0938712,-0.994798,0.0395663,0.546568,-0.0945815,-0.994739,0.0393632,0.546614,-0.0953253,-0.994676,0.0391504,0.546663,-0.0960965,-0.99461,0.0389298,0.546713,-0.0968893,-0.994542,0.038703,0.546766,-0.0976976,-0.994472,0.0384716,0.54682,-0.0985155,-0.994401,0.0382375,0.546875,-0.0993372,-0.994328,0.0380022,0.54693,-0.100157,-0.994255,0.0377676,0.546986,-0.100968,-0.994181,0.0375352,0.547042,-0.101765,-0.994109,0.0373068,0.547097,-0.102543,-0.994037,0.037084,0.547151,-0.103294,-0.993967,0.0368686,0.547203,-0.104014,-0.9939,0.0366623,0.547255,-0.104696,-0.993835,0.0364667,0.547303,-0.105335,-0.993775,0.0362835,0.547348,-0.105924,-0.993718,0.0361145,0.54739,-0.106459,-0.993667,0.0359613,0.547429,-0.106932,-0.993621,0.0358255,0.547463,-0.107338,-0.993581,0.035709,0.547492,-0.107671,-0.993548,0.0356133,0.547517,-0.107926,-0.993523,0.0355403,0.547535,-0.108096,-0.993507,0.0354915,0.547547,-0.108176,-0.993499,0.0354686,0.547554,-0.108159,-0.9935,0.0354734,0.547552,-0.10804,-0.993512,0.0355075,0.547543,-0.107813,-0.993535,0.0355727,0.547527,-0.107472,-0.993568,0.0356706,0.547502,-0.107011,-0.993613,0.0358029,0.547469,-0.106423,-0.99367,0.0359714,0.547426,-0.105704,-0.993739,0.0361777,0.547375,-0.104847,-0.993821,0.0364235,0.547313,-0.103846,-0.993916,0.0367105,0.547243,-0.102694,-0.994023,0.0370405,0.547162,-0.101387,-0.994143,0.0374152,0.547071,-0.0999171,-0.994276,0.0378362,0.546969,-0.0982788,-0.994421,0.0383053,0.546859,-0.0964658,-0.994579,0.0388241,0.546738,-0.0944719,-0.994748,0.0393945,0.546607,-0.0922909,-0.994928,0.0400181,0.546467,-0.0899162,-0.995117,0.0406966,0.546317,-0.0886424,-0.995217,0.0410604,0.546238,-0.0872953,-0.99532,0.0414451,0.546155,-0.0858763,-0.995426,0.0418501,0.546069,-0.0843868,-0.995536,0.042275,0.545981,-0.0828282,-0.995648,0.0427196,0.54589,-0.0812019,-0.995762,0.0431832,0.545796,-0.0795094,-0.995877,0.0436655,0.5457,-0.077752,-0.995994,0.0441661,0.545602,-0.0759311,-0.996111,0.0446845,0.545502,-0.0740482,-0.996229,0.0452204,0.545401,-0.0721046,-0.996346,0.0457732,0.545299,-0.0701018,-0.996463,0.0463426,0.545196,-0.0680413,-0.996578,0.0469281,0.545092,-0.0659244,-0.996692,0.0475293,0.544989,-0.0637526,-0.996804,0.0481458,0.544885,-0.0615273,-0.996913,0.0487771,0.544781,-0.05925,-0.997019,0.0494228,0.544678,-0.0569221,-0.997122,0.0500824,0.544576,-0.0545451,-0.99722,0.0507556,0.544474,-0.0521205,-0.997315,0.0514419,0.544374,-0.0496497,-0.997405,0.0521407,0.544276,-0.0471342,-0.997489,0.0528518,0.544179,-0.0445755,-0.997568,0.0535746,0.544084,-0.0419751,-0.997642,0.0543087,0.543992,-0.0393344,-0.997708,0.0550537,0.543902,-0.0366551,-0.997768,0.0558091,0.543815,-0.0339386,-0.997821,0.0565744,0.54373,-0.0311864,-0.997867,0.0573493,0.543649,-0.0284001,-0.997905,0.0581332,0.543571,-0.0255812,-0.997935,0.0589257,0.543497,-0.0227312,-0.997956,0.0597264,0.543426,-0.0198517,-0.997969,0.0605348,0.543359,-0.0169442,-0.997972,0.0613505,0.543297,-0.0140104,-0.997967,0.0621729,0.543238,-0.0110517,-0.997952,0.0630017,0.543184,-0.00806971,-0.997928,0.0638363,0.543135,-0.00506605,-0.997893,0.0646764,0.54309,-0.00204228,-0.997849,0.0655215,0.543049,0.00100002,-0.997794,0.0663711,0.543014,0.00405926,-0.99773,0.0672247,0.542984,0.00713384,-0.997654,0.068082,0.542959,0.0102222,-0.997568,0.0689424,0.542939,0.0133227,-0.997472,0.0698055,0.542924,0.0164337,-0.997364,0.0706709,0.542915,0.0195537,-0.997246,0.0715381,0.542911,0.0226811,-0.997117,0.0724066,0.542913,0.0258142,-0.996978,0.073276,0.542919,0.0289514,-0.996827,0.0741459,0.542932,0.0320912,-0.996666,0.0750157,0.54295,0.0352319,-0.996494,0.0758851,0.542974,0.038372,-0.996312,0.0767537,0.543003,0.0415097,-0.996118,0.0776208,0.543037,0.0446436,-0.995915,0.0784863,0.543077,0.0477721,-0.995701,0.0793495,0.543122,0.0508934,-0.995478,0.08021,0.543173,0.0540061,-0.995244,0.0810675,0.543229,0.0571086,-0.995001,0.0819215,0.54329,0.0601992,-0.994749,0.0827715,0.543356,0.0632764,-0.994487,0.0836172,0.543428,0.0663386,-0.994216,0.084458,0.543504,0.0693843,-0.993937,0.0852937,0.543585,0.0724119,-0.993649,0.0861237,0.543672,0.0754197,-0.993354,0.0869477,0.543762,0.0784064,-0.993051,0.0877652,0.543857,0.0813703,-0.99274,0.0885758,0.543956,0.0843098,-0.992423,0.0893792,0.54406,0.0872236,-0.992099,0.0901749,0.544167,0.0901099,-0.991769,0.0909625,0.544278,0.0929674,-0.991434,0.0917417,0.544393,0.0957945,-0.991093,0.0925119,0.544511,0.0985897,-0.990747,0.093273,0.544632,0.101352,-0.990397,0.0940244,0.544756,0.104079,-0.990044,0.0947657,0.544883,0.106769,-0.989687,0.0954966,0.545013,0.109422,-0.989328,0.0962168,0.545145,0.112036,-0.988966,0.0969258,0.545278,0.114609,-0.988602,0.0976233,0.545414,0.117139,-0.988238,0.0983089,0.545551,0.119626,-0.987872,0.0989822,0.54569,0.122069,-0.987507,0.0996429,0.545829,0.124464,-0.987143,0.100291,0.54597,0.126812,-0.986779,0.100925,0.54611,0.129111,-0.986417,0.101546,0.546251,0.131359,-0.986058,0.102152,0.546392,0.133555,-0.985701,0.102745,0.546533,0.135697,-0.985348,0.103322,0.546673,0.137785,-0.984999,0.103884,0.546812,0.139817,-0.984655,0.104431,0.54695,0.141791,-0.984316,0.104963,0.547086,0.143706,-0.983983,0.105478,0.54722,0.145561,-0.983657,0.105976,0.547352,0.147355,-0.983338,0.106458,0.547482,0.149085,-0.983026,0.106923,0.54761,0.150752,-0.982724,0.10737,0.547733,0.152352,-0.98243,0.1078,0.547854,0.153886,-0.982145,0.108211,0.547972,0.155352,-0.981871,0.108604,0.548085,0.156747,-0.981608,0.108978,0.548194,0.158072,-0.981356,0.109333,0.548299,0.159325,-0.981116,0.109668,0.548399,0.161659,-0.980664,0.110293,0.548588,0.163803,-0.980244,0.110866,0.548764,0.165762,-0.979855,0.11139,0.548928,0.167543,-0.979498,0.111865,0.549079,0.169151,-0.979172,0.112295,0.549217,0.170595,-0.978877,0.11268,0.549343,0.171878,-0.978613,0.113023,0.549455,0.173008,-0.978379,0.113324,0.549555,0.173991,-0.978175,0.113586,0.549643,0.174832,-0.977998,0.11381,0.549718,0.175537,-0.97785,0.113998,0.549782,0.176113,-0.977729,0.114152,0.549834,0.176566,-0.977633,0.114272,0.549875,0.1769,-0.977562,0.114362,0.549905,0.177123,-0.977515,0.114421,0.549926,0.17724,-0.97749,0.114452,0.549937,0.177256,-0.977487,0.114456,0.549938,0.177178,-0.977503,0.114436,0.549931,0.177011,-0.977539,0.114391,0.549915,0.176762,-0.977591,0.114325,0.549893,0.176435,-0.977661,0.114237,0.549863,0.176036,-0.977745,0.114131,0.549827,0.175572,-0.977843,0.114008,0.549785,0.175048,-0.977953,0.113868,0.549737,0.17447,-0.978074,0.113714,0.549685,0.173843,-0.978205,0.113547,0.54963,0.173173,-0.978345,0.113368,0.54957,0.172467,-0.978491,0.11318,0.549507,0.171729,-0.978644,0.112983,0.549442,0.170966,-0.978801,0.112779,0.549375,0.170183,-0.978962,0.11257,0.549307,0.169387,-0.979124,0.112358,0.549238,0.168582,-0.979288,0.112143,0.549169,0.167775,-0.979451,0.111928,0.549099,0.166972,-0.979612,0.111713,0.549031,0.166178,-0.979772,0.111501,0.548964,0.165399,-0.979927,0.111293,0.548898,0.164641,-0.980078,0.11109,0.548834,0.163911,-0.980222,0.110895,0.548774,0.163213,-0.98036,0.110708,0.548716,0.162553,-0.980489,0.110532,0.548661,0.161938,-0.98061,0.110367,0.548611,0.161374,-0.98072,0.110216,0.548565,0.160865,-0.980818,0.11008,0.548523,0.160419,-0.980905,0.109961,0.548487,0.160041,-0.980978,0.10986,0.548457,0.159736,-0.981037,0.109778,0.548432,0.159512,-0.98108,0.109718,0.548414,0.159373,-0.981107,0.109681,0.548403,0.159325,-0.981116,0.109668,0.548399])})])}),

                                    new Viewpoint({
                                      DEF : new SFString("Cam1"),
                                      position : new SFVec3f([-55.9927,3.89811,105.981]),
                                      orientation : new SFRotation([-0.0899161,-0.995117,0.0406966,0.546317])})])})])}),

                            new Transform({
                              DEF : new SFString("C2_1"),
                              children : new MFNode([
                                new Transform({
                                  children : new MFNode([
                                    new Group({
                                      children : new MFNode([
                                        new Group({
                                          DEF : new SFString("Cam2_anim"),
                                          children : new MFNode([
                                            new TimeSensor({
                                              DEF : new SFString("CamTime2"),
                                              cycleInterval : new SFTime(20),
                                              stopTime : new SFTime(1)})])}),

                                        new PositionInterpolator({
                                          DEF : new SFString("Cam2PositionInterp"),
                                          key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25,0.255,0.26,0.265,0.27,0.275,0.28,0.285,0.29,0.295,0.3,0.305,0.31,0.315,0.32,0.325,0.33,0.335,0.34,0.345,0.35,0.355,0.36,0.365,0.37,0.375,0.38,0.385,0.39,0.395,0.4,0.405,0.41,0.415,0.42,0.425,0.43,0.435,0.44,0.445,0.45,0.455,0.46,0.465,0.47,0.475,0.48,0.485,0.49,0.495,0.5,0.505,0.51,0.515,0.52,0.525,0.53,0.535,0.54,0.545,0.55,0.555,0.56,0.565,0.57,0.575,0.58,0.585,0.59,0.595,0.6,0.605,0.61,0.615,0.62,0.625,0.63,0.635,0.64,0.645,0.65,0.655,0.66,0.665,0.67,0.675,0.68,0.685,0.69,0.695,0.7,0.705,0.71,0.715,0.72,0.725,0.73,0.735,0.74,0.745,0.75,0.755,0.76,0.765,0.77,0.775,0.78,0.785,0.79,0.795,0.8,0.805,0.81,0.815,0.82,0.825,0.83,0.835,0.84,0.845,0.85,0.855,0.86,0.865,0.87,0.875,0.88,0.885,0.89,0.895,0.9,0.905,0.91,0.915,0.92,0.925,0.93,0.935,0.94,0.945,0.95,0.955,0.96,0.965,0.97,0.975,0.98,0.985,0.99,0.995,1]),
                                          keyValue : new MFVec3f([-19.5433,6.30794,25.5861,-19.5423,6.30865,25.5843,-19.5393,6.3107,25.5792,-19.5345,6.31403,25.5708,-19.528,6.31853,25.5595,-19.52,6.32413,25.5454,-19.5105,6.33074,25.5288,-19.4996,6.33826,25.5099,-19.4876,6.34662,25.4889,-19.4745,6.35573,25.466,-19.4604,6.36551,25.4415,-19.4455,6.37585,25.4155,-19.4299,6.38669,25.3883,-19.4137,6.39793,25.36,-19.3971,6.40949,25.331,-19.3801,6.42127,25.3014,-19.3629,6.43321,25.2714,-19.3457,6.44519,25.2413,-19.3284,6.45715,25.2113,-19.3114,6.469,25.1815,-19.2946,6.48064,25.1523,-19.2783,6.492,25.1238,-19.2625,6.50298,25.0962,-19.2473,6.5135,25.0698,-19.2329,6.52347,25.0447,-19.2195,6.53281,25.0212,-19.2071,6.54143,24.9996,-19.1958,6.54925,24.98,-19.1859,6.55617,24.9626,-19.1773,6.56211,24.9476,-19.1703,6.56699,24.9354,-19.1649,6.57072,24.926,-19.1613,6.57321,24.9198,-19.1596,6.57437,24.9168,-19.16,6.57413,24.9175,-19.1625,6.57239,24.9218,-19.1673,6.56906,24.9302,-19.1745,6.56407,24.9427,-19.1842,6.55732,24.9597,-19.1966,6.54873,24.9813,-19.2117,6.53821,25.0077,-19.2298,6.52567,25.0392,-19.2509,6.51104,25.0759,-19.2751,6.49421,25.1182,-19.3026,6.47511,25.1662,-19.3335,6.45366,25.2201,-19.3679,6.42975,25.2801,-19.406,6.40331,25.3465,-19.4478,6.37426,25.4195,-19.4935,6.34249,25.4993,-19.5433,6.30794,25.5861,-19.5959,6.27142,25.6778,-19.65,6.23385,25.7722,-19.7056,6.19524,25.8692,-19.7626,6.15562,25.9687,-19.8211,6.115,26.0707,-19.881,6.07341,26.1752,-19.9423,6.03088,26.2821,-20.0049,5.98741,26.3913,-20.0687,5.94304,26.5027,-20.1339,5.89778,26.6164,-20.2003,5.85166,26.7323,-20.268,5.80469,26.8502,-20.3368,5.75691,26.9703,-20.4067,5.70833,27.0923,-20.4778,5.65896,27.2163,-20.55,5.60885,27.3422,-20.6232,5.558,27.4699,-20.6974,5.50644,27.5994,-20.7727,5.45419,27.7307,-20.8489,5.40126,27.8636,-20.926,5.34769,27.9982,-21.0041,5.2935,28.1343,-21.083,5.2387,28.272,-21.1627,5.18332,28.4111,-21.2433,5.12737,28.5516,-21.3246,5.07089,28.6935,-21.4067,5.01389,28.8367,-21.4895,4.95639,28.9811,-21.573,4.89842,29.1267,-21.6571,4.83999,29.2735,-21.7418,4.78113,29.4213,-21.8272,4.72186,29.5702,-21.9131,4.6622,29.7201,-21.9995,4.60218,29.8708,-22.0865,4.54181,30.0225,-22.1739,4.48112,30.1749,-22.2617,4.42012,30.3282,-22.3499,4.35885,30.4821,-22.4385,4.29731,30.6367,-22.5275,4.23554,30.7918,-22.6167,4.17355,30.9475,-22.7063,4.11137,31.1037,-22.7961,4.04901,31.2604,-22.8861,3.9865,31.4174,-22.9763,3.92387,31.5747,-23.0666,3.86112,31.7323,-23.1571,3.79829,31.8902,-23.2477,3.7354,32.0481,-23.3383,3.67246,32.2062,-23.4289,3.6095,32.3644,-23.5196,3.54654,32.5225,-23.6102,3.4836,32.6806,-23.7008,3.42071,32.8386,-23.7913,3.35788,32.9965,-23.8816,3.29513,33.1541,-23.9718,3.2325,33.3114,-24.0618,3.16999,33.4684,-24.1516,3.10763,33.625,-24.2412,3.04545,33.7812,-24.3304,2.98346,33.937,-24.4194,2.92169,34.0921,-24.508,2.86015,34.2467,-24.5962,2.79888,34.4006,-24.684,2.73788,34.5538,-24.7714,2.67719,34.7063,-24.8584,2.61682,34.8579,-24.9448,2.5568,35.0087,-25.0307,2.49714,35.1586,-25.116,2.43787,35.3074,-25.2008,2.37901,35.4553,-25.2849,2.32058,35.6021,-25.3684,2.26261,35.7477,-25.4512,2.20511,35.8921,-25.5333,2.14811,36.0353,-25.6146,2.09163,36.1772,-25.6952,2.03568,36.3177,-25.7749,1.9803,36.4568,-25.8538,1.9255,36.5945,-25.9319,1.8713,36.7306,-26.009,1.81773,36.8652,-26.0852,1.76481,36.9981,-26.1605,1.71256,37.1294,-26.2347,1.661,37.2589,-26.3079,1.61015,37.3866,-26.3801,1.56003,37.5125,-26.4512,1.51067,37.6365,-26.5211,1.46209,37.7585,-26.5899,1.41431,37.8786,-26.6576,1.36734,37.9965,-26.724,1.32122,38.1124,-26.7891,1.27596,38.2261,-26.853,1.23159,38.3375,-26.9156,1.18812,38.4467,-26.9769,1.14558,38.5536,-27.0368,1.104,38.658,-27.0953,1.06338,38.7601,-27.1523,1.02376,38.8596,-27.2079,0.985146,38.9566,-27.262,0.947573,39.051,-27.3146,0.911054,39.1427,-27.3644,0.8765,39.2295,-27.4101,0.844737,39.3093,-27.4519,0.81568,39.3823,-27.49,0.789243,39.4487,-27.5244,0.765338,39.5087,-27.5553,0.74388,39.5626,-27.5828,0.724782,39.6106,-27.607,0.707959,39.6529,-27.6281,0.693322,39.6896,-27.6462,0.680787,39.7211,-27.6613,0.670267,39.7475,-27.6737,0.661675,39.7691,-27.6834,0.654925,39.7861,-27.6906,0.649931,39.7986,-27.6954,0.646607,39.807,-27.6979,0.644865,39.8113,-27.6983,0.644621,39.812,-27.6966,0.645786,39.809,-27.693,0.648276,39.8028,-27.6876,0.652003,39.7934,-27.6806,0.656882,39.7812,-27.672,0.662826,39.7662,-27.6621,0.669748,39.7488,-27.6508,0.677563,39.7292,-27.6384,0.686184,39.7076,-27.625,0.695524,39.6841,-27.6106,0.705497,39.659,-27.5954,0.716017,39.6326,-27.5796,0.726998,39.605,-27.5633,0.738353,39.5765,-27.5465,0.749996,39.5473,-27.5295,0.761841,39.5175,-27.5122,0.7738,39.4875,-27.495,0.785788,39.4574,-27.4778,0.797719,39.4274,-27.4608,0.809506,39.3978,-27.4442,0.821062,39.3688,-27.428,0.832302,39.3405,-27.4124,0.843139,39.3133,-27.3975,0.853487,39.2873,-27.3834,0.863259,39.2628,-27.3703,0.872369,39.2399,-27.3583,0.88073,39.2189,-27.3474,0.888257,39.2,-27.3379,0.894863,39.1834,-27.3299,0.900462,39.1693,-27.3234,0.904966,39.158,-27.3186,0.908291,39.1496,-27.3156,0.910349,39.1445,-27.3146,0.911054,39.1427])}),

                                        new OrientationInterpolator({
                                          DEF : new SFString("Cam2OrientationInterp"),
                                          key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25]),
                                          keyValue : new MFRotation([0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642,0.467409,-0.870993,0.151329,0.66642])}),

                                        new ScalarInterpolator({
                                          DEF : new SFString("Cam2FieldOfViewInterp"),
                                          key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25]),
                                          keyValue : new MFFloat([0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398,0.785398])})])}),

                                    new Viewpoint({
                                      DEF : new SFString("Cam2"),
                                      position : new SFVec3f([-19.5433,6.30794,25.5861]),
                                      orientation : new SFRotation([0.467409,-0.870993,0.151329,0.66642])})])})])}),

                            new Transform({
                              DEF : new SFString("C3_1"),
                              children : new MFNode([
                                new Transform({
                                  children : new MFNode([
                                    new Group({
                                      children : new MFNode([
                                        new Group({
                                          DEF : new SFString("Cam3_anim"),
                                          children : new MFNode([
                                            new TimeSensor({
                                              DEF : new SFString("CamTime3"),
                                              cycleInterval : new SFTime(20),
                                              stopTime : new SFTime(1)})])}),

                                        new PositionInterpolator({
                                          DEF : new SFString("Cam3PositionInterp"),
                                          key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25,0.255,0.26,0.265,0.27,0.275,0.28,0.285,0.29,0.295,0.3,0.305,0.31,0.315,0.32,0.325,0.33,0.335,0.34,0.345,0.35,0.355,0.36,0.365,0.37,0.375,0.38,0.385,0.39,0.395,0.4,0.405,0.41,0.415,0.42,0.425,0.43,0.435,0.44,0.445,0.45,0.455,0.46,0.465,0.47,0.475,0.48,0.485,0.49,0.495,0.5,0.505,0.51,0.515,0.52,0.525,0.53,0.535,0.54,0.545,0.55,0.555,0.56,0.565,0.57,0.575,0.58,0.585,0.59,0.595,0.6,0.605,0.61,0.615,0.62,0.625,0.63,0.635,0.64,0.645,0.65,0.655,0.66,0.665,0.67,0.675,0.68,0.685,0.69,0.695,0.7,0.705,0.71,0.715,0.72,0.725,0.73,0.735,0.74,0.745,0.75,0.755,0.76,0.765,0.77,0.775,0.78,0.785,0.79,0.795,0.8,0.805,0.81,0.815,0.82,0.825,0.83,0.835,0.84,0.845,0.85,0.855,0.86,0.865,0.87,0.875,0.88,0.885,0.89,0.895,0.9,0.905,0.91,0.915,0.92,0.925,0.93,0.935,0.94,0.945,0.95,0.955,0.96,0.965,0.97,0.975,0.98,0.985,0.99,0.995,1]),
                                          keyValue : new MFVec3f([33.8945,6.18521,42.4563,33.8988,6.1855,42.4545,33.9113,6.18635,42.4494,33.9315,6.18772,42.4411,33.9589,6.18957,42.4298,33.993,6.19188,42.4159,34.0331,6.1946,42.3994,34.0789,6.1977,42.3806,34.1297,6.20115,42.3597,34.1851,6.2049,42.3369,34.2445,6.20893,42.3125,34.3075,6.21319,42.2867,34.3734,6.21765,42.2596,34.4417,6.22228,42.2315,34.512,6.22704,42.2026,34.5836,6.2319,42.1732,34.6562,6.23681,42.1434,34.7291,6.24175,42.1135,34.8018,6.24668,42.0836,34.8738,6.25156,42.054,34.9446,6.25636,42.0249,35.0137,6.26103,41.9966,35.0804,6.26556,41.9691,35.1444,6.26989,41.9429,35.2051,6.274,41.9179,35.2619,6.27785,41.8946,35.3143,6.2814,41.8731,35.3618,6.28462,41.8536,35.4039,6.28747,41.8363,35.44,6.28992,41.8214,35.4697,6.29193,41.8092,35.4924,6.29346,41.7999,35.5075,6.29449,41.7937,35.5146,6.29497,41.7908,35.5131,6.29487,41.7914,35.5025,6.29415,41.7958,35.4823,6.29278,41.8041,35.4519,6.29072,41.8165,35.4109,6.28794,41.8334,35.3586,6.2844,41.8549,35.2947,6.28007,41.8811,35.2184,6.27491,41.9124,35.1295,6.26888,41.949,35.0272,6.26195,41.991,34.911,6.25408,42.0387,34.7805,6.24524,42.0923,34.6352,6.23539,42.152,34.4744,6.2245,42.2181,34.2978,6.21253,42.2906,34.1046,6.19945,42.37,33.8945,6.18521,42.4563,33.6725,6.17017,42.5475,33.444,6.15469,42.6414,33.2092,6.13878,42.7378,32.9683,6.12246,42.8368,32.7213,6.10573,42.9382,32.4684,6.0886,43.0421,32.2098,6.07107,43.1484,31.9455,6.05317,43.2569,31.6757,6.03489,43.3678,31.4005,6.01624,43.4808,31.12,5.99724,43.596,30.8344,5.97789,43.7133,30.5439,5.95821,43.8327,30.2485,5.9382,43.954,29.9483,5.91786,44.0773,29.6436,5.89722,44.2025,29.3344,5.87627,44.3295,29.0209,5.85503,44.4583,28.7031,5.8335,44.5888,28.3813,5.8117,44.721,28.0556,5.78963,44.8548,27.7261,5.76731,44.9902,27.3928,5.74473,45.1271,27.0561,5.72191,45.2654,26.7159,5.69887,45.4052,26.3724,5.6756,45.5462,26.0258,5.65212,45.6886,25.6762,5.62843,45.8322,25.3237,5.60455,45.9771,24.9684,5.58048,46.123,24.6105,5.55623,46.27,24.2501,5.53182,46.4181,23.8874,5.50724,46.5671,23.5224,5.48251,46.717,23.1553,5.45764,46.8678,22.7863,5.43264,47.0194,22.4154,5.40751,47.1717,22.0428,5.38227,47.3248,21.6686,5.35692,47.4785,21.293,5.33147,47.6328,20.9161,5.30593,47.7876,20.5379,5.28032,47.943,20.1588,5.25463,48.0987,19.7787,5.22888,48.2548,19.3978,5.20308,48.4113,19.0163,5.17723,48.568,18.6343,5.15135,48.725,18.2518,5.12544,48.8821,17.8691,5.09951,49.0393,17.4863,5.07357,49.1965,17.1034,5.04763,49.3538,16.7207,5.02171,49.511,16.3383,4.9958,49.6681,15.9562,4.96991,49.8251,15.5747,4.94407,49.9818,15.1939,4.91826,50.1382,14.8138,4.89251,50.2944,14.4346,4.86682,50.4501,14.0565,4.84121,50.6054,13.6796,4.81567,50.7603,13.304,4.79022,50.9146,12.9298,4.76487,51.0683,12.5572,4.73963,51.2213,12.1863,4.7145,51.3737,11.8172,4.6895,51.5253,11.4502,4.66463,51.6761,11.0852,4.6399,51.826,10.7224,4.61533,51.975,10.362,4.59091,52.1231,10.0041,4.56666,52.2701,9.64886,4.54259,52.416,9.29634,4.51871,52.5608,8.94671,4.49503,52.7045,8.60011,4.47154,52.8468,8.25665,4.44827,52.9879,7.91647,4.42523,53.1277,7.57971,4.40241,53.266,7.2465,4.37984,53.4029,6.91695,4.35751,53.5383,6.59121,4.33544,53.6721,6.26942,4.31364,53.8043,5.95169,4.29212,53.9348,5.63815,4.27087,54.0636,5.32896,4.24993,54.1906,5.02423,4.22928,54.3158,4.72408,4.20895,54.4391,4.42867,4.18893,54.5604,4.13812,4.16925,54.6798,3.85255,4.1499,54.7971,3.5721,4.1309,54.9123,3.29689,4.11226,55.0253,3.02708,4.09398,55.1362,2.76277,4.07607,55.2447,2.50412,4.05855,55.351,2.25123,4.04141,55.4549,2.00425,4.02468,55.5563,1.76332,4.00836,55.6553,1.52855,3.99245,55.7517,1.30008,3.97697,55.8456,1.07802,3.96193,55.9368,0.867907,3.9477,56.0231,0.674771,3.93461,56.1024,0.498088,3.92264,56.175,0.337331,3.91175,56.2411,0.191976,3.9019,56.3008,0.0614973,3.89306,56.3544,-0.0546292,3.88519,56.4021,-0.156929,3.87826,56.4441,-0.245928,3.87223,56.4807,-0.322149,3.86707,56.512,-0.38612,3.86274,56.5382,-0.438364,3.8592,56.5597,-0.479406,3.85642,56.5766,-0.509772,3.85436,56.589,-0.529987,3.85299,56.5973,-0.540576,3.85227,56.6017,-0.542064,3.85217,56.6023,-0.534976,3.85265,56.5994,-0.519837,3.85368,56.5932,-0.497172,3.85521,56.5839,-0.467506,3.85722,56.5717,-0.431364,3.85967,56.5568,-0.389271,3.86252,56.5395,-0.341753,3.86574,56.52,-0.289335,3.86929,56.4985,-0.232541,3.87314,56.4752,-0.171896,3.87725,56.4502,-0.107926,3.88158,56.424,-0.0411555,3.88611,56.3965,0.0278902,3.89078,56.3682,0.0986864,3.89558,56.3391,0.170708,3.90046,56.3095,0.243429,3.90539,56.2796,0.316325,3.91033,56.2497,0.388871,3.91524,56.2199,0.460542,3.9201,56.1904,0.530814,3.92486,56.1616,0.599159,3.92949,56.1335,0.665055,3.93395,56.1064,0.727975,3.93822,56.0806,0.787395,3.94224,56.0562,0.842789,3.94599,56.0334,0.893633,3.94944,56.0125,0.939401,3.95254,55.9937,0.979569,3.95526,55.9772,1.01361,3.95757,55.9633,1.041,3.95942,55.952,1.06122,3.96079,55.9437,1.07373,3.96164,55.9386,1.07802,3.96193,55.9368])}),

                                        new OrientationInterpolator({
                                          DEF : new SFString("Cam3OrientationInterp"),
                                          key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25,0.255,0.26,0.265,0.27,0.275,0.28,0.285,0.29,0.295,0.3,0.305,0.31,0.315,0.32,0.325,0.33,0.335,0.34,0.345,0.35,0.355,0.36,0.365,0.37,0.375,0.38,0.385,0.39,0.395,0.4,0.405,0.41,0.415,0.42,0.425,0.43,0.435,0.44,0.445,0.45,0.455,0.46,0.465,0.47,0.475,0.48,0.485,0.49,0.495,0.5,0.505,0.51,0.515,0.52,0.525,0.53,0.535,0.54,0.545,0.55,0.555,0.56,0.565,0.57,0.575,0.58,0.585,0.59,0.595,0.6,0.605,0.61,0.615,0.62,0.625,0.63,0.635,0.64,0.645,0.65,0.655,0.66,0.665,0.67,0.675,0.68,0.685,0.69,0.695,0.7,0.705,0.71,0.715,0.72,0.725,0.73,0.735,0.74,0.745,0.75,0.755,0.76,0.765,0.77,0.775,0.78,0.785,0.79,0.795,0.8,0.805,0.81,0.815,0.82,0.825,0.83,0.835,0.84,0.845,0.85,0.855,0.86,0.865,0.87,0.875,0.88,0.885,0.89,0.895,0.9,0.905,0.91,0.915,0.92,0.925,0.93,0.935,0.94,0.945,0.95,0.955,0.96,0.965,0.97,0.975,0.98,0.985,0.99,0.995,1]),
                                          keyValue : new MFRotation([0.200123,0.977961,-0.0595247,0.665031,0.200097,0.977966,-0.059527,0.665156,0.200023,0.977981,-0.0595338,0.665523,0.199902,0.978005,-0.0595447,0.666114,0.199739,0.978037,-0.0595595,0.666916,0.199537,0.978078,-0.0595778,0.667912,0.199299,0.978125,-0.0595993,0.669087,0.199029,0.978178,-0.0596237,0.670427,0.198731,0.978237,-0.0596507,0.671915,0.198407,0.978301,-0.05968,0.673536,0.198061,0.978369,-0.0597113,0.675276,0.197696,0.978441,-0.0597442,0.677117,0.197317,0.978516,-0.0597785,0.679047,0.196925,0.978592,-0.0598139,0.681047,0.196525,0.97867,-0.0598501,0.683104,0.196119,0.97875,-0.0598867,0.685203,0.19571,0.978829,-0.0599236,0.687327,0.195302,0.978908,-0.0599604,0.689461,0.194898,0.978987,-0.0599969,0.691591,0.194499,0.979064,-0.0600328,0.6937,0.194109,0.979139,-0.0600679,0.695773,0.193732,0.979212,-0.0601019,0.697795,0.193368,0.979282,-0.0601347,0.699751,0.193022,0.979348,-0.0601658,0.701624,0.192695,0.979411,-0.0601952,0.703401,0.192391,0.979469,-0.0602226,0.705064,0.192111,0.979522,-0.0602478,0.7066,0.191858,0.97957,-0.0602705,0.707992,0.191635,0.979613,-0.0602906,0.709225,0.191444,0.979649,-0.0603078,0.710284,0.191288,0.979679,-0.0603218,0.711153,0.191168,0.979701,-0.0603325,0.711817,0.191089,0.979716,-0.0603397,0.71226,0.191052,0.979723,-0.060343,0.712468,0.191059,0.979722,-0.0603423,0.712424,0.191115,0.979711,-0.0603373,0.712114,0.191221,0.979691,-0.0603278,0.711522,0.191381,0.979661,-0.0603134,0.710632,0.191598,0.97962,-0.0602939,0.70943,0.191875,0.979567,-0.060269,0.7079,0.192215,0.979502,-0.0602384,0.706026,0.192623,0.979424,-0.0602017,0.703793,0.193103,0.979333,-0.0601586,0.701186,0.193658,0.979226,-0.0601086,0.69819,0.194294,0.979104,-0.0600513,0.694789,0.195016,0.978964,-0.0599862,0.690968,0.195828,0.978806,-0.0599129,0.686712,0.196738,0.978629,-0.0598308,0.682005,0.197753,0.97843,-0.0597392,0.676834,0.198878,0.978208,-0.0596374,0.67118,0.200123,0.977961,-0.0595247,0.665031,0.200799,0.977826,-0.0594634,0.661735,0.201522,0.977681,-0.0593979,0.658251,0.20229,0.977527,-0.0593282,0.654582,0.203105,0.977362,-0.0592543,0.650734,0.203967,0.977188,-0.0591759,0.64671,0.204877,0.977002,-0.0590932,0.642513,0.205836,0.976806,-0.059006,0.638148,0.206844,0.976599,-0.0589141,0.633618,0.207902,0.97638,-0.0588176,0.628929,0.209013,0.976149,-0.0587163,0.624082,0.210175,0.975905,-0.0586101,0.619083,0.211391,0.975649,-0.0584989,0.613935,0.212662,0.97538,-0.0583825,0.608642,0.21399,0.975097,-0.0582609,0.603208,0.215374,0.9748,-0.0581338,0.597638,0.216818,0.974487,-0.0580011,0.591934,0.218323,0.97416,-0.0578627,0.586101,0.21989,0.973816,-0.0577183,0.580144,0.221521,0.973455,-0.0575678,0.574065,0.223218,0.973076,-0.057411,0.567869,0.224984,0.972679,-0.0572476,0.56156,0.22682,0.972263,-0.0570775,0.555142,0.228728,0.971826,-0.0569003,0.548619,0.230712,0.971368,-0.0567158,0.541994,0.232773,0.970887,-0.0565237,0.535273,0.234915,0.970383,-0.0563238,0.528458,0.23714,0.969853,-0.0561156,0.521554,0.239452,0.969298,-0.055899,0.514565,0.241853,0.968714,-0.0556735,0.507495,0.244347,0.968102,-0.0554387,0.500347,0.246939,0.967458,-0.0551942,0.493127,0.24963,0.966781,-0.0549397,0.485838,0.252427,0.96607,-0.0546746,0.478484,0.255333,0.965322,-0.0543984,0.471069,0.258352,0.964534,-0.0541107,0.463598,0.261491,0.963705,-0.0538109,0.456074,0.264752,0.962831,-0.0534983,0.448502,0.268144,0.96191,-0.0531724,0.440885,0.27167,0.960939,-0.0528325,0.433229,0.275337,0.959914,-0.0524779,0.425537,0.279152,0.958832,-0.0521077,0.417813,0.283121,0.957689,-0.0517212,0.410062,0.287253,0.956479,-0.0513175,0.402287,0.291554,0.955199,-0.0508957,0.394494,0.296033,0.953844,-0.0504546,0.386686,0.300699,0.952408,-0.0499933,0.378869,0.305561,0.950884,-0.0495106,0.371045,0.310628,0.949267,-0.0490052,0.36322,0.315912,0.947549,-0.0484758,0.355398,0.321423,0.945722,-0.047921,0.347583,0.327173,0.943778,-0.0473392,0.33978,0.333174,0.941707,-0.0467287,0.331996,0.33944,0.939498,-0.0460879,0.324231,0.345984,0.937141,-0.0454147,0.316493,0.352822,0.934622,-0.0447071,0.308785,0.359968,0.931928,-0.0439628,0.301114,0.36744,0.929044,-0.0431796,0.293483,0.375254,0.925954,-0.0423547,0.285897,0.383429,0.922638,-0.0414855,0.278362,0.391983,0.919078,-0.040569,0.270881,0.400937,0.915249,-0.0396019,0.263463,0.410312,0.911129,-0.0385809,0.256113,0.420129,0.906689,-0.0375021,0.24883,0.43041,0.901901,-0.0363617,0.24163,0.441179,0.89673,-0.0351554,0.234509,0.452459,0.891141,-0.0338787,0.227478,0.464275,0.885094,-0.0325266,0.220545,0.476648,0.878544,-0.0310941,0.213712,0.489604,0.871443,-0.0295757,0.206987,0.503165,0.863738,-0.0279656,0.200374,0.517351,0.85537,-0.0262577,0.193885,0.532183,0.846276,-0.0244459,0.187523,0.547676,0.836387,-0.0225235,0.181297,0.563843,0.825628,-0.0204839,0.175214,0.580691,0.813918,-0.0183204,0.169281,0.59822,0.801171,-0.0160265,0.163507,0.616425,0.787297,-0.0135956,0.157899,0.635285,0.772199,-0.011022,0.152467,0.654774,0.75578,-0.00830017,0.147216,0.674846,0.737939,-0.00542595,0.142158,0.695442,0.718579,-0.00239628,0.137299,0.716483,0.697604,0.000790111,0.132648,0.737871,0.674929,0.00413238,0.128214,0.759485,0.65048,0.00762709,0.124005,0.781183,0.6242,0.0112677,0.120026,0.8028,0.596058,0.0150443,0.116287,0.824151,0.566053,0.0189431,0.112792,0.845035,0.534218,0.0229462,0.109546,0.865239,0.50063,0.0270317,0.106552,0.884545,0.465412,0.0311739,0.103808,0.902739,0.428735,0.0353436,0.101324,0.91962,0.390818,0.039509,0.0990867,0.93501,0.351925,0.0436364,0.0971002,0.948766,0.31236,0.0476919,0.0953527,0.960781,0.272456,0.051642,0.09384,0.970998,0.232566,0.0554556,0.092545,0.979407,0.19305,0.0591043,0.0914614,0.986047,0.15426,0.0625642,0.0905704,0.991004,0.116534,0.065816,0.0898593,0.9944,0.0801775,0.0688458,0.0893055,0.997172,0.0111155,0.0743237,0.0886004,0.995451,-0.0531125,0.079094,0.0883335,0.990243,-0.111802,0.083179,0.0884117,0.982546,-0.164616,0.0866281,0.0887483,0.973269,-0.211511,0.0895064,0.0892681,0.963183,-0.252658,0.0918853,0.089907,0.952912,-0.288363,0.093835,0.0906125,0.942938,-0.319002,0.0954207,0.0913335,0.933615,-0.344981,0.0966999,0.0920385,0.925193,-0.366699,0.0977219,0.0926969,0.917839,-0.384531,0.098528,0.0932868,0.911653,-0.39882,0.0991518,0.0937942,0.906689,-0.409868,0.0996204,0.0942103,0.902959,-0.417941,0.0999551,0.0945237,0.90045,-0.423267,0.100172,0.0947405,0.899128,-0.426041,0.100284,0.0948512,0.898942,-0.42643,0.1003,0.0948688,0.899828,-0.424575,0.100225,0.0947933,0.901712,-0.420597,0.100064,0.0946321,0.904512,-0.414601,0.0998174,0.0943924,0.908137,-0.406681,0.0994864,0.0940887,0.912491,-0.39692,0.09907,0.0937255,0.91747,-0.3854,0.0985665,0.0933175,0.922966,-0.372203,0.0979739,0.0928743,0.928866,-0.357411,0.0972902,0.0924057,0.935054,-0.341115,0.0965134,0.091927,0.941411,-0.323416,0.0956423,0.0914483,0.947819,-0.304425,0.0946766,0.0909777,0.954163,-0.284268,0.093617,0.0905256,0.960331,-0.263086,0.0924659,0.0900978,0.96622,-0.241034,0.0912274,0.0897105,0.971735,-0.218285,0.0899076,0.0893616,0.976796,-0.195025,0.0885146,0.0890568,0.981339,-0.171451,0.0870585,0.0888101,0.985314,-0.147773,0.0855517,0.0886111,0.988694,-0.124205,0.0840084,0.0884657,0.991468,-0.100966,0.0824446,0.088374,0.993646,-0.0782747,0.0808776,0.0883281,0.995255,-0.0563478,0.0793261,0.0883308,0.99634,-0.0353953,0.0778093,0.0883713,0.996959,-0.0156198,0.0763473,0.0884441,0.997183,0.00278509,0.07496,0.0885438,0.99709,0.0196354,0.0736674,0.0886649,0.996763,0.0347567,0.0724892,0.0887913,0.99629,0.0479825,0.0714445,0.0889228,0.995753,0.0591531,0.0705518,0.0890434,0.995231,0.0681128,0.0698289,0.0891505,0.994795,0.0747078,0.0692929,0.0892334,0.994504,0.0787826,0.06896,0.0892868,0.9944,0.0801775,0.0688458,0.0893055])})])}),

                                    new Viewpoint({
                                      DEF : new SFString("Cam3"),
                                      position : new SFVec3f([33.8945,6.18521,42.4563]),
                                      orientation : new SFRotation([0.200123,0.977961,-0.0595245,0.665031])})])})])}),

                            new Transform({
                              DEF : new SFString("C4_1"),
                              children : new MFNode([
                                new Transform({
                                  children : new MFNode([
                                    new Group({
                                      children : new MFNode([
                                        new Group({
                                          DEF : new SFString("Cam4_anim"),
                                          children : new MFNode([
                                            new TimeSensor({
                                              DEF : new SFString("CamTime4"),
                                              cycleInterval : new SFTime(30),
                                              stopTime : new SFTime(1)})])}),

                                        new PositionInterpolator({
                                          DEF : new SFString("Cam4PositionInterp"),
                                          key : new MFFloat([0,0.00333333,0.00666667,0.01,0.0133333,0.0166667,0.02,0.0233333,0.0266667,0.03,0.0333333,0.0366667,0.04,0.0433333,0.0466667,0.05,0.0533333,0.0566667,0.06,0.0633333,0.0666667,0.07,0.0733333,0.0766667,0.08,0.0833333,0.0866667,0.09,0.0933333,0.0966666,0.1,0.103333,0.106667,0.11,0.113333,0.116667,0.12,0.123333,0.126667,0.13,0.133333,0.136667,0.14,0.143333,0.146667,0.15,0.153333,0.156667,0.16,0.163333,0.166667,0.17,0.173333,0.176667,0.18,0.183333,0.186667,0.19,0.193333,0.196667,0.2,0.203333,0.206667,0.21,0.213333,0.216667,0.22,0.223333,0.226667,0.23,0.233333,0.236667,0.24,0.243333,0.246667,0.25,0.253352,0.256705,0.260057,0.26341,0.266762,0.270115,0.273467,0.27682,0.280172,0.283525,0.286877,0.29023,0.293582,0.296935,0.300287,0.30364,0.306992,0.310345,0.313697,0.31705,0.320402,0.323755,0.327107,0.33046,0.333812,0.337165,0.340517,0.34387,0.347222,0.350575,0.353927,0.35728,0.360632,0.363985,0.367337,0.37069,0.374042,0.377395,0.380747,0.3841,0.387452,0.390805,0.394157,0.39751,0.400862,0.404215,0.407567,0.41092,0.414272,0.417625,0.420977,0.42433,0.427682,0.431035,0.434387,0.43774,0.441092,0.444445,0.447797,0.45115,0.454502,0.457855,0.461207,0.46456,0.467912,0.471265,0.474617,0.47797,0.481322,0.484675,0.488027,0.491379,0.494732,0.498084,0.501437,0.504789,0.508142,0.511494,0.514847,0.518199,0.521552,0.524904,0.528257,0.531609,0.534962,0.538314,0.541667,0.545019,0.548371,0.551724,0.555076,0.558429,0.561781,0.565134,0.568486,0.571839,0.575191,0.578544,0.581896,0.585249,0.588601,0.591953,0.595306,0.598658,0.602011,0.605363,0.608716,0.612068,0.615421,0.618773,0.622126,0.625478,0.628831,0.632183,0.635535,0.638888,0.64224,0.645593,0.648945,0.652298,0.65565,0.659003,0.662355,0.665708,0.66906,0.672413,0.675765,0.679118,0.68247,0.685822,0.689175,0.692527,0.69588,0.699232,0.702585,0.705937,0.70929,0.712642,0.715995,0.719347,0.7227,0.726052,0.729404,0.732757,0.736109,0.739462,0.742814,0.746167,0.749519,0.752872,0.756224,0.759577,0.762929,0.766282,0.769634,0.772986,0.776339,0.779691,0.783044,0.786396,0.789749,0.793101,0.796454,0.799806,0.803159,0.806511,0.809864,0.813216,0.816568,0.819921,0.823273,0.826626,0.829978,0.833333,0.836666,0.84,0.843333,0.846666,0.85,0.853333,0.856666,0.86,0.863333,0.866666,0.87,0.873333,0.876666,0.88,0.883333,0.886666,0.89,0.893333,0.896666,0.9,0.903333,0.906666,0.91,0.913333,0.916666,0.92,0.923333,0.926666,0.93,0.933333,0.936666,0.94,0.943333,0.946666,0.95,0.953333,0.956666,0.96,0.963333,0.966666,0.97,0.973333,0.976666,0.98,0.983333,0.986666,0.99,0.993333,0.996666,1]),
                                          keyValue : new MFVec3f([-0.304201,22.1355,18.4605,-0.304011,22.136,18.4596,-0.30345,22.1376,18.4569,-0.302535,22.1402,18.4525,-0.301281,22.1437,18.4465,-0.299702,22.1482,18.439,-0.297815,22.1535,18.43,-0.295635,22.1597,18.4196,-0.293178,22.1666,18.4078,-0.290458,22.1743,18.3948,-0.287491,22.1826,18.3807,-0.284293,22.1917,18.3654,-0.28088,22.2013,18.3491,-0.277265,22.2115,18.3318,-0.273466,22.2222,18.3137,-0.269497,22.2334,18.2947,-0.265373,22.245,18.275,-0.261111,22.2571,18.2546,-0.256725,22.2694,18.2337,-0.252232,22.2821,18.2122,-0.247646,22.2951,18.1903,-0.242982,22.3082,18.168,-0.238257,22.3215,18.1454,-0.233486,22.335,18.1226,-0.228684,22.3486,18.0997,-0.223867,22.3621,18.0767,-0.219049,22.3757,18.0537,-0.214247,22.3893,18.0307,-0.209476,22.4027,18.0079,-0.204751,22.4161,17.9853,-0.200088,22.4292,17.9631,-0.195501,22.4422,17.9412,-0.191008,22.4548,17.9197,-0.186622,22.4672,17.8987,-0.18236,22.4792,17.8784,-0.178237,22.4909,17.8587,-0.174267,22.5021,17.8397,-0.170468,22.5128,17.8216,-0.166854,22.523,17.8043,-0.16344,22.5326,17.788,-0.160242,22.5416,17.7727,-0.157275,22.55,17.7585,-0.154555,22.5577,17.7455,-0.152098,22.5646,17.7338,-0.149918,22.5708,17.7234,-0.148031,22.5761,17.7143,-0.146452,22.5805,17.7068,-0.145198,22.5841,17.7008,-0.144283,22.5867,17.6964,-0.143722,22.5883,17.6938,-0.143532,22.5888,17.6929,-0.143727,22.5882,17.6938,-0.144324,22.5866,17.6966,-0.145337,22.5837,17.7015,-0.146781,22.5796,17.7084,-0.148673,22.5743,17.7174,-0.151028,22.5676,17.7287,-0.153861,22.5596,17.7422,-0.157188,22.5503,17.7581,-0.161023,22.5394,17.7764,-0.165383,22.5271,17.7973,-0.170283,22.5133,17.8207,-0.175738,22.4979,17.8467,-0.181763,22.4809,17.8755,-0.188375,22.4623,17.9071,-0.195589,22.4419,17.9416,-0.203419,22.4198,17.979,-0.211882,22.396,18.0194,-0.220992,22.3703,18.0629,-0.230766,22.3427,18.1096,-0.241218,22.3132,18.1596,-0.252365,22.2817,18.2128,-0.264221,22.2483,18.2695,-0.276802,22.2128,18.3296,-0.290123,22.1752,18.3932,-0.304201,22.1355,18.4605,-0.318842,22.0942,18.5305,-0.333677,22.0523,18.6013,-0.348705,22.0099,18.6731,-0.363922,21.967,18.7458,-0.379327,21.9235,18.8194,-0.394918,21.8796,18.8939,-0.410692,21.8351,18.9693,-0.426647,21.79,19.0455,-0.442782,21.7445,19.1226,-0.459093,21.6985,19.2005,-0.47558,21.652,19.2793,-0.492239,21.605,19.3589,-0.509069,21.5575,19.4393,-0.526067,21.5096,19.5205,-0.543231,21.4611,19.6025,-0.560559,21.4122,19.6853,-0.57805,21.3629,19.7689,-0.5957,21.3131,19.8532,-0.613508,21.2629,19.9383,-0.631471,21.2122,20.0241,-0.649588,21.1611,20.1107,-0.667855,21.1095,20.198,-0.686272,21.0576,20.286,-0.704836,21.0052,20.3747,-0.723545,20.9524,20.464,-0.742396,20.8992,20.5541,-0.761387,20.8457,20.6448,-0.780517,20.7917,20.7362,-0.799783,20.7373,20.8283,-0.819183,20.6826,20.921,-0.838715,20.6275,21.0143,-0.858377,20.572,21.1082,-0.878166,20.5162,21.2028,-0.89808,20.46,21.2979,-0.918118,20.4035,21.3937,-0.938277,20.3466,21.49,-0.958555,20.2894,21.5869,-0.978949,20.2319,21.6843,-0.999459,20.174,21.7823,-1.02008,20.1158,21.8808,-1.04081,20.0573,21.9799,-1.06165,19.9985,22.0795,-1.0826,19.9394,22.1795,-1.10365,19.88,22.2801,-1.1248,19.8204,22.3812,-1.14605,19.7604,22.4827,-1.1674,19.7002,22.5847,-1.18885,19.6397,22.6872,-1.21038,19.5789,22.7901,-1.23201,19.5179,22.8934,-1.25373,19.4566,22.9972,-1.27553,19.3951,23.1013,-1.29742,19.3334,23.2059,-1.31939,19.2714,23.3109,-1.34144,19.2092,23.4162,-1.36357,19.1467,23.522,-1.38578,19.0841,23.6281,-1.40806,19.0212,23.7345,-1.43041,18.9582,23.8413,-1.45283,18.8949,23.9484,-1.47532,18.8315,24.0559,-1.49787,18.7679,24.1636,-1.52048,18.704,24.2717,-1.54316,18.6401,24.38,-1.5659,18.5759,24.4886,-1.58869,18.5116,24.5975,-1.61153,18.4472,24.7067,-1.63443,18.3826,24.8161,-1.65738,18.3178,24.9257,-1.68038,18.2529,25.0356,-1.70342,18.1879,25.1457,-1.72651,18.1228,25.256,-1.74963,18.0576,25.3665,-1.7728,17.9922,25.4772,-1.79601,17.9267,25.5881,-1.81925,17.8612,25.6991,-1.84252,17.7955,25.8103,-1.86582,17.7298,25.9216,-1.88915,17.6639,26.0331,-1.91251,17.598,26.1447,-1.93589,17.5321,26.2564,-1.9593,17.466,26.3682,-1.98272,17.4,26.4802,-2.00617,17.3338,26.5922,-2.02962,17.2676,26.7042,-2.0531,17.2014,26.8164,-2.07658,17.1352,26.9286,-2.10007,17.0689,27.0408,-2.12357,17.0026,27.1531,-2.14708,16.9363,27.2654,-2.17058,16.8699,27.3777,-2.19409,16.8036,27.49,-2.2176,16.7373,27.6023,-2.2411,16.671,27.7146,-2.2646,16.6047,27.8269,-2.28809,16.5384,27.9391,-2.31157,16.4722,28.0513,-2.33504,16.406,28.1634,-2.35849,16.3398,28.2755,-2.38193,16.2737,28.3875,-2.40534,16.2076,28.4993,-2.42874,16.1416,28.6111,-2.45211,16.0757,28.7228,-2.47546,16.0098,28.8344,-2.49879,15.944,28.9458,-2.52208,15.8783,29.0571,-2.54534,15.8127,29.1682,-2.56857,15.7471,29.2792,-2.59176,15.6817,29.39,-2.61491,15.6164,29.5006,-2.63802,15.5512,29.611,-2.66109,15.4861,29.7213,-2.68412,15.4211,29.8313,-2.7071,15.3563,29.9411,-2.73003,15.2916,30.0506,-2.75291,15.2271,30.1599,-2.77574,15.1627,30.269,-2.79851,15.0984,30.3778,-2.82122,15.0343,30.4863,-2.84388,14.9704,30.5946,-2.86647,14.9067,30.7025,-2.889,14.8431,30.8102,-2.91146,14.7797,30.9175,-2.93386,14.7166,31.0245,-2.95618,14.6536,31.1311,-2.97843,14.5908,31.2375,-3.00061,14.5282,31.3434,-3.02271,14.4659,31.449,-3.04473,14.4037,31.5542,-3.06667,14.3418,31.6591,-3.08853,14.2802,31.7635,-3.11031,14.2187,31.8675,-3.13199,14.1576,31.9711,-3.15359,14.0966,32.0743,-3.17509,14.036,32.1771,-3.1965,13.9756,32.2793,-3.21781,13.9154,32.3812,-3.23903,13.8556,32.4825,-3.26014,13.796,32.5834,-3.28116,13.7367,32.6838,-3.30207,13.6777,32.7837,-3.32287,13.6191,32.8831,-3.34356,13.5607,32.982,-3.36414,13.5026,33.0803,-3.38461,13.4449,33.1781,-3.40496,13.3874,33.2753,-3.4252,13.3304,33.372,-3.44531,13.2736,33.4681,-3.4653,13.2172,33.5636,-3.48517,13.1611,33.6586,-3.50492,13.1054,33.7529,-3.52453,13.0501,33.8466,-3.54402,12.9951,33.9397,-3.56337,12.9405,34.0322,-3.58258,12.8863,34.124,-3.60166,12.8325,34.2151,-3.6206,12.7791,34.3056,-3.6394,12.726,34.3955,-3.65806,12.6734,34.4846,-3.67657,12.6212,34.573,-3.69493,12.5694,34.6608,-3.71315,12.518,34.7478,-3.73121,12.467,34.8341,-3.74912,12.4165,34.9196,-3.76687,12.3664,35.0044,-3.78446,12.3168,35.0885,-3.80189,12.2676,35.1718,-3.81916,12.2189,35.2543,-3.83627,12.1706,35.336,-3.8532,12.1228,35.4169,-3.86997,12.0755,35.4971,-3.88657,12.0287,35.5764,-3.90299,11.9824,35.6548,-3.91925,11.9365,35.7325,-3.93468,11.893,35.8062,-3.94886,11.8529,35.874,-3.96184,11.8163,35.936,-3.97365,11.783,35.9924,-3.98432,11.7529,36.0434,-3.9939,11.7259,36.0892,-4.00243,11.7018,36.1299,-4.00994,11.6806,36.1658,-4.01648,11.6622,36.197,-4.02208,11.6464,36.2238,-4.02678,11.6331,36.2462,-4.03061,11.6223,36.2646,-4.03363,11.6138,36.279,-4.03586,11.6075,36.2896,-4.03734,11.6033,36.2967,-4.03812,11.6011,36.3004,-4.03823,11.6008,36.301,-4.03771,11.6023,36.2985,-4.0366,11.6054,36.2932,-4.03493,11.6101,36.2852,-4.03275,11.6163,36.2748,-4.0301,11.6238,36.2621,-4.02701,11.6325,36.2473,-4.02352,11.6423,36.2307,-4.01967,11.6532,36.2123,-4.0155,11.665,36.1923,-4.01104,11.6775,36.1711,-4.00635,11.6908,36.1486,-4.00144,11.7046,36.1252,-3.99637,11.7189,36.101,-3.99117,11.7336,36.0761,-3.98588,11.7485,36.0509,-3.98054,11.7636,36.0253,-3.97519,11.7787,35.9998,-3.96986,11.7937,35.9743,-3.9646,11.8086,35.9492,-3.95944,11.8231,35.9245,-3.95442,11.8373,35.9005,-3.94958,11.8509,35.8774,-3.94496,11.864,35.8553,-3.94059,11.8763,35.8345,-3.93653,11.8878,35.815,-3.93279,11.8983,35.7972,-3.92943,11.9078,35.7811,-3.92648,11.9161,35.767,-3.92398,11.9232,35.7551,-3.92197,11.9288,35.7455,-3.92048,11.933,35.7384,-3.91956,11.9356,35.734,-3.91925,11.9365,35.7325])}),

                                        new OrientationInterpolator({
                                          DEF : new SFString("Cam4OrientationInterp"),
                                          key : new MFFloat([0,0.00333333,0.00666667,0.01,0.0133333,0.0166667,0.02,0.0233333,0.0266667,0.03,0.0333333,0.0366667,0.04,0.0433333,0.0466667,0.05,0.0533333,0.0566667,0.06,0.0633333,0.0666667,0.07,0.0733333,0.0766667,0.08,0.0833333,0.0866667,0.09,0.0933333,0.0966666,0.1,0.103333,0.106667,0.11,0.113333,0.116667,0.12,0.123333,0.126667,0.13,0.133333,0.136667,0.14,0.143333,0.146667,0.15,0.153333,0.156667,0.16,0.163333,0.166667,0.17,0.173333,0.176667,0.18,0.183333,0.186667,0.19,0.193333,0.196667,0.2,0.203333,0.206667,0.21,0.213333,0.216667,0.22,0.223333,0.226667,0.23,0.233333,0.236667,0.24,0.243333,0.246667,0.25,0.253352,0.256705,0.260057,0.26341,0.266762,0.270115,0.273467,0.27682,0.280172,0.283525,0.286877,0.29023,0.293582,0.296935,0.300287,0.30364,0.306992,0.310345,0.313697,0.31705,0.320402,0.323755,0.327107,0.33046,0.333812,0.337165,0.340517,0.34387,0.347222,0.350575,0.353927,0.35728,0.360632,0.363985,0.367337,0.37069,0.374042,0.377395,0.380747,0.3841,0.387452,0.390805,0.394157,0.39751,0.400862,0.404215,0.407567,0.41092,0.414272,0.417625,0.420977,0.42433,0.427682,0.431035,0.434387,0.43774,0.441092,0.444445,0.447797,0.45115,0.454502,0.457855,0.461207,0.46456,0.467912,0.471265,0.474617,0.47797,0.481322,0.484675,0.488027,0.491379,0.494732,0.498084,0.501437,0.504789,0.508142,0.511494,0.514847,0.518199,0.521552,0.524904,0.528257,0.531609,0.534962,0.538314,0.541667,0.545019,0.548371,0.551724,0.555076,0.558429,0.561781,0.565134,0.568486,0.571839,0.575191,0.578544,0.581896,0.585249,0.588601,0.591953,0.595306,0.598658,0.602011,0.605363,0.608716,0.612068,0.615421,0.618773,0.622126,0.625478,0.628831,0.632183,0.635535,0.638888,0.64224,0.645593,0.648945,0.652298,0.65565,0.659003,0.662355,0.665708,0.66906,0.672413,0.675765,0.679118,0.68247,0.685822,0.689175,0.692527,0.69588,0.699232,0.702585,0.705937,0.70929,0.712642,0.715995,0.719347,0.7227,0.726052,0.729404,0.732757,0.736109,0.739462,0.742814,0.746167,0.749519,0.752872,0.756224,0.759577,0.762929,0.766282,0.769634,0.772986,0.776339,0.779691,0.783044,0.786396,0.789749,0.793101,0.796454,0.799806,0.803159,0.806511,0.809864,0.813216,0.816568,0.819921,0.823273,0.826626,0.829978,0.833333,0.836666,0.84,0.843333,0.846666,0.85,0.853333,0.856666,0.86,0.863333,0.866666,0.87,0.873333,0.876666,0.88,0.883333,0.886666,0.89,0.893333,0.896666,0.9,0.903333,0.906666,0.91,0.913333,0.916666,0.92,0.923333,0.926666,0.93,0.933333,0.936666,0.94,0.943333,0.946666,0.95,0.953333,0.956666,0.96,0.963333,0.966666,0.97,0.973333,0.976666,0.98,0.983333,0.986666,0.99,0.993333,0.996666,1]),
                                          keyValue : new MFRotation([0.996137,0.0369663,0.0796537,0.0516301,0.996136,0.0369584,0.0796634,0.0516255,0.996135,0.0369352,0.0796921,0.0516116,0.996133,0.0368972,0.079739,0.0515931,0.996129,0.0368452,0.0798033,0.0515608,0.996125,0.0367796,0.0798844,0.0515238,0.99612,0.036701,0.0799814,0.0514821,0.996115,0.0366101,0.0800937,0.0514311,0.996108,0.0365074,0.0802206,0.0513662,0.996101,0.0363935,0.0803613,0.0513058,0.996093,0.0362689,0.0805153,0.051236,0.996085,0.0361342,0.0806817,0.0511569,0.996076,0.0359899,0.0808598,0.0510776,0.996066,0.0358367,0.081049,0.0509981,0.996055,0.0356751,0.0812486,0.0509045,0.996044,0.0355057,0.0814579,0.0508108,0.996033,0.035329,0.0816761,0.0507215,0.99602,0.0351457,0.0819025,0.0506133,0.996008,0.0349563,0.0821364,0.0505143,0.995995,0.0347614,0.082377,0.0504056,0.995981,0.0345617,0.0826236,0.0503014,0.995967,0.0343577,0.0828755,0.0501875,0.995953,0.0341501,0.0831318,0.0500829,0.995939,0.0339396,0.0833917,0.0499637,0.995924,0.0337267,0.0836545,0.0498586,0.995909,0.0335122,0.0839193,0.0497389,0.995894,0.0332966,0.0841854,0.0496285,0.995878,0.0330808,0.0844517,0.0495131,0.995863,0.0328654,0.0847176,0.0494022,0.995847,0.0326511,0.0849821,0.0492959,0.995832,0.0324387,0.0852442,0.0491797,0.995816,0.0322288,0.0855032,0.0490729,0.995801,0.0320223,0.085758,0.0489707,0.995786,0.0318199,0.0860078,0.0488635,0.995771,0.0316224,0.0862515,0.0487609,0.995757,0.0314305,0.0864883,0.0486679,0.995743,0.031245,0.086717,0.0485747,0.995729,0.0310669,0.0869369,0.0484863,0.995716,0.0308968,0.0871467,0.0484026,0.995704,0.0307355,0.0873456,0.0483238,0.995692,0.030584,0.0875325,0.0482497,0.995681,0.030443,0.0877063,0.0481755,0.995671,0.0303134,0.0878662,0.0481111,0.995662,0.030196,0.088011,0.0480516,0.995654,0.0300916,0.0881398,0.0480069,0.995646,0.0300011,0.0882514,0.0479572,0.99564,0.0299253,0.088345,0.0479274,0.995636,0.0298649,0.0884194,0.0478975,0.995632,0.0298208,0.0884738,0.0478676,0.99563,0.0297938,0.0885071,0.0478627,0.995629,0.0297846,0.0885184,0.0478527,0.99563,0.029794,0.0885068,0.0478627,0.995632,0.0298228,0.0884713,0.0478726,0.995636,0.0298716,0.0884112,0.0478925,0.995642,0.0299411,0.0883254,0.0479324,0.995649,0.030032,0.0882134,0.0479721,0.995658,0.0301448,0.0880741,0.0480318,0.995668,0.0302803,0.0879071,0.0481012,0.995681,0.0304389,0.0877115,0.0481755,0.995695,0.0306211,0.0874867,0.0482694,0.995711,0.0308274,0.0872323,0.0483681,0.995729,0.0310582,0.0869476,0.0484863,0.995748,0.0313138,0.0866322,0.048614,0.995769,0.0315946,0.0862857,0.048756,0.995792,0.0319009,0.0859078,0.0489025,0.995817,0.0322328,0.0854983,0.0490826,0.995843,0.0325906,0.0850568,0.0492669,0.995871,0.0329742,0.0845834,0.0494649,0.9959,0.0333837,0.0840779,0.0496765,0.99593,0.0338191,0.0835404,0.0499064,0.995962,0.0342803,0.082971,0.0501495,0.995995,0.0347672,0.0823699,0.0504103,0.996029,0.0352795,0.0817372,0.0506886,0.996064,0.0358171,0.0810734,0.0509841,0.9961,0.0363794,0.0803787,0.0513012,0.996137,0.0369663,0.0796537,0.0516301,0.996153,0.0372281,0.0793302,0.0517777,0.996169,0.0374971,0.0789978,0.051934,0.996186,0.0377731,0.0786568,0.0520945,0.996203,0.0380558,0.0783075,0.052259,0.99622,0.0383449,0.0779501,0.052423,0.996237,0.0386403,0.0775851,0.0525955,0.996254,0.0389416,0.0772126,0.0527721,0.996271,0.0392487,0.076833,0.0529615,0.996288,0.0395613,0.0764466,0.0531458,0.996306,0.0398791,0.0760536,0.0533339,0.996323,0.040202,0.0756543,0.0535302,0.996341,0.0405297,0.0752491,0.0537347,0.996358,0.040862,0.0748382,0.0539385,0.996376,0.0411986,0.0744219,0.0541503,0.996393,0.0415394,0.0740004,0.0543656,0.99641,0.041884,0.0735741,0.0545801,0.996427,0.0422324,0.0731431,0.0548024,0.996444,0.0425842,0.0727078,0.0550282,0.99646,0.0429393,0.0722685,0.0552574,0.996477,0.0432974,0.0718253,0.0554943,0.996493,0.0436585,0.0713785,0.0557344,0.996509,0.0440221,0.0709284,0.0559777,0.996525,0.0443882,0.0704752,0.05622,0.996541,0.0447566,0.0700192,0.0564697,0.996556,0.0451271,0.0695606,0.0567266,0.996572,0.0454994,0.0690995,0.0569825,0.996587,0.0458735,0.0686363,0.0572455,0.996601,0.0462491,0.0681712,0.0575073,0.996615,0.0466261,0.0677043,0.0577721,0.996629,0.0470043,0.0672359,0.0580439,0.996643,0.0473835,0.0667661,0.0583185,0.996656,0.0477636,0.0662952,0.0585918,0.996669,0.0481445,0.0658234,0.058876,0.996682,0.0485259,0.0653508,0.0591588,0.996694,0.0489077,0.0648776,0.0594443,0.996706,0.0492898,0.064404,0.0597324,0.996717,0.0496721,0.0639302,0.0600311,0.996729,0.0500543,0.0634564,0.0603243,0.996739,0.0504365,0.0629826,0.0606279,0.99675,0.0508184,0.0625091,0.0609261,0.99676,0.0511999,0.062036,0.0612306,0.996769,0.051581,0.0615635,0.0615375,0.996779,0.0519615,0.0610917,0.0618506,0.996788,0.0523412,0.0606206,0.0621621,0.996796,0.0527201,0.0601506,0.0624758,0.996804,0.0530982,0.0596816,0.0627918,0.996812,0.0534752,0.0592139,0.0631138,0.996819,0.0538511,0.0587475,0.0634341,0.996826,0.0542258,0.0582826,0.0637566,0.996833,0.0545991,0.0578191,0.0640849,0.996839,0.0549712,0.0573574,0.0644152,0.996845,0.0553417,0.0568975,0.0647475,0.99685,0.0557107,0.0564394,0.0650781,0.996856,0.0560782,0.0559832,0.0654144,0.99686,0.0564439,0.0555291,0.0657489,0.996865,0.0568078,0.0550772,0.0660889,0.996869,0.05717,0.0546274,0.0664308,0.996872,0.0575303,0.05418,0.066771,0.996876,0.0578886,0.0537349,0.0671165,0.996879,0.0582449,0.0532922,0.0674603,0.996881,0.0585992,0.0528521,0.0678093,0.996884,0.0589514,0.0524146,0.0681601,0.996886,0.0593014,0.0519797,0.068509,0.996888,0.0596492,0.0515474,0.0688597,0.996889,0.0599948,0.051118,0.069212,0.99689,0.0603381,0.0506913,0.0695694,0.996891,0.060679,0.0502675,0.069925,0.996891,0.0610176,0.0498466,0.0702822,0.996891,0.0613538,0.0494287,0.0706409,0.996891,0.0616875,0.0490137,0.0709979,0.996891,0.0620188,0.0486018,0.0713597,0.99689,0.0623476,0.048193,0.0717197,0.996889,0.0626739,0.0477872,0.0720812,0.996888,0.0629976,0.0473846,0.0724442,0.996887,0.0633187,0.0469852,0.0728087,0.996885,0.0636372,0.046589,0.0731714,0.996883,0.0639532,0.046196,0.0735387,0.996881,0.0642664,0.0458062,0.073901,0.996879,0.0645771,0.0454197,0.074268,0.996876,0.064885,0.0450365,0.0746363,0.996873,0.0651903,0.0446566,0.0750029,0.99687,0.0654928,0.0442801,0.0753708,0.996867,0.0657927,0.0439069,0.0757369,0.996863,0.0660898,0.043537,0.0761044,0.99686,0.0663842,0.0431706,0.0764733,0.996856,0.0666759,0.0428075,0.0768404,0.996852,0.0669648,0.0424478,0.0772088,0.996848,0.0672509,0.0420915,0.0775786,0.996843,0.0675343,0.0417386,0.0779466,0.996839,0.0678149,0.0413892,0.0783159,0.996834,0.0680928,0.0410432,0.0786835,0.99683,0.0683679,0.0407006,0.0790494,0.996825,0.0686402,0.0403614,0.0794166,0.99682,0.0689097,0.0400257,0.0797851,0.996814,0.0691764,0.0396934,0.0801519,0.996809,0.0694404,0.0393645,0.08052,0.996804,0.0697016,0.0390391,0.0808835,0.996798,0.06996,0.0387171,0.0812512,0.996793,0.0702157,0.0383986,0.0816144,0.996787,0.0704686,0.0380834,0.0819788,0.996781,0.0707187,0.0377718,0.0823417,0.996775,0.070966,0.0374635,0.0827029,0.996769,0.0712106,0.0371586,0.0830626,0.996763,0.0714524,0.0368572,0.0834264,0.996757,0.0716915,0.0365592,0.0837859,0.99675,0.0719279,0.0362645,0.0841437,0.996744,0.0721615,0.0359733,0.0845029,0.996738,0.0723924,0.0356855,0.0848578,0.996731,0.0726205,0.035401,0.085214,0.996725,0.0728459,0.0351199,0.0855687,0.996718,0.0730687,0.0348422,0.0859164,0.996711,0.0732887,0.0345678,0.0862709,0.996705,0.073506,0.0342968,0.0866213,0.996698,0.0737206,0.0340291,0.0869703,0.996691,0.0739326,0.0337647,0.0873151,0.996685,0.0741419,0.0335037,0.0876613,0.996678,0.0743485,0.033246,0.0880035,0.996671,0.0745524,0.0329915,0.088347,0.996664,0.0747538,0.0327404,0.0886865,0.996658,0.0749524,0.0324925,0.0890246,0.996651,0.0751485,0.0322479,0.0893589,0.996644,0.0753419,0.0320066,0.0896946,0.996637,0.0755327,0.0317685,0.0900263,0.99663,0.0757209,0.0315337,0.0903542,0.996624,0.0759065,0.031302,0.0906836,0.996617,0.0760895,0.0310736,0.0910091,0.99661,0.07627,0.0308485,0.0913309,0.996603,0.0764478,0.0306265,0.0916463,0.996596,0.0766231,0.0304077,0.0919711,0.99659,0.0767959,0.030192,0.0922869,0.996583,0.0769661,0.0299796,0.0926016,0.996576,0.0771338,0.0297702,0.0929128,0.99657,0.0772989,0.0295641,0.0932203,0.996563,0.0774616,0.0293611,0.0935268,0.996556,0.0776217,0.0291612,0.0938272,0.99655,0.0777793,0.0289644,0.0941267,0.996543,0.0779344,0.0287707,0.0944252,0.996537,0.078087,0.0285801,0.0947178,0.99653,0.0782372,0.0283927,0.0950094,0.996524,0.0783848,0.0282083,0.0953002,0.996518,0.07853,0.028027,0.0955851,0.996511,0.0786728,0.0278487,0.0958641,0.996505,0.078813,0.0276735,0.0961449,0.996499,0.0789509,0.0275014,0.0964198,0.996493,0.0790863,0.0273323,0.096694,0.996487,0.0792192,0.0271662,0.0969625,0.996481,0.0793498,0.0270032,0.0972278,0.996475,0.0794779,0.0268432,0.0974924,0.996469,0.0796036,0.0266862,0.097749,0.996464,0.0797268,0.0265322,0.0980024,0.996458,0.0798477,0.0263813,0.0982527,0.996452,0.0799661,0.0262333,0.0985025,0.996447,0.0800821,0.0260883,0.0987443,0.996441,0.0801958,0.0259464,0.0989856,0.996436,0.080307,0.0258074,0.099219,0.996431,0.0804159,0.0256714,0.0994519,0.996426,0.0805223,0.0255384,0.0996795,0.996421,0.0806264,0.0254083,0.0999042,0.996415,0.0807281,0.0252813,0.100124,0.996411,0.0808274,0.0251572,0.10034,0.996406,0.0809243,0.0250361,0.100551,0.996401,0.0810189,0.024918,0.100755,0.996396,0.081111,0.0248028,0.100959,0.996392,0.0812008,0.0246907,0.101155,0.996387,0.0812882,0.0245815,0.10135,0.996383,0.0813731,0.0244752,0.101541,0.996379,0.0814558,0.024372,0.101724,0.996375,0.081536,0.0242718,0.101902,0.996371,0.0816138,0.0241745,0.102075,0.996367,0.0816892,0.0240802,0.102245,0.996363,0.0817623,0.0239889,0.102413,0.996359,0.0818329,0.0239006,0.102574,0.996356,0.0819012,0.0238153,0.102727,0.996352,0.081967,0.023733,0.102878,0.996341,0.082182,0.0234644,0.103373,0.996331,0.0823777,0.0232197,0.103824,0.996321,0.0825553,0.0229977,0.104239,0.996312,0.0827157,0.0227972,0.104616,0.996305,0.0828597,0.0226172,0.104957,0.996297,0.0829881,0.0224566,0.105266,0.996291,0.0831018,0.0223144,0.105537,0.996286,0.0832015,0.0221898,0.105779,0.996281,0.0832878,0.0220819,0.105989,0.996277,0.0833615,0.0219898,0.106166,0.996273,0.0834232,0.0219127,0.106312,0.99627,0.0834734,0.0218499,0.106438,0.996268,0.0835127,0.0218007,0.106534,0.996267,0.0835418,0.0217643,0.106606,0.996265,0.0835611,0.0217401,0.106653,0.996265,0.0835713,0.0217275,0.106679,0.996265,0.0835727,0.0217257,0.106682,0.996265,0.0835659,0.0217342,0.106664,0.996266,0.0835514,0.0217523,0.106633,0.996267,0.0835298,0.0217794,0.106579,0.996269,0.0835013,0.0218149,0.106509,0.996271,0.0834667,0.0218583,0.106424,0.996273,0.0834262,0.0219089,0.106321,0.996276,0.0833804,0.0219661,0.106211,0.996279,0.0833298,0.0220294,0.10609,0.996282,0.0832749,0.0220981,0.105955,0.996285,0.083216,0.0221716,0.105815,0.996288,0.0831538,0.0222495,0.105662,0.996292,0.0830887,0.0223309,0.105506,0.996296,0.0830211,0.0224154,0.105343,0.9963,0.0829516,0.0225023,0.105178,0.996303,0.0828807,0.0225909,0.105007,0.996307,0.0828088,0.0226808,0.104837,0.996311,0.0827366,0.0227711,0.104664,0.996315,0.0826644,0.0228613,0.104497,0.996319,0.0825929,0.0229507,0.104326,0.996323,0.0825225,0.0230386,0.104163,0.996327,0.0824539,0.0231244,0.104003,0.99633,0.0823875,0.0232074,0.103845,0.996334,0.082324,0.0232868,0.1037,0.996337,0.0822638,0.0233621,0.103562,0.99634,0.0822076,0.0234324,0.103428,0.996342,0.0821558,0.0234971,0.103313,0.996345,0.0821091,0.0235555,0.103202,0.996347,0.082068,0.0236068,0.103107,0.996349,0.0820331,0.0236504,0.103031,0.99635,0.0820051,0.0236855,0.102966,0.996352,0.0819843,0.0237114,0.102915,0.996352,0.0819714,0.0237275,0.102887,0.996352,0.081967,0.023733,0.102878])})])}),

                                    new Viewpoint({
                                      DEF : new SFString("Cam4"),
                                      position : new SFVec3f([-0.304201,22.1355,18.4605]),
                                      orientation : new SFRotation([0.996137,0.0369663,0.0796537,0.0516301])})])})])}),

                            new Transform({
                              DEF : new SFString("C5_1"),
                              children : new MFNode([
                                new Transform({
                                  children : new MFNode([
                                    new Group({
                                      children : new MFNode([
                                        new Group({
                                          DEF : new SFString("Cam5_anim"),
                                          children : new MFNode([
                                            new TimeSensor({
                                              DEF : new SFString("CamTime5"),
                                              cycleInterval : new SFTime(30),
                                              stopTime : new SFTime(1)})])}),

                                        new PositionInterpolator({
                                          DEF : new SFString("Cam5PositionInterp"),
                                          key : new MFFloat([0,0.00333333,0.00666667,0.01,0.0133333,0.0166667,0.02,0.0233333,0.0266667,0.03,0.0333333,0.0366667,0.04,0.0433333,0.0466667,0.05,0.0533333,0.0566667,0.06,0.0633333,0.0666667,0.07,0.0733333,0.0766667,0.08,0.0833333,0.0866667,0.09,0.0933333,0.0966666,0.1,0.103333,0.106667,0.11,0.113333,0.116667,0.12,0.123333,0.126667,0.13,0.133333,0.136667,0.14,0.143333,0.146667,0.15,0.153333,0.156667,0.16,0.163333,0.166667,0.17,0.173333,0.176667,0.18,0.183333,0.186667,0.19,0.193333,0.196667,0.2,0.203333,0.206667,0.21,0.213333,0.216667,0.22,0.223333,0.226667,0.23,0.233333,0.236667,0.24,0.243333,0.246667,0.25,0.253333,0.256667,0.26,0.263333,0.266667,0.27,0.273333,0.276667,0.28,0.283333,0.286667,0.29,0.293333,0.296667,0.3,0.303333,0.306667,0.31,0.313333,0.316667,0.32,0.323333,0.326667,0.33,0.333333,0.336667,0.34,0.343333,0.346667,0.35,0.353333,0.356667,0.36,0.363333,0.366667,0.37,0.373333,0.376667,0.38,0.383333,0.386667,0.39,0.393333,0.396667,0.4,0.403333,0.406667,0.41,0.413333,0.416667,0.42,0.423333,0.426666,0.43,0.433333,0.436666,0.44,0.443333,0.446666,0.45,0.453333,0.456666,0.46,0.463333,0.466666,0.47,0.473333,0.476666,0.48,0.483333,0.486666,0.49,0.493333,0.496666,0.5,0.503333,0.506666,0.51,0.513333,0.516666,0.52,0.523333,0.526666,0.53,0.533333,0.536666,0.54,0.543333,0.546666,0.55,0.553333,0.556666,0.56,0.563333,0.566666,0.57,0.573333,0.576666,0.58,0.583333,0.586666,0.59,0.593333,0.596666,0.6,0.603333,0.606666,0.61,0.613333,0.616666,0.62,0.623333,0.626666,0.63,0.633333,0.636666,0.64,0.643333,0.646666,0.65,0.653333,0.656666,0.66,0.663333,0.666666,0.67,0.673333,0.676666,0.68,0.683333,0.686666,0.69,0.693333,0.696666,0.7,0.703333,0.706666,0.71,0.713333,0.716666,0.72,0.723333,0.726666,0.73,0.733333,0.736666,0.74,0.743333,0.746666,0.75,0.753333,0.756667,0.76,0.763333,0.766667,0.77,0.773333,0.776667,0.78,0.783333,0.786667,0.79,0.793333,0.796667,0.8,0.803333,0.806667,0.81,0.813333,0.816667,0.82,0.823333,0.826667,0.83,0.833333,0.836667,0.84,0.843333,0.846667,0.85,0.853333,0.856667,0.86,0.863333,0.866667,0.87,0.873333,0.876667,0.88,0.883333,0.886667,0.89,0.893333,0.896667,0.9,0.903333,0.906667,0.91,0.913333,0.916667,0.92,0.923333,0.926666,0.93,0.933333,0.936666,0.94,0.943333,0.946666,0.95,0.953333,0.956666,0.96,0.963333,0.966666,0.97,0.973333,0.976666,0.98,0.983333,0.986666,0.99,0.993333,0.996666,1]),
                                          keyValue : new MFVec3f([-12.9732,6.26436,54.9865,-12.9753,6.26375,54.9866,-12.9813,6.26196,54.9869,-12.9912,6.25903,54.9873,-13.0047,6.25501,54.9879,-13.0217,6.24995,54.9887,-13.0421,6.24391,54.9896,-13.0656,6.23693,54.9906,-13.0922,6.22905,54.9918,-13.1215,6.22034,54.9931,-13.1535,6.21084,54.9945,-13.188,6.2006,54.996,-13.2249,6.18967,54.9977,-13.2639,6.17809,54.9994,-13.3049,6.16592,55.0012,-13.3477,6.15321,55.0031,-13.3922,6.14,55.0051,-13.4382,6.12635,55.0071,-13.4855,6.1123,55.0093,-13.534,6.09791,55.0114,-13.5835,6.08322,55.0136,-13.6339,6.06829,55.0158,-13.6849,6.05315,55.0181,-13.7363,6.03787,55.0204,-13.7882,6.02249,55.0227,-13.8402,6.00706,55.025,-13.8921,5.99163,55.0273,-13.944,5.97625,55.0296,-13.9955,5.96097,55.0319,-14.0464,5.94584,55.0342,-14.0968,5.9309,55.0364,-14.1463,5.91621,55.0386,-14.1948,5.90182,55.0407,-14.2421,5.88778,55.0428,-14.2881,5.87412,55.0449,-14.3326,5.86092,55.0469,-14.3754,5.84821,55.0488,-14.4164,5.83604,55.0506,-14.4554,5.82446,55.0523,-14.4923,5.81353,55.054,-14.5268,5.80328,55.0555,-14.5588,5.79378,55.0569,-14.5882,5.78507,55.0582,-14.6147,5.7772,55.0594,-14.6382,5.77022,55.0604,-14.6586,5.76417,55.0613,-14.6756,5.75912,55.0621,-14.6891,5.7551,55.0627,-14.699,5.75217,55.0631,-14.7051,5.75037,55.0634,-14.7071,5.74976,55.0635,-14.705,5.75039,55.0634,-14.6986,5.7523,55.0631,-14.6876,5.75555,55.0626,-14.672,5.76017,55.0619,-14.6516,5.76623,55.061,-14.6262,5.77377,55.0599,-14.5956,5.78285,55.0585,-14.5597,5.7935,55.057,-14.5184,5.80579,55.0551,-14.4713,5.81975,55.053,-14.4184,5.83544,55.0507,-14.3596,5.85291,55.0481,-14.2945,5.87221,55.0452,-14.2232,5.89339,55.042,-14.1453,5.91649,55.0386,-14.0608,5.94157,55.0348,-13.9695,5.96868,55.0307,-13.8712,5.99786,55.0264,-13.7657,6.02916,55.0217,-13.6529,6.06264,55.0167,-13.5326,6.09834,55.0113,-13.4047,6.13631,55.0057,-13.2689,6.17661,54.9996,-13.1251,6.21927,54.9932,-12.9732,6.26436,54.9865,-12.8156,6.31113,54.9795,-12.6549,6.35882,54.9724,-12.4912,6.40741,54.9651,-12.3245,6.45689,54.9577,-12.1548,6.50725,54.9502,-11.9822,6.55847,54.9425,-11.8068,6.61054,54.9347,-11.6285,6.66345,54.9268,-11.4474,6.71719,54.9187,-11.2636,6.77175,54.9106,-11.077,6.82711,54.9023,-10.8878,6.88326,54.8939,-10.696,6.94018,54.8854,-10.5016,6.99787,54.8767,-10.3047,7.05632,54.868,-10.1053,7.11551,54.8591,-9.9034,7.17542,54.8502,-9.69911,7.23605,54.8411,-9.49244,7.29739,54.8319,-9.28344,7.35942,54.8226,-9.07215,7.42212,54.8133,-8.85862,7.4855,54.8038,-8.64288,7.54952,54.7942,-8.42498,7.61419,54.7845,-8.20495,7.67949,54.7748,-7.98284,7.74541,54.7649,-7.7587,7.81193,54.7549,-7.53255,7.87905,54.7449,-7.30445,7.94674,54.7348,-7.07444,8.01501,54.7246,-6.84255,8.08383,54.7143,-6.60884,8.15319,54.7039,-6.37333,8.22309,54.6934,-6.13608,8.2935,54.6829,-5.89712,8.36442,54.6723,-5.65649,8.43583,54.6616,-5.41424,8.50773,54.6508,-5.17041,8.58009,54.64,-4.92505,8.65291,54.6291,-4.67818,8.72618,54.6181,-4.42985,8.79988,54.6071,-4.18012,8.87399,54.596,-3.92901,8.94852,54.5849,-3.67656,9.02344,54.5737,-3.42283,9.09874,54.5624,-3.16785,9.17442,54.5511,-2.91166,9.25045,54.5397,-2.6543,9.32683,54.5283,-2.39583,9.40354,54.5168,-2.13627,9.48057,54.5053,-1.87567,9.55791,54.4937,-1.61407,9.63555,54.4821,-1.35151,9.71347,54.4704,-1.08804,9.79167,54.4587,-0.823698,9.87012,54.447,-0.558521,9.94882,54.4352,-0.292554,10.0278,54.4234,-0.0258372,10.1069,54.4115,0.241587,10.1863,54.3997,0.509678,10.2658,54.3878,0.778393,10.3456,54.3758,1.04769,10.4255,54.3639,1.31753,10.5056,54.3519,1.58786,10.5858,54.3399,1.85866,10.6662,54.3279,2.12987,10.7467,54.3158,2.40146,10.8273,54.3038,2.67337,10.908,54.2917,2.94559,10.9888,54.2796,3.21804,11.0696,54.2675,3.49071,11.1506,54.2554,3.76355,11.2315,54.2433,4.0365,11.3125,54.2312,4.30955,11.3936,54.219,4.58263,11.4746,54.2069,4.85571,11.5557,54.1948,5.12876,11.6367,54.1827,5.40172,11.7177,54.1705,5.67455,11.7987,54.1584,5.94722,11.8796,54.1463,6.21968,11.9605,54.1342,6.49189,12.0413,54.1221,6.76381,12.122,54.11,7.03539,12.2026,54.098,7.3066,12.2831,54.0859,7.5774,12.3634,54.0739,7.84773,12.4437,54.0619,8.11757,12.5237,54.0499,8.38687,12.6037,54.038,8.65558,12.6834,54.026,8.92367,12.763,54.0141,9.1911,12.8423,54.0023,9.45781,12.9215,53.9904,9.72378,13.0004,53.9786,9.98896,13.0791,53.9668,10.2533,13.1576,53.9551,10.5168,13.2358,53.9434,10.7793,13.3137,53.9317,11.0409,13.3913,53.9201,11.3015,13.4687,53.9085,11.5611,13.5457,53.897,11.8196,13.6224,53.8855,12.0769,13.6988,53.8741,12.3331,13.7748,53.8627,12.5881,13.8505,53.8514,12.8418,13.9258,53.8401,13.0943,14.0007,53.8289,13.3454,14.0753,53.8178,13.5951,14.1494,53.8067,13.8434,14.2231,53.7957,14.0903,14.2963,53.7847,14.3357,14.3692,53.7738,14.5795,14.4415,53.763,14.8218,14.5134,53.7522,15.0624,14.5848,53.7415,15.3013,14.6558,53.7309,15.5386,14.7262,53.7204,15.7741,14.7961,53.7099,16.0078,14.8654,53.6995,16.2397,14.9342,53.6892,16.4697,15.0025,53.679,16.6978,15.0702,53.6689,16.924,15.1373,53.6589,17.1481,15.2038,53.6489,17.3702,15.2698,53.639,17.5902,15.3351,53.6293,17.8081,15.3997,53.6196,18.0239,15.4638,53.61,18.2374,15.5271,53.6005,18.4487,15.5898,53.5911,18.6577,15.6519,53.5819,18.8644,15.7132,53.5727,19.0687,15.7738,53.5636,19.2706,15.8337,53.5547,19.47,15.8929,53.5458,19.6669,15.9514,53.5371,19.8613,16.0091,53.5284,20.0531,16.066,53.5199,20.2423,16.1221,53.5115,20.4288,16.1775,53.5032,20.6127,16.2321,53.4951,20.7937,16.2858,53.487,20.972,16.3387,53.4791,21.1475,16.3908,53.4713,21.3201,16.442,53.4636,21.4897,16.4924,53.4561,21.6565,16.5418,53.4487,21.8202,16.5904,53.4414,21.9809,16.6381,53.4343,22.1385,16.6849,53.4273,22.2904,16.73,53.4206,22.4342,16.7727,53.4142,22.57,16.8129,53.4081,22.6979,16.8509,53.4025,22.8182,16.8866,53.3971,22.931,16.9201,53.3921,23.0365,16.9514,53.3874,23.1348,16.9806,53.3831,23.2261,17.0077,53.379,23.3106,17.0328,53.3752,23.3885,17.0559,53.3718,23.4598,17.077,53.3686,23.5249,17.0963,53.3657,23.5837,17.1138,53.3631,23.6366,17.1295,53.3608,23.6837,17.1435,53.3587,23.725,17.1558,53.3568,23.7609,17.1664,53.3553,23.7915,17.1755,53.3539,23.8169,17.183,53.3528,23.8373,17.1891,53.3519,23.8529,17.1937,53.3512,23.8639,17.197,53.3507,23.8703,17.1989,53.3504,23.8724,17.1995,53.3503,23.8704,17.1989,53.3504,23.8643,17.1971,53.3507,23.8544,17.1942,53.3511,23.8409,17.1901,53.3517,23.8239,17.1851,53.3525,23.8035,17.179,53.3534,23.78,17.1721,53.3544,23.7535,17.1642,53.3556,23.7241,17.1555,53.3569,23.6921,17.146,53.3583,23.6576,17.1357,53.3598,23.6207,17.1248,53.3615,23.5817,17.1132,53.3632,23.5407,17.1011,53.365,23.4979,17.0883,53.3669,23.4534,17.0751,53.3689,23.4074,17.0615,53.371,23.3601,17.0474,53.3731,23.3116,17.033,53.3752,23.2621,17.0184,53.3774,23.2118,17.0034,53.3796,23.1608,16.9883,53.3819,23.1093,16.973,53.3842,23.0574,16.9576,53.3865,23.0055,16.9422,53.3888,22.9535,16.9268,53.3911,22.9016,16.9114,53.3934,22.8502,16.8961,53.3957,22.7992,16.881,53.398,22.7488,16.866,53.4002,22.6993,16.8514,53.4024,22.6509,16.837,53.4045,22.6035,16.8229,53.4067,22.5575,16.8093,53.4087,22.513,16.7961,53.4107,22.4702,16.7833,53.4126,22.4292,16.7712,53.4144,22.3902,16.7596,53.4161,22.3533,16.7487,53.4178,22.3188,16.7384,53.4193,22.2868,16.7289,53.4207,22.2575,16.7202,53.422,22.2309,16.7123,53.4232,22.2074,16.7054,53.4242,22.1871,16.6993,53.4251,22.17,16.6943,53.4259,22.1565,16.6902,53.4265,22.1466,16.6873,53.4269,22.1406,16.6855,53.4272,22.1385,16.6849,53.4273])}),

                                        new OrientationInterpolator({
                                          DEF : new SFString("Cam5OrientationInterp"),
                                          key : new MFFloat([0,0.00333333,0.00666667,0.01,0.0133333,0.0166667,0.02,0.0233333,0.0266667,0.03,0.0333333,0.0366667,0.04,0.0433333,0.0466667,0.05,0.0533333,0.0566667,0.06,0.0633333,0.0666667,0.07,0.0733333,0.0766667,0.08,0.0833333,0.0866667,0.09,0.0933333,0.0966666,0.1,0.103333,0.106667,0.11,0.113333,0.116667,0.12,0.123333,0.126667,0.13,0.133333,0.136667,0.14,0.143333,0.146667,0.15,0.153333,0.156667,0.16,0.163333,0.166667,0.17,0.173333,0.176667,0.18,0.183333,0.186667,0.19,0.193333,0.196667,0.2,0.203333,0.206667,0.21,0.213333,0.216667,0.22,0.223333,0.226667,0.23,0.233333,0.236667,0.24,0.243333,0.246667,0.25,0.253333,0.256667,0.26,0.263333,0.266667,0.27,0.273333,0.276667,0.28,0.283333,0.286667,0.29,0.293333,0.296667,0.3,0.303333,0.306667,0.31,0.313333,0.316667,0.32,0.323333,0.326667,0.33,0.333333,0.336667,0.34,0.343333,0.346667,0.35,0.353333,0.356667,0.36,0.363333,0.366667,0.37,0.373333,0.376667,0.38,0.383333,0.386667,0.39,0.393333,0.396667,0.4,0.403333,0.406667,0.41,0.413333,0.416667,0.42,0.423333,0.426666,0.43,0.433333,0.436666,0.44,0.443333,0.446666,0.45,0.453333,0.456666,0.46,0.463333,0.466666,0.47,0.473333,0.476666,0.48,0.483333,0.486666,0.49,0.493333,0.496666,0.5,0.503333,0.506666,0.51,0.513333,0.516666,0.52,0.523333,0.526666,0.53,0.533333,0.536666,0.54,0.543333,0.546666,0.55,0.553333,0.556666,0.56,0.563333,0.566666,0.57,0.573333,0.576666,0.58,0.583333,0.586666,0.59,0.593333,0.596666,0.6,0.603333,0.606666,0.61,0.613333,0.616666,0.62,0.623333,0.626666,0.63,0.633333,0.636666,0.64,0.643333,0.646666,0.65,0.653333,0.656666,0.66,0.663333,0.666666,0.67,0.673333,0.676666,0.68,0.683333,0.686666,0.69,0.693333,0.696666,0.7,0.703333,0.706666,0.71,0.713333,0.716666,0.72,0.723333,0.726666,0.73,0.733333,0.736666,0.74,0.743333,0.746666,0.75,0.753333,0.756667,0.76,0.763333,0.766667,0.77,0.773333,0.776667,0.78,0.783333,0.786667,0.79,0.793333,0.796667,0.8,0.803333,0.806667,0.81,0.813333,0.816667,0.82,0.823333,0.826667,0.83,0.833333,0.836667,0.84,0.843333,0.846667,0.85,0.853333,0.856667,0.86,0.863333,0.866667,0.87,0.873333,0.876667,0.88,0.883333,0.886667,0.89,0.893333,0.896667,0.9,0.903333,0.906667,0.91,0.913333,0.916667,0.92,0.923333,0.926666,0.93,0.933333,0.936666,0.94,0.943333,0.946666,0.95,0.953333,0.956666,0.96,0.963333,0.966666,0.97,0.973333,0.976666,0.98,0.983333,0.986666,0.99,0.993333,0.996666,1]),
                                          keyValue : new MFRotation([0.3481,-0.937114,0.0253687,0.240974,0.348076,-0.937124,0.0253462,0.241029,0.348005,-0.937152,0.02528,0.241189,0.34789,-0.937197,0.0251721,0.241452,0.347732,-0.93726,0.0250246,0.241812,0.347535,-0.937338,0.0248395,0.242268,0.347299,-0.937431,0.0246193,0.242811,0.347028,-0.937538,0.024366,0.243438,0.346725,-0.937658,0.024082,0.244145,0.346391,-0.937789,0.0237696,0.244927,0.346029,-0.937931,0.0234311,0.24578,0.345641,-0.938083,0.0230688,0.2467,0.34523,-0.938244,0.022685,0.247683,0.344799,-0.938412,0.022282,0.248723,0.344349,-0.938587,0.0218619,0.249816,0.343883,-0.938768,0.0214269,0.250959,0.343403,-0.938954,0.0209791,0.252146,0.342912,-0.939143,0.0205207,0.253371,0.342411,-0.939336,0.0200535,0.254634,0.341902,-0.939532,0.0195796,0.25593,0.341389,-0.939728,0.0191008,0.25725,0.340872,-0.939925,0.018619,0.258593,0.340353,-0.940123,0.0181358,0.259954,0.339834,-0.94032,0.0176529,0.261327,0.339318,-0.940515,0.017172,0.262712,0.338805,-0.940709,0.0166946,0.2641,0.338297,-0.9409,0.0162221,0.265488,0.337796,-0.941087,0.015756,0.266871,0.337302,-0.941272,0.0152976,0.268246,0.336819,-0.941452,0.0148482,0.269608,0.336346,-0.941628,0.0144091,0.270952,0.335886,-0.941799,0.0139815,0.272274,0.335439,-0.941964,0.0135665,0.27357,0.335006,-0.942124,0.0131651,0.274833,0.33459,-0.942277,0.0127786,0.276063,0.33419,-0.942424,0.0124079,0.277252,0.333809,-0.942564,0.012054,0.278397,0.333446,-0.942696,0.011718,0.279493,0.333104,-0.942821,0.0114007,0.280535,0.332783,-0.942938,0.0111032,0.28152,0.332484,-0.943047,0.0108263,0.282442,0.332209,-0.943147,0.0105711,0.283298,0.331958,-0.943237,0.0103385,0.284083,0.331732,-0.943319,0.0101294,0.284792,0.331533,-0.943391,0.00994475,0.28542,0.331361,-0.943453,0.00978559,0.285964,0.331218,-0.943505,0.00965291,0.28642,0.331104,-0.943546,0.00954776,0.286781,0.331021,-0.943576,0.00947122,0.287047,0.330971,-0.943594,0.00942441,0.287208,0.330954,-0.9436,0.00940854,0.287262,0.330971,-0.943594,0.00942484,0.287207,0.331025,-0.943574,0.00947465,0.287033,0.331116,-0.943542,0.00955939,0.286741,0.331247,-0.943494,0.00968053,0.286326,0.331419,-0.943432,0.00983972,0.285779,0.331634,-0.943355,0.0100387,0.2851,0.331894,-0.943261,0.0102793,0.284283,0.332201,-0.94315,0.0105636,0.283323,0.332557,-0.94302,0.0108938,0.282216,0.332966,-0.942871,0.0112723,0.280959,0.333429,-0.942703,0.0117016,0.279546,0.33395,-0.942512,0.0121847,0.277973,0.334532,-0.942299,0.0127248,0.276235,0.335179,-0.94206,0.0133251,0.274327,0.335894,-0.941796,0.0139896,0.272249,0.336683,-0.941503,0.0147224,0.269992,0.33755,-0.941179,0.0155282,0.267553,0.338501,-0.940823,0.0164121,0.264928,0.339541,-0.940431,0.0173799,0.262111,0.340677,-0.94,0.018438,0.259101,0.341918,-0.939526,0.0195936,0.255889,0.34327,-0.939005,0.0208547,0.252476,0.344744,-0.938433,0.0222305,0.248856,0.34635,-0.937805,0.0237313,0.245021,0.3481,-0.937114,0.0253687,0.240974,0.34904,-0.93674,0.0262484,0.238853,0.350033,-0.936343,0.0271787,0.236652,0.351081,-0.935922,0.0281614,0.234369,0.352187,-0.935474,0.0291987,0.232008,0.353352,-0.935,0.0302929,0.229566,0.354579,-0.934497,0.0314462,0.22705,0.355872,-0.933964,0.0326614,0.224457,0.357231,-0.933399,0.0339413,0.221792,0.358662,-0.9328,0.0352889,0.219051,0.360167,-0.932165,0.0367077,0.216239,0.361749,-0.931493,0.0382013,0.213358,0.363413,-0.930779,0.0397736,0.210405,0.365162,-0.930022,0.0414289,0.207384,0.367003,-0.929218,0.0431719,0.204297,0.368938,-0.928364,0.0450077,0.201143,0.370975,-0.927456,0.0469418,0.197924,0.373118,-0.92649,0.0489802,0.194643,0.375375,-0.925462,0.0511295,0.1913,0.377752,-0.924366,0.053397,0.187893,0.380257,-0.923197,0.0557907,0.18443,0.382898,-0.921948,0.058319,0.180909,0.385685,-0.920612,0.0609918,0.177333,0.388628,-0.919182,0.0638193,0.173699,0.391737,-0.917648,0.0668133,0.170014,0.395025,-0.916001,0.0699867,0.166273,0.398505,-0.914228,0.0733535,0.162485,0.402192,-0.912318,0.0769296,0.158647,0.406103,-0.910254,0.0807327,0.15476,0.410254,-0.908022,0.0847822,0.15083,0.414667,-0.905601,0.0891002,0.146854,0.419364,-0.902968,0.0937111,0.142837,0.42437,-0.9001,0.0986427,0.138779,0.429712,-0.896966,0.103926,0.134685,0.435421,-0.893531,0.109597,0.130551,0.441532,-0.889755,0.115694,0.126389,0.448085,-0.885591,0.122264,0.122191,0.455122,-0.880983,0.129358,0.117969,0.462693,-0.875863,0.137036,0.113719,0.470855,-0.870152,0.145366,0.109447,0.479668,-0.863754,0.154426,0.105159,0.489203,-0.856553,0.164306,0.100857,0.49954,-0.848408,0.17511,0.0965459,0.510765,-0.839145,0.186961,0.09223,0.522976,-0.828552,0.199996,0.0879167,0.536279,-0.816362,0.214379,0.0836149,0.550789,-0.802244,0.230296,0.0793325,0.566623,-0.785782,0.247961,0.0750791,0.583897,-0.76645,0.267616,0.0708701,0.602711,-0.743581,0.28953,0.0667174,0.623126,-0.716327,0.31399,0.0626435,0.645129,-0.683618,0.341284,0.0586731,0.66857,-0.644112,0.371665,0.0548372,0.69307,-0.596157,0.40528,0.0511755,0.717881,-0.537802,0.442058,0.047733,0.74171,-0.466898,0.481532,0.0445711,0.762521,-0.381381,0.522599,0.0417652,0.777434,-0.279857,0.563273,0.0393974,0.782889,-0.162489,0.600569,0.0375633,0.775304,-0.03198,0.630778,0.0363438,0.752248,0.105972,0.650302,0.0358152,0.713634,0.243449,0.656855,0.036021,0.662114,0.37234,0.65036,0.0369554,0.602251,0.486569,0.632885,0.0385655,0.539009,0.583228,0.607713,0.0407773,0.47649,0.662285,0.578218,0.043499,0.417415,0.725531,0.547147,0.0466517,0.363216,0.775509,0.516392,0.050159,0.314389,0.814806,0.487084,0.0539429,0.270855,0.845708,0.459799,0.0579617,0.23224,0.87009,0.43475,0.0621697,0.198042,0.889431,0.411937,0.0665241,0.167737,0.904871,0.391246,0.0710046,0.140827,0.917281,0.37251,0.0755888,0.116863,0.927325,0.355543,0.080256,0.0954492,0.93551,0.340162,0.0849926,0.076246,0.942223,0.326193,0.0897849,0.0589613,0.947763,0.313479,0.0946296,0.0433463,0.95236,0.301879,0.0995119,0.0291894,0.956196,0.29127,0.104424,0.01631,0.959411,0.281541,0.109367,0.00455404,0.962117,0.272598,0.114332,-0.00621014,0.964405,0.264355,0.119312,-0.0160957,0.966346,0.256741,0.124307,-0.0251999,0.967998,0.24969,0.129309,-0.033607,0.969407,0.243147,0.134318,-0.0413899,0.970612,0.237062,0.139333,-0.0486121,0.971645,0.231392,0.144346,-0.055329,0.972532,0.226097,0.149358,-0.0615892,0.973294,0.221145,0.154369,-0.0674355,0.97395,0.216504,0.159372,-0.0729055,0.974514,0.212149,0.164366,-0.0780326,0.975,0.208054,0.16935,-0.0828464,0.975417,0.204199,0.174324,-0.0873731,0.975777,0.200564,0.179283,-0.0916365,0.976085,0.197132,0.184228,-0.0956574,0.976349,0.193888,0.189155,-0.0994548,0.976574,0.190818,0.194065,-0.103046,0.976766,0.187909,0.198952,-0.106446,0.976928,0.185149,0.203821,-0.109668,0.977065,0.182528,0.208667,-0.112726,0.977179,0.180037,0.213488,-0.115631,0.977274,0.177666,0.218283,-0.118393,0.977351,0.175409,0.223051,-0.121021,0.977413,0.173258,0.227791,-0.123525,0.977461,0.171205,0.2325,-0.125912,0.977498,0.169246,0.237181,-0.128189,0.977524,0.167375,0.241827,-0.130363,0.977541,0.165586,0.24644,-0.13244,0.977551,0.163874,0.251021,-0.134427,0.977552,0.162236,0.255563,-0.136327,0.977548,0.160667,0.260069,-0.138146,0.977539,0.159163,0.264537,-0.139888,0.977525,0.157721,0.268964,-0.141558,0.977507,0.156339,0.27335,-0.143159,0.977485,0.155011,0.277695,-0.144695,0.97746,0.153737,0.281996,-0.146169,0.977432,0.152514,0.286252,-0.147584,0.977403,0.151338,0.290463,-0.148943,0.977371,0.150208,0.294627,-0.150248,0.977337,0.149121,0.298743,-0.151503,0.977303,0.148076,0.302809,-0.152709,0.977267,0.147071,0.306825,-0.153868,0.97723,0.146104,0.31079,-0.154984,0.977192,0.145173,0.314701,-0.156056,0.977154,0.144277,0.318557,-0.157089,0.977116,0.143415,0.322361,-0.158082,0.977077,0.142585,0.326107,-0.159037,0.977038,0.141786,0.329796,-0.159957,0.977,0.141016,0.333426,-0.160842,0.976961,0.140275,0.336997,-0.161694,0.976923,0.139561,0.340507,-0.162513,0.976885,0.138874,0.343954,-0.163302,0.976847,0.138213,0.347337,-0.16406,0.97681,0.137577,0.350658,-0.16479,0.976773,0.136964,0.353912,-0.165492,0.976737,0.136375,0.3571,-0.166167,0.976701,0.135808,0.36022,-0.166816,0.976666,0.135263,0.363271,-0.167439,0.976632,0.134739,0.366253,-0.168038,0.976598,0.134236,0.369162,-0.168613,0.976565,0.133752,0.372,-0.169165,0.976533,0.133288,0.374764,-0.169693,0.976502,0.132843,0.377454,-0.1702,0.976472,0.132417,0.380067,-0.170685,0.976443,0.132008,0.382604,-0.17115,0.976414,0.131617,0.385063,-0.171593,0.976387,0.131243,0.387443,-0.172017,0.97636,0.130886,0.389742,-0.17242,0.976335,0.130546,0.391959,-0.172805,0.97631,0.130222,0.394096,-0.173527,0.976263,0.129613,0.398173,-0.174198,0.976218,0.129047,0.402031,-0.174819,0.976176,0.128523,0.405675,-0.175394,0.976137,0.128037,0.40911,-0.175927,0.9761,0.127587,0.412339,-0.176418,0.976066,0.127172,0.415367,-0.176872,0.976033,0.126789,0.418199,-0.177289,0.976003,0.126437,0.420839,-0.177672,0.975976,0.126113,0.423291,-0.178022,0.97595,0.125817,0.42556,-0.178341,0.975926,0.125547,0.42765,-0.178631,0.975905,0.125301,0.429567,-0.178893,0.975885,0.12508,0.431313,-0.179129,0.975868,0.12488,0.432894,-0.179339,0.975852,0.124703,0.434314,-0.179525,0.975838,0.124545,0.435577,-0.179687,0.975825,0.124408,0.436689,-0.179828,0.975815,0.124289,0.437653,-0.179947,0.975806,0.124188,0.438473,-0.180045,0.975798,0.124105,0.439157,-0.180124,0.975792,0.124038,0.439705,-0.180184,0.975787,0.123987,0.440124,-0.180226,0.975784,0.123951,0.440417,-0.180251,0.975782,0.12393,0.44059,-0.180259,0.975782,0.123924,0.440646,-0.180251,0.975782,0.12393,0.440591,-0.180228,0.975784,0.12395,0.440429,-0.18019,0.975787,0.123982,0.440164,-0.180138,0.975791,0.124026,0.4398,-0.180072,0.975796,0.124082,0.439343,-0.179993,0.975802,0.124149,0.438796,-0.179902,0.975809,0.124226,0.438164,-0.179798,0.975817,0.124314,0.437452,-0.179684,0.975826,0.124411,0.436663,-0.179558,0.975835,0.124517,0.435804,-0.179422,0.975846,0.124632,0.434877,-0.179276,0.975857,0.124756,0.433887,-0.179121,0.975868,0.124887,0.43284,-0.178957,0.975881,0.125026,0.431739,-0.178785,0.975893,0.125171,0.430589,-0.178605,0.975907,0.125323,0.429393,-0.178418,0.975921,0.125481,0.428158,-0.178225,0.975935,0.125645,0.426888,-0.178026,0.97595,0.125814,0.425585,-0.177821,0.975965,0.125987,0.424256,-0.177612,0.97598,0.126164,0.422905,-0.177398,0.975995,0.126344,0.421536,-0.177181,0.976011,0.126528,0.420154,-0.176961,0.976027,0.126714,0.418762,-0.176739,0.976043,0.126901,0.417366,-0.176516,0.976059,0.12709,0.41597,-0.176291,0.976074,0.12728,0.41458,-0.176067,0.97609,0.127469,0.413197,-0.175843,0.976106,0.127658,0.411828,-0.175621,0.976121,0.127846,0.410477,-0.175401,0.976136,0.128032,0.409149,-0.175184,0.976151,0.128215,0.407847,-0.174971,0.976166,0.128395,0.406577,-0.174763,0.97618,0.12857,0.405342,-0.17456,0.976194,0.128742,0.404148,-0.174364,0.976207,0.128907,0.402998,-0.174175,0.97622,0.129067,0.401897,-0.173994,0.976232,0.129219,0.40085,-0.173822,0.976243,0.129364,0.399862,-0.173661,0.976254,0.1295,0.398936,-0.17351,0.976264,0.129627,0.398076,-0.173372,0.976273,0.129744,0.397289,-0.173246,0.976281,0.12985,0.396577,-0.173135,0.976288,0.129944,0.395945,-0.173037,0.976295,0.130026,0.395399,-0.172956,0.9763,0.130095,0.394942,-0.172891,0.976304,0.130149,0.394578,-0.172844,0.976307,0.130189,0.394313,-0.172815,0.976309,0.130214,0.394151,-0.172805,0.97631,0.130222,0.394096])})])}),

                                    new Viewpoint({
                                      DEF : new SFString("Cam5"),
                                      position : new SFVec3f([-12.9732,6.26436,54.9865]),
                                      orientation : new SFRotation([0.3481,-0.937114,0.0253687,0.240974])})])})])}),

                            new Transform({
                              DEF : new SFString("C6_1"),
                              children : new MFNode([
                                new Transform({
                                  children : new MFNode([
                                    new Group({
                                      children : new MFNode([
                                        new Group({
                                          DEF : new SFString("Cam6_anim"),
                                          children : new MFNode([
                                            new TimeSensor({
                                              DEF : new SFString("CamTime6"),
                                              cycleInterval : new SFTime(40),
                                              stopTime : new SFTime(1)})])}),

                                        new PositionInterpolator({
                                          DEF : new SFString("Cam6PositionInterp"),
                                          key : new MFFloat([0,0.0025,0.005,0.0075,0.01,0.0125,0.015,0.0175,0.02,0.0225,0.025,0.0275,0.03,0.0325,0.035,0.0375,0.04,0.0425,0.045,0.0475,0.05,0.0525,0.055,0.0575,0.06,0.0625,0.065,0.0675,0.07,0.0725,0.075,0.0775,0.08,0.0825,0.085,0.0875,0.09,0.0925,0.095,0.0975,0.1,0.1025,0.105,0.1075,0.11,0.1125,0.115,0.1175,0.12,0.1225,0.125,0.1275,0.13,0.1325,0.135,0.1375,0.14,0.1425,0.145,0.1475,0.15,0.1525,0.155,0.1575,0.16,0.1625,0.165,0.1675,0.17,0.1725,0.175,0.1775,0.18,0.1825,0.185,0.1875,0.19,0.1925,0.195,0.1975,0.2,0.2025,0.205,0.2075,0.21,0.2125,0.215,0.2175,0.22,0.2225,0.225,0.2275,0.23,0.2325,0.235,0.2375,0.24,0.2425,0.245,0.2475,0.25,0.2525,0.255,0.2575,0.26,0.2625,0.265,0.2675,0.27,0.2725,0.275,0.2775,0.28,0.2825,0.285,0.2875,0.29,0.2925,0.295,0.2975,0.3,0.3025,0.305,0.3075,0.31,0.3125,0.315,0.3175,0.32,0.3225,0.325,0.3275,0.33,0.3325,0.335,0.3375,0.34,0.3425,0.345,0.3475,0.35,0.3525,0.355,0.3575,0.36,0.3625,0.365,0.3675,0.37,0.3725,0.375,0.3775,0.38,0.3825,0.385,0.3875,0.39,0.3925,0.395,0.3975,0.4,0.4025,0.405,0.4075,0.41,0.4125,0.415,0.4175,0.42,0.4225,0.425,0.4275,0.43,0.4325,0.435,0.4375,0.44,0.4425,0.445,0.4475,0.45,0.4525,0.455,0.4575,0.46,0.4625,0.465,0.4675,0.47,0.4725,0.475,0.4775,0.48,0.4825,0.485,0.4875,0.49,0.4925,0.495,0.4975,0.5,0.5025,0.505,0.5075,0.51,0.5125,0.515,0.5175,0.52,0.5225,0.525,0.5275,0.53,0.5325,0.535,0.5375,0.54,0.5425,0.545,0.5475,0.55,0.5525,0.555,0.5575,0.56,0.5625,0.565,0.5675,0.57,0.5725,0.575,0.5775,0.58,0.5825,0.585,0.5875,0.59,0.5925,0.595,0.5975,0.6,0.6025,0.605,0.6075,0.61,0.6125,0.615,0.6175,0.62,0.6225,0.625,0.6275,0.63,0.6325,0.635,0.6375,0.64,0.6425,0.645,0.6475,0.65,0.6525,0.655,0.6575,0.66,0.6625,0.665,0.6675,0.67,0.6725,0.675,0.6775,0.68,0.6825,0.685,0.6875,0.69,0.6925,0.695,0.6975,0.7,0.7025,0.705,0.7075,0.71,0.712499,0.714999,0.717499,0.719999,0.722499,0.724999,0.727499,0.729999,0.7325,0.735024,0.737547,0.740071,0.742594,0.745118,0.747642,0.750165,0.752689,0.755212,0.757736,0.76026,0.762783,0.765307,0.76783,0.770354,0.772878,0.775401,0.777925,0.780448,0.782972,0.785496,0.788019,0.790543,0.793066,0.79559,0.798114,0.800637,0.803161,0.805684,0.808208,0.810732,0.813255,0.815779,0.818302,0.820826,0.82335,0.825873,0.828397,0.83092,0.833444,0.835968,0.838491,0.841015,0.843538,0.846062,0.848586,0.851109,0.853633,0.856156,0.85868,0.861204,0.863727,0.866251,0.868774,0.871298,0.873822,0.876345,0.878869,0.881392,0.883916,0.88644,0.888963,0.891487,0.89401,0.896534,0.899058,0.901581,0.904105,0.906628,0.909152,0.911676,0.914199,0.916723,0.919246,0.92177,0.924294,0.926817,0.929341,0.931865,0.934388,0.936912,0.939435,0.941959,0.944483,0.947006,0.94953,0.952053,0.954577,0.957101,0.959624,0.962148,0.964671,0.967195,0.969719,0.972242,0.974766,0.977289,0.979813,0.982337,0.98486,0.987384,0.989907,0.992431,0.994955,0.997478,1]),
                                          keyValue : new MFVec3f([18.6206,3.04472,28.0531,18.6226,3.04464,28.0523,18.6284,3.04442,28.0498,18.6378,3.04405,28.0458,18.6507,3.04355,28.0404,18.6668,3.04292,28.0335,18.6861,3.04217,28.0254,18.7083,3.04131,28.016,18.7333,3.04034,28.0054,18.7608,3.03927,27.9938,18.7907,3.03811,27.9811,18.8228,3.03687,27.9675,18.8569,3.03554,27.9531,18.8929,3.03414,27.9378,18.9306,3.03268,27.9219,18.9697,3.03116,27.9053,19.0102,3.02959,27.8882,19.0518,3.02797,27.8706,19.0943,3.02632,27.8526,19.1376,3.02463,27.8343,19.1816,3.02293,27.8157,19.2259,3.02121,27.7969,19.2705,3.01947,27.778,19.3151,3.01774,27.7591,19.3596,3.01601,27.7403,19.4038,3.01429,27.7216,19.4476,3.01259,27.7031,19.4907,3.01092,27.6848,19.5329,3.00928,27.667,19.5742,3.00768,27.6495,19.6142,3.00612,27.6326,19.6529,3.00462,27.6162,19.69,3.00318,27.6005,19.7254,3.0018,27.5855,19.7589,3.0005,27.5713,19.7902,2.99928,27.558,19.8194,2.99815,27.5457,19.846,2.99711,27.5344,19.8701,2.99618,27.5243,19.8913,2.99536,27.5153,19.9096,2.99465,27.5075,19.9247,2.99406,27.5011,19.9364,2.9936,27.4962,19.9447,2.99328,27.4927,19.9492,2.99311,27.4908,19.9499,2.99308,27.4905,19.9465,2.99321,27.4919,19.9388,2.99351,27.4952,19.9268,2.99398,27.5003,19.9101,2.99463,27.5073,19.8887,2.99546,27.5164,19.8623,2.99648,27.5275,19.8308,2.99771,27.5409,19.794,2.99914,27.5565,19.7517,3.00078,27.5744,19.7037,3.00264,27.5947,19.6499,3.00473,27.6175,19.59,3.00706,27.6428,19.524,3.00963,27.6707,19.4515,3.01244,27.7014,19.3725,3.01551,27.7348,19.2868,3.01884,27.7711,19.1941,3.02244,27.8104,19.0943,3.02632,27.8526,18.9873,3.03048,27.8979,18.8727,3.03493,27.9464,18.7506,3.03967,27.9981,18.6206,3.04472,28.0531,18.4861,3.04995,28.11,18.3503,3.05522,28.1675,18.2134,3.06054,28.2254,18.0754,3.0659,28.2839,17.9362,3.07131,28.3428,17.7958,3.07676,28.4022,17.6543,3.08226,28.4621,17.5117,3.0878,28.5224,17.368,3.09338,28.5833,17.2232,3.099,28.6445,17.0773,3.10467,28.7063,16.9304,3.11038,28.7685,16.7824,3.11613,28.8311,16.6333,3.12192,28.8942,16.4832,3.12775,28.9578,16.332,3.13362,29.0217,16.1799,3.13954,29.0861,16.0267,3.14549,29.151,15.8725,3.15147,29.2162,15.7174,3.1575,29.2819,15.5613,3.16357,29.348,15.4042,3.16967,29.4144,15.2462,3.17581,29.4813,15.0872,3.18198,29.5486,14.9273,3.18819,29.6163,14.7665,3.19444,29.6844,14.6048,3.20072,29.7528,14.4422,3.20704,29.8216,14.2787,3.21339,29.8908,14.1144,3.21977,29.9604,13.9492,3.22619,30.0303,13.7831,3.23264,30.1006,13.6162,3.23913,30.1712,13.4484,3.24564,30.2422,13.2799,3.25219,30.3136,13.1105,3.25877,30.3853,12.9404,3.26538,30.4573,12.7695,3.27202,30.5296,12.5978,3.27869,30.6023,12.4253,3.28539,30.6753,12.2521,3.29212,30.7486,12.0782,3.29887,30.8222,11.9035,3.30566,30.8961,11.7281,3.31247,30.9704,11.5521,3.31931,31.0449,11.3753,3.32618,31.1197,11.1978,3.33307,31.1948,11.0197,3.33999,31.2702,10.8409,3.34694,31.3459,10.6615,3.35391,31.4218,10.4814,3.3609,31.498,10.3008,3.36792,31.5745,10.1195,3.37497,31.6512,9.93755,3.38203,31.7282,9.75506,3.38912,31.8055,9.57199,3.39623,31.883,9.38835,3.40337,31.9607,9.20415,3.41052,32.0387,9.0194,3.4177,32.1168,8.83412,3.4249,32.1953,8.64832,3.43212,32.2739,8.46201,3.43935,32.3528,8.27519,3.44661,32.4318,8.08789,3.45389,32.5111,7.9001,3.46118,32.5906,7.71185,3.46849,32.6703,7.52315,3.47583,32.7501,7.33399,3.48317,32.8302,7.14441,3.49054,32.9104,6.9544,3.49792,32.9909,6.76398,3.50532,33.0715,6.57316,3.51273,33.1522,6.38195,3.52016,33.2332,6.19037,3.5276,33.3142,5.99841,3.53506,33.3955,5.80611,3.54253,33.4769,5.61345,3.55001,33.5584,5.42047,3.55751,33.6401,5.22717,3.56502,33.7219,5.03355,3.57254,33.8039,4.83964,3.58007,33.8859,4.64543,3.58762,33.9681,4.45095,3.59517,34.0505,4.25621,3.60274,34.1329,4.06121,3.61031,34.2154,3.86597,3.6179,34.2981,3.67049,3.62549,34.3808,3.4748,3.63309,34.4636,3.2789,3.6407,34.5465,3.0828,3.64832,34.6295,2.88651,3.65595,34.7126,2.69004,3.66358,34.7958,2.49342,3.67122,34.879,2.29663,3.67886,34.9623,2.09971,3.68651,35.0456,1.90266,3.69417,35.129,1.70548,3.70183,35.2125,1.5082,3.70949,35.296,1.31082,3.71716,35.3795,1.11336,3.72483,35.4631,0.915819,3.7325,35.5467,0.718216,3.74018,35.6304,0.520561,3.74786,35.714,0.322863,3.75554,35.7977,0.125138,3.76322,35.8814,-0.0726085,3.7709,35.9651,-0.27036,3.77858,36.0488,-0.468109,3.78626,36.1325,-0.66584,3.79395,36.2162,-0.863547,3.80163,36.2998,-1.06122,3.8093,36.3835,-1.25884,3.81698,36.4672,-1.4564,3.82466,36.5508,-1.65389,3.83233,36.6344,-1.8513,3.84,36.7179,-2.04861,3.84766,36.8014,-2.24582,3.85532,36.8849,-2.44291,3.86298,36.9683,-2.63987,3.87063,37.0517,-2.8367,3.87828,37.135,-3.03338,3.88592,37.2182,-3.22989,3.89355,37.3014,-3.42624,3.90118,37.3845,-3.6224,3.9088,37.4675,-3.81836,3.91641,37.5505,-4.01412,3.92402,37.6333,-4.20967,3.93161,37.7161,-4.40498,3.9392,37.7988,-4.60006,3.94678,37.8813,-4.79488,3.95435,37.9638,-4.98944,3.96191,38.0461,-5.18373,3.96945,38.1284,-5.37774,3.97699,38.2105,-5.57145,3.98451,38.2925,-5.76485,3.99203,38.3743,-5.95793,3.99953,38.4561,-6.15069,4.00702,38.5376,-6.34311,4.01449,38.6191,-6.53517,4.02195,38.7004,-6.72686,4.0294,38.7815,-6.91819,4.03683,38.8625,-7.10913,4.04425,38.9433,-7.29968,4.05165,39.024,-7.48982,4.05904,39.1044,-7.67953,4.06641,39.1847,-7.86882,4.07376,39.2649,-8.05766,4.0811,39.3448,-8.24606,4.08842,39.4245,-8.43399,4.09572,39.5041,-8.62144,4.103,39.5834,-8.80842,4.11026,39.6625,-8.99489,4.11751,39.7415,-9.18085,4.12473,39.8202,-9.36629,4.13193,39.8987,-9.5512,4.13912,39.9769,-9.73556,4.14628,40.055,-9.91938,4.15342,40.1328,-10.1026,4.16054,40.2103,-10.2853,4.16763,40.2876,-10.4674,4.17471,40.3647,-10.6489,4.18176,40.4415,-10.8298,4.18879,40.5181,-11.01,4.19579,40.5944,-11.1896,4.20277,40.6704,-11.3686,4.20972,40.7462,-11.547,4.21665,40.8216,-11.7246,4.22355,40.8968,-11.9016,4.23042,40.9717,-12.0779,4.23727,41.0464,-12.2535,4.24409,41.1207,-12.4284,4.25089,41.1947,-12.6025,4.25765,41.2684,-12.776,4.26439,41.3418,-12.9487,4.2711,41.4149,-13.1206,4.27778,41.4877,-13.2918,4.28443,41.5601,-13.4621,4.29105,41.6322,-13.6317,4.29763,41.704,-13.8005,4.30419,41.7755,-13.9685,4.31072,41.8466,-14.1357,4.31721,41.9173,-14.302,4.32367,41.9877,-14.4675,4.3301,42.0578,-14.6321,4.3365,42.1274,-14.7959,4.34286,42.1968,-14.9588,4.34919,42.2657,-15.1207,4.35548,42.3343,-15.2818,4.36174,42.4024,-15.442,4.36796,42.4702,-15.6013,4.37415,42.5376,-15.7596,4.3803,42.6046,-15.917,4.38641,42.6713,-16.0734,4.39249,42.7375,-16.2288,4.39852,42.8032,-16.3833,4.40452,42.8686,-16.5367,4.41049,42.9336,-16.6892,4.41641,42.9981,-16.8407,4.42229,43.0622,-16.9911,4.42814,43.1259,-17.1405,4.43394,43.1891,-17.2888,4.4397,43.2519,-17.4361,4.44542,43.3143,-17.5824,4.45111,43.3761,-17.7275,4.45674,43.4376,-17.8715,4.46234,43.4985,-18.0145,4.46789,43.559,-18.1563,4.4734,43.6191,-18.297,4.47887,43.6786,-18.4366,4.48429,43.7377,-18.575,4.48967,43.7963,-18.7123,4.495,43.8544,-18.8484,4.50029,43.912,-18.9833,4.50553,43.9691,-19.117,4.51072,44.0257,-19.2495,4.51587,44.0818,-19.3808,4.52097,44.1373,-19.5108,4.52602,44.1924,-19.6397,4.53103,44.2469,-19.7672,4.53598,44.3009,-19.8936,4.54089,44.3544,-20.0186,4.54575,44.4073,-20.1424,4.55055,44.4597,-20.2648,4.55531,44.5115,-20.386,4.56002,44.5628,-20.5059,4.56468,44.6135,-20.6244,4.56928,44.6637,-20.7411,4.57381,44.7131,-20.8534,4.57818,44.7606,-20.9614,4.58237,44.8063,-21.065,4.5864,44.8502,-21.1644,4.59026,44.8923,-21.2597,4.59396,44.9326,-21.3508,4.5975,44.9711,-21.4379,4.60088,45.008,-21.521,4.60411,45.0432,-21.6002,4.60719,45.0767,-21.6755,4.61011,45.1086,-21.7471,4.61289,45.1389,-21.8149,4.61553,45.1676,-21.879,4.61802,45.1947,-21.9396,4.62037,45.2204,-21.9966,4.62259,45.2445,-22.0501,4.62467,45.2671,-22.1003,4.62661,45.2884,-22.147,4.62843,45.3082,-22.1906,4.63012,45.3266,-22.2308,4.63169,45.3436,-22.268,4.63313,45.3593,-22.302,4.63445,45.3738,-22.333,4.63566,45.3869,-22.3611,4.63674,45.3988,-22.3862,4.63772,45.4094,-22.4085,4.63859,45.4188,-22.4281,4.63935,45.4271,-22.4449,4.64,45.4342,-22.4591,4.64055,45.4402,-22.4707,4.641,45.4451,-22.4797,4.64135,45.449,-22.4863,4.64161,45.4518,-22.4906,4.64178,45.4536,-22.4925,4.64185,45.4544,-22.4921,4.64184,45.4542,-22.4895,4.64173,45.4531,-22.4848,4.64155,45.4511,-22.478,4.64129,45.4483,-22.4692,4.64095,45.4445,-22.4585,4.64053,45.44,-22.4458,4.64004,45.4346,-22.4314,4.63948,45.4285,-22.4152,4.63885,45.4217,-22.3973,4.63815,45.4141,-22.3777,4.63739,45.4058,-22.3566,4.63657,45.3969,-22.334,4.63569,45.3873,-22.31,4.63476,45.3771,-22.2846,4.63377,45.3664,-22.2578,4.63273,45.3551,-22.2298,4.63165,45.3432,-22.2007,4.63051,45.3309,-22.1704,4.62934,45.318,-22.139,4.62812,45.3048,-22.1067,4.62686,45.2911,-22.0734,4.62557,45.277,-22.0393,4.62424,45.2625,-22.0043,4.62289,45.2477,-21.9686,4.6215,45.2326,-21.9322,4.62009,45.2173,-21.8953,4.61865,45.2016,-21.8577,4.61719,45.1857,-21.8197,4.61571,45.1696,-21.7813,4.61422,45.1533,-21.7425,4.61271,45.1369,-21.7034,4.61119,45.1204,-21.664,4.60967,45.1037,-21.6245,4.60813,45.087,-21.5849,4.60659,45.0702,-21.5453,4.60505,45.0535,-21.5056,4.60351,45.0367,-21.4661,4.60198,45.0199,-21.4267,4.60045,45.0033,-21.3875,4.59892,44.9867,-21.3486,4.59741,44.9702,-21.31,4.59591,44.9539,-21.2718,4.59443,44.9377,-21.2341,4.59297,44.9218,-21.197,4.59152,44.906,-21.1604,4.5901,44.8906,-21.1245,4.58871,44.8754,-21.0893,4.58734,44.8605,-21.0548,4.586,44.8459,-21.0213,4.5847,44.8317,-20.9886,4.58343,44.8179,-20.9569,4.5822,44.8044,-20.9263,4.58101,44.7915,-20.8967,4.57986,44.779,-20.8683,4.57876,44.7669,-20.8412,4.5777,44.7554,-20.8153,4.5767,44.7445,-20.7908,4.57574,44.7341,-20.7677,4.57485,44.7244,-20.7461,4.57401,44.7152,-20.726,4.57323,44.7067,-20.7076,4.57251,44.6989,-20.6908,4.57186,44.6918,-20.6758,4.57128,44.6854,-20.6625,4.57076,44.6798,-20.6511,4.57032,44.675,-20.6417,4.56995,44.671,-20.6342,4.56966,44.6679,-20.6288,4.56945,44.6656,-20.6255,4.56932,44.6642,-20.6244,4.56928,44.6637])}),

                                        new OrientationInterpolator({
                                          DEF : new SFString("Cam6OrientationInterp"),
                                          key : new MFFloat([0,0.0025,0.005,0.0075,0.01,0.0125,0.015,0.0175,0.02,0.0225,0.025,0.0275,0.03,0.0325,0.035,0.0375,0.04,0.0425,0.045,0.0475,0.05,0.0525,0.055,0.0575,0.06,0.0625,0.065,0.0675,0.07,0.0725,0.075,0.0775,0.08,0.0825,0.085,0.0875,0.09,0.0925,0.095,0.0975,0.1,0.1025,0.105,0.1075,0.11,0.1125,0.115,0.1175,0.12,0.1225,0.125,0.1275,0.13,0.1325,0.135,0.1375,0.14,0.1425,0.145,0.1475,0.15,0.1525,0.155,0.1575,0.16,0.1625,0.165,0.1675,0.17,0.1725,0.175,0.1775,0.18,0.1825,0.185,0.1875,0.19,0.1925,0.195,0.1975,0.2,0.2025,0.205,0.2075,0.21,0.2125,0.215,0.2175,0.22,0.2225,0.225,0.2275,0.23,0.2325,0.235,0.2375,0.24,0.2425,0.245,0.2475,0.25,0.2525,0.255,0.2575,0.26,0.2625,0.265,0.2675,0.27,0.2725,0.275,0.2775,0.28,0.2825,0.285,0.2875,0.29,0.2925,0.295,0.2975,0.3,0.3025,0.305,0.3075,0.31,0.3125,0.315,0.3175,0.32,0.3225,0.325,0.3275,0.33,0.3325,0.335,0.3375,0.34,0.3425,0.345,0.3475,0.35,0.3525,0.355,0.3575,0.36,0.3625,0.365,0.3675,0.37,0.3725,0.375,0.3775,0.38,0.3825,0.385,0.3875,0.39,0.3925,0.395,0.3975,0.4,0.4025,0.405,0.4075,0.41,0.4125,0.415,0.4175,0.42,0.4225,0.425,0.4275,0.43,0.4325,0.435,0.4375,0.44,0.4425,0.445,0.4475,0.45,0.4525,0.455,0.4575,0.46,0.4625,0.465,0.4675,0.47,0.4725,0.475,0.4775,0.48,0.4825,0.485,0.4875,0.49,0.4925,0.495,0.4975,0.5,0.5025,0.505,0.5075,0.51,0.5125,0.515,0.5175,0.52,0.5225,0.525,0.5275,0.53,0.5325,0.535,0.5375,0.54,0.5425,0.545,0.5475,0.55,0.5525,0.555,0.5575,0.56,0.5625,0.565,0.5675,0.57,0.5725,0.575,0.5775,0.58,0.5825,0.585,0.5875,0.59,0.5925,0.595,0.5975,0.6,0.6025,0.605,0.6075,0.61,0.6125,0.615,0.6175,0.62,0.6225,0.625,0.6275,0.63,0.6325,0.635,0.6375,0.64,0.6425,0.645,0.6475,0.65,0.6525,0.655,0.6575,0.66,0.6625,0.665,0.6675,0.67,0.6725,0.675,0.6775,0.68,0.6825,0.685,0.6875,0.69,0.6925,0.695,0.6975,0.7,0.7025,0.705,0.7075,0.71,0.712499,0.714999,0.717499,0.719999,0.722499,0.724999,0.727499,0.729999,0.7325,0.735024,0.737547,0.740071,0.742594,0.745118,0.747642,0.750165,0.752689,0.755212,0.757736,0.76026,0.762783,0.765307,0.76783,0.770354,0.772878,0.775401,0.777925,0.780448,0.782972,0.785496,0.788019,0.790543,0.793066,0.79559,0.798114,0.800637,0.803161,0.805684,0.808208,0.810732,0.813255,0.815779,0.818302,0.820826,0.82335,0.825873,0.828397,0.83092,0.833444,0.835968,0.838491,0.841015,0.843538,0.846062,0.848586,0.851109,0.853633,0.856156,0.85868,0.861204,0.863727,0.866251,0.868774,0.871298,0.873822,0.876345,0.878869,0.881392,0.883916,0.88644,0.888963,0.891487,0.89401,0.896534,0.899058,0.901581,0.904105,0.906628,0.909152,0.911676,0.914199,0.916723,0.919246,0.92177,0.924294,0.926817,0.929341,0.931865,0.934388,0.936912,0.939435,0.941959,0.944483,0.947006,0.94953,0.952053,0.954577,0.957101,0.959624,0.962148,0.964671,0.967195,0.969719,0.972242,0.974766,0.977289,0.979813,0.982337,0.98486,0.987384,0.989907,0.992431,0.994955,0.997478,1]),
                                          keyValue : new MFRotation([0.902191,0.431254,-0.00844116,0.41309,0.902139,0.431364,-0.00844876,0.413132,0.901984,0.431686,-0.00847108,0.413254,0.901733,0.43221,-0.00850741,0.413453,0.901389,0.432925,-0.00855702,0.413725,0.900958,0.433821,-0.00861915,0.414066,0.900444,0.434886,-0.00869307,0.414474,0.899851,0.436109,-0.00877801,0.414945,0.899184,0.43748,-0.00887319,0.415474,0.898449,0.438986,-0.00897789,0.41606,0.897649,0.440617,-0.0090913,0.416697,0.89679,0.442361,-0.00921267,0.417383,0.895875,0.444207,-0.00934125,0.418113,0.894911,0.446145,-0.00947628,0.418886,0.893901,0.448162,-0.009617,0.419696,0.892849,0.45025,-0.00976267,0.420541,0.891762,0.452395,-0.00991258,0.421415,0.890644,0.45459,-0.010066,0.422318,0.889499,0.456822,-0.0102222,0.423243,0.888333,0.459082,-0.0103805,0.424188,0.887151,0.46136,-0.0105401,0.425148,0.885956,0.463646,-0.0107006,0.426121,0.884754,0.465931,-0.010861,0.427102,0.883551,0.468206,-0.0110209,0.428087,0.88235,0.470461,-0.0111796,0.429071,0.881157,0.472688,-0.0113364,0.430052,0.879976,0.474879,-0.0114908,0.431025,0.878813,0.477024,-0.0116421,0.431985,0.877673,0.479115,-0.0117898,0.43293,0.87656,0.481145,-0.0119333,0.433854,0.875479,0.483106,-0.0120719,0.434754,0.874435,0.48499,-0.0122053,0.435625,0.873433,0.486789,-0.0123327,0.436462,0.872477,0.488496,-0.0124537,0.437262,0.871574,0.490103,-0.0125677,0.438021,0.870727,0.491604,-0.0126742,0.438733,0.869941,0.49299,-0.0127727,0.439396,0.869221,0.494256,-0.0128626,0.440003,0.868573,0.495393,-0.0129434,0.440552,0.868,0.496394,-0.0130146,0.441037,0.867507,0.497253,-0.0130757,0.441454,0.8671,0.497961,-0.0131261,0.4418,0.866783,0.498511,-0.0131653,0.442069,0.866561,0.498896,-0.0131928,0.442258,0.866439,0.499108,-0.0132078,0.442361,0.866421,0.499139,-0.01321,0.442377,0.866513,0.49898,-0.0131987,0.442299,0.866719,0.498623,-0.0131733,0.442123,0.867044,0.498059,-0.0131331,0.441848,0.867493,0.497278,-0.0130775,0.441467,0.868071,0.49627,-0.0130059,0.440977,0.868782,0.495026,-0.0129174,0.440375,0.869632,0.493534,-0.0128113,0.439656,0.870625,0.491783,-0.0126869,0.438819,0.871767,0.48976,-0.0125433,0.437859,0.873062,0.487452,-0.0123797,0.436772,0.874515,0.484845,-0.012195,0.435557,0.876131,0.481924,-0.0119883,0.434211,0.877914,0.478673,-0.0117586,0.432729,0.87987,0.475075,-0.0115047,0.431112,0.882002,0.471112,-0.0112254,0.429356,0.884315,0.466763,-0.0109195,0.427461,0.886813,0.462007,-0.0105856,0.425423,0.889499,0.456822,-0.0102222,0.423243,0.892378,0.451182,-0.00982777,0.42092,0.895451,0.44506,-0.00940067,0.418453,0.898722,0.438428,-0.00893911,0.415842,0.902191,0.431254,-0.00844116,0.41309,0.903262,0.429009,-0.00828559,0.412244,0.90436,0.426693,-0.00812526,0.411377,0.905484,0.424306,-0.00796017,0.410491,0.906633,0.421847,-0.00779029,0.409588,0.907808,0.419317,-0.00761559,0.408666,0.909007,0.416714,-0.00743606,0.407727,0.910231,0.414037,-0.00725168,0.40677,0.911478,0.411288,-0.00706241,0.405796,0.912749,0.408464,-0.00686823,0.404806,0.914042,0.405565,-0.00666912,0.403799,0.915357,0.402591,-0.00646506,0.402778,0.916694,0.39954,-0.006256,0.401742,0.918052,0.396413,-0.00604194,0.40069,0.919431,0.393209,-0.00582284,0.399625,0.920829,0.389927,-0.00559866,0.398546,0.922246,0.386566,-0.00536939,0.397454,0.923682,0.383125,-0.00513499,0.39635,0.925136,0.379604,-0.00489544,0.395232,0.926607,0.376003,-0.00465071,0.394104,0.928094,0.37232,-0.00440076,0.392964,0.929597,0.368555,-0.00414557,0.391814,0.931114,0.364707,-0.0038851,0.390653,0.932646,0.360775,-0.00361933,0.389483,0.934191,0.356758,-0.00334824,0.388303,0.935748,0.352656,-0.00307178,0.387116,0.937316,0.348469,-0.00278994,0.385919,0.938895,0.344194,-0.00250268,0.384716,0.940484,0.339832,-0.00220998,0.383506,0.942081,0.335381,-0.00191182,0.382288,0.943685,0.330842,-0.00160815,0.381065,0.945296,0.326212,-0.00129897,0.379837,0.946912,0.321492,-0.000984245,0.378605,0.948532,0.316681,-0.000663953,0.377368,0.950155,0.311777,-0.000338074,0.376127,0.95178,0.306781,-0.00000658751,0.374883,0.953406,0.301691,0.000330523,0.373637,0.95503,0.296507,0.000673278,0.372389,0.956653,0.291228,0.00102169,0.371139,0.958272,0.285854,0.00137578,0.369889,0.959887,0.280383,0.00173554,0.368639,0.961495,0.274816,0.002101,0.367389,0.963095,0.269151,0.00247216,0.366141,0.964686,0.263388,0.00284902,0.364895,0.966266,0.257527,0.00323159,0.363649,0.967833,0.251567,0.00361986,0.362409,0.969386,0.245507,0.00401383,0.361169,0.970924,0.239347,0.00441349,0.359937,0.972444,0.233087,0.00481883,0.358708,0.973944,0.226727,0.00522984,0.357485,0.975424,0.220265,0.0056465,0.356268,0.97688,0.213702,0.00606879,0.355056,0.978311,0.207038,0.00649668,0.353855,0.979716,0.200273,0.00693014,0.352659,0.981091,0.193406,0.00736915,0.351474,0.982436,0.186438,0.00781365,0.350297,0.983747,0.179368,0.00826361,0.34913,0.985024,0.172196,0.00871897,0.347974,0.986264,0.164924,0.00917969,0.346829,0.987464,0.15755,0.00964571,0.345696,0.988623,0.150077,0.010117,0.344575,0.989738,0.142503,0.0105934,0.343468,0.990807,0.134829,0.0110749,0.342374,0.991828,0.127057,0.0115614,0.341297,0.992799,0.119187,0.0120528,0.340233,0.993717,0.111219,0.0125491,0.339186,0.99458,0.103154,0.0130501,0.338154,0.995385,0.0949946,0.0135557,0.33714,0.996132,0.0867405,0.0140658,0.336143,0.996816,0.0783933,0.0145803,0.335166,0.997436,0.0699542,0.0150991,0.334207,0.997989,0.0614248,0.0156221,0.333267,0.998474,0.0528066,0.016149,0.332348,0.998888,0.0441011,0.0166798,0.33145,0.999228,0.0353103,0.0172143,0.330573,0.999493,0.0264361,0.0177524,0.329717,0.99968,0.0174804,0.0182938,0.328885,0.999787,0.00844532,0.0188385,0.328077,0.999812,-0.000666835,0.0193861,0.327292,0.999753,-0.00985368,0.0199367,0.326531,0.999607,-0.0191128,0.0204899,0.325794,0.999374,-0.0284415,0.0210456,0.325083,0.99905,-0.0378371,0.0216036,0.324398,0.998635,-0.0472968,0.0221637,0.323741,0.998126,-0.0568176,0.0227256,0.323109,0.997522,-0.0663966,0.0232891,0.322505,0.99682,-0.0760303,0.0238541,0.321929,0.99602,-0.0857158,0.0244203,0.321381,0.995121,-0.0954496,0.0249874,0.320862,0.99412,-0.105228,0.0255553,0.320372,0.993016,-0.115048,0.0261237,0.31991,0.991809,-0.124906,0.0266923,0.319481,0.990498,-0.134797,0.0272609,0.319082,0.989081,-0.144719,0.0278293,0.318711,0.987559,-0.154666,0.0283973,0.318374,0.985929,-0.164637,0.0289645,0.318067,0.984192,-0.174625,0.0295307,0.317791,0.982348,-0.184628,0.0300957,0.317548,0.980395,-0.194641,0.0306593,0.317337,0.978335,-0.20466,0.0312211,0.317158,0.976167,-0.214681,0.0317809,0.317011,0.973891,-0.2247,0.0323386,0.316898,0.971508,-0.234712,0.0328937,0.316818,0.969018,-0.244714,0.0334462,0.31677,0.966422,-0.254701,0.0339957,0.316756,0.96372,-0.26467,0.0345421,0.316775,0.960914,-0.274615,0.035085,0.316827,0.958004,-0.284533,0.0356243,0.316912,0.954992,-0.29442,0.0361598,0.317033,0.951878,-0.304271,0.0366912,0.317185,0.948665,-0.314084,0.0372183,0.317371,0.945354,-0.323853,0.0377409,0.317591,0.941947,-0.333575,0.0382588,0.317843,0.938445,-0.343246,0.0387718,0.318129,0.93485,-0.352863,0.0392798,0.318448,0.931165,-0.362421,0.0397825,0.318801,0.927391,-0.371918,0.0402798,0.319186,0.923531,-0.38135,0.0407715,0.319603,0.919587,-0.390714,0.0412575,0.320053,0.915562,-0.400005,0.0417376,0.320536,0.911458,-0.409223,0.0422117,0.32105,0.907277,-0.418362,0.0426797,0.321596,0.903023,-0.427421,0.0431414,0.322173,0.898697,-0.436397,0.0435967,0.322782,0.894304,-0.445286,0.0440456,0.323421,0.889846,-0.454088,0.0444879,0.32409,0.885325,-0.462798,0.0449235,0.324791,0.880744,-0.471416,0.0453524,0.325521,0.876107,-0.479939,0.0457745,0.32628,0.871416,-0.488365,0.0461897,0.327068,0.866675,-0.496693,0.0465981,0.327884,0.861886,-0.504919,0.0469995,0.328729,0.857053,-0.513045,0.0473939,0.329601,0.852178,-0.521066,0.0477813,0.330501,0.847264,-0.528984,0.0481617,0.331427,0.842315,-0.536795,0.048535,0.332379,0.837334,-0.5445,0.0489014,0.333357,0.832323,-0.552098,0.0492606,0.33436,0.827285,-0.559587,0.0496129,0.335388,0.822224,-0.566967,0.0499582,0.33644,0.817142,-0.574238,0.0502965,0.337515,0.812042,-0.581398,0.0506278,0.338614,0.806927,-0.588449,0.0509523,0.339735,0.8018,-0.59539,0.0512699,0.340878,0.796662,-0.60222,0.0515806,0.342042,0.791518,-0.608939,0.0518846,0.343226,0.786369,-0.615549,0.0521819,0.344431,0.781219,-0.622048,0.0524726,0.345656,0.776068,-0.628438,0.0527567,0.346899,0.770921,-0.634719,0.0530342,0.348161,0.76578,-0.64089,0.0533054,0.34944,0.760645,-0.646953,0.0535701,0.350737,0.755521,-0.652909,0.0538286,0.352049,0.750409,-0.658758,0.0540809,0.353378,0.745311,-0.6645,0.0543271,0.354723,0.740229,-0.670137,0.0545673,0.356081,0.735165,-0.675669,0.0548016,0.357454,0.730122,-0.681097,0.05503,0.35884,0.7251,-0.686423,0.0552526,0.360238,0.720102,-0.691647,0.0554697,0.361649,0.715129,-0.696771,0.0556811,0.363071,0.710184,-0.701795,0.0558871,0.364505,0.705266,-0.70672,0.0560878,0.365948,0.700379,-0.711548,0.0562832,0.367401,0.695524,-0.71628,0.0564734,0.368863,0.690701,-0.720918,0.0566585,0.370333,0.685912,-0.725461,0.0568387,0.371811,0.681159,-0.729912,0.0570141,0.373296,0.676443,-0.734272,0.0571846,0.374788,0.671764,-0.738542,0.0573505,0.376286,0.667124,-0.742723,0.0575118,0.377789,0.662525,-0.746817,0.0576687,0.379296,0.657965,-0.750825,0.0578212,0.380808,0.653448,-0.754748,0.0579694,0.382323,0.648974,-0.758588,0.0581134,0.383841,0.644543,-0.762346,0.0582533,0.385361,0.640156,-0.766023,0.0583892,0.386882,0.635814,-0.76962,0.0585213,0.388407,0.631518,-0.77314,0.0586495,0.38993,0.627269,-0.776582,0.058774,0.391453,0.623066,-0.779949,0.0588949,0.392977,0.618911,-0.783241,0.0590122,0.394499,0.614803,-0.786461,0.0591261,0.396018,0.610745,-0.789609,0.0592365,0.397536,0.606735,-0.792686,0.0593438,0.399051,0.602775,-0.795694,0.0594478,0.400562,0.598864,-0.798634,0.0595486,0.402069,0.595004,-0.801507,0.0596465,0.403572,0.591194,-0.804314,0.0597413,0.405068,0.587435,-0.807056,0.0598333,0.406561,0.583727,-0.809736,0.0599225,0.408047,0.58007,-0.812353,0.0600089,0.409526,0.576465,-0.814909,0.0600926,0.410998,0.572912,-0.817405,0.0601738,0.412461,0.56941,-0.819843,0.0602524,0.413917,0.56596,-0.822222,0.0603285,0.415364,0.562563,-0.824545,0.0604023,0.416802,0.559218,-0.826812,0.0604737,0.41823,0.555926,-0.829024,0.0605428,0.419648,0.552686,-0.831182,0.0606098,0.421054,0.549499,-0.833288,0.0606746,0.42245,0.546365,-0.835342,0.0607373,0.423834,0.543283,-0.837345,0.0607979,0.425205,0.540254,-0.839298,0.0608566,0.426564,0.537278,-0.841202,0.0609134,0.42791,0.534355,-0.843058,0.0609683,0.429242,0.531485,-0.844867,0.0610213,0.43056,0.528668,-0.846629,0.0610726,0.431863,0.525904,-0.848345,0.0611222,0.433151,0.523192,-0.850017,0.0611701,0.434424,0.520534,-0.851644,0.0612164,0.435681,0.517928,-0.853228,0.0612611,0.436921,0.515375,-0.854769,0.0613043,0.438145,0.512876,-0.856268,0.0613459,0.439351,0.510429,-0.857726,0.0613862,0.44054,0.508035,-0.859144,0.061425,0.44171,0.505693,-0.860521,0.0614624,0.442862,0.503405,-0.861859,0.0614985,0.443995,0.501169,-0.863159,0.0615332,0.445109,0.498986,-0.86442,0.0615667,0.446202,0.496856,-0.865644,0.061599,0.447276,0.494778,-0.866831,0.0616301,0.448328,0.492753,-0.867982,0.06166,0.449361,0.490781,-0.869096,0.0616888,0.450371,0.488861,-0.870176,0.0617165,0.45136,0.486995,-0.87122,0.0617431,0.452327,0.48518,-0.87223,0.0617686,0.453271,0.481451,-0.87429,0.0618201,0.455226,0.477885,-0.876241,0.0618683,0.457114,0.474477,-0.878088,0.0619133,0.458936,0.471224,-0.879835,0.0619553,0.460693,0.46812,-0.881488,0.0619945,0.462382,0.465162,-0.88305,0.062031,0.464006,0.462345,-0.884525,0.0620651,0.465564,0.459667,-0.885918,0.0620969,0.467058,0.457123,-0.887231,0.0621266,0.468487,0.454709,-0.888469,0.0621542,0.469852,0.452423,-0.889633,0.0621799,0.471154,0.45026,-0.890728,0.0622038,0.472393,0.448218,-0.891756,0.062226,0.47357,0.446293,-0.892719,0.0622466,0.474685,0.444483,-0.893621,0.0622657,0.47574,0.442784,-0.894463,0.0622834,0.476735,0.441193,-0.895247,0.0622997,0.47767,0.439708,-0.895976,0.0623148,0.478548,0.438325,-0.896653,0.0623286,0.479368,0.437043,-0.897278,0.0623414,0.480132,0.435858,-0.897853,0.062353,0.48084,0.434769,-0.89838,0.0623636,0.481493,0.433772,-0.898861,0.0623732,0.482092,0.432866,-0.899297,0.0623818,0.482639,0.432047,-0.89969,0.0623896,0.483133,0.431315,-0.900041,0.0623965,0.483577,0.430666,-0.900352,0.0624026,0.483971,0.430098,-0.900623,0.0624079,0.484316,0.429609,-0.900855,0.0624124,0.484614,0.429198,-0.901051,0.0624162,0.484865,0.428862,-0.901211,0.0624193,0.48507,0.428599,-0.901336,0.0624217,0.48523,0.428408,-0.901427,0.0624234,0.485348,0.428285,-0.901485,0.0624246,0.485422,0.42823,-0.901511,0.0624251,0.485456,0.428241,-0.901506,0.062425,0.48545,0.428316,-0.90147,0.0624243,0.485404,0.428452,-0.901406,0.062423,0.485321,0.428649,-0.901312,0.0624212,0.485201,0.428904,-0.901191,0.0624189,0.485045,0.429215,-0.901043,0.062416,0.484855,0.429582,-0.900869,0.0624126,0.484631,0.430001,-0.900669,0.0624088,0.484376,0.430472,-0.900444,0.0624044,0.484089,0.430993,-0.900195,0.0623995,0.483773,0.431562,-0.899923,0.0623942,0.483428,0.432177,-0.899628,0.0623884,0.483055,0.432836,-0.899312,0.0623821,0.482657,0.433539,-0.898973,0.0623754,0.482233,0.434283,-0.898615,0.0623683,0.481785,0.435066,-0.898236,0.0623607,0.481315,0.435888,-0.897839,0.0623527,0.480822,0.436745,-0.897422,0.0623443,0.480309,0.437637,-0.896988,0.0623355,0.479778,0.438562,-0.896537,0.0623263,0.479228,0.439518,-0.89607,0.0623167,0.478661,0.440503,-0.895586,0.0623067,0.478078,0.441515,-0.895088,0.0622964,0.47748,0.442554,-0.894576,0.0622858,0.47687,0.443617,-0.89405,0.0622748,0.476246,0.444702,-0.893512,0.0622634,0.475612,0.445807,-0.892962,0.0622518,0.474968,0.446931,-0.892401,0.0622398,0.474315,0.448073,-0.891829,0.0622276,0.473653,0.449229,-0.891248,0.062215,0.472986,0.450399,-0.890658,0.0622023,0.472313,0.45158,-0.890061,0.0621892,0.471636,0.452771,-0.889456,0.062176,0.470955,0.45397,-0.888846,0.0621625,0.470272,0.455174,-0.888231,0.0621489,0.469588,0.456382,-0.887612,0.0621351,0.468905,0.457592,-0.886989,0.0621211,0.468222,0.458803,-0.886365,0.0621071,0.467542,0.460011,-0.88574,0.0620929,0.466865,0.461215,-0.885114,0.0620786,0.466193,0.462414,-0.884489,0.0620643,0.465527,0.463604,-0.883867,0.06205,0.464866,0.464785,-0.883248,0.0620356,0.464214,0.465953,-0.882633,0.0620213,0.46357,0.467108,-0.882024,0.062007,0.462937,0.468246,-0.881421,0.0619929,0.462313,0.469366,-0.880826,0.0619788,0.461702,0.470465,-0.88024,0.0619649,0.461104,0.471543,-0.879664,0.0619512,0.46052,0.472595,-0.8791,0.0619377,0.459951,0.473621,-0.878549,0.0619244,0.459397,0.474618,-0.878012,0.0619114,0.458862,0.475584,-0.87749,0.0618988,0.458343,0.476516,-0.876985,0.0618865,0.457845,0.477414,-0.876497,0.0618746,0.457366,0.478273,-0.876029,0.0618631,0.456908,0.479093,-0.875582,0.0618521,0.456473,0.479871,-0.875157,0.0618416,0.456061,0.480605,-0.874754,0.0618317,0.455673,0.481293,-0.874377,0.0618223,0.455309,0.481932,-0.874025,0.0618136,0.454973,0.482521,-0.873701,0.0618055,0.454663,0.483056,-0.873406,0.0617981,0.454382,0.483537,-0.87314,0.0617915,0.45413,0.48396,-0.872906,0.0617856,0.453909,0.484324,-0.872705,0.0617805,0.453718,0.484627,-0.872537,0.0617763,0.45356,0.484866,-0.872404,0.061773,0.453435,0.485039,-0.872308,0.0617706,0.453344,0.485144,-0.87225,0.0617691,0.45329,0.48518,-0.87223,0.0617686,0.453271])})])}),

                                    new Viewpoint({
                                      DEF : new SFString("Cam6"),
                                      position : new SFVec3f([18.6206,3.04472,28.0531]),
                                      orientation : new SFRotation([0.902191,0.431254,-0.00844105,0.41309])})])})])})])}),

                        new Transform({
                          DEF : new SFString("Walk_1"),
                          children : new MFNode([
                            new NavigationInfo({
                              type : ["ANY","WALK"],
                              DEF : new SFString("_WalkNavInfo1"),
                              headlight : new SFBool(false),
                              visibilityLimit : new SFFloat(600),
                              transitionType : new MFString(["TELEPORT"])}),

                            new Script({
                              DEF : new SFString("_walk"),
                              field : new MFNode([
                                new field({
                                  type : field.TYPE_SFBOOL,
                                  name : new SFString("isBound"),
                                  accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                new field({
                                  type : field.TYPE_SFBOOL,
                                  name : new SFString("enabled"),
                                  accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                new field({
                                  type : field.TYPE_SFTIME,
                                  name : new SFString("startTime"),
                                  accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                new field({
                                  type : field.TYPE_SFBOOL,
                                  name : new SFString("set_bind"),
                                  accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),
                              ]),vrmlscript:
, function startTime(value, time)
{
	isBound = TRUE;
}

, function set_bind(value, time)
{
	enabled = !value;
})}),

                            new Viewpoint({
                              DEF : new SFString("VP1"),
                              position : new SFVec3f([37.7417,1.59972,57.1431]),
                              orientation : new SFRotation([0.173976,0.98309,-0.0571617,0.601849])})])})])}),

                    new Transform({
                      DEF : new SFString("World_1"),
                      children : new MFNode([
                        new Collision({
                          DEF : new SFString("_2"),
                          enabled : new SFBool(false),
                          proxy : new SFNode(
                            new Transform({
                              DEF : new SFString("World"),
                              children : new MFNode([
                                new Transform({
                                  DEF : new SFString("black"),
                                  translation : new SFVec3f([-22.7268,-13.5089,7.5193]),
                                  rotation : new SFRotation([0.999991,-0.000350818,-0.00422846,3.14144]),
                                  scale : new SFVec3f([2.75809,0.104981,2.69829]),
                                  children : new MFNode([
                                    new Shape({
                                      geometry : new SFNode(
                                        new IndexedFaceSet({
                                          solid : new SFBool(false),
                                          colorPerVertex : new SFBool(false),
                                          coordIndex : new MFInt32([0,3,2,1,-1]),
                                          color : new SFNode(
                                            new Color({
                                              color : new MFColor([0,0,0])})),
                                          coord : new SFNode(
                                            new Coordinate({
                                              point : new MFVec3f([-100,-100,100,100,-100,100,100,-100,-100,-100,-100,-100])}))}))})])}),

                                new Transform({
                                  DEF : new SFString("Himmel_1"),
                                  children : new MFNode([
                                    new Transform({
                                      DEF : new SFString("Himmel"),
                                      children : new MFNode([
                                        new Switch({
                                          DEF : new SFString("_3"),
                                          whichChoice : new SFInt32(0),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Nachts"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("himmel_1"),
                                                  translation : new SFVec3f([-20.2624,-124.168,-40.153]),
                                                  scale : new SFVec3f([266.449,266.449,266.449]),
                                                  center : new SFVec3f([0,0.0127649,-0.0241856]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              DEF : new SFString("_4"),
                                                              ambientIntensity : new SFFloat(0.414894),
                                                              diffuseColor : new SFColor([1,1,1])})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["nachthimmel.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.546288),
                                                          texCoordIndex : new MFInt32([2,1,0,-1,3,1,2,-1,4,3,2,-1,5,3,4,-1,6,5,4,-1,7,5,6,-1,8,7,6,-1,9,7,8,-1,10,9,8,-1,3,11,1,-1,12,11,3,-1,5,12,3,-1,13,12,5,-1,7,13,5,-1,14,13,7,-1,9,14,7,-1,12,15,11,-1,16,15,12,-1,13,16,12,-1,17,16,13,-1,14,17,13,-1,16,18,15,-1,19,18,16,-1,17,19,16,-1,60,18,19,-1,20,9,10,-1,21,9,20,-1,22,21,20,-1,23,21,22,-1,24,23,22,-1,25,23,24,-1,26,25,24,-1,27,25,26,-1,28,27,26,-1,21,14,9,-1,29,14,21,-1,23,29,21,-1,30,29,23,-1,25,30,23,-1,31,30,25,-1,27,31,25,-1,29,17,14,-1,32,17,29,-1,30,32,29,-1,33,32,30,-1,31,33,30,-1,32,19,17,-1,34,19,32,-1,33,34,32,-1,60,19,34,-1,35,52,53,-1,36,52,35,-1,37,36,35,-1,38,36,37,-1,39,38,37,-1,40,38,39,-1,41,40,39,-1,1,40,41,-1,0,1,41,-1,36,56,52,-1,42,56,36,-1,38,42,36,-1,43,42,38,-1,40,43,38,-1,11,43,40,-1,1,11,40,-1,42,58,56,-1,44,58,42,-1,43,44,42,-1,15,44,43,-1,11,15,43,-1,44,59,58,-1,18,59,44,-1,15,18,44,-1,60,59,18,-1,45,27,28,-1,46,27,45,-1,47,46,45,-1,48,46,47,-1,49,48,47,-1,50,48,49,-1,51,50,49,-1,52,50,51,-1,53,52,51,-1,46,31,27,-1,54,31,46,-1,48,54,46,-1,55,54,48,-1,50,55,48,-1,56,55,50,-1,52,56,50,-1,54,33,31,-1,57,33,54,-1,55,57,54,-1,58,57,55,-1,56,58,55,-1,57,34,33,-1,59,34,57,-1,58,59,57,-1,60,34,59,-1]),
                                                          coordIndex : new MFInt32([2,1,0,-1,3,1,2,-1,4,3,2,-1,5,3,4,-1,6,5,4,-1,7,5,6,-1,8,7,6,-1,9,7,8,-1,10,9,8,-1,3,11,1,-1,12,11,3,-1,5,12,3,-1,13,12,5,-1,7,13,5,-1,14,13,7,-1,9,14,7,-1,12,15,11,-1,16,15,12,-1,13,16,12,-1,17,16,13,-1,14,17,13,-1,16,18,15,-1,19,18,16,-1,17,19,16,-1,20,18,19,-1,21,9,10,-1,22,9,21,-1,23,22,21,-1,24,22,23,-1,25,24,23,-1,26,24,25,-1,27,26,25,-1,28,26,27,-1,29,28,27,-1,22,14,9,-1,30,14,22,-1,24,30,22,-1,31,30,24,-1,26,31,24,-1,32,31,26,-1,28,32,26,-1,30,17,14,-1,33,17,30,-1,31,33,30,-1,34,33,31,-1,32,34,31,-1,33,19,17,-1,35,19,33,-1,34,35,33,-1,20,19,35,-1,38,37,36,-1,39,37,38,-1,40,39,38,-1,41,39,40,-1,42,41,40,-1,43,41,42,-1,44,43,42,-1,1,43,44,-1,0,1,44,-1,39,45,37,-1,46,45,39,-1,41,46,39,-1,47,46,41,-1,43,47,41,-1,11,47,43,-1,1,11,43,-1,46,48,45,-1,49,48,46,-1,47,49,46,-1,15,49,47,-1,11,15,47,-1,49,50,48,-1,18,50,49,-1,15,18,49,-1,20,50,18,-1,51,28,29,-1,52,28,51,-1,53,52,51,-1,54,52,53,-1,55,54,53,-1,56,54,55,-1,57,56,55,-1,37,56,57,-1,36,37,57,-1,52,32,28,-1,58,32,52,-1,54,58,52,-1,59,58,54,-1,56,59,54,-1,45,59,56,-1,37,45,56,-1,58,34,32,-1,60,34,58,-1,59,60,58,-1,48,60,59,-1,45,48,59,-1,60,35,34,-1,50,35,60,-1,48,50,60,-1,20,35,50,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([1,0.506944,0.985071,0.506944,0.985071,0.383992,0.952267,0.354095,0.916025,0.225742,0.833333,0.168981,0.77735,0.0851412,0.650756,0.0483959,0.621268,0.0151361,0.5,0.0151361,0.5,0,0.916025,0.506944,0.833333,0.337963,0.666667,0.168981,0.5,0.0851412,0.77735,0.506944,0.650756,0.354095,0.5,0.225742,0.621268,0.506944,0.5,0.383992,0.378732,0.0151361,0.349244,0.0483959,0.22265,0.0851412,0.166667,0.168981,0.0839748,0.225742,0.047733,0.354095,0.0149288,0.383992,0.0149288,0.506944,0,0.506944,0.333333,0.168981,0.166667,0.337963,0.0839748,0.506944,0.349244,0.354095,0.22265,0.506944,0.378732,0.506944,0.621268,0.998753,0.650756,0.965493,0.77735,0.928748,0.833333,0.844907,0.916025,0.788147,0.952267,0.659794,0.985071,0.629896,0.666667,0.844907,0.833333,0.675926,0.650756,0.659794,0.0149288,0.629896,0.047733,0.659794,0.0839748,0.788147,0.166667,0.844907,0.22265,0.928748,0.349244,0.965493,0.378732,0.998753,0.5,0.998753,0.5,1.01389,0.166667,0.675926,0.333333,0.844907,0.5,0.928748,0.349244,0.659794,0.5,0.788147,0.5,0.629896,0.5,0.506944])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([1,0,0,0.970142,0.242536,0,0.970142,0,0.242536,0.904534,0.301511,0.301511,0.83205,0,0.5547,0.666667,0.333333,0.666667,0.5547,0,0.83205,0.301511,0.301511,0.904534,0.242536,0,0.970142,0,0.242536,0.970142,0,0,1,0.83205,0.5547,0,0.666667,0.666667,0.333333,0.333333,0.666667,0.666667,0,0.5547,0.83205,0.5547,0.83205,0,0.301511,0.904534,0.301511,0,0.83205,0.5547,0.242536,0.970142,0,0,0.970142,0.242536,0,1,0,-0.242536,0,0.970142,-0.301511,0.301511,0.904534,-0.5547,0,0.83205,-0.666667,0.333333,0.666667,-0.83205,0,0.5547,-0.904534,0.301511,0.301511,-0.970142,0,0.242536,-0.970142,0.242536,0,-1,0,0,-0.333333,0.666667,0.666667,-0.666667,0.666667,0.333333,-0.83205,0.5547,0,-0.301511,0.904534,0.301511,-0.5547,0.83205,0,-0.242536,0.970142,0,0,0,-1,0,0.242536,-0.970142,0.242536,0,-0.970142,0.301511,0.301511,-0.904534,0.5547,0,-0.83205,0.666667,0.333333,-0.666667,0.83205,0,-0.5547,0.904534,0.301511,-0.301511,0.970142,0,-0.242536,0,0.5547,-0.83205,0.333333,0.666667,-0.666667,0.666667,0.666667,-0.333333,0,0.83205,-0.5547,0.301511,0.904534,-0.301511,0,0.970142,-0.242536,-0.970142,0,-0.242536,-0.904534,0.301511,-0.301511,-0.83205,0,-0.5547,-0.666667,0.333333,-0.666667,-0.5547,0,-0.83205,-0.301511,0.301511,-0.904534,-0.242536,0,-0.970142,-0.666667,0.666667,-0.333333,-0.333333,0.666667,-0.666667,-0.301511,0.904534,-0.301511])}))}))})])})])}),

                                            new Transform({
                                              DEF : new SFString("Tags"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("himmel"),
                                                  translation : new SFVec3f([-9.46836,-87.3054,0]),
                                                  scale : new SFVec3f([266.449,266.449,266.449]),
                                                  center : new SFVec3f([0,0.0127649,-0.0241856]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              USE : new SFString("_4")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["himmelszelt.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.546288),
                                                          texCoordIndex : new MFInt32([1,5,0,-1,6,5,1,-1,2,6,1,-1,7,6,2,-1,3,7,2,-1,8,7,3,-1,4,8,3,-1,6,9,5,-1,10,9,6,-1,7,10,6,-1,11,10,7,-1,8,11,7,-1,10,12,9,-1,13,12,10,-1,11,13,10,-1,40,12,13,-1,14,8,4,-1,18,8,14,-1,15,18,14,-1,19,18,15,-1,16,19,15,-1,20,19,16,-1,17,20,16,-1,18,11,8,-1,21,11,18,-1,19,21,18,-1,22,21,19,-1,20,22,19,-1,21,13,11,-1,23,13,21,-1,22,23,21,-1,40,13,23,-1,24,36,33,-1,27,36,24,-1,25,27,24,-1,28,27,25,-1,26,28,25,-1,5,28,26,-1,0,5,26,-1,27,38,36,-1,29,38,27,-1,28,29,27,-1,9,29,28,-1,5,9,28,-1,29,39,38,-1,12,39,29,-1,9,12,29,-1,40,39,12,-1,30,20,17,-1,34,20,30,-1,31,34,30,-1,35,34,31,-1,32,35,31,-1,36,35,32,-1,33,36,32,-1,34,22,20,-1,37,22,34,-1,35,37,34,-1,38,37,35,-1,36,38,35,-1,37,23,22,-1,39,23,37,-1,38,39,37,-1,40,23,39,-1]),
                                                          coordIndex : new MFInt32([1,5,0,-1,6,5,1,-1,2,6,1,-1,7,6,2,-1,3,7,2,-1,8,7,3,-1,4,8,3,-1,6,9,5,-1,10,9,6,-1,7,10,6,-1,11,10,7,-1,8,11,7,-1,10,12,9,-1,13,12,10,-1,11,13,10,-1,14,12,13,-1,15,8,4,-1,19,8,15,-1,16,19,15,-1,20,19,16,-1,17,20,16,-1,21,20,17,-1,18,21,17,-1,19,11,8,-1,22,11,19,-1,20,22,19,-1,23,22,20,-1,21,23,20,-1,22,13,11,-1,24,13,22,-1,23,24,22,-1,14,13,24,-1,26,29,25,-1,30,29,26,-1,27,30,26,-1,31,30,27,-1,28,31,27,-1,5,31,28,-1,0,5,28,-1,30,32,29,-1,33,32,30,-1,31,33,30,-1,9,33,31,-1,5,9,31,-1,33,34,32,-1,12,34,33,-1,9,12,33,-1,14,34,12,-1,35,21,18,-1,38,21,35,-1,36,38,35,-1,39,38,36,-1,37,39,36,-1,29,39,37,-1,25,29,37,-1,38,23,21,-1,40,23,38,-1,39,40,38,-1,32,40,39,-1,29,32,39,-1,40,24,23,-1,34,24,40,-1,32,34,40,-1,14,24,34,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0.985071,0.506944,0.952267,0.354095,0.833333,0.168981,0.650756,0.0483959,0.5,0.0151361,0.916025,0.506944,0.833333,0.337963,0.666667,0.168981,0.5,0.0851412,0.77735,0.506944,0.650756,0.354095,0.5,0.225742,0.621268,0.506944,0.5,0.383992,0.349244,0.0483959,0.166667,0.168981,0.047733,0.354095,0.0149288,0.506944,0.333333,0.168981,0.166667,0.337963,0.0839748,0.506944,0.349244,0.354095,0.22265,0.506944,0.378732,0.506944,0.650756,0.965493,0.833333,0.844907,0.952267,0.659794,0.666667,0.844907,0.833333,0.675926,0.650756,0.659794,0.047733,0.659794,0.166667,0.844907,0.349244,0.965493,0.5,0.998753,0.166667,0.675926,0.333333,0.844907,0.5,0.928748,0.349244,0.659794,0.5,0.788147,0.5,0.629896,0.5,0.506944])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([0.970142,0.242536,0,0.904534,0.301511,0.301511,0.666667,0.333333,0.666667,0.301511,0.301511,0.904534,0,0.289275,0.949466,0.83205,0.5547,0,0.666667,0.666667,0.333333,0.333333,0.666667,0.666667,0,0.5547,0.83205,0.5547,0.83205,0,0.301511,0.904534,0.301511,0,0.83205,0.5547,0.242536,0.970142,0,0,0.970142,0.242536,0,1,0,-0.301511,0.301511,0.904534,-0.666667,0.333333,0.666667,-0.904534,0.301511,0.301511,-0.970142,0.242536,0,-0.333333,0.666667,0.666667,-0.666667,0.666667,0.333333,-0.83205,0.5547,0,-0.301511,0.904534,0.301511,-0.5547,0.83205,0,-0.242536,0.970142,0,0,0.303582,-0.943137,0.301511,0.301511,-0.904534,0.666667,0.333333,-0.666667,0.904534,0.301511,-0.301511,0,0.5547,-0.83205,0.333333,0.666667,-0.666667,0.666667,0.666667,-0.333333,0,0.83205,-0.5547,0.301511,0.904534,-0.301511,0,0.970142,-0.242536,-0.904534,0.301511,-0.301511,-0.666667,0.333333,-0.666667,-0.301511,0.301511,-0.904534,-0.666667,0.666667,-0.333333,-0.333333,0.666667,-0.666667,-0.301511,0.904534,-0.301511])}))}))})])}),

                                                new Transform({
                                                  children : new MFNode([
                                                    new Script({
                                                      DEF : new SFString("_light"),
                                                      field : new MFNode([
                                                        new field({
                                                          type : field.TYPE_SFBOOL,
                                                          name : new SFString("on"),
                                                          accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                                        new field({
                                                          type : field.TYPE_SFINT32,
                                                          name : new SFString("set_whichChoice"),
                                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),
                                                      ]),vrmlscript:
, function set_whichChoice(value, time)
{
	on = value;
})}),

                                                    new PointLight({
                                                      DEF : new SFString("Light2"),
                                                      radius : new SFFloat(10000)})])})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("Hamburg-M�nckebergstrasse"),
                                  children : new MFNode([
                                    new Transform({
                                      DEF : new SFString("no-Horten"),
                                      children : new MFNode([
                                        new Transform({
                                          DEF : new SFString("Nachbarhaus"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("xform_1"),
                                              translation : new SFVec3f([76.1452,18.0439,-4.15023]),
                                              rotation : new SFRotation([-0.148568,0.0102352,-0.988849,0.000690534]),
                                              scale : new SFVec3f([0.227213,0.179013,0.309175]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          image : new SFImage([55,300,1,49,51,50,50,48,46,44,43,44,47,47,50,51,52,53,51,49,47,44,38,37,37,37,37,37,36,37,37,38,38,37,37,37,36,36,36,36,35,36,36,35,36,36,35,35,36,35,36,35,35,36,37,37,37,37,46,50,49,48,48,46,45,46,45,45,44,45,49,57,66,71,73,67,54,42,37,37,38,37,37,37,37,38,39,39,38,38,38,38,37,37,38,38,38,38,37,38,37,37,37,38,38,37,37,38,38,39,39,41,42,53,54,51,51,51,50,52,51,47,45,44,45,49,56,63,67,68,62,48,41,38,38,38,38,38,38,38,38,38,39,39,38,38,38,38,38,38,38,39,38,37,38,37,37,37,38,38,38,38,38,38,39,39,40,40,58,60,58,58,54,50,51,50,46,47,50,51,53,56,57,55,55,51,43,39,39,38,38,38,37,37,38,37,37,37,38,39,39,38,38,38,37,38,38,38,37,37,37,37,37,37,37,37,37,37,38,40,40,40,40,82,89,86,85,76,71,70,69,66,67,74,80,80,81,82,76,74,65,49,41,40,40,39,37,37,37,37,38,37,37,38,39,39,38,38,38,38,38,38,38,38,37,37,37,37,37,37,37,38,37,37,38,38,38,37,64,69,65,65,63,60,63,67,74,84,91,97,101,104,110,103,101,85,55,42,40,39,38,37,38,38,37,38,37,37,37,38,38,37,37,37,38,40,41,39,38,37,37,38,37,37,36,36,37,37,37,37,37,38,37,40,39,40,41,42,46,55,65,79,89,95,103,103,100,102,102,103,90,60,41,38,38,38,37,37,38,38,37,37,37,37,38,38,37,40,42,38,38,38,37,38,38,37,39,40,37,36,38,39,38,38,37,37,39,37,43,46,48,48,50,55,64,71,75,80,88,93,93,95,97,98,101,90,62,41,38,39,38,37,37,37,37,37,37,37,38,39,38,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,39,38,38,38,37,38,37,51,56,59,59,59,59,60,61,61,63,66,65,65,70,76,75,75,68,52,41,40,39,39,38,38,38,39,38,37,37,39,39,39,38,37,37,38,37,37,37,37,38,38,37,38,38,38,37,37,37,40,41,41,39,37,45,51,52,52,51,53,53,56,59,58,54,52,53,53,50,48,48,45,41,39,39,39,38,39,38,38,37,37,38,38,39,39,39,38,37,37,37,37,37,37,38,38,38,38,38,38,37,39,37,37,38,38,39,37,37,42,44,44,44,44,46,47,48,50,49,46,46,47,45,44,43,43,43,39,38,37,38,38,39,37,38,38,38,38,39,39,39,38,37,37,37,38,37,37,38,38,38,38,38,37,37,38,38,39,40,42,42,42,42,40,41,41,39,39,40,38,39,40,39,39,39,39,39,40,40,39,39,39,38,38,38,38,38,39,38,38,38,38,39,40,39,37,38,38,38,38,38,38,38,39,39,38,38,38,38,39,39,38,42,44,44,44,45,48,45,40,40,41,41,40,40,39,40,40,40,39,39,39,40,40,39,39,38,38,39,39,39,39,40,38,38,38,38,39,40,39,38,38,38,37,37,38,40,38,38,39,40,39,38,39,39,40,41,41,43,43,42,42,44,42,40,41,41,41,40,39,39,39,39,38,38,39,39,40,39,38,38,39,38,37,38,39,38,38,38,38,37,38,38,39,38,37,38,38,38,37,38,38,37,37,38,38,37,38,39,41,41,42,42,42,43,41,41,41,39,40,40,40,40,40,40,40,39,39,38,39,39,37,38,39,38,38,40,39,39,39,38,38,38,39,37,37,38,38,38,38,37,38,38,38,38,37,37,38,39,37,36,37,39,40,41,41,42,42,40,41,43,43,41,40,40,40,40,40,39,41,39,38,38,37,38,39,39,39,39,38,38,39,40,39,38,38,38,38,39,39,38,38,38,39,38,38,37,38,38,37,38,38,38,38,45,51,50,45,44,46,49,49,46,42,39,40,40,42,41,39,40,41,41,40,39,39,38,37,38,37,38,40,39,39,39,39,39,37,37,37,38,38,38,38,38,38,38,38,39,38,37,37,38,38,38,38,39,38,38,43,47,46,43,43,44,44,45,48,47,43,41,41,42,40,39,39,39,39,39,40,40,40,39,40,39,38,39,39,40,39,39,39,38,39,38,39,39,39,39,39,38,38,38,39,39,39,39,40,39,38,39,40,40,41,41,41,42,42,42,43,43,45,52,52,45,43,43,43,40,40,41,38,38,38,39,39,38,39,40,39,38,38,39,39,38,37,38,38,40,39,39,38,38,39,40,40,39,38,38,38,38,38,39,39,39,39,40,41,42,42,43,48,52,50,49,49,51,49,45,43,43,43,45,43,39,41,39,39,39,38,37,38,40,41,39,38,38,38,38,38,38,38,38,38,38,37,39,39,38,38,38,38,38,38,38,38,38,38,38,39,41,41,41,41,42,43,44,45,45,45,45,42,41,42,42,43,43,45,43,39,38,40,40,39,39,39,40,40,40,39,39,38,39,39,39,40,39,38,37,37,38,39,39,38,39,39,39,38,38,39,40,40,40,40,40,40,40,40,42,43,43,44,44,43,43,42,41,42,42,41,42,42,42,40,40,40,40,40,40,41,40,41,40,37,38,39,40,40,38,39,39,39,39,39,38,38,38,38,38,39,40,42,41,40,41,41,41,42,42,42,42,42,42,43,44,43,43,44,43,43,42,43,44,44,44,44,44,43,40,40,41,41,41,40,40,40,41,41,40,39,38,38,38,38,37,37,37,38,39,39,39,40,40,40,41,42,43,42,42,41,42,42,41,41,43,43,43,44,43,44,43,43,44,45,45,44,45,45,43,42,43,43,42,41,41,41,40,40,40,40,41,40,39,39,38,39,38,37,38,40,40,39,39,40,40,40,41,41,43,43,43,44,43,42,43,43,43,43,43,43,44,44,43,43,44,43,43,45,45,45,43,44,44,43,42,42,43,42,40,41,43,43,42,41,42,42,41,42,41,41,41,41,41,41,41,41,41,42,44,43,43,43,43,44,44,43,43,43,43,43,44,44,44,43,43,44,45,44,43,43,43,44,45,44,42,42,42,42,42,42,43,43,42,40,40,43,44,44,43,43,44,44,43,43,44,43,42,42,42,40,40,41,42,43,43,43,43,43,42,41,41,42,43,43,43,44,45,45,44,43,44,45,45,45,43,42,43,44,44,43,43,42,40,41,42,44,44,45,42,44,44,43,43,43,45,44,45,48,45,43,42,41,42,43,42,42,42,42,43,43,43,43,43,43,42,43,42,43,43,44,44,44,44,44,43,44,44,44,44,44,44,44,43,41,42,43,43,43,42,43,43,43,44,42,43,44,44,44,44,44,42,43,45,44,42,43,43,43,43,43,42,43,44,44,44,44,43,43,44,43,43,42,42,43,44,44,44,44,44,45,45,44,44,42,43,45,44,42,41,43,43,44,43,45,44,44,44,43,42,44,46,45,45,44,44,44,43,42,43,43,42,42,42,41,41,42,42,42,43,44,44,43,42,43,43,44,43,43,45,44,43,43,43,44,44,44,44,43,44,45,45,43,43,44,43,43,43,43,46,47,47,47,45,43,44,47,45,45,47,47,45,45,45,44,43,43,43,43,42,42,42,42,42,43,43,43,44,44,44,44,44,43,42,43,42,41,41,43,43,43,43,43,43,44,45,44,44,44,44,44,43,43,43,46,50,48,47,45,43,43,44,44,44,45,45,45,46,46,44,44,44,44,44,44,43,43,44,43,44,44,45,44,44,44,45,44,43,42,42,42,41,42,43,42,41,42,42,42,43,44,44,45,45,43,43,45,47,48,47,46,45,45,45,42,46,47,48,49,47,45,44,45,45,45,44,44,45,46,45,44,44,44,44,43,44,45,45,42,42,43,43,44,44,44,44,44,43,43,43,43,44,45,45,44,43,44,44,43,42,42,44,47,47,46,45,44,44,42,41,44,48,47,47,46,45,44,43,43,44,44,45,48,46,45,46,46,46,47,46,46,45,42,42,42,42,44,46,46,45,44,43,43,44,46,46,44,44,44,44,43,42,43,44,43,42,42,43,43,43,44,44,44,44,44,45,47,45,45,45,45,45,45,47,45,43,44,44,43,44,44,45,45,44,44,45,44,43,43,45,47,47,45,44,44,43,42,42,44,46,44,43,44,43,44,43,44,45,44,44,43,42,42,44,45,45,44,43,46,46,46,47,47,47,45,45,46,46,46,44,43,43,43,42,43,43,43,42,43,47,46,43,42,45,49,47,44,42,42,44,45,45,45,45,44,44,44,45,46,45,45,46,44,44,45,44,47,50,45,43,45,46,46,44,42,46,45,45,45,45,43,43,45,45,45,45,43,44,44,44,43,43,43,44,46,45,44,45,46,44,44,44,44,44,47,45,44,43,43,43,43,45,50,50,46,43,43,43,43,43,43,46,48,46,43,42,43,43,45,45,44,45,44,44,45,45,44,44,45,46,45,44,44,43,43,43,43,43,44,43,44,46,46,43,42,44,47,47,45,43,43,44,45,46,48,49,49,48,46,44,42,42,43,43,43,43,44,44,44,44,45,47,47,46,42,44,45,45,45,45,44,42,43,43,44,43,46,46,43,42,43,43,43,44,45,46,44,43,44,46,46,44,44,44,44,44,45,46,48,49,48,47,46,45,44,43,44,43,44,42,43,43,44,45,46,45,45,45,44,40,44,44,44,44,43,43,43,43,42,43,45,50,47,42,42,43,42,42,44,45,44,43,46,47,45,43,43,44,45,46,46,47,47,49,46,43,42,43,46,47,45,44,45,44,43,44,44,43,43,44,45,45,45,44,44,44,46,47,47,45,43,43,43,46,49,47,46,44,44,43,43,44,46,47,45,44,44,44,44,44,44,46,49,49,49,47,45,45,45,44,45,47,47,48,49,49,48,49,49,48,48,48,48,51,53,52,51,51,50,48,48,51,52,52,52,50,48,46,49,49,47,46,46,48,49,48,49,50,50,46,44,44,47,51,53,50,48,49,49,46,47,49,51,52,54,53,49,51,56,58,53,51,50,49,49,54,57,56,53,53,53,51,51,52,52,48,50,51,51,51,50,49,49,46,44,44,44,44,45,46,47,47,46,44,45,48,47,45,48,48,47,46,45,46,45,46,47,48,49,49,48,48,52,54,54,50,49,48,46,49,53,53,50,48,47,48,49,49,48,46,47,47,46,46,47,49,49,46,45,45,45,45,45,45,44,45,45,45,43,46,47,44,45,45,45,45,46,47,48,47,46,45,44,44,43,46,52,54,51,47,46,46,47,46,47,47,46,47,53,53,49,48,48,54,53,48,48,48,49,49,52,55,51,48,48,47,46,48,50,50,50,51,49,52,51,47,45,46,47,48,49,49,49,50,49,49,50,50,48,48,48,50,52,53,51,48,45,46,49,48,47,47,48,51,52,48,43,42,50,54,45,45,44,45,46,47,48,48,49,48,45,44,45,47,46,47,47,48,51,49,46,48,49,49,47,45,46,49,49,48,48,48,49,50,49,48,48,49,49,48,49,50,49,47,48,48,48,47,46,48,50,49,49,48,48,46,45,46,47,49,48,50,56,54,48,45,45,48,49,49,48,47,47,45,46,51,54,53,51,49,48,47,45,45,48,49,47,46,47,46,48,49,49,50,52,53,54,50,47,48,48,48,45,44,45,47,47,47,46,44,44,46,45,45,44,45,46,47,45,44,43,44,45,45,44,44,44,44,43,43,47,48,47,45,44,44,44,44,44,42,40,40,40,39,40,41,41,41,42,45,46,44,42,41,42,43,43,44,46,48,46,48,48,47,43,44,46,51,47,50,46,44,44,44,45,45,45,45,48,61,59,57,54,58,66,66,68,69,67,48,45,60,56,52,63,68,63,62,71,77,68,60,60,54,46,49,62,68,65,60,58,55,53,52,53,48,47,52,60,52,45,47,49,46,48,47,45,45,46,47,47,44,45,50,77,84,70,61,61,75,85,71,73,69,51,45,68,82,77,65,71,68,73,90,77,67,63,62,64,51,48,65,65,56,51,52,47,51,59,48,42,41,43,55,52,43,45,46,47,48,48,49,45,45,49,48,45,42,47,76,94,73,54,50,65,76,51,45,45,44,45,70,92,75,47,47,54,70,80,50,43,43,51,61,47,48,67,74,56,41,42,41,44,48,43,42,41,43,55,52,42,45,47,48,49,47,48,48,46,45,45,45,43,47,82,92,70,50,51,60,68,47,43,45,44,44,70,97,82,49,50,56,68,75,49,44,50,50,53,47,52,79,100,71,42,40,40,41,43,41,42,42,41,54,52,42,45,47,46,44,45,46,48,49,45,43,43,42,44,77,95,72,51,48,61,66,46,44,50,49,45,77,109,80,51,56,62,82,87,53,56,50,47,53,46,48,80,102,74,44,46,42,47,60,50,43,43,43,46,47,43,45,44,44,45,46,51,51,50,46,48,45,45,46,79,101,74,54,50,65,72,54,53,54,49,45,75,103,81,55,57,65,86,99,61,52,49,53,58,46,45,81,96,62,47,50,43,55,70,55,43,46,46,52,49,41,44,45,46,46,45,46,47,47,46,47,44,47,48,79,99,69,50,48,59,69,50,49,48,46,45,86,123,97,53,49,62,89,93,47,47,46,52,63,47,45,72,77,52,40,43,41,51,66,48,42,44,44,59,53,43,45,46,47,45,47,47,50,49,48,48,45,42,44,75,94,67,48,45,63,77,49,44,45,44,45,85,117,77,50,49,64,78,70,48,47,46,49,57,46,46,57,66,59,41,42,42,51,55,41,42,43,43,61,57,45,45,47,50,55,55,53,48,45,45,45,46,43,47,75,79,59,49,46,67,80,51,47,47,47,46,72,99,79,54,60,65,69,68,52,49,47,50,56,45,45,49,63,64,60,61,45,45,49,45,45,49,46,63,57,46,49,52,48,48,48,46,43,44,43,43,45,42,45,64,73,63,50,48,66,70,53,55,49,46,48,80,116,102,64,58,65,83,85,58,50,48,51,53,44,45,62,95,83,72,67,45,49,61,49,47,51,47,60,53,66,63,52,47,46,47,48,46,45,45,44,45,45,46,64,78,63,51,48,62,66,48,49,48,46,45,84,129,101,52,52,66,89,90,51,47,45,54,59,45,50,85,116,87,50,51,44,52,69,49,44,45,44,52,51,78,74,58,54,47,47,47,46,44,45,45,44,42,48,69,76,57,47,48,60,67,48,45,46,46,45,85,123,90,52,57,63,90,93,48,47,48,56,64,46,51,84,102,66,44,43,44,57,81,52,42,46,43,49,47,85,73,55,54,50,47,45,45,44,46,45,43,43,45,67,80,58,48,47,55,62,51,44,46,50,52,82,110,83,48,51,57,78,80,46,45,44,51,56,46,49,77,80,61,43,41,41,60,86,54,45,45,43,45,45,89,75,52,47,50,49,47,46,45,52,47,48,48,46,60,73,62,55,57,66,67,60,58,65,57,47,78,96,74,57,59,67,73,70,62,63,60,54,53,45,45,62,72,63,57,58,75,95,90,72,73,57,46,47,44,89,76,53,49,47,49,50,48,48,50,44,44,45,48,62,68,60,58,65,81,83,74,73,76,53,45,80,101,91,80,69,72,82,95,81,74,67,63,62,46,44,52,66,63,61,75,92,100,94,75,70,54,46,47,44,90,78,56,47,47,48,50,46,45,47,44,43,43,46,60,69,61,51,50,69,74,56,56,55,48,45,88,120,94,58,54,64,80,89,53,47,46,52,62,46,44,51,65,58,44,50,45,64,85,52,43,43,45,49,46,91,80,54,46,47,50,53,47,46,45,45,46,46,51,63,69,60,51,48,62,65,48,46,49,49,48,94,131,96,51,49,59,75,88,50,44,44,51,58,45,41,50,70,68,44,43,41,59,78,50,44,45,43,49,46,88,79,55,48,48,49,51,48,46,43,43,42,42,49,68,80,57,47,51,61,65,48,46,50,49,47,85,126,92,52,52,59,71,87,53,45,44,51,61,46,43,53,89,79,48,50,42,61,79,53,46,49,45,53,50,93,75,55,48,47,47,48,49,47,45,42,42,41,45,75,90,65,49,49,62,65,53,50,53,52,46,89,126,88,51,58,59,67,83,52,49,48,50,52,45,47,63,76,65,65,123,123,93,90,51,47,50,50,58,48,82,69,53,48,49,54,55,51,51,49,43,45,47,48,77,96,68,52,48,72,83,54,48,52,52,46,89,122,90,52,61,56,64,82,50,47,48,50,54,45,49,82,89,60,59,126,114,83,83,49,44,49,44,49,48,58,55,53,51,53,54,52,49,46,47,43,46,44,45,85,103,67,46,44,61,91,59,49,50,50,46,90,123,87,52,59,52,60,74,46,43,44,46,52,45,53,95,115,74,49,54,45,67,88,51,42,47,44,49,49,45,47,52,53,53,51,49,48,46,45,45,43,43,45,86,98,61,44,44,52,57,48,51,52,49,46,82,109,78,55,62,49,52,59,45,44,41,49,60,46,49,101,130,85,48,49,44,67,88,50,42,45,43,52,51,45,48,50,49,48,48,45,45,45,45,44,45,45,49,81,76,53,52,48,53,57,47,48,53,52,48,81,100,76,65,66,51,51,48,46,45,44,52,59,45,47,97,122,81,53,56,61,67,66,51,52,55,50,57,50,47,48,48,50,53,51,48,47,45,44,43,43,41,45,58,56,53,54,55,58,54,49,52,53,48,44,64,73,60,62,65,55,54,53,50,47,49,48,46,42,46,83,90,68,60,61,70,67,53,52,59,56,53,52,44,45,49,49,49,49,48,49,49,46,45,45,42,41,44,51,51,51,52,51,52,51,50,48,50,46,42,48,55,57,60,60,50,55,57,48,49,50,47,45,43,46,61,63,62,56,55,54,54,47,52,55,51,50,47,41,46,48,51,50,48,48,49,47,45,45,44,41,40,43,44,43,43,44,45,46,47,47,45,44,44,45,49,49,51,59,54,46,51,47,47,50,46,46,46,44,45,48,50,48,50,51,46,44,44,46,50,47,48,45,41,44,45,51,53,51,50,50,46,46,44,44,41,41,43,40,40,42,42,44,43,44,47,44,48,45,43,47,48,51,64,54,45,44,43,45,46,45,46,44,44,46,48,47,47,45,47,46,45,43,44,44,44,44,44,42,44,47,46,48,49,50,50,51,47,45,44,42,43,42,40,41,45,44,43,42,47,47,44,44,44,42,45,48,60,64,46,45,45,44,44,43,44,44,43,42,44,46,47,45,42,42,44,43,44,44,44,43,42,43,43,43,48,50,48,50,50,52,49,48,46,45,42,44,41,41,42,43,43,42,41,46,48,47,41,40,44,43,43,63,65,43,43,45,44,43,42,43,41,42,42,43,44,42,41,42,44,44,41,42,43,43,42,43,43,42,44,48,49,49,52,50,52,48,46,45,45,47,42,39,40,40,39,41,42,45,43,41,42,43,44,46,44,44,55,55,43,41,41,43,43,42,42,44,44,44,44,43,43,43,44,44,42,42,42,43,43,42,44,44,40,44,46,48,48,49,50,54,48,48,45,41,44,41,40,40,38,42,42,41,47,42,48,45,43,44,47,46,50,49,42,44,44,43,44,44,43,42,43,43,42,44,44,42,43,45,46,45,44,44,45,45,44,43,43,41,43,45,46,47,50,54,53,49,46,45,42,42,41,40,39,40,44,46,44,45,44,48,48,44,43,44,46,52,53,44,45,45,42,44,45,47,43,42,41,42,42,43,42,43,48,47,45,48,49,46,45,45,43,43,42,44,46,48,48,47,54,56,52,47,45,44,44,40,41,41,41,41,44,48,45,44,44,42,42,45,47,46,54,51,46,43,42,45,45,44,46,43,42,43,41,41,43,45,45,48,47,46,49,49,44,45,45,43,42,41,44,48,53,49,46,52,55,54,49,47,44,45,44,43,42,40,41,45,47,47,46,45,44,40,43,47,52,58,47,45,45,45,46,47,45,45,45,42,42,42,43,45,45,48,46,44,45,44,44,42,43,45,43,42,41,44,46,50,51,52,54,56,51,46,47,45,44,41,41,41,42,43,45,43,44,45,45,45,44,46,47,56,59,45,43,45,45,45,46,45,44,45,44,43,42,44,45,44,46,45,44,46,44,43,45,45,45,45,43,41,42,47,51,51,50,54,55,51,46,45,45,44,43,44,40,40,46,45,43,44,43,45,45,46,47,51,60,48,45,46,42,41,43,44,44,45,45,44,43,44,45,45,44,43,44,42,43,44,43,44,45,45,46,44,42,43,47,50,47,48,50,50,49,49,47,41,40,41,45,44,42,47,46,43,45,44,45,42,42,45,54,62,48,42,45,45,43,42,41,43,45,45,42,43,43,44,42,44,41,42,43,41,43,41,41,43,44,43,43,41,42,47,47,46,46,46,48,49,46,45,42,41,39,41,41,41,42,40,40,44,44,45,42,41,44,51,52,46,42,42,42,44,42,40,42,42,44,42,44,45,43,41,42,42,43,47,45,43,42,42,42,45,45,42,40,41,45,46,48,46,47,47,48,44,43,44,44,39,39,38,40,39,38,41,40,40,39,39,40,48,55,46,41,42,41,40,40,40,42,42,40,43,41,40,45,42,42,41,40,42,43,40,41,40,40,42,44,43,41,40,40,43,47,47,46,48,47,46,43,44,44,40,38,38,39,41,39,38,39,40,39,39,39,39,52,59,45,40,43,44,42,40,39,46,43,41,38,40,43,45,46,46,45,44,44,46,44,47,49,47,50,49,47,48,43,41,43,47,46,47,48,45,45,45,44,41,41,39,40,60,68,60,55,50,57,63,65,61,56,58,53,52,48,45,55,64,61,58,58,57,59,57,53,49,46,52,66,62,60,65,66,67,69,77,72,67,57,59,58,45,41,45,47,45,48,46,45,46,44,44,40,41,40,44,92,112,91,73,70,84,99,94,82,70,63,53,74,71,54,77,104,94,92,93,83,81,86,84,65,46,62,101,93,86,81,74,80,92,107,81,69,61,64,68,49,42,45,47,46,47,47,46,46,45,44,43,41,41,46,90,116,86,54,51,72,84,57,55,64,59,51,87,103,90,60,60,59,73,90,58,52,54,68,66,46,60,101,121,86,48,50,48,92,108,55,46,51,54,67,51,44,44,48,48,47,48,45,45,45,46,45,44,40,45,85,119,90,53,46,67,80,48,51,63,52,47,89,126,97,48,45,45,58,80,52,47,45,55,60,46,58,102,128,87,50,55,51,91,111,51,43,47,54,67,53,43,45,46,48,51,51,50,48,45,44,44,44,39,46,88,129,90,53,51,66,79,49,54,54,52,46,79,113,94,54,51,45,57,88,57,47,46,60,66,46,58,112,131,90,52,59,56,91,112,55,46,52,57,71,55,44,45,45,46,51,56,54,48,45,43,44,42,40,46,88,126,92,58,54,70,81,62,61,55,51,46,85,119,98,58,57,54,68,89,62,48,49,70,71,47,63,117,133,98,56,58,59,89,100,59,50,54,57,63,52,46,47,48,52,48,50,50,46,45,45,42,40,43,46,90,120,91,57,53,65,71,67,57,51,51,48,89,118,90,52,50,47,68,88,55,52,48,64,72,50,63,118,149,97,51,48,49,75,88,51,47,52,55,64,52,47,46,49,52,49,47,47,46,47,47,44,43,42,45,93,126,84,54,54,53,61,59,47,48,52,48,84,118,86,51,51,49,62,80,51,51,50,62,71,54,62,124,154,87,47,50,46,70,91,51,46,52,55,66,54,47,43,46,49,51,48,45,46,46,46,44,44,44,43,93,132,87,54,53,56,67,56,53,52,52,52,95,135,87,55,54,51,61,87,57,53,53,65,68,53,68,127,147,89,51,54,48,74,87,55,52,54,54,72,57,46,44,46,46,48,46,48,51,46,43,42,44,44,44,86,128,88,55,55,79,92,65,58,59,53,46,95,137,96,61,56,51,66,93,62,55,51,67,71,49,60,127,159,95,51,53,49,75,94,55,50,54,57,77,57,46,47,48,46,45,46,47,48,48,46,44,45,42,44,90,132,86,51,59,87,98,60,51,53,53,47,83,117,97,58,54,50,62,86,55,50,49,65,71,50,60,124,165,93,47,51,45,75,92,49,45,52,53,78,61,46,45,49,50,48,45,44,47,47,44,45,45,42,46,94,133,86,55,62,70,88,56,49,52,52,48,88,121,91,50,53,49,63,83,52,49,48,64,70,51,65,129,153,87,45,49,45,66,69,45,47,50,52,75,62,50,45,46,49,54,50,46,51,49,44,45,43,42,45,92,114,72,60,56,65,73,52,51,54,54,47,101,131,85,48,47,44,55,69,50,45,49,64,72,51,68,126,143,92,56,59,54,60,58,53,59,59,63,75,55,46,45,48,46,47,47,48,48,46,44,46,43,40,43,80,86,71,78,79,90,92,89,89,86,65,51,99,118,94,78,81,88,85,86,90,79,76,81,73,50,69,126,137,126,108,94,102,104,98,93,97,98,92,86,56,46,45,48,45,47,48,50,47,46,46,47,45,40,43,57,73,80,71,79,94,101,93,94,86,60,50,98,132,115,89,86,89,102,110,91,83,75,76,70,51,66,124,147,122,81,74,76,95,105,71,69,70,64,75,57,46,41,46,50,50,46,46,48,45,46,45,43,41,42,68,109,82,54,59,72,84,58,54,57,55,47,99,146,109,59,53,46,77,98,55,52,48,61,68,49,62,120,149,90,45,46,45,66,84,50,50,54,52,74,59,48,45,45,45,52,47,46,45,45,45,43,41,41,52,103,139,87,56,58,73,85,59,54,55,52,47,106,150,106,56,52,46,73,91,55,50,50,68,76,49,63,129,154,90,44,44,45,69,80,48,49,53,56,75,57,51,47,45,44,46,46,46,46,46,45,43,42,48,56,100,134,90,58,59,74,87,61,57,54,51,48,104,145,102,57,55,52,84,98,58,54,58,74,77,50,64,136,150,92,50,52,50,66,80,55,52,53,57,75,57,47,41,47,48,46,46,45,45,46,45,46,50,49,45,89,134,93,57,57,76,89,61,58,58,52,47,97,145,103,54,54,54,84,100,62,54,55,68,70,50,63,127,131,82,51,56,53,69,73,49,50,49,50,69,58,46,43,48,47,46,47,47,48,46,45,49,51,43,45,89,130,86,50,51,73,88,61,54,53,54,50,97,150,105,51,49,50,76,93,52,51,51,64,71,49,63,120,127,74,46,51,49,68,72,47,47,48,45,68,58,46,44,45,44,45,45,45,47,47,52,49,41,39,45,93,131,80,46,49,67,86,56,52,52,54,47,96,148,95,48,47,47,70,82,49,49,45,62,75,50,65,119,124,74,44,49,44,72,86,47,44,49,48,69,57,45,43,45,47,45,45,45,50,53,51,44,42,40,44,87,113,69,51,54,64,72,58,52,56,56,48,95,130,80,51,52,48,67,74,51,51,48,63,73,48,63,119,123,84,60,61,58,73,77,59,61,61,66,75,55,45,43,47,47,45,49,52,53,48,45,45,43,40,43,70,82,66,65,64,60,58,59,58,63,56,48,81,88,68,66,63,62,66,65,64,63,62,69,66,47,60,98,99,87,83,80,76,77,74,74,74,75,77,71,53,43,44,45,46,51,59,54,47,46,43,41,41,43,47,58,62,63,63,62,59,58,59,58,57,46,45,62,66,65,66,65,65,62,63,63,62,65,61,53,46,53,70,73,73,75,72,68,69,68,63,67,65,66,61,47,45,47,47,49,48,47,48,47,48,47,42,41,40,43,45,48,47,48,47,51,49,49,54,50,46,48,50,51,52,51,52,51,46,50,50,49,52,50,46,46,47,50,50,49,51,52,48,50,51,50,51,47,47,47,45,45,49,48,50,45,47,45,46,48,45,43,43,39,42,42,42,43,42,43,44,44,44,45,46,43,44,45,46,45,44,44,43,43,45,45,47,46,45,43,43,45,48,47,46,44,45,45,45,45,44,44,45,43,45,45,52,45,45,45,48,52,47,45,45,45,43,43,41,44,44,42,43,42,41,42,44,42,43,43,44,43,43,42,44,43,43,43,44,43,42,43,43,43,42,42,45,46,46,44,43,44,43,44,44,42,44,44,42,44,44,45,47,48,47,47,45,46,49,50,45,43,42,40,45,44,41,41,41,40,41,42,40,40,41,45,45,46,44,41,40,41,42,41,39,40,41,41,40,43,44,43,43,44,43,43,44,43,43,43,43,42,43,44,45,45,42,45,45,46,47,45,45,48,48,50,45,41,38,40,41,41,40,39,41,43,44,43,42,41,43,44,45,44,42,42,42,40,40,41,41,41,41,43,43,42,43,42,44,45,43,43,44,43,43,45,43,42,43,44,43,42,43,44,45,49,47,44,46,47,46,45,46,41,38,40,40,40,41,44,45,43,44,42,45,45,45,43,44,43,46,44,41,42,43,43,42,42,42,42,44,43,44,45,47,48,46,45,44,45,45,44,42,40,41,44,42,46,46,45,47,47,45,49,48,45,43,45,42,39,42,42,43,44,45,46,43,44,44,43,45,45,43,44,46,45,49,45,43,44,45,45,43,43,42,42,44,45,46,47,50,49,50,46,45,46,47,46,40,41,42,42,47,49,49,49,46,46,45,44,46,45,41,38,42,45,45,45,45,44,44,46,46,45,43,42,42,42,43,44,44,49,45,42,44,45,43,43,42,42,45,45,44,45,47,50,52,51,46,45,47,51,47,44,44,42,41,43,44,47,47,49,51,46,44,45,43,43,40,40,41,43,42,43,44,46,46,48,47,44,42,41,41,42,42,44,45,45,44,45,44,44,44,43,42,44,44,45,45,46,49,48,47,47,45,45,46,43,42,41,41,45,45,45,47,47,48,50,51,48,47,44,45,41,41,44,49,46,44,42,42,42,43,43,41,41,40,41,43,45,46,45,44,44,43,44,43,43,43,44,44,45,46,47,47,48,45,43,44,42,44,44,45,44,42,41,43,47,48,47,48,48,45,45,46,48,45,42,40,41,41,46,44,45,45,43,45,42,41,42,42,42,42,44,47,46,45,44,45,44,44,44,43,43,45,45,45,45,45,45,46,43,43,41,42,45,47,47,44,43,42,44,45,46,50,51,48,45,44,45,46,44,43,40,43,41,42,42,43,43,44,47,47,44,44,42,42,42,44,45,45,45,45,44,46,45,45,45,45,45,43,45,45,45,45,45,44,43,41,43,45,46,45,43,43,43,45,45,44,47,48,46,51,49,47,45,45,47,43,44,44,42,41,42,39,40,43,43,41,43,42,43,44,44,45,46,46,45,43,44,43,44,43,44,44,44,44,44,43,42,42,42,42,40,42,41,43,43,42,43,42,43,49,46,46,45,46,52,52,49,48,45,43,39,39,41,42,40,45,39,39,39,38,38,40,40,43,42,41,41,40,40,41,40,40,39,40,40,40,43,45,43,40,40,38,39,38,39,38,39,40,41,40,40,41,42,49,49,47,47,48,49,48,48,47,49,50,45,42,41,53,61,59,65,67,58,56,57,54,51,45,43,47,49,50,54,52,53,53,54,56,57,52,52,49,45,50,59,64,64,63,65,69,70,73,77,73,74,75,68,46,54,48,47,50,50,50,49,50,47,48,46,48,50,51,94,126,104,96,106,103,109,115,106,93,58,51,93,115,114,109,107,114,123,122,120,117,107,101,70,48,81,123,122,117,112,113,115,130,127,111,104,97,102,101,56,56,46,47,52,50,51,52,51,49,48,45,44,43,50,109,154,121,76,75,89,118,85,80,71,56,57,123,162,133,86,85,77,113,133,88,83,72,85,78,50,84,146,147,95,66,68,63,116,121,61,61,65,79,90,56,58,50,49,50,49,51,53,52,51,47,45,43,42,46,101,158,118,66,61,80,103,61,53,50,54,57,109,160,122,55,53,46,89,116,58,54,50,65,73,49,72,139,155,83,49,49,47,107,108,52,53,60,71,83,53,56,50,51,50,52,52,52,51,48,47,47,50,45,47,104,154,112,65,62,81,108,67,57,55,56,54,108,164,123,58,60,51,95,115,58,57,51,72,76,50,72,140,152,81,56,57,54,117,109,55,60,65,77,89,56,58,51,50,53,52,50,52,51,49,49,47,47,44,46,109,156,118,69,69,96,119,72,65,65,55,50,106,166,134,78,73,65,108,117,67,67,60,83,80,50,75,144,158,90,69,72,67,122,118,65,70,74,79,95,56,60,54,53,49,48,47,50,51,52,52,47,45,45,47,112,167,120,66,61,85,109,65,54,57,54,53,113,167,136,75,64,57,106,120,61,58,56,78,75,50,81,157,162,83,56,56,54,105,107,55,59,66,73,92,55,57,49,48,51,51,49,54,57,53,51,46,45,44,47,107,168,122,60,58,83,106,57,48,53,57,53,107,169,133,61,53,48,99,115,53,51,51,74,77,52,81,152,160,80,53,51,49,116,103,48,54,59,75,93,57,55,47,48,48,50,51,53,55,51,53,50,46,45,48,99,162,116,68,67,93,110,59,57,63,59,51,113,176,136,65,59,55,97,117,63,61,57,82,85,53,73,145,165,91,64,62,62,129,117,64,69,70,83,96,57,57,46,46,47,49,49,53,51,47,53,52,48,45,48,103,155,119,79,77,100,120,78,75,72,61,52,114,173,139,73,67,62,107,123,70,72,66,87,83,54,80,151,164,97,73,68,66,133,118,58,63,71,85,99,59,56,45,47,49,50,50,52,53,48,51,50,46,44,50,109,161,116,66,63,89,114,73,64,61,63,54,114,172,129,66,62,57,109,115,57,63,59,84,86,53,84,159,160,79,57,54,54,126,108,47,54,65,78,96,59,53,49,48,49,49,49,54,55,51,49,47,46,44,46,106,160,113,64,61,84,107,65,58,61,67,56,114,171,118,58,56,53,104,107,54,59,58,83,80,50,81,153,157,82,53,51,53,114,103,48,56,59,75,92,58,58,50,49,50,49,51,54,54,49,47,48,45,43,47,103,149,102,68,68,84,94,66,64,67,65,56,116,153,98,58,59,60,95,93,61,66,62,89,83,50,82,151,153,95,67,69,76,116,100,72,82,81,90,93,59,58,49,52,54,49,50,53,54,52,51,47,45,43,48,99,139,119,111,121,125,124,119,117,110,70,53,112,153,118,105,112,107,114,110,110,112,106,110,87,53,82,155,158,156,145,147,150,162,152,143,137,136,132,103,56,56,48,49,50,51,51,52,51,52,47,47,45,44,50,109,151,133,106,105,132,143,130,129,116,69,52,111,162,144,124,125,122,134,137,117,120,111,113,86,57,81,162,174,140,121,121,108,157,139,91,91,89,92,96,58,55,50,51,49,50,52,55,55,49,47,47,46,43,47,108,158,114,70,68,91,107,72,69,69,63,54,118,178,125,69,65,64,108,109,60,60,57,86,82,54,85,167,170,83,56,60,57,117,100,50,53,57,68,95,60,56,52,56,54,52,53,56,52,49,49,48,45,42,46,103,158,112,72,70,91,108,66,65,72,66,56,114,171,120,61,59,57,111,115,56,56,54,87,87,53,85,158,161,78,56,59,58,113,99,53,56,56,69,93,62,57,50,53,55,53,51,51,50,50,49,47,46,45,45,102,158,113,71,70,98,119,78,67,74,66,56,117,173,120,63,65,65,116,119,64,63,62,96,89,54,85,156,165,93,69,71,68,130,117,63,67,66,77,97,62,56,47,52,55,54,53,53,56,52,52,50,46,45,49,102,155,113,69,67,98,117,80,75,76,65,57,130,168,112,69,75,69,114,116,67,69,64,94,89,54,88,159,163,94,68,70,66,127,107,58,64,54,68,101,61,56,49,55,57,57,55,56,57,53,49,49,46,44,50,107,153,93,56,58,83,101,68,65,72,65,56,126,165,107,60,66,59,107,108,58,58,52,81,83,53,87,154,155,78,56,57,58,114,98,51,54,49,63,95,58,56,51,55,58,58,60,60,58,55,51,50,49,45,48,100,137,90,52,50,74,92,59,56,67,66,56,116,157,104,55,53,51,101,102,50,53,49,80,86,53,88,160,149,72,56,53,58,109,90,50,55,54,62,87,56,55,48,54,60,61,60,60,58,52,51,50,46,43,47,92,120,81,63,63,77,85,62,64,72,65,53,114,146,91,56,62,58,92,94,61,65,57,82,85,55,92,153,133,83,81,82,80,100,90,78,86,80,84,84,54,49,48,55,57,56,56,58,59,52,51,49,46,42,47,80,97,80,77,80,81,79,80,78,81,63,49,97,115,85,77,81,81,82,82,79,79,79,87,75,53,84,126,108,98,100,101,94,93,97,103,102,99,99,82,51,49,49,55,55,56,57,60,60,55,53,51,48,45,51,70,81,81,82,83,84,83,81,77,71,58,54,74,82,83,86,85,85,82,80,85,81,85,83,60,51,65,84,85,88,88,85,85,84,85,85,84,80,76,65,50,47,52,58,56,55,55,60,60,54,53,51,48,45,45,49,55,59,60,59,61,62,64,65,59,55,52,59,64,64,63,65,67,63,65,64,66,71,66,56,50,56,64,66,63,66,65,62,63,60,55,54,55,54,49,51,46,52,61,59,55,57,58,58,54,50,49,47,43,42,41,43,45,45,45,45,47,49,51,51,52,50,52,54,53,50,53,54,53,54,53,52,56,57,52,48,54,58,56,54,53,51,47,47,48,49,49,49,50,47,48,46,53,58,60,59,58,57,56,53,50,50,47,43,44,45,45,44,44,45,46,46,46,47,46,47,47,47,47,47,46,46,50,49,49,48,49,48,47,45,51,52,48,46,47,44,45,47,45,45,46,47,47,45,45,47,45,52,56,60,60,57,57,55,53,51,49,45,43,44,45,44,43,44,44,44,43,44,45,45,45,45,45,45,46,45,44,45,46,46,45,44,43,45,45,49,51,46,44,44,44,44,44,43,44,44,44,45,45,45,50,46,53,59,60,60,61,57,57,54,52,49,46,45,44,43,44,45,44,43,42,45,47,46,46,44,45,47,45,46,46,44,44,44,43,46,47,45,44,45,48,49,47,46,48,49,46,45,45,46,45,45,46,45,45,49,46,55,63,66,63,66,61,59,54,52,47,46,43,44,45,45,46,48,47,48,51,51,46,45,46,45,45,45,48,49,46,46,47,47,51,52,45,43,45,48,48,48,50,55,57,55,54,53,54,49,45,45,45,45,50,47,56,63,66,66,66,62,59,52,50,48,46,43,44,45,45,47,50,49,53,56,55,49,47,49,45,45,46,47,53,55,54,53,54,52,52,46,45,45,48,47,47,49,54,58,58,60,54,51,52,50,46,44,45,48,48,57,69,70,70,71,68,60,52,48,48,45,44,43,43,45,47,50,52,54,56,53,48,47,49,47,45,45,50,56,58,56,55,56,53,50,45,45,46,48,48,45,47,49,57,57,60,58,55,55,54,52,47,47,51,51,63,71,70,69,74,67,58,53,49,49,46,44,43,44,45,46,50,52,51,53,53,48,46,46,45,45,46,50,53,52,55,54,54,52,49,44,44,45,48,48,45,45,48,57,60,57,56,57,54,54,49,46,46,51,50,63,71,71,67,67,70,64,56,50,48,45,43,43,43,45,48,47,50,48,51,55,50,45,45,44,45,45,48,52,49,50,50,49,47,46,45,44,45,48,47,46,45,50,55,55,53,51,53,54,52,47,47,49,50,50,59,70,74,68,67,71,66,60,52,47,46,44,43,44,46,47,49,49,48,49,53,48,47,47,46,45,45,47,50,49,49,47,47,48,48,46,45,47,50,48,45,45,47,48,46,48,49,50,52,49,46,46,49,51,47,58,70,76,72,70,70,66,57,51,47,48,46,43,44,46,44,47,47,47,47,50,48,48,47,46,44,45,45,47,48,47,46,47,51,54,50,49,47,49,50,45,45,45,46,48,46,47,48,48,51,51,51,49,50,47,58,70,71,74,74,69,62,52,53,51,48,44,44,43,43,44,43,44,45,45,45,46,46,45,46,45,45,46,45,44,45,45,46,46,45,48,48,47,51,49,46,45,44,45,47,48,48,45,45,51,47,48,48,50,47,58,71,71,67,69,69,66,59,55,52,47,44,45,47,45,45,46,46,44,42,42,42,43,46,45,44,45,44,43,40,42,41,43,43,43,40,44,48,53,50,45,46,46,47,47,52,52,51,56,66,66,59,56,52,54,61,69,70,67,68,73,74,62,53,50,48,44,53,98,110,107,116,118,119,110,101,97,84,57,55,69,73,81,89,93,96,92,91,97,95,84,75,60,55,70,91,99,110,114,116,122,116,118,136,134,128,129,102,55,59,60,70,72,72,67,65,67,58,52,50,46,43,59,139,176,155,127,139,167,175,154,160,131,67,68,138,162,156,141,152,160,170,166,150,143,139,131,81,55,100,160,163,141,141,137,132,167,157,121,119,101,114,111,58,57,60,70,76,74,71,66,62,56,51,47,45,44,56,122,180,140,83,92,124,150,109,110,100,67,69,146,194,142,73,79,84,143,124,72,75,70,99,81,59,104,173,160,87,72,69,79,153,116,67,81,67,86,99,58,60,58,72,76,74,72,68,66,59,53,48,45,44,56,132,184,134,84,94,128,151,100,97,90,66,63,137,187,114,57,63,66,129,106,58,58,52,88,78,57,99,176,167,77,66,65,79,151,108,63,79,73,97,104,60,58,57,64,65,64,64,57,63,62,54,48,47,45,58,140,199,145,98,102,127,152,116,110,95,65,64,140,193,127,73,77,77,141,123,68,70,66,98,76,58,110,186,161,90,83,88,106,161,126,84,100,95,117,110,60,58,53,58,58,56,59,59,61,57,53,50,46,45,57,128,194,153,99,90,117,152,125,113,108,70,64,145,198,138,79,88,95,164,139,81,82,81,106,78,61,107,184,168,99,93,99,116,170,131,84,96,85,101,106,62,58,56,58,54,57,60,61,59,55,50,46,47,46,55,135,190,136,77,74,112,138,100,99,93,66,64,145,198,132,65,68,72,148,119,62,66,59,98,80,58,105,179,170,82,69,75,95,161,113,70,79,69,87,98,60,56,57,57,57,61,65,60,57,56,51,49,49,46,58,138,192,135,76,73,120,135,91,94,91,65,68,151,192,129,62,66,65,128,109,61,66,58,103,82,57,107,182,162,76,66,74,102,166,112,76,89,77,100,107,62,56,54,58,56,60,65,65,58,56,53,50,46,45,56,135,194,146,95,86,120,144,107,103,103,70,67,152,204,141,76,80,78,141,125,72,71,77,120,83,57,118,191,162,87,85,94,119,175,125,89,101,92,115,112,62,58,56,61,60,57,57,64,60,58,54,49,47,46,59,144,200,141,85,77,105,139,93,89,92,70,69,162,211,143,74,74,74,147,126,67,70,77,116,81,57,122,205,177,86,75,69,91,163,113,80,86,75,105,113,61,58,56,61,61,58,57,58,57,58,53,51,48,46,62,147,198,128,70,65,98,120,70,64,74,66,74,171,208,124,58,56,62,129,107,55,59,62,109,81,59,130,212,175,69,59,53,76,152,103,68,75,72,105,114,60,56,57,65,63,63,62,61,62,56,52,49,46,45,58,146,183,106,67,59,88,103,63,63,78,68,77,182,199,107,60,61,66,122,94,55,56,62,111,84,58,122,200,168,74,60,57,79,137,97,67,73,75,112,114,61,60,58,63,61,62,61,61,59,56,51,50,48,44,60,151,176,132,123,111,118,114,105,102,105,71,77,172,180,116,91,90,96,125,107,92,91,99,131,89,55,120,187,168,135,127,134,149,158,149,143,152,153,164,122,63,63,57,58,58,58,59,58,56,57,55,51,45,45,64,154,192,163,152,157,177,186,172,176,150,70,78,165,197,184,178,170,177,187,188,177,170,175,160,82,58,133,202,199,187,177,173,179,199,171,146,150,146,158,119,62,60,59,61,58,58,59,62,58,59,59,53,45,44,65,164,201,129,80,85,128,149,100,99,96,65,73,170,218,158,111,115,112,169,149,105,105,101,127,77,54,120,205,171,87,77,68,100,161,94,60,72,66,105,112,61,60,58,66,61,59,59,62,56,56,54,52,45,44,67,161,196,129,73,71,115,117,73,67,71,63,71,177,211,118,59,64,64,138,112,58,57,57,113,80,56,115,204,156,57,53,50,77,143,81,52,63,57,98,108,61,60,59,63,63,63,61,56,57,56,51,48,45,43,66,157,196,124,81,81,122,124,76,68,78,65,75,177,202,120,65,69,75,148,113,65,68,67,114,81,61,120,202,165,68,62,55,84,154,95,61,69,65,109,108,59,58,57,66,62,61,63,61,65,61,55,51,47,45,62,151,195,120,86,87,131,137,84,84,89,62,78,172,198,119,76,83,90,147,121,77,82,82,115,81,57,117,200,173,85,68,60,102,157,91,62,74,65,105,109,58,60,62,66,60,59,66,64,61,58,52,48,45,46,61,152,182,107,69,73,117,116,69,70,83,61,74,163,183,108,67,71,73,129,108,61,67,72,107,71,51,121,204,164,66,55,50,85,135,73,54,60,48,92,107,53,61,63,68,62,63,66,65,65,57,54,49,45,46,64,148,168,91,61,68,113,111,66,65,79,67,70,160,176,99,58,67,63,118,99,55,62,65,106,74,49,126,212,149,58,51,48,78,132,69,48,54,46,89,105,55,56,60,69,68,66,63,68,66,59,55,48,45,46,63,131,149,92,77,85,118,117,90,77,81,61,67,162,189,97,61,69,70,122,91,64,72,73,111,71,56,134,203,139,71,69,68,94,129,81,68,79,77,105,100,54,54,57,65,67,63,62,65,62,63,55,49,44,46,57,106,113,97,99,114,111,113,106,95,100,60,64,141,146,101,92,96,98,104,91,92,93,97,111,69,56,118,159,119,106,102,105,112,107,104,101,103,99,99,77,49,50,59,69,67,66,65,61,62,60,53,48,45,45,59,75,76,78,83,99,103,107,96,91,83,57,63,98,96,96,102,101,102,95,96,92,97,102,86,57,54,81,106,98,102,95,94,91,85,85,82,78,76,68,59,54,54,60,65,68,70,71,70,70,59,51,49,46,49,57,57,56,59,61,63,67,67,64,65,60,56,61,65,69,71,71,69,68,70,67,66,69,70,59,53,56,59,61,63,62,59,56,55,52,49,53,50,50,48,52,55,62,60,59,57,62,67,68,69,63,54,48,46,56,67,72,75,72,67,67,64,65,63,60,59,61,55,54,57,55,54,56,53,55,58,60,59,56,57,60,60,58,55,59,58,57,60,63,59,61,62,64,61,59,56,55,58,62,64,59,66,70,63,64,62,53,48,47,56,62,64,65,65,65,65,65,67,77,69,67,70,68,69,69,69,68,68,71,72,85,84,77,81,82,79,69,65,65,62,63,65,63,64,64,61,60,59,56,53,51,54,63,64,63,65,71,72,69,67,61,54,49,50,54,54,53,53,55,54,54,53,52,58,57,58,64,63,59,59,60,60,64,63,65,70,70,66,67,67,65,55,51,53,53,53,53,51,54,56,57,54,52,48,48,50,51,71,64,66,67,66,71,68,68,61,50,50,60,61,59,61,65,64,58,57,53,55,56,58,70,76,71,71,70,68,70,73,74,71,78,78,76,71,71,61,53,53,54,54,58,56,56,62,64,66,65,65,60,57,55,50,57,61,69,68,67,69,70,68,64,53,52,55,55,57,61,63,61,59,54,55,58,55,60,72,76,70,72,68,67,67,64,66,66,67,66,67,69,66,59,56,57,56,53,55,64,65,60,63,65,59,57,56,57,54,51,54,60,67,65,65,69,76,72,60,55,49,46,45,49,47,45,46,49,47,50,49,51,58,62,61,62,56,51,51,53,48,49,56,51,49,57,62,56,55,59,59,55,49,46,53,51,47,50,47,45,44,45,45,48,55,55,60,65,64,67,71,70,67,56,53,47,44,46,48,44,43,42,42,44,45,43,45,49,58,62,57,45,44,44,44,44,45,47,46,46,47,53,58,58,57,50,45,44,44,44,44,45,45,44,44,44,45,45,50,54,51,57,65,67,68,71,66,63,58,53,47,45,45,49,45,42,44,44,43,45,44,45,49,58,60,59,50,43,44,43,43,44,43,45,47,44,51,60,63,57,50,44,44,44,45,46,43,43,45,43,41,44,45,50,49,52,63,69,63,65,69,68,62,55,52,45,43,45,46,44,44,45,43,44,44,46,46,49,59,61,59,48,44,44,45,45,43,43,44,45,46,51,58,59,57,50,44,44,45,44,44,43,42,41,41,42,42,44,47,50,53,70,72,62,61,71,78,70,55,50,45,43,46,47,45,44,45,45,46,47,47,45,49,57,59,52,47,45,44,45,44,45,44,43,43,45,48,55,58,58,48,44,43,43,45,43,43,43,43,44,44,44,46,46,50,53,65,72,65,64,71,76,73,59,51,47,44,45,47,46,46,46,45,46,46,47,50,52,55,57,51,46,46,44,44,44,45,47,46,45,46,47,54,57,57,47,45,43,43,45,44,43,43,45,44,43,44,45,46,49,51,62,69,67,68,71,72,70,60,51,44,44,45,45,45,45,45,45,45,47,49,48,51,52,51,47,43,45,44,43,44,45,45,46,46,44,47,51,52,50,45,45,43,44,45,43,43,43,43,43,43,45,45,46,50,52,60,68,68,66,70,68,64,57,51,45,44,45,46,45,43,46,45,45,45,46,45,47,50,49,45,59,54,43,44,43,45,44,46,45,44,46,49,48,45,46,45,43,44,46,45,45,44,45,46,47,47,48,47,47,60,65,70,71,66,63,62,59,58,53,47,47,48,49,58,78,85,76,64,54,54,50,45,46,47,45,51,49,45,42,45,47,46,46,47,45,48,46,46,46,50,57,65,62,59,58,63,78,74,67,66,69,70,64,49,71,60,67,69,64,62,59,60,53,50,47,46,46,46,69,139,158,159,112,79,84,67,59,64,61,60,59,58,74,79,71,60,60,61,68,66,56,53,49,49,68,119,153,107,84,85,88,141,136,89,82,88,84,74,53,73,59,65,59,57,63,60,57,49,46,47,46,46,46,68,155,184,190,128,91,105,94,125,141,109,99,99,99,140,163,129,103,101,103,112,106,70,80,79,69,87,161,190,132,103,104,98,145,135,90,94,103,101,81,54,74,57,59,57,56,58,58,58,54,49,46,46,48,46,74,163,193,170,129,109,124,130,159,170,123,107,117,132,174,175,134,115,112,115,119,100,82,92,101,95,99,171,181,129,112,112,120,154,134,105,107,114,122,89,51,70,50,54,56,61,62,61,56,52,50,45,45,46,47,79,165,189,173,124,88,106,105,142,175,110,86,98,102,169,197,129,86,86,87,123,176,148,91,98,95,92,166,186,120,89,82,99,143,129,92,93,105,118,91,54,70,58,59,58,61,63,60,56,53,47,45,45,46,47,86,169,189,179,120,85,92,88,140,171,103,79,87,88,162,192,125,83,93,83,125,203,167,99,97,93,95,168,177,111,80,78,82,134,132,89,88,102,108,89,55,66,56,60,58,61,61,58,55,52,46,47,45,47,48,85,166,191,177,129,96,105,101,150,155,105,94,93,96,169,194,132,95,97,98,142,206,174,105,94,96,104,173,178,118,96,90,89,143,137,102,95,106,114,89,55,68,53,58,56,58,58,57,56,51,46,45,45,47,49,85,172,194,175,126,89,96,96,153,153,97,86,86,90,161,191,120,84,92,96,129,191,164,96,93,94,100,167,173,122,90,87,93,145,138,95,90,101,107,86,51,69,53,56,55,55,55,56,55,49,46,45,46,48,49,85,179,201,180,121,81,86,88,151,161,96,83,84,84,155,190,122,78,91,85,128,201,159,88,93,90,92,164,175,118,83,84,90,145,140,86,84,98,103,79,52,62,53,56,53,53,56,53,54,51,45,44,45,47,51,89,173,203,179,121,89,95,97,147,163,105,86,92,94,160,183,119,80,89,85,134,196,153,94,94,93,95,160,167,106,87,102,109,152,132,86,87,92,91,76,53,65,55,57,52,52,56,53,55,53,49,45,44,45,50,94,186,205,174,123,94,94,98,146,170,107,90,97,102,159,184,120,85,92,93,136,196,156,90,91,89,97,158,163,102,93,99,104,148,128,91,89,83,85,72,53,64,56,57,58,60,56,56,56,50,47,45,45,45,49,91,190,201,172,122,85,92,89,138,154,94,85,94,91,151,171,112,82,86,80,126,192,149,81,79,74,82,150,162,103,81,76,90,142,128,85,79,74,80,69,52,65,55,58,60,61,57,55,53,50,47,43,45,47,50,88,173,185,165,115,88,100,91,132,150,95,82,85,91,149,160,107,81,81,80,136,189,135,78,85,77,85,148,146,95,79,77,96,137,115,70,73,78,80,71,49,64,56,56,59,60,56,52,51,52,48,45,44,46,48,86,170,174,138,98,86,91,92,119,123,90,86,92,97,126,125,97,84,87,88,120,145,108,83,92,91,99,131,118,82,81,85,95,125,96,72,78,79,84,69,50,63,56,58,57,57,56,55,54,52,50,47,44,44,48,83,153,146,106,92,92,87,95,108,100,91,90,95,95,101,96,87,86,95,92,92,97,90,86,91,93,95,97,95,80,84,86,92,97,87,88,90,85,82,66,49,57,57,57,56,58,59,56,54,53,49,45,44,46,50,76,111,99,93,93,95,92,93,98,95,93,94,91,87,94,91,86,84,86,85,89,87,81,85,85,81,85,86,89,84,83,87,85,82,81,81,83,77,73,58,46,56,58,59,60,65,64,63,57,53,51,48,49,56,60,67,74,75,76,79,90,90,89,90,92,90,90,82,85,85,77,73,75,69,72,73,74,77,75,74,70,70,74,78,77,70,70,70,68,74,67,59,57,53,49,51,61,77,90,88,89,95,100,87,67,55,51,50,52,52,51,54,62,59,60,69,76,74,65,67,76,72,63,65,67,64,60,57,58,61,59,60,61,62,63,56,56,59,62,58,54,58,60,54,51,49,50,48,43,50,79,48,64,79,80,74,76,77,67,53,47,46,46,47,46,47,46,49,52,51,48,52,56,51,48,52,57,55,49,49,54,50,46,47,53,54,47,46,49,50,48,45,45,48,48,47,46,47,44,42,41,45,45,41,44,62,45,53,60,59,56,53,54,49,45,45,44,43,45,53,51,44,45,56,54,44,44,55,56,45,44,56,58,46,46,54,52,47,41,50,61,50,42,45,53,53,44,43,49,52,44,41,45,47,43,40,43,48,47,46,44,53,59,62,61,62,60,59,57,51,49,46,44,45,45,45,44,45,47,45,43,44,48,50,48,49,52,49,48,50,48,49,48,46,48,52,50,47,46,48,47,46,48,47,45,42,42,43,44,42,41,43,47,52,50,46,64,67,67,63,64,64,65,61,52,48,45,45,48,46,46,44,46,46,47,47,47,49,51,51,54,53,52,54,53,52,53,54,55,57,56,55,53,51,50,50,53,52,47,43,45,45,44,44,44,43,45,45,46,49,51,59,63,64,60,59,58,61,56,45,42,42,42,42,43,43,43,42,42,43,45,44,46,45,46,46,46,45,44,46,46,47,48,46,49,49,45,46,46,44,47,46,44,47,43,43,43,44,43,41,41,42,41,42,46,50,43,44,45,47,47,45,45,45,44,41,39,40,38,38,40,40,38,39,40,41,41,41,42,43,42,42,41,40,40,41,41,40,40,41,41,41,41,40,39,39,40,39,39,40,40,40,41,39,38,38,38,38,39,38,38,50,50,52,50,48,49,50,48,46,48,51,49,49,49,46,48,49,48,47,46,48,51,49,47,47,48,49,49,47,49,48,50,55,59,59,55,53,58,59,58,58,56,58,56,49,52,53,54,55,54,54,55,61,60,50,100,105,103,99,94,96,96,90,86,95,101,98,100,98,91,101,107,104,96,97,102,102,106,105,99,96,107,123,122,112,109,120,143,151,144,138,132,134,139,134,120,115,129,121,118,116,123,131,123,129,121,132,145,153,133,122,126,123,116,119,122,117,111,111,111,107,105,116,121,124,129,133,123,122,118,124,127,132,141,139,132,145,166,156,136,139,150,164,166,149,140,132,120,124,123,112,114,118,121,139,143,137,134,130,130,134,136,137,155,157,105,106,111,114,110,100,100,103,104,102,93,97,107,107,105,104,108,113,117,107,105,107,104,110,130,126,126,146,134,113,116,120,123,102,95,84,83,89,90,85,87,89,86,101,136,142,131,127,126,109,121,124,123,126,131,66,69,69,71,64,64,65,66,65,63,65,67,67,67,63,64,65,67,68,69,67,67,68,68,73,71,69,77,75,67,67,72,69,58,59,58,56,58,58,59,60,58,59,63,73,80,81,81,77,68,72,74,76,76,70,57,57,56,59,55,54,54,56,56,54,56,52,55,56,55,58,58,56,54,57,57,57,59,58,56,54,53,52,51,52,52,54,53,52,52,51,48,50,51,52,54,53,51,50,47,50,49,50,50,51,49,51,52,48,47,67,68,65,62,63,64,63,66,62,63,62,61,66,62,59,62,61,63,62,60,58,58,60,59,57,61,63,59,58,60,60,56,58,61,64,64,60,58,64,66,60,58,57,60,63,56,57,58,60,57,55,60,59,54,50,143,145,139,148,155,149,138,138,139,136,127,135,146,142,140,129,130,138,132,119,119,132,138,125,122,127,138,134,132,119,130,135,126,127,136,133,139,126,133,136,132,133,123,130,138,124,111,125,131,126,124,120,121,118,100,168,171,166,172,182,187,186,175,181,178,182,178,172,169,176,170,165,164,167,165,159,158,164,167,171,160,159,163,165,151,154,157,160,153,154,157,162,165,162,153,155,157,162,155,149,152,150,141,139,163,160,152,147,152,138,148,142,146,144,146,153,150,157,160,148,150,151,146,146,140,145,141,136,147,137,142,144,140,148,142,144,142,138,136,141,139,132,127,130,141,146,131,135,138,140,139,133,136,129,124,124,128,122,122,126,120,134,136,124,123,122,124,120,110,112,122,119,115,117,119,126,128,114,122,128,120,105,116,115,109,117,116,116,116,114,116,115,120,114,103,99,108,105,103,104,106,109,112,109,106,112,111,101,97,99,102,98,101,100,96,93,96,95,102,100,93,87,93,93,93,94,91,95,104,92,93,102,105,99,94,100,97,93,89,87,93,93,88,90,98,109,98,91,92,97,90,77,83,93,89,81,81,85,90,90,83,80,82,79,78,78,83,87,79,69,75,80,79,72,68,67,65,60,61,67,66,60,75,86,65,59,64,70,74,68,67,71,73,71,64,66,77,73,65,67,77,77,66,65,72,73,67,62,62,64,64,63,58,61,68,64,58,58,57,61,62,59,63,62,57,53,53,56,55,54,45,47,46,45,45,47,50,49,47,47,49,48,46,47,48,47,44,45,48,50,45,48,48,46,45,43,48,49,46,45,45,44,45,45,44,44,44,44,42,43,45,45,44,43,41,43,44,43,45,45,43,41,40,44,49,51,52,54,84,99,107,116,109,113,104,103,94,67,48,47,52,66,85,94,91,89,92,90,93,86,73,53,46,46,47,56,66,65,68,72,68,69,68,65,59,48,45,46,49,62,75,75,76,79,83,86,81,78,68,47,60,60,77,150,156,173,178,200,216,165,160,143,89,55,54,63,126,164,156,169,178,205,185,153,146,119,71,50,53,66,123,130,127,132,145,171,147,123,116,88,59,51,51,62,107,130,140,127,156,174,137,122,119,88,47,62,62,87,158,146,147,148,193,219,142,134,119,82,59,57,65,146,164,134,142,163,234,187,128,132,101,66,52,53,76,156,142,147,138,170,218,150,125,123,91,62,52,50,64,118,131,138,121,177,194,126,117,118,93,56,60,61,84,161,146,139,139,192,223,149,134,116,80,56,54,71,150,156,125,131,164,236,170,117,125,97,63,52,52,77,148,131,139,138,172,211,141,120,117,89,61,52,52,69,125,124,130,126,172,195,135,114,116,91,54,59,57,79,156,139,143,142,199,223,141,135,116,75,56,55,71,144,149,129,134,163,230,175,124,123,94,64,52,55,81,148,135,140,138,174,212,147,117,110,86,57,52,52,70,131,131,129,130,179,205,136,111,110,86,53,55,55,76,153,131,137,138,194,216,137,132,110,74,54,56,74,151,145,128,139,157,220,165,122,119,89,60,53,53,81,147,123,126,130,179,215,144,117,113,88,58,51,52,71,135,128,122,124,179,194,126,115,115,88,53,57,54,80,159,139,138,146,198,213,143,142,115,80,53,53,74,160,153,128,132,153,221,166,118,115,92,59,52,53,83,150,129,135,134,181,213,150,124,121,90,58,49,50,75,138,130,130,128,190,187,120,116,114,84,53,57,55,81,154,141,135,149,199,212,142,135,122,81,53,52,74,155,156,128,140,174,226,174,133,131,98,60,52,54,78,146,147,151,147,187,223,153,130,133,96,58,48,50,76,146,140,133,139,193,197,129,126,121,88,54,55,57,80,150,140,139,142,193,208,131,124,114,91,56,52,68,150,152,123,134,174,226,157,117,117,86,60,52,51,80,141,123,140,133,174,213,145,129,121,90,56,49,51,78,140,127,122,129,189,202,130,126,116,84,56,54,53,76,144,147,151,156,198,203,137,136,117,98,59,50,66,148,143,121,119,156,221,155,117,111,86,59,51,51,84,142,124,126,124,175,209,140,120,118,84,56,49,50,78,140,125,120,122,186,191,125,130,121,95,58,52,52,76,150,159,153,156,198,198,135,129,105,77,55,50,64,137,136,115,118,144,208,143,106,111,85,53,48,53,86,145,127,128,135,184,207,140,125,118,84,54,50,50,71,130,120,119,110,176,190,129,140,145,108,56,52,53,78,143,154,150,136,192,191,131,134,94,65,51,50,62,136,134,114,116,143,206,143,106,111,80,52,49,49,80,148,128,124,127,175,210,149,124,117,79,51,48,48,71,125,112,112,117,167,179,169,208,182,108,53,51,52,75,132,130,133,124,181,183,121,122,94,65,51,50,61,129,122,110,118,144,198,143,108,101,79,53,49,50,75,136,123,115,116,165,199,136,114,112,81,51,46,46,71,131,116,112,124,171,176,199,245,195,107,53,48,50,62,96,101,107,113,139,130,103,102,91,60,49,48,54,103,114,106,108,128,161,125,110,98,76,51,47,47,66,115,114,108,111,139,163,125,112,106,77,51,46,46,65,116,110,106,115,155,153,131,136,122,83,53,47,48,47,51,58,61,65,65,57,62,62,58,48,46,47,46,57,65,64,65,72,81,71,66,63,55,47,44,44,47,60,66,67,64,69,74,70,69,63,52,46,44,45,49,59,61,63,65,70,69,59,55,61,54,46,46,46,46,46,45,47,46,46,45,44,45,44,45,45,45,44,43,43,44,45,45,44,43,42,43,43,44,44,45,43,43,43,42,44,42,42,44,42,43,42,43,43,45,44,43,41,43,44,41,41,40,41,43,45,46,43,44,45,47,46,46,44,44,45,44,43,44,43,43,43,43,43,43,43,45,43,43,42,43,43,43,42,43,43,43,43,42,42,44,43,42,43,42,42,42,43,42,43,43,42,43,44,45,43,43,42,44,45,44,42,42,43,43,43,43,43,42,41,42,44,42,43,41,42,41,41,41,41,42,41,41,42,42,41,42,42,41,42,41,41,42,41,42,42,42,41,41,41,41,44,45,40,41,41,41,43,42,44,43,41,41,43,46,47,44,42,42,42,40,41,41,41,41,42,41,41,41,40,41,40,38,38,40,39,38,39,40,40,39,38,40,40,39,38,39,39,38,39,40,42,39,39,39,40,47,44,40,42,41,41,42,40,42,42,40,39,41,44,45,42,87,83,86,86,79,75,84,91,89,81,81,87,89,82,83,93,94,80,77,91,90,80,72,78,78,69,65,73,79,74,70,76,79,78,67,68,76,76,71,67,73,75,73,65,67,71,73,71,68,71,72,71,66,71,66,111,105,113,125,114,101,116,125,118,101,99,117,126,110,112,135,140,115,103,120,117,106,91,96,111,99,84,91,104,102,96,98,106,112,87,90,98,101,99,87,94,109,107,88,87,93,100,93,85,84,95,98,86,86,84,92,87,84,92,92,84,79,83,89,94,83,80,89,92,84,84,96,93,85,74,81,86,80,71,80,88,82,71,77,86,86,74,73,81,85,82,72,78,84,79,73,80,87,87,77,72,78,80,79,70,73,83,79,71,80,140,145,145,145,145,146,146,145,145,145,146,146,145,145,145,145,145,145,145,146,146,145,146,146,146,145,146,146,146,145,145,146,146,146,146,146,146,146,146,146,146,146,145,146,146,146,146,146,146,146,146,146,146,146,152,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,139,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,140,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,145,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,148,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,148,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,148,146,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,146,155,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,155])}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorIndex : new MFInt32([0,0,2,2,-1,0,3,4,0,-1,1,2,2,2,-1,2,0,0,2,-1,5,0,0,4,-1,5,4,6,-1]),
                                                      texCoordIndex : new MFInt32([6,7,8,9,-1,0,10,11,5,-1,8,12,14,9,-1,12,3,2,14,-1,13,1,4,15,-1,14,15,10,-1]),
                                                      coordIndex : new MFInt32([0,1,3,4,-1,0,4,5,2,-1,6,7,8,4,-1,12,11,9,8,-1,8,9,10,5,-1,8,5,4,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0,0,0,0.176471,0.130517,0.121736,0.240642,0.215139,0.196889,0.0802139,0.0717129,0.0656296,0.0695187,0.0621511,0.0568789,0.171123,0.152987,0.14001,0.0962567,0.0860554,0.0787555])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([-0.0493227,0.988889,-0.00238436,0.885624,0,0.865397,0,0,0.997616,0.885624,0.950677,0.988889,27.1484,0.865397,27.1484,0,10.3415,0,10.3415,0.865397,-0.0202643,0.92496,0.979736,0.92496,9.65033,0,-0.0190693,0.922331,9.65033,0.865397,0.980931,0.922331])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-100,40.7449,-263.402,-100,-100,-263.402,0,103.067,-263.402,-100,-100,85.8949,-100,40.7449,85.895,0,103.067,23.8083,-100,-100,85.8948,-86.5857,-100,96.3416,-86.5857,40.7447,96.3416,186.313,40.7448,98.2477,187.263,103.067,24.761,186.313,-99.9998,98.2477,-86.5855,-99.9999,96.3413])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("Boden_1"),
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          DEF : new SFString("_5"),
                                                          image : new SFImage([128,128,1,151,142,119,111,115,129,138,141,136,152,132,135,164,165,154,141,166,161,166,163,139,132,127,129,151,138,125,129,141,125,118,123,129,134,147,154,151,149,139,133,136,148,161,156,155,135,130,125,134,107,45,181,154,148,150,130,126,129,132,159,174,156,141,140,145,154,161,155,140,142,138,136,140,125,138,127,127,121,138,150,148,161,145,148,136,132,139,156,147,154,154,143,130,116,119,134,133,131,165,136,130,120,114,104,119,120,126,147,143,131,142,129,121,129,134,152,111,118,119,125,145,122,122,110,122,147,142,166,151,132,120,122,114,142,144,143,147,154,140,140,158,166,156,144,164,165,159,161,135,127,130,136,145,135,127,130,138,126,126,143,143,131,151,149,157,150,138,133,141,155,158,149,149,141,127,130,148,107,45,178,156,158,147,125,136,123,129,159,177,159,149,157,133,150,159,162,152,155,152,133,143,139,151,134,130,139,140,149,149,151,135,145,139,132,143,142,136,132,139,144,131,127,115,125,121,133,148,147,132,121,112,110,115,124,142,147,141,125,136,123,126,132,133,140,115,120,123,142,142,120,131,110,114,149,140,159,135,143,135,118,114,120,130,159,158,136,123,125,136,140,155,162,149,159,158,149,139,132,145,129,132,136,144,134,135,134,125,127,138,134,149,147,141,152,157,139,150,149,138,131,142,138,147,144,136,104,44,178,158,130,127,123,122,129,123,139,144,135,139,164,166,144,149,152,150,147,133,132,138,140,131,136,139,156,157,151,144,156,159,154,134,144,155,135,135,122,122,139,132,145,127,133,124,123,141,144,140,120,119,109,114,140,145,155,141,149,147,136,121,134,130,140,133,142,120,156,136,131,133,120,116,132,132,143,127,149,150,119,122,111,131,147,135,122,121,133,150,144,155,158,163,149,143,142,147,139,143,123,133,141,149,144,130,134,121,121,129,138,133,142,149,159,161,148,145,135,135,135,131,123,129,131,124,104,45,180,155,130,125,127,123,139,126,135,132,130,142,168,170,148,165,161,152,132,116,130,125,129,127,132,145,149,143,150,139,158,164,152,150,161,154,133,127,136,135,130,139,139,145,131,122,112,151,139,138,113,124,123,119,150,145,159,155,162,152,144,133,133,127,135,136,139,112,142,144,135,139,132,116,120,126,143,121,127,124,122,145,132,140,122,122,127,136,132,126,124,140,155,162,149,133,155,151,126,135,127,129,144,132,129,126,121,123,127,131,123,118,139,155,161,143,148,133,123,123,124,124,116,131,132,130,111,47,178,147,140,127,116,132,149,144,138,144,122,132,144,158,145,142,135,145,151,133,131,127,125,126,133,127,114,122,121,161,163,140,148,136,136,138,127,133,124,131,163,159,145,142,124,124,131,139,132,147,125,143,112,130,145,136,147,156,163,140,152,136,138,121,138,133,126,127,126,124,141,141,148,131,119,113,119,141,123,123,152,140,133,131,129,119,133,142,147,136,139,152,168,155,140,145,142,138,131,121,125,143,125,142,144,141,136,132,131,132,127,119,141,129,150,138,135,124,118,123,136,115,123,125,127,165,122,46,180,138,136,127,122,121,131,145,147,119,127,138,136,142,144,143,127,132,147,142,142,131,126,123,125,115,110,114,127,134,147,148,152,138,152,139,150,147,141,139,150,154,144,145,120,124,140,130,139,145,125,118,122,140,145,145,138,134,148,133,151,158,151,139,141,141,148,132,131,126,136,168,163,148,143,121,114,157,125,119,141,134,132,121,125,120,134,144,140,142,143,164,162,148,155,159,142,132,139,122,131,138,122,142,136,148,135,126,120,130,136,118,135,127,150,157,149,126,123,120,138,116,124,123,123,159,124,47,178,140,133,119,122,115,123,155,135,109,140,156,148,149,140,138,123,131,140,151,144,133,127,126,129,122,115,120,127,124,136,140,155,138,161,151,140,147,149,141,150,158,143,143,116,125,139,150,147,131,130,119,131,141,135,143,147,121,141,139,139,154,140,136,134,147,149,135,121,132,141,152,161,142,152,136,132,143,130,144,144,130,129,139,130,131,140,124,129,140,143,154,144,156,138,163,156,144,141,124,133,135,135,144,140,150,130,115,122,119,124,133,135,133,143,143,133,130,132,130,129,125,127,129,130,125,122,46,178,151,140,119,122,126,142,144,130,130,132,151,144,133,135,126,123,120,136,145,138,151,125,127,133,126,109,139,125,121,139,147,156,141,138,132,144,143,162,142,147,151,129,119,116,133,130,143,171,136,131,118,134,130,140,143,145,127,123,140,139,132,133,148,147,152,154,139,132,148,148,148,157,163,148,150,130,138,126,147,150,140,127,132,132,129,130,119,124,130,142,132,134,144,136,155,149,152,142,130,129,132,136,149,132,140,134,124,120,121,123,127,136,130,147,129,133,138,134,131,129,135,130,125,136,121,116,45,177,148,134,121,130,141,141,140,126,130,133,148,142,140,143,129,122,121,140,136,136,151,147,127,130,122,115,143,121,125,143,155,159,143,135,135,139,134,161,148,151,158,131,124,122,136,134,145,158,136,135,124,130,132,134,154,148,122,120,126,121,126,139,138,139,151,149,132,125,147,157,159,155,161,145,139,126,163,139,134,135,132,126,125,126,132,139,134,132,126,124,116,140,130,138,144,148,148,141,138,127,131,123,132,134,148,132,136,132,142,121,134,151,142,144,136,138,142,147,143,150,138,123,132,115,123,105,48,178,159,150,136,142,149,134,129,116,123,123,145,149,151,154,142,130,127,132,140,149,155,158,142,131,121,124,148,131,145,149,152,162,152,143,144,132,135,143,138,133,143,134,138,147,134,142,151,147,141,140,122,131,127,124,131,148,134,129,119,112,118,131,136,161,174,147,125,105,130,148,127,144,155,124,120,123,158,144,123,132,131,129,122,136,150,142,134,134,114,118,126,132,130,133,140,155,142,143,154,138,120,121,129,130,138,135,134,135,142,131,144,145,148,141,132,133,135,152,147,145,122,125,135,119,127,110,48,177,149,138,141,157,156,141,132,119,119,123,141,147,143,140,134,130,123,131,149,145,158,156,151,150,129,129,158,134,150,144,156,163,154,162,156,141,155,142,142,136,131,121,130,134,126,144,148,142,142,152,125,138,120,120,126,142,138,125,116,118,115,132,138,155,170,156,134,113,130,138,113,132,149,130,116,130,145,135,131,136,131,113,121,129,143,139,130,129,120,118,132,132,133,140,147,142,152,145,154,138,106,115,115,129,134,149,147,149,147,140,135,136,158,144,150,150,136,144,141,141,135,135,127,124,130,115,45,180,140,134,133,150,158,151,145,129,125,120,142,147,156,136,142,127,115,118,142,152,169,151,138,143,141,136,145,132,140,134,148,164,162,154,130,140,152,156,144,130,130,122,133,130,125,133,142,130,132,143,145,125,123,136,135,141,143,131,105,116,114,135,138,138,143,152,147,143,142,129,127,134,166,154,140,141,123,140,143,129,130,122,109,126,136,141,156,151,113,119,124,124,145,148,150,154,156,143,149,150,129,108,115,144,134,135,145,143,142,124,136,136,141,145,149,157,147,120,124,147,129,123,122,135,124,107,45,177,140,125,139,154,151,145,142,130,144,139,150,149,145,143,159,136,114,109,130,145,133,147,135,136,150,141,141,138,139,148,147,147,162,135,131,131,143,157,149,139,129,123,139,135,133,141,157,134,161,141,141,112,108,129,142,133,130,118,104,115,115,119,116,133,136,133,142,148,143,148,149,144,164,164,145,157,118,131,138,122,122,124,107,122,135,151,158,148,120,112,123,132,143,144,148,139,141,145,139,148,134,115,114,142,150,140,142,145,140,113,125,141,136,144,140,148,143,124,127,134,123,124,119,135,123,111,45,177,145,127,135,158,152,149,150,132,144,142,152,151,161,151,162,135,109,120,140,156,145,143,143,141,151,150,126,135,151,161,145,136,159,135,131,123,138,149,156,147,144,140,149,158,149,141,151,144,161,143,122,110,110,133,147,135,135,119,116,123,123,115,115,136,150,149,141,139,142,141,148,147,163,147,148,154,130,132,126,122,129,124,118,111,119,125,147,138,122,119,144,141,154,157,161,141,139,122,133,126,138,121,120,141,154,144,144,138,132,122,123,127,130,147,132,144,147,135,127,140,126,130,130,115,130,129,44,178,149,136,126,131,148,152,144,123,135,133,143,162,163,163,148,139,124,130,131,156,141,134,120,127,141,130,123,135,147,148,130,126,141,143,138,133,136,125,134,145,151,148,158,149,147,134,138,157,143,136,114,121,129,149,139,132,131,126,119,125,114,118,121,134,148,152,136,139,145,144,141,154,156,147,161,143,138,136,132,131,133,125,120,112,125,122,145,141,118,114,145,154,162,159,162,136,139,136,143,126,133,129,119,138,150,161,139,136,135,122,127,133,133,144,129,145,143,127,138,126,135,130,134,116,135,125,44,177,151,144,129,124,147,149,152,123,142,135,142,162,154,159,139,142,131,140,136,154,138,139,125,129,127,131,124,126,147,149,135,123,135,159,144,134,143,138,138,142,150,145,143,149,151,141,132,149,145,132,106,125,134,145,141,132,134,120,120,132,111,118,114,130,148,135,127,139,148,149,142,144,139,140,151,159,139,141,148,122,114,119,147,148,148,143,142,140,127,126,131,151,165,155,148,129,122,140,133,123,126,139,123,122,132,127,127,130,132,116,121,125,139,141,132,139,132,135,130,116,126,135,129,129,139,110,44,177,157,149,136,135,127,132,148,130,142,138,145,159,142,152,136,138,140,135,140,147,151,134,143,136,133,138,125,122,123,155,148,125,127,139,150,143,127,156,156,163,150,129,134,141,154,149,154,156,135,136,120,129,124,139,151,140,118,120,119,124,125,108,104,126,140,134,113,118,142,139,142,148,136,127,142,152,152,141,142,119,122,134,149,157,150,138,144,140,132,130,134,145,156,164,139,126,124,138,132,129,134,139,120,115,130,126,130,129,133,123,122,120,133,134,131,139,132,134,132,120,132,136,127,130,142,105,45,176,154,138,125,134,138,136,132,135,134,134,140,142,131,138,138,138,136,142,149,144,152,133,150,149,132,143,126,114,115,141,142,129,131,145,136,132,126,144,159,163,136,134,143,147,156,155,144,145,140,132,121,113,115,136,144,134,129,121,131,133,123,119,113,126,139,133,124,120,136,135,133,129,136,129,145,155,151,135,156,122,142,136,134,124,147,145,135,127,132,129,138,131,141,163,150,136,134,127,116,123,143,126,118,122,127,141,143,124,125,141,123,126,131,130,141,122,112,131,138,135,139,126,136,138,144,111,44,176,147,141,126,135,138,135,129,140,131,152,158,131,134,151,132,123,136,155,143,154,152,135,161,163,124,115,113,120,125,133,144,150,144,125,120,113,125,136,140,141,139,144,157,165,158,156,140,151,139,141,123,109,115,138,144,143,145,149,139,140,134,124,141,133,123,123,139,145,155,152,148,130,135,142,158,164,154,138,149,138,143,142,134,132,145,143,134,129,126,138,155,134,150,150,156,133,140,136,120,133,134,123,122,118,119,131,136,132,124,147,138,126,127,145,134,123,108,130,144,129,138,122,134,148,161,108,44,176,152,136,140,147,142,129,124,151,131,145,154,140,140,141,134,129,130,141,157,161,155,152,157,157,132,120,120,131,129,141,143,143,136,123,127,129,138,136,143,133,147,138,162,175,161,150,142,155,136,139,131,123,127,145,143,139,148,140,133,139,147,133,145,132,129,124,139,143,157,142,138,135,147,152,148,163,150,139,156,141,135,143,144,148,147,139,131,130,159,158,164,149,143,139,149,154,157,149,132,140,124,126,125,109,113,133,156,142,143,136,127,122,131,139,135,133,116,124,134,157,143,139,148,155,149,106,44,177,133,114,127,131,139,140,135,119,127,129,135,141,149,155,144,133,131,138,143,155,149,162,158,162,166,129,121,115,113,132,143,123,118,126,133,130,133,158,150,145,147,148,156,144,162,154,132,151,132,133,152,138,140,145,142,139,152,141,119,126,130,161,147,134,138,145,147,130,125,126,132,134,156,150,152,149,150,148,144,121,116,122,150,142,142,135,158,150,152,138,136,148,139,141,140,148,150,157,154,143,139,126,129,131,120,122,145,154,140,131,142,135,138,140,148,124,103,115,122,157,162,151,154,147,144,108,44,175,127,109,115,133,140,127,127,132,132,150,129,135,129,136,138,136,129,126,140,148,144,139,154,152,158,140,145,131,152,143,151,135,129,118,123,126,147,145,155,149,150,159,169,165,158,134,132,132,129,132,130,127,142,133,132,141,126,130,124,123,150,139,139,139,151,148,151,131,129,121,119,123,131,140,139,161,156,134,142,120,109,124,161,142,143,139,159,150,133,122,135,138,140,148,140,147,139,163,149,148,139,138,143,139,121,123,161,143,129,142,133,133,134,135,141,120,108,115,122,161,166,150,158,155,152,107,44,175,126,108,112,145,141,130,136,147,148,149,132,134,127,134,144,135,136,142,134,147,154,142,165,152,139,140,143,134,152,138,140,123,125,121,126,140,162,156,154,150,154,177,163,165,158,130,120,149,133,133,130,130,145,133,133,140,122,123,126,129,149,145,135,145,161,162,156,132,130,118,123,116,134,136,133,168,141,127,139,147,123,131,143,139,138,120,120,120,126,135,127,139,131,142,154,163,136,147,151,135,136,135,132,131,133,166,151,143,141,135,130,130,139,144,138,133,138,133,135,150,170,156,161,147,162,110,45,177,136,120,113,130,131,142,134,131,140,130,140,131,126,140,154,147,136,138,131,155,136,147,130,120,116,120,124,129,151,147,129,129,122,135,141,147,154,136,158,154,162,168,177,151,155,131,132,148,139,134,129,143,171,155,132,121,122,125,139,140,130,129,135,143,147,149,144,125,136,113,125,142,143,124,129,130,136,141,138,149,130,132,143,140,125,109,122,127,132,141,133,141,140,134,145,154,133,134,155,136,145,139,139,151,151,163,156,140,140,134,127,136,152,151,138,138,132,139,138,145,170,163,168,144,155,119,44,176,141,120,104,122,135,145,145,130,124,131,143,125,127,152,150,148,145,136,141,151,143,148,127,120,115,105,120,134,147,144,122,139,133,144,139,141,158,152,163,163,165,164,164,156,166,138,134,124,135,133,129,150,170,157,142,114,115,129,133,133,116,120,129,134,162,156,129,130,145,125,135,145,144,115,126,124,155,148,142,129,118,135,136,134,113,115,131,144,133,130,125,145,136,123,149,155,138,131,133,156,126,140,151,166,176,161,136,119,118,120,112,121,143,143,152,138,150,156,147,135,163,169,163,155,147,107,45,178,148,133,131,124,132,132,136,134,133,135,132,127,124,149,139,134,147,145,139,149,154,130,130,125,130,121,123,139,126,133,125,129,133,149,141,163,175,175,174,169,171,164,157,159,151,143,145,107,114,120,135,143,149,148,152,129,132,123,127,121,118,116,125,133,157,159,135,127,138,136,142,161,140,118,132,121,158,131,131,114,121,135,133,125,120,123,124,129,122,135,136,159,145,144,155,149,135,126,125,155,133,154,154,174,174,164,124,130,139,120,118,127,135,141,135,140,145,141,132,124,165,156,154,151,145,120,47,177,140,132,139,121,126,141,125,150,145,151,136,134,142,133,132,131,138,144,136,140,147,138,144,141,122,130,121,127,127,126,122,138,150,141,132,156,170,175,171,174,164,162,162,157,154,144,132,113,114,116,141,152,143,148,147,130,130,123,131,120,122,121,136,138,152,152,141,131,132,141,156,155,131,123,133,136,156,125,130,127,132,130,135,118,125,131,129,127,116,131,143,136,162,166,152,133,132,129,154,136,159,163,158,150,149,147,125,144,135,144,133,127,125,152,124,136,144,143,138,155,148,142,145,138,123,126,47,181,139,133,141,124,116,139,120,135,151,143,131,150,144,141,131,143,141,129,144,149,156,147,152,142,126,121,130,126,116,138,133,152,151,154,134,135,148,169,169,158,149,168,174,168,169,159,130,118,141,138,131,162,158,145,141,138,132,132,126,120,136,123,145,152,134,134,143,142,144,148,157,141,143,133,142,139,154,131,138,121,132,125,130,119,119,129,121,120,113,125,130,139,142,150,150,134,122,141,148,136,134,147,157,149,133,150,138,129,125,133,135,136,131,143,148,126,133,148,148,152,169,157,135,140,143,125,47,175,149,144,145,127,129,143,126,127,133,136,124,121,142,135,132,133,134,143,151,170,156,150,154,163,149,131,127,131,127,131,133,143,140,151,145,142,161,169,169,162,140,159,156,165,148,155,143,150,154,139,138,151,145,126,131,127,133,127,126,130,127,127,125,141,145,148,143,138,139,151,148,168,156,159,145,141,145,129,124,119,131,116,126,124,131,129,119,118,114,119,129,139,134,132,142,129,124,135,134,134,120,142,164,132,129,152,129,118,120,120,129,145,136,136,142,125,123,141,141,164,157,151,134,139,150,122,46,174,148,147,130,130,130,149,133,144,140,124,121,114,135,125,131,129,131,142,148,159,145,150,147,159,132,133,123,122,131,124,130,136,125,142,143,142,156,166,151,159,136,151,151,157,148,152,145,154,155,127,127,142,147,134,134,120,124,118,123,123,126,125,109,134,151,151,131,136,136,151,142,166,156,171,139,140,81,85,83,75,70,76,72,80,75,73,78,73,72,74,74,81,75,83,85,82,75,80,80,75,79,82,77,81,81,80,70,71,70,72,74,73,82,83,77,78,76,83,83,94,81,84,79,78,79,69,36,140,84,78,81,77,73,80,79,78,75,74,74,73,81,78,84,72,78,84,79,81,75,79,80,77,70,75,71,75,75,78,77,84,74,78,87,82,86,89,86,83,73,70,75,80,85,78,72,81,83,77,78,81,82,81,78,73,73,76,72,74,78,68,72,78,88,87,80,81,81,85,83,92,85,82,73,76,46,49,48,46,44,47,46,46,44,45,46,45,45,46,44,46,44,47,48,47,45,46,47,46,45,47,46,45,46,45,45,45,45,44,44,46,47,46,45,46,46,47,47,50,46,48,48,47,45,43,34,81,50,46,47,46,44,46,47,46,45,44,44,45,46,47,48,46,46,48,46,46,45,45,44,44,44,45,44,44,44,45,46,46,44,44,45,45,47,47,48,45,46,44,44,45,44,45,44,46,48,46,48,46,48,46,45,44,46,45,45,45,45,44,45,45,47,48,48,47,45,47,46,48,49,47,44,44,170,182,180,178,181,177,176,180,181,181,177,177,178,180,176,176,176,177,177,177,181,180,178,175,156,151,183,177,178,176,178,177,177,178,178,177,180,178,178,180,177,182,181,182,180,180,182,182,180,172,127,188,182,178,178,177,178,178,180,181,182,177,176,178,178,181,178,177,181,180,180,182,178,180,180,172,129,189,180,178,178,181,180,178,177,177,178,182,183,181,181,177,177,180,178,176,177,177,178,180,182,158,151,183,182,180,177,177,181,177,181,180,180,181,176,181,181,180,178,180,178,182,180,176,181,183,181,178,174,174,165,163,162,158,156,163,168,170,164,158,163,162,157,158,158,161,155,162,170,171,163,155,115,115,177,163,164,157,169,161,159,158,161,159,162,163,163,162,164,170,170,172,172,170,174,176,171,150,73,186,169,159,169,162,162,156,163,181,176,158,157,163,168,164,157,163,172,169,164,168,168,170,169,145,71,187,174,175,176,168,169,168,161,161,163,171,177,175,170,162,156,166,164,159,164,161,165,164,175,122,115,180,176,165,161,156,164,169,172,168,168,165,156,164,168,162,165,169,171,176,166,157,162,169,168,161,171,144,150,144,143,140,140,143,154,150,140,136,138,131,126,149,130,118,121,131,138,143,134,124,74,105,172,135,130,143,155,138,136,161,140,144,144,152,171,152,155,155,142,139,135,133,151,141,138,119,47,177,147,143,139,139,133,120,135,151,144,131,136,145,154,139,135,143,161,140,136,156,157,139,151,108,45,180,148,141,140,154,141,131,140,133,132,144,148,166,141,135,138,131,124,124,130,142,130,132,150,81,105,176,162,141,132,132,130,143,143,152,141,129,138,138,143,151,138,136,154,154,145,131,130,134,138,125,170,154,157,155,151,136,140,133,138,149,142,143,139,119,123,141,120,114,129,122,140,150,140,132,77,105,170,135,138,140,147,135,135,150,147,150,143,150,158,155,161,161,136,140,145,133,154,142,148,122,47,177,141,135,142,138,129,118,133,140,142,133,143,144,138,139,136,148,139,133,125,149,151,139,152,114,45,178,152,125,136,151,142,127,132,129,138,131,141,163,150,136,134,127,116,123,133,139,122,130,150,82,105,182,163,147,136,142,131,140,136,154,147,131,141,135,145,154,156,133,138,151,148,136,148,142,127,124,174,162,143,150,130,136,134,131,144,148,138,139,130,122,138,133,120,125,135,139,147,158,142,142,69,104,166,143,150,130,131,131,127,144,150,147,131,147,159,163,155,144,139,142,147,144,154,147,165,126,46,180,139,124,127,136,139,125,120,133,144,134,136,143,118,125,130,136,145,142,154,139,156,141,152,130,46,178,158,136,140,143,130,125,144,156,163,152,151,142,149,148,158,142,124,135,139,124,134,127,140,84,104,168,171,149,138,135,131,130,139,151,144,130,131,131,142,142,158,135,123,154,142,142,141,134,126,125,174,166,155,144,142,126,147,138,149,138,158,156,142,123,135,116,119,129,150,141,136,141,133,129,77,104,170,141,130,122,120,130,125,139,150,150,139,148,132,151,152,131,143,161,162,151,161,143,136,118,45,181,154,131,134,135,129,134,134,151,149,125,121,132,123,125,124,118,144,165,142,149,145,145,148,115,45,178,151,149,143,147,147,139,164,148,150,147,142,133,147,150,155,156,149,140,132,123,125,133,154,87,104,170,155,140,139,135,132,136,148,138,130,114,135,139,142,144,138,147,155,159,151,165,148,155,147,130,172,149,143,152,147,134,148,145,145,141,151,140,159,131,138,125,132,125,136,152,132,138,129,135,78,105,170,139,132,119,130,131,130,151,157,135,145,148,136,145,158,135,141,152,161,157,155,144,127,113,44,178,147,130,134,132,131,140,131,143,145,135,131,135,123,129,131,122,140,163,149,155,150,151,141,113,44,176,155,152,131,141,149,150,152,138,136,148,139,141,140,148,150,157,154,143,141,126,126,135,156,83,104,165,143,134,148,139,139,133,133,141,134,114,140,141,142,144,133,134,156,145,155,151,168,162,166,138,175,152,130,141,135,141,129,144,157,150,135,135,141,119,126,122,139,123,131,143,131,139,130,136,81,104,169,133,120,114,131,129,143,142,158,156,165,151,155,150,139,150,152,150,152,149,157,168,141,107,48,180,148,140,142,139,130,131,125,139,131,131,126,127,122,123,122,129,139,151,162,136,150,125,141,116,46,177,162,139,154,138,135,133,123,119,129,135,135,147,147,157,135,163,149,142,136,148,140,143,148,79,104,163,142,134,136,143,151,142,134,152,141,124,133,172,150,143,119,134,150,163,142,142,142,136,140,133,172,148,141,136,132,126,131,138,151,142,135,145,140,123,118,119,136,124,133,133,129,142,138,136,82,104,165,140,122,125,151,150,155,147,161,158,149,159,149,152,138,143,145,133,148,142,150,169,164,106,48,180,150,147,148,135,134,127,140,136,132,131,131,134,126,124,125,130,140,149,158,134,141,131,135,122,47,178,151,139,143,125,119,120,126,135,127,139,131,142,154,163,136,147,151,135,132,140,132,140,149,72,104,163,135,135,134,141,140,142,140,136,131,124,136,177,161,159,115,150,151,158,132,145,152,131,124,130,171,170,147,161,136,133,142,130,134,150,132,135,132,127,132,138,135,115,130,123,118,130,145,140,84,104,165,130,115,133,159,152,151,158,149,148,152,142,127,131,141,147,149,124,140,144,156,157,147,118,47,177,138,133,135,130,131,148,135,131,130,126,118,122,118,132,141,131,150,151,163,156,139,155,140,121,45,177,149,154,127,106,116,143,133,136,129,143,144,121,142,151,132,133,150,152,149,138,141,156,131,76,104,159,127,141,142,130,127,126,134,118,113,113,139,156,150,145,147,134,131,157,162,138,141,151,129,133,172,175,148,157,140,136,151,136,143,150,131,133,126,131,133,132,131,115,124,122,121,123,139,134,84,105,172,145,118,138,149,150,145,164,151,133,140,131,129,127,140,144,151,135,143,147,147,159,140,110,47,180,148,140,126,124,121,145,140,145,127,132,113,116,126,123,136,141,145,151,147,163,155,150,140,113,44,177,152,138,125,112,116,144,133,130,125,145,136,123,149,155,138,131,133,156,142,133,141,149,125,77,104,163,136,143,148,125,135,120,125,111,111,115,140,163,145,144,138,125,131,159,158,139,135,140,126,138,171,157,141,174,151,142,162,158,164,156,133,134,140,124,141,142,125,124,126,130,134,135,149,142,80,105,171,147,133,162,139,145,143,155,166,154,147,133,143,132,126,130,126,155,127,138,147,149,143,113,46,181,156,139,125,119,113,140,139,149,148,139,121,113,125,132,135,141,133,144,147,152,156,129,120,96,44,177,152,121,115,133,127,122,115,135,144,157,159,161,152,142,129,125,145,144,151,155,166,143,134,77,104,159,135,142,141,124,126,132,118,110,119,127,148,148,152,158,143,134,131,149,162,147,132,132,142,134,172,170,158,166,149,175,145,142,143,154,138,143,136,125,124,124,115,125,127,141,132,144,145,148,78,104,159,139,145,150,150,152,151,131,132,135,144,159,154,143,126,133,136,141,132,132,135,134,138,108,45,181,175,149,131,113,118,138,142,151,142,138,134,129,126,147,144,162,150,148,151,152,152,126,140,114,44,177,150,124,123,122,124,126,114,133,133,129,156,166,152,131,130,135,148,139,136,152,162,141,135,74,104,159,135,149,141,126,115,135,124,119,113,120,130,136,144,144,151,129,127,159,145,143,126,121,130,135,171,166,162,147,139,152,155,157,158,147,143,147,143,130,120,125,111,116,132,122,130,136,156,152,72,104,168,144,147,163,158,148,150,140,125,133,131,141,152,135,127,139,149,143,129,133,127,132,139,106,44,181,171,144,135,124,120,132,143,141,134,118,129,133,122,138,138,155,151,150,151,148,154,133,134,110,44,177,144,124,116,126,123,120,113,125,130,139,142,150,150,134,122,141,148,136,132,140,159,144,131,76,105,164,141,133,140,132,114,127,130,118,123,116,134,136,133,148,157,132,135,158,144,136,133,112,116,147,171,151,155,143,144,155,159,149,144,149,145,144,145,143,129,123,126,111,118,121,113,129,143,151,83,104,166,139,151,130,158,145,131,142,134,131,133,149,145,142,134,124,140,147,145,139,131,138,135,103,45,182,163,148,145,132,148,144,148,148,143,136,133,149,158,134,133,152,144,150,144,144,140,143,136,110,44,178,134,134,143,131,134,126,121,124,130,141,136,141,148,140,133,139,136,132,125,143,151,140,138,81,105,165,143,149,155,144,141,123,136,113,125,142,143,124,129,130,130,130,139,141,135,129,145,138,122,138,174,156,126,130,142,147,158,158,133,142,147,144,144,147,136,124,129,115,120,124,118,122,127,134,85,105,159,127,139,138,158,136,142,143,126,132,132,156,143,140,136,130,140,140,138,144,135,135,138,100,44,181,175,169,141,143,156,135,155,141,150,145,142,169,171,143,133,147,134,159,147,155,148,166,148,121,45,180,147,132,139,125,139,130,129,132,127,144,130,152,155,147,130,143,144,136,133,150,140,136,136,82,105,162,141,144,147,143,141,129,145,125,135,145,144,115,126,125,119,123,144,141,143,135,150,138,125,136,172,138,125,140,131,138,154,147,138,148,152,142,139,131,144,131,115,105,109,118,132,132,127,125,71,104,152,122,138,143,156,156,152,149,150,147,154,166,150,131,142,136,131,130,131,129,129,121,120,104,44,180,164,157,145,149,158,126,141,143,125,133,156,158,141,147,138,122,141,144,162,158,149,140,154,123,47,180,152,135,143,138,141,145,132,145,131,116,123,135,147,145,133,123,134,126,132,129,157,123,125,74,104,164,147,135,140,134,131,150,138,136,142,161,140,118,132,131,121,125,152,163,149,147,136,121,123,141,170,134,133,134,138,140,142,140,139,149,149,149,139,123,139,140,113,106,110,115,132,135,136,130,74,104,150,118,142,139,159,150,142,154,162,151,152,158,155,142,139,127,124,124,132,131,119,108,116,106,44,182,161,155,141,151,147,143,151,142,129,133,152,150,138,151,138,118,135,141,158,158,161,139,147,120,46,178,138,124,163,148,141,130,131,141,119,111,116,130,132,126,142,132,124,116,123,134,166,125,129,74,105,166,151,145,134,143,145,156,132,141,156,155,131,123,133,141,134,144,144,166,145,135,118,115,124,144,171,144,154,123,138,130,144,147,141,138,152,148,140,134,145,132,115,120,113,125,134,133,125,131,71,104,155,115,134,147,150,141,140,147,144,148,138,129,152,144,140,140,121,131,121,131,131,118,120,113,45,177,159,148,140,144,154,149,135,166,169,139,151,141,148,135,136,141,140,158,154,135,147,136,136,118,46,178,147,119,157,150,141,131,132,133,126,134,130,125,116,134,138,142,132,122,127,135,147,133,138,73,104,166,161,150,157,159,143,136,144,148,157,141,143,133,142,140,136,135,144,161,144,125,132,126,129,140,170,151,154,127,132,135,154,142,139,132,143,138,142,140,155,130,120,120,108,132,131,132,129,132,71,104,157,122,141,148,143,141,142,136,143,141,147,139,144,139,131,131,125,127,118,129,131,125,123,113,46,177,149,144,140,147,158,158,136,163,166,148,144,138,147,135,131,155,133,154,154,129,135,130,145,127,47,178,155,130,162,144,144,135,136,129,124,148,127,116,119,129,135,142,132,125,125,134,149,138,131,71,104,165,159,144,155,147,127,131,149,150,155,154,156,141,145,147,138,133,132,162,139,134,136,131,130,138,172,158,131,131,143,132,138,134,132,136,130,126,135,132,145,158,131,123,115,131,129,134,150,145,84,104,163,147,154,142,130,122,130,125,129,122,143,138,134,133,147,151,139,112,111,122,132,134,135,110,45,178,143,124,147,151,144,139,134,144,158,151,147,130,144,130,125,141,149,154,163,126,136,152,144,131,48,180,151,139,129,140,142,141,129,120,131,127,120,120,131,131,142,156,148,147,139,148,133,141,144,79,104,164,129,124,148,147,140,151,139,154,135,126,134,143,142,136,154,162,151,154,135,129,125,127,126,122,172,139,122,130,126,143,139,126,124,135,136,126,123,114,126,152,127,144,127,133,134,134,143,152,73,104,164,140,139,133,126,119,122,133,129,127,119,120,127,141,138,144,136,131,132,132,138,126,131,120,45,178,150,141,140,158,162,131,131,131,140,134,135,133,124,129,126,125,135,150,169,124,144,157,147,125,47,178,149,142,143,143,154,154,130,122,136,129,113,131,154,134,145,145,133,134,133,126,120,157,135,79,104,171,161,134,144,151,155,140,141,154,143,127,129,135,130,116,141,158,151,155,161,155,144,130,130,142,171,135,124,130,129,133,144,127,130,141,138,126,120,122,129,154,142,161,133,140,136,139,140,133,70,104,172,149,145,132,133,122,123,142,136,135,124,124,130,149,133,145,126,136,136,132,129,135,139,112,45,178,147,138,138,169,164,124,147,130,138,127,133,141,132,130,127,120,139,152,165,131,147,157,151,126,47,177,157,140,140,144,147,156,142,123,135,116,119,129,150,141,136,141,133,132,135,134,129,152,135,79,105,175,149,135,158,155,152,133,129,149,149,123,123,134,124,109,138,155,154,151,162,151,149,140,138,151,171,141,122,110,140,129,134,125,136,159,141,132,125,133,141,151,158,148,124,120,135,136,143,121,69,104,162,143,142,134,134,123,129,135,145,135,138,126,134,144,144,149,123,130,132,147,144,154,163,112,45,176,144,135,147,166,163,140,136,142,154,149,142,141,156,126,124,118,139,164,158,138,156,134,126,122,47,181,161,141,155,151,152,129,150,127,136,127,135,127,132,154,132,134,123,143,139,143,148,142,133,77,105,175,158,144,161,136,132,122,127,165,143,129,125,135,140,121,138,161,156,164,152,135,141,140,133,132,171,143,129,112,136,131,131,138,142,168,149,142,135,140,135,152,155,149,131,126,134,144,148,114,69,104,168,142,141,130,127,119,132,130,140,148,133,125,138,135,139,148,126,134,139,148,151,163,156,113,44,176,140,134,142,155,156,159,135,136,147,150,143,144,144,118,114,119,138,162,158,141,157,141,126,116,46,180,149,132,152,151,148,135,141,119,126,122,139,123,131,143,131,139,130,139,140,147,140,134,123,75,105,175,178,148,149,139,134,123,140,165,148,129,130,130,127,119,130,143,141,157,159,131,140,136,130,124,172,151,126,125,113,138,127,135,139,147,139,136,154,131,123,140,134,147,164,130,152,159,141,124,76,104,169,138,144,152,125,127,130,139,142,154,140,141,134,131,143,136,122,138,143,147,149,149,130,106,44,176,149,139,127,148,162,152,136,134,143,140,135,140,132,122,115,120,129,155,155,157,152,139,147,121,45,178,154,154,141,140,133,136,143,141,138,130,136,134,133,138,141,145,129,139,134,143,130,138,116,75,104,174,170,148,145,141,150,136,144,151,141,132,138,131,136,140,129,142,141,131,136,129,151,147,135,141,171,149,127,122,113,142,148,130,134,148,148,141,141,140,120,131,132,145,145,134,156,149,142,147,77,105,163,140,145,149,131,142,134,138,143,135,135,149,135,132,150,130,119,134,141,149,150,155,136,99,44,176,143,140,125,154,152,144,131,140,131,138,139,141,141,127,125,129,129,148,147,163,161,143,144,113,46,180,166,163,138,139,133,125,149,150,151,143,145,133,136,133,150,141,127,139,132,129,145,156,127,75,104,172,161,140,147,140,159,141,134,147,144,133,142,139,140,142,120,151,138,133,135,142,164,156,139,138,171,142,123,132,129,127,134,134,130,127,141,148,149,147,143,134,136,125,125,125,157,165,161,140,80,105,165,144,145,141,127,147,141,147,129,130,130,132,138,145,144,140,145,148,138,147,147,138,139,113,46,178,157,143,150,142,141,120,133,116,134,148,156,148,171,156,141,138,145,165,171,174,152,139,140,119,45,178,148,142,136,143,127,145,157,144,126,157,149,134,140,135,133,145,150,142,138,149,166,159,141,76,105,175,142,144,144,135,151,156,123,154,151,131,133,127,141,150,133,143,134,126,154,142,152,142,129,140,171,150,129,136,133,148,150,142,132,133,145,155,145,135,155,130,132,151,132,145,162,161,156,143,74,105,170,140,149,143,151,135,133,132,131,130,134,142,151,152,150,151,157,162,138,148,140,141,170,118,46,180,152,142,141,144,116,124,136,119,139,158,145,140,138,154,127,131,142,161,154,157,147,147,139,114,46,181,144,132,139,142,138,124,145,152,136,152,161,138,129,151,141,145,134,144,134,133,148,157,132,77,105,171,135,135,147,143,134,152,155,159,144,125,138,131,144,149,129,123,123,136,158,151,151,144,131,143,172,150,132,127,134,158,159,135,131,124,147,152,142,132,142,135,140,151,130,163,158,156,158,132,71,105,170,141,142,142,149,132,123,129,120,125,131,132,139,144,125,144,158,165,145,147,141,132,155,113,46,178,143,129,140,132,119,138,145,120,139,156,150,158,139,148,125,136,150,155,140,145,140,135,132,104,44,180,140,132,133,142,144,123,135,142,143,152,152,141,143,163,143,157,144,144,133,131,138,164,148,82,104,165,124,126,135,145,130,141,156,145,148,131,142,141,150,154,125,113,126,150,145,134,154,145,138,152,172,151,139,129,127,142,129,127,130,125,148,150,120,119,126,132,135,139,143,144,133,140,156,145,81,104,178,156,147,139,165,139,132,133,135,133,158,145,144,150,142,143,135,141,140,150,132,130,150,101,44,177,140,131,135,125,118,132,127,121,134,154,165,159,155,156,145,148,154,135,135,141,142,140,130,112,46,181,147,150,152,152,129,126,122,134,133,156,154,165,150,151,140,147,141,161,141,140,145,150,164,87,104,170,131,133,124,150,133,124,150,163,140,142,145,133,140,141,124,119,130,149,156,129,141,131,143,136,174,155,140,136,129,131,122,124,126,123,141,140,133,122,125,132,140,140,152,141,135,147,150,162,80,104,176,159,152,139,166,147,139,144,147,140,157,142,142,145,152,154,140,144,134,154,138,121,145,107,45,180,145,134,132,126,116,115,130,130,138,151,162,148,148,149,139,145,150,140,142,145,154,142,124,107,45,181,155,157,164,156,127,124,125,129,129,152,162,159,152,136,149,149,158,159,139,123,149,165,166,88,104,172,138,135,133,145,132,131,151,158,132,144,155,131,124,130,129,132,144,151,144,133,145,126,133,125,171,150,156,156,144,127,143,125,126,123,143,152,150,145,124,126,140,144,150,127,136,145,142,159,89,105,176,149,147,145,138,126,133,147,133,130,134,135,134,134,152,142,152,155,138,150,147,129,141,118,47,178,156,145,134,124,123,112,136,140,155,152,152,162,155,138,140,151,158,154,136,122,141,130,129,112,44,180,154,149,163,147,138,134,133,132,131,156,177,150,139,147,143,142,151,149,139,118,136,161,170,84,105,164,134,139,136,135,120,130,131,157,162,138,141,151,129,126,142,125,121,140,145,154,156,144,143,134,171,151,156,143,161,141,143,135,127,127,150,159,148,156,136,135,138,145,141,126,125,132,155,159,92,105,175,149,155,142,134,115,120,138,130,129,132,136,136,130,149,149,152,152,141,145,150,131,140,112,46,178,149,139,133,141,122,123,141,155,162,163,155,157,147,144,140,149,158,152,133,132,133,124,125,114,45,178,149,130,148,151,143,154,150,138,138,152,170,144,134,149,142,143,148,145,135,115,141,156,158,85,105,164,136,135,132,143,116,124,131,159,158,139,135,140,126,132,138,122,120,133,150,155,161,140,145,142,171,155,161,159,142,147,129,138,139,139,145,139,135,148,138,134,134,126,130,129,131,131,156,166,89,105,174,169,164,149,126,130,131,138,127,123,134,141,157,150,165,154,145,125,134,135,140,139,118,111,45,178,150,148,136,135,129,136,140,155,159,161,148,139,134,172,141,148,143,144,143,125,126,130,126,114,46,177,156,124,135,145,142,159,139,148,147,149,149,134,147,150,159,168,158,143,143,132,130,135,151,82,104,170,149,139,130,134,130,121,131,149,162,147,132,132,142,144,139,134,150,135,140,140,162,165,147,152,172,155,159,159,147,134,131,131,131,145,144,151,149,148,126,131,130,122,130,132,130,125,150,166,90,105,180,168,148,143,120,138,140,151,123,121,131,132,138,145,163,152,147,134,130,124,139,147,120,114,47,178,151,148,130,126,124,134,141,136,148,156,147,132,140,166,139,144,154,125,143,127,123,127,120,105,46,177,147,110,131,138,143,148,141,145,147,149,134,140,154,163,169,158,169,141,135,123,129,136,166,85,104,170,142,150,141,138,127,126,125,155,151,138,123,131,135,135,136,133,136,131,138,151,155,170,154,163,171,145,152,147,145,140,144,165,144,134,143,148,130,135,129,132,132,139,142,135,118,126,138,163,88,105,175,148,133,135,129,130,140,129,140,134,138,134,138,156,139,139,135,139,125,134,132,136,138,123,48,176,130,122,113,132,132,144,136,136,140,144,143,142,135,138,144,145,147,143,135,154,121,129,129,108,45,181,165,121,131,145,141,164,149,140,150,144,140,142,138,164,163,162,159,142,140,154,136,138,154,85,105,168,135,154,141,130,134,129,135,142,150,142,132,135,135,133,140,134,134,150,142,162,156,141,148,157,171,149,129,129,155,151,149,154,147,133,132,139,131,141,141,147,135,147,129,133,139,142,141,165,92,104,174,152,154,149,130,127,119,134,132,126,132,147,156,147,143,145,125,141,138,127,150,142,130,118,46,177,132,120,119,134,142,141,152,132,144,150,147,136,127,139,127,133,142,134,124,147,127,138,129,113,46,181,154,139,152,156,155,154,140,140,123,127,125,141,149,158,145,154,144,147,131,141,140,154,151,83,105,158,140,129,138,136,140,136,165,144,138,129,118,135,148,149,142,133,135,156,147,161,164,156,149,156,170,140,122,124,154,157,150,157,139,126,129,130,125,152,151,147,145,143,135,134,139,136,130,149,82,104,176,162,157,140,132,119,112,134,132,129,130,131,161,149,148,144,134,143,138,132,150,145,129,118,47,177,140,130,116,132,141,142,142,141,157,144,149,148,132,126,133,131,138,136,134,140,132,142,135,114,45,181,148,140,164,156,161,158,132,124,130,135,136,134,130,150,130,142,143,143,140,139,126,143,138,79,104,162,135,120,136,135,143,142,152,143,157,132,131,134,144,155,147,127,139,162,170,170,162,155,163,169,172,150,139,138,152,151,139,129,138,136,144,132,129,169,162,158,143,140,147,158,151,136,138,155,84,105,174,148,148,121,115,126,113,125,138,122,132,133,155,149,155,141,139,132,136,135,145,139,135,114,47,181,143,124,123,149,132,145,135,142,164,152,164,156,152,133,129,131,136,154,142,133,141,132,127,113,46,181,136,144,163,159,155,143,141,134,125,152,148,135,129,129,129,141,131,140,152,143,139,133,126,73,104,156,130,126,122,143,147,151,145,135,125,132,140,145,156,149,155,144,134,145,169,170,162,145,170,161,174,166,142,132,145,151,136,129,130,127,135,127,126,157,159,154,147,139,157,151,154,134,131,162,84,104,172,149,136,118,114,126,111,118,125,129,148,144,154,152,161,134,145,133,136,132,147,149,139,111,46,178,141,125,123,139,131,145,139,142,162,166,166,152,154,129,131,125,132,139,140,131,141,134,119,110,47,178,136,145,162,159,148,149,134,126,126,148,142,136,133,127,123,135,142,143,142,141,144,147,132,69,104,156,126,134,120,138,131,140,136,132,129,131,135,139,144,140,151,145,142,161,169,169,162,140,159,156,174,165,132,130,139,151,140,144,136,121,126,126,125,148,134,138,150,141,162,175,162,159,142,140,75,104,163,141,126,129,121,141,141,120,123,139,147,141,151,166,154,156,140,133,133,129,142,139,148,122,46,180,141,126,145,155,151,150,138,155,149,155,164,149,164,143,133,131,129,149,138,126,136,124,138,113,46,180,155,155,159,156,132,127,136,136,131,126,149,133,123,113,121,119,134,138,132,138,142,157,143,71,104,154,133,134,126,121,115,135,129,133,139,135,134,139,140,127,144,161,145,156,171,149,158,133,141,143,172,161,142,141,147,149,149,139,132,127,138,134,126,138,132,145,151,141,148,168,157,157,158,151,77,104,163,134,138,133,130,132,131,126,131,135,147,143,155,171,148,158,147,132,135,140,145,142,141,120,46,180,150,143,150,147,149,154,140,154,149,156,169,143,144,151,140,135,130,151,134,131,134,136,145,113,45,178,162,157,161,158,142,131,140,142,127,131,150,147,133,122,124,120,134,126,132,132,155,145,142,69,104,162,142,132,122,113,122,134,138,133,138,135,148,147,154,143,150,164,150,158,165,159,152,127,119,133,174,169,158,131,147,151,151,126,131,133,121,120,133,138,133,149,140,123,124,148,150,158,156,155,91,104,164,140,140,136,141,131,133,130,140,152,151,150,158,154,134,147,145,147,156,150,141,140,124,110,46,177,148,139,152,145,143,156,140,155,157,158,151,149,135,131,127,142,135,126,138,132,164,168,139,107,45,180,178,165,156,154,131,132,133,131,122,121,129,151,151,138,130,134,134,125,136,135,135,133,120,74,104,157,125,133,113,111,112,121,127,144,144,141,139,147,150,143,140,159,156,144,156,164,174,152,136,148,171,171,170,122,138,148,150,135,114,135,138,140,151,115,132,148,136,135,127,132,148,130,142,135,77,105,166,154,136,144,140,135,133,136,127,144,155,162,151,151,154,132,138,138,140,140,132,125,134,101,44,177,141,130,131,139,130,131,122,161,156,157,149,139,145,132,134,126,126,123,133,143,148,155,148,121,46,182,164,147,149,138,142,141,121,124,129,121,132,142,144,142,143,140,141,135,142,129,132,129,109,71,104,151,115,125,121,129,126,123,125,131,147,143,133,130,125,130,149,143,156,126,151,177,174,149,135,144,172,162,159,139,143,156,144,135,116,126,136,142,149,124,126,136,125,134,138,136,132,135,134,132,76,104,161,140,138,151,149,141,133,125,124,144,162,147,141,144,152,130,134,132,143,138,129,122,133,104,44,178,140,127,135,145,139,130,127,162,157,159,166,156,154,141,148,133,126,130,135,129,142,149,138,115,47,182,166,154,149,138,147,133,126,113,121,123,131,135,140,141,148,151,143,123,125,126,131,127,123,74,104,156,119,130,124,130,124,129,126,138,143,133,141,131,122,131,148,159,155,130,152,177,158,139,142,143,174,169,147,155,163,171,148,144,140,131,138,140,136,125,116,139,126,135,138,135,129,140,131,149,86,104,164,152,132,134,136,143,139,143,121,139,154,140,140,138,138,148,119,125,136,140,131,123,135,113,44,178,142,131,161,150,142,133,126,149,145,154,154,155,155,152,138,135,127,134,131,119,126,135,139,120,47,182,163,158,139,144,151,134,129,124,122,113,121,127,133,134,133,156,136,136,124,127,140,134,135,70,104,155,119,135,139,127,116,135,147,144,148,136,131,134,121,129,155,151,149,142,151,143,151,149,150,135,172,159,147,159,162,169,163,142,147,133,130,126,142,126,123,134,140,147,142,129,124,151,131,142,84,104,168,143,134,122,126,142,142,150,131,147,148,148,139,149,140,148,116,127,127,122,125,132,144,115,45,178,156,150,159,150,132,121,122,138,127,134,138,141,156,154,144,129,127,140,140,130,127,135,138,116,48,183,170,161,144,154,149,126,131,125,125,112,118,120,127,130,144,147,143,134,131,125,124,131,147,65,104,157,127,138,132,118,115,132,152,149,147,135,127,129,125,134,155,156,163,163,157,135,145,145,150,138,171,151,163,157,131,150,151,138,134,131,135,136,142,115,122,112,127,131,139,140,135,119,127,126,74,104,172,156,144,130,127,139,143,129,145,136,143,126,133,144,139,138,142,118,140,132,123,129,133,120,46,178,157,142,148,142,140,148,144,134,124,129,140,140,133,127,133,142,127,133,131,138,132,127,130,104,44,181,181,161,166,155,142,127,131,127,130,113,112,114,136,141,154,127,135,129,123,126,132,133,138,67,104,166,135,141,122,122,113,130,145,147,142,132,133,129,138,150,165,170,161,161,155,151,136,148,143,144,170,158,166,145,130,161,144,140,140,132,135,136,148,118,114,111,115,123,132,135,124,122,130,129,71,104,168,154,139,147,133,127,133,126,135,126,134,116,129,144,140,150,138,125,134,127,118,131,132,109,45,178,158,150,143,142,127,155,140,139,121,126,149,139,135,136,120,140,134,132,120,127,127,119,124,113,45,181,169,148,183,154,147,134,135,149,136,115,112,116,135,157,150,126,140,135,127,123,131,129,131,71,104,174,142,134,121,126,110,127,141,142,136,126,123,129,143,162,157,166,150,159,161,154,142,157,151,151,172,159,152,124,112,133,135,139,149,141,148,134,125,113,109,106,112,145,141,130,136,147,148,147,75,104,163,135,144,127,119,131,138,132,138,138,149,139,130,143,156,156,164,155,134,132,124,129,134,109,44,181,161,149,121,139,144,145,133,121,120,132,139,142,143,130,112,119,125,119,133,126,133,136,129,111,48,181,150,149,159,144,142,136,149,158,142,130,122,129,149,151,158,162,157,144,144,133,133,127,132,75,104,163,148,135,141,135,125,116,127,129,134,122,118,127,142,141,157,164,155,159,154,135,143,154,159,158,172,162,145,129,119,139,140,133,142,144,144,142,134,111,118,114,118,147,130,133,134,142,154,134,76,104,161,141,150,132,126,135,127,124,133,144,152,142,129,145,159,150,151,158,133,135,131,139,134,118,44,180,161,143,126,138,148,143,133,119,122,147,145,155,143,116,103,110,134,127,135,136,140,138,126,105,46,180,151,148,148,142,140,131,145,162,144,134,122,127,148,150,170,156,162,150,154,136,138,118,129,77,104,157,134,135,143,136,135,118,120,124,133,122,123,132,149,142,163,171,168,157,162,141,149,162,155,142,172,159,133,133,121,123,133,135,141,127,142,138,136,129,119,119,104,122,135,145,145,130,124,129,79,104,161,154,150,129,122,131,121,126,133,120,140,143,144,147,165,154,156,156,132,138,121,147,135,114,46,177,142,135,135,142,157,161,149,150,131,143,147,141,125,122,112,116,133,143,135,134,129,135,118,100,45,180,154,143,135,136,140,152,154,144,141,116,120,145,148,133,139,158,143,140,154,150,144,138,141,75,104,165,127,127,149,154,154,143,114,115,115,123,124,133,152,164,163,182,171,165,159,148,156,154,162,149,171,142,133,134,123,134,136,149,139,123,127,120,125,118,132,131,131,124,132,132,136,134,133,133,76,104,161,151,139,135,120,119,115,131,141,136,131,139,154,148,158,150,171,154,130,134,124,123,141,121,46,181,155,156,157,140,145,135,135,133,145,163,145,130,116,116,109,115,124,148,140,131,125,144,123,103,44,177,145,148,144,145,138,152,143,143,144,126,135,136,142,139,138,132,136,142,139,154,140,136,132,80,105,156,126,145,139,164,147,147,150,131,132,123,123,135,136,147,161,169,170,169,152,162,145,156,164,164,170,143,135,129,122,132,138,144,139,125,135,124,115,126,124,131,139,121,126,141,125,150,145,149,77,104,166,135,132,135,116,115,111,124,139,138,132,130,152,158,169,147,166,154,131,135,135,133,141,114,46,181,150,143,148,138,142,135,140,126,143,158,147,130,112,118,118,116,131,136,142,129,115,139,130,103,44,178,138,138,148,143,142,147,157,149,145,129,136,135,134,143,134,129,135,142,138,144,135,147,141,84,105,156,141,152,133,150,154,156,152,135,138,129,116,125,131,135,159,163,159,156,145,158,151,151,157,143,171,155,134,132,125,125,141,151,131,116,126,140,123,150,132,131,141,124,116,139,120,135,151,140,78,105,168,142,131,127,127,123,120,112,123,127,127,134,152,172,156,149,148,154,141,129,131,138,115,109,45,178,149,130,144,127,139,143,132,120,134,133,134,134,119,118,129,127,123,144,148,143,145,121,119,98,44,176,131,112,114,127,136,135,154,149,143,130,132,133,145,154,130,120,123,126,121,126,139,138,135,82,104,161,132,155,159,150,166,155,140,133,133,119,118,138,136,139,166,172,162,142,161,150,150,144,133,125,171,154,133,127,139,130,134,156,130,119,127,135,126,140,124,134,147,131,122,133,123,123,135,139,74,104,169,144,134,126,136,132,125,118,129,135,119,116,142,152,156,148,141,142,144,119,140,152,122,100,45,177,149,135,132,130,141,143,144,121,130,129,140,132,115,119,138,138,130,147,145,145,134,115,123,100,44,177,134,121,114,125,134,143,157,141,130,133,134,134,136,149,131,125,118,113,109,121,138,135,147,85,104,157,120,148,155,150,155,150,132,119,129,129,133,150,147,150,171,170,161,149,143,148,163,169,141,142,170,148,135,138,138,139,145,134,161,125,119,127,126,124,116,148,133,133,132,152,136,148,142,125,71,104,164,130,134,129,126,126,131,138,143,150,134,124,130,140,136,132,130,127,135,138,139,147,133,121,45,181,168,151,140,126,134,133,148,131,133,154,143,144,130,129,135,135,129,140,149,144,133,121,119,103,44,176,130,126,127,120,135,142,138,150,149,141,123,114,126,133,141,131,121,118,118,115,135,135,152,91,104,155,125,131,131,121,136,149,116,116,139,136,156,154,164,165,141,150,147,130,139,155,166,168,152,155,171,150,143,139,140,140,144,150,162,139,129,123,130,133,112,139,134,140,132,147,142,150,142,127,72,104,164,136,145,126,129,140,148,135,154,151,144,139,133,149,127,126,138,123,142,158,143,138,135,133,47,183,166,150,133,130,130,131,134,131,129,151,141,148,144,133,132,139,131,130,151,142,127,121,120,105,45,174,134,129,110,116,140,151,148,150,156,140,126,119,127,130,143,134,113,121,122,109,134,136,145,83,105,162,144,121,130,118,134,163,125,127,136,142,168,151,166,164,141,136,135,123,135,155,159,169,156,161,170,141,138,135,135,133,135,140,141,133,138,143,130,134,129,138,156,139,133,143,152,138,138,119,68,104,168,144,156,129,130,133,140,139,151,143,143,156,145,133,141,116,114,138,143,144,129,127,138,123,48,182,156,149,142,141,140,112,123,114,144,141,142,143,131,132,126,123,124,140,122,120,122,130,130,126,46,177,141,133,136,127,147,144,142,136,132,127,116,125,136,140,135,141,107,103,112,119,127,130,125,74,105,169,149,140,141,136,166,171,152,138,142,144,168,161,166,166,129,133,120,116,135,148,149,140,152,162,169,143,135,134,148,143,149,138,141,141,152,156,151,151,136,139,132,124,131,136,144,148,156,129,68,104,163,148,139,116,134,135,143,149,151,141,148,133,144,136,115,115,108,141,161,140,129,130,141,135,47,180,141,125,130,134,147,116,113,118,150,151,143,149,129,148,125,134,129,130,129,124,135,118,118,110,47,178,152,125,138,141,131,134,142,140,131,119,107,125,135,143,139,129,115,121,123,123,115,115,133,83,104,168,139,147,140,149,151,158,147,147,161,147,158,156,156,140,126,131,136,134,136,150,158,150,148,142,169,152,134,132,145,145,156,139,147,154,155,156,152,135,130,124,141,127,129,123,136,161,159,122,69,104,168,142,126,112,127,134,145,150,150,145,157,143,143,145,119,115,116,152,148,135,126,125,131,127,45,180,143,131,125,132,147,123,122,127,145,150,145,135,134,147,133,130,138,135,138,132,134,124,114,105,46,178,147,126,135,149,136,144,141,144,124,118,120,134,141,138,139,127,124,126,127,126,115,124,130,84,104,164,147,138,140,151,156,149,145,148,145,149,161,155,142,142,135,142,143,140,135,145,157,147,151,131,176,163,154,154,140,138,133,132,149,140,135,139,140,140,122,140,136,136,132,118,133,149,142,127,76,104,175,139,133,131,163,157,149,142,147,151,159,138,122,130,112,113,127,157,125,141,114,116,134,123,48,178,149,136,131,123,135,125,127,133,142,132,141,136,141,150,152,142,131,122,119,116,131,119,115,101,45,180,159,136,136,138,148,134,145,141,125,112,134,135,144,134,136,129,116,131,132,111,118,114,126,84,104,162,156,144,145,140,138,148,141,163,161,142,141,140,140,140,139,143,145,140,142,133,122,142,150,156,174,166,161,161,136,140,145,133,154,142,148,144,148,144,124,134,142,138,129,118,133,140,142,131,80,104,165,141,136,147,163,163,158,143,143,152,147,143,134,119,119,115,118,143,122,139,115,110,134,123,47,180,152,141,138,118,136,127,129,129,130,126,138,145,138,148,157,141,134,121,115,107,124,122,114,101,45,180,155,148,135,147,144,130,148,134,130,121,140,129,145,142,136,126,119,131,130,118,113,109,125,83,104,156,148,144,147,144,136,133,129,155,155,143,145,145,148,138,136,151,144,151,155,127,125,142,143,154,174,174,155,144,139,142,147,144,154,147,165,156,152,138,132,122,127,136,139,125,120,133,144,132,77,105,155,126,130,144,158,155,159,161,158,147,161,144,140,116,121,121,120,158,134,134,135,125,144,115,45,177,148,141,133,120,127,141,142,129,142,147,139,136,141,158,155,149,133,139,116,114,130,130,126,108,46,178,169,139,140,141,130,127,143,133,142,109,113,134,131,142,135,123,124,138,133,123,119,113,123,79,104,157,133,135,140,125,131,134,136,159,144,134,122,129,142,138,140,133,133,154,135,123,121,147,170,158,172,166,145,135,142,155,151,143,162,143,158,151,136,134,138,133,133,134,133,131,126,140,148,129,73,104,155,123,119,143,147,156,157,164,162,139,162,145,135,111,111,125,139,166,149,143,144,129,147,114,44,177,142,129,126,127,126,139,139,125,144,147,142,127,134,156,164,151,139,143,118,124,134,129,138,113,46,178,171,150,152,130,126,121,147,139,129,107,105,126,135,138,136,143,136,156,140,122,126,134,126,73,104,164,134,136,148,129,130,132,143,164,143,121,122,126,143,144,139,132,139,140,135,126,127,151,164,161,171,158,158,135,141,152,161,157,155,144,127,130,127,133,136,129,134,132,131,140,131,141,145,135,76,105,157,130,131,144,133,130,138,149,143,135,142,155,141,126,123,136,142,154,133,136,131,122,135,118,44,176,131,116,120,134,149,140,142,130,124,134,136,123,129,141,157,154,150,135,140,134,131,133,148,123,45,177,159,164,138,121,124,133,133,132,125,126,126,134,147,139,147,135,144,127,139,147,133,145,129,73,104,169,150,149,141,133,148,142,151,158,139,122,129,136,143,156,134,132,134,136,164,154,158,149,145,156,172,158,150,152,151,152,151,154,159,152,129,124,132,139,126,134,135,135,133,138,124,138,139,133,75,104,156,126,125,136,127,134,135,134,135,141,147,159,151,132,130,149,140,140,136,147,139,131,126,116,45,176,133,124,122,127,149,140,157,119,123,135,129,124,132,147,159,159,148,129,138,142,136,132,141,123,44,177,149,164,126,118,132,129,142,126,127,143,131,138,142,136,145,141,140,124,133,143,150,155,126,73,104,163,134,136,131,141,157,147,151,154,135,122,134,140,154,161,133,134,138,145,162,157,165,141,149,150,172,164,138,143,145,133,148,142,150,169,164,138,149,152,139,144,148,135,134,127,140,136,132,129,73,104,158,126,125,134,124,138,143,142,130,136,149,141,147,135,134,139,133,142,141,131,125,123,126,103,45,176,131,120,119,127,138,147,145,126,120,131,126,127,142,144,154,165,130,129,126,143,135,145,145,119,45,178,152,142,124,120,132,133,127,149,134,139,143,143,145,135,145,136,124,122,125,138,149,138,133,79,105,161,135,127,111,123,135,154,143,150,132,131,133,162,148,139,127,140,130,145,168,148,154,131,141,139,170,144,141,147,149,124,140,144,156,157,147,148,145,143,120,132,135,130,131,148,135,131,130,124,69,104,154,133,141,154,135,130,124,135,136,149,154,158,157,139,140,136,129,147,140,138,140,144,126,101,46,176,131,118,116,113,131,121,126,135,129,126,124,127,136,149,154,147,140,158,129,131,127,140,129,110,45,178,150,135,130,110,124,133,150,149,150,129,132,148,127,142,129,122,125,124,129,149,145,135,143,86,105,168,129,124,124,115,123,143,132,142,139,125,131,152,136,131,129,150,148,147,159,149,148,164,155,166,170,141,140,144,151,135,143,147,147,159,140,134,141,138,139,139,126,124,121,145,140,145,127,129,66,104,159,125,136,145,140,133,126,132,141,159,148,152,150,131,143,150,132,152,138,133,142,141,124,101,45,175,125,110,119,112,120,119,129,136,135,126,121,119,125,148,144,143,145,161,135,121,141,145,140,115,46,178,141,121,129,123,136,139,163,147,144,134,147,158,138,138,131,121,131,135,141,144,139,130,145,84,105,168,131,120,116,120,134,144,126,136,135,135,138,148,139,143,138,162,148,136,144,147,154,152,151,154,174,145,126,130,126,155,127,138,147,149,143,142,132,133,152,138,125,119,113,140,139,149,148,135,72,104,159,133,135,114,125,120,122,121,119,129,129,135,148,131,139,156,148,125,130,131,143,152,132,105,45,177,131,108,120,118,119,122,122,142,139,127,135,123,121,121,134,127,138,145,132,133,150,147,130,110,45,177,142,129,123,132,130,144,141,134,141,138,156,164,154,127,108,124,132,136,133,116,120,129,131,89,104,163,138,139,123,140,151,132,119,125,126,142,132,138,135,140,149,164,151,139,140,154,148,147,144,138,174,154,125,124,122,147,135,140,148,135,136,135,126,141,154,142,132,113,120,144,142,152,150,139,74,104,159,142,142,122,123,116,112,124,129,135,129,134,136,145,154,145,151,145,132,136,134,145,136,109,44,177,126,110,126,130,131,131,127,154,141,136,139,114,113,116,125,125,142,147,143,135,148,147,121,99,44,175,140,134,123,122,135,141,155,136,127,135,151,157,158,141,121,129,121,129,129,116,111,118,126,91,104,161,148,139,130,144,157,132,121,123,114,138,118,121,127,133,147,149,149,141,131,155,150,145,148,130,172,149,127,139,149,143,129,133,127,132,139,133,123,127,162,143,135,124,120,132,143,141,136,119,72,104,157,140,138,135,122,118,120,122,142,136,142,132,145,133,142,158,155,148,162,140,145,139,131,103,47,177,142,134,126,126,150,134,132,145,148,135,115,118,114,114,115,123,134,154,132,142,142,134,133,106,44,177,141,136,149,145,139,152,156,139,131,151,145,142,152,138,129,126,123,130,120,122,121,136,134,85,105,162,133,133,149,165,139,127,119,141,139,123,120,120,127,126,157,147,139,141,145,141,133,141,145,151,171,150,130,126,142,148,135,139,124,135,136,129,126,130,151,139,141,124,135,138,141,143,138,120,71,104,162,136,136,134,126,130,127,119,145,135,145,126,136,136,154,147,148,158,165,142,144,149,129,114,49,181,149,132,132,124,132,132,132,144,154,140,115,118,107,122,113,121,136,152,144,130,130,130,148,115,44,177,139,140,150,142,143,152,132,138,125,154,157,150,157,139,126,129,124,122,116,131,118,134,147,84,105,168,140,133,149,158,136,127,131,142,135,123,130,118,126,126,145,143,136,154,148,129,122,141,151,143,171,152,136,130,140,140,138,144,135,135,138,126,122,133,154,168,141,143,156,135,155,141,150,142,77,105,181,144,133,125,131,132,130,130,145,149,162,149,133,158,157,157,150,155,139,132,143,145,120,101,46,182,161,134,150,138,127,138,136,147,147,134,110,110,112,112,115,124,157,157,130,129,134,134,127,110,44,177,144,145,123,127,143,139,140,134,133,152,151,139,129,138,136,144,127,129,131,139,134,152,144,74,104,170,136,155,156,151,157,143,148,144,124,116,122,118,124,130,142,133,131,144,138,129,144,148,150,132,171,139,126,131,131,126,134,126,133,138,122,126,116,125,134,150,155,142,141,134,147,150,140,141,77,104,170,138,139,118,126,118,126,144,152,148,159,150,143,148,142,144,150,151,152,142,145,142,142,112,46,176,157,157,144,129,138,133,132,141,136,129,119,132,132,110,110,118,135,136,130,141,139,126,122,113,44,178,151,151,134,149,143,133,140,134,134,135,155,139,141,127,123,124,124,122,126,129,129,111,134,84,104,166,142,142,150,154,168,169,163,138,127,124,134,131,132,129,125,129,119,127,131,129,123,130,140,133,170,147,121,119,119,123,136,121,123,139,124,132,126,124,131,143,151,140,122,143,147,152,144,147,77,104,165,132,136,119,127,119,123,133,150,147,157,145,151,155,133,140,141,141,145,152,158,141,140,112,45,177,161,159,133,127,147,136,133,154,140,131,127,149,134,116,108,120,143,136,139,143,141,134,126,108,44,176,152,147,135,147,141,138,129,122,132,139,151,140,144,136,121,126,126,122,127,139,125,120,138,86,104,168,152,145,149,161,174,164,150,131,135,134,135,124,135,123,124,135,118,122,132,134,132,132,135,133,171,149,129,121,124,123,110,114,124,113,109,122,141,121,135,139,139,143,144,125,134,132,152,151,79,104,162,136,133,142,131,131,121,135,158,157,149,141,141,157,135,133,144,138,145,131,131,132,143,127,48,180,155,142,139,126,147,140,141,147,129,139,157,156,136,116,123,133,151,162,147,142,123,152,133,115,46,177,157,141,119,140,135,147,140,126,125,152,150,157,125,124,134,135,133,127,134,135,113,125,129,81,105,168,138,130,169,156,165,165,130,109,129,122,136,135,135,133,126,122,115,130,135,141,148,136,132,150,171,150,133,123,129,129,121,109,112,121,119,122,131,129,141,133,141,142,156,131,125,131,147,149,80,104,162,126,133,140,135,133,129,133,151,145,155,139,141,159,158,144,157,132,134,130,122,131,145,121,48,181,152,140,135,126,122,124,145,141,143,144,144,145,135,119,119,122,141,163,151,145,135,151,143,123,47,177,143,125,123,152,136,158,144,138,138,147,151,151,126,131,133,121,131,132,139,136,123,122,133,79,104,164,127,136,174,166,166,168,134,120,135,122,130,150,133,132,131,115,122,140,133,141,141,125,125,138,170,141,132,129,119,129,130,122,116,135,130,124,126,147,138,123,115,130,154,125,120,133,135,138,77,104,163,135,147,141,145,131,130,127,147,147,163,145,163,157,157,150,141,134,130,147,139,127,136,121,46,181,149,136,140,133,118,110,126,135,124,125,132,118,120,130,129,123,151,152,145,139,151,136,134,111,46,181,138,122,120,144,139,138,148,138,127,138,148,150,135,114,135,138,145,151,143,145,142,118,136,82,104,166,144,155,169,144,159,158,133,118,140,132,120,124,134,130,115,120,134,136,136,148,130,113,129,149,168,145,138,133,129,143,132,125,120,125,135,126,122,139,130,116,116,134,140,120,121,126,143,135,71,103,163,130,133,134,133,131,122,129,142,149,156,138,158,145,149,147,142,149,133,139,133,130,127,118,46,181,145,127,135,134,118,112,125,131,119,122,135,118,118,133,133,133,141,147,142,132,140,134,134,107,44,178,131,127,120,143,136,133,159,141,125,140,152,141,133,114,124,134,141,145,144,140,127,121,123,77,104,165,150,162,152,145,157,154,141,124,136,126,119,124,124,127,114,118,131,129,138,142,131,122,132,143,133,84,78,80,77,79,78,80,79,74,80,73,76,72,79,73,73,76,79,74,74,70,79,76,50,92,101,75,85,72,70,73,75,75,79,73,80,84,84,81,89,84,75,86,80,80,72,71,68,63,37,141,88,76,72,76,74,73,75,77,84,77,73,71,70,72,77,79,80,78,73,79,78,74,72,65,36,140,80,70,72,75,77,76,80,86,76,86,91,82,80,77,74,79,79,81,83,79,73,80,77,52,92,106,78,81,82,88,86,92,80,80,70,71,74,72,73,73,74,68,70,74,77,73,78,84,77,73,71,49,45,46,48,46,47,45,46,45,45,45,44,44,46,47,45,46,46,45,45,45,45,44,38,61,58,45,47,45,45,45,47,46,45,45,45,46,48,48,49,48,45,47,48,46,44,44,44,41,34,80,50,45,44,44,44,44,46,46,45,45,45,45,46,45,45,47,47,46,45,48,46,47,44,41,33,80,48,44,45,45,45,44,46,48,47,49,50,47,46,47,45,45,46,47,48,48,45,46,44,38,62,61,45,45,49,49,49,50,46,46,44,45,45,44,44,45,44,44,45,46,46,44,46,47,46,44,147,174,176,177,180,182,182,180,178,177,177,178,180,181,180,178,181,180,180,178,180,180,178,178,177,176,177,180,178,182,182,182,181,178,180,177,175,174,177,180,182,182,180,181,183,180,177,178,176,177,178,178,180,181,180,180,180,182,181,180,178,178,177,178,180,178,177,178,177,181,182,182,181,181,176,175,175,177,177,181,180,177,177,178,178,180,180,178,181,181,180,180,178,180,180,180,180,178,177,178,178,156,150,184,181,182,182,182,183,182,183,181,178,177,176,177,177,176,175,177,181,180,180,180,180,180,178,178,124,125,126,139,139,156,157,156,157,140,145,154,155,161,149,152,148,150,156,141,148,144,136,162,142,131,142,147,139,157,165,156,155,141,145,144,125,122,149,158,154,180,158,166,164,164,148,136,136,139,144,140,147,141,156,147,143,162,149,155,141,135,144,147,155,142,142,152,142,140,161,162,147,149,148,145,139,145,147,157,149,145,139,136,139,149,149,141,155,148,156,158,147,156,144,150,155,149,131,152,150,91,108,174,152,164,156,165,169,169,178,165,134,143,142,139,138,138,140,155,155,157,155,141,145,157,156,156,130,114,118,124,126,135,139,135,147,133,143,145,139,144,126,144,133,132,154,126,132,129,129,159,125,113,120,119,121,138,151,151,149,133,127,129,113,114,136,149,142,166,155,151,158,145,136,130,123,130,121,127,141,139,150,139,126,136,127,138,131,122,132,148,144,124,131,142,133,129,156,145,141,143,139,134,134,141,129,140,148,136,125,126,134,139,132,118,134,136,140,151,142,150,126,144,154,141,123,140,148,79,105,163,140,152,154,145,148,152,159,152,125,141,139,127,118,124,133,135,149,141,140,125,133,142,154,147,131,115,126,132,120,125,145,145,139,138,141,134,138,156,139,126,133,145,143,139,141,133,144,139,112,111,130,109,114,122,138,140,138,141,134,111,105,118,119,130,161,136,143,154,132,125,143,120,124,113,125,132,126,129,132,126,131,143,132,148,138,134,116,141,159,136,134,139,142,152,134,156,136,143,132,123,133,122,141,114,138,139,119,133,127,131,120,125,134,140,135,139,134,145,138,143,136,131,124,136,171,85,104,169,144,157,142,140,147,142,127,130,126,118,147,126,126,118,118,123,135,135,126,123,120,136,145,138,125,118,134,134,116,135,141,152,142,148,139,143,151,148,141,122,120,141,144,161,152,149,161,143,113,121,126,119,119,129,143,152,141,129,129,112,116,126,112,119,145,136,151,158,133,131,154,116,132,112,124,140,135,139,135,126,132,136,135,133,147,135,123,141,147,147,149,152,145,149,133,154,129,150,133,122,127,130,141,121,136,138,111,116,129,129,115,121,123,133,135,141,127,142,131,129,123,116,116,140,158,82,104,170,141,149,152,141,154,145,143,123,126,113,129,138,130,125,113,122,134,141,129,122,121,140,136,136,124,114,139,140,135,150,152,143,149,138,143,147,147,144,140,142,156,144,145,141,164,169,150,127,124,126,123,119,123,133,149,148,131,118,127,129,129,118,127,120,138,125,154,143,148,136,143,120,118,111,123,131,141,142,121,116,121,119,123,127,130,133,141,149,156,156,147,150,130,131,135,142,144,157,149,142,127,122,147,149,136,131,113,103,141,126,138,123,134,136,149,139,123,127,127,120,111,111,116,139,159,81,104,162,129,144,161,149,135,135,138,132,135,134,125,119,133,145,129,125,140,149,142,130,127,132,140,149,139,129,139,147,140,149,144,140,145,147,154,150,139,132,136,140,142,136,139,140,156,162,149,135,132,133,132,126,124,144,148,141,121,116,133,133,155,126,134,121,135,121,141,139,150,140,140,127,110,109,123,126,139,134,120,125,132,118,122,122,126,135,122,144,147,154,148,155,134,133,135,135,143,144,142,139,125,111,156,141,131,127,115,108,122,125,133,122,132,138,144,139,125,134,120,116,111,116,122,140,156,79,104,163,127,145,157,155,140,135,143,142,133,134,124,133,126,136,135,126,138,139,134,130,123,131,149,145,151,132,136,141,135,138,131,140,120,144,161,152,143,145,147,154,154,148,152,157,140,148,130,142,148,134,140,150,168,150,141,158,155,136,131,142,140,129,156,145,140,133,132,156,165,148,151,135,126,108,136,123,130,118,130,131,141,132,131,139,138,135,134,131,145,142,147,140,150,159,127,135,150,147,124,120,127,125,159,139,124,129,108,111,114,135,149,142,152,158,155,130,134,149,148,133,132,132,129,113,120,71,105,172,143,142,165,131,116,143,147,151,121,130,143,125,135,139,133,127,147,136,143,127,115,118,142,152,144,139,139,142,139,147,141,133,139,155,135,136,148,154,149,162,143,147,151,136,118,114,124,129,143,134,126,140,142,133,134,138,130,138,121,122,127,130,142,151,133,154,143,147,158,154,152,129,119,119,125,132,124,119,131,141,136,115,124,134,131,141,131,115,141,145,142,145,138,150,144,147,147,145,126,120,118,149,149,147,132,129,124,109,110,129,133,136,131,148,139,130,124,144,149,131,123,121,130,116,110,77,105,165,142,149,156,152,135,147,150,139,126,133,168,152,144,138,120,127,144,149,152,134,114,109,130,145,139,152,134,130,142,168,148,141,133,152,131,141,154,157,162,155,152,133,144,130,112,116,118,121,135,139,131,140,148,133,139,134,125,130,125,124,126,130,144,130,143,148,136,150,157,159,151,135,115,120,126,134,121,122,132,132,132,109,118,138,131,131,133,135,148,133,135,138,135,163,155,162,144,144,132,129,123,145,141,142,144,129,125,111,113,121,126,133,129,149,134,132,127,152,155,131,121,121,119,108,114,77,105,171,143,161,143,145,139,155,131,142,125,123,155,150,144,136,123,124,145,152,156,133,109,120,140,156,134,135,125,131,138,154,142,150,152,147,152,151,149,150,155,155,162,141,124,132,118,110,113,120,133,154,158,139,119,123,129,125,121,125,124,139,129,134,132,140,150,150,148,152,165,147,132,136,129,120,132,119,132,130,131,133,132,132,135,140,133,143,139,150,141,132,136,134,134,149,145,162,136,138,134,129,139,162,148,141,142,112,122,120,116,109,124,138,149,144,136,133,145,142,144,116,111,114,114,113,123,75,105,171,159,158,156,156,134,125,142,132,138,124,140,148,124,132,110,114,148,152,151,139,124,130,131,156,126,126,127,130,127,155,143,148,159,151,150,150,152,148,155,152,163,161,129,140,134,121,119,129,134,163,159,136,120,115,124,119,122,124,121,139,127,133,130,141,144,141,150,158,163,132,126,140,124,119,123,116,130,132,126,136,147,147,144,140,142,156,144,145,141,145,147,143,126,136,143,158,132,132,134,123,140,158,151,156,138,113,120,115,124,123,124,131,131,139,133,142,151,143,125,113,116,120,120,123,133,72,105,170,159,156,155,134,135,121,140,144,135,129,136,136,130,130,110,110,147,155,139,142,131,140,136,154])})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          DEF : new SFString("_6"),
                                                          scale : new SFVec2f([1.11677,1.8741])}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorIndex : new MFInt32([1,2,2,0,-1]),
                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.0481283,0.0476119,0.0397317,0.101604,0.101604,0.101604,0,0,0])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.506073,0.281812,1,0.279619,1,0.62902,0.530416,0.619597])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.703987,100.001,43.6278,100,100,44.0763,100,100,-25.804,-2.6085,100,-23.8523])}))}))})])})])}),

                                        new Transform({
                                          DEF : new SFString("Horten"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Ei_1"),
                                              children : new MFNode([
                                                new Inline({
                                                  url : new MFString(["ei.x3d"]),
                                                  bboxSize : new SFVec3f([12.4482,13.601,7.48383]),
                                                  bboxCenter : new SFVec3f([7.8503,6.81211,8.18435])})])}),

                                            new Transform({
                                              DEF : new SFString("Fassade"),
                                              children : new MFNode([
                                                new Transform({
                                                  translation : new SFVec3f([-0.00304317,0.0291786,0]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      DEF : new SFString("Rahmen_1"),
                                                      children : new MFNode([
                                                        new Transform({
                                                          DEF : new SFString("oben_1"),
                                                          translation : new SFVec3f([0.0569316,25.4481,9.07963]),
                                                          rotation : new SFRotation([-1,0,0,0.994831]),
                                                          scale : new SFVec3f([250.596,1.10601,12.6106]),
                                                          scaleOrientation : new SFRotation([1,0,0,0.00119604]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([1,1,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1]),
                                                                  coordIndex : new MFInt32([0,1,3,2,-1,4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,2,4,-1,1,7,5,3,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.385027,0.385027,0.385027,0.272727,0.272727,0.272727])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-0.1,0.1,0.1,-0.1,-0.1,0.1,0.1,0.1,0.1,0.1,-0.1,0.1,0.1,0.1,-0.1,0.1,-0.1,-0.1,-0.1,0.1,-0.1,-0.1,-0.1,-0.1])}))}))})])}),

                                                        new Transform({
                                                          DEF : new SFString("rechts_1"),
                                                          translation : new SFVec3f([24.3961,15.0971,9.19524]),
                                                          rotation : new SFRotation([-0.00102882,0.999999,0.000319979,2.54859]),
                                                          scale : new SFVec3f([0.895142,11.3137,0.12094]),
                                                          scaleOrientation : new SFRotation([-0.000211502,0.999997,-0.00225695,0.010381]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorPerVertex : new SFBool(false),
                                                                  colorIndex : new MFInt32([0,0,0,0,0,0]),
                                                                  coordIndex : new MFInt32([0,1,3,2,-1,4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,2,4,-1,1,7,5,3,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.315508,0.315508,0.315508])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-1,1,1,-1,-1,1,1,1,1,1,-1,1,1,1,-1,1,-1,-1,-1,1,-1,-1,-1,-1])}))}))})])}),

                                                        new Transform({
                                                          DEF : new SFString("links_1"),
                                                          translation : new SFVec3f([-24.3036,14.7311,9.02118]),
                                                          rotation : new SFRotation([0.263903,0.682039,-0.682039,2.62556]),
                                                          scale : new SFVec3f([0.0870239,0.891667,10.905]),
                                                          scaleOrientation : new SFRotation([-0.00000503664,9.01778e-7,1,0.00655098]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,0,0,0,-1,0,0,0,0,-1,0,1,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,1,0,0,-1]),
                                                                  coordIndex : new MFInt32([0,1,3,2,-1,4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,2,4,-1,1,7,5,3,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.315508,0.315508,0.315508,0.272727,0.272727,0.272727])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-1,1,1,-1,-1,1,1,1,1,1,-1,1,1,1,-1,1,-1,-1,-1,1,-1,-1,-1,-1])}))}))})])}),

                                                        new Transform({
                                                          DEF : new SFString("unten_1"),
                                                          translation : new SFVec3f([0.201207,4.21422,8.04427]),
                                                          rotation : new SFRotation([-5.92111e-9,0.707107,-0.707107,3.14159]),
                                                          scale : new SFVec3f([243.411,12.0488,4.78785]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorPerVertex : new SFBool(false),
                                                                  colorIndex : new MFInt32([0,0,0,0,0,0]),
                                                                  coordIndex : new MFInt32([0,1,3,2,-1,4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,2,4,-1,1,7,5,3,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.315508,0.315508,0.315508])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-0.1,0.1,0.1,-0.1,-0.1,0.1,0.1,0.1,0.1,0.1,-0.1,0.1,0.1,0.1,-0.1,0.1,-0.1,-0.1,-0.1,0.1,-0.1,-0.1,-0.1,-0.1])}))}))})])})])}),

                                                    new Transform({
                                                      children : new MFNode([
                                                        new Transform({
                                                          DEF : new SFString("Wand"),
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorPerVertex : new SFBool(false),
                                                                  colorIndex : new MFInt32([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
                                                                  coordIndex : new MFInt32([5,7,8,6,-1,7,9,10,8,-1,9,11,22,12,10,-1,15,17,18,16,-1,17,19,20,18,-1,19,21,20,-1,0,1,4,-1,1,5,6,4,-1,13,16,14,-1,13,15,16,-1,13,3,15,-1,11,2,13,-1,14,12,22,-1,11,13,22,-1,13,14,22,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.385027,0.385027,0.385027])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.131664,0.0745165,0.115909,0.131664,1.17267,0.115909,-0.125628,1.17267,0.115909,-0.125628,0.0745165,0.115909,0.069508,0.0745165,0.115909,0.0916149,1.17267,0.115909,0.0730505,0.25049,0.115909,0.049403,1.17267,0.115909,0.0699628,0.370901,0.115909,0.0117672,1.17267,0.115909,0.0625958,0.472397,0.115909,-0.0793567,1.17267,0.115909,0.0488136,0.540387,0.115909,-0.125628,0.50386,0.115909,0.0369543,0.537904,0.115909,-0.0551113,0.0745165,0.115909,0.0235834,0.470605,0.115909,-0.00460786,0.0745165,0.115909,0.0163885,0.369517,0.115909,0.00960614,0.0745165,0.115909,0.0129973,0.222017,0.115909,0.0167929,0.0745165,0.115909,0.0281578,0.642285,0.115909])}))}))})])}),

                                                        new Transform({
                                                          DEF : new SFString("Fenster_1"),
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  material : new SFNode(
                                                                    new Material({
                                                                      ambientIntensity : new SFFloat(0),
                                                                      diffuseColor : new SFColor([0,0,0]),
                                                                      specularColor : new SFColor([0.5,0.5,0.5]),
                                                                      emissiveColor : new SFColor([0.598361,0.598361,0.598361]),
                                                                      transparency : new SFFloat(0.696721)}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorPerVertex : new SFBool(false),
                                                                  coordIndex : new MFInt32([0,1,9,-1,1,2,9,-1,2,8,9,-1,2,3,8,-1,3,7,8,-1,3,4,7,-1,4,6,7,-1,4,5,6,-1]),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.0167929,0.0745165,0.115909,0.069508,0.0745165,0.115909,0.0730505,0.25049,0.115909,0.0699628,0.370901,0.115909,0.0625958,0.472397,0.115909,0.0488136,0.540387,0.115909,0.0369543,0.537904,0.115909,0.0235834,0.470605,0.115909,0.0163885,0.369517,0.115909,0.0129973,0.222017,0.115909])}))}))})])})])})])}),

                                                new Transform({
                                                  children : new MFNode([
                                                    new Transform({
                                                      children : new MFNode([
                                                        new Switch({
                                                          whichChoice : new SFInt32(1),
                                                          children : new MFNode([
                                                            new Transform({
                                                              translation : new SFVec3f([-0.222313,15.0349,8.91206])}),

                                                            new Transform({
                                                              children : new MFNode([
                                                                new TimeSensor({
                                                                  DEF : new SFString("_7"),
                                                                  loop : new SFBool(true)}),

                                                                new Transform({
                                                                  children : new MFNode([
                                                                    new Script({
                                                                      DEF : new SFString("_tex"),
                                                                      field : new MFNode([
                                                                        new field({
                                                                          type : field.TYPE_SFNODE,
                                                                          name : new SFString("texture_changed"),
                                                                          accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                                                        new field({
                                                                          type : field.TYPE_SFTIME,
                                                                          name : new SFString("time"),
                                                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                                                        new field({
                                                                          type : field.TYPE_SFFLOAT,
                                                                          name : new SFString("set_fraction"),
                                                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                                                        new field({
                                                                          type : field.TYPE_MFNODE,
                                                                          name : new SFString("textures"),
                                                                          accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY),
                                                                          children : new MFNode([
                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0001.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0002.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0003.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0004.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0005.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0006.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0007.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0008.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0009.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0010.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0011.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0012.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0013.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0014.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0015.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0016.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0017.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0018.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0019.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0020.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0021.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0022.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0023.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0024.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0025.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0026.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0027.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0028.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0029.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0030.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0031.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0032.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0033.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0034.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0035.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0036.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0037.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0038.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0039.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0040.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0041.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0042.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0043.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0044.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0045.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0046.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0047.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0048.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0049.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0050.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0051.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0052.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0053.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0054.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0055.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0056.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0057.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0058.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0059.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0060.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0061.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0062.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0063.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0064.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0065.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0066.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0067.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0068.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0069.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0070.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0071.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0072.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0073.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0074.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0075.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0076.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0077.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0078.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0079.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0080.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0081.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0082.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0083.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0084.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0085.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0086.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0087.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0088.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0089.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0090.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0091.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0092.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0093.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0094.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0095.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0096.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0097.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0098.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0099.png"])}),

                                                                            new ImageTexture({
                                                                              url : new MFString(["l.0100.png"])})])}),

                                                                        new field({
                                                                          type : field.TYPE_SFINT32,
                                                                          name : new SFString("i"),
                                                                          accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),

                                                                        new field({
                                                                          type : field.TYPE_SFTIME,
                                                                          name : new SFString("last"),
                                                                          accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),

                                                                        new field({
                                                                          type : field.TYPE_SFFLOAT,
                                                                          name : new SFString("fraction"),
                                                                          accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY),
                                                                          value : new SFString("3")}),
                                                                      ]),vrmlscript:

, function time(value, time)
{
	if(value - last > fraction){
		last = value;
		texture_changed = textures[i];
		if(++i > 99) i = 0;
	}
}

, function set_fraction(value, time)
{
	fraction = value;
})})])}),

                                                                new Transform({
                                                                  DEF : new SFString("Lichtblenden"),
                                                                  children : new MFNode([
                                                                    new Transform({
                                                                      DEF : new SFString("b1_1"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([-0.758051,16.0613,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              DEF : new SFString("_8"),
                                                                              children : new MFNode([
                                                                                new Transform({
                                                                                  children : new MFNode([
                                                                                    new Transform({
                                                                                      DEF : new SFString("xpanel"),
                                                                                      translation : new SFVec3f([-19.4532,4.5486,22.8402]),
                                                                                      scale : new SFVec3f([1.06766,1.06766,1.06766]),
                                                                                      children : new MFNode([
                                                                                        new Shape({
                                                                                          appearance : new SFNode(
                                                                                            new Appearance({
                                                                                              DEF : new SFString("_9")})),
                                                                                          geometry : new SFNode(
                                                                                            new IndexedFaceSet({
                                                                                              convex : new SFBool(false),
                                                                                              coordIndex : new MFInt32([0,2,3,-1,0,1,2,-1,4,5,6,-1,4,6,7,-1,7,8,9,-1,7,6,8,-1,18,19,20,-1,19,21,20,-1,30,31,32,-1,31,33,32,-1,34,35,36,-1,35,37,36,-1,12,39,38,13,-1,39,10,11,38,-1,23,41,40,22,-1,41,25,24,40,-1,26,29,42,43,-1,42,27,28,43,-1,15,45,44,14,-1,45,17,16,44,-1,47,1,0,46,-1,2,5,4,3,-1,47,46,12,13,-1]),
                                                                                              coord : new SFNode(
                                                                                                new Coordinate({
                                                                                                  point : new MFVec3f([-4.48538,3.52097,0.644599,4.51462,3.52097,0.644599,4.51462,4.35818,0.644598,-4.48538,4.35818,0.644598,-4.48538,4.35826,0.855825,4.51462,4.35826,0.855825,4.51462,4.52319,0.855825,-4.48538,4.52319,0.855825,4.51462,4.52319,-0.544037,-4.48538,4.52319,-0.544037,-4.48538,0.0201368,9.23872e-7,4.51462,0.0201368,7.7486e-7,-4.48538,3.52097,-0.00000223517,4.52192,3.52097,-0.00000237947,-4.4584,3.13242,0.0486775,4.4584,3.13242,0.0486775,-4.4584,3.3283,0.539732,4.4584,3.3283,0.539732,-4.4584,1.18079,-0.00621301,4.4584,1.18079,-0.00621301,-4.4584,1.80979,0.20812,4.4584,1.80979,0.20812,-4.4584,1.96288,-0.0117726,4.4584,1.96288,-0.0117726,-4.4584,2.36556,0.246246,4.4584,2.36556,0.246246,4.4584,2.97158,0.342958,-4.4584,2.52296,-0.0248919,4.4584,2.52296,-0.0248919,-4.4584,2.97158,0.342958,-4.4584,3.77614,0.660755,4.4584,3.77614,0.660755,-4.4584,3.86637,0.763832,4.4584,3.86637,0.763832,-4.4584,4.12229,0.659364,4.4584,4.12229,0.659364,-4.4584,4.20583,0.765223,4.4584,4.20583,0.765223,4.52923,1.20059,3.57628e-7,-4.48538,1.20059,5.01922e-7,-4.4584,2.10137,0.0769645,4.4584,2.10137,0.0769645,-4.4584,2.74563,0.157688,4.4584,2.74563,0.157688,-4.4584,3.23036,0.294205,4.4584,3.23036,0.294205,-4.48538,3.52097,0.461401,4.52192,3.52097,0.461401])}))}))})])})])})])})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b2_1"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([-0.758051,10.614,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b3_1"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([-0.758051,5.30633,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b4_1"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([-0.76255,-0.0117431,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              children : new MFNode([
                                                                                new Transform({
                                                                                  USE : new SFString("_8")})])})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b5"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([9.21827,16.1286,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b6"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([9.08375,10.7485,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b7"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([8.95253,5.31003,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b8"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([9.22275,-0.0092144,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b9"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([19.129,16.1337,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b10"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([19.12,10.7485,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b13"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([29.1311,16.1286,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b14"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([28.9966,10.7485,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b17"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([39.1776,16.1286,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b18"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([39.1776,10.883,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b19"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([38.8947,5.34663,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("b20"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([38.8528,-0.0117431,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              USE : new SFString("_8")})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("Ei"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          translation : new SFVec3f([19.12,5.31003,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              translation : new SFVec3f([-19.4532,4.5486,22.8402]),
                                                                              scale : new SFVec3f([1.06766,1.06766,1.06766]),
                                                                              children : new MFNode([
                                                                                new Shape({
                                                                                  appearance : new SFNode(
                                                                                    new Appearance({
                                                                                      USE : new SFString("_9")})),
                                                                                  geometry : new SFNode(
                                                                                    new IndexedFaceSet({
                                                                                      convex : new SFBool(false),
                                                                                      coordIndex : new MFInt32([0,2,3,-1,0,1,2,-1,4,5,6,-1,4,6,7,-1,7,8,9,-1,7,6,8,-1,26,27,28,-1,27,29,28,-1,30,31,32,-1,31,33,32,-1,36,21,20,35,-1,22,25,37,38,-1,37,23,24,38,-1,14,40,39,13,-1,40,16,15,39,-1,42,1,0,41,-1,2,5,4,3,-1,42,41,11,12,-1,18,45,46,-1,18,17,45,-1,34,10,44,-1,10,43,44,-1,11,34,44,47,12,-1,36,35,19,48,-1]),
                                                                                      coord : new SFNode(
                                                                                        new Coordinate({
                                                                                          point : new MFVec3f([-4.48538,3.52097,0.644599,4.51462,3.52097,0.644599,4.51462,4.35818,0.644598,-4.48538,4.35818,0.644598,-4.48538,4.35826,0.855825,4.51462,4.35826,0.855825,4.51462,4.52319,0.855825,-4.48538,4.52319,0.855825,4.51462,4.52319,-0.544037,-4.48538,4.52319,-0.544037,-4.48538,0.0201368,9.23872e-7,-4.48538,3.52097,-0.00000223517,4.52192,3.52097,-0.00000237947,-4.4584,3.13242,0.0486775,4.4584,3.13242,0.0486775,-4.4584,3.3283,0.539732,4.4584,3.3283,0.539732,-4.4584,1.18079,-0.00621301,-4.4584,1.80979,0.20812,-4.4584,1.96288,-0.0117726,-4.4584,2.36556,0.246246,4.4584,2.36556,0.246246,4.4584,2.97158,0.342958,-4.4584,2.52296,-0.0248919,4.4584,2.52296,-0.0248919,-4.4584,2.97158,0.342958,-4.4584,3.77614,0.660755,4.4584,3.77614,0.660755,-4.4584,3.86637,0.763832,4.4584,3.86637,0.763832,-4.4584,4.12229,0.659364,4.4584,4.12229,0.659364,-4.4584,4.20583,0.765223,4.4584,4.20583,0.765223,-4.48538,1.20059,5.01922e-7,-4.4584,2.10137,0.0769645,4.4584,2.10137,0.0769645,-4.4584,2.74563,0.157688,4.4584,2.74563,0.157688,-4.4584,3.23036,0.294205,4.4584,3.23036,0.294205,-4.48538,3.52097,0.461401,4.52192,3.52097,0.461401,2.95971,0.0201368,8.00604e-7,3.65345,1.20059,3.71646e-7,3.66353,1.18079,-0.00621301,4.22019,1.80979,0.20812,4.52639,2.10193,-7.05586e-7,4.35738,1.96288,-0.0117726])}))}))})])})])}),

                                                                        new Transform({
                                                                          translation : new SFVec3f([19.12,-0.0092144,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              translation : new SFVec3f([-19.4532,4.5486,22.8402]),
                                                                              scale : new SFVec3f([1.06766,1.06766,1.06766]),
                                                                              children : new MFNode([
                                                                                new Shape({
                                                                                  appearance : new SFNode(
                                                                                    new Appearance({
                                                                                      USE : new SFString("_9")})),
                                                                                  geometry : new SFNode(
                                                                                    new IndexedFaceSet({
                                                                                      convex : new SFBool(false),
                                                                                      coordIndex : new MFInt32([19,5,25,24,-1,9,27,26,10,-1,28,10,26,-1,29,12,20,30,-1,30,20,11,31,-1,32,14,21,33,-1,21,13,34,33,-1,35,8,22,36,-1,36,22,7,37,-1,38,16,39,-1,15,40,39,16,-1,41,18,42,-1,17,43,42,18,-1,2,44,3,-1,44,45,3,-1,0,46,47,-1,0,47,48,1,-1,44,2,1,48,-1,46,0,23,49,-1,19,24,50,-1,6,19,50,51,-1,49,23,6,51,-1,3,52,4,-1,3,45,52,-1]),
                                                                                      coord : new SFNode(
                                                                                        new Coordinate({
                                                                                          point : new MFVec3f([-4.48538,3.52097,0.644599,-4.48538,4.35818,0.644598,-4.48538,4.35826,0.855825,-4.48538,4.52319,0.855825,-4.48538,4.52319,-0.544037,-4.48538,0.0201368,9.23872e-7,-4.48538,3.52097,-0.00000223517,-4.4584,3.13242,0.0486775,-4.4584,3.3283,0.539732,-4.4584,1.18079,-0.00621301,-4.4584,1.80979,0.20812,-4.4584,1.96288,-0.0117726,-4.4584,2.36556,0.246246,-4.4584,2.52296,-0.0248919,-4.4584,2.97158,0.342958,-4.4584,3.77614,0.660755,-4.4584,3.86637,0.763832,-4.4584,4.12229,0.659364,-4.4584,4.20583,0.765223,-4.48538,1.20059,5.01922e-7,-4.4584,2.10137,0.0769645,-4.4584,2.74563,0.157688,-4.4584,3.23036,0.294205,-4.48538,3.52097,0.461401,2.54548,1.20059,3.89381e-7,2.80208,0.0201368,8.03214e-7,2.51892,1.3176,0.0404061,2.54419,1.18079,-0.00621301,2.47879,1.80979,0.20812,2.45538,2.36556,0.246246,2.43226,2.10137,0.0769645,2.43226,1.96288,-0.0117726,2.49122,2.97158,0.342958,2.44487,2.74563,0.157688,2.41384,2.52296,-0.0248919,2.56246,3.3283,0.539732,2.51516,3.23036,0.294205,2.45796,3.13242,0.0486775,2.70271,3.86637,0.763832,2.66569,3.79428,0.681479,2.66569,3.77614,0.660755,2.80226,4.20583,0.765223,2.76849,4.13812,0.679426,2.75834,4.12229,0.659364,2.86435,4.35826,0.855825,2.91969,4.52319,0.855825,2.59819,3.52097,0.644599,2.77567,4.19642,0.644598,2.83412,4.35818,0.644598,2.57211,3.52097,0.461401,2.34518,2.45266,-0.00000108439,2.49526,3.52097,-0.000002347,2.71705,4.52319,-0.544037])}))}))})])})])}),

                                                                        new Transform({
                                                                          translation : new SFVec3f([28.9966,5.31003,-14.0946]),
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              translation : new SFVec3f([-19.4532,4.5486,22.8402]),
                                                                              scale : new SFVec3f([1.06766,1.06766,1.06766]),
                                                                              children : new MFNode([
                                                                                new Shape({
                                                                                  appearance : new SFNode(
                                                                                    new Appearance({
                                                                                      USE : new SFString("_9")})),
                                                                                  geometry : new SFNode(
                                                                                    new IndexedFaceSet({
                                                                                      convex : new SFBool(false),
                                                                                      coordIndex : new MFInt32([0,2,3,-1,0,1,2,-1,4,5,6,-1,4,6,7,-1,7,8,9,-1,7,6,8,-1,23,24,25,-1,24,26,25,-1,27,28,29,-1,28,30,29,-1,37,1,0,36,-1,2,5,4,3,-1,37,36,11,12,-1,40,31,39,-1,40,38,10,31,-1,17,18,41,42,-1,43,17,42,-1,32,20,44,45,-1,19,32,45,46,-1,21,47,48,33,-1,49,22,33,48,-1,14,35,51,50,-1,35,16,52,54,56,51,-1,52,15,34,53,55,54,-1,56,54,55,-1,53,34,13,57,-1,39,31,12,-1,59,39,12,-1,60,59,12,-1,62,60,12,-1,65,62,12,-1,64,65,12,-1,63,64,11,-1,64,12,11,-1,63,11,61,-1,11,58,61,-1]),
                                                                                      coord : new SFNode(
                                                                                        new Coordinate({
                                                                                          point : new MFVec3f([-4.48538,3.52097,0.644599,4.51462,3.52097,0.644599,4.51462,4.35818,0.644598,-4.48538,4.35818,0.644598,-4.48538,4.35826,0.855825,4.51462,4.35826,0.855825,4.51462,4.52319,0.855825,-4.48538,4.52319,0.855825,4.51462,4.52319,-0.544037,-4.48538,4.52319,-0.544037,4.51462,0.0201368,7.7486e-7,-4.48538,3.52097,-0.00000223517,4.52192,3.52097,-0.00000237947,-4.4584,3.13242,0.0486775,4.4584,3.13242,0.0486775,-4.4584,3.3283,0.539732,4.4584,3.3283,0.539732,4.4584,1.18079,-0.00621301,4.4584,1.80979,0.20812,4.4584,1.96288,-0.0117726,4.4584,2.36556,0.246246,4.4584,2.97158,0.342958,4.4584,2.52296,-0.0248919,-4.4584,3.77614,0.660755,4.4584,3.77614,0.660755,-4.4584,3.86637,0.763832,4.4584,3.86637,0.763832,-4.4584,4.12229,0.659364,4.4584,4.12229,0.659364,-4.4584,4.20583,0.765223,4.4584,4.20583,0.765223,4.52923,1.20059,3.57628e-7,4.4584,2.10137,0.0769645,4.4584,2.74563,0.157688,-4.4584,3.23036,0.294205,4.4584,3.23036,0.294205,-4.48538,3.52097,0.461401,4.52192,3.52097,0.461401,3.23906,0.0201368,7.95979e-7,2.58325,1.20059,3.88777e-7,2.99082,0.586842,5.99426e-7,2.07856,1.80979,0.20812,2.49678,1.31916,0.0409383,2.59534,1.18079,-0.00621301,1.40108,2.36556,0.246246,1.74052,2.10137,0.0769645,1.88875,1.96288,-0.0117726,0.243643,2.97158,0.342958,0.757626,2.74563,0.157688,1.12126,2.52296,-0.0248919,-0.347953,3.13242,0.0486775,-0.830594,3.23036,0.294205,-1.99126,3.3283,0.539732,-2.05149,3.23036,0.294205,-1.68967,3.30285,0.475934,-1.85348,3.27003,0.39366,-1.52206,3.28871,0.440478,-2.74643,3.13242,0.0486775,-4.48538,2.31275,-8.09966e-7,1.97887,1.90963,-4.37941e-7,1.13783,2.54886,-0.00000117852,-3.46472,2.89872,-0.00000151752,0.134883,2.99963,-0.0000016942,-2.4883,3.20377,-0.000001893,-1.64184,3.30968,-0.00000203148,-0.766867,3.24693,-0.00000197147])}))}))})])})])}),

                                                                        new Transform({
                                                                          children : new MFNode([
                                                                            new Transform({
                                                                              children : new MFNode([
                                                                                new Transform({
                                                                                  translation : new SFVec3f([9.5434,4.53939,8.7456]),
                                                                                  scale : new SFVec3f([1.06766,1.06766,1.06766]),
                                                                                  children : new MFNode([
                                                                                    new Shape({
                                                                                      appearance : new SFNode(
                                                                                        new Appearance({
                                                                                          USE : new SFString("_9")})),
                                                                                      geometry : new SFNode(
                                                                                        new IndexedFaceSet({
                                                                                          convex : new SFBool(false),
                                                                                          coordIndex : new MFInt32([23,4,18,24,-1,26,9,25,-1,26,8,9,-1,26,27,8,-1,19,11,28,29,-1,10,19,29,30,-1,12,31,32,20,-1,33,13,20,32,-1,21,7,34,35,-1,6,21,35,36,-1,22,38,37,5,-1,22,0,39,38,-1,41,1,42,-1,40,1,41,-1,40,39,1,-1,39,0,1,-1,42,1,2,43,-1,43,2,3,44,-1,16,17,46,-1,17,45,46,-1,14,15,47,48,-1,44,3,49,-1,50,24,18,-1,51,5,37,-1,51,50,5,-1,50,18,5,-1]),
                                                                                          coord : new SFNode(
                                                                                            new Coordinate({
                                                                                              point : new MFVec3f([4.51462,3.52097,0.644599,4.51462,4.35818,0.644598,4.51462,4.35826,0.855825,4.51462,4.52319,0.855825,4.51462,0.0201368,7.7486e-7,4.52192,3.52097,-0.00000237947,4.4584,3.13242,0.0486775,4.4584,3.3283,0.539732,4.4584,1.18079,-0.00621301,4.4584,1.80979,0.20812,4.4584,1.96288,-0.0117726,4.4584,2.36556,0.246246,4.4584,2.97158,0.342958,4.4584,2.52296,-0.0248919,4.4584,3.77614,0.660755,4.4584,3.86637,0.763832,4.4584,4.12229,0.659364,4.4584,4.20583,0.765223,4.52923,1.20059,3.57628e-7,4.4584,2.10137,0.0769645,4.4584,2.74563,0.157688,4.4584,3.23036,0.294205,4.52192,3.52097,0.461401,3.38403,0.0201368,7.93579e-7,3.65912,1.20059,3.71556e-7,3.78702,1.80979,0.20812,3.67372,1.23614,0.0126483,3.67372,1.18079,-0.00621301,3.83034,2.36556,0.246246,3.79891,2.10137,0.0769645,3.78301,1.96288,-0.0117726,3.81784,2.97158,0.342958,3.83318,2.74563,0.157688,3.80316,2.52296,-0.0248919,3.80758,3.3283,0.539732,3.78962,3.23036,0.294205,3.76301,3.13242,0.0486775,3.70252,3.52097,-0.00000236634,3.76251,3.52097,0.461401,3.78747,3.52097,0.644599,3.66111,4.10503,0.644598,3.60147,4.27324,0.644598,3.56751,4.35818,0.644598,3.59276,4.35826,0.855825,3.54753,4.50547,0.855825,3.63587,4.20583,0.765223,3.64934,4.12229,0.659364,3.7221,3.86637,0.763832,3.7305,3.77614,0.660755,3.53944,4.52319,0.855825,3.77816,1.85716,-4.04862e-7,3.80652,2.77939,-0.00000149321])}))}))})])})])})])})])})])})])})])})])}),

                                                    new Transform({
                                                      DEF : new SFString("Fensterscheiben"),
                                                      children : new MFNode([
                                                        new Group({
                                                          children : new MFNode([
                                                            new Transform({
                                                              DEF : new SFString("Rahmen_2"),
                                                              children : new MFNode([
                                                                new Transform({
                                                                  children : new MFNode([
                                                                    new Transform({
                                                                      translation : new SFVec3f([30.1842,13.1168,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  DEF : new SFString("_10"),
                                                                                  url : new MFString(["glas2.png"])})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])}),

                                                                    new Transform({
                                                                      translation : new SFVec3f([20.1647,13.1168,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])}),

                                                                    new Transform({
                                                                      translation : new SFVec3f([10.1389,13.1168,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])}),

                                                                    new Transform({
                                                                      translation : new SFVec3f([0.116665,13.1168,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])}),

                                                                    new Transform({
                                                                      translation : new SFVec3f([40.2042,13.1168,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])})])}),

                                                                new Transform({
                                                                  children : new MFNode([
                                                                    new Transform({
                                                                      translation : new SFVec3f([40.2042,1.78331,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])}),

                                                                    new Transform({
                                                                      translation : new SFVec3f([30.1842,1.78331,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])}),

                                                                    new Transform({
                                                                      translation : new SFVec3f([20.1647,1.78331,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])}),

                                                                    new Transform({
                                                                      translation : new SFVec3f([10.1389,1.78331,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])}),

                                                                    new Transform({
                                                                      translation : new SFVec3f([0.116665,1.78331,9.86502]),
                                                                      scale : new SFVec3f([29.283,26.6885,27.0444]),
                                                                      children : new MFNode([
                                                                        new Shape({
                                                                          appearance : new SFNode(
                                                                            new Appearance({
                                                                              texture : new SFNode(
                                                                                new ImageTexture({
                                                                                  USE : new SFString("_10")})),
                                                                              textureTransform : new SFNode(
                                                                                new TextureTransform({
                                                                                  scale : new SFVec2f([5,6])}))})),
                                                                          geometry : new SFNode(
                                                                            new IndexedFaceSet({
                                                                              solid : new SFBool(false),
                                                                              texCoordIndex : new MFInt32([12,20,16,28,24,36,32,44,40,52,48,8,4,1,2,5,-1,0,6,10,50,54,42,46,34,38,26,30,18,22,14,7,3,-1,6,4,9,56,60,64,68,11,-1,153,151,145,143,13,5,7,15,-1,58,74,63,61,57,-1,67,71,69,65,-1,49,53,72,59,-1,72,77,75,59,-1,79,81,76,73,-1,77,82,66,62,75,-1,82,85,70,66,-1,85,55,51,70,-1,87,89,84,83,-1,41,45,90,78,-1,90,93,80,78,-1,93,95,86,80,-1,95,97,88,86,-1,97,47,43,88,-1,99,101,92,91,-1,103,105,96,94,-1,106,109,104,102,-1,109,39,35,104,-1,111,113,108,107,-1,33,37,114,98,-1,114,117,100,98,-1,117,106,102,100,-1,119,121,116,115,-1,25,29,123,122,-1,123,126,120,118,122,-1,126,128,110,120,-1,128,130,112,110,-1,130,31,27,112,-1,132,134,125,124,-1,136,138,129,127,-1,17,21,139,131,-1,139,142,133,131,-1,144,146,141,140,-1,142,147,135,133,-1,147,150,137,135,-1,150,23,19,137,-1,152,154,149,148,-1]),
                                                                              coordIndex : new MFInt32([10,14,12,18,16,22,20,26,24,30,28,8,4,1,2,5,-1,0,6,9,29,31,25,27,21,23,17,19,13,15,11,7,3,-1,6,4,8,32,34,36,38,9,-1,81,80,77,76,10,5,7,11,-1,33,41,35,34,32,-1,37,39,38,36,-1,28,30,40,33,-1,40,42,41,33,-1,43,44,42,40,-1,42,45,37,35,41,-1,45,46,39,37,-1,46,31,29,39,-1,47,48,46,45,-1,24,26,49,43,-1,49,50,44,43,-1,50,51,47,44,-1,51,52,48,47,-1,52,27,25,48,-1,53,54,50,49,-1,55,56,52,51,-1,57,58,56,55,-1,58,23,21,56,-1,59,60,58,57,-1,20,22,61,53,-1,61,62,54,53,-1,62,57,55,54,-1,63,64,62,61,-1,16,18,66,65,-1,66,67,64,63,65,-1,67,68,59,64,-1,68,69,60,59,-1,69,19,17,60,-1,70,71,67,66,-1,72,73,69,68,-1,12,14,74,70,-1,74,75,71,70,-1,76,77,75,74,-1,75,78,72,71,-1,78,79,73,72,-1,79,15,13,73,-1,80,81,79,78,-1]),
                                                                              texCoord : new SFNode(
                                                                                new TextureCoordinate({
                                                                                  point : new MFVec2f([0.200381,0.999266,0.000362478,0.999266,0.000181239,0.499633,0.2002,0.499633,0.00246596,0.999266,0.00228469,0.499633,0.198863,0.999266,0.198682,0.499633,0.00246441,0.994971,0.00246441,0.994971,0.198862,0.994971,0.198862,0.994971,0.00228631,0.504079,0.00228631,0.504079,0.198684,0.504079,0.198684,0.504079,0.002316,0.585934,0.002316,0.585934,0.198714,0.585934,0.198714,0.585934,0.00231406,0.580587,0.00231406,0.580587,0.198712,0.580587,0.198712,0.580587,0.00234682,0.670865,0.00234682,0.670865,0.198744,0.670865,0.198744,0.670865,0.00234362,0.662048,0.00234362,0.662048,0.198741,0.662048,0.198741,0.662048,0.00237626,0.75202,0.00237626,0.75202,0.198774,0.75202,0.198774,0.75202,0.00237431,0.746644,0.00237431,0.746644,0.198772,0.746644,0.198772,0.746644,0.00240723,0.837389,0.00240723,0.837389,0.198805,0.837389,0.198805,0.837389,0.00240418,0.828963,0.00240418,0.828963,0.198802,0.828963,0.198802,0.828963,0.00243662,0.91838,0.00243662,0.91838,0.198834,0.91838,0.198834,0.91838,0.00243499,0.913902,0.00243499,0.913902,0.198833,0.913902,0.198833,0.913902,0.0659314,0.994971,0.0659314,0.994971,0.0659037,0.91838,0.0659037,0.91838,0.0680922,0.994971,0.0680922,0.994971,0.0680645,0.91838,0.0680645,0.91838,0.132335,0.994971,0.132335,0.994971,0.132307,0.91838,0.132307,0.91838,0.134537,0.994971,0.134537,0.994971,0.134509,0.91838,0.134509,0.91838,0.0659021,0.913902,0.0659021,0.913902,0.0680052,0.91838,0.0680052,0.91838,0.0680036,0.913902,0.0680036,0.913902,0.0658743,0.837389,0.0658743,0.837389,0.0679759,0.837389,0.0679759,0.837389,0.132305,0.913902,0.132305,0.913902,0.134507,0.913902,0.134507,0.913902,0.132278,0.837389,0.132278,0.837389,0.13448,0.837389,0.13448,0.837389,0.0658713,0.828963,0.0658713,0.828963,0.0679729,0.828963,0.0679729,0.828963,0.132275,0.828963,0.132275,0.828963,0.134477,0.828963,0.134477,0.828963,0.0658434,0.75202,0.0658434,0.75202,0.067945,0.75202,0.067945,0.75202,0.132247,0.75202,0.132247,0.75202,0.134449,0.75202,0.134449,0.75202,0.132245,0.746644,0.132245,0.746644,0.134447,0.746644,0.134447,0.746644,0.132217,0.670865,0.132217,0.670865,0.134419,0.670865,0.134419,0.670865,0.0658414,0.746644,0.0658414,0.746644,0.067943,0.746644,0.067943,0.746644,0.065814,0.670865,0.065814,0.670865,0.0679155,0.670865,0.0679155,0.670865,0.0656677,0.670865,0.0656645,0.662048,0.0656645,0.662048,0.0679124,0.662048,0.0679123,0.662048,0.132214,0.662048,0.132214,0.662048,0.134416,0.662048,0.134416,0.662048,0.0656369,0.585934,0.0656369,0.585934,0.0678847,0.585934,0.0678847,0.585934,0.132187,0.585934,0.132187,0.585934,0.134388,0.585934,0.134388,0.585934,0.065635,0.580587,0.065635,0.580587,0.0678828,0.580587,0.0678828,0.580587,0.0656072,0.504079,0.0656072,0.504079,0.0678551,0.504079,0.0678551,0.504079,0.132185,0.580587,0.132185,0.580587,0.134387,0.580587,0.134387,0.580587,0.132157,0.504079,0.132157,0.504079,0.134359,0.504079,0.134359,0.504079])})),
                                                                              coord : new SFNode(
                                                                                new Coordinate({
                                                                                  point : new MFVec3f([-0.513808,0.5,0,-0.8564,0.5,0,-0.8564,0.075002,0,-0.513808,0.075002,0,-0.852797,0.5,0,-0.852797,0.075002,0,-0.516407,0.5,0,-0.516407,0.075002,0,-0.852797,0.496347,0,-0.516407,0.496347,0,-0.852797,0.0787838,0,-0.516407,0.0787838,0,-0.852797,0.148411,0,-0.516407,0.148411,0,-0.852797,0.143863,0,-0.516407,0.143863,0,-0.852797,0.220656,0,-0.516407,0.220656,0,-0.852797,0.213155,0,-0.516407,0.213155,0,-0.852797,0.289687,0,-0.516407,0.289687,0,-0.852797,0.285114,0,-0.516407,0.285114,0,-0.852797,0.362304,0,-0.516407,0.362304,0,-0.852797,0.355137,0,-0.516407,0.355137,0,-0.852797,0.431197,0,-0.516407,0.431197,0,-0.852797,0.427388,0,-0.516407,0.427388,0,-0.744091,0.496347,0,-0.744091,0.431197,0,-0.74039,0.496347,0,-0.74039,0.431197,0,-0.630355,0.496347,0,-0.630355,0.431197,0,-0.626583,0.496347,0,-0.626583,0.431197,0,-0.74409,0.427388,0,-0.740491,0.431197,0,-0.740491,0.427388,0,-0.74409,0.362304,0,-0.740491,0.362304,0,-0.630355,0.427388,0,-0.626583,0.427388,0,-0.630355,0.362304,0,-0.626583,0.362304,0,-0.74409,0.355137,0,-0.740491,0.355137,0,-0.630355,0.355137,0,-0.626583,0.355137,0,-0.74409,0.289687,0,-0.740491,0.289687,0,-0.630355,0.289687,0,-0.626583,0.289687,0,-0.630355,0.285114,0,-0.626583,0.285114,0,-0.630355,0.220656,0,-0.626583,0.220656,0,-0.74409,0.285114,0,-0.740491,0.285114,0,-0.74409,0.220656,0,-0.740491,0.220656,0,-0.744341,0.220656,0,-0.744341,0.213155,0,-0.740491,0.213155,0,-0.630355,0.213155,0,-0.626583,0.213155,0,-0.744341,0.148411,0,-0.740491,0.148411,0,-0.630355,0.148411,0,-0.626583,0.148411,0,-0.744341,0.143863,0,-0.740491,0.143863,0,-0.744341,0.0787838,0,-0.740491,0.0787838,0,-0.630355,0.143863,0,-0.626583,0.143863,0,-0.630355,0.0787838,0,-0.626583,0.0787838,0])}))}))})])})])})])})])})])}),

                                                    new Transform({
                                                      DEF : new SFString("Fotos"),
                                                      children : new MFNode([
                                                        new Switch({
                                                          DEF : new SFString("_11"),
                                                          whichChoice : new SFInt32(0),
                                                          children : new MFNode([
                                                            new Transform({
                                                              DEF : new SFString("mandelnrot"),
                                                              translation : new SFVec3f([-11.6104,13.2695,9.7871]),
                                                              scale : new SFVec3f([13.2818,10.3948,10.3197]),
                                                              children : new MFNode([
                                                                new Shape({
                                                                  appearance : new SFNode(
                                                                    new Appearance({
                                                                      texture : new SFNode(
                                                                        new ImageTexture({
                                                                          url : new MFString(["fmadelnrot.png"])}))})),
                                                                  geometry : new SFNode(
                                                                    new IndexedFaceSet({
                                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      texCoord : new SFNode(
                                                                        new TextureCoordinate({
                                                                          point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                                      coord : new SFNode(
                                                                        new Coordinate({
                                                                          point : new MFVec3f([-0.5,-0.5431,0,0.5,-0.5431,0,0.5,0.5431,0,-0.5,0.5431,0])}))}))})])}),

                                                            new Transform({
                                                              DEF : new SFString("rueckblick"),
                                                              translation : new SFVec3f([-11.6104,13.2695,9.7871]),
                                                              scale : new SFVec3f([13.2818,10.3948,10.3197]),
                                                              children : new MFNode([
                                                                new Shape({
                                                                  appearance : new SFNode(
                                                                    new Appearance({
                                                                      texture : new SFNode(
                                                                        new ImageTexture({
                                                                          url : new MFString(["frueckblick.png"])}))})),
                                                                  geometry : new SFNode(
                                                                    new IndexedFaceSet({
                                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      texCoord : new SFNode(
                                                                        new TextureCoordinate({
                                                                          point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                                      coord : new SFNode(
                                                                        new Coordinate({
                                                                          point : new MFVec3f([-0.5,-0.5431,0,0.5,-0.5431,0,0.5,0.5431,0,-0.5,0.5431,0])}))}))})])}),

                                                            new Transform({
                                                              DEF : new SFString("f08"),
                                                              translation : new SFVec3f([-11.6104,13.2695,9.7871]),
                                                              scale : new SFVec3f([13.2818,10.3948,10.3197]),
                                                              children : new MFNode([
                                                                new Shape({
                                                                  appearance : new SFNode(
                                                                    new Appearance({
                                                                      texture : new SFNode(
                                                                        new ImageTexture({
                                                                          url : new MFString(["f08_18.png"])}))})),
                                                                  geometry : new SFNode(
                                                                    new IndexedFaceSet({
                                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      texCoord : new SFNode(
                                                                        new TextureCoordinate({
                                                                          point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                                      coord : new SFNode(
                                                                        new Coordinate({
                                                                          point : new MFVec3f([-0.5,-0.5431,0,0.5,-0.5431,0,0.5,0.5431,0,-0.5,0.5431,0])}))}))})])}),

                                                            new Transform({
                                                              DEF : new SFString("f14"),
                                                              translation : new SFVec3f([-11.6104,13.2695,9.7871]),
                                                              scale : new SFVec3f([13.2818,10.3948,10.3197]),
                                                              children : new MFNode([
                                                                new Shape({
                                                                  appearance : new SFNode(
                                                                    new Appearance({
                                                                      texture : new SFNode(
                                                                        new ImageTexture({
                                                                          url : new MFString(["f14_34.png"])}))})),
                                                                  geometry : new SFNode(
                                                                    new IndexedFaceSet({
                                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      texCoord : new SFNode(
                                                                        new TextureCoordinate({
                                                                          point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                                      coord : new SFNode(
                                                                        new Coordinate({
                                                                          point : new MFVec3f([-0.5,-0.5431,0,0.5,-0.5431,0,0.5,0.5431,0,-0.5,0.5431,0])}))}))})])}),

                                                            new Transform({
                                                              translation : new SFVec3f([-11.6104,13.2695,9.7871]),
                                                              scale : new SFVec3f([13.2818,10.3948,10.3197]),
                                                              children : new MFNode([
                                                                new Shape({
                                                                  appearance : new SFNode(
                                                                    new Appearance({
                                                                      texture : new SFNode(
                                                                        new ImageTexture({
                                                                          url : new MFString(["foto5.png"])}))})),
                                                                  geometry : new SFNode(
                                                                    new IndexedFaceSet({
                                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      texCoord : new SFNode(
                                                                        new TextureCoordinate({
                                                                          point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                                      coord : new SFNode(
                                                                        new Coordinate({
                                                                          point : new MFVec3f([-0.5,-0.5431,0,0.5,-0.5431,0,0.5,0.5431,0,-0.5,0.5431,0])}))}))})])}),

                                                            new Transform({
                                                              translation : new SFVec3f([-11.6104,13.2695,9.7871]),
                                                              scale : new SFVec3f([13.2818,10.3948,10.3197]),
                                                              children : new MFNode([
                                                                new Shape({
                                                                  appearance : new SFNode(
                                                                    new Appearance({
                                                                      texture : new SFNode(
                                                                        new ImageTexture({
                                                                          url : new MFString(["foto6.png"])}))})),
                                                                  geometry : new SFNode(
                                                                    new IndexedFaceSet({
                                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      texCoord : new SFNode(
                                                                        new TextureCoordinate({
                                                                          point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                                      coord : new SFNode(
                                                                        new Coordinate({
                                                                          point : new MFVec3f([-0.5,-0.5431,0,0.5,-0.5431,0,0.5,0.5431,0,-0.5,0.5431,0])}))}))})])}),

                                                            new Transform({
                                                              translation : new SFVec3f([-11.6104,13.2695,9.7871]),
                                                              scale : new SFVec3f([13.2818,10.3948,10.3197]),
                                                              children : new MFNode([
                                                                new Shape({
                                                                  appearance : new SFNode(
                                                                    new Appearance({
                                                                      texture : new SFNode(
                                                                        new ImageTexture({
                                                                          url : new MFString(["foto7.png"])}))})),
                                                                  geometry : new SFNode(
                                                                    new IndexedFaceSet({
                                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      texCoord : new SFNode(
                                                                        new TextureCoordinate({
                                                                          point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                                      coord : new SFNode(
                                                                        new Coordinate({
                                                                          point : new MFVec3f([-0.5,-0.5431,0,0.5,-0.5431,0,0.5,0.5431,0,-0.5,0.5431,0])}))}))})])}),

                                                            new Transform({
                                                              translation : new SFVec3f([-11.6104,13.2695,9.7871]),
                                                              scale : new SFVec3f([13.2818,10.3948,10.3197]),
                                                              children : new MFNode([
                                                                new Shape({
                                                                  appearance : new SFNode(
                                                                    new Appearance({
                                                                      texture : new SFNode(
                                                                        new ImageTexture({
                                                                          url : new MFString(["foto8.png"])}))})),
                                                                  geometry : new SFNode(
                                                                    new IndexedFaceSet({
                                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                      texCoord : new SFNode(
                                                                        new TextureCoordinate({
                                                                          point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                                      coord : new SFNode(
                                                                        new Coordinate({
                                                                          point : new MFVec3f([-0.5,-0.5431,0,0.5,-0.5431,0,0.5,0.5431,0,-0.5,0.5431,0])}))}))})])})])})])}),

                                                    new Transform({
                                                      DEF : new SFString("Logos"),
                                                      children : new MFNode([
                                                        new Transform({
                                                          DEF : new SFString("Saturn"),
                                                          translation : new SFVec3f([-10.2102,23.848,9.95376]),
                                                          scale : new SFVec3f([8.20551,8.20551,8.20554]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      DEF : new SFString("_12"),
                                                                      url : new MFString(["logos.png"])}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0,0,1,0,0,0.337641,1,0.337641])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-1.0609,-0.5,0,1.0609,-0.5,0,-1.0609,-0.162359,0,1.0609,-0.162359,0])}))}))})])}),

                                                        new Transform({
                                                          DEF : new SFString("L-Store"),
                                                          translation : new SFVec3f([20.1628,7.92858,9.95376]),
                                                          scale : new SFVec3f([5.6135,5.6135,5.61339]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_12")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  texCoordIndex : new MFInt32([0,2,3,1,-1]),
                                                                  coordIndex : new MFInt32([0,2,3,1,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0.85893,1,0.85893,0.595243,0.144736,1,0.144736,0.595243])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.761578,0.5,0,0.761578,0.0952433,0,-0.753798,0.5,0,-0.753798,0.0952433,0])}))}))})])}),

                                                        new Transform({
                                                          DEF : new SFString("LustForLife"),
                                                          translation : new SFVec3f([-11.12,6.00984,10.2203]),
                                                          scale : new SFVec3f([5.84548,5.84551,5.84554]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_12")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([1,0.337641,1,0.595243,0,0.595243,0,0.337641])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([1.0609,-0.162359,0,1.0609,0.0952433,0,-1.0609,0.0952433,0,-1.0609,-0.162359,0])}))}))})])})])})])})])}),

                                            new Transform({
                                              DEF : new SFString("Hausw�rfel"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("Etage1"),
                                                  children : new MFNode([
                                                    new Transform({
                                                      DEF : new SFString("Schaufenster"),
                                                      children : new MFNode([
                                                        new Transform({
                                                          DEF : new SFString("xform1_1"),
                                                          translation : new SFVec3f([-0.547541,2.17975,-51.9697]),
                                                          rotation : new SFRotation([-1,8.16621e-11,2.84217e-14,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.9972,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,1,1,0,-1]),
                                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.0588235,0.0588235,0.0588235,0.0320856,0.0320856,0.0320856])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.113652,0.0745168,-0.0936174,0.113652,-0.1,-0.0936174,-0.0887016,0.0745168,-0.092872,-0.0887016,-0.1,-0.092872])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([21.6583,1.91336,-21.5714]),
                                                          rotation : new SFRotation([0,1,0,1.5708]),
                                                          scale : new SFVec3f([4.05008,3.88109,4.05008]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      DEF : new SFString("_13"),
                                                                      url : new MFString(["schaufenster_small.png"])}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  texCoordIndex : new MFInt32([5,2,3,4,-1,8,6,7,9,-1,10,0,1,11,-1]),
                                                                  coordIndex : new MFInt32([1,0,3,2,-1,4,2,3,5,-1,6,0,1,7,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([1,0,1,1,0,0,1,0,1,1,0,1,0,1,0,0,0.322984,1,0.322695,0,0.183692,0,0.184048,1])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([5.365,-0.5,0,5.36043,0.5,0,16.0859,0.499799,0,16.0905,-0.500201,0,19.5516,0.499799,0,19.5516,-0.500201,0,-3.39399,-0.5,0,-3.39087,0.528864,-0.00107385])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([21.6583,1.91336,-21.5714]),
                                                          rotation : new SFRotation([0,1,0,1.5708]),
                                                          scale : new SFVec3f([4.05008,3.88109,4.05008]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_13")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1,6,5,8,9,-1,10,11,12,13,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1,1,4,5,2,-1,5,4,6,7,-1,8,9,7,6,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0.682905,0,1,0,1,1,0.682904,1,0,0,0.41324,0,0.41324,1,0,1,1,0,1,1,1,0,1,1,0,1,0,0])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([19.4565,-0.466944,-9.76288,16.0488,-0.466942,-10.2555,16.0488,0.479816,-10.2555,19.4565,0.479815,-9.76287,11.6622,-0.466941,-10.8502,11.6622,0.479818,-10.8502,5.36346,-0.466944,-10.8067,5.36497,0.479815,-10.8067,-5.36485,-0.466948,-10.7326,-5.36483,0.535375,-10.7314])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([21.6583,1.91336,-21.5714]),
                                                          rotation : new SFRotation([0,1,0,1.5708]),
                                                          scale : new SFVec3f([4.05008,3.88109,4.05008]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_13")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  texCoordIndex : new MFInt32([3,0,1,2,-1]),
                                                                  coordIndex : new MFInt32([3,0,1,2,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0,1,0,0,0.545535,0,0.545551,1])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-5.36483,0.535375,-10.7314,-5.36485,-0.466948,-10.7326,-5.36493,-0.484979,-4.87759,-5.36483,0.535375,-4.87759])}))}))})])}),

                                                        new Transform({
                                                          DEF : new SFString("Eingang_1"),
                                                          children : new MFNode([
                                                            new Switch({
                                                              whichChoice : new SFInt32(0),
                                                              children : new MFNode([
                                                                new Transform({})])})])})])}),

                                                    new Transform({
                                                      DEF : new SFString("oben_2"),
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,1,0,1,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.0909091,0.0909091,0.0909091,0.187166,0.187166,0.187166])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-0.108824,0.0745168,0.1,0.113652,0.0745168,0.1,0.131664,0.0745165,0.115909,-0.125628,0.0745165,0.115909])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,1,0,2,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.187166,0.187166,0.187166,0.224599,0.224599,0.224599,0.0909091,0.0909091,0.0909091])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.113652,0.0745168,0.1,0.113652,0.0745168,-0.0936174,0.131349,0.0745168,-0.0936174,0.131664,0.0745165,0.115909])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,0,1,0,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.187166,0.187166,0.187166,0.0909091,0.0909091,0.0909091])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-0.128414,0.0745168,-0.0322942,-0.111261,0.0745168,-0.0322942,-0.108824,0.0745168,0.1,-0.125628,0.0745165,0.115909])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,0,1,1,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.187166,0.187166,0.187166,0.0588235,0.0588235,0.0588235])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-0.111261,0.0745168,-0.0322942,-0.128414,0.0745168,-0.0322942,-0.123224,0.0745168,-0.0927448,-0.0887016,0.0745168,-0.092872])}))}))})])})])}),

                                                    new Transform({
                                                      DEF : new SFString("Ecke"),
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([21.277,3.3111,0.51647]),
                                                          rotation : new SFRotation([0.707107,-0.000244107,-0.707107,3.1416]),
                                                          scale : new SFVec3f([0.999999,1,1]),
                                                          scaleOrientation : new SFRotation([0.926631,0.36563,-0.0875759,0.667069]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  creaseAngle : new SFFloat(0.5),
                                                                  colorIndex : new MFInt32([0,0,1,0,-1,0,2,3,0,-1,3,0,0,0,-1,4,4,4,-1]),
                                                                  coordIndex : new MFInt32([4,2,3,5,-1,3,2,6,7,-1,6,0,1,7,-1,8,6,2,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.8,0.8,0.8,0.481283,0.481283,0.481283,1,1,1,0.946889,0.946889,0.946889,0.181818,0.181818,0.181818])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.34633,-0.389663,22.8728,0.34633,-1.44479,22.8728,3.40614,-0.389663,-0.389839,3.40614,-1.44479,-0.389839,12.3097,-0.389663,-0.389839,12.3097,-1.44479,-0.389839,0.346058,-0.389664,8.28339,0.373326,-1.44479,8.2061,0.13758,-0.423327,-2.53811])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([21.6583,1.91336,-21.5714]),
                                                          rotation : new SFRotation([0,1,0,1.5708]),
                                                          scale : new SFVec3f([4.05008,3.88109,4.05008]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      DEF : new SFString("_14"),
                                                                      url : new MFString(["schaufenster_small.png"])})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      translation : new SFVec2f([-0.545,0]),
                                                                      scale : new SFVec2f([0.5,1])}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0,0,0.183692,0,0.184048,1,0,1])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-4.61252,-0.500123,0.0000893363,-3.39399,-0.5,0,-3.39087,0.528864,-0.00107385,-4.61235,0.535252,-0.00122673])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([21.6583,1.91336,-21.5714]),
                                                          rotation : new SFRotation([0,1,0,1.5708]),
                                                          scale : new SFVec3f([4.05008,3.88109,4.05008]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_14")})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      translation : new SFVec2f([0.565,0]),
                                                                      scale : new SFVec2f([0.93,1])}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  texCoordIndex : new MFInt32([0,3,2,1,-1]),
                                                                  coordIndex : new MFInt32([0,3,2,1,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([1,1,1,0,0.796562,0,0.796637,1])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-4.60998,0.535251,-0.00130574,-4.61015,-0.500124,0.0000103343,-5.36497,-0.493276,-2.18342,-5.36483,0.535375,-2.18342])}))}))})])})])})])}),

                                                new Transform({
                                                  DEF : new SFString("Etage2"),
                                                  children : new MFNode([
                                                    new Transform({
                                                      DEF : new SFString("seite1"),
                                                      translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                      rotation : new SFRotation([-1,0,0,0.000690534]),
                                                      scale : new SFVec3f([195.379,20.816,521.262]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  DEF : new SFString("_15"),
                                                                  url : new MFString(["fassade.png"])})),
                                                              textureTransform : new SFNode(
                                                                new TextureTransform({
                                                                  DEF : new SFString("_16"),
                                                                  scale : new SFVec2f([61.6026,14])}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              colorIndex : new MFInt32([0,2,1,-1,2,1,1,-1]),
                                                              texCoordIndex : new MFInt32([0,1,4,-1,1,3,4,-1]),
                                                              coordIndex : new MFInt32([0,1,3,-1,1,2,3,-1]),
                                                              color : new SFNode(
                                                                new Color({
                                                                  color : new MFColor([0.0106952,0.0105804,0.00882927,0.197861,0.195738,0.163341,0.486631,0.486631,0.486631])})),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0.0012368,0.998171,0.00294733,0.000920445,0,1,0.998487,0.00263095,0.998487,0.999881,0.0012368,0.998171,0.996131,0.998735])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([0.131667,0.907359,0.117972,0.131667,0.0745165,0.117972,0.131349,0.0745168,-0.0936174,0.131349,0.907359,-0.0936174])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                      rotation : new SFRotation([-1,0,0,0.000690534]),
                                                      scale : new SFVec3f([195.379,20.816,521.262]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_15")})),
                                                              textureTransform : new SFNode(
                                                                new TextureTransform({
                                                                  USE : new SFString("_16")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              colorIndex : new MFInt32([0,0,1,-1,0,1,2,-1,1,2,2,-1,1,0,2,-1]),
                                                              texCoordIndex : new MFInt32([0,1,2,-1,0,2,3,-1,2,4,3,-1,2,5,4,-1]),
                                                              coordIndex : new MFInt32([0,1,2,-1,0,2,3,-1,2,4,3,-1,2,5,4,-1]),
                                                              color : new SFNode(
                                                                new Color({
                                                                  color : new MFColor([0,0,0,0.625668,0.625668,0.625668,0.26738,0.264511,0.220732])})),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0.995345,0.00223178,0.996131,0.998735,0.312054,0.997099,0.31611,0.000595272,0.0002563,0.000595212,0.00111026,0.998735])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.125579,0.0745165,0.118548,-0.125579,0.907359,0.118548,-0.128414,0.907359,-0.0322941,-0.128414,0.0745168,-0.0322942,-0.123224,0.0745168,-0.0927448,-0.123223,0.907359,-0.0927448])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                      rotation : new SFRotation([-1,0,0,0.000690534]),
                                                      scale : new SFVec3f([195.379,20.816,521.262]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_15")})),
                                                              textureTransform : new SFNode(
                                                                new TextureTransform({
                                                                  USE : new SFString("_16")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              colorIndex : new MFInt32([0,0,1,-1,1,0,1,-1]),
                                                              texCoordIndex : new MFInt32([0,1,2,-1,3,0,2,-1]),
                                                              coordIndex : new MFInt32([0,1,2,-1,3,0,2,-1]),
                                                              color : new SFNode(
                                                                new Color({
                                                                  color : new MFColor([0.213904,0.190381,0.190381,0.0320856,0.0320856,0.0320856])})),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0.998442,0.998386,0.00101537,0.998386,0.00011912,0.00148532,0.998442,0.000959277])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.123223,0.907359,-0.0927448,0.131349,0.907359,-0.0936174,0.131349,0.0745168,-0.0936174,-0.123224,0.0745168,-0.0927448])}))}))})])})])}),

                                                new Transform({
                                                  DEF : new SFString("Etage3"),
                                                  children : new MFNode([
                                                    new Transform({
                                                      children : new MFNode([
                                                        new Transform({
                                                          DEF : new SFString("Fenster"),
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      DEF : new SFString("_17"),
                                                                      url : new MFString(["fenster__2.png"])})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      USE : new SFString("_16")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([5,0,0,0,-1,3,3,4,-1,3,2,4,-1,1,1,5,-1,1,1,1,-1,0,0,1,-1,0,1,0,-1,0,0,0,-1,0,0,0,-1]),
                                                                  texCoordIndex : new MFInt32([18,19,16,17,-1,9,10,12,-1,10,11,12,-1,7,1,0,-1,7,15,1,-1,2,13,14,-1,2,3,13,-1,5,8,6,-1,5,4,8,-1]),
                                                                  coordIndex : new MFInt32([8,9,7,5,-1,2,6,1,-1,6,4,1,-1,6,0,8,-1,6,2,0,-1,3,4,5,-1,3,1,4,-1,5,6,8,-1,5,4,6,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.8,0.8,0.8,0,0,0,0.196889,0.240642,0.209055,0.520261,0.494409,0.604278,0.604278,0.494409,0.526136,0.395722,0.294904,0.270868])})),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0.000975292,0.000365966,0.000802454,0.0373066,0.00502209,0.0326363,0.00450156,0.032326,-0.0000313647,0.000365926,0.000631172,0.000365926,0.000629887,0.0549153,0.000471641,0.000367376,-0.0000313647,0.0549153,0.195076,0.0718688,-0.0000240539,0.0715723,-0.0000240539,0.000356816,0.195076,0.000653333,0.00477534,0.00940887,0.00505001,0.00940965,-0.0000313539,0.0368141,-0.0000313684,0.000365981,0.000513583,0.000365981,0.000509941,0.0358961,-0.0000313684,0.0358961])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.130599,1.00367,-0.0936115,0.125495,0.907358,-0.0908204,0.125495,1.00367,-0.0908204,0.131349,0.907359,-0.0936174,0.128574,0.907359,0.115735,0.131663,0.907359,0.115728,0.128574,1.00367,0.115735,0.131667,0.907359,0.117972,0.131657,1.00367,0.115743,0.131667,1.00367,0.117972])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_17")})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      USE : new SFString("_16")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,1,2,-1,3,3,4,-1,3,4,5,-1,0,2,6,-1,7,7,7,-1,7,7,7,-1,8,5,5,-1,8,5,8,-1,7,7,7,-1,7,7,7,-1]),
                                                                  texCoordIndex : new MFInt32([0,1,2,-1,3,4,5,-1,3,5,6,-1,0,2,7,-1,8,9,10,-1,8,11,9,-1,12,13,14,-1,12,14,15,-1,16,17,18,-1,16,19,17,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,-1,1,0,3,-1,1,3,4,-1,0,2,5,-1,6,1,4,-1,6,2,1,-1,5,2,6,-1,5,6,7,-1,4,8,6,-1,4,9,8,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.418837,0.470588,0.443191,0.22777,0.216191,0.299465,0.363636,0.351875,0.323647,0,0,0,0.946524,0.946524,0.946524,0.625668,0.625668,0.625668,0.140397,0.138026,0.15508,0.8,0.8,0.8,0.637775,0.716578,0.674859])})),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0.143983,0.000356345,-0.0000252728,0.000356345,-0.0000252728,0.0763747,0.00113599,0.000367252,0.000703139,0.0162683,-0.0000313488,0.0159668,0.000393236,0.000365982,0.143983,0.0763747,-0.0000305592,0.0265292,0.000460193,0.000365952,-0.00003137,0.000365952,0.000460193,0.0265292,0.000521026,0.01851,0.000839069,0.000369474,0.000294222,0.000365975,-0.0000313581,0.018209,0.000550536,0.000365983,-0.0000313672,0.023473,0.000547533,0.023473,-0.0000313672,0.000365983])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-0.123617,0.907359,-0.0351451,-0.12079,0.907359,0.115241,-0.12079,1.00367,0.115241,-0.128414,0.907359,-0.0322941,-0.125641,0.907359,0.115253,-0.123617,1.00367,-0.0351451,-0.125633,1.00367,0.11527,-0.128527,1.00367,-0.0326496,-0.125579,1.00367,0.118548,-0.125579,0.907359,0.118548])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_17")})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      USE : new SFString("_16")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,1,1,-1,0,1,1,-1,2,3,4,-1,2,4,3,-1,5,0,5,-1,0,6,5,-1]),
                                                                  texCoordIndex : new MFInt32([0,1,2,-1,0,3,1,-1,4,5,6,-1,4,6,7,-1,8,9,10,-1,9,11,10,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,-1,0,3,1,-1,4,5,6,-1,4,6,7,-1,8,9,6,-1,9,7,6,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.8,0.8,0.8,0,0,0,0.470588,0.418837,0.418837,0.418837,0.470588,0.443191,0.140397,0.138026,0.15508,0.637775,0.716578,0.674859,0.625668,0.625668,0.625668])})),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0.00111026,0.998735,0.312054,0.997099,0.00111026,0.998735,0.312054,0.997099,0.194734,0.000356345,0.143983,0.000356345,0.143983,0.0763747,0.194734,0.0763747,-0.000031363,0.000365863,0.000353032,0.018373,0.000346642,0.0011135,0.000684613,0.0169915])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-0.123223,0.907359,-0.0927448,-0.123617,0.907359,-0.0351451,-0.119227,0.907359,-0.0881438,-0.128414,0.907359,-0.0322941,-0.119227,0.907359,-0.0881438,-0.123617,0.907359,-0.0351451,-0.123617,1.00367,-0.0351451,-0.119227,1.00367,-0.0881438,-0.128527,1.00367,-0.0326496,-0.123534,1.00367,-0.0927551])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_17")})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      USE : new SFString("_16")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,1,2,-1,0,2,2,-1,3,4,2,-1,3,4,4,-1,3,4,3,-1,3,3,4,-1]),
                                                                  texCoordIndex : new MFInt32([0,1,2,-1,0,2,3,-1,4,5,6,-1,4,7,5,-1,8,9,10,-1,8,10,11,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,-1,0,2,3,-1,4,3,2,-1,4,5,3,-1,1,0,6,-1,1,6,7,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.213904,0.190381,0.190381,0.22777,0.216191,0.299465,0.0320856,0.0320856,0.0320856,0.8,0.8,0.8,0,0,0])})),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0.0813534,0.000356203,-0.0000288312,0.000356203,-0.0000288312,0.0644656,0.0813534,0.0644656,0.000363453,0.0434984,0.000626767,0.0378371,0.000368007,0.0300047,0.000632164,0.0460045,-0.0000220934,0.000319653,0.00054583,0.00840157,0.000559416,0.016847,-0.0000313669,0.0142122])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.125495,0.907358,-0.0908204,-0.119227,0.907359,-0.0881438,-0.119227,1.00367,-0.0881438,0.125495,1.00367,-0.0908204,-0.123534,1.00367,-0.0927551,0.130599,1.00367,-0.0936115,0.131349,0.907359,-0.0936174,-0.123223,0.907359,-0.0927448])}))}))})])})])}),

                                                    new Transform({
                                                      children : new MFNode([
                                                        new Transform({
                                                          DEF : new SFString("Rahmen"),
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      DEF : new SFString("_18"),
                                                                      url : new MFString(["buer1.png"])})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      USE : new SFString("_16")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([2,2,3,-1,2,1,3,-1,0,2,1,-1,0,0,2,-1]),
                                                                  texCoordIndex : new MFInt32([2,8,5,-1,8,4,5,-1,9,2,5,-1,9,3,2,-1]),
                                                                  coordIndex : new MFInt32([1,3,0,-1,3,4,0,-1,5,1,0,-1,5,2,1,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0,0,0,0.625668,0.625668,0.625668,0.26738,0.264511,0.220732,0.637775,0.716578,0.674859])})),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0.339344,0.319232,0.339338,0.378964,0.715536,0.378104,0.33384,0.379046,0.89064,0.318508,0.715548,0.318508,0.460419,0.501979,0.460549,0.562693,0.890624,0.378104,0.333736,0.324284])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-0.128527,1.00367,-0.0326496,-0.128527,1.17267,-0.0326496,-0.125579,1.17267,0.118548,-0.123534,1.17267,-0.0927551,-0.123534,1.00367,-0.0927551,-0.125579,1.00367,0.118548])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_18")})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      USE : new SFString("_16")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,0,1,-1,0,1,1,-1]),
                                                                  texCoordIndex : new MFInt32([0,1,2,-1,1,3,2,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,-1,1,3,2,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.0106952,0.0105804,0.00882927,0.197861,0.195738,0.163341])})),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0.455421,0.562693,0.455238,0.504081,1,0.564098,0.999609,0.503213])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.131667,1.17267,0.117972,0.131667,1.00367,0.117972,0.130599,1.17267,-0.0936115,0.130599,1.00367,-0.0936115])}))}))})])}),

                                                        new Transform({
                                                          translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                          rotation : new SFRotation([-1,0,0,0.000690534]),
                                                          scale : new SFVec3f([195.379,20.816,521.262]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_18")})),
                                                                  textureTransform : new SFNode(
                                                                    new TextureTransform({
                                                                      USE : new SFString("_16")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  colorIndex : new MFInt32([0,1,1,-1,1,1,1,-1]),
                                                                  texCoordIndex : new MFInt32([0,1,2,-1,1,3,2,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,-1,1,3,2,-1]),
                                                                  color : new SFNode(
                                                                    new Color({
                                                                      color : new MFColor([0.213904,0.190381,0.190381,0.0320856,0.0320856,0.0320856])})),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([1,0.406855,0.722174,0.404494,1,0.464703,0.722174,0.462147])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([0.130599,1.00367,-0.0936115,-0.123534,1.00367,-0.0927551,0.130599,1.17267,-0.0936115,-0.123534,1.17267,-0.0927551])}))}))})])})])})])}),

                                                new Transform({
                                                  DEF : new SFString("Dach"),
                                                  translation : new SFVec3f([-0.547545,2.14024,-51.9697]),
                                                  rotation : new SFRotation([-1,0,0,0.000690534]),
                                                  scale : new SFVec3f([195.379,20.816,521.262]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_18")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          colorIndex : new MFInt32([2,2,0,-1,0,0,2,-1,0,1,0,-1]),
                                                          texCoordIndex : new MFInt32([0,1,2,-1,2,3,0,-1,2,4,3,-1]),
                                                          coordIndex : new MFInt32([0,1,2,-1,2,3,0,-1,2,4,3,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.26738,0.264511,0.220732,0.0106952,0.0105804,0.00882927,0,0,0])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0.417262,0.25068,0.154143,0.257688,0.146872,0.186267,0.417773,0.000681735,0.150949,0.00804174])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([0.131349,1.17267,-0.0936174,-0.123919,1.17267,-0.0927424,-0.128446,1.17267,-0.032294,0.131667,1.17267,0.117972,-0.125908,1.17267,0.118549])}))}))})])}),

                                                new Transform({
                                                  DEF : new SFString("Innen"),
                                                  children : new MFNode([
                                                    new Inline({
                                                      url : new MFString(["3-innen.x3d"]),
                                                      bboxSize : new SFVec3f([31.293,15.249,24.5372]),
                                                      bboxCenter : new SFVec3f([6.94291,7.61762,-6.19605])})])})])}),

                                            new Transform({
                                              DEF : new SFString("Restflaeche"),
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          USE : new SFString("_6")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorIndex : new MFInt32([0,0,1,1,-1]),
                                                      texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                      coordIndex : new MFInt32([0,1,2,3,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0,0,0,0.0481283,0.0476119,0.0397317])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.372052,0.783032,0.211458,0.78544,0.148145,0.662734,0.353355,0.664829])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-43.4124,100,-56.4588,-80.5948,100,-56.8618,-88.5389,100.001,-32.3706,-43.1134,100,-32.8564])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("Vorplatz"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("Strassenlampen"),
                                                  children : new MFNode([
                                                    new Transform({
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([37.0428,0,0]),
                                                          children : new MFNode([
                                                            new Transform({
                                                              DEF : new SFString("_19"),
                                                              translation : new SFVec3f([-13.4473,-0.5,11.1994]),
                                                              scale : new SFVec3f([0.392418,0.392414,0.392415]),
                                                              children : new MFNode([
                                                                new Switch({
                                                                  DEF : new SFString("_20"),
                                                                  whichChoice : new SFInt32(0),
                                                                  children : new MFNode([
                                                                    new Transform({
                                                                      DEF : new SFString("Night"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          DEF : new SFString("licht"),
                                                                          translation : new SFVec3f([-2.04867,-17.6157,7.27388]),
                                                                          rotation : new SFRotation([-0.14809,0.0101933,-0.988921,0.000690534]),
                                                                          scale : new SFVec3f([0.971758,1.913,0.992828]),
                                                                          children : new MFNode([
                                                                            new Shape({
                                                                              appearance : new SFNode(
                                                                                new Appearance({
                                                                                  material : new SFNode(
                                                                                    new Material({
                                                                                      ambientIntensity : new SFFloat(0),
                                                                                      diffuseColor : new SFColor([0,0,0]),
                                                                                      emissiveColor : new SFColor([0.5,0.5,0.5]),
                                                                                      shininess : new SFFloat(0)})),
                                                                                  texture : new SFNode(
                                                                                    new ImageTexture({
                                                                                      DEF : new SFString("_21"),
                                                                                      url : new MFString(["lampenglow.png"])}))})),
                                                                              geometry : new SFNode(
                                                                                new IndexedFaceSet({
                                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                                  texCoord : new SFNode(
                                                                                    new TextureCoordinate({
                                                                                      point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                                                  coord : new SFNode(
                                                                                    new Coordinate({
                                                                                      point : new MFVec3f([-10,10,-10,-10,10,10,10,10,10,10,10,-10])}))}))})])}),

                                                                        new Transform({
                                                                          DEF : new SFString("deckel_1"),
                                                                          translation : new SFVec3f([-2.02442,5.21348,6.99852]),
                                                                          children : new MFNode([
                                                                            new Shape({
                                                                              geometry : new SFNode(
                                                                                new IndexedFaceSet({
                                                                                  solid : new SFBool(false),
                                                                                  colorIndex : new MFInt32([0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,0,1,0,-1,0,1,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,1,0,0,-1,1,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,2,-1,2,0,2,-1,2,2,2,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,0,1,0,-1,0,1,0,-1,0,0,2,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,1,0,0,-1,1,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,0,-1,2,0,2,-1,2,0,0,-1,2,0,2,-1,2,0,0,-1,0,0,0,-1,2,0,0,-1,0,0,0,-1,0,0,0,-1,2,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,2,-1,2,0,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,0,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,0,0,-1,0,0,0,-1,2,0,2,-1,2,0,0,-1,2,0,2,-1,2,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1]),
                                                                                  coordIndex : new MFInt32([0,1,2,-1,2,1,3,-1,2,3,4,-1,4,3,5,-1,4,5,6,-1,6,5,7,-1,6,7,8,-1,8,7,9,-1,8,9,10,-1,1,11,3,-1,3,11,12,-1,3,12,5,-1,5,12,13,-1,5,13,7,-1,7,13,14,-1,7,14,9,-1,11,15,12,-1,12,15,16,-1,12,16,13,-1,13,16,17,-1,13,17,14,-1,15,18,16,-1,16,18,19,-1,16,19,17,-1,19,18,20,-1,10,9,21,-1,21,9,22,-1,9,14,22,-1,21,22,23,-1,23,22,24,-1,23,24,25,-1,25,24,26,-1,25,26,27,-1,27,26,28,-1,27,28,29,-1,22,14,30,-1,14,17,30,-1,22,30,24,-1,24,30,31,-1,24,31,26,-1,26,31,32,-1,26,32,28,-1,30,17,33,-1,17,19,33,-1,30,33,31,-1,31,33,34,-1,31,34,32,-1,33,19,35,-1,35,19,20,-1,33,35,34,-1,36,37,38,-1,38,37,39,-1,38,39,40,-1,40,39,41,-1,40,41,42,-1,42,41,43,-1,43,11,1,-1,42,43,44,-1,44,43,1,-1,44,1,0,-1,37,45,39,-1,39,45,46,-1,39,46,41,-1,41,46,47,-1,41,47,43,-1,43,47,11,-1,47,15,11,-1,45,48,46,-1,46,48,49,-1,46,49,47,-1,47,49,15,-1,49,18,15,-1,48,50,49,-1,49,50,18,-1,18,50,20,-1,50,35,20,-1,29,28,51,-1,51,28,52,-1,28,32,52,-1,51,52,53,-1,53,52,54,-1,53,54,55,-1,55,54,56,-1,56,45,37,-1,55,56,57,-1,57,56,37,-1,57,37,36,-1,52,32,58,-1,32,34,58,-1,52,58,54,-1,54,58,59,-1,54,59,56,-1,56,59,45,-1,59,48,45,-1,58,34,60,-1,34,35,60,-1,58,60,59,-1,60,35,50,-1,59,60,48,-1,60,50,48,-1]),
                                                                                  color : new SFNode(
                                                                                    new Color({
                                                                                      color : new MFColor([0.113404,0.171123,0.15824,0.17365,0.262032,0.242305,0.0389826,0.0588235,0.0543949])})),
                                                                                  coord : new SFNode(
                                                                                    new Coordinate({
                                                                                      point : new MFVec3f([-1.11798,7.52941,0.000488281,-1.08387,7.63221,0.000479664,-1.08387,7.52939,-0.276585,-1.00892,7.65717,-0.343969,-0.926114,7.52936,-0.633202,-0.73718,7.67062,-0.761125,-0.609269,7.52933,-0.950047,-0.320026,7.65711,-1.03286,-0.252652,7.52932,-1.1078,0.0244215,7.63211,-1.10781,0.0244215,7.52932,-1.14191,-0.926114,7.76451,0.000468572,-0.73718,7.81193,-0.380336,-0.356379,7.8119,-0.761136,0.0244215,7.76443,-0.950067,-0.609269,7.88205,0.000458717,-0.320026,7.91274,-0.343991,0.0244215,7.882,-0.633232,-0.252652,7.94058,0.000453811,0.0244215,7.94056,-0.276619,0.0244215,7.95323,0.00045275,0.301495,7.52932,-1.1078,0.368869,7.65711,-1.03286,0.658112,7.52933,-0.950047,0.786023,7.67062,-0.761125,0.974957,7.52936,-0.633202,1.05776,7.65717,-0.343969,1.13271,7.52939,-0.276585,1.13271,7.63221,0.000479664,1.16682,7.52941,0.000488281,0.405222,7.8119,-0.761136,0.786023,7.81193,-0.380336,0.974957,7.76451,0.000468572,0.368868,7.91274,-0.343991,0.658112,7.88205,0.000458717,0.301495,7.94058,0.000453811,0.0244215,7.52951,1.14289,0.0244215,7.6323,1.10877,-0.252652,7.52951,1.10878,-0.320026,7.65729,1.03382,-0.609269,7.52949,0.951024,-0.73718,7.67075,0.762077,-0.926114,7.52947,0.634179,-1.00892,7.65723,0.344925,-1.08387,7.52944,0.277561,0.0244215,7.76459,0.951004,-0.356379,7.81202,0.762066,-0.73718,7.81199,0.381265,0.0244215,7.88211,0.634149,-0.320026,7.9128,0.344903,0.0244215,7.9406,0.277527,1.13271,7.52944,0.277561,1.05776,7.65723,0.344925,0.974957,7.52947,0.634179,0.786023,7.67075,0.762077,0.658112,7.52949,0.951024,0.368869,7.65729,1.03382,0.301495,7.52951,1.10878,0.786023,7.81199,0.381265,0.405222,7.81202,0.762066,0.368868,7.9128,0.344903])}))}))})])}),

                                                                        new Transform({
                                                                          DEF : new SFString("lampe_1"),
                                                                          translation : new SFVec3f([-2,12.8455,6.9828]),
                                                                          rotation : new SFRotation([-6.93889e-18,1,-0.0000419178,3.14159]),
                                                                          scale : new SFVec3f([0.816553,0.755354,0.816553]),
                                                                          children : new MFNode([
                                                                            new Shape({
                                                                              geometry : new SFNode(
                                                                                new IndexedFaceSet({
                                                                                  colorIndex : new MFInt32([1,0,1,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,1,1,-1,0,0,0,-1,1,1,1,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,0,-1,0,0,0,-1,0,1,0,-1,0,1,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,1,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,1,1,-1,1,1,1,-1,1,0,1,-1,1,0,1,-1,1,0,0,-1,0,0,0,-1,1,0,1,-1,1,0,2,-1,1,2,1,-1,1,2,0,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,1,-1,0,0,0,-1,0,0,0,-1,0,0,2,-1,2,0,2,-1,2,2,0,-1,0,2,0,-1,0,0,0,-1,0,0,0,-1,0,1,0,-1,0,0,2,-1,2,0,0,-1,2,0,0,-1,0,1,1,-1,1,1,1,-1,0,0,0,-1,1,1,1,-1,1,0,0,-1,0,0,0,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,0,-1,1,0,1,-1,1,0,0,-1,0,1,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,0,1,0,-1,0,1,1,-1,1,1,1,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,1,0,1,-1,0,0,0,-1,0,1,1,-1]),
                                                                                  coordIndex : new MFInt32([0,1,2,-1,3,1,0,-1,2,1,4,-1,2,4,5,-1,5,4,6,-1,5,6,7,-1,7,6,8,-1,7,8,9,-1,9,8,10,-1,9,10,11,-1,1,12,4,-1,4,12,13,-1,4,13,6,-1,6,13,14,-1,6,14,8,-1,8,14,15,-1,8,15,10,-1,12,16,13,-1,13,16,17,-1,13,17,14,-1,14,17,18,-1,14,18,15,-1,16,19,17,-1,17,19,20,-1,17,20,18,-1,20,19,21,-1,22,23,24,-1,24,23,25,-1,24,25,26,-1,26,25,27,-1,26,27,28,-1,28,27,29,-1,28,29,3,-1,3,29,1,-1,29,12,1,-1,23,30,25,-1,25,30,31,-1,25,31,27,-1,27,31,32,-1,27,32,29,-1,29,32,12,-1,32,16,12,-1,30,33,31,-1,31,33,34,-1,31,34,32,-1,32,34,16,-1,34,19,16,-1,33,35,34,-1,34,35,19,-1,19,35,21,-1,11,10,36,-1,37,23,22,-1,36,10,38,-1,10,15,38,-1,36,38,39,-1,39,38,40,-1,39,40,41,-1,41,40,42,-1,41,42,43,-1,43,42,44,-1,43,44,45,-1,45,44,46,-1,38,15,47,-1,15,18,47,-1,38,47,40,-1,40,47,48,-1,40,48,42,-1,42,48,49,-1,42,49,44,-1,47,18,50,-1,18,20,50,-1,47,50,48,-1,48,50,51,-1,48,51,49,-1,50,20,52,-1,52,20,21,-1,50,52,51,-1,35,52,21,-1,46,44,53,-1,44,49,53,-1,46,53,54,-1,54,53,55,-1,54,55,56,-1,56,55,57,-1,56,57,37,-1,37,57,23,-1,57,30,23,-1,53,49,58,-1,49,51,58,-1,53,58,55,-1,55,58,59,-1,55,59,57,-1,57,59,30,-1,59,33,30,-1,58,51,60,-1,51,52,60,-1,58,60,59,-1,59,60,33,-1,60,35,33,-1,60,52,35,-1]),
                                                                                  color : new SFNode(
                                                                                    new Color({
                                                                                      color : new MFColor([1,0.667906,0.213904,1,0.57754,0,1,0.746976,0.40107])})),
                                                                                  coord : new SFNode(
                                                                                    new Coordinate({
                                                                                      point : new MFVec3f([0,0,1,0,-0.242536,0.970142,0.242536,0,0.970142,-0.242536,0,0.970142,0.301511,-0.301511,0.904534,0.5547,0,0.83205,0.666667,-0.333333,0.666667,0.83205,0,0.5547,0.904534,-0.301511,0.301511,0.970142,0,0.242536,0.970142,-0.242536,0,1,0,0,0,-0.5547,0.83205,0.333333,-0.666667,0.666667,0.666667,-0.666667,0.333333,0.83205,-0.5547,0,0,-0.83205,0.5547,0.301511,-0.904534,0.301511,0.5547,-0.83205,0,0,-0.970142,0.242536,0.242536,-0.970142,0,0,-1,0,-1,0,0,-0.970142,-0.242536,0,-0.970142,0,0.242536,-0.904534,-0.301511,0.301511,-0.83205,0,0.5547,-0.666667,-0.333333,0.666667,-0.5547,0,0.83205,-0.301511,-0.301511,0.904534,-0.83205,-0.5547,0,-0.666667,-0.666667,0.333333,-0.333333,-0.666667,0.666667,-0.5547,-0.83205,0,-0.301511,-0.904534,0.301511,-0.242536,-0.970142,0,0.970142,0,-0.242536,-0.970142,0,-0.242536,0.904534,-0.301511,-0.301511,0.83205,0,-0.5547,0.666667,-0.333333,-0.666667,0.5547,0,-0.83205,0.301511,-0.301511,-0.904534,0.242536,0,-0.970142,0,-0.242536,-0.970142,0,0,-1,-0.242536,0,-0.970142,0.666667,-0.666667,-0.333333,0.333333,-0.666667,-0.666667,0,-0.5547,-0.83205,0.301511,-0.904534,-0.301511,0,-0.83205,-0.5547,0,-0.970142,-0.242536,-0.301511,-0.301511,-0.904534,-0.5547,0,-0.83205,-0.666667,-0.333333,-0.666667,-0.83205,0,-0.5547,-0.904534,-0.301511,-0.301511,-0.333333,-0.666667,-0.666667,-0.666667,-0.666667,-0.333333,-0.301511,-0.904534,-0.301511])}))}))})])}),

                                                                        new Transform({
                                                                          DEF : new SFString("mast_1"),
                                                                          translation : new SFVec3f([-2.02442,5.21348,6.99852]),
                                                                          children : new MFNode([
                                                                            new Shape({
                                                                              geometry : new SFNode(
                                                                                new IndexedFaceSet({
                                                                                  solid : new SFBool(false),
                                                                                  colorIndex : new MFInt32([0,0,2,-1,2,0,0,-1,2,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,3,-1,3,0,0,-1,3,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,4,4,4,-1,4,4,4,-1,4,4,3,-1,3,4,3,-1,3,3,3,-1,3,3,3,-1,3,3,3,-1,3,3,3,-1,3,3,3,-1,3,3,4,-1,3,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,0,0,0,-1,0,1,0,-1,0,0,0,-1,0,0,2,-1,0,2,0,-1,0,2,3,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1]),
                                                                                  coordIndex : new MFInt32([0,8,1,-1,1,8,9,-1,1,9,2,-1,2,9,10,-1,2,10,3,-1,3,10,11,-1,3,11,4,-1,4,11,12,-1,4,12,5,-1,5,12,13,-1,5,13,6,-1,6,13,14,-1,6,14,7,-1,7,14,15,-1,16,24,17,-1,17,24,25,-1,17,25,18,-1,18,25,26,-1,18,26,19,-1,19,26,27,-1,19,27,20,-1,20,27,28,-1,20,28,21,-1,21,28,29,-1,21,29,22,-1,22,29,30,-1,22,30,23,-1,23,30,31,-1,32,40,33,-1,33,40,41,-1,33,41,34,-1,34,41,42,-1,34,42,35,-1,35,42,43,-1,35,43,36,-1,36,43,44,-1,36,44,37,-1,37,44,45,-1,37,45,38,-1,38,45,46,-1,38,46,39,-1,39,46,47,-1]),
                                                                                  color : new SFNode(
                                                                                    new Color({
                                                                                      color : new MFColor([0.176251,0.265957,0.245934,0.340212,0.513369,0.474719,0.326003,0.406417,0.388468,0.52761,0.657754,0.628705,0.641747,0.657754,0.52761])})),
                                                                                  coord : new SFNode(
                                                                                    new Coordinate({
                                                                                      point : new MFVec3f([0.499663,-4.23754,0.00147555,0.311408,-4.23754,0.392392,-0.111597,-4.23754,0.48894,-0.450821,-4.23754,0.218418,-0.450821,-4.23754,-0.215466,-0.111597,-4.23754,-0.485988,0.311408,-4.23754,-0.38944,0.499663,-4.23754,0.00147555,0.497167,0.00708216,0,0.309979,0.00708216,0.388701,-0.11063,0.00708216,0.484702,-0.447932,0.00708216,0.215713,-0.447932,0.00708216,-0.215713,-0.11063,0.00708216,-0.484702,0.309979,0.00708216,-0.388701,0.497167,0.00708216,0,0.497167,0.00708216,0,0.309979,0.00708216,0.388701,-0.11063,0.00708216,0.484702,-0.447932,0.00708216,0.215713,-0.447932,0.00708216,-0.215713,-0.11063,0.00708216,-0.484702,0.309979,0.00708216,-0.388701,0.497167,0.00708216,0,0.305493,0.311653,-0.000865625,0.1919,0.311653,0.235012,-0.0633419,0.311653,0.293269,-0.268029,0.311653,0.130037,-0.268029,0.311653,-0.131769,-0.0633419,0.311653,-0.295001,0.1919,0.311653,-0.236744,0.305493,0.311653,-0.000865625,0.305493,0.311653,-0.000865625,0.1919,0.311653,0.235012,-0.0633419,0.311653,0.293269,-0.268029,0.311653,0.130037,-0.268029,0.311653,-0.131769,-0.0633419,0.311653,-0.295001,0.1919,0.311653,-0.236744,0.305493,0.311653,-0.000865625,0.30202,6.93454,-0.0000731106,0.188427,6.93454,0.235805,-0.0668143,6.93454,0.294062,-0.271502,6.93454,0.13083,-0.271502,6.93454,-0.130976,-0.0668143,6.93454,-0.294208,0.188427,6.93454,-0.235951,0.30202,6.93454,-0.0000731106])}))}))})])})])}),

                                                                    new Transform({
                                                                      DEF : new SFString("Day"),
                                                                      children : new MFNode([
                                                                        new Transform({
                                                                          DEF : new SFString("schatten"),
                                                                          translation : new SFVec3f([-1.80377,-17.616,6.62562]),
                                                                          rotation : new SFRotation([-0.000621489,-0.999998,-0.00181894,0.361183]),
                                                                          scale : new SFVec3f([0.194098,1.913,0.440866]),
                                                                          children : new MFNode([
                                                                            new Shape({
                                                                              appearance : new SFNode(
                                                                                new Appearance({
                                                                                  material : new SFNode(
                                                                                    new Material({
                                                                                      ambientIntensity : new SFFloat(0),
                                                                                      diffuseColor : new SFColor([0,0,0]),
                                                                                      shininess : new SFFloat(0)})),
                                                                                  texture : new SFNode(
                                                                                    new ImageTexture({
                                                                                      USE : new SFString("_21")}))})),
                                                                              geometry : new SFNode(
                                                                                new IndexedFaceSet({
                                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                                  texCoord : new SFNode(
                                                                                    new TextureCoordinate({
                                                                                      point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                                                  coord : new SFNode(
                                                                                    new Coordinate({
                                                                                      point : new MFVec3f([-10,10,-10,-10,10,10,10,10,10,10,10,-10])}))}))})])}),

                                                                        new Transform({
                                                                          DEF : new SFString("deckel"),
                                                                          translation : new SFVec3f([-2.02442,5.21348,6.99852]),
                                                                          children : new MFNode([
                                                                            new Shape({
                                                                              geometry : new SFNode(
                                                                                new IndexedFaceSet({
                                                                                  solid : new SFBool(false),
                                                                                  colorIndex : new MFInt32([0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,3,-1,0,3,0,-1,0,3,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,3,-1,3,0,0,-1,3,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,2,-1,2,0,2,-1,2,2,2,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,0,1,0,-1,0,1,0,-1,0,0,2,-1,0,0,0,-1,0,0,0,-1,0,0,1,-1,1,0,0,-1,1,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,0,-1,2,0,2,-1,2,0,0,-1,2,0,2,-1,2,0,0,-1,0,0,0,-1,2,0,0,-1,0,0,0,-1,0,0,0,-1,2,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,2,-1,2,0,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,0,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,0,0,-1,0,0,0,-1,2,0,2,-1,2,0,0,-1,2,0,2,-1,2,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1]),
                                                                                  coordIndex : new MFInt32([0,1,2,-1,2,1,3,-1,2,3,4,-1,4,3,5,-1,4,5,6,-1,6,5,7,-1,6,7,8,-1,8,7,9,-1,8,9,10,-1,1,11,3,-1,3,11,12,-1,3,12,5,-1,5,12,13,-1,5,13,7,-1,7,13,14,-1,7,14,9,-1,11,15,12,-1,12,15,16,-1,12,16,13,-1,13,16,17,-1,13,17,14,-1,15,18,16,-1,16,18,19,-1,16,19,17,-1,19,18,20,-1,10,9,21,-1,21,9,22,-1,9,14,22,-1,21,22,23,-1,23,22,24,-1,23,24,25,-1,25,24,26,-1,25,26,27,-1,27,26,28,-1,27,28,29,-1,22,14,30,-1,14,17,30,-1,22,30,24,-1,24,30,31,-1,24,31,26,-1,26,31,32,-1,26,32,28,-1,30,17,33,-1,17,19,33,-1,30,33,31,-1,31,33,34,-1,31,34,32,-1,33,19,35,-1,35,19,20,-1,33,35,34,-1,36,37,38,-1,38,37,39,-1,38,39,40,-1,40,39,41,-1,40,41,42,-1,42,41,43,-1,43,11,1,-1,42,43,44,-1,44,43,1,-1,44,1,0,-1,37,45,39,-1,39,45,46,-1,39,46,41,-1,41,46,47,-1,41,47,43,-1,43,47,11,-1,47,15,11,-1,45,48,46,-1,46,48,49,-1,46,49,47,-1,47,49,15,-1,49,18,15,-1,48,50,49,-1,49,50,18,-1,18,50,20,-1,50,35,20,-1,29,28,51,-1,51,28,52,-1,28,32,52,-1,51,52,53,-1,53,52,54,-1,53,54,55,-1,55,54,56,-1,56,45,37,-1,55,56,57,-1,57,56,37,-1,57,37,36,-1,52,32,58,-1,32,34,58,-1,52,58,54,-1,54,58,59,-1,54,59,56,-1,56,59,45,-1,59,48,45,-1,58,34,60,-1,34,35,60,-1,58,60,59,-1,60,35,50,-1,59,60,48,-1,60,50,48,-1]),
                                                                                  color : new SFNode(
                                                                                    new Color({
                                                                                      color : new MFColor([0.23744,0.358289,0.331315,0.528038,0.796791,0.736805,0.0885969,0.13369,0.123625,0.407546,0.614973,0.568675])})),
                                                                                  coord : new SFNode(
                                                                                    new Coordinate({
                                                                                      point : new MFVec3f([-1.11798,7.52941,0.000488281,-1.08387,7.63221,0.000479664,-1.08387,7.52939,-0.276585,-1.00892,7.65717,-0.343969,-0.926114,7.52936,-0.633202,-0.73718,7.67062,-0.761125,-0.609269,7.52933,-0.950047,-0.320026,7.65711,-1.03286,-0.252652,7.52932,-1.1078,0.0244215,7.63211,-1.10781,0.0244215,7.52932,-1.14191,-0.926114,7.76451,0.000468572,-0.73718,7.81193,-0.380336,-0.356379,7.8119,-0.761136,0.0244215,7.76443,-0.950067,-0.609269,7.88205,0.000458717,-0.320026,7.91274,-0.343991,0.0244215,7.882,-0.633232,-0.252652,7.94058,0.000453811,0.0244215,7.94056,-0.276619,0.0244215,7.95323,0.00045275,0.301495,7.52932,-1.1078,0.368869,7.65711,-1.03286,0.658112,7.52933,-0.950047,0.786023,7.67062,-0.761125,0.974957,7.52936,-0.633202,1.05776,7.65717,-0.343969,1.13271,7.52939,-0.276585,1.13271,7.63221,0.000479664,1.16682,7.52941,0.000488281,0.405222,7.8119,-0.761136,0.786023,7.81193,-0.380336,0.974957,7.76451,0.000468572,0.368868,7.91274,-0.343991,0.658112,7.88205,0.000458717,0.301495,7.94058,0.000453811,0.0244215,7.52951,1.14289,0.0244215,7.6323,1.10877,-0.252652,7.52951,1.10878,-0.320026,7.65729,1.03382,-0.609269,7.52949,0.951024,-0.73718,7.67075,0.762077,-0.926114,7.52947,0.634179,-1.00892,7.65723,0.344925,-1.08387,7.52944,0.277561,0.0244215,7.76459,0.951004,-0.356379,7.81202,0.762066,-0.73718,7.81199,0.381265,0.0244215,7.88211,0.634149,-0.320026,7.9128,0.344903,0.0244215,7.9406,0.277527,1.13271,7.52944,0.277561,1.05776,7.65723,0.344925,0.974957,7.52947,0.634179,0.786023,7.67075,0.762077,0.658112,7.52949,0.951024,0.368869,7.65729,1.03382,0.301495,7.52951,1.10878,0.786023,7.81199,0.381265,0.405222,7.81202,0.762066,0.368868,7.9128,0.344903])}))}))})])}),

                                                                        new Transform({
                                                                          DEF : new SFString("lampe"),
                                                                          translation : new SFVec3f([-2,12.8455,6.9828]),
                                                                          rotation : new SFRotation([-6.93889e-18,1,-0.0000419178,3.14159]),
                                                                          scale : new SFVec3f([0.816553,0.755354,0.816553]),
                                                                          children : new MFNode([
                                                                            new Shape({
                                                                              appearance : new SFNode(
                                                                                new Appearance({
                                                                                  material : new SFNode(
                                                                                    new Material({
                                                                                      ambientIntensity : new SFFloat(0.25),
                                                                                      diffuseColor : new SFColor([0.440009,0.699933,0.748016]),
                                                                                      specularColor : new SFColor([0.915152,0.915152,0.915152]),
                                                                                      shininess : new SFFloat(0.642424),
                                                                                      transparency : new SFFloat(0.389961)}))})),
                                                                              geometry : new SFNode(
                                                                                new IndexedFaceSet({
                                                                                  creaseAngle : new SFFloat(0.59603),
                                                                                  colorPerVertex : new SFBool(false),
                                                                                  coordIndex : new MFInt32([0,1,2,-1,3,1,0,-1,2,1,4,-1,2,4,5,-1,5,4,6,-1,5,6,7,-1,7,6,8,-1,7,8,9,-1,9,8,10,-1,9,10,11,-1,1,12,4,-1,4,12,13,-1,4,13,6,-1,6,13,14,-1,6,14,8,-1,8,14,15,-1,8,15,10,-1,12,16,13,-1,13,16,17,-1,13,17,14,-1,14,17,18,-1,14,18,15,-1,16,19,17,-1,17,19,20,-1,17,20,18,-1,20,19,21,-1,22,23,24,-1,24,23,25,-1,24,25,26,-1,26,25,27,-1,26,27,28,-1,28,27,29,-1,28,29,3,-1,3,29,1,-1,29,12,1,-1,23,30,25,-1,25,30,31,-1,25,31,27,-1,27,31,32,-1,27,32,29,-1,29,32,12,-1,32,16,12,-1,30,33,31,-1,31,33,34,-1,31,34,32,-1,32,34,16,-1,34,19,16,-1,33,35,34,-1,34,35,19,-1,19,35,21,-1,11,10,36,-1,37,23,22,-1,36,10,38,-1,10,15,38,-1,36,38,39,-1,39,38,40,-1,39,40,41,-1,41,40,42,-1,41,42,43,-1,43,42,44,-1,43,44,45,-1,45,44,46,-1,38,15,47,-1,15,18,47,-1,38,47,40,-1,40,47,48,-1,40,48,42,-1,42,48,49,-1,42,49,44,-1,47,18,50,-1,18,20,50,-1,47,50,48,-1,48,50,51,-1,48,51,49,-1,50,20,52,-1,52,20,21,-1,50,52,51,-1,35,52,21,-1,46,44,53,-1,44,49,53,-1,46,53,54,-1,54,53,55,-1,54,55,56,-1,56,55,57,-1,56,57,37,-1,37,57,23,-1,57,30,23,-1,53,49,58,-1,49,51,58,-1,53,58,55,-1,55,58,59,-1,55,59,57,-1,57,59,30,-1,59,33,30,-1,58,51,60,-1,51,52,60,-1,58,60,59,-1,59,60,33,-1,60,35,33,-1,60,52,35,-1]),
                                                                                  coord : new SFNode(
                                                                                    new Coordinate({
                                                                                      point : new MFVec3f([0,0,1,0,-0.242536,0.970142,0.242536,0,0.970142,-0.242536,0,0.970142,0.301511,-0.301511,0.904534,0.5547,0,0.83205,0.666667,-0.333333,0.666667,0.83205,0,0.5547,0.904534,-0.301511,0.301511,0.970142,0,0.242536,0.970142,-0.242536,0,1,0,0,0,-0.5547,0.83205,0.333333,-0.666667,0.666667,0.666667,-0.666667,0.333333,0.83205,-0.5547,0,0,-0.83205,0.5547,0.301511,-0.904534,0.301511,0.5547,-0.83205,0,0,-0.970142,0.242536,0.242536,-0.970142,0,0,-1,0,-1,0,0,-0.970142,-0.242536,0,-0.970142,0,0.242536,-0.904534,-0.301511,0.301511,-0.83205,0,0.5547,-0.666667,-0.333333,0.666667,-0.5547,0,0.83205,-0.301511,-0.301511,0.904534,-0.83205,-0.5547,0,-0.666667,-0.666667,0.333333,-0.333333,-0.666667,0.666667,-0.5547,-0.83205,0,-0.301511,-0.904534,0.301511,-0.242536,-0.970142,0,0.970142,0,-0.242536,-0.970142,0,-0.242536,0.904534,-0.301511,-0.301511,0.83205,0,-0.5547,0.666667,-0.333333,-0.666667,0.5547,0,-0.83205,0.301511,-0.301511,-0.904534,0.242536,0,-0.970142,0,-0.242536,-0.970142,0,0,-1,-0.242536,0,-0.970142,0.666667,-0.666667,-0.333333,0.333333,-0.666667,-0.666667,0,-0.5547,-0.83205,0.301511,-0.904534,-0.301511,0,-0.83205,-0.5547,0,-0.970142,-0.242536,-0.301511,-0.301511,-0.904534,-0.5547,0,-0.83205,-0.666667,-0.333333,-0.666667,-0.83205,0,-0.5547,-0.904534,-0.301511,-0.301511,-0.333333,-0.666667,-0.666667,-0.666667,-0.666667,-0.333333,-0.301511,-0.904534,-0.301511])}))}))})])}),

                                                                        new Transform({
                                                                          DEF : new SFString("mast"),
                                                                          translation : new SFVec3f([-2.02442,5.21348,6.99852]),
                                                                          children : new MFNode([
                                                                            new Shape({
                                                                              geometry : new SFNode(
                                                                                new IndexedFaceSet({
                                                                                  solid : new SFBool(false),
                                                                                  colorIndex : new MFInt32([0,0,5,-1,5,0,0,-1,5,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,4,-1,4,0,0,-1,4,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,3,3,3,-1,3,3,3,-1,3,3,2,-1,2,3,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,2,3,-1,2,3,3,-1,3,3,3,-1,3,3,3,-1,3,3,3,-1,0,8,0,-1,0,8,0,-1,0,0,0,-1,0,0,6,-1,0,6,0,-1,0,6,0,-1,0,0,0,-1,0,0,1,-1,0,1,0,-1,0,1,7,-1,0,7,0,-1,0,7,0,-1,0,0,0,-1,0,0,8,-1]),
                                                                                  coordIndex : new MFInt32([0,8,1,-1,1,8,9,-1,1,9,2,-1,2,9,10,-1,2,10,3,-1,3,10,11,-1,3,11,4,-1,4,11,12,-1,4,12,5,-1,5,12,13,-1,5,13,6,-1,6,13,14,-1,6,14,7,-1,7,14,15,-1,16,24,17,-1,17,24,25,-1,17,25,18,-1,18,25,26,-1,18,26,19,-1,19,26,27,-1,19,27,20,-1,20,27,28,-1,20,28,21,-1,21,28,29,-1,21,29,22,-1,22,29,30,-1,22,30,23,-1,23,30,31,-1,32,40,33,-1,33,40,41,-1,33,41,34,-1,34,41,42,-1,34,42,35,-1,35,42,43,-1,35,43,36,-1,36,43,44,-1,36,44,37,-1,37,44,45,-1,37,45,38,-1,38,45,46,-1,38,46,39,-1,39,46,47,-1]),
                                                                                  color : new SFNode(
                                                                                    new Color({
                                                                                      color : new MFColor([0.176251,0.265957,0.245934,0.150133,0.187166,0.1789,0.52761,0.657754,0.628705,0.641747,0.657754,0.52761,0.0772112,0.0962567,0.0920056,0.0815008,0.101604,0.097117,0.0921407,0.139037,0.12857,0.201607,0.251337,0.240237,0.124036,0.187166,0.173075])})),
                                                                                  coord : new SFNode(
                                                                                    new Coordinate({
                                                                                      point : new MFVec3f([0.499663,-4.23754,0.00147555,0.311408,-4.23754,0.392392,-0.111597,-4.23754,0.48894,-0.450821,-4.23754,0.218418,-0.450821,-4.23754,-0.215466,-0.111597,-4.23754,-0.485988,0.311408,-4.23754,-0.38944,0.499663,-4.23754,0.00147555,0.497167,0.00708216,0,0.309979,0.00708216,0.388701,-0.11063,0.00708216,0.484702,-0.447932,0.00708216,0.215713,-0.447932,0.00708216,-0.215713,-0.11063,0.00708216,-0.484702,0.309979,0.00708216,-0.388701,0.497167,0.00708216,0,0.497167,0.00708216,0,0.309979,0.00708216,0.388701,-0.11063,0.00708216,0.484702,-0.447932,0.00708216,0.215713,-0.447932,0.00708216,-0.215713,-0.11063,0.00708216,-0.484702,0.309979,0.00708216,-0.388701,0.497167,0.00708216,0,0.305493,0.311653,-0.000865625,0.1919,0.311653,0.235012,-0.0633419,0.311653,0.293269,-0.268029,0.311653,0.130037,-0.268029,0.311653,-0.131769,-0.0633419,0.311653,-0.295001,0.1919,0.311653,-0.236744,0.305493,0.311653,-0.000865625,0.305493,0.311653,-0.000865625,0.1919,0.311653,0.235012,-0.0633419,0.311653,0.293269,-0.268029,0.311653,0.130037,-0.268029,0.311653,-0.131769,-0.0633419,0.311653,-0.295001,0.1919,0.311653,-0.236744,0.305493,0.311653,-0.000865625,0.30202,6.93454,-0.0000731106,0.188427,6.93454,0.235805,-0.0668143,6.93454,0.294062,-0.271502,6.93454,0.13083,-0.271502,6.93454,-0.130976,-0.0668143,6.93454,-0.294208,0.188427,6.93454,-0.235951,0.30202,6.93454,-0.0000731106])}))}))})])})])})])})])})])})])}),

                                                    new Transform({
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([25.1646,0.0601086,0]),
                                                          children : new MFNode([
                                                            new Transform({
                                                              USE : new SFString("_19")})])})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([0,0.0385294,0]),
                                                      children : new MFNode([
                                                        new Transform({
                                                          USE : new SFString("_19")})])}),

                                                    new Transform({
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([12.3496,0.0414006,0]),
                                                          children : new MFNode([
                                                            new Transform({
                                                              USE : new SFString("_19")})])})])})])}),

                                                new Transform({
                                                  DEF : new SFString("xform_2"),
                                                  translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                                  rotation : new SFRotation([-0.148495,0.0115616,-0.988846,0.000690534]),
                                                  scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["stein.png"])})),
                                                          textureTransform : new SFNode(
                                                            new TextureTransform({
                                                              scale : new SFVec2f([10,10])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          colorIndex : new MFInt32([2,0,5,12,-1,3,3,4,-1,4,4,0,-1,3,4,0,-1,4,4,0,-1,4,4,0,-1,4,4,0,-1,4,0,0,-1,4,5,5,-1,0,4,5,-1,5,5,5,-1,5,5,5,-1,8,7,12,-1,7,6,12,-1,8,12,9,-1,12,5,9,-1,10,5,5,-1,10,9,5,-1,1,10,5,-1,1,1,10,-1,5,1,5,-1,5,1,1,-1,1,5,3,-1,1,1,5,-1,1,1,11,-1,1,3,11,-1]),
                                                          texCoordIndex : new MFInt32([0,1,2,3,-1,4,5,6,-1,10,7,11,-1,4,6,11,-1,12,10,11,-1,13,12,11,-1,6,13,11,-1,7,14,11,-1,7,8,9,-1,14,7,9,-1,15,16,17,-1,16,18,17,-1,38,30,28,-1,30,27,28,-1,38,33,40,-1,33,39,40,-1,32,39,31,-1,32,40,39,-1,35,37,34,-1,35,36,37,-1,22,19,20,-1,22,21,19,-1,24,22,25,-1,24,21,22,-1,23,24,26,-1,24,25,26,-1]),
                                                          coordIndex : new MFInt32([0,1,2,3,-1,4,5,6,-1,9,7,10,-1,4,6,10,-1,11,9,10,-1,12,11,10,-1,6,12,10,-1,7,13,10,-1,7,8,14,-1,13,7,14,-1,14,15,2,-1,15,16,2,-1,30,27,3,-1,27,26,3,-1,30,3,31,-1,3,2,31,-1,28,2,16,-1,28,31,2,-1,19,28,16,-1,19,29,28,-1,17,19,16,-1,17,18,19,-1,20,22,23,-1,20,21,22,-1,24,20,25,-1,20,23,25,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.737968,0.737968,0.737968,0.0374332,0.0370315,0.0309025,0.304813,0.304813,0.304813,0.177887,0.187166,0.162827,0.508021,0.508021,0.508021,0.701382,0.737968,0.642005,0.625668,0.61394,0.434957,0.558003,0.547588,0.388652,0.60425,0.626114,0.525936,0.64073,0.668124,0.569529,0.345608,0.363636,0.31635,0.347594,0.347594,0.347594,0.235294,0.235294,0.235294])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0.00421184,0.213296,0.00420034,0.00460004,1.00025,0.00000847578,1.00047,0.212867,-0.00293649,-0.317895,0.0278995,-0.316723,0.0278559,-0.307997,0.242209,-0.234393,0.692564,-0.231236,0.694277,0.00105508,0.180144,-0.238953,0.00420034,0.00460004,0.113044,-0.257037,0.056889,-0.28559,0.242887,0.00407436,0.694278,0.00106259,0.690689,-0.484554,1.00022,-0.0000271961,0.996042,-0.476492,0.996042,-0.476492,0.996038,-0.478322,0.690627,-0.484696,0.690627,-0.486338,0.0368542,-0.468368,0.042955,-0.468785,0.0429169,-0.47073,0.0367625,-0.47066,1.00753,1.66574,1.00047,0.212867,0.322532,0.282627,1.12752,1.66752,0.996042,-0.476492,1.11178,-0.474713,1.00047,0.212867,0.996038,-0.478322,0.996042,-0.476492,1.11178,-0.474713,1.11164,-0.476166,1.11586,0.214491,1.00022,-0.000027202,1.11551,0.00165807])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-93.7247,100.002,28.1556,-93.586,100.003,36.4865,-42.2319,100.002,36.7184,-42.3401,100.002,28.1777,-93.391,100.003,50.6004,-91.4145,99.9999,50.613,-91.4011,99.9999,50.1012,-81.2426,100,46.7563,-57.9715,100,46.9126,-84.313,100,46.9689,-93.586,100.003,36.4865,-87.4703,100,47.7913,-90.0983,100,49.079,-81.2798,100.002,36.5296,-58.0077,100.002,36.6112,-58.0735,100,50.8243,-42.3626,100,50.9047,-58.0735,100,50.8243,-58.0735,99.8449,50.8243,-42.3296,99.8449,50.9049,-91.4648,99.794,50.7066,-58.0735,99.8449,50.8243,-58.0735,100,50.8243,-91.4145,99.9999,50.613,-93.4403,99.7965,50.6575,-93.391,100.003,50.6004,-42.9896,100.001,-23.0842,-38.2585,100.001,-23.1742,-36.5134,100,50.9346,-36.5134,99.8449,50.9347,-36.8138,100.002,28.1376,-36.701,100.001,36.6996])}))}))})])})])}),

                                            new Transform({
                                              DEF : new SFString("Eingang"),
                                              children : new MFNode([
                                                new Transform({
                                                  translation : new SFVec3f([12.8051,1.96478,0.0801342]),
                                                  rotation : new SFRotation([0,1,0,1.5708]),
                                                  scale : new SFVec3f([0.393397,4.12234,0.572656]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([3,3,0,0,-1,0,0,1,1,-1,0,2,2,0,-1,0,1,1,0,-1,0,0,0,0,-1,3,0,0,0,-1]),
                                                          coordIndex : new MFInt32([0,1,3,2,-1,4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,2,4,-1,1,7,5,3,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.8,0.8,0.8,0.42246,0.42246,0.42246,0.262032,0.262032,0.262032,0.406417,0.406417,0.406417])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.470932,0.470932,0.470933,-0.470932,-0.470932,0.470933,0.470932,0.470932,0.470933,0.470932,-0.470932,0.470933,0.470932,0.470932,-0.470933,0.470932,-0.470932,-0.470933,-0.470932,0.470932,-0.470933,-0.470932,-0.470932,-0.470933])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([2.14632,1.96478,0.0801304]),
                                                  rotation : new SFRotation([0,1,0,1.5708]),
                                                  scale : new SFVec3f([0.393397,4.12234,0.572656]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([3,3,0,0,-1,0,0,1,1,-1,0,2,0,0,-1,0,3,3,0,-1,0,0,0,0,-1,0,0,0,0,-1]),
                                                          coordIndex : new MFInt32([0,1,3,2,-1,4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,2,4,-1,1,7,5,3,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.775401,0.775401,0.775401,0.57754,0.57754,0.57754,0.379679,0.379679,0.379679,0.42246,0.42246,0.42246])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.470932,0.470932,0.470933,-0.470932,-0.470932,0.470933,0.470932,0.470932,0.470933,0.470932,-0.470932,0.470933,0.470932,0.470932,-0.470933,0.470932,-0.470932,-0.470933,-0.470932,0.470932,-0.470933,-0.470932,-0.470932,-0.470933])}))}))})])}),

                                                new Transform({
                                                  children : new MFNode([
                                                    new Transform({
                                                      DEF : new SFString("DoorProxy"),
                                                      translation : new SFVec3f([7.32925,1.88576,1.5803]),
                                                      scale : new SFVec3f([10.4299,4.05141,22.1132]),
                                                      children : new MFNode([
                                                        new ProximitySensor({
                                                          DEF : new SFString("_22"),
                                                          size : new SFVec3f([1,1,1])})])}),

                                                    new Transform({
                                                      DEF : new SFString("Tuer"),
                                                      center : new SFVec3f([7.35956,1.99505,0.15691]),
                                                      children : new MFNode([
                                                        new Group({
                                                          children : new MFNode([
                                                            new Group({
                                                              DEF : new SFString("openDoor"),
                                                              children : new MFNode([
                                                                new TimeSensor({
                                                                  DEF : new SFString("Time_1"),
                                                                  cycleInterval : new SFTime(3),
                                                                  stopTime : new SFTime(1)})])}),

                                                            new PositionInterpolator({
                                                              DEF : new SFString("linksScaleFactorInterp_1"),
                                                              key : new MFFloat([0,1]),
                                                              keyValue : new MFVec3f([4.05008,3.88109,4.05008,4.05007,3.88109,0.291856])}),

                                                            new PositionInterpolator({
                                                              DEF : new SFString("linksTranslationInterp_1"),
                                                              key : new MFFloat([0,1]),
                                                              keyValue : new MFVec3f([9.99656,1.97998,4.36092,7.46525,1.97998,4.36093])}),

                                                            new PositionInterpolator({
                                                              DEF : new SFString("rechtsTranslationInterp_1"),
                                                              key : new MFFloat([0,1]),
                                                              keyValue : new MFVec3f([15.4524,1.97401,3.01386,18.0906,1.97401,3.01385])}),

                                                            new PositionInterpolator({
                                                              DEF : new SFString("rechtsScaleFactorInterp_1"),
                                                              key : new MFFloat([0,1]),
                                                              keyValue : new MFVec3f([4.05008,3.88109,4.05008,4.05007,3.88109,0.133107])})])}),

                                                        new Group({
                                                          children : new MFNode([
                                                            new Group({
                                                              DEF : new SFString("closeDoor"),
                                                              children : new MFNode([
                                                                new TimeSensor({
                                                                  DEF : new SFString("Time_2"),
                                                                  cycleInterval : new SFTime(3),
                                                                  stopTime : new SFTime(1)})])}),

                                                            new PositionInterpolator({
                                                              DEF : new SFString("linksTranslationInterp_2"),
                                                              key : new MFFloat([0,1]),
                                                              keyValue : new MFVec3f([7.46525,1.97998,4.36093,9.99656,1.97998,4.36092])}),

                                                            new PositionInterpolator({
                                                              DEF : new SFString("linksScaleFactorInterp_2"),
                                                              key : new MFFloat([0,1]),
                                                              keyValue : new MFVec3f([4.05007,3.88109,0.291856,4.05007,3.88109,4.05007])}),

                                                            new PositionInterpolator({
                                                              DEF : new SFString("rechtsTranslationInterp_2"),
                                                              key : new MFFloat([0,1]),
                                                              keyValue : new MFVec3f([18.0906,1.97401,3.01385,15.4524,1.97401,3.01386])}),

                                                            new PositionInterpolator({
                                                              DEF : new SFString("rechtsScaleFactorInterp_2"),
                                                              key : new MFFloat([0,1]),
                                                              keyValue : new MFVec3f([4.05007,3.88109,0.133107,4.05007,3.88109,4.05007])})])}),

                                                        new Transform({
                                                          DEF : new SFString("links_2"),
                                                          translation : new SFVec3f([9.99656,1.97998,4.36092]),
                                                          rotation : new SFRotation([0,1,0,1.5708]),
                                                          scale : new SFVec3f([4.05008,3.88109,4.05008]),
                                                          center : new SFVec3f([-5.36489,0.0231237,-4.20405]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  material : new SFNode(
                                                                    new Material({
                                                                      DEF : new SFString("_23"),
                                                                      transparency : new SFFloat(0.540984)}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  coordIndex : new MFInt32([25,9,28,27,-1,28,11,26,27,-1,13,29,27,26,-1,29,1,25,27,-1,26,11,32,31,-1,32,10,30,31,-1,4,33,31,30,-1,33,13,26,31,-1,30,10,36,35,-1,36,16,34,35,-1,14,37,35,34,-1,37,4,30,35,-1,38,14,34,40,-1,34,16,39,40,-1,17,41,40,39,-1,41,0,38,40,-1,42,12,44,43,-1,44,11,28,43,-1,9,45,43,28,-1,45,7,42,43,-1,46,18,49,48,-1,49,19,47,48,-1,21,50,48,47,-1,50,2,46,48,-1,47,19,52,51,-1,52,12,42,51,-1,7,53,51,42,-1,53,21,47,51,-1,54,10,32,55,-1,32,11,44,55,-1,12,56,55,44,-1,56,6,54,55,-1,57,15,59,58,-1,59,16,36,58,-1,10,54,58,36,-1,54,6,57,58,-1,39,16,59,61,-1,59,15,60,61,-1,8,62,61,60,-1,62,17,39,61,-1,63,20,65,64,-1,65,19,49,64,-1,18,66,64,49,-1,66,5,63,64,-1,56,12,52,67,-1,52,19,65,67,-1,20,68,67,65,-1,68,6,56,67,-1,68,20,71,70,-1,71,23,69,70,-1,15,57,70,69,-1,57,6,68,70,-1,60,15,69,73,-1,69,23,72,73,-1,24,74,73,72,-1,74,8,60,73,-1,75,22,77,76,-1,77,23,71,76,-1,20,63,76,71,-1,63,5,75,76,-1,72,23,77,79,-1,77,22,78,79,-1,3,80,79,78,-1,80,24,72,79,-1]),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-5.36483,0.535375,-4.87759,-5.36493,-0.484979,-4.87759,-5.36495,-0.489128,-3.53051,-5.36483,0.535375,-3.53051,-5.36488,0.025198,-4.87759,-5.36489,0.0231235,-3.53051,-5.36489,0.0241607,-4.20405,-5.36494,-0.487054,-4.20405,-5.36483,0.535375,-4.20405,-5.36493,-0.486016,-4.54082,-5.36488,0.0246794,-4.54082,-5.36491,-0.230668,-4.54082,-5.36491,-0.231446,-4.20405,-5.36491,-0.229891,-4.87759,-5.36485,0.280286,-4.87759,-5.36486,0.279768,-4.20405,-5.36486,0.280027,-4.54082,-5.36483,0.535375,-4.54082,-5.36492,-0.233002,-3.53051,-5.36492,-0.232224,-3.86728,-5.36489,0.0236421,-3.86728,-5.36495,-0.488091,-3.86728,-5.36486,0.279249,-3.53051,-5.36486,0.279509,-3.86728,-5.36483,0.535375,-3.86728,-5.36493,-0.485498,-4.70921,-5.36491,-0.230279,-4.70921,-5.36492,-0.357889,-4.70921,-5.36492,-0.358342,-4.54082,-5.36492,-0.357435,-4.87759,-5.36488,0.0249387,-4.70921,-5.36489,-0.10267,-4.70921,-5.3649,-0.102995,-4.54082,-5.36489,-0.102346,-4.87759,-5.36486,0.280157,-4.70921,-5.36487,0.152548,-4.70921,-5.36487,0.152353,-4.54082,-5.36487,0.152742,-4.87759,-5.36484,0.407831,-4.87759,-5.36484,0.407701,-4.54082,-5.36484,0.407766,-4.70921,-5.36483,0.535375,-4.70921,-5.36493,-0.35925,-4.20405,-5.36492,-0.358796,-4.37244,-5.36491,-0.231057,-4.37244,-5.36494,-0.486535,-4.37244,-5.36493,-0.361065,-3.53051,-5.36493,-0.360158,-3.86728,-5.36493,-0.360611,-3.69889,-5.36492,-0.232613,-3.69889,-5.36495,-0.488609,-3.69889,-5.36493,-0.359704,-4.03567,-5.36491,-0.231835,-4.03567,-5.36494,-0.487572,-4.03567,-5.36488,0.0244201,-4.37244,-5.3649,-0.103319,-4.37244,-5.3649,-0.103643,-4.20405,-5.36487,0.151964,-4.20405,-5.36487,0.152159,-4.37244,-5.36486,0.279898,-4.37244,-5.36484,0.407571,-4.20405,-5.36484,0.407636,-4.37244,-5.36483,0.535375,-4.37244,-5.36489,0.0233828,-3.69889,-5.3649,-0.104615,-3.69889,-5.3649,-0.104291,-3.86728,-5.36491,-0.104939,-3.53051,-5.3649,-0.103967,-4.03567,-5.36489,0.0239014,-4.03567,-5.36486,0.279638,-4.03567,-5.36487,0.15177,-4.03567,-5.36487,0.151575,-3.86728,-5.36484,0.407442,-3.86728,-5.36484,0.407507,-4.03567,-5.36483,0.535375,-4.03567,-5.36487,0.151186,-3.53051,-5.36487,0.151381,-3.69889,-5.36486,0.279379,-3.69889,-5.36485,0.407312,-3.53051,-5.36484,0.407377,-3.69889,-5.36483,0.535375,-3.69889])}))}))})])}),

                                                        new Transform({
                                                          DEF : new SFString("rechts_2"),
                                                          translation : new SFVec3f([15.4524,1.97401,3.01386]),
                                                          rotation : new SFRotation([0,1,0,1.5708]),
                                                          scale : new SFVec3f([4.05007,3.88109,4.05007]),
                                                          center : new SFVec3f([-5.3649,0.0210495,-2.85696]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  material : new SFNode(
                                                                    new Material({
                                                                      USE : new SFString("_23")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  coordIndex : new MFInt32([25,9,28,27,-1,28,11,26,27,-1,13,29,27,26,-1,29,2,25,27,-1,26,11,32,31,-1,32,10,30,31,-1,4,33,31,30,-1,33,13,26,31,-1,30,10,36,35,-1,36,16,34,35,-1,14,37,35,34,-1,37,4,30,35,-1,38,14,34,40,-1,34,16,39,40,-1,17,41,40,39,-1,41,1,38,40,-1,42,12,44,43,-1,44,11,28,43,-1,9,45,43,28,-1,45,7,42,43,-1,46,18,49,48,-1,49,19,47,48,-1,21,50,48,47,-1,50,3,46,48,-1,47,19,52,51,-1,52,12,42,51,-1,7,53,51,42,-1,53,21,47,51,-1,54,10,32,55,-1,32,11,44,55,-1,12,56,55,44,-1,56,6,54,55,-1,57,15,59,58,-1,59,16,36,58,-1,10,54,58,36,-1,54,6,57,58,-1,39,16,59,61,-1,59,15,60,61,-1,8,62,61,60,-1,62,17,39,61,-1,63,20,65,64,-1,65,19,49,64,-1,18,66,64,49,-1,66,5,63,64,-1,56,12,52,67,-1,52,19,65,67,-1,20,68,67,65,-1,68,6,56,67,-1,68,20,71,70,-1,71,23,69,70,-1,15,57,70,69,-1,57,6,68,70,-1,60,15,69,73,-1,69,23,72,73,-1,24,74,73,72,-1,74,8,60,73,-1,75,22,77,76,-1,77,23,71,76,-1,20,63,76,71,-1,63,5,75,76,-1,72,23,77,79,-1,77,22,78,79,-1,0,80,79,78,-1,80,24,72,79,-1]),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-5.36483,0.535375,-2.18342,-5.36483,0.535375,-3.53051,-5.36495,-0.489128,-3.53051,-5.36497,-0.493276,-2.18342,-5.36489,0.0231235,-3.53051,-5.3649,0.0210495,-2.18342,-5.36489,0.0220865,-2.85697,-5.36496,-0.491202,-2.85697,-5.36483,0.535375,-2.85697,-5.36495,-0.490165,-3.19374,-5.36489,0.022605,-3.19374,-5.36492,-0.23378,-3.19374,-5.36493,-0.234558,-2.85697,-5.36492,-0.233002,-3.53051,-5.36486,0.279249,-3.53051,-5.36486,0.278731,-2.85697,-5.36486,0.27899,-3.19374,-5.36483,0.535375,-3.19374,-5.36493,-0.236113,-2.18342,-5.36493,-0.235335,-2.52019,-5.3649,0.021568,-2.52019,-5.36497,-0.492239,-2.52019,-5.36487,0.278212,-2.18342,-5.36486,0.278471,-2.52019,-5.36483,0.535375,-2.52019,-5.36495,-0.489646,-3.36212,-5.36492,-0.233391,-3.36212,-5.36494,-0.361519,-3.36212,-5.36494,-0.361973,-3.19374,-5.36493,-0.361065,-3.53051,-5.36489,0.0228643,-3.36212,-5.36491,-0.105263,-3.36212,-5.36491,-0.105587,-3.19374,-5.36491,-0.104939,-3.53051,-5.36486,0.27912,-3.36212,-5.36488,0.150992,-3.36212,-5.36488,0.150798,-3.19374,-5.36487,0.151186,-3.53051,-5.36485,0.407312,-3.53051,-5.36485,0.407183,-3.19374,-5.36485,0.407247,-3.36212,-5.36483,0.535375,-3.36212,-5.36494,-0.36288,-2.85697,-5.36494,-0.362426,-3.02535,-5.36493,-0.234169,-3.02535,-5.36496,-0.490683,-3.02535,-5.36495,-0.364695,-2.18342,-5.36495,-0.363787,-2.52019,-5.36495,-0.364241,-2.35181,-5.36493,-0.235724,-2.35181,-5.36497,-0.492757,-2.35181,-5.36495,-0.363334,-2.68858,-5.36493,-0.234947,-2.68858,-5.36496,-0.49172,-2.68858,-5.36489,0.0223458,-3.02535,-5.36491,-0.105912,-3.02535,-5.36491,-0.106236,-2.85697,-5.36488,0.150409,-2.85697,-5.36488,0.150603,-3.02535,-5.36486,0.27886,-3.02535,-5.36485,0.407053,-2.85697,-5.36485,0.407118,-3.02535,-5.36483,0.535375,-3.02535,-5.3649,0.0213087,-2.35181,-5.36492,-0.107208,-2.35181,-5.36491,-0.106884,-2.52019,-5.36492,-0.107532,-2.18342,-5.36491,-0.10656,-2.68858,-5.3649,0.0218273,-2.68858,-5.36486,0.278601,-2.68858,-5.36488,0.150214,-2.68858,-5.36488,0.15002,-2.52019,-5.36485,0.406923,-2.52019,-5.36485,0.406988,-2.68858,-5.36483,0.535375,-2.68858,-5.36488,0.149631,-2.18342,-5.36488,0.149825,-2.35181,-5.36486,0.278342,-2.35181,-5.36485,0.406794,-2.18342,-5.36485,0.406858,-2.35181,-5.36483,0.535375,-2.35181])}))}))})])})])})])})])})])}),

                                        new Transform({
                                          DEF : new SFString("Platz-mitte"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Baume_1"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("G2_1"),
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([31.692,5.4824,-3.39425]),
                                                      rotation : new SFRotation([0.000294405,1,-0.000398219,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.00000359997,0.00000618756,1,4.71239]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  DEF : new SFString("_24"),
                                                                  ambientIntensity : new SFFloat(0),
                                                                  diffuseColor : new SFColor([0,0,0]),
                                                                  emissiveColor : new SFColor([0.244681,0.244681,0.244681]),
                                                                  shininess : new SFFloat(0)})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  DEF : new SFString("_25"),
                                                                  url : new MFString(["tree.png"])}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([28.4946,5.48295,-16.5078]),
                                                      rotation : new SFRotation([0.000294248,1,-0.000398302,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_24")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([28.4291,3.99678,-11.2936]),
                                                      rotation : new SFRotation([0.000294293,1,-0.000398222,1.57081]),
                                                      scale : new SFVec3f([7.92716,7.92718,8.389]),
                                                      scaleOrientation : new SFRotation([-0.0000208127,-0.0000771452,1,0.196873]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_24")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([30.0899,5.67568,4.79494]),
                                                      rotation : new SFRotation([0.000346301,1,-0.0000516112,3.1416]),
                                                      scale : new SFVec3f([12.0881,11.4227,11.4227]),
                                                      scaleOrientation : new SFRotation([-0.999999,-0.00141683,-0.000107459,0.0302343]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_24")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([45.462,5.75447,10.1182]),
                                                      rotation : new SFRotation([-0.000392749,-1,-0.000290223,1.57078]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000501375,-0.000568477,-1,0.0927998]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_24")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([30.1959,5.57275,10.9776]),
                                                      rotation : new SFRotation([0.000346301,1,-0.0000513019,3.1416]),
                                                      scale : new SFVec3f([12.0881,11.4227,11.4227]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_24")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              colorPerVertex : new SFBool(false),
                                                              colorIndex : new MFInt32([0,0,0,0]),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              color : new SFNode(
                                                                new Color({
                                                                  color : new MFColor([0,0,0])})),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([43.0806,5.47447,-0.597979]),
                                                      rotation : new SFRotation([0.000294455,1,-0.000398099,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.00000581511,0.00000840627,1,4.71239]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_24")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])})])})])}),

                                            new Transform({
                                              DEF : new SFString("Boden-mitte"),
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          USE : new SFString("_6")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorIndex : new MFInt32([3,3,2,6,-1,5,1,1,5,-1,4,7,5,1,1,0,-1]),
                                                      texCoordIndex : new MFInt32([8,4,5,10,-1,9,2,3,12,-1,7,13,11,6,0,1,-1]),
                                                      coordIndex : new MFInt32([6,3,2,7,-1,7,2,4,8,-1,5,9,8,4,0,1,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.0481283,0.0476119,0.0397317,0.101604,0.101604,0.101604,0.187166,0.187166,0.187166,0.0374332,0.0370315,0.0309025,0.26416,0.25945,0.187568,0.345608,0.363636,0.31635,0.182897,0.213904,0.165113,0.558003,0.547588,0.388652])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.538652,0.0352667,0.538613,1.01714,0.524672,-9.83207e-9,0.526741,0.0353197,0.523881,-0.0203518,0.524672,-9.83207e-9,0.526741,0.0353197,0.469176,1.01705,0.349688,-0.0204247,0.349781,-1.35598e-7,0.349781,-1.42922e-7,0.349933,0.0370906,0.349933,0.0370907,0.349781,1.01715])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5156,100.001,43.6269,-2.6085,100,-23.8523,-2.35933,100,51.1094,-2.35933,99.8449,51.1094,-1.87894,100.001,43.6161,-17.7133,100,-23.565,-36.5134,99.8449,50.9347,-36.5134,100,50.9346,-36.6697,100.002,43.459,-38.2585,100.001,-23.1742])}))}))})])})])}),

                                        new Transform({
                                          DEF : new SFString("Fussweg-vor"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Baume_2"),
                                              children : new MFNode([
                                                new Transform({
                                                  translation : new SFVec3f([66.1839,5.46198,33.3845]),
                                                  rotation : new SFRotation([0.000295154,1,-0.000397332,1.57081]),
                                                  scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                  scaleOrientation : new SFRotation([0.00000209542,4.93502e-7,1,4.71239]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              USE : new SFString("_24")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_25")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          colorPerVertex : new SFBool(false),
                                                          colorIndex : new MFInt32([0,0,0,0]),
                                                          texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0,0,0])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([82.1577,5.45093,33.479]),
                                                  rotation : new SFRotation([0.000294609,1,-0.000397921,1.57081]),
                                                  scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                  scaleOrientation : new SFRotation([0.0000094615,-0.00000687217,1,4.71239]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              USE : new SFString("_24")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_25")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([98.1592,5.43984,33.4799]),
                                                  rotation : new SFRotation([0.000294196,1,-0.000398372,1.57081]),
                                                  scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                  scaleOrientation : new SFRotation([0.00000373521,-0.00000114254,1,4.71239]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              USE : new SFString("_24")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_25")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([113.961,5.42891,33.7061]),
                                                  rotation : new SFRotation([0.000294428,1,-0.000398169,1.57081]),
                                                  scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                  scaleOrientation : new SFRotation([0.00000658249,-0.00000399387,1,4.71239]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              USE : new SFString("_24")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_25")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([129.321,5.41829,33.8887]),
                                                  rotation : new SFRotation([0.00029422,1,-0.000398357,1.57081]),
                                                  scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                  scaleOrientation : new SFRotation([0.00000594998,-0.00000336138,1,4.71239]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              USE : new SFString("_24")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_25")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])})])}),

                                            new Transform({
                                              DEF : new SFString("Fussweg"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("Boden_2"),
                                                  translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                                  rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                                  scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new PixelTexture({
                                                              USE : new SFString("_5")})),
                                                          textureTransform : new SFNode(
                                                            new TextureTransform({
                                                              USE : new SFString("_6")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          colorIndex : new MFInt32([1,1,0,2,-1]),
                                                          texCoordIndex : new MFInt32([23,7,0,13,-1]),
                                                          coordIndex : new MFInt32([3,1,0,2,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.861702,0.845549,0.599044,0.0374332,0.0370315,0.0309025,0.187166,0.187166,0.187166])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([1,0.241834,1,0.265437,0.0453254,0.273791,0.0432,0.266558,0.0453254,0.273791,0.00638546,0.253644,0.00638546,0.253644,1,0.241834,0.0218458,0.277189,0.00882642,0.29825,0.00882643,0.29825,0.0194747,0.270836,0.602603,1,0.488204,0.244453,1,0.600604,0.0398258,0.361561,0.504582,0.369319,0.504583,0.369319,0.14928,0.786372,0.491201,0.283223,0.305006,0.359166,0.211458,0.78544,0.353355,0.664829,0.488204,0.244453])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([100,100,51.6332,100,99.8449,51.6332,-2.35933,100,51.1094,-2.35933,99.8449,51.1094])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                                  rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                                  scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new PixelTexture({
                                                              USE : new SFString("_5")})),
                                                          textureTransform : new SFNode(
                                                            new TextureTransform({
                                                              USE : new SFString("_6")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          colorIndex : new MFInt32([1,2,0,0,1,-1]),
                                                          texCoordIndex : new MFInt32([0,1,2,3,4,-1]),
                                                          coordIndex : new MFInt32([0,1,2,3,4,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0,0,0,0.101604,0.101604,0.101604,0.0748663,0.0748663,0.0748663])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0.48857,0.266293,0.488204,0.244453,1,0.241834,1,0.279619,0.491201,0.283223])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-2.27593,100,46.9126,-2.35933,100,51.1094,100,100,51.6332,100,100,44.0763,-2.13327,100,43.5227])}))}))})])})])})])}),

                                        new Transform({
                                          DEF : new SFString("Boden-hinten"),
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          USE : new SFString("_6")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorIndex : new MFInt32([1,0,1,1,1,-1]),
                                                      texCoordIndex : new MFInt32([0,1,2,3,4,-1]),
                                                      coordIndex : new MFInt32([0,1,2,3,4,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.625668,0.61394,0.434957,0,0,0])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.372052,0.783032,0.345614,0.615889,1,0.62902,1,1,0.406913,1])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-43.4124,100,-56.4588,-42.9896,100.001,-23.0842,100,100,-25.804,100,100,-100,-43.4124,100,-100])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          USE : new SFString("_6")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorPerVertex : new SFBool(false),
                                                      colorIndex : new MFInt32([0,0]),
                                                      texCoordIndex : new MFInt32([0,1,2,3,-1,3,2,4,5,-1]),
                                                      coordIndex : new MFInt32([0,1,2,3,-1,3,2,4,5,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0,0,0])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.258734,1,0.135165,0.786584,0.135165,0.786584,0.258734,1,0.372052,0.783032,0.406913,1])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-79.2431,99.9129,-100,-98.259,99.9129,-57.0532,-98.259,100,-57.0532,-79.2431,100,-100,-43.4124,100,-56.4588,-43.4124,100,-100])}))}))})])})])}),

                                        new Transform({
                                          DEF : new SFString("Fussweg-daneben"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Bordsteinkante"),
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          USE : new SFString("_6")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorIndex : new MFInt32([1,1,0,0,0,-1,3,2,6,1,-1,1,1,0,0,-1,6,5,1,-1,1,1,5,0,-1,0,0,0,-1,1,1,5,-1,1,4,5,-1]),
                                                      texCoordIndex : new MFInt32([0,1,2,3,4,-1,5,14,6,9,-1,21,7,22,23,-1,6,8,9,-1,18,10,19,20,-1,8,12,13,-1,15,11,17,-1,11,16,17,-1]),
                                                      coordIndex : new MFInt32([0,1,2,3,4,-1,3,2,5,6,-1,1,7,5,2,-1,5,8,6,-1,7,9,8,5,-1,8,11,6,-1,9,10,8,-1,10,11,8,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.31016,0.31016,0.31016,0.0534759,0.0529021,0.0441464,0.0855615,0.0855615,0.0855615,0.112299,0.112299,0.112299,0.101604,0.101604,0.101604,0.320856,0.320856,0.320856,0.26738,0.26738,0.26738])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.135165,0.786584,0.0682273,0.613546,0.0682273,0.613546,0.0884909,0.665929,0.135165,0.786584,0.330789,53.37,0.232135,2.34619,0.189709,2.34628,0.311676,1.16848,0.661332,-0.0836522,0.280157,1.16674,0.661315,-0.0838385,0.624521,-0.362117,-0.403313,0.47786,-0.0152886,46.4513,0.311529,1.16844,0.661285,-0.0837721,0.311582,1.16843,0.203978,2.34641,0.311789,1.16833,0.232339,2.34616,-0.0558747,46.4515,0.232034,2.34611,-0.015282,46.4513])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-98.259,99.9129,-57.0532,-105.637,99.794,-22.2317,-105.637,99.8811,-22.2317,-103.404,99.9171,-32.773,-98.259,100,-57.0532,-103.851,100,44.9736,-101.248,100.001,48.6713,-103.851,99.794,44.9736,-103.378,99.9998,46.7698,-103.378,99.7938,46.7698,-101.248,99.7948,48.6713,-101.248,100.001,48.6713])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("Radweg"),
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          DEF : new SFString("_26"),
                                                          url : new MFString(["radw.png"])})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          scale : new SFVec2f([0.180536,0.244604])}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorIndex : new MFInt32([6,5,2,-1,2,5,4,-1,0,1,3,-1,1,1,3,-1]),
                                                      texCoordIndex : new MFInt32([0,1,2,-1,2,1,3,-1,4,5,7,-1,5,6,7,-1]),
                                                      coordIndex : new MFInt32([0,1,2,-1,2,1,3,-1,4,5,2,-1,5,6,2,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.176471,0.134004,0.134004,0.0374332,0.0370315,0.0309025,0.0534759,0.0529021,0.0441464,0.0802139,0.0609111,0.0609111,0.139037,0.119793,0.109297,0.112299,0.0852755,0.0852755,0.0641711,0.0487289,0.0487289])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([10.0011,338.383,0,261.773,10.8095,0.180358,4.11158,4.97633,4.11158,4.97633,4.11158,4.97633,10.8095,0.180358,10.8095,0.180358])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-98.259,100,-57.0532,-103.404,99.9171,-32.773,-97.8023,100.005,50.1913,-101.248,100.001,48.6713,-101.248,100.001,48.6713,-101.248,99.7948,48.6713,-97.8023,99.7987,50.1913])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          USE : new SFString("_6")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      colorIndex : new MFInt32([1,0,4,-1,6,7,0,-1,0,0,6,-1,2,11,1,-1,2,10,12,-1,8,12,9,-1,12,10,9,-1,5,8,9,-1,5,3,8,-1]),
                                                      texCoordIndex : new MFInt32([0,1,2,-1,6,3,4,-1,4,5,6,-1,9,10,8,-1,9,11,10,-1,12,10,13,-1,10,11,13,-1,3,12,13,-1,3,7,12,-1]),
                                                      coordIndex : new MFInt32([0,1,2,-1,3,4,5,-1,5,6,3,-1,9,11,8,-1,9,12,11,-1,13,11,14,-1,11,12,14,-1,10,13,14,-1,10,7,13,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.0374332,0.0370315,0.0309025,0,0,0,0.0855615,0.0855615,0.0855615,0.10165,0.106952,0.0930439,0.0588235,0.0588235,0.0588235,0.0534759,0.0529021,0.0441464,0.149733,0.149733,0.149733,0.026738,0.026451,0.0220732,0.31016,0.31016,0.31016,0.213904,0.213904,0.213904,0.101604,0.101604,0.101604,0.0695187,0.0695187,0.0695187,0.165775,0.165775,0.165775])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([27.966,-1.5122,27.9611,-1.00844,16.9512,-1.04102,0.273181,-0.535145,-0.00590858,-0.534903,-0.00906598,-1.06559,0.143738,-1.06683,0.143934,-1.0669,27.9616,-1.00858,28.2068,-0.533803,5.92019,-1.05479,5.98598,-0.534871,3.43034,-1.0644,3.4376,-0.53659])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-80.5941,99.9998,-56.862,-94.9903,99.9998,-57.018,-94.3571,100.001,-14.4313,-93.3903,100.003,50.6002,-97.8017,100.005,50.1911,-97.8017,99.7985,50.1911,-93.4396,99.7963,50.6573,-93.3903,100.003,50.6002,-94.9903,99.9998,-57.018,-98.2583,99.9998,-57.0534,-97.8017,100.005,50.1911,-93.7225,100.002,28.2536,-97.8951,100.004,28.2582,-93.6022,100.003,36.3429,-97.8933,100.004,36.3476])}))}))})])})])})])}),

                                    new Transform({
                                      DEF : new SFString("nw-frei"),
                                      children : new MFNode([
                                        new Transform({
                                          DEF : new SFString("Boden_3"),
                                          translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                          rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                          scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      DEF : new SFString("_27"),
                                                      ambientIntensity : new SFFloat(0),
                                                      diffuseColor : new SFColor([0.861702,0.845549,0.599044])})),
                                                  texture : new SFNode(
                                                    new PixelTexture({
                                                      USE : new SFString("_5")})),
                                                  textureTransform : new SFNode(
                                                    new TextureTransform({
                                                      DEF : new SFString("_28"),
                                                      scale : new SFVec2f([1.11677,1.8741])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,2,3,4,5,6,7,8,9,-1,10,11,3,2,-1,11,12,4,3,-1,12,13,5,4,-1,13,14,6,5,-1,14,15,7,6,-1,15,16,8,7,-1,16,17,9,8,-1,0,9,17,18,-1]),
                                                  coordIndex : new MFInt32([0,1,2,3,4,5,6,7,8,9,-1,10,11,3,2,-1,11,12,4,3,-1,12,13,5,4,-1,13,14,6,5,-1,14,15,7,6,-1,15,16,8,7,-1,16,17,9,8,-1,0,9,17,18,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,1,0,0.292661,0,0.294938,0,0.297,0,0.299994,0,0.30613,0,0.31636,0,0.327939,0,0.355078,0,0.292661,0,0.294938,0,0.297,0,0.299994,0,0.30613,0,0.31636,0,0.327939,0,0.355078,0,1])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-141.807,100,-100,-317.457,100,-100,-317.457,100,41.4677,-161.717,100,41.0124,-154.773,100,40.6,-150.479,100,40.0011,-146.778,100,38.774,-143.499,100,36.7279,-141.886,100,34.4122,-140.969,100,28.9843,-317.457,99.7675,41.4677,-161.717,99.7675,41.0124,-154.773,99.7675,40.6,-150.479,99.7675,40.0011,-146.778,99.7675,38.774,-143.499,99.7675,36.7279,-141.886,99.7675,34.4122,-140.969,99.7675,28.9843,-141.807,99.7675,-100])}))}))})])})])}),

                                    new Transform({
                                      DEF : new SFString("sw-Hbf"),
                                      children : new MFNode([
                                        new Transform({
                                          DEF : new SFString("Boden_4"),
                                          translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                          rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                          scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      USE : new SFString("_27")})),
                                                  texture : new SFNode(
                                                    new PixelTexture({
                                                      USE : new SFString("_5")})),
                                                  textureTransform : new SFNode(
                                                    new TextureTransform({
                                                      USE : new SFString("_28")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,4,5,6,7,8,9,-1,10,11,1,0,-1,12,13,5,4,-1,13,14,6,5,-1,14,15,7,6,-1,15,16,8,7,-1,16,17,9,8,-1,0,9,17,10,-1]),
                                                  coordIndex : new MFInt32([0,1,2,3,4,5,6,7,8,-1,9,10,1,0,-1,11,12,4,3,-1,12,13,5,4,-1,13,14,6,5,-1,14,15,7,6,-1,15,16,8,7,-1,0,8,16,9,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,0.222765,0,0.222765,0,0.205534,0,0,0,0,0,0.136951,0,0.157395,0,0.175085,0,0.193389,0,0.209811,0,0.222765,0,0.222765,0,0,0,0.136951,0,0.157395,0,0.175085,0,0.193389,0,0.209811])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-166.678,100,55.447,-317.457,100,55.447,-317.457,100,100,-141.257,100,100,-140.377,100,72.6097,-141.529,100,68.5211,-144.183,100,64.983,-148.788,100,61.3222,-156.182,100,58.0377,-166.678,99.8174,55.447,-317.457,99.8174,55.447,-141.257,99.8174,100,-140.377,99.8174,72.6097,-141.529,99.8174,68.5211,-144.183,99.8174,64.983,-148.788,99.8174,61.3222,-156.182,99.8174,58.0377])}))}))})])})])}),

                                    new Transform({
                                      DEF : new SFString("so-Karstadt"),
                                      children : new MFNode([
                                        new Transform({
                                          DEF : new SFString("Karstadt"),
                                          translation : new SFVec3f([0.310272,10.502,82.0907]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      DEF : new SFString("_29"),
                                                      emissiveColor : new SFColor([0.297872,0.297872,0.297872]),
                                                      transparency : new SFFloat(0.893617)}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  coordIndex : new MFInt32([4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,9,2,4,-1,8,1,7,5,3,-1,0,1,8,9,-1,11,10,12,13,-1,10,11,8,3,-1,12,10,3,2,-1,13,12,2,9,-1,11,13,9,8,-1,14,15,6,0,-1,0,9,16,14,-1,4,6,15,18,-1,2,4,18,17,-1,9,13,19,16,-1,20,19,13,12,-1,17,20,12,2,-1,21,22,15,14,-1,14,16,23,21,-1,16,19,24,23,-1,19,20,25,24,-1,26,25,20,17,-1,22,27,18,15,-1,17,18,27,26,-1,23,26,27,22,21,-1,23,24,25,26,-1]),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-19.6251,-6.56198,21.5775,-19.6251,-10.2334,21.5775,24.6369,-6.56198,21.5775,24.6369,-10.2334,21.5775,24.6369,-6.56198,-16.3158,24.6369,-10.2334,-16.3158,-19.6251,-6.56198,-16.3158,-19.6251,-10.2334,-16.3158,1.1225,-10.2334,21.5775,1.12249,-6.56198,21.5775,24.6369,-10.2334,37.8724,1.1225,-10.2334,37.8724,24.6369,-6.56198,37.8724,1.12249,-6.56198,37.8724,-23.6188,-6.56198,23.1067,-23.6188,-6.56198,-21.0416,0.553522,-6.56198,23.1067,27.9494,-6.56198,23.1067,27.9494,-6.56198,-21.0416,0.553522,-6.56198,42.0914,27.9494,-6.56198,42.0914,-23.6188,11.3655,23.1067,-23.6188,11.3655,-21.0416,0.553522,11.3655,23.1067,0.553522,11.3655,42.0914,27.9494,11.3655,42.0914,27.9494,11.3655,23.1067,27.9494,11.3655,-21.0416])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("Nachbar"),
                                          translation : new SFVec3f([87.8545,9.6092,87.9897]),
                                          rotation : new SFRotation([8.55479e-7,1,-0.00000100547,1.55909]),
                                          scaleOrientation : new SFRotation([0.00000159629,1,-0.00000233762,1.5708]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      USE : new SFString("_29")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,11,6,7,1,0,-1,10,2,3,5,4,-1,1,7,8,5,3,-1,4,5,8,9,-1,8,7,6,12,9,-1,13,11,0,2,10,-1,6,11,13,12,-1,13,10,4,9,12,-1,15,14,9,4,-1,9,14,16,12,-1,4,10,17,15,-1,18,19,17,15,-1,10,17,19,20,-1,2,10,20,21,-1,0,2,21,28,22,-1,22,23,11,0,-1,6,11,23,24,-1,24,25,12,6,-1,26,18,15,14,-1,14,16,27,26,-1,25,27,16,12,-1,28,21,20,29,-1,23,29,25,24,-1,23,22,28,29,-1,20,19,18,-1,26,27,25,-1,26,25,29,-1,20,18,29,-1,18,26,29,-1]),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-33.4855,-6.03555,37.7222,-33.4855,-10,37.7222,28.7073,-6.03555,37.7222,28.7073,-10,37.7222,28.7073,-6.03555,-29.5454,28.7073,-10,-29.5454,-33.4855,-6.03555,-29.9333,-33.4855,-10,-29.9333,26.0223,-10,-32.2908,26.0223,-6.03555,-32.2908,28.7073,-6.03555,12.4115,-33.4855,-6.03555,12.4115,-1.82497,-6.03555,-31.1875,-1.82497,-6.03555,12.4115,26.3491,-6.03555,-34.8398,31.9621,-6.03555,-29.1309,-1.89473,-6.03555,-34.1818,31.9621,-6.03555,12.4115,31.9622,11.4581,-29.1309,31.9622,11.4581,12.4115,28.7073,11.4581,12.4115,28.7073,11.4581,37.7222,-33.4855,11.4581,37.7222,-33.4855,11.4581,12.4115,-33.4855,11.4581,-29.9332,-1.82494,11.4581,-31.1875,26.3492,11.4581,-34.8398,-1.89469,11.4581,-34.1818,-1.82497,11.4581,37.7222,-1.82496,11.4581,12.4115])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("Baume_3"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("G1"),
                                              children : new MFNode([
                                                new Transform({
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([112.338,5.43178,50.5878]),
                                                      rotation : new SFRotation([0.000294178,1,-0.000398461,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000184298,0.0000240907,1,0.129812]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  DEF : new SFString("_30"),
                                                                  ambientIntensity : new SFFloat(0),
                                                                  diffuseColor : new SFColor([0,0,0]),
                                                                  emissiveColor : new SFColor([0.170213,0.170213,0.170213]),
                                                                  shininess : new SFFloat(0)})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([112.268,-7.44916,52.2917]),
                                                      rotation : new SFRotation([-0.14809,0.0101933,-0.988921,0.000690534]),
                                                      scale : new SFVec3f([0.794416,0.750687,0.595112]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  ambientIntensity : new SFFloat(0),
                                                                  diffuseColor : new SFColor([0,0,0]),
                                                                  transparency : new SFFloat(0.361702)})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  DEF : new SFString("_31"),
                                                                  url : new MFString(["glow01.png"])}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              creaseAngle : new SFFloat(0.5),
                                                              texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                              coordIndex : new MFInt32([0,1,2,3,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-10,10,-10,-10,10,10,10,10,10,10,10,-10])}))}))})])})])}),

                                                new Transform({
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([97.993,5.44172,50.6069]),
                                                      rotation : new SFRotation([0.000294188,1,-0.000398477,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000229087,0.0000229528,1,0.107399]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([97.2725,-6.68032,52.2917]),
                                                      rotation : new SFRotation([-0.14809,0.0101933,-0.988921,0.000690534]),
                                                      scale : new SFVec3f([0.794416,0.750687,0.595112]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  ambientIntensity : new SFFloat(0),
                                                                  diffuseColor : new SFColor([0,0,0]),
                                                                  transparency : new SFFloat(0.361702)})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_31")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              creaseAngle : new SFFloat(0.5),
                                                              texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                              coordIndex : new MFInt32([0,1,2,3,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-10,10,-10,-10,10,10,10,10,10,10,10,-10])}))}))})])})])}),

                                                new Transform({
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([65.2561,-6.65846,52.292]),
                                                      rotation : new SFRotation([-0.14809,0.0101933,-0.988921,0.000690534]),
                                                      scale : new SFVec3f([0.794416,0.750687,0.595112]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  ambientIntensity : new SFFloat(0),
                                                                  diffuseColor : new SFColor([0,0,0]),
                                                                  transparency : new SFFloat(0.361702)})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_31")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              creaseAngle : new SFFloat(0.5),
                                                              texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                              coordIndex : new MFInt32([0,1,2,3,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-10,10,-10,-10,10,10,10,10,10,10,10,-10])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([65.8614,5.46393,50.2181]),
                                                      rotation : new SFRotation([0.000294145,1,-0.00039827,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000148032,-0.0000130946,1,0.192012]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])})])}),

                                                new Transform({
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([81.7549,5.45295,50.4025]),
                                                      rotation : new SFRotation([0.000294101,1,-0.000398467,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000159666,3.36347e-10,1,0.163005]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([81.2679,-6.66939,52.2919]),
                                                      rotation : new SFRotation([-0.14809,0.0101933,-0.988921,0.000690534]),
                                                      scale : new SFVec3f([0.794416,0.750687,0.595112]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  ambientIntensity : new SFFloat(0),
                                                                  diffuseColor : new SFColor([0,0,0]),
                                                                  transparency : new SFFloat(0.361702)})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_31")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              creaseAngle : new SFFloat(0.5),
                                                              texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                              coordIndex : new MFInt32([0,1,2,3,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-10,10,-10,-10,10,10,10,10,10,10,10,-10])}))}))})])})])})])}),

                                            new Transform({
                                              DEF : new SFString("G2_2"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("Schatten"),
                                                  translation : new SFVec3f([39.7049,-10.6885,71.8534]),
                                                  rotation : new SFRotation([-0.14809,0.0101933,-0.988921,0.000690534]),
                                                  scale : new SFVec3f([1.22295,1.15563,1.42331]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              ambientIntensity : new SFFloat(0),
                                                              diffuseColor : new SFColor([0,0,0]),
                                                              transparency : new SFFloat(0.0106383)})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_31")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                          coordIndex : new MFInt32([0,1,2,3,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-10,10,-10,-10,10,10,10,10,10,10,10,-10])}))}))})])}),

                                                new Transform({
                                                  DEF : new SFString("G2"),
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([47.9437,5.47822,68.2891]),
                                                      rotation : new SFRotation([0.000294221,1,-0.000398359,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000169221,-0.0000382571,1,0.198009]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([43.0022,5.48168,68.571]),
                                                      rotation : new SFRotation([0.000294221,1,-0.000398276,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000202937,-0.0000485254,1,0.157413]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([38.0565,5.4851,68.6103]),
                                                      rotation : new SFRotation([0.000294274,1,-0.000398294,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000195815,-0.0000369195,1,0.155563]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([37.9254,5.48572,73.6498]),
                                                      rotation : new SFRotation([0.000294151,1,-0.000398389,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000227728,-0.000048326,1,0.132429]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([43.0388,5.48218,73.8546]),
                                                      rotation : new SFRotation([0.000294211,1,-0.000398351,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000227176,-0.000044115,1,0.130717]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([48.1651,5.47861,73.5516]),
                                                      rotation : new SFRotation([0.000294145,1,-0.000398368,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000211129,-0.0000327505,1,0.137273]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([48.0972,5.47918,78.6244]),
                                                      rotation : new SFRotation([0.000294198,1,-0.000398306,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000176723,-0.0000264467,1,0.168012]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([43.2379,5.48254,78.5826]),
                                                      rotation : new SFRotation([0.000294167,1,-0.000398375,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000175948,-0.0000230067,1,0.16561]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([38.1981,5.48602,78.6672]),
                                                      rotation : new SFRotation([0.000294041,1,-0.000398453,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000170515,-0.0000252675,1,0.175195]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_30")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])})])})])})])}),

                                        new Transform({
                                          DEF : new SFString("Boden_5"),
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      colorIndex : new MFInt32([0,0,0,-1,1,0,0,-1,1,1,0,-1,2,2,0,-1,2,0,0,-1]),
                                                      texCoordIndex : new MFInt32([2,0,1,-1,6,2,1,-1,6,3,2,-1,4,5,0,-1,5,1,0,-1]),
                                                      coordIndex : new MFInt32([2,0,1,-1,6,2,1,-1,6,3,2,-1,4,5,0,-1,5,1,0,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.345608,0.363636,0.31635,0,0,0,0.0374332,0.0370315,0.0309025])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([10.3319,-0.814358,10.2203,-0.00856964,8.29425,-0.980619,-0.001858,-0.973682,10.3319,-0.814358,10.2203,-0.00856964,0.000304028,-0.0000247146])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-93.7065,100,55.3407,-99.3811,100,55.831,-92.5235,100,64.1456,-92.5235,100,100,-93.7065,99.7546,55.3407,-99.3811,99.7546,55.831,-99.3811,100,100])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("Boden"),
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")})),
                                                      textureTransform : new SFNode(
                                                        new TextureTransform({
                                                          scale : new SFVec2f([1.11677,1.8741])}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      colorIndex : new MFInt32([2,2,2,2,-1,2,2,2,2,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,-1,0,0,0,0,-1,2,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,2,2,2,-1,0,0,0,-1,0,0,0,0,-1,3,2,2,2,3,-1,2,2,3,3,-1,0,0,0,0,-1,0,0,0,0,-1,2,3,3,2,-1,4,1,2,-1,4,1,1,-1,2,2,1,1,2,-1,2,2,1,1,-1]),
                                                      texCoordIndex : new MFInt32([31,34,37,36,-1,42,40,36,38,-1,44,17,17,44,-1,43,44,44,43,-1,41,43,43,41,-1,38,41,41,38,-1,38,0,0,38,-1,21,23,48,47,-1,22,25,49,48,-1,24,27,50,49,-1,8,19,52,51,-1,18,28,53,52,-1,26,29,53,50,-1,5,7,45,54,-1,4,8,51,54,-1,46,45,6,-1,20,47,46,9,-1,40,41,43,72,-1,43,44,72,-1,44,71,72,-1,31,35,39,72,78,75,-1,16,13,13,-1,34,16,16,34,-1,79,78,72,71,81,-1,86,87,84,85,-1,15,13,13,15,-1,17,17,15,15,-1,11,82,83,15,-1,13,11,15,-1,13,12,11,-1,33,30,2,12,14,-1,30,74,73,2,-1]),
                                                      coordIndex : new MFInt32([14,15,17,16,-1,19,18,16,17,-1,27,25,7,21,-1,28,27,21,20,-1,29,28,20,19,-1,30,29,19,17,-1,26,30,17,15,-1,9,10,34,33,-1,10,11,35,34,-1,11,12,36,35,-1,3,8,38,37,-1,8,13,39,38,-1,12,13,39,36,-1,1,2,31,40,-1,1,3,37,40,-1,32,31,2,-1,9,33,32,2,-1,18,19,20,42,-1,20,21,42,-1,21,41,42,-1,14,16,18,42,45,44,-1,22,23,6,-1,23,26,15,6,-1,46,45,42,41,47,-1,41,50,49,47,-1,24,22,6,50,-1,7,25,24,50,-1,4,48,49,50,-1,6,4,50,-1,6,5,4,-1,15,14,0,5,6,-1,14,44,43,0,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.8,0.8,0.8,0,0,0,0.345608,0.363636,0.31635,0.0374332,0.0370315,0.0309025,0.294784,0.31016,0.269828])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,0,1,0.260133,0.209633,0.245878,0.209633,0.245878,0.210143,0.265437,0.210143,0.265437,0.155836,0.246154,0.156348,0.265798,0,0.222765,1,0.222765,1,0.192481,0.202673,0.202889,0.202673,0.202889,0.204986,0.222765,0.155306,0.203507,0.155306,0.222765,0.0426829,0.246733,0.042683,0.246733,0.0937871,0.266218,0.0937872,0.266218,0.0784349,0.265155,0.0784349,0.265155,0.0626484,0.261044,0.0626484,0.261044,0.0495084,0.254605,0.0495084,0.254605,0.0427428,0.249026,0.0427428,0.249026,0.0373824,0.205046,0.0373824,0.205046,0.0373824,0.222765,0.0803633,0.204485,0.0803632,0.204485,0.0373824,0.214449,0.0373824,0.214449,0.0679103,0.207372,0.0679103,0.207372,0.0373824,0.219802,0.0373824,0.219802,0.0535029,0.213238,0.0535029,0.213238,0.0451798,0.219349,0.0432758,0.222765,0.210143,0.265437,0.156348,0.265798,0.0937871,0.266218,0.0784349,0.265155,0.0626484,0.261044,0.0495084,0.254605,0.155836,0.246154,0.042683,0.246733,0.0427428,0.249026,0.209633,0.245878,0,0.266848,0,0.246951,0,0.136951,0,0.29584,0,0.29584,0,0.301119,0,0.306671,0,0.315846,0,0.324379,0,0.334716,0,0.355078,0,0.263028,0,0.246776,0.003734,0.27122,0,0.246863,0.0405275,0.222765,0.0432758,0.222765,0.0373824,0.222765,0.0373825,0,0.0373824,0.179272,0.0373824,0.179272,0,0.179272,0,0.179272,0.0364562,0.222842,0.0364562,0.222842,0.0373824,0.222765,0.0432758,0.222765,1,0.222765,0.204986,0.222765,0.155306,0.222765,0.155306,0.222765,0.155306,0.222765,0.155306,0.222765])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([100,100,100,-58.0735,100,50.8243,-57.9715,100,46.9126,-68.8328,100,50.7693,100,100,55.447,100,100,61.5038,-59.4654,100,59.4223,-68.9387,100,55.447,-91.4634,100,50.6535,-81.2426,100,46.7563,-84.313,100,46.9689,-87.4703,100,47.7913,-90.0983,100,49.079,-91.4514,100,50.1948,-92.5235,100,58.9908,-83.9274,100,59.103,-92.5235,100,57.1102,-86.4179,100,58.5256,-92.5235,100,56.0396,-89.2994,100,57.3524,-90.964,100,56.1302,-91.3448,100,55.447,-59.4654,100,59.4223,-68.9387,100,59.2986,-59.0027,100,55.447,-68.9387,100,55.447,-83.9274,100,59.103,-91.3448,100,55.447,-90.964,100,56.1302,-89.2994,100,57.3524,-86.4179,100,58.5256,-57.9715,100,46.9126,-68.7303,100,46.8403,-81.2426,100,46.7563,-84.313,100,46.9689,-87.4703,100,47.7913,-90.0983,100,49.079,-68.8328,100,50.7693,-91.4634,100,50.6535,-91.4514,100,50.1948,-58.0735,100,50.8243,-91.3455,100,55.3464,-92.5242,100,55.3464,-92.5235,100,100,-92.5235,100,64.1456,-93.7065,100,55.3407,-93.7065,99.7546,55.3407,-91.3455,99.7546,55.3464,100,99.7546,55.447,-59.0027,99.7546,55.447,-59.0027,100,55.447])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_5")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      colorIndex : new MFInt32([0,2,2,-1,1,2,3,-1,1,1,2,-1,1,1,3,-1,2,0,2,-1,2,2,1,-1,2,1,1,-1,0,0,2,-1,1,3,0,-1,1,2,2,-1,1,1,4,-1,2,1,1,-1,2,1,0,-1]),
                                                      texCoordIndex : new MFInt32([0,1,2,-1,3,2,1,-1,3,4,2,-1,5,3,1,-1,6,0,2,-1,6,2,4,-1,6,4,7,-1,0,8,1,-1,5,1,8,-1,7,9,6,-1,7,10,9,-1,6,9,11,-1,6,11,0,-1]),
                                                      coordIndex : new MFInt32([0,1,2,-1,3,2,1,-1,3,4,2,-1,5,3,1,-1,6,0,2,-1,6,2,4,-1,6,4,7,-1,0,8,1,-1,5,1,8,-1,7,9,6,-1,7,10,9,-1,6,9,11,-1,6,11,0,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.0534759,0.0529021,0.0441464,0,0,0,0.320856,0.320856,0.320856,0.363636,0.363636,0.363636,0.106952,0.106952,0.106952])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.902729,42.5205,0.286019,48.2525,0.0112302,45.9389,0.286019,48.2525,0.0112302,45.9389,0.902729,50.2302,0.0000101241,42.5205,0.0000101241,42.5205,0.902729,50.2302,0.0000101241,0.00053369,0.0000101241,0.00053369,0.902729,0.00053369])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-104.954,100,64.0912,-107.977,100,59.2504,-109.324,100,61.2043,-107.977,99.7546,59.2504,-109.324,99.7546,61.2043,-104.954,99.7546,57.5802,-109.379,100,64.0912,-109.379,99.7546,64.0912,-104.954,100,57.5802,-109.379,100,100,-109.379,99.7546,100,-104.954,100,100])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                              rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                              scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_26")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      colorIndex : new MFInt32([0,1,4,-1,1,5,4,-1,3,2,7,-1,3,6,2,-1]),
                                                      texCoordIndex : new MFInt32([0,1,2,-1,1,3,2,-1,4,2,3,-1,4,5,2,-1]),
                                                      coordIndex : new MFInt32([0,1,2,-1,1,3,2,-1,4,2,3,-1,4,5,2,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.0641711,0.0487289,0.0487289,0.0374332,0.0284252,0.0284252,0.15508,0.117761,0.117761,0.0374332,0.0370315,0.0309025,0.139037,0.119793,0.109297,0.0534759,0.0529021,0.0441464,0,0,0,0.0802139,0.0609111,0.0609111])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([-0.0000655511,0.000218696,1.62981,0.000218696,-0.0000655511,30.0969,1.62981,31.338,1.62981,31.338,-0.0000655511,30.0969])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-104.954,100,100,-99.3811,100,100,-104.954,100,57.5802,-99.3811,100,55.831,-99.3811,99.7546,55.831,-104.954,99.7546,57.5802])}))}))})])})])})])}),

                                    new Transform({
                                      DEF : new SFString("Strassen"),
                                      children : new MFNode([
                                        new Transform({
                                          DEF : new SFString("rechts"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Strasse_1"),
                                              translation : new SFVec3f([98.368,-0.805411,97.1097]),
                                              rotation : new SFRotation([9.79907e-7,1,-5.77245e-7,1.57081]),
                                              scale : new SFVec3f([0.889425,0.889431,0.941241]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          DEF : new SFString("_32"),
                                                          image : new SFImage}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      colorIndex : new MFInt32([1,0,0,0,-1]),
                                                      texCoordIndex : new MFInt32([3,0,4,5,-1]),
                                                      coordIndex : new MFInt32([0,2,3,1,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([1,1,1,0,0,0])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.0341801,15.7057,0.00733985,22.3937,1.03323,22.3901,1.04765,15.6985,-0.0195004,29.0817,1.01881,29.0817])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([57.7725,0.766204,45.4139,58.51,0.765033,-127.13,65.4735,0.76669,45.4145,67.2895,0.765588,-127.129])}))}))})])})])}),

                                        new Transform({
                                          DEF : new SFString("oben"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Verkehrsinsel"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("Baume"),
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([-43.2884,6.27538,4.56799]),
                                                      rotation : new SFRotation([0.000294303,1,-0.000398326,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([0.00000626999,-0.00000368994,1,4.71239]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([-43.4843,6.27457,-4.55822]),
                                                      rotation : new SFRotation([0.000294015,1,-0.00039843,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.0000346837,0.000199921,1,0.0629966]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([-42.9494,6.27084,-36.8595]),
                                                      rotation : new SFRotation([0.000294143,1,-0.000398516,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([0.00000787024,-0.00000528523,1,4.71239]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([-45.3773,6.26454,-113.793]),
                                                      rotation : new SFRotation([0.000346263,1,-0.0000514474,3.14161]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  DEF : new SFString("_33"),
                                                                  ambientIntensity : new SFFloat(0),
                                                                  diffuseColor : new SFColor([0,0,0]),
                                                                  shininess : new SFFloat(0)})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([-45.2394,6.26361,-122.007]),
                                                      rotation : new SFRotation([0.000294161,1,-0.000398345,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([-0.000143651,0.000762387,-1,0.0188733]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_33")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([-43.9081,6.26188,-129.821]),
                                                      rotation : new SFRotation([0.0002948,1,-0.00039779,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([0.00000944091,-0.00000686115,1,4.71239]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_33")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])}),

                                                    new Transform({
                                                      translation : new SFVec3f([-42.3172,6.25995,-137.804]),
                                                      rotation : new SFRotation([0.000294563,1,-0.000398026,1.57081]),
                                                      scale : new SFVec3f([11.4227,11.4227,12.0882]),
                                                      scaleOrientation : new SFRotation([0.00000752979,-0.0000049554,1,4.71239]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              material : new SFNode(
                                                                new Material({
                                                                  USE : new SFString("_33")})),
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  USE : new SFString("_25")}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              solid : new SFBool(false),
                                                              texCoordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              coordIndex : new MFInt32([0,5,4,3,-1,5,1,2,4,-1,6,7,8,9,-1,7,10,11,8,-1]),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,1,0.5,0,0,0,0.5,0,0.5,1,0,1,1,0,1,1])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-0.5292,-0.5,0,0.5292,-0.5,0,0.5292,0.5,0,-0.5292,0.5,0,0,0.5,0,0,-0.5,0,-0.039446,-0.499999,-0.486809,-0.0506253,-0.499999,0.042273,-0.0506253,0.499999,0.042273,-0.039446,0.499999,-0.486809,-0.0618046,-0.499999,0.571355,-0.0618046,0.499999,0.571355])}))}))})])})])}),

                                                new Transform({
                                                  DEF : new SFString("Insel"),
                                                  translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                                  rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                                  scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new PixelTexture({
                                                              USE : new SFString("_5")})),
                                                          textureTransform : new SFNode(
                                                            new TextureTransform({
                                                              USE : new SFString("_28")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([1,1,0,0,-1,1,1,0,0,-1,0,0,1,1,-1,1,1,0,0,-1,0,0,1,1,-1,1,1,0,0,-1,1,1,0,0,-1,0,0,0,1,1,-1,1,1,0,0,-1,1,1,0,0,-1,1,1,0,0,-1,1,1,0,0,-1,1,1,0,0,-1,1,1,0,0,-1,1,1,0,0,-1,0,0,0,-1,0,0,0,-1,3,0,0,-1,3,0,3,-1,0,3,3,-1,0,3,3,-1,0,0,3,-1,4,0,3,-1,4,3,0,-1,4,3,3,-1,4,3,3,-1,3,3,3,-1,3,2,3,-1,2,2,3,-1]),
                                                          texCoordIndex : new MFInt32([15,16,13,12,-1,16,17,14,13,-1,7,14,17,18,-1,18,19,11,7,-1,0,11,19,20,-1,20,21,1,0,-1,21,22,9,1,-1,2,30,9,22,23,-1,23,24,3,2,-1,24,25,4,3,-1,25,26,5,4,-1,26,27,6,5,-1,27,28,8,6,-1,28,29,10,8,-1,29,15,12,10,-1,4,5,6,-1,3,4,6,-1,2,3,6,-1,2,6,8,-1,30,2,8,-1,30,8,10,-1,9,30,10,-1,12,9,10,-1,12,1,9,-1,12,0,1,-1,12,13,0,-1,13,11,0,-1,13,14,11,-1,14,7,11,-1]),
                                                          coordIndex : new MFInt32([15,16,13,12,-1,16,17,14,13,-1,0,14,17,18,-1,18,19,11,0,-1,1,11,19,20,-1,20,21,2,1,-1,21,22,9,2,-1,3,30,9,22,23,-1,23,24,4,3,-1,24,25,5,4,-1,25,26,6,5,-1,26,27,7,6,-1,27,28,8,7,-1,28,29,10,8,-1,29,15,12,10,-1,5,6,7,-1,4,5,7,-1,3,4,7,-1,3,7,8,-1,30,3,8,-1,30,8,10,-1,9,30,10,-1,12,9,10,-1,12,2,9,-1,12,1,2,-1,12,13,1,-1,13,11,1,-1,13,14,11,-1,14,0,11,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.345608,0.363636,0.31635,0.0508248,0.0534759,0.0465221,0.116897,0.122995,0.107001,0.177887,0.187166,0.162827,0.223629,0.235294,0.204697])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([1.14073,-0.443061,1.0302,-0.41748,0.464398,-0.420757,0.431393,-0.431752,0.414945,-0.446754,0.414793,-0.462768,0.453639,-0.496062,1.22723,-0.492765,0.693431,-0.496439,0.924114,-0.418097,0.845155,-0.444911,1.17652,-0.463619,1.03014,-0.455359,1.15,-0.497157,1.22283,-0.525358,1.03014,-0.455359,1.15,-0.497157,1.22283,-0.525358,1.22723,-0.492765,1.17652,-0.463619,1.14073,-0.443061,1.0302,-0.41748,0.924114,-0.418097,0.464398,-0.420757,0.431393,-0.431752,0.414945,-0.446754,0.414793,-0.462768,0.453639,-0.496062,0.693431,-0.496439,0.845155,-0.444911,0.771397,-0.418978])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-116.69,100,-62.8505,-122.258,100,-51.7934,-125.112,100,-37.7103,-124.644,100,34.2175,-123.403,100,38.4002,-121.715,100,40.4732,-119.916,100,40.4732,-116.183,100,35.4944,-116.183,100,5.00857,-125.024,100,-24.2243,-121.998,100,-14.2183,-119.955,100,-56.3679,-120.857,100,-37.7488,-116.183,100,-53.0371,-113.028,100,-62.3296,-120.857,99.7801,-37.7488,-116.183,99.7801,-53.0371,-113.028,99.7801,-62.3296,-116.69,99.7801,-62.8505,-119.955,99.7801,-56.3679,-122.258,99.7801,-51.7934,-125.112,99.7801,-37.7103,-125.024,99.7801,-24.2243,-124.644,99.7801,34.2175,-123.403,99.7801,38.4002,-121.715,99.7801,40.4732,-119.916,99.7801,40.4732,-116.183,99.7801,35.4944,-116.183,99.7801,5.00857,-121.998,99.7801,-14.2183,-124.898,100,-4.80994])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([-43.7613,-7.36864,0.0433874]),
                                                  rotation : new SFRotation([-0.14809,0.0101933,-0.988921,0.000690534]),
                                                  scale : new SFVec3f([0.381336,0.750687,1.29418]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              ambientIntensity : new SFFloat(0),
                                                              diffuseColor : new SFColor([0,0,0]),
                                                              transparency : new SFFloat(0.361702)})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_31")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                          coordIndex : new MFInt32([0,1,2,3,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-10,10,-10,-10,10,10,10,10,10,10,10,-10])}))}))})])})])}),

                                            new Transform({
                                              DEF : new SFString("Strasse_2"),
                                              translation : new SFVec3f([-104.012,-0.904556,-154.785]),
                                              rotation : new SFRotation([-0.0181135,0.992256,-0.12288,0.00556726]),
                                              scale : new SFVec3f([1.92062,0.889428,0.757834]),
                                              center : new SFVec3f([58.1383,0.766111,154.518]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_32")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([6,2,17,16,-1,14,20,15,16,17,-1,14,13,18,19,-1,18,11,15,19,-1]),
                                                      coordIndex : new MFInt32([1,0,6,5,-1,3,8,4,5,6,-1,3,2,7,8,-1,10,9,11,12,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([-0.0324836,21.3581,1.01443,27.0237,0,19.4097,0.0341801,15.7057,0.00733985,22.3937,1.04765,15.6985,2.04007,19.4096,0.00969525,6.38974,0.942104,12.7338,-0.0222289,12.7492,-0.0183238,6.37437,2.04007,0,1.01881,-0.000437761,0,0.00013326,0,7.49838,2.04007,7.48318,2.04007,12.5101,0,12.5104,1.02004,0.00006663,1.02004,7.49078,1.02004,7.49078])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([50,0.764426,-136.999,79.1962,0.766271,-136.997,50,0.766868,169.311,50,0.76585,41.6703,66.0559,0.766866,41.8905,69.56,0.766486,-33.5099,50,0.765251,-33.5099,58.1891,0.767385,169.312,58.028,0.766358,41.7804,66.3782,0.767902,169.313,60.8913,0.767556,169.312,66.0559,0.766866,41.8905,58.028,0.766358,41.7804])}))}))})])})])}),

                                        new Transform({
                                          DEF : new SFString("links"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Strasse"),
                                              translation : new SFVec3f([-223.131,-0.688999,118.206]),
                                              rotation : new SFRotation([0.000290125,1,-0.000392703,1.5708]),
                                              scale : new SFVec3f([1.45686,0.889429,0.898831]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new PixelTexture({
                                                          USE : new SFString("_32")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([7,5,1,3,-1]),
                                                      coordIndex : new MFInt32([3,2,0,1,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.00969525,6.38974,1.99067,9.73068,0.942104,12.7338,0,9.70662,-0.0183238,6.37437,1.99067,0,1.01881,-0.000437761,0,0.00013326])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([66.1628,0.766782,14.4589,50.0354,0.765764,14.4575,66.6178,0.767796,154.146,50,0.766747,154.144])}))}))})])})])}),

                                        new Transform({
                                          DEF : new SFString("unten"),
                                          translation : new SFVec3f([35.8471,-0.856317,211.011]),
                                          rotation : new SFRotation([0.000341415,1,-0.000051289,3.1416]),
                                          scale : new SFVec3f([1.45686,0.889428,0.898831]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new PixelTexture({
                                                      USE : new SFString("_32")})),
                                                  textureTransform : new SFNode(
                                                    new TextureTransform({
                                                      scale : new SFVec2f([1,0.377851])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorIndex : new MFInt32([1,0,0,0,-1,0,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1]),
                                                  texCoordIndex : new MFInt32([7,9,8,3,-1,9,5,1,8,-1,12,10,13,-1,12,11,10,-1,5,9,13,-1,9,12,13,-1]),
                                                  coordIndex : new MFInt32([4,5,6,7,-1,3,1,0,2,-1,10,8,11,-1,10,9,8,-1,1,3,11,-1,3,10,11,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([1,1,1,0,0,0])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.00969525,6.38974,1.99067,9.73068,0.942104,12.7338,0,9.70662,-0.0183238,6.37437,1.99067,0,1.01881,-0.000437761,0,0.00013326,0.995335,9.71865,0.995335,0.00006663,1.99067,0,0.995335,0.00006663,0.995335,0.00006663,1.99067,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([67.1835,0.767472,103.138,66.6178,0.767796,154.146,57.7305,0.766875,103.137,57.4699,0.767218,154.145,48.2216,0.766773,173.805,57.3695,0.767351,173.806,57.7305,0.766875,103.137,48.2774,0.766278,103.137,71.2136,0.768218,172.848,57.3744,0.767344,172.846,57.4221,0.767281,163.496,67.9035,0.767943,163.497])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("Kreuzung"),
                                          translation : new SFVec3f([-6.80991,-0.589986,-15.5104]),
                                          rotation : new SFRotation([0,-1,0,1.5708]),
                                          scale : new SFVec3f([0.895449,0.606993,1.67872]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new PixelTexture({
                                                      image : new SFImage}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorIndex : new MFInt32([1,0,0,-1,0,0,0,-1,0,0,0,0,-1,0,0,0,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,-1,0,0,0,-1]),
                                                  texCoordIndex : new MFInt32([3,4,5,-1,3,5,6,-1,15,14,8,9,-1,17,19,24,20,18,14,15,-1,19,12,16,23,-1,16,13,20,23,-1,21,28,27,22,-1,28,25,27,-1,28,26,25,-1]),
                                                  coordIndex : new MFInt32([2,3,4,-1,5,6,7,-1,11,10,0,1,-1,13,15,19,16,14,10,11,-1,15,8,12,19,-1,12,9,16,19,-1,17,23,22,18,-1,23,20,22,-1,23,21,20,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([1,1,1,0.0374332,0.0370315,0.0309025])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.991972,0.32107,0.00264328,0.318615,0.991974,0.320438,0.999071,0.74924,0.807591,0.997117,0.151669,0.999841,0.000148984,0.741919,0.00266772,0.322704,0.0000564302,0.741919,0,0.000480892,0.453432,0.745241,0.4529,0.000263096,0.923529,0.0000367743,0.907112,0.748566,0.453584,0.745243,0.461765,0.000258833,0.91649,0.320966,0.832888,0.0000803627,0.817157,0.747907,0.862908,0.0000659264,0.847525,0.748129,1,0.257164,0,0.257174,0.856633,0.30524,0.856633,0.30524,0.000152931,0.628489,0.99993,0.62845,0.0000715842,0.430981,0.999965,0.442807])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([29.1877,0.76703,14.2499,29.1891,0.767029,24.7635,71.9768,0.765868,13.6068,67,0.766527,8.6,50,0.765454,8.59853,71.9768,0.765868,13.6068,50,0.765454,8.59853,45.9987,0.766474,14.2619,80.1172,0.766221,32.112,79.4275,0.765827,16.7132,57.8135,0.766297,13.8928,58.3647,0.766609,31.375,79.7572,0.766022,24.2337,68.1628,0.766436,31.7192,67.1296,0.766005,13.5465,72.122,0.766365,31.8493,71.2246,0.765916,13.4537,71.8839,0.766856,47.317,37.0847,0.767081,47.3136,71.7559,0.766182,24.3448,28.3705,0.82625,24.3186,80.043,0.766497,30.7706,28.5775,0.826339,36.2581,81.936,0.825833,35.0809])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("Unterfuehrung"),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("U-Bahnmast"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("Mast"),
                                                  translation : new SFVec3f([8.73594,2.08275,30.7109]),
                                                  rotation : new SFRotation([-0.00732139,0.999971,0.00207478,1.57083]),
                                                  scale : new SFVec3f([0.0125,0.2,0.0125]),
                                                  scaleOrientation : new SFRotation([-3.41954e-9,-1,-9.97412e-10,0.146758]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([6,6,6,1,-1,1,6,5,1,-1,1,5,4,1,-1,8,4,3,1,-1,1,3,2,1,-1,1,2,1,1,-1,1,1,0,1,-1,1,0,0,0,-1,9,0,2,9,-1,9,2,2,9,-1,1,7,7,1,-1,1,7,7,1,-1,1,7,7,1,-1,1,7,6,6,-1,0,0,0,-1,0,0,1,-1,0,1,1,-1,0,1,1,-1,0,1,1,-1,0,1,1,-1,0,1,0,-1,0,0,0,-1,0,0,1,-1,0,1,1,-1,0,1,1,-1,0,1,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,7,1,1,-1,4,4,8,1,-1]),
                                                          coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,23,25,24,22,-1,7,9,8,6,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.187166,0.187166,0.187166,0.26738,0.26738,0.26738,0.299465,0.299465,0.299465,0.406417,0.406417,0.406417,0.486631,0.486631,0.486631,0.545455,0.545455,0.545455,0.529412,0.529412,0.529412,0.379679,0.379679,0.379679,0.315508,0.315508,0.315508,0.122995,0.122995,0.122995])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([0,-10,-10,0,10,-10,3.82683,-10,-9.2388,3.82683,10,-9.2388,7.07107,-10,-7.07107,7.07107,10,-7.07107,9.2388,-10,-3.82683,9.2388,10,-3.82683,10,-10,4.37114e-7,10,10,4.37114e-7,9.2388,-10,3.82684,9.2388,10,3.82684,7.07107,-10,7.07107,7.07107,10,7.07107,3.82683,-10,9.2388,3.82683,10,9.2388,0.00000150996,-10,10,0.00000150996,10,10,-3.82683,-10,9.2388,-3.82683,10,9.2388,-7.07107,-10,7.07107,-7.07107,10,7.07107,-9.2388,-10,3.82684,-9.2388,10,3.82684,-10,-10,-1.19249e-7,-10,10,-1.19249e-7,-9.23879,-10,-3.82684,-9.23879,10,-3.82684,-7.07107,-10,-7.07107,-7.07107,10,-7.07107,-3.82683,-10,-9.2388,-3.82683,10,-9.2388,0,10,0])}))}))})])}),

                                                new Transform({
                                                  DEF : new SFString("Hauptbahnhof"),
                                                  translation : new SFVec3f([8.77664,2.07415,30.6864]),
                                                  rotation : new SFRotation([-0.00732139,0.999971,0.00207478,1.57083]),
                                                  scale : new SFVec3f([0.0125,0.2,0.0125]),
                                                  scaleOrientation : new SFRotation([-4.2951e-10,1,-2.03553e-10,0.466814]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["hbf.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,1,-1]),
                                                          texCoordIndex : new MFInt32([8,9,10,11,-1,1,2,6,5,-1,16,17,18,19,-1,4,7,3,0,-1,12,13,14,15,-1]),
                                                          coordIndex : new MFInt32([3,2,1,0,-1,1,2,6,5,-1,2,3,7,6,-1,4,7,3,0,-1,5,6,7,4,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.8,0.8,0.8,0.379679,0.379679,0.379679])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0.25,1,0.00976618,0.000182322,-0.0000730046,0.000182322,0.25,1,0.25,1,0.00976618,0.0134173,-0.0000730046,0.0134173,0.25,1,0,0.999764,0,0,1,0,0.999929,0.999764,0.00000384753,0.0000186056,0.999991,0.0000233063,0.999937,0.999782,0.0000258904,0.999873,-0.0000730824,0.000189037,-0.0000730824,0.0094583,0.00871119,0.0094583,0.00871119,0.000189037])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-10,10,-1.19249e-7,-10,8.25817,-1.19249e-7,-131.182,8.25817,-0.00000156433,-131.182,10,-0.00000156433,-10,10,-7.6326,-10,8.25817,-7.6326,-131.182,8.25817,-7.6326,-131.182,10,-7.6326])}))}))})])}),

                                                new Transform({
                                                  DEF : new SFString("U"),
                                                  translation : new SFVec3f([8.73594,2.08275,30.7109]),
                                                  rotation : new SFRotation([-0.00732139,0.999971,0.00207478,1.57083]),
                                                  scale : new SFVec3f([0.0125,0.2,0.0125]),
                                                  scaleOrientation : new SFRotation([-1.19585e-8,-1,-7.15774e-9,0.0490389]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["u-bahn.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          creaseAngle : new SFFloat(0.5),
                                                          texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                          coordIndex : new MFInt32([0,1,2,3,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0.999797,0,0,1,0,1.01526,0.999797])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([10,10,4.37114e-7,10,6.37529,4.37114e-7,53.302,6.37529,0.00000232991,53.302,10,0.00000232991])}))}))})])})])}),

                                            new Transform({
                                              DEF : new SFString("Gelaender"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("g1"),
                                                  translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                                  rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                                  scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              DEF : new SFString("_34"),
                                                              url : new MFString(["gelaender.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([0,0,2,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,1,5,1,-1,0,0,0,0,-1,0,0,3,4,-1]),
                                                          texCoordIndex : new MFInt32([0,1,2,3,-1,4,0,3,5,-1,6,4,5,7,-1,8,6,7,9,-1,10,1,2,11,-1,15,14,8,9,-1,12,13,11,10,-1]),
                                                          coordIndex : new MFInt32([0,1,2,3,-1,4,0,3,5,-1,6,4,5,7,-1,8,6,7,9,-1,10,1,2,11,-1,15,14,8,9,-1,12,13,11,10,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([1,1,1,0.176471,0.157243,0.14816,0.326203,0.290662,0.273871,0.828877,0.828877,0.828877,0.491979,0.491979,0.491979,0.807487,0.807487,0.807487])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([-3.36611,-0.00477684,-4.64584,-0.00290674,-4.6457,0.996951,-3.36598,0.99508,-1.95915,-0.00424379,-1.95902,0.995614,-0.471347,-0.00245309,-0.47121,0.997404,1,0,0.999902,0.999841,-4.98386,-0.00290674,-4.98372,0.996951,-15.9695,-0.0114505,-15.9694,0.988407,11.9861,-0.0208033,11.9862,0.979054])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-90.0983,100,49.079,-91.4514,100,50.1948,-91.4514,100.867,50.1948,-90.0983,100.867,49.079,-87.4703,100,47.7913,-87.4703,100.867,47.7913,-84.313,100,46.9689,-84.313,100.867,46.9689,-81.2426,100,46.7563,-81.2426,100.867,46.7563,-91.4634,100,50.6535,-91.4634,100.867,50.6535,-58.0735,100,50.8243,-58.0735,100.867,50.8243,-57.9715,100,46.9126,-57.9715,100.867,46.9126])}))}))})])}),

                                                new Transform({
                                                  DEF : new SFString("g2"),
                                                  translation : new SFVec3f([56.9926,-154.399,-46.6292]),
                                                  rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                                  scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              USE : new SFString("_34")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([0,0,1,1,-1,0,0,1,1,-1,0,0,1,1,-1,0,2,0,1,-1,0,1,2,0,-1,2,0,0,2,-1]),
                                                          texCoordIndex : new MFInt32([0,3,2,1,-1,3,5,4,2,-1,5,7,6,4,-1,7,9,8,6,-1,14,15,12,13,-1,9,8,11,10,-1]),
                                                          coordIndex : new MFInt32([0,2,3,1,-1,2,4,5,3,-1,4,6,7,5,-1,6,8,9,7,-1,0,1,13,12,-1,8,9,11,10,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.68984,0.68984,0.68984,0.385027,0.372078,0.335612,0.481283,0.481283,0.481283])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0.998519,0,0.998519,0.997025,0.00153297,0.9996,0.00520235,0.00373524,-1.4733,0.994897,-1.4733,-0.00212836,-3.24349,0.994897,-3.24349,-0.00212836,-3.99534,0.994896,-3.99534,-0.00212833,-16,-0.0317647,-16,0.96526,10.9931,0.999283,10.9931,0.00250354,1,0,0.997914,0.99678])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-83.9274,100,59.103,-83.9274,100.867,59.103,-86.4179,100,58.5256,-86.4179,100.867,58.5256,-89.2994,100,57.3524,-89.2994,100.867,57.3524,-90.964,100,56.1302,-90.964,100.867,56.1302,-91.4006,100,55.3469,-91.4006,100.867,55.3469,-59.0027,100,55.447,-59.0027,100.867,55.447,-59.4654,100,59.4223,-59.4654,100.867,59.4223])}))}))})])})])}),

                                            new Transform({
                                              DEF : new SFString("Block"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("b1"),
                                                  translation : new SFVec3f([0.35634,0,1.3928]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      DEF : new SFString("xform_3"),
                                                      translation : new SFVec3f([-21.0699,1.13443,35.6457]),
                                                      rotation : new SFRotation([-0.707102,0.000280454,0.707111,3.14118]),
                                                      scale : new SFVec3f([0.0137879,0.0466159,0.046873]),
                                                      children : new MFNode([
                                                        new Shape({
                                                          appearance : new SFNode(
                                                            new Appearance({
                                                              texture : new SFNode(
                                                                new ImageTexture({
                                                                  url : new MFString(["beton.png"])})),
                                                              textureTransform : new SFNode(
                                                                new TextureTransform({
                                                                  scale : new SFVec2f([3.278,-1])}))})),
                                                          geometry : new SFNode(
                                                            new IndexedFaceSet({
                                                              creaseAngle : new SFFloat(0.5),
                                                              colorIndex : new MFInt32([0,0,0,0,-1,8,0,7,0,-1,0,9,9,0,-1,3,6,0,8,-1,5,0,0,0,-1,0,0,1,2,-1,0,4,4,5,-1,0,0,0,0,-1,0,0,0,0,-1,0,9,9,0,-1]),
                                                              texCoordIndex : new MFInt32([0,1,3,2,-1,0,7,5,2,-1,7,1,3,5,-1,0,8,6,2,-1,8,1,3,6,-1,0,11,9,2,-1,11,1,3,9,-1,0,4,10,2,-1,4,1,3,10,-1,0,1,3,2,-1]),
                                                              coordIndex : new MFInt32([6,0,2,4,-1,2,9,8,4,-1,9,3,5,8,-1,0,10,9,2,-1,10,1,3,9,-1,6,11,10,0,-1,11,7,1,10,-1,4,8,11,6,-1,8,5,7,11,-1,1,7,5,3,-1]),
                                                              color : new SFNode(
                                                                new Color({
                                                                  color : new MFColor([0.347594,0.347594,0.347594,0.438503,0.390726,0.368155,0.213904,0.213904,0.213904,0.561497,0.561497,0.561497,0.363636,0.324017,0.305299,0.363636,0.277794,0.237239,0.28877,0.220601,0.188395,0.673797,0.600384,0.565701,0.176471,0.157243,0.14816,0.326203,0.290662,0.273871])})),
                                                              texCoord : new SFNode(
                                                                new TextureCoordinate({
                                                                  point : new MFVec2f([0,1,0,0,1,1,1,0,0,0.124483,1,0.124483,1,0.12448,0,0.12448,0,0.12448,1,0.12448,1,0.124478,0,0.124478])})),
                                                              coord : new SFNode(
                                                                new Coordinate({
                                                                  point : new MFVec3f([-18.6201,22.1096,18.6201,-15.7286,-4.42834,17.8292,18.6201,22.1096,18.6201,16.0708,-4.42834,17.8292,18.6201,22.1096,-18.6201,16.0708,-4.42834,-17.6855,-18.6201,22.1096,-18.6201,-15.7286,-4.42834,-17.6855,18.6201,-1.12482,-18.6201,18.6201,-1.1249,18.6201,-18.6201,-1.1249,18.6201,-18.6201,-1.12496,-18.6201])}))}))})])})])}),

                                                new Transform({
                                                  DEF : new SFString("b2"),
                                                  translation : new SFVec3f([30.3041,0,1.81553]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      USE : new SFString("xform_3")})])}),

                                                new Transform({
                                                  DEF : new SFString("b3"),
                                                  translation : new SFVec3f([0.429882,0,9.73926]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      USE : new SFString("xform_3")})])}),

                                                new Transform({
                                                  DEF : new SFString("b4"),
                                                  translation : new SFVec3f([29.475,0,9.70662]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      USE : new SFString("xform_3")})])})])}),

                                            new Transform({
                                              DEF : new SFString("Treppen"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("xform2"),
                                                  translation : new SFVec3f([56.9524,-154.399,-46.6094]),
                                                  rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                                  scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new PixelTexture({
                                                              USE : new SFString("_5")})),
                                                          textureTransform : new SFNode(
                                                            new TextureTransform({
                                                              DEF : new SFString("_35"),
                                                              scale : new SFVec2f([1.11677,1.8741])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([10,11,9,-1,3,1,2,-1,5,3,1,-1,5,1,3,-1,6,7,8,-1,6,4,7,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,21,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,21,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,14,20,-1,14,15,0,-1,15,19,21,-1,17,20,0,-1,17,13,20,-1,14,15,21,-1,15,19,21,-1,22,18,20,-1,18,13,20,-1,14,15,0,-1,15,19,21,-1,12,10,16,-1,10,9,16,-1,1,16,1,-1,5,1,1,-1,7,4,1,-1,4,1,1,-1]),
                                                          texCoordIndex : new MFInt32([73,71,6,-1,0,0,70,-1,4,0,5,-1,4,0,0,-1,0,77,2,-1,0,78,77,-1,23,38,22,-1,23,39,38,-1,39,1,38,-1,1,3,38,-1,15,40,14,-1,15,41,40,-1,41,23,40,-1,23,22,40,-1,25,42,24,-1,25,43,42,-1,43,15,42,-1,15,14,42,-1,11,44,10,-1,11,45,44,-1,45,25,44,-1,25,24,44,-1,27,46,26,-1,27,47,46,-1,47,11,46,-1,11,10,46,-1,17,48,16,-1,17,49,48,-1,49,27,48,-1,27,26,48,-1,29,50,28,-1,29,51,50,-1,51,17,50,-1,17,16,50,-1,8,52,9,-1,8,53,52,-1,53,29,52,-1,29,28,52,-1,31,54,30,-1,31,55,54,-1,55,8,54,-1,8,9,54,-1,19,56,18,-1,19,57,56,-1,57,31,56,-1,31,30,56,-1,33,58,32,-1,33,59,58,-1,59,19,58,-1,19,18,58,-1,12,60,13,-1,12,61,60,-1,61,33,60,-1,33,32,60,-1,35,62,34,-1,35,63,62,-1,63,12,62,-1,12,13,62,-1,20,64,21,-1,20,65,64,-1,65,35,64,-1,35,34,64,-1,36,66,37,-1,36,67,66,-1,67,20,66,-1,20,21,66,-1,3,1,69,-1,1,68,69,-1,68,36,69,-1,36,37,69,-1,72,73,7,-1,73,6,7,-1,72,7,74,-1,4,5,76,-1,77,78,79,-1,78,75,79,-1]),
                                                          coordIndex : new MFInt32([9,10,7,-1,2,3,1,-1,5,2,6,-1,5,3,2,-1,3,0,7,-1,3,5,0,-1,26,41,25,-1,26,42,41,-1,42,3,41,-1,3,7,41,-1,18,43,17,-1,18,44,43,-1,44,26,43,-1,26,25,43,-1,28,45,27,-1,28,46,45,-1,46,18,45,-1,18,17,45,-1,14,47,13,-1,14,48,47,-1,48,28,47,-1,28,27,47,-1,30,49,29,-1,30,50,49,-1,50,14,49,-1,14,13,49,-1,20,51,19,-1,20,52,51,-1,52,30,51,-1,30,29,51,-1,32,53,31,-1,32,54,53,-1,54,20,53,-1,20,19,53,-1,11,55,12,-1,11,56,55,-1,56,32,55,-1,32,31,55,-1,34,57,33,-1,34,58,57,-1,58,11,57,-1,11,12,57,-1,22,59,21,-1,22,60,59,-1,60,34,59,-1,34,33,59,-1,36,61,35,-1,36,62,61,-1,62,22,61,-1,22,21,61,-1,15,63,16,-1,15,64,63,-1,64,36,63,-1,36,35,63,-1,38,65,37,-1,38,66,65,-1,66,15,65,-1,15,16,65,-1,23,67,24,-1,23,68,67,-1,68,38,67,-1,38,37,67,-1,39,69,40,-1,39,70,69,-1,70,23,69,-1,23,24,69,-1,4,1,72,-1,1,71,72,-1,71,39,72,-1,39,40,72,-1,8,9,0,-1,9,7,0,-1,8,0,73,-1,5,6,74,-1,0,5,73,-1,5,74,73,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.743316,0.688113,0.532643,0,0,0,0.101604,0.0960518,0.080414,0.262032,0.250568,0.23681,0.224599,0.221323,0.217392,0.497326,0.473633,0.406903,0.0481283,0.0474265,0.0465842,0.347594,0.328598,0.275101,0.764706,0.719701,0.592954,0.406417,0.375612,0.353568,0.534759,0.495045,0.383196,0.304813,0.288155,0.241242,0.0641711,0.0594054,0.0459835,0.181818,0.181818,0.181818,0.235294,0.226392,0.201321,0.0374332,0.0360169,0.0320284,0.700535,0.648509,0.501987,0.0802139,0.0790442,0.0776403,0.0320856,0.0316177,0.0310561,0.502674,0.465342,0.360205,0.673797,0.636975,0.533271,0.764706,0.707915,0.547971,0.235294,0.21782,0.168606])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0.0328459,0.0215143,0.204986,0.222765,-0.00634436,-0.013945,0.202673,0.202889,0.0831192,0.0703752,0.0553668,0.0907291,0.15373,0,0,0,0.204986,0.222765,0.202673,0.202889,0.202673,0.202889,0.204986,0.222765,0.204986,0.222765,0.202673,0.202889,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.204986,0.222765,0.202673,0.202889,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.204986,0.222765,0.202673,0.202889,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.202673,0.202889,0.204986,0.222765,0.204986,0.222765,0.202673,0.202889,0.0198132,0.0189256,0.192445,0.0119299,0,0.0119299,0.15373,0.0119299,0,0,0.00906693,0.0136737,0.165309,-0.00404382,-0.00976909,0.0289796,0.0468531,0.0143539,0.00910012,0.0136878])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-91.1857,97.9969,58.9143,-59.0027,100,55.447,-68.9387,100,55.447,-68.9387,97.9969,55.447,-59.4654,100,59.4223,-91.1857,97.9969,55.3902,-91.1857,100,55.3902,-68.9387,97.9969,59.2986,-91.1857,100,58.9143,-68.9387,100,59.2986,-59.4654,100,59.4223,-63.9707,98.9984,55.447,-64.202,98.9984,59.3605,-66.5704,98.4977,59.3295,-66.4547,98.4977,55.447,-61.4867,99.4992,55.447,-61.8337,99.4992,59.3914,-67.7545,98.2473,59.3141,-67.6967,98.2473,55.447,-65.3862,98.7481,59.345,-65.2127,98.7481,55.447,-63.0179,99.2488,59.3759,-62.7287,99.2488,55.447,-60.2447,99.7496,55.447,-60.6496,99.7496,59.4068,-68.3466,98.1221,59.3063,-68.3177,98.1221,55.447,-67.1625,98.3725,59.3218,-67.0757,98.3725,55.447,-65.9783,98.6229,59.3373,-65.8337,98.6229,55.447,-64.7941,98.8732,59.3527,-64.5917,98.8732,55.447,-63.61,99.1236,59.3682,-63.3497,99.1236,55.447,-62.4258,99.374,59.3836,-62.1077,99.374,55.447,-61.2416,99.6244,59.3991,-60.8657,99.6244,55.447,-59.6237,99.8748,55.447,-60.0575,99.8748,59.4146,-68.9316,98.1214,59.2992,-68.9171,98.1214,55.4437,-68.3395,98.2466,59.3069,-68.2961,98.2466,55.4437,-67.7474,98.3718,59.3147,-67.6751,98.3718,55.4437,-67.1553,98.4969,59.3224,-67.0541,98.4969,55.4437,-66.5633,98.6221,59.3301,-66.4331,98.6221,55.4437,-65.9712,98.7473,59.3379,-65.8121,98.7473,55.4437,-65.3791,98.8725,59.3456,-65.1911,98.8725,55.4437,-64.787,98.9977,59.3533,-64.5701,98.9977,55.4437,-64.195,99.1229,59.3611,-63.9491,99.1229,55.4437,-63.6029,99.2481,59.3688,-63.3281,99.2481,55.4437,-63.0108,99.3733,59.3765,-62.7071,99.3733,55.4437,-62.4187,99.4985,59.3843,-62.0861,99.4985,55.4437,-61.8266,99.6237,59.392,-61.4651,99.6237,55.4437,-61.2345,99.7489,59.3997,-60.8441,99.7489,55.4437,-60.6425,99.8741,59.4075,-60.2231,99.8741,55.4437,-59.6021,99.9993,55.4437,-60.0504,99.9993,59.4152,-96.727,97.9969,58.8185,-96.727,97.9969,55.2944])}))}))})])}),

                                                new Transform({
                                                  DEF : new SFString("xform1"),
                                                  translation : new SFVec3f([56.9918,-154.399,-46.6293]),
                                                  rotation : new SFRotation([-0.148547,0.0115656,-0.988838,0.000690534]),
                                                  scale : new SFVec3f([0.840559,1.54441,1.65644]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          texture : new SFNode(
                                                            new PixelTexture({
                                                              USE : new SFString("_5")})),
                                                          textureTransform : new SFNode(
                                                            new TextureTransform({
                                                              USE : new SFString("_35")}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([13,21,12,-1,8,9,10,-1,0,2,3,-1,2,2,3,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,19,20,3,-1,20,17,3,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,19,20,3,-1,20,17,3,-1,19,20,3,-1,20,17,3,-1,19,20,3,-1,20,17,3,-1,17,7,1,-1,17,6,7,-1,18,14,15,-1,18,4,14,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,18,14,15,-1,18,4,14,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,13,5,21,-1,5,22,21,-1,9,8,16,-1,8,11,16,-1,18,14,15,-1,18,4,14,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,18,14,15,-1,18,4,14,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,18,14,15,-1,18,4,14,-1,18,14,15,-1,18,4,14,-1,19,20,3,-1,20,17,3,-1,11,5,11,-1,16,11,11,-1,6,11,7,-1,6,11,11,-1]),
                                                          texCoordIndex : new MFInt32([56,56,57,-1,36,36,58,-1,0,1,3,-1,1,2,3,-1,4,3,5,-1,4,0,3,-1,6,4,7,-1,4,5,7,-1,8,7,9,-1,8,6,7,-1,10,8,11,-1,8,9,11,-1,12,11,13,-1,12,10,11,-1,14,12,15,-1,12,13,15,-1,16,17,19,-1,17,18,19,-1,20,19,21,-1,20,16,19,-1,22,20,23,-1,20,21,23,-1,24,25,27,-1,25,26,27,-1,28,29,31,-1,29,30,31,-1,32,33,35,-1,33,34,35,-1,36,38,39,-1,36,37,38,-1,1,35,2,-1,1,32,35,-1,40,31,41,-1,40,28,31,-1,42,40,43,-1,40,41,43,-1,25,45,26,-1,25,44,45,-1,44,46,45,-1,46,47,45,-1,46,49,47,-1,46,48,49,-1,48,50,49,-1,50,51,49,-1,52,27,53,-1,52,24,27,-1,29,55,30,-1,29,54,55,-1,54,52,55,-1,52,53,55,-1,56,39,56,-1,39,39,56,-1,36,36,37,-1,36,37,37,-1,59,23,60,-1,59,22,23,-1,50,62,51,-1,50,61,62,-1,61,59,62,-1,59,60,62,-1,63,15,64,-1,63,14,15,-1,17,66,18,-1,17,65,66,-1,65,63,66,-1,63,64,66,-1,67,43,68,-1,67,42,43,-1,33,70,34,-1,33,69,70,-1,69,67,70,-1,67,68,70,-1,39,39,72,-1,37,37,73,-1,37,72,38,-1,37,71,72,-1]),
                                                          coordIndex : new MFInt32([39,56,1,-1,58,36,2,-1,0,1,3,-1,1,2,3,-1,4,3,5,-1,4,0,3,-1,6,4,7,-1,4,5,7,-1,8,7,9,-1,8,6,7,-1,10,8,11,-1,8,9,11,-1,12,11,13,-1,12,10,11,-1,14,12,15,-1,12,13,15,-1,16,17,19,-1,17,18,19,-1,20,19,21,-1,20,16,19,-1,22,20,23,-1,20,21,23,-1,24,25,27,-1,25,26,27,-1,28,29,31,-1,29,30,31,-1,32,33,35,-1,33,34,35,-1,36,38,39,-1,36,37,38,-1,39,35,36,-1,39,32,35,-1,40,31,41,-1,40,28,31,-1,42,40,43,-1,40,41,43,-1,25,45,26,-1,25,44,45,-1,44,46,45,-1,46,47,45,-1,46,49,47,-1,46,48,49,-1,48,50,49,-1,50,51,49,-1,52,27,53,-1,52,24,27,-1,29,55,30,-1,29,54,55,-1,54,52,55,-1,52,53,55,-1,39,38,56,-1,38,57,56,-1,36,58,37,-1,58,59,37,-1,60,23,61,-1,60,22,23,-1,50,63,51,-1,50,62,63,-1,62,60,63,-1,60,61,63,-1,64,15,65,-1,64,14,15,-1,17,67,18,-1,17,66,67,-1,66,64,67,-1,64,65,67,-1,68,43,69,-1,68,42,43,-1,33,71,34,-1,33,70,71,-1,70,68,71,-1,68,69,71,-1,57,38,73,-1,37,59,72,-1,37,73,38,-1,37,72,73,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.57754,0.545979,0.45709,0.764706,0.719701,0.592954,0.347036,0.368984,0.305842,0.181818,0.181818,0.181818,0.764706,0.707915,0.547971,0.657754,0.608905,0.471331,0.240642,0.237132,0.23292,0.379679,0.358931,0.300495,0.315508,0.301704,0.285138,0.0320856,0.0316176,0.031056,0.128342,0.121329,0.101576,0,0,0,0.331551,0.313432,0.262404,0.449198,0.41515,0.390786,0.235294,0.226392,0.201321,0.0374332,0.0360169,0.0320284,0.55615,0.529654,0.455032,0.0802139,0.0790442,0.0776403,0.502674,0.465342,0.360205,0.673797,0.636975,0.533271,0.524064,0.493222,0.40636,0.631016,0.584153,0.452171,0.0641711,0.0594054,0.0459835])})),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0.209633,0.245878,0.209633,0.245878,0.210143,0.265437,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.209633,0.245878,0.210143,0.265437,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.209633,0.245878,0.210143,0.265437,0.210143,0.265437,0.209633,0.245878,0.209633,0.245878,0.210143,0.265437,0.210143,0.265437,0.209633,0.245878,0.209633,0.245878,0.210143,0.265437,0.210143,0.265437,0.156348,0.265798,0.0937872,0.266218,0.0933947,0.246473,0.155836,0.246154,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.0426829,0.246733,0.0426829,0.246733,0.156348,0.265798,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.209633,0.245878,0.210143,0.265437,0.0937872,0.266218,0.0933947,0.246473,0.0937872,0.266218])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-58.6987,99.9993,50.8193,-58.0735,100,50.8243,-57.9715,100,46.9126,-58.5967,99.9993,46.9071,-58.746,99.8748,50.8209,-58.6439,99.8748,46.9081,-59.3711,99.8741,50.8159,-59.2691,99.8741,46.9026,-59.4184,99.7496,50.8174,-59.3164,99.7496,46.9036,-60.0436,99.7489,50.8125,-59.9415,99.7489,46.8981,-60.0909,99.6244,50.814,-59.9888,99.6244,46.899,-60.716,99.6237,50.809,-60.6139,99.6237,46.8935,-62.061,99.3733,50.8021,-61.4358,99.374,50.8071,-61.3336,99.374,46.89,-61.9588,99.3733,46.8845,-62.1082,99.2488,50.8037,-62.0061,99.2488,46.8855,-62.7334,99.2481,50.7987,-62.6312,99.2481,46.88,-65.4232,98.7473,50.785,-64.7981,98.7481,50.7899,-64.6958,98.7481,46.8674,-65.3209,98.7473,46.8619,-66.7681,98.4969,50.7781,-66.143,98.4977,50.7831,-66.0406,98.4977,46.8584,-66.6657,98.4969,46.8529,-68.7855,98.1214,50.7678,-68.1603,98.1221,50.7727,-68.0579,98.1221,46.8448,-68.683,98.1214,46.8393,-68.7303,97.9969,46.8403,-87.2044,97.9969,46.7258,-91.5105,97.9969,50.6532,-68.8328,97.9969,50.7693,-66.8154,98.3725,50.7796,-66.713,98.3725,46.8539,-67.4406,98.3718,50.7746,-67.3382,98.3718,46.8484,-64.7508,98.8725,50.7884,-64.6485,98.8725,46.8664,-64.1256,98.8732,50.7934,-64.0233,98.8732,46.8719,-64.0783,98.9977,50.7918,-63.9761,98.9977,46.8709,-63.4532,98.9984,50.7968,-63.3509,98.9984,46.8765,-65.4705,98.6229,50.7865,-65.3682,98.6229,46.8629,-66.0957,98.6221,50.7815,-65.9933,98.6221,46.8574,-68.8328,100,50.7693,-91.5105,100,50.6532,-68.7303,100,46.8403,-86.5334,100,46.6983,-62.7807,99.1236,50.8002,-62.6785,99.1236,46.881,-63.4059,99.1229,50.7953,-63.3036,99.1229,46.8755,-60.7633,99.4992,50.8105,-60.6612,99.4992,46.8945,-61.3885,99.4985,50.8056,-61.2864,99.4985,46.889,-67.4879,98.2473,50.7762,-67.3855,98.2473,46.8493,-68.113,98.2466,50.7712,-68.0106,98.2466,46.8438,-92.4678,97.9969,46.6989,-96.774,97.9969,50.6263])}))}))})])})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("Autos"),
                                  children : new MFNode([
                                    new Script({
                                      DEF : new SFString("_NoNameScript1"),
                                      field : new MFNode([
                                        new field({
                                          type : field.TYPE_SFBOOL,
                                          name : new SFString("enabled"),
                                          accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFBOOL,
                                          name : new SFString("isBound"),
                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),
                                      ]),vrmlscript:
, function isBound(value, time)
{
	enabled = !value;
})}),

                                    new Transform({
                                      DEF : new SFString("Polo1"),
                                      translation : new SFVec3f([138.05,0.513211,37.2388]),
                                      rotation : new SFRotation([0,1,0,3.14159]),
                                      scale : new SFVec3f([1.5451,1.63502,1.5451]),
                                      scaleOrientation : new SFRotation([-3.68743e-11,1,-1.83874e-11,1.5708]),
                                      center : new SFVec3f([2.52141,0.176923,3.38321]),
                                      children : new MFNode([
                                        new Group({
                                          children : new MFNode([
                                            new Group({
                                              DEF : new SFString("poloblaufahr"),
                                              children : new MFNode([
                                                new TimeSensor({
                                                  DEF : new SFString("Time_3"),
                                                  cycleInterval : new SFTime(40),
                                                  loop : new SFBool(true)})])}),

                                            new PositionInterpolator({
                                              DEF : new SFString("UnnamedTransformTranslationInterp_1"),
                                              key : new MFFloat([0,0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.01,0.011,0.012,0.013,0.014,0.015,0.016,0.017,0.018,0.019,0.02,0.021,0.022,0.023,0.024,0.025,0.026,0.027,0.028,0.029,0.03,0.031,0.032,0.033,0.034,0.035,0.036,0.037,0.038,0.039,0.04,0.041,0.042,0.043,0.044,0.045,0.046,0.047,0.048,0.049,0.05,0.051,0.052,0.053,0.054,0.055,0.056,0.057,0.058,0.059,0.06,0.061,0.062,0.0629999,0.064,0.065,0.066,0.067,0.068,0.069,0.07,0.071,0.072,0.073,0.074,0.075,0.076,0.077,0.078,0.079,0.08,0.081,0.082,0.083,0.084,0.085,0.086,0.087,0.088,0.089,0.09,0.091,0.092,0.093,0.094,0.095,0.096,0.097,0.098,0.099,0.1,0.101017,0.102034,0.103051,0.104068,0.105085,0.106102,0.107119,0.108136,0.109153,0.11017,0.111186,0.112203,0.11322,0.114237,0.115254,0.116271,0.117288,0.118305,0.119322,0.120339,0.121356,0.122373,0.12339,0.124407,0.125424,0.126441,0.127458,0.128475,0.129492,0.130509,0.131525,0.132542,0.133559,0.134576,0.135593,0.13661,0.137627,0.138644,0.139661,0.140678,0.141695,0.142712,0.143729,0.144746,0.145763,0.14678,0.147797,0.148814,0.14983,0.150847,0.151864,0.152881,0.153898,0.154915,0.155932,0.156949,0.157966,0.158983,0.16,0.161,0.162,0.163,0.164,0.165,0.166,0.167,0.168,0.169,0.17,0.171,0.172,0.173,0.174,0.175,0.176,0.177,0.178,0.179,0.18,0.181,0.182,0.183,0.184,0.185,0.186,0.187,0.188,0.189,0.19,0.191,0.192,0.193,0.194,0.195,0.196,0.197,0.198,0.199,0.2,0.201,0.202,0.203,0.204,0.205,0.206,0.207,0.208,0.209,0.21,0.211,0.212,0.213,0.214,0.215,0.216,0.217,0.218,0.219,0.22,0.221,0.222,0.223,0.224,0.225,0.226,0.227,0.228,0.229,0.23,0.231,0.232,0.233,0.234,0.235,0.236,0.237,0.238,0.239,0.24,0.241,0.242,0.243,0.244,0.245,0.246014,0.247027,0.248041,0.249054,0.250068,0.251081,0.252095,0.253108,0.254122,0.255135,0.256149,0.257162,0.258176,0.259189,0.260203,0.261216,0.26223,0.263243,0.264257,0.26527,0.266284,0.267297,0.268311,0.269324,0.270338,0.271351,0.272365,0.273378,0.274392,0.275406,0.276419,0.277433,0.278446,0.27946,0.280473,0.281487,0.2825,0.283514,0.284527,0.285541,0.286554,0.287568,0.288581,0.289595,0.290608,0.291622,0.292635,0.293649,0.294662,0.295676,0.296689,0.297703,0.298716,0.29973,0.300743,0.301757,0.30277,0.303784,0.304798,0.305811,0.306825,0.307838,0.308852,0.309865,0.310879,0.311892,0.312906,0.313919,0.314933,0.315946,0.31696,0.317973,0.318987,0.32,0.321,0.322,0.323,0.324,0.325,0.326,0.327,0.328,0.329,0.33,0.331,0.332,0.333,0.334,0.335,0.336,0.337,0.338,0.339,0.34,0.341,0.342,0.343,0.344,0.345,0.346,0.347,0.348,0.349,0.35,0.351,0.352,0.353,0.354,0.355,0.356,0.357,0.358,0.358999,0.36,0.361026,0.362051,0.363077,0.364103,0.365128,0.366154,0.36718,0.368205,0.369231,0.370256,0.371282,0.372308,0.373333,0.374359,0.375385,0.37641,0.377436,0.378462,0.379487,0.380513,0.381539,0.382564,0.38359,0.384616,0.385641,0.386667,0.387692,0.388718,0.389744,0.390769,0.391795,0.392821,0.393846,0.394872,0.395898,0.396923,0.397949,0.398975,0.4,0.40102,0.402041,0.403061,0.404082,0.405102,0.406122,0.407143,0.408163,0.409184,0.410204,0.411224,0.412245,0.413265,0.414286,0.415306,0.416326,0.417347,0.418367,0.419388,0.420408,0.421428,0.422449,0.423469,0.42449,0.42551,0.42653,0.427551,0.428571,0.429592,0.430612,0.431632,0.432653,0.433673,0.434694,0.435714,0.436734,0.437755,0.438775,0.439796,0.440816,0.441836,0.442857,0.443877,0.444898,0.445918,0.446938,0.447959,0.448979,0.45,0.451,0.452,0.453,0.454,0.455,0.456,0.457,0.458,0.459,0.46,0.461,0.462,0.463,0.464,0.465,0.466,0.467,0.468,0.469,0.47,0.471,0.472,0.473,0.474,0.475,0.476,0.477,0.478,0.479,0.48,0.481,0.482,0.483,0.484,0.485,0.486,0.487,0.488,0.489,0.49,0.491111,0.492222,0.493333,0.494444,0.495556,0.496667,0.497778,0.498889,0.5,0.501111,0.502222,0.503333,0.504444,0.505555,0.506667,0.507778,0.508889,0.51,0.511077,0.512154,0.513231,0.514308,0.515385,0.516462,0.517539,0.518615,0.519692,0.520769,0.521846,0.522923,0.524,0.525,0.526,0.527,0.528,0.529,0.53,0.531,0.532,0.533,0.534,0.535,0.536,0.537,0.538,0.539,0.54,0.541,0.542,0.543,0.544,0.545,0.546,0.547,0.548,0.549,0.55,0.551,0.552,0.553,0.554,0.555,0.556,0.557,0.558,0.559,0.56,0.561,0.562,0.563,0.564,0.565,0.566,0.567,0.568,0.569,0.57,0.571,0.572,0.573,0.574,0.575,0.576,0.577,0.578,0.579,0.58,0.581,0.582,0.583,0.584,0.585,0.586,0.587,0.588,0.589,0.589999,0.590999,0.591999,0.592999,0.593999,0.594999,0.595999,0.596999,0.597999,0.598999,0.599999,0.600999,0.601999,0.602999,0.603999,0.604999,0.605999,0.606999,0.607999,0.609,0.610014,0.611029,0.612043,0.613057,0.614071,0.615086,0.6161,0.617114,0.618129,0.619143,0.620157,0.621172,0.622186,0.6232,0.624214,0.625229,0.626243,0.627257,0.628272,0.629286,0.6303,0.631314,0.632329,0.633343,0.634357,0.635372,0.636386,0.6374,0.638415,0.639429,0.640443,0.641457,0.642472,0.643486,0.6445,0.645515,0.646529,0.647543,0.648557,0.649572,0.650586,0.6516,0.652615,0.653629,0.654643,0.655657,0.656672,0.657686,0.6587,0.659715,0.660729,0.661743,0.662758,0.663772,0.664786,0.6658,0.666815,0.667829,0.668843,0.669858,0.670872,0.671886,0.6729,0.673915,0.674929,0.675943,0.676958,0.677972,0.678986,0.68,0.681013,0.682025,0.683038,0.684051,0.685063,0.686076,0.687089,0.688101,0.689114,0.690127,0.69114,0.692152,0.693165,0.694178,0.69519,0.696203,0.697216,0.698228,0.699241,0.700254,0.701266,0.702279,0.703292,0.704304,0.705317,0.70633,0.707342,0.708355,0.709368,0.71038,0.711393,0.712406,0.713419,0.714431,0.715444,0.716457,0.717469,0.718482,0.719495,0.720507,0.72152,0.722533,0.723545,0.724558,0.725571,0.726583,0.727596,0.728609,0.729621,0.730634,0.731647,0.73266,0.733672,0.734685,0.735698,0.73671,0.737723,0.738736,0.739748,0.740761,0.741774,0.742786,0.743799,0.744812,0.745824,0.746837,0.74785,0.748862,0.749875,0.750888,0.7519,0.752913,0.753926,0.754939,0.755951,0.756964,0.757977,0.758989,0.76,0.761007,0.762014,0.763022,0.764029,0.765036,0.766043,0.76705,0.768058,0.769065,0.770072,0.771079,0.772086,0.773094,0.774101,0.775108,0.776115,0.777122,0.77813,0.779137,0.780144,0.781151,0.782158,0.783166,0.784173,0.78518,0.786187,0.787194,0.788202,0.789209,0.790216,0.791223,0.79223,0.793238,0.794245,0.795252,0.796259,0.797266,0.798274,0.799281,0.800288,0.801295,0.802302,0.80331,0.804317,0.805324,0.806331,0.807338,0.808346,0.809353,0.81036,0.811367,0.812374,0.813382,0.814389,0.815396,0.816403,0.81741,0.818418,0.819425,0.820432,0.821439,0.822446,0.823454,0.824461,0.825468,0.826475,0.827482,0.82849,0.829497,0.830504,0.831511,0.832518,0.833526,0.834533,0.83554,0.836547,0.837554,0.838562,0.839569,0.840576,0.841583,0.84259,0.843598,0.844605,0.845612,0.846619,0.847626,0.848634,0.849641,0.850648,0.851655,0.852662,0.85367,0.854677,0.855684,0.856691,0.857698,0.858706,0.859713,0.86072,0.861727,0.862734,0.863742,0.864749,0.865756,0.866763,0.86777,0.868778,0.869785,0.870792,0.871799,0.872806,0.873814,0.874821,0.875828,0.876835,0.877842,0.87885,0.879857,0.880864,0.881871,0.882878,0.883886,0.884893,0.8859,0.886907,0.887914,0.888921,0.889929,0.890936,0.891943,0.89295,0.893957,0.894965,0.895972,0.896979,0.897986,0.898993,0.9,0.901,0.902,0.903,0.904,0.905,0.906,0.907,0.908,0.909,0.91,0.911,0.912,0.913,0.914,0.915,0.916,0.917,0.918,0.919,0.92,0.921,0.922,0.923,0.924,0.925,0.926,0.927,0.928,0.929,0.93,0.931,0.932,0.933,0.934,0.935,0.936,0.936999,0.937999,0.938999,0.939999,0.940999,0.941999,0.942999,0.943999,0.944999,0.945999,0.946999,0.947999,0.948999,0.949999,0.950999,0.951999,0.952999,0.953999,0.954999,0.955999,0.956999,0.957999,0.958999,0.959999,0.960999,0.961999,0.962999,0.963999,0.964999,0.965999,0.966999,0.967999,0.968999,0.969999,0.970999,0.971999,0.972999,0.973999,0.974999,0.975999,0.976999,0.977999,0.978999,0.979999,0.980999,0.981999,0.982999,0.983999,0.984999,0.985999,0.986999,0.987999,0.988999,0.989999,0.990999,0.991999,0.992999,0.993999,0.994999,0.995999,0.996999,0.997999,0.998999,1]),
                                              keyValue : new MFVec3f([138.05,0.513211,37.2388,137.313,0.513211,37.2333,136.576,0.513211,37.2278,135.839,0.513211,37.2223,135.101,0.513211,37.2168,134.364,0.513211,37.2112,133.627,0.513211,37.2056,132.89,0.513211,37.2001,132.153,0.513211,37.1945,131.416,0.513211,37.1889,130.679,0.513211,37.1833,129.941,0.513211,37.1777,129.204,0.513211,37.1721,128.467,0.513211,37.1665,127.73,0.513211,37.1608,126.993,0.513211,37.1552,126.256,0.513211,37.1496,125.519,0.513211,37.1439,124.781,0.513211,37.1382,124.044,0.513211,37.1326,123.307,0.513211,37.1269,122.57,0.513211,37.1212,121.833,0.513211,37.1155,121.096,0.513211,37.1098,120.359,0.513211,37.1042,119.621,0.513211,37.0985,118.884,0.513211,37.0928,118.147,0.513211,37.0871,117.41,0.513211,37.0813,116.673,0.513211,37.0756,115.936,0.513211,37.0699,115.199,0.513211,37.0642,114.461,0.513211,37.0585,113.724,0.513211,37.0528,112.987,0.513211,37.0471,112.25,0.513211,37.0414,111.513,0.513211,37.0357,110.776,0.513211,37.0299,110.038,0.513211,37.0242,109.301,0.513211,37.0185,108.564,0.513211,37.0128,107.827,0.513211,37.0071,107.09,0.513211,37.0014,106.353,0.513211,36.9957,105.616,0.513211,36.99,104.878,0.513211,36.9843,104.141,0.513211,36.9787,103.404,0.513211,36.973,102.667,0.513211,36.9673,101.93,0.513211,36.9617,101.193,0.513211,36.956,100.456,0.513211,36.9503,99.7184,0.513211,36.9447,98.9813,0.513211,36.9391,98.2441,0.513211,36.9334,97.507,0.513211,36.9278,96.7699,0.513211,36.9222,96.0327,0.513211,36.9166,95.2956,0.513211,36.911,94.5584,0.513211,36.9054,93.8213,0.513211,36.8998,93.0842,0.513211,36.8943,92.347,0.513211,36.8887,91.6099,0.513211,36.8832,90.8727,0.513211,36.8777,90.1356,0.513211,36.8721,89.3985,0.513211,36.8666,88.6613,0.513211,36.8612,87.9242,0.513211,36.8557,87.1871,0.513211,36.8502,86.4499,0.513211,36.8448,85.7128,0.513211,36.8393,84.9757,0.513211,36.8339,84.2385,0.513211,36.8285,83.5014,0.513211,36.8231,82.7643,0.513211,36.8178,82.0271,0.513211,36.8124,81.29,0.513211,36.8071,80.5529,0.513211,36.8018,79.8158,0.513211,36.7965,79.0786,0.513211,36.7912,78.3415,0.513211,36.7859,77.6044,0.513211,36.7807,76.8673,0.513211,36.7755,76.1302,0.513211,36.7703,75.3931,0.513211,36.7651,74.6559,0.513211,36.7599,73.9188,0.513211,36.7548,73.1817,0.513211,36.7497,72.4446,0.513211,36.7446,71.7075,0.513211,36.7395,70.9704,0.513211,36.7344,70.2333,0.513211,36.7294,69.4962,0.513211,36.7244,68.7591,0.513211,36.7194,68.022,0.513211,36.7145,67.2849,0.513211,36.7096,66.5478,0.513211,36.7047,65.8107,0.513211,36.6998,65.0736,0.513211,36.6949,64.3365,0.513211,36.6901,63.5869,0.513211,36.6853,62.8373,0.513211,36.6805,62.0876,0.513211,36.6759,61.3379,0.513211,36.6714,60.5881,0.513211,36.667,59.8383,0.513211,36.6627,59.0885,0.513211,36.6585,58.3387,0.513211,36.6543,57.5889,0.513211,36.6503,56.839,0.513211,36.6463,56.0891,0.513211,36.6424,55.3392,0.513211,36.6386,54.5893,0.513211,36.6349,53.8393,0.513211,36.6312,53.0894,0.513211,36.6275,52.3394,0.513211,36.624,51.5895,0.513211,36.6205,50.8395,0.513211,36.617,50.0896,0.513211,36.6136,49.3396,0.513211,36.6102,48.5897,0.513211,36.6069,47.8397,0.513211,36.6036,47.0898,0.513211,36.6003,46.3398,0.513211,36.597,45.5899,0.513211,36.5938,44.84,0.513211,36.5906,44.0901,0.513211,36.5874,43.3403,0.513211,36.5842,42.5904,0.513211,36.581,41.8406,0.513211,36.5778,41.0908,0.513211,36.5747,40.341,0.513211,36.5715,39.5913,0.513211,36.5683,38.8416,0.513211,36.5651,38.0919,0.513211,36.5619,37.3423,0.513211,36.5586,36.5927,0.513211,36.5553,35.8431,0.513211,36.552,35.0936,0.513211,36.5487,34.3441,0.513211,36.5453,33.5947,0.513211,36.5419,32.8453,0.513211,36.5385,32.096,0.513211,36.535,31.3467,0.513211,36.5314,30.5975,0.513211,36.5278,29.8484,0.513211,36.5241,29.0993,0.513211,36.5204,28.3502,0.513211,36.5166,27.6013,0.513211,36.5127,26.8524,0.513211,36.5087,26.1035,0.513211,36.5047,25.3548,0.513211,36.5006,24.6061,0.513211,36.4964,23.8575,0.513211,36.4921,23.109,0.513211,36.4877,22.3605,0.513211,36.4832,21.6121,0.513211,36.4786,20.8638,0.513211,36.4739,20.1156,0.513211,36.4691,19.38,0.513211,36.4647,18.6445,0.513211,36.461,17.9091,0.513211,36.458,17.1739,0.513211,36.4556,16.4388,0.513211,36.4538,15.7038,0.513211,36.4526,14.9689,0.513211,36.4519,14.2341,0.513211,36.4516,13.4994,0.513211,36.4518,12.7648,0.513211,36.4524,12.0303,0.513211,36.4534,11.2959,0.513211,36.4547,10.5616,0.513211,36.4563,9.82732,0.513211,36.4581,9.09314,0.513211,36.4601,8.35903,0.513211,36.4623,7.62498,0.513211,36.4646,6.89098,0.513211,36.4669,6.15705,0.513211,36.4694,5.42316,0.513211,36.4718,4.68931,0.513211,36.4742,3.9555,0.513211,36.4765,3.22173,0.513211,36.4787,2.48799,0.513211,36.4807,1.75427,0.513211,36.4825,1.02058,0.513211,36.4841,0.286901,0.513211,36.4855,-0.446766,0.513211,36.4865,-1.18043,0.513211,36.4872,-1.91409,0.513211,36.4874,-2.64775,0.513211,36.4873,-3.38142,0.513211,36.4866,-4.1151,0.513211,36.4855,-4.8488,0.513211,36.4838,-5.58252,0.513211,36.4815,-6.31626,0.513211,36.4785,-7.05004,0.513211,36.4749,-7.78385,0.513211,36.4706,-8.5177,0.513211,36.4656,-9.2516,0.513211,36.4597,-9.98555,0.513211,36.453,-10.7196,0.513211,36.4455,-11.4536,0.513211,36.437,-12.1877,0.513211,36.4276,-12.9219,0.513211,36.4172,-13.6562,0.513211,36.4058,-14.3905,0.513211,36.3933,-15.125,0.513211,36.3797,-15.8595,0.513211,36.3649,-16.5941,0.513211,36.349,-17.3288,0.513211,36.3318,-18.0636,0.513211,36.3134,-18.7985,0.513211,36.2936,-19.5335,0.513211,36.2725,-20.2686,0.513211,36.25,-21.0039,0.513211,36.2262,-21.7393,0.513211,36.2008,-22.4748,0.513211,36.1739,-23.2104,0.513211,36.1455,-23.9461,0.513211,36.1155,-24.6827,0.513211,36.0823,-25.4207,0.513211,36.0442,-26.1598,0.513211,36.0013,-26.9001,0.513211,35.9536,-27.6413,0.513211,35.9011,-28.3833,0.513211,35.8437,-29.1259,0.513211,35.7816,-29.869,0.513211,35.7146,-30.6125,0.513211,35.6429,-31.3561,0.513211,35.5664,-32.0998,0.513211,35.4851,-32.8433,0.513211,35.3991,-33.5866,0.513211,35.3083,-34.3295,0.513211,35.2128,-35.0718,0.513211,35.1125,-35.8134,0.513211,35.0075,-36.5542,0.513211,34.8978,-37.2939,0.513211,34.7833,-38.0325,0.513211,34.6641,-38.7699,0.513211,34.5403,-39.5057,0.513211,34.4117,-40.24,0.513211,34.2785,-40.9725,0.513211,34.1405,-41.7031,0.513211,33.998,-42.4316,0.513211,33.8507,-43.1689,0.513211,33.6978,-43.9062,0.513211,33.5422,-44.6435,0.513211,33.3842,-45.3807,0.513211,33.2237,-46.118,0.513211,33.0609,-46.8552,0.513211,32.8958,-47.5923,0.513211,32.7286,-48.3294,0.513211,32.5593,-49.0665,0.513211,32.388,-49.8035,0.513211,32.2148,-50.5405,0.513211,32.0398,-51.2774,0.513211,31.863,-52.0143,0.513211,31.6847,-52.7511,0.513211,31.5047,-53.4878,0.513211,31.3233,-54.2245,0.513211,31.1405,-54.961,0.513211,30.9564,-55.6975,0.513211,30.7712,-56.434,0.513211,30.5848,-57.1703,0.513211,30.3973,-57.9065,0.513211,30.2089,-58.6427,0.513211,30.0197,-59.3787,0.513211,29.8297,-60.1147,0.513211,29.639,-60.8505,0.513211,29.4477,-61.5862,0.513211,29.2559,-62.3218,0.513211,29.0637,-63.0574,0.513211,28.8711,-63.7927,0.513211,28.6783,-64.528,0.513211,28.4854,-65.2631,0.513211,28.2923,-65.9981,0.513211,28.0993,-66.7329,0.513211,27.9064,-67.4676,0.513211,27.7136,-68.2022,0.513211,27.5212,-68.9366,0.513211,27.3291,-69.6709,0.513211,27.1374,-70.405,0.513211,26.9463,-71.1389,0.513211,26.7558,-71.8727,0.513211,26.566,-72.6063,0.513211,26.377,-73.3397,0.513211,26.1889,-74.073,0.513211,26.0017,-74.8061,0.513211,25.8156,-75.5389,0.513211,25.6307,-76.2717,0.513211,25.447,-77.0042,0.513211,25.2646,-77.7365,0.513211,25.0836,-78.4686,0.513211,24.9041,-79.2005,0.513211,24.7262,-79.9322,0.513211,24.5499,-80.6637,0.513211,24.3755,-81.395,0.513211,24.2028,-82.126,0.513211,24.0321,-82.8569,0.513211,23.8634,-83.5875,0.513211,23.6968,-84.3179,0.513211,23.5323,-85.048,0.513211,23.3702,-85.7779,0.513211,23.2104,-86.5076,0.513211,23.0531,-87.237,0.513211,22.8983,-87.9661,0.513211,22.7461,-88.695,0.513211,22.5967,-89.4237,0.513211,22.45,-90.1521,0.513211,22.3062,-90.8802,0.513211,22.1654,-91.608,0.513211,22.0277,-92.3356,0.513211,21.8931,-93.0629,0.513211,21.7617,-93.7899,0.513211,21.6337,-94.5167,0.513211,21.5091,-95.2431,0.513211,21.3879,-95.9693,0.513211,21.2704,-96.6949,0.513211,21.1565,-97.4103,0.513211,21.0514,-98.1246,0.513211,20.957,-98.8377,0.513211,20.8729,-99.5497,0.513211,20.7986,-100.261,0.513211,20.7336,-100.971,0.513211,20.6777,-101.68,0.513211,20.6303,-102.388,0.513211,20.5911,-103.095,0.513211,20.5596,-103.801,0.513211,20.5355,-104.506,0.513211,20.5182,-105.211,0.513211,20.5074,-105.915,0.513211,20.5027,-106.618,0.513211,20.5036,-107.321,0.513211,20.5098,-108.022,0.513211,20.5208,-108.724,0.513211,20.5361,-109.424,0.513211,20.5554,-110.124,0.513211,20.5783,-110.824,0.513211,20.6043,-111.523,0.51321,20.6331,-112.222,0.51321,20.6641,-112.921,0.51321,20.697,-113.619,0.51321,20.7314,-114.316,0.51321,20.7668,-115.014,0.51321,20.8029,-115.711,0.51321,20.8392,-116.408,0.51321,20.8752,-117.105,0.51321,20.9107,-117.802,0.51321,20.945,-118.499,0.51321,20.978,-119.196,0.51321,21.009,-119.893,0.51321,21.0378,-120.59,0.51321,21.0638,-121.286,0.51321,21.0867,-121.984,0.51321,21.1061,-122.681,0.51321,21.1215,-123.378,0.51321,21.1324,-124.076,0.51321,21.1386,-124.774,0.51321,21.1396,-125.49,0.51321,21.1375,-126.205,0.51321,21.1349,-126.92,0.51321,21.1318,-127.634,0.51321,21.1282,-128.348,0.51321,21.1243,-129.061,0.51321,21.1199,-129.774,0.51321,21.1153,-130.487,0.51321,21.1103,-131.199,0.51321,21.1051,-131.911,0.51321,21.0997,-132.623,0.51321,21.0941,-133.334,0.51321,21.0883,-134.046,0.51321,21.0825,-134.757,0.51321,21.0765,-135.468,0.51321,21.0705,-136.178,0.51321,21.0646,-136.889,0.51321,21.0586,-137.599,0.51321,21.0528,-138.31,0.51321,21.0471,-139.02,0.51321,21.0415,-139.73,0.51321,21.0361,-140.441,0.51321,21.0309,-141.151,0.51321,21.026,-141.861,0.51321,21.0214,-142.572,0.51321,21.0171,-143.282,0.51321,21.0132,-143.993,0.51321,21.0097,-144.704,0.51321,21.0066,-145.415,0.51321,21.0041,-146.126,0.51321,21.0021,-146.837,0.51321,21.0006,-147.549,0.51321,20.9997,-148.261,0.51321,20.9995,-148.973,0.51321,20.9999,-149.686,0.51321,21.001,-150.398,0.51321,21.0029,-151.112,0.51321,21.0056,-151.825,0.51321,21.0091,-152.539,0.51321,21.0134,-153.25,0.51321,21.0184,-153.96,0.51321,21.0239,-154.671,0.51321,21.0298,-155.382,0.51321,21.0362,-156.094,0.51321,21.043,-156.805,0.51321,21.0503,-157.516,0.51321,21.0579,-158.228,0.51321,21.066,-158.939,0.51321,21.0744,-159.651,0.51321,21.0832,-160.363,0.51321,21.0923,-161.075,0.51321,21.1017,-161.787,0.51321,21.1115,-162.499,0.51321,21.1216,-163.211,0.51321,21.132,-163.923,0.51321,21.1427,-164.636,0.51321,21.1536,-165.348,0.51321,21.1648,-166.061,0.51321,21.1762,-166.773,0.51321,21.1879,-167.486,0.51321,21.1997,-168.198,0.51321,21.2118,-168.911,0.51321,21.224,-169.624,0.513211,21.2364,-170.337,0.513211,21.2489,-171.05,0.513211,21.2616,-171.762,0.513211,21.2744,-172.475,0.513211,21.2873,-173.188,0.513211,21.3004,-173.901,0.513211,21.3135,-174.614,0.513211,21.3266,-175.327,0.513211,21.3399,-176.04,0.513211,21.3531,-176.753,0.513211,21.3664,-177.466,0.513211,21.3797,-178.179,0.513211,21.393,-178.892,0.513211,21.4063,-179.605,0.513211,21.4196,-180.318,0.513211,21.4328,-181.031,0.513211,21.4459,-181.744,0.513211,21.459,-182.457,0.513211,21.472,-183.17,0.513211,21.4849,-183.883,0.513211,21.4977,-184.596,0.513211,21.5103,-185.309,0.513211,21.5229,-186.021,0.513211,21.5352,-186.734,0.513211,21.5474,-187.447,0.513211,21.5594,-188.145,0.513211,21.5711,-188.844,0.513211,21.583,-189.542,0.513211,21.5951,-190.241,0.513211,21.6073,-190.939,0.513211,21.6196,-191.638,0.513211,21.632,-192.337,0.513211,21.6445,-193.035,0.513211,21.6572,-193.734,0.513211,21.6699,-194.433,0.513211,21.6828,-195.131,0.513211,21.6957,-195.83,0.513211,21.7087,-196.529,0.513211,21.7218,-197.228,0.513211,21.7349,-197.926,0.513211,21.7481,-198.625,0.513211,21.7613,-199.324,0.513211,21.7746,-200.023,0.513211,21.7878,-200.722,0.513211,21.8012,-201.421,0.513211,21.8145,-202.119,0.513211,21.8278,-202.818,0.513211,21.8411,-203.517,0.513211,21.8545,-204.216,0.513211,21.8678,-204.915,0.513211,21.881,-205.614,0.513211,21.8943,-206.312,0.513211,21.9075,-207.011,0.513211,21.9207,-207.71,0.513211,21.9338,-208.409,0.513211,21.9468,-209.108,0.513211,21.9599,-209.807,0.513211,21.973,-210.505,0.513211,21.9862,-211.204,0.513211,21.9995,-211.903,0.513212,22.0128,-212.602,0.513212,22.0262,-213.3,0.513212,22.0396,-213.999,0.513212,22.053,-214.698,0.513212,22.0663,-215.397,0.513212,22.0797,-216.174,0.513212,22.0945,-216.95,0.513212,22.1094,-217.727,0.513212,22.1243,-218.503,0.513212,22.1392,-219.28,0.513212,22.1541,-220.056,0.513211,22.1691,-220.833,0.513211,22.184,-221.609,0.513211,22.1989,-222.386,0.513211,22.2138,-222.829,0.513211,22.7049,-222.685,0.513211,24.0092,-222.072,0.513211,25.918,-221.109,0.513211,28.2226,-219.916,0.51321,30.7143,-218.611,0.51321,33.1842,-217.313,0.51321,35.4238,-216.142,0.51321,37.2243,-215.216,0.51321,38.377,-214.486,0.51321,39.0083,-213.772,0.51321,39.4473,-213.071,0.51321,39.7186,-212.379,0.51321,39.8468,-211.691,0.51321,39.8562,-211.005,0.51321,39.7717,-210.315,0.51321,39.6176,-209.619,0.51321,39.4185,-208.912,0.51321,39.199,-208.189,0.51321,38.9837,-207.449,0.51321,38.797,-206.686,0.51321,38.6636,-205.896,0.51321,38.608,-205.144,0.51321,38.5984,-204.383,0.51321,38.5857,-203.614,0.51321,38.57,-202.837,0.51321,38.5518,-202.053,0.51321,38.5313,-201.263,0.51321,38.5087,-200.467,0.51321,38.4844,-199.667,0.51321,38.4586,-198.863,0.51321,38.4316,-198.056,0.51321,38.4037,-197.246,0.513211,38.3752,-196.435,0.513211,38.3463,-195.623,0.513211,38.3173,-194.811,0.513211,38.2885,-194,0.513211,38.2602,-193.19,0.513211,38.2326,-192.382,0.513211,38.2061,-191.578,0.513211,38.1809,-190.777,0.513211,38.1573,-189.981,0.513211,38.1355,-189.19,0.513211,38.1159,-188.405,0.513211,38.0988,-187.627,0.513211,38.0843,-186.857,0.513211,38.0728,-186.095,0.513211,38.0646,-185.342,0.513211,38.06,-184.595,0.513211,38.0575,-183.85,0.513211,38.0557,-183.106,0.513211,38.0545,-182.364,0.513211,38.0538,-181.624,0.513211,38.0537,-180.886,0.513211,38.0542,-180.149,0.513211,38.0552,-179.413,0.513211,38.0567,-178.679,0.513211,38.0587,-177.946,0.513211,38.0612,-177.214,0.513211,38.0641,-176.484,0.513211,38.0675,-175.754,0.513211,38.0713,-175.026,0.513211,38.0755,-174.299,0.513211,38.08,-173.572,0.513211,38.0849,-172.847,0.513211,38.0902,-172.122,0.513211,38.0958,-171.398,0.513211,38.1017,-170.675,0.513211,38.1078,-169.952,0.513211,38.1143,-169.23,0.513211,38.121,-168.509,0.513211,38.1279,-167.787,0.513211,38.135,-167.067,0.513211,38.1424,-166.346,0.513211,38.1499,-165.626,0.513211,38.1575,-164.906,0.513211,38.1653,-164.186,0.513211,38.1732,-163.465,0.513211,38.1812,-162.745,0.513211,38.1893,-162.025,0.51321,38.1974,-161.305,0.51321,38.2056,-160.585,0.51321,38.2138,-159.864,0.51321,38.2221,-159.143,0.51321,38.2303,-158.421,0.51321,38.2384,-157.699,0.51321,38.2465,-156.977,0.51321,38.2546,-156.253,0.51321,38.2625,-155.53,0.51321,38.2704,-154.805,0.51321,38.2781,-154.08,0.51321,38.2857,-153.354,0.51321,38.2931,-152.626,0.51321,38.3003,-151.898,0.51321,38.3073,-151.169,0.51321,38.3141,-150.439,0.51321,38.3207,-149.708,0.51321,38.327,-148.975,0.51321,38.333,-148.241,0.51321,38.3388,-147.506,0.51321,38.3442,-146.769,0.51321,38.3492,-146.031,0.51321,38.354,-145.291,0.51321,38.3583,-144.549,0.51321,38.3623,-143.806,0.51321,38.3659,-143.061,0.51321,38.369,-142.314,0.51321,38.3717,-141.555,0.51321,38.3741,-140.795,0.51321,38.3762,-140.034,0.51321,38.3781,-139.272,0.51321,38.3797,-138.508,0.51321,38.3812,-137.744,0.51321,38.3824,-136.979,0.51321,38.3834,-136.213,0.51321,38.3842,-135.445,0.51321,38.3849,-134.677,0.51321,38.3853,-133.908,0.51321,38.3856,-133.139,0.51321,38.3857,-132.368,0.51321,38.3857,-131.597,0.51321,38.3855,-130.825,0.51321,38.3851,-130.052,0.51321,38.3847,-129.279,0.51321,38.3841,-128.505,0.51321,38.3833,-127.73,0.51321,38.3825,-126.955,0.51321,38.3816,-126.179,0.51321,38.3806,-125.403,0.51321,38.3794,-124.626,0.51321,38.3783,-123.849,0.51321,38.377,-123.071,0.51321,38.3757,-122.293,0.51321,38.3743,-121.515,0.51321,38.3729,-120.736,0.51321,38.3714,-119.957,0.51321,38.3699,-119.178,0.51321,38.3684,-118.398,0.51321,38.3669,-117.618,0.51321,38.3653,-116.838,0.51321,38.3638,-116.058,0.51321,38.3623,-115.278,0.51321,38.3607,-114.498,0.51321,38.3593,-113.718,0.51321,38.3578,-112.937,0.51321,38.3564,-112.157,0.51321,38.355,-111.377,0.51321,38.3537,-110.597,0.51321,38.3524,-109.817,0.51321,38.3513,-109.037,0.51321,38.3502,-108.257,0.51321,38.3492,-107.478,0.51321,38.3483,-106.698,0.51321,38.3474,-105.919,0.51321,38.3467,-105.141,0.51321,38.3462,-104.362,0.51321,38.3457,-103.584,0.51321,38.3454,-102.807,0.51321,38.3452,-102.03,0.51321,38.3452,-101.253,0.51321,38.3453,-100.477,0.51321,38.3457,-99.7008,0.51321,38.3461,-98.9256,0.51321,38.3468,-98.1509,0.51321,38.3476,-97.3769,0.51321,38.3487,-96.6036,0.51321,38.35,-95.8309,0.51321,38.3514,-95.0589,0.51321,38.3531,-94.2876,0.51321,38.355,-93.5171,0.51321,38.3572,-92.7475,0.51321,38.3596,-91.9786,0.51321,38.3623,-91.2106,0.51321,38.3652,-90.4435,0.51321,38.3684,-89.6773,0.51321,38.3719,-88.9121,0.51321,38.3756,-88.1482,0.51321,38.3797,-87.3859,0.51321,38.384,-86.624,0.51321,38.3885,-85.8625,0.51321,38.3932,-85.1015,0.51321,38.3982,-84.3408,0.51321,38.4033,-83.5806,0.51321,38.4086,-82.8207,0.51321,38.4141,-82.0612,0.51321,38.4197,-81.3021,0.51321,38.4256,-80.5433,0.51321,38.4316,-79.7849,0.51321,38.4378,-79.0268,0.51321,38.4441,-78.2691,0.51321,38.4506,-77.5117,0.51321,38.4573,-76.7547,0.51321,38.4641,-75.9979,0.51321,38.4711,-75.2415,0.51321,38.4782,-74.4853,0.51321,38.4854,-73.7295,0.51321,38.4928,-72.9739,0.51321,38.5003,-72.2186,0.51321,38.5079,-71.4636,0.51321,38.5156,-70.7088,0.51321,38.5234,-69.9543,0.51321,38.5314,-69.2,0.51321,38.5394,-68.446,0.51321,38.5476,-67.6922,0.51321,38.5558,-66.9386,0.51321,38.5641,-66.1852,0.51321,38.5725,-65.4321,0.51321,38.581,-64.6791,0.51321,38.5896,-63.9263,0.51321,38.5982,-63.1737,0.51321,38.6069,-62.4213,0.51321,38.6157,-61.669,0.51321,38.6245,-60.9169,0.51321,38.6334,-60.165,0.51321,38.6423,-59.4132,0.51321,38.6512,-58.6615,0.51321,38.6602,-57.9099,0.51321,38.6693,-57.1585,0.51321,38.6783,-56.4072,0.51321,38.6874,-55.6559,0.51321,38.6965,-54.9048,0.51321,38.7056,-54.1538,0.51321,38.7147,-53.4028,0.51321,38.7238,-52.6519,0.51321,38.733,-51.9011,0.51321,38.7421,-51.1503,0.51321,38.7512,-50.3995,0.51321,38.7603,-49.6489,0.51321,38.7694,-48.8982,0.51321,38.7785,-48.1475,0.51321,38.7875,-47.3969,0.51321,38.7965,-46.6463,0.51321,38.8055,-45.8957,0.51321,38.8144,-45.145,0.51321,38.8233,-44.3944,0.51321,38.8321,-43.6437,0.51321,38.8409,-42.893,0.51321,38.8496,-42.1423,0.51321,38.8582,-41.3915,0.51321,38.8668,-40.6406,0.51321,38.8753,-39.8897,0.51321,38.8837,-39.1387,0.51321,38.8921,-38.3877,0.51321,38.9003,-37.6365,0.51321,38.9085,-36.8853,0.51321,38.9165,-36.1339,0.51321,38.9245,-35.3825,0.51321,38.9324,-34.6309,0.51321,38.9401,-33.8792,0.51321,38.9477,-33.1273,0.51321,38.9552,-32.3753,0.51321,38.9626,-31.6232,0.51321,38.9699,-30.8709,0.51321,38.977,-30.1184,0.51321,38.984,-29.3658,0.51321,38.9908,-28.6144,0.51321,38.9975,-27.8656,0.51321,39.0041,-27.1167,0.51321,39.0107,-26.3679,0.51321,39.0173,-25.6191,0.51321,39.0239,-24.8703,0.51321,39.0305,-24.1215,0.51321,39.0371,-23.3728,0.51321,39.0437,-22.624,0.51321,39.0503,-21.8752,0.51321,39.057,-21.1265,0.51321,39.0636,-20.3777,0.51321,39.0702,-19.629,0.51321,39.0769,-18.8803,0.51321,39.0835,-18.1316,0.51321,39.0902,-17.3829,0.51321,39.0968,-16.6342,0.51321,39.1034,-15.8855,0.51321,39.1101,-15.1368,0.51321,39.1167,-14.3882,0.51321,39.1234,-13.6395,0.51321,39.13,-12.8909,0.51321,39.1367,-12.1422,0.51321,39.1433,-11.3936,0.51321,39.15,-10.645,0.51321,39.1566,-9.89635,0.51321,39.1633,-9.14775,0.51321,39.1699,-8.39915,0.51321,39.1766,-7.65055,0.51321,39.1832,-6.90197,0.51321,39.1898,-6.15339,0.51321,39.1965,-5.40482,0.51321,39.2031,-4.65625,0.51321,39.2097,-3.9077,0.51321,39.2164,-3.15915,0.51321,39.223,-2.41061,0.51321,39.2296,-1.66207,0.51321,39.2362,-0.913545,0.51321,39.2428,-0.165018,0.51321,39.2494,0.583497,0.51321,39.256,1.33201,0.51321,39.2625,2.08051,0.51321,39.2691,2.829,0.51321,39.2757,3.57749,0.51321,39.2822,4.32598,0.51321,39.2888,5.07446,0.51321,39.2953,5.82293,0.51321,39.3018,6.5714,0.51321,39.3083,7.31986,0.51321,39.3149,8.06831,0.51321,39.3214,8.81677,0.51321,39.3278,9.56521,0.51321,39.3343,10.3137,0.51321,39.3408,11.0621,0.51321,39.3472,11.8105,0.51321,39.3537,12.5589,0.51321,39.3601,13.3074,0.51321,39.3665,14.0558,0.51321,39.3729,14.8042,0.51321,39.3793,15.5526,0.51321,39.3857,16.301,0.51321,39.392,17.0494,0.51321,39.3984,17.7978,0.51321,39.4047,18.5462,0.51321,39.411,19.2946,0.51321,39.4173,20.0429,0.51321,39.4236,20.7913,0.51321,39.4298,21.5397,0.51321,39.4361,22.2881,0.51321,39.4423,23.0364,0.51321,39.4485,23.7848,0.51321,39.4547,24.5332,0.51321,39.4609,25.2815,0.51321,39.467,26.0299,0.51321,39.4732,26.7782,0.51321,39.4793,27.5266,0.51321,39.4854,28.2749,0.51321,39.4915,29.0233,0.51321,39.4975,29.7716,0.51321,39.5035,30.52,0.51321,39.5096,31.2683,0.51321,39.5155,32.0166,0.51321,39.5215,32.765,0.51321,39.5275,33.5133,0.51321,39.5334,34.2616,0.51321,39.5393,35.01,0.51321,39.5451,35.7583,0.51321,39.551,36.5066,0.51321,39.5568,37.2549,0.51321,39.5626,38.0033,0.51321,39.5684,38.7516,0.51321,39.5741,39.4999,0.51321,39.5799,40.2482,0.51321,39.5856,40.9965,0.51321,39.5912,41.7449,0.51321,39.5969,42.4932,0.51321,39.6025,43.2415,0.51321,39.6081,43.9898,0.51321,39.6136,44.7381,0.51321,39.6192,45.4864,0.51321,39.6247,46.2347,0.51321,39.6301,46.9831,0.51321,39.6356,47.7314,0.51321,39.641,48.4797,0.51321,39.6464,49.228,0.51321,39.6517,49.9763,0.51321,39.657,50.7246,0.51321,39.6623,51.4729,0.51321,39.6676,52.2213,0.51321,39.6728,52.9696,0.51321,39.678,53.7179,0.51321,39.6832,54.4662,0.51321,39.6883,55.2146,0.51321,39.6934,55.9629,0.51321,39.6984,56.7112,0.51321,39.7035,57.4595,0.51321,39.7084,58.2078,0.51321,39.7134,58.9562,0.51321,39.7183,59.7045,0.51321,39.7232,60.4528,0.51321,39.728,61.2012,0.51321,39.7328,61.9495,0.51321,39.7376,62.6979,0.51321,39.7423,63.4462,0.51321,39.747,64.1945,0.51321,39.7517,64.9429,0.51321,39.7563,65.6912,0.51321,39.7609,66.4396,0.51321,39.7654,67.1879,0.51321,39.7699,67.9363,0.51321,39.7744,68.6847,0.51321,39.7788,69.433,0.51321,39.7832,70.1814,0.51321,39.7875,70.9298,0.51321,39.7918,71.6781,0.51321,39.7961,72.4265,0.51321,39.8003,73.1749,0.51321,39.8045,73.9232,0.51321,39.8086,74.6716,0.51321,39.8127,75.4195,0.51321,39.8167,76.1625,0.51321,39.8206,76.9056,0.51321,39.8245,77.6486,0.51321,39.8282,78.3916,0.51321,39.8318,79.1346,0.51321,39.8354,79.8777,0.51321,39.8388,80.6207,0.51321,39.8421,81.3637,0.51321,39.8454,82.1067,0.51321,39.8486,82.8497,0.51321,39.8516,83.5927,0.51321,39.8546,84.3357,0.51321,39.8575,85.0787,0.51321,39.8603,85.8217,0.51321,39.863,86.5647,0.51321,39.8657,87.3077,0.51321,39.8682,88.0507,0.51321,39.8707,88.7936,0.51321,39.8731,89.5366,0.51321,39.8754,90.2796,0.51321,39.8777,91.0226,0.51321,39.8799,91.7656,0.51321,39.882,92.5085,0.51321,39.884,93.2515,0.51321,39.886,93.9945,0.51321,39.8879,94.7375,0.51321,39.8897,95.4804,0.51321,39.8915,96.2234,0.51321,39.8932,96.9664,0.51321,39.8948,97.7093,0.51321,39.8964,98.4523,0.51321,39.898,99.1952,0.51321,39.8994,99.9382,0.51321,39.9009,100.681,0.51321,39.9022,101.424,0.51321,39.9035,102.167,0.51321,39.9048,102.91,0.51321,39.906,103.653,0.51321,39.9072,104.396,0.51321,39.9083,105.139,0.51321,39.9094,105.882,0.51321,39.9105,106.625,0.51321,39.9115,107.368,0.51321,39.9124,108.111,0.51321,39.9134,108.854,0.51321,39.9143,109.596,0.51321,39.9151,110.339,0.51321,39.916,111.082,0.51321,39.9168,111.825,0.51321,39.9175,112.568,0.51321,39.9183,113.311,0.51321,39.919,114.054,0.51321,39.9197,114.797,0.51321,39.9203,115.54,0.51321,39.921,116.283,0.51321,39.9216,117.026,0.51321,39.9222,117.769,0.51321,39.9228,118.512,0.51321,39.9234,119.255,0.51321,39.9239,119.998,0.51321,39.9245,120.741,0.51321,39.925,121.483,0.51321,39.9256,122.226,0.51321,39.9261,122.969,0.51321,39.9266,123.712,0.51321,39.9271,124.455,0.51321,39.9276,125.198,0.51321,39.9281,125.941,0.51321,39.9286,126.684,0.51321,39.9291,127.427,0.51321,39.9297,128.17,0.51321,39.9302,128.913,0.51321,39.9307,129.656,0.51321,39.9313,130.399,0.51321,39.9318,131.142,0.51321,39.9324,131.884,0.51321,39.9329,132.627,0.51321,39.9335,133.37,0.51321,39.9341,134.113,0.51321,39.9347,134.856,0.51321,39.9354,135.599,0.51321,39.936,136.342,0.51321,39.9367,137.085,0.51321,39.9374,137.828,0.51321,39.9381,138.571,0.51321,39.9389,139.314,0.51321,39.9397,140.057,0.51321,39.9405,140.8,0.51321,39.9414,141.543,0.51321,39.9422,142.286,0.51321,39.9432,143.028,0.51321,39.9441,143.771,0.51321,39.9451,144.514,0.51321,39.9461,145.257,0.51321,39.9472,146,0.51321,39.9483,146.743,0.51321,39.9495,147.486,0.51321,39.9507,148.229,0.51321,39.9519,148.972,0.51321,39.9532,149.716,0.51321,39.9546])}),

                                            new OrientationInterpolator({
                                              DEF : new SFString("UnnamedTransformRotationInterp_1"),
                                              key : new MFFloat([0,0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.01,0.011,0.012,0.013,0.014,0.015,0.016,0.017,0.018,0.019,0.02,0.021,0.022,0.023,0.024,0.025,0.026,0.027,0.028,0.029,0.03,0.031,0.032,0.033,0.034,0.035,0.036,0.037,0.038,0.039,0.04,0.041,0.042,0.043,0.044,0.045,0.046,0.047,0.048,0.049,0.05,0.051,0.052,0.053,0.054,0.055,0.056,0.057,0.058,0.059,0.06,0.061,0.062,0.0629999,0.064,0.065,0.066,0.067,0.068,0.069,0.07,0.071,0.072,0.073,0.074,0.075,0.076,0.077,0.078,0.079,0.08,0.081,0.082,0.083,0.084,0.085,0.086,0.087,0.088,0.089,0.09,0.091,0.092,0.093,0.094,0.095,0.096,0.097,0.098,0.099,0.1,0.101017,0.102034,0.103051,0.104068,0.105085,0.106102,0.107119,0.108136,0.109153,0.11017,0.111186,0.112203,0.11322,0.114237,0.115254,0.116271,0.117288,0.118305,0.119322,0.120339,0.121356,0.122373,0.12339,0.124407,0.125424,0.126441,0.127458,0.128475,0.129492,0.130509,0.131525,0.132542,0.133559,0.134576,0.135593,0.13661,0.137627,0.138644,0.139661,0.140678,0.141695,0.142712,0.143729,0.144746,0.145763,0.14678,0.147797,0.148814,0.14983,0.150847,0.151864,0.152881,0.153898,0.154915,0.155932,0.156949,0.157966,0.158983,0.16,0.161,0.162,0.163,0.164,0.165,0.166,0.167,0.168,0.169,0.17,0.171,0.172,0.173,0.174,0.175,0.176,0.177,0.178,0.179,0.18,0.181,0.182,0.183,0.184,0.185,0.186,0.187,0.188,0.189,0.19,0.191,0.192,0.193,0.194,0.195,0.196,0.197,0.198,0.199,0.2,0.201,0.202,0.203,0.204,0.205,0.206,0.207,0.208,0.209,0.21,0.211,0.212,0.213,0.214,0.215,0.216,0.217,0.218,0.219,0.22,0.221,0.222,0.223,0.224,0.225,0.226,0.227,0.228,0.229,0.23,0.231,0.232,0.233,0.234,0.235,0.236,0.237,0.238,0.239,0.24,0.241,0.242,0.243,0.244,0.245,0.246056,0.247111,0.248167,0.249222,0.250278,0.251333,0.252389,0.253444,0.2545,0.255556,0.256611,0.257667,0.258722,0.259778,0.260833,0.261889,0.262945,0.264,0.265018,0.266036,0.267055,0.268073,0.269091,0.270109,0.271127,0.272146,0.273164,0.274182,0.2752,0.276218,0.277237,0.278255,0.279273,0.280291,0.281309,0.282328,0.283346,0.284364,0.285382,0.2864,0.287419,0.288437,0.289455,0.290473,0.291491,0.292509,0.293528,0.294546,0.295564,0.296582,0.2976,0.298619,0.299637,0.300655,0.301673,0.302691,0.30371,0.304728,0.305746,0.306764,0.307782,0.308801,0.309819,0.310837,0.311855,0.312873,0.313892,0.31491,0.315928,0.316946,0.317964,0.318983,0.32,0.321,0.322,0.323,0.324,0.325,0.326,0.327,0.328,0.329,0.33,0.331,0.332,0.333,0.334,0.335,0.336,0.337,0.338,0.339,0.34,0.341,0.342,0.343,0.344,0.345,0.346,0.347,0.348,0.349,0.35,0.351,0.352,0.353,0.354,0.355,0.356,0.357,0.358,0.358999,0.36,0.361026,0.362051,0.363077,0.364103,0.365128,0.366154,0.36718,0.368205,0.369231,0.370256,0.371282,0.372308,0.373333,0.374359,0.375385,0.37641,0.377436,0.378462,0.379487,0.380513,0.381539,0.382564,0.38359,0.384616,0.385641,0.386667,0.387692,0.388718,0.389744,0.390769,0.391795,0.392821,0.393846,0.394872,0.395898,0.396923,0.397949,0.398975,0.4,0.40102,0.402041,0.403061,0.404082,0.405102,0.406122,0.407143,0.408163,0.409184,0.410204,0.411224,0.412245,0.413265,0.414286,0.415306,0.416326,0.417347,0.418367,0.419388,0.420408,0.421428,0.422449,0.423469,0.42449,0.42551,0.42653,0.427551,0.428571,0.429592,0.430612,0.431632,0.432653,0.433673,0.434694,0.435714,0.436734,0.437755,0.438775,0.439796,0.440816,0.441836,0.442857,0.443877,0.444898,0.445918,0.446938,0.447959,0.448979,0.45,0.451,0.452,0.453,0.454,0.455,0.456,0.457,0.458,0.459,0.46,0.461,0.462,0.463,0.464,0.465,0.466,0.467,0.468,0.469,0.47,0.471,0.472,0.473,0.474,0.475,0.476,0.477,0.478,0.479,0.48,0.481,0.482,0.483,0.484,0.485,0.486,0.487,0.488,0.489,0.49,0.491111,0.492222,0.493333,0.494444,0.495556,0.496667,0.497778,0.498889,0.5,0.501111,0.502222,0.503333,0.504444,0.505555,0.506667,0.507778,0.508889,0.51,0.511077,0.512154,0.513231,0.514308,0.515385,0.516462,0.517539,0.518615,0.519692,0.520769,0.521846,0.522923,0.524,0.525,0.526,0.527,0.528,0.529,0.53,0.531,0.532,0.533,0.534,0.535,0.536,0.537,0.538,0.539,0.54,0.541,0.542,0.543,0.544,0.545,0.546,0.547,0.548,0.549,0.55,0.551,0.552,0.553,0.554,0.555,0.556,0.557,0.558,0.559,0.56,0.561,0.562,0.563,0.564,0.565,0.566,0.567,0.568,0.569,0.57,0.571,0.572,0.573,0.574,0.575,0.576,0.577,0.578,0.579,0.58,0.581,0.582,0.583,0.584,0.585,0.586,0.587,0.588,0.589,0.589999,0.590999,0.591999,0.592999,0.593999,0.594999,0.595999,0.596999,0.597999,0.598999,0.599999,0.600999,0.601999,0.602999,0.603999,0.604999,0.605999,0.606999,0.607999,0.609,0.610014,0.611029,0.612043,0.613057,0.614071,0.615086,0.6161,0.617114,0.618129,0.619143,0.620157,0.621172,0.622186,0.6232,0.624214,0.625229,0.626243,0.627257,0.628272,0.629286,0.6303,0.631314,0.632329,0.633343,0.634357,0.635372,0.636386,0.6374,0.638415,0.639429,0.640443,0.641457,0.642472,0.643486,0.6445,0.645515,0.646529,0.647543,0.648557,0.649572,0.650586,0.6516,0.652615,0.653629,0.654643,0.655657,0.656672,0.657686,0.6587,0.659715,0.660729,0.661743,0.662758,0.663772,0.664786,0.6658,0.666815,0.667829,0.668843,0.669858,0.670872,0.671886,0.6729,0.673915,0.674929,0.675943,0.676958,0.677972,0.678986,0.68,0.681013,0.682025,0.683038,0.684051,0.685063,0.686076,0.687089,0.688101,0.689114,0.690127,0.69114,0.692152,0.693165,0.694178,0.69519,0.696203,0.697216,0.698228,0.699241,0.700254,0.701266,0.702279,0.703292,0.704304,0.705317,0.70633,0.707342,0.708355,0.709368,0.71038,0.711393,0.712406,0.713419,0.714431,0.715444,0.716457,0.717469,0.718482,0.719495,0.720507,0.72152,0.722533,0.723545,0.724558,0.725571,0.726583,0.727596,0.728609,0.729621,0.730634,0.731647,0.73266,0.733672,0.734685,0.735698,0.73671,0.737723,0.738736,0.739748,0.740761,0.741774,0.742786,0.743799,0.744812,0.745824,0.746837,0.74785,0.748862,0.749875,0.750888,0.7519,0.752913,0.753926,0.754939,0.755951,0.756964,0.757977,0.758989,0.76,0.761,0.762,0.763,0.764,0.765,0.766,0.767,0.768,0.769,0.77,0.771,0.772,0.773,0.774,0.775,0.776,0.777,0.778,0.779,0.78,0.781,0.782,0.783,0.784,0.785,0.786,0.787,0.788,0.789,0.79,0.791,0.792,0.793,0.794,0.795,0.796,0.797,0.798,0.798999,0.799999,0.800999,0.801999,0.802999,0.803999,0.804999,0.805999,0.806999,0.807999,0.808999,0.809999,0.810999,0.811999,0.812999,0.813999,0.814999,0.815999,0.816999,0.817999,0.818999,0.819999,0.820999,0.821999,0.822999,0.823999,0.824999,0.825999,0.826999,0.827999,0.828999,0.829999,0.830999,0.831999,0.832999,0.833999,0.834999,0.835999,0.836999,0.837999,0.838999,0.839999,0.840999,0.841999,0.842999,0.843999,0.844999,0.845999,0.846999,0.847999,0.848999,0.849999,0.850999,0.851999,0.852999,0.853999,0.854999,0.855999,0.856999,0.857999,0.858999,0.859999,0.860999,0.861999,0.862999,0.863999,0.864999,0.865999,0.866999,0.867999,0.868999,0.869999,0.870999,0.871999,0.872999,0.873999,0.874999,0.875998,0.876998,0.877998,0.878998,0.879998,0.880998,0.881998,0.882998,0.883998,0.884998,0.885998,0.886998,0.887998,0.888998,0.889998,0.890998,0.891998,0.892998,0.893998,0.894998,0.895998,0.896998,0.897998,0.898998,0.899998,0.900998,0.901998,0.902998,0.903998,0.904998,0.905998,0.906998,0.907998,0.908998,0.909998,0.910998,0.911998,0.912998,0.913998,0.914998,0.915998,0.916998,0.917998,0.918998,0.919998,0.920998,0.921998,0.922998,0.923998,0.924998,0.925998,0.926998,0.927998,0.928998,0.929998,0.930998,0.931998,0.932998,0.933998,0.934998,0.935998,0.936998,0.937998,0.938998,0.939998,0.940998,0.941998,0.942998,0.943998,0.944998,0.945998,0.946998,0.947998,0.948998,0.949998,0.950998,0.951998,0.952998,0.953997,0.954997,0.955997,0.956997,0.957997,0.958997,0.959997,0.960997,0.961997,0.962997,0.963997,0.964997,0.965997,0.966997,0.967997,0.968997,0.969997,0.970997,0.971997,0.972997,0.973997,0.974997,0.975997,0.976997,0.977997,0.978997,0.979997,0.980997,0.981997,0.982997,0.983997,0.984997,0.985997,0.986997,0.987997,0.988997,0.989997,0.990997,0.991997,0.992997,0.993997,0.994997,0.995997,0.996997,0.997997,0.998997,1]),
                                              keyValue : new MFRotation([0,1,0,3.14159,-9.99461e-13,1,-2.99698e-10,3.14164,-2.03758e-12,1,-6.19692e-10,3.14169,-3.11377e-12,1,-9.59532e-10,3.14175,-4.22744e-12,1,-1.31877e-9,3.14181,-5.378e-12,1,-1.69696e-9,3.14187,-6.56487e-12,1,-2.09365e-9,3.14194,-7.78744e-12,1,-2.50839e-9,3.14202,-9.04514e-12,1,-2.94073e-9,3.14209,-1.03374e-11,1,-3.39023e-9,3.14218,-1.16635e-11,1,-3.85643e-9,3.14226,-1.30231e-11,1,-4.33889e-9,3.14235,-1.44154e-11,1,-4.83716e-9,3.14245,-1.58398e-11,1,-5.35079e-9,3.14254,-1.72959e-11,1,-5.87933e-9,3.14264,-1.87829e-11,1,-6.42234e-9,3.14275,-2.03004e-11,1,-6.97935e-9,3.14285,-2.18477e-11,1,-7.54994e-9,3.14296,-2.34242e-11,1,-8.13364e-9,3.14307,-2.50293e-11,1,-8.73001e-9,3.14319,-2.66625e-11,1,-9.33859e-9,3.14331,-2.83232e-11,1,-9.95895e-9,3.14343,-3.00107e-11,1,-1.05906e-8,3.14355,-3.17245e-11,1,-1.12332e-8,3.14368,-3.3464e-11,1,-1.18862e-8,3.1438,-3.52286e-11,1,-1.25491e-8,3.14393,-3.70177e-11,1,-1.32216e-8,3.14406,-3.88307e-11,1,-1.39032e-8,3.1442,-4.06671e-11,1,-1.45933e-8,3.14433,-4.25262e-11,1,-1.52917e-8,3.14447,-4.44074e-11,1,-1.59978e-8,3.1446,-4.63103e-11,1,-1.67112e-8,3.14474,-4.82341e-11,1,-1.74314e-8,3.14488,-5.01783e-11,1,-1.8158e-8,3.14502,-5.21422e-11,1,-1.88906e-8,3.14517,-5.41254e-11,1,-1.96286e-8,3.14531,-5.61272e-11,1,-2.03717e-8,3.14545,-5.81471e-11,1,-2.11194e-8,3.1456,-6.01844e-11,1,-2.18712e-8,3.14574,-6.22385e-11,1,-2.26267e-8,3.14589,-6.43088e-11,1,-2.33854e-8,3.14603,-6.63949e-11,1,-2.4147e-8,3.14618,-6.8496e-11,1,-2.49109e-8,3.14632,-7.06116e-11,1,-2.56767e-8,3.14647,-7.27412e-11,1,-2.64439e-8,3.14661,-7.4884e-11,1,-2.72122e-8,3.14675,-7.70396e-11,1,-2.7981e-8,3.1469,-7.92072e-11,1,-2.87499e-8,3.14704,-8.13865e-11,1,-2.95184e-8,3.14718,-8.35767e-11,1,-3.02862e-8,3.14732,-8.57772e-11,1,-3.10527e-8,3.14747,-8.79875e-11,1,-3.18176e-8,3.1476,-9.0207e-11,1,-3.25803e-8,3.14774,-9.24351e-11,1,-3.33404e-8,3.14788,-9.46712e-11,1,-3.40975e-8,3.14801,-9.69148e-11,1,-3.48511e-8,3.14815,-9.91651e-11,1,-3.56008e-8,3.14828,-1.01422e-10,1,-3.6346e-8,3.14841,-1.03684e-10,1,-3.70865e-8,3.14854,-1.05951e-10,1,-3.78217e-8,3.14866,-1.08223e-10,1,-3.85511e-8,3.14879,-1.10499e-10,1,-3.92744e-8,3.14891,-1.12778e-10,1,-3.9991e-8,3.14903,-1.15059e-10,1,-4.07006e-8,3.14914,-1.17343e-10,1,-4.14026e-8,3.14926,-1.19628e-10,1,-4.20967e-8,3.14937,-1.21914e-10,1,-4.27824e-8,3.14947,-1.24201e-10,1,-4.34591e-8,3.14958,-1.26487e-10,1,-4.41266e-8,3.14968,-1.28773e-10,1,-4.47843e-8,3.14978,-1.31057e-10,1,-4.54318e-8,3.14987,-1.33339e-10,1,-4.60686e-8,3.14996,-1.35618e-10,1,-4.66943e-8,3.15005,-1.37894e-10,1,-4.73085e-8,3.15013,-1.40167e-10,1,-4.79106e-8,3.15021,-1.42435e-10,1,-4.85003e-8,3.15029,-1.44698e-10,1,-4.90771e-8,3.15036,-1.46955e-10,1,-4.96405e-8,3.15043,-1.49207e-10,1,-5.01901e-8,3.15049,-1.51451e-10,1,-5.07255e-8,3.15055,-1.53689e-10,1,-5.12461e-8,3.1506,-1.55918e-10,1,-5.17516e-8,3.15065,-1.58139e-10,1,-5.22415e-8,3.15069,-1.60351e-10,1,-5.27154e-8,3.15073,-1.62553e-10,1,-5.31728e-8,3.15076,-1.64745e-10,1,-5.36132e-8,3.15079,-1.66926e-10,1,-5.40362e-8,3.15082,-1.69095e-10,1,-5.44414e-8,3.15083,-1.71253e-10,1,-5.48283e-8,3.15084,-1.73398e-10,1,-5.51964e-8,3.15085,-1.75529e-10,1,-5.55454e-8,3.15085,-1.77647e-10,1,-5.58747e-8,3.15084,-1.79751e-10,1,-5.61839e-8,3.15083,-1.81839e-10,1,-5.64726e-8,3.15081,-1.83912e-10,1,-5.67403e-8,3.15079,-1.85969e-10,1,-5.69866e-8,3.15076,-1.88009e-10,1,-5.7211e-8,3.15072,-1.90031e-10,1,-5.74131e-8,3.15068,-1.92036e-10,1,-5.75924e-8,3.15062,-1.94022e-10,1,-5.77484e-8,3.15057,-1.95989e-10,1,-5.78808e-8,3.1505,-1.99389e-10,1,-5.80573e-8,3.15037,-2.02947e-10,1,-5.81798e-8,3.1502,-2.06655e-10,1,-5.82496e-8,3.15,-2.10504e-10,1,-5.82683e-8,3.14978,-2.14487e-10,1,-5.82374e-8,3.14952,-2.18594e-10,1,-5.81584e-8,3.14924,-2.22817e-10,1,-5.80327e-8,3.14893,-2.27148e-10,1,-5.78618e-8,3.14859,-2.31577e-10,1,-5.76473e-8,3.14823,-2.36098e-10,1,-5.73905e-8,3.14785,-2.407e-10,1,-5.70931e-8,3.14745,-2.45375e-10,1,-5.67564e-8,3.14703,-2.50116e-10,1,-5.6382e-8,3.14658,-2.54913e-10,1,-5.59713e-8,3.14613,-2.59759e-10,1,-5.55259e-8,3.14565,-2.64643e-10,1,-5.50472e-8,3.14516,-2.69559e-10,1,-5.45367e-8,3.14466,-2.74497e-10,1,-5.39959e-8,3.14414,-2.7945e-10,1,-5.34263e-8,3.14361,-2.84408e-10,1,-5.28294e-8,3.14308,-2.89362e-10,1,-5.22067e-8,3.14253,-2.94306e-10,1,-5.15595e-8,3.14198,-2.99229e-10,1,-5.08895e-8,3.14142,-3.04124e-10,1,-5.01982e-8,3.14086,-3.08982e-10,1,-4.94869e-8,3.14029,-3.13794e-10,1,-4.87572e-8,3.13972,-3.18552e-10,1,-4.80106e-8,3.13915,-3.23248e-10,1,-4.72486e-8,3.13858,-3.27873e-10,1,-4.64726e-8,3.13801,-3.32419e-10,1,-4.56841e-8,3.13744,-3.36876e-10,1,-4.48847e-8,3.13687,-3.41237e-10,1,-4.40758e-8,3.13632,-3.45493e-10,1,-4.32588e-8,3.13577,-3.49635e-10,1,-4.24354e-8,3.13522,-3.53656e-10,1,-4.16069e-8,3.13469,-3.57546e-10,1,-4.07749e-8,3.13416,-3.61297e-10,1,-3.99408e-8,3.13365,-3.649e-10,1,-3.91062e-8,3.13315,-3.68348e-10,1,-3.82724e-8,3.13266,-3.71631e-10,1,-3.74411e-8,3.13219,-3.74741e-10,1,-3.66136e-8,3.13173,-3.7767e-10,1,-3.57916e-8,3.13129,-3.80408e-10,1,-3.49763e-8,3.13088,-3.82948e-10,1,-3.41695e-8,3.13048,-3.85281e-10,1,-3.33724e-8,3.1301,-3.87399e-10,1,-3.25867e-8,3.12975,-3.89293e-10,1,-3.18138e-8,3.12942,-3.90954e-10,1,-3.10552e-8,3.12911,-3.92374e-10,1,-3.03124e-8,3.12883,-3.93544e-10,1,-2.95868e-8,3.12858,-3.94457e-10,1,-2.888e-8,3.12836,-3.95103e-10,1,-2.81934e-8,3.12817,-3.95474e-10,1,-2.75286e-8,3.12801,-3.95562e-10,1,-2.6887e-8,3.12788,-3.95357e-10,1,-2.62701e-8,3.12779,-3.94852e-10,1,-2.56793e-8,3.12773,-3.94038e-10,1,-2.51163e-8,3.12771,-3.92907e-10,1,-2.45824e-8,3.12772,-3.91449e-10,1,-2.40791e-8,3.12778,-3.89664e-10,1,-2.35996e-8,3.12791,-3.87508e-10,1,-2.31197e-8,3.12814,-3.84992e-10,1,-2.26397e-8,3.12848,-3.82127e-10,1,-2.21597e-8,3.12892,-3.78925e-10,1,-2.16798e-8,3.12944,-3.75396e-10,1,-2.12003e-8,3.13006,-3.71551e-10,1,-2.07212e-8,3.13076,-3.674e-10,1,-2.02428e-8,3.13153,-3.62956e-10,1,-1.97652e-8,3.13238,-3.58229e-10,1,-1.92885e-8,3.1333,-3.5323e-10,1,-1.8813e-8,3.13427,-3.47969e-10,1,-1.83388e-8,3.13531,-3.42459e-10,1,-1.7866e-8,3.1364,-3.3671e-10,1,-1.73949e-8,3.13754,-3.30732e-10,1,-1.69256e-8,3.13873,-3.24538e-10,1,-1.64582e-8,3.13995,-3.18137e-10,1,-1.5993e-8,3.14121,-3.11541e-10,1,-1.55301e-8,3.1425,-3.04762e-10,1,-1.50696e-8,3.14381,-2.97809e-10,1,-1.46117e-8,3.14514,-2.90694e-10,1,-1.41566e-8,3.14649,-2.83428e-10,1,-1.37045e-8,3.14785,-2.76023e-10,1,-1.32555e-8,3.14921,-2.68488e-10,1,-1.28097e-8,3.15058,-2.60835e-10,1,-1.23675e-8,3.15193,-2.53076e-10,1,-1.19288e-8,3.15329,-2.4522e-10,1,-1.1494e-8,3.15462,-2.37279e-10,1,-1.10631e-8,3.15594,-2.29265e-10,1,-1.06363e-8,3.15723,-2.21188e-10,1,-1.02138e-8,3.1585,-2.13059e-10,1,-9.79577e-9,3.15973,-2.04889e-10,1,-9.38237e-9,3.16093,-1.9669e-10,1,-8.97376e-9,3.16208,-1.88472e-10,1,-8.57011e-9,3.16319,-1.80246e-10,1,-8.1716e-9,3.16424,-1.72024e-10,1,-7.77837e-9,3.16523,-1.63816e-10,1,-7.39062e-9,3.16617,-1.55634e-10,1,-7.0085e-9,3.16703,-1.47488e-10,1,-6.63218e-9,3.16783,-1.3939e-10,1,-6.26183e-9,3.16854,-1.3135e-10,1,-5.89762e-9,3.16918,-1.23381e-10,1,-5.53971e-9,3.16973,-1.15492e-10,1,-5.18828e-9,3.17019,-1.07694e-10,1,-4.84349e-9,3.17055,-9.99998e-11,1,-4.50551e-9,3.17081,-9.24193e-11,1,-4.1745e-9,3.17097,-8.49637e-11,1,-3.85064e-9,3.17102,-7.76442e-11,1,-3.5341e-9,3.17095,-7.04716e-11,1,-3.22503e-9,3.17076,-6.34571e-11,1,-2.92361e-9,3.17045,-5.66117e-11,1,-2.63e-9,3.17,-4.99465e-11,1,-2.34437e-9,3.16943,-4.34724e-11,1,-2.06689e-9,3.16871,-3.72005e-11,1,-1.79773e-9,3.16785,-3.11419e-11,1,-1.53705e-9,3.16684,-2.53075e-11,1,-1.28501e-9,3.16568,-1.97084e-11,1,-1.04179e-9,3.16436,-1.43555e-11,1,-8.07549e-10,3.16287,-9.25995e-12,1,-5.82453e-10,3.16122,-4.43325e-12,1,-3.66693e-10,3.15939,6.60749e-12,1,1.06646e-10,3.1542,1.72279e-11,1,5.16105e-10,3.14788,2.74396e-11,1,8.65599e-10,3.14051,3.72542e-11,1,1.15904e-9,3.1322,4.66837e-11,1,1.40035e-9,3.12302,5.57398e-11,1,1.59342e-9,3.11308,6.44343e-11,1,1.74216e-9,3.10245,7.27789e-11,1,1.85046e-9,3.09124,8.07854e-11,1,1.9222e-9,3.07953,8.84653e-11,1,1.96126e-9,3.0674,9.58302e-11,1,1.97149e-9,3.05497,1.02891e-10,1,1.95677e-9,3.0423,1.0966e-10,1,1.92095e-9,3.02949,1.16148e-10,1,1.86787e-9,3.01664,1.22366e-10,1,1.80142e-9,3.00383,1.28325e-10,1,1.72543e-9,2.99116,1.34035e-10,1,1.6438e-9,2.97871,1.39508e-10,1,1.56039e-9,2.96657,1.44754e-10,1,1.4791e-9,2.95484,1.49784e-10,1,1.40385e-9,2.94361,1.54609e-10,1,1.33855e-9,2.93296,1.59239e-10,1,1.28714e-9,2.92298,1.63685e-10,1,1.25359e-9,2.91377,1.67957e-10,1,1.24186e-9,2.90542,1.72066e-10,1,1.25593e-9,2.89802,1.77649e-10,1,1.2917e-9,2.88837,1.83149e-10,1,1.32054e-9,2.87867,1.88488e-10,1,1.34268e-9,2.86904,1.93586e-10,1,1.35834e-9,2.85961,1.98366e-10,1,1.36776e-9,2.85048,2.02749e-10,1,1.37117e-9,2.84177,2.06655e-10,1,1.36879e-9,2.83362,2.10004e-10,1,1.36087e-9,2.82614,2.12718e-10,1,1.34763e-9,2.81944,2.14716e-10,1,1.32933e-9,2.81365,2.15919e-10,1,1.30621e-9,2.80889,2.16247e-10,1,1.27851e-9,2.80528,2.15621e-10,1,1.24648e-9,2.80293,2.13962e-10,1,1.21038e-9,2.80197,2.11192e-10,1,1.17047e-9,2.80252,2.07234e-10,1,1.127e-9,2.80469,2.02011e-10,1,1.08025e-9,2.80861,1.9545e-10,1,1.03049e-9,2.81439,1.92936e-10,1,1.01303e-9,2.81679,1.90152e-10,1,9.94212e-10,2.81955,1.87107e-10,1,9.74078e-10,2.82267,1.83812e-10,1,9.52688e-10,2.82612,1.80276e-10,1,9.30097e-10,2.8299,1.76511e-10,1,9.06359e-10,2.83399,1.72526e-10,1,8.81531e-10,2.83838,1.68332e-10,1,8.55667e-10,2.84305,1.63938e-10,1,8.28822e-10,2.848,1.59355e-10,1,8.01051e-10,2.8532,1.54594e-10,1,7.72409e-10,2.85865,1.49663e-10,1,7.42949e-10,2.86434,1.44574e-10,1,7.12727e-10,2.87024,1.39336e-10,1,6.81796e-10,2.87635,1.3396e-10,1,6.50211e-10,2.88265,1.28454e-10,1,6.18023e-10,2.88914,1.2283e-10,1,5.85288e-10,2.89579,1.17098e-10,1,5.52058e-10,2.90259,1.11266e-10,1,5.18385e-10,2.90953,1.05345e-10,1,4.84323e-10,2.9166,9.93442e-11,1,4.49924e-10,2.92378,9.32738e-11,1,4.15239e-10,2.93107,8.71434e-11,1,3.80321e-10,2.93844,8.09625e-11,1,3.45222e-10,2.94588,7.47406e-11,1,3.09992e-10,2.95339,6.84874e-11,1,2.74684e-10,2.96094,6.22124e-11,1,2.39347e-10,2.96853,5.59251e-11,1,2.04034e-10,2.97614,4.96348e-11,1,1.68794e-10,2.98376,4.33511e-11,1,1.33679e-10,2.99137,3.70833e-11,1,9.8738e-11,2.99896,3.08409e-11,1,6.40226e-11,3.00652,2.46331e-11,1,2.95827e-11,3.01404,1.84694e-11,1,-4.53164e-12,3.0215,1.2359e-11,1,-3.82702e-11,3.02888,6.31138e-12,1,-7.15827e-11,3.03618,3.35749e-13,1,-1.04419e-10,3.04339,-5.55854e-12,1,-1.3673e-10,3.05048,-1.13621e-11,1,-1.68464e-10,3.05745,-1.70658e-11,1,-1.99573e-10,3.06428,-2.26601e-11,1,-2.30005e-10,3.07096,-2.81358e-11,1,-2.5971e-10,3.07748,-3.34834e-11,1,-2.88639e-10,3.08382,-3.86938e-11,1,-3.16742e-10,3.08997,-4.37575e-11,1,-3.43967e-10,3.09591,-4.86651e-11,1,-3.70264e-10,3.10164,-5.34072e-11,1,-3.95584e-10,3.10714,-5.79745e-11,1,-4.19875e-10,3.1124,-6.23575e-11,1,-4.43087e-10,3.11739,-6.65469e-11,1,-4.65169e-10,3.12212,-7.05331e-11,1,-4.86071e-10,3.12657,-7.43067e-11,1,-5.05742e-10,3.13072,-7.78583e-11,1,-5.2413e-10,3.13456,-8.11784e-11,1,-5.41186e-10,3.13808,-8.42551e-11,1,-5.56846e-10,3.14126,-8.81814e-11,1,-5.76495e-10,3.1452,-9.18393e-11,1,-5.94337e-10,3.14876,-9.5239e-11,1,-6.10444e-10,3.15194,-9.83907e-11,1,-6.24887e-10,3.15476,-1.01304e-10,1,-6.37734e-10,3.15725,-1.0399e-10,1,-6.49057e-10,3.15941,-1.06459e-10,1,-6.58927e-10,3.16125,-1.0872e-10,1,-6.67413e-10,3.1628,-1.10783e-10,1,-6.74585e-10,3.16407,-1.1266e-10,1,-6.80515e-10,3.16507,-1.14359e-10,1,-6.85273e-10,3.16582,-1.15891e-10,1,-6.88928e-10,3.16634,-1.17267e-10,1,-6.91552e-10,3.16663,-1.18496e-10,1,-6.93214e-10,3.16671,-1.19588e-10,1,-6.93986e-10,3.16661,-1.20554e-10,1,-6.93938e-10,3.16632,-1.21403e-10,1,-6.93139e-10,3.16588,-1.22147e-10,1,-6.91661e-10,3.16529,-1.22794e-10,1,-6.89573e-10,3.16456,-1.23355e-10,1,-6.86947e-10,3.16372,-1.23841e-10,1,-6.83853e-10,3.16278,-1.24261e-10,1,-6.8036e-10,3.16176,-1.24625e-10,1,-6.7654e-10,3.16066,-1.24944e-10,1,-6.72463e-10,3.1595,-1.25228e-10,1,-6.682e-10,3.1583,-1.25487e-10,1,-6.6382e-10,3.15708,-1.25731e-10,1,-6.59395e-10,3.15584,-1.2597e-10,1,-6.54994e-10,3.15461,-1.26215e-10,1,-6.50688e-10,3.1534,-1.26475e-10,1,-6.46547e-10,3.15222,-1.2676e-10,1,-6.42643e-10,3.15108,-1.27082e-10,1,-6.39044e-10,3.15002,-1.27449e-10,1,-6.35823e-10,3.14902,-1.27873e-10,1,-6.33048e-10,3.14813,-1.28363e-10,1,-6.30791e-10,3.14734,-1.28929e-10,1,-6.29122e-10,3.14668,-1.29582e-10,1,-6.28112e-10,3.14615,-1.30332e-10,1,-6.2783e-10,3.14578,-1.31188e-10,1,-6.28348e-10,3.14557,-1.32163e-10,1,-6.29737e-10,3.14555,-1.33208e-10,1,-6.31629e-10,3.14563,-1.34221e-10,1,-6.33518e-10,3.14571,-1.35203e-10,1,-6.35405e-10,3.14579,-1.36156e-10,1,-6.37289e-10,3.14587,-1.37082e-10,1,-6.3917e-10,3.14595,-1.37984e-10,1,-6.41051e-10,3.14603,-1.38863e-10,1,-6.42929e-10,3.14612,-1.39721e-10,1,-6.44807e-10,3.1462,-1.40561e-10,1,-6.46684e-10,3.14628,-1.41384e-10,1,-6.48561e-10,3.14636,-1.42192e-10,1,-6.50438e-10,3.14644,-1.42988e-10,1,-6.52316e-10,3.14652,-1.43773e-10,1,-6.54195e-10,3.14659,-1.4455e-10,1,-6.56075e-10,3.14667,-1.45321e-10,1,-6.57956e-10,3.14674,-1.46086e-10,1,-6.5984e-10,3.14681,-1.4685e-10,1,-6.61726e-10,3.14688,-1.47613e-10,1,-6.63615e-10,3.14695,-1.48378e-10,1,-6.65506e-10,3.14701,-1.49146e-10,1,-6.67402e-10,3.14707,-1.4992e-10,1,-6.69301e-10,3.14713,-1.50702e-10,1,-6.71205e-10,3.14718,-1.51493e-10,1,-6.73113e-10,3.14723,-1.52297e-10,1,-6.75026e-10,3.14728,-1.53114e-10,1,-6.76945e-10,3.14732,-1.53947e-10,1,-6.78869e-10,3.14736,-1.54797e-10,1,-6.808e-10,3.14739,-1.55668e-10,1,-6.82737e-10,3.14741,-1.5656e-10,1,-6.84681e-10,3.14744,-1.57477e-10,1,-6.86632e-10,3.14745,-1.58419e-10,1,-6.88591e-10,3.14746,-1.5939e-10,1,-6.90558e-10,3.14747,-1.6039e-10,1,-6.92533e-10,3.14747,-1.61423e-10,1,-6.94517e-10,3.14746,-1.62489e-10,1,-6.9651e-10,3.14745,-1.63592e-10,1,-6.98512e-10,3.14743,-1.64732e-10,1,-7.00525e-10,3.1474,-1.65913e-10,1,-7.02547e-10,3.14736,-1.67136e-10,1,-7.0458e-10,3.14732,-1.68143e-10,1,-7.06213e-10,3.14728,-1.69183e-10,1,-7.07866e-10,3.14723,-1.70253e-10,1,-7.09539e-10,3.14717,-1.71352e-10,1,-7.11229e-10,3.14711,-1.7248e-10,1,-7.12937e-10,3.14704,-1.73634e-10,1,-7.1466e-10,3.14696,-1.74814e-10,1,-7.16398e-10,3.14688,-1.76017e-10,1,-7.1815e-10,3.14679,-1.77244e-10,1,-7.19915e-10,3.1467,-1.78491e-10,1,-7.21692e-10,3.1466,-1.79759e-10,1,-7.23479e-10,3.14649,-1.81044e-10,1,-7.25275e-10,3.14638,-1.82348e-10,1,-7.27081e-10,3.14627,-1.83667e-10,1,-7.28893e-10,3.14615,-1.85e-10,1,-7.30712e-10,3.14603,-1.86346e-10,1,-7.32537e-10,3.1459,-1.87705e-10,1,-7.34365e-10,3.14577,-1.89073e-10,1,-7.36197e-10,3.14564,-1.90451e-10,1,-7.38031e-10,3.14551,-1.91837e-10,1,-7.39866e-10,3.14537,-1.93228e-10,1,-7.417e-10,3.14524,-1.94625e-10,1,-7.43534e-10,3.1451,-1.96025e-10,1,-7.45366e-10,3.14496,-1.97428e-10,1,-7.47194e-10,3.14482,-1.98832e-10,1,-7.49018e-10,3.14468,-2.00235e-10,1,-7.50837e-10,3.14453,-2.01636e-10,1,-7.52649e-10,3.14439,-2.03034e-10,1,-7.54454e-10,3.14425,-2.04427e-10,1,-7.56251e-10,3.14411,-2.05815e-10,1,-7.58038e-10,3.14397,-2.07195e-10,1,-7.59814e-10,3.14383,-2.08567e-10,1,-7.61578e-10,3.14369,-2.09929e-10,1,-7.6333e-10,3.14356,-2.1128e-10,1,-7.65068e-10,3.14343,-2.12618e-10,1,-7.66791e-10,3.1433,-2.13941e-10,1,-7.68498e-10,3.14317,-2.1525e-10,1,-7.70188e-10,3.14304,-2.16541e-10,1,-7.71859e-10,3.14292,-2.17815e-10,1,-7.73512e-10,3.1428,-2.19069e-10,1,-7.75144e-10,3.14269,-2.20302e-10,1,-7.76755e-10,3.14258,-2.21514e-10,1,-7.78344e-10,3.14248,-2.22701e-10,1,-7.79909e-10,3.14238,-2.23864e-10,1,-7.8145e-10,3.14229,-2.25e-10,1,-7.82965e-10,3.1422,-2.26109e-10,1,-7.84454e-10,3.14212,-2.27189e-10,1,-7.85915e-10,3.14204,-2.28239e-10,1,-7.87347e-10,3.14197,-2.29257e-10,1,-7.8875e-10,3.14191,-2.3087e-10,1,-7.91003e-10,3.14183,-2.32439e-10,1,-7.93229e-10,3.14177,-2.33964e-10,1,-7.95428e-10,3.14174,-2.35448e-10,1,-7.97599e-10,3.14173,-2.36893e-10,1,-7.9974e-10,3.14174,-2.38301e-10,1,-8.01851e-10,3.14176,-2.39672e-10,1,-8.03929e-10,3.1418,-2.41009e-10,1,-8.05975e-10,3.14185,-2.42314e-10,1,-8.07987e-10,3.14192,-2.43588e-10,1,-8.09964e-10,3.14199,-2.44833e-10,1,-8.11906e-10,3.14206,-2.46051e-10,1,-8.1381e-10,3.14214,-2.47243e-10,1,-8.15676e-10,3.14222,-2.48412e-10,1,-8.17503e-10,3.1423,-2.49558e-10,1,-8.19289e-10,3.14238,-2.50685e-10,1,-8.21034e-10,3.14245,-2.51792e-10,1,-8.22737e-10,3.14251,-2.52883e-10,1,-8.24396e-10,3.14256,-2.53959e-10,1,-8.2601e-10,3.1426,-2.55021e-10,1,-8.27579e-10,3.14263,-2.56072e-10,1,-8.29102e-10,3.14263,-2.57113e-10,1,-8.30576e-10,3.14262,-2.58146e-10,1,-8.32001e-10,3.14259,-2.59173e-10,1,-8.33377e-10,3.14254,-2.60194e-10,1,-8.34701e-10,3.14245,-2.61213e-10,1,-8.35974e-10,3.14234,-2.62231e-10,1,-8.37193e-10,3.1422,-2.63249e-10,1,-8.38358e-10,3.14203,-2.6427e-10,1,-8.39467e-10,3.14182,-2.65295e-10,1,-8.40521e-10,3.14158,-2.69056e-10,1,-8.42969e-10,3.14065,-2.73851e-10,1,-8.44348e-10,3.13948,-2.79191e-10,1,-8.44937e-10,3.1381,-2.8459e-10,1,-8.45013e-10,3.13655,-2.89559e-10,1,-8.44853e-10,3.13488,-2.93611e-10,1,-8.44735e-10,3.13313,-2.96258e-10,1,-8.44936e-10,3.13133,-2.97013e-10,1,-8.45734e-10,3.12953,-2.95387e-10,1,-8.47406e-10,3.12777,-2.90893e-10,1,-8.50229e-10,3.12609,-2.81879e-10,1,-8.5479e-10,3.14123,-2.68432e-10,1,-8.60746e-10,3.18178,-2.51183e-10,1,-8.67922e-10,3.23503,-2.31239e-10,1,-8.7595e-10,3.28826,-2.1e-10,1,-8.84336e-10,3.32875,-1.89042e-10,1,-8.92522e-10,3.34379,-1.69992e-10,1,-8.99927e-10,3.32065,-1.54375e-10,1,-9.06018e-10,3.24662,-1.43471e-10,1,-9.10354e-10,3.109,-1.32891e-10,1,-9.10693e-10,2.8823,-1.1945e-10,1,-9.06843e-10,2.56651,-1.04293e-10,1,-9.00392e-10,2.18709,-8.69946e-11,1,-8.91709e-10,1.7695,-6.59149e-11,1,-8.8014e-10,1.3392,-3.79159e-11,1,-8.63843e-10,0.921637,2.84449e-12,1,-8.38988e-10,0.542284,6.83054e-11,1,-7.97343e-10,0.226595,0,0,1,0,-1.8375e-10,-1,6.98553e-10,0.102583,-1.92519e-10,-1,6.67711e-10,0.172889,-2.21342e-10,-1,6.20182e-10,0.215106,-2.82683e-10,-1,5.4722e-10,0.233423,-3.98072e-10,-1,4.3416e-10,0.232028,-6.06566e-10,-1,2.55071e-10,0.215116,-9.83797e-10,-1,-3.90615e-11,0.186871,-1.68872e-9,-1,-5.48846e-10,0.151485,-3.09168e-9,-1,-1.50316e-9,0.113147,-6.17463e-9,-1,-3.49417e-9,0.076048,-1.3959e-8,-1,-8.29418e-9,0.0443781,-3.60571e-8,-1,-2.13092e-8,0.0223226,-7.33611e-8,-1,-4.17642e-8,0.0140673,-8.27019e-8,-1,-4.61291e-8,0.0140163,-9.32505e-8,-1,-5.12871e-8,0.0139139,-1.05214e-7,-1,-5.73148e-8,0.0136893,-1.18843e-7,-1,-6.43156e-8,0.0133722,-1.34441e-7,-1,-7.24242e-8,0.0129556,-1.52384e-7,-1,-8.18117e-8,0.0125252,-1.73134e-7,-1,-9.26941e-8,0.0119803,-1.97269e-7,-1,-1.05344e-7,0.0114304,-2.25516e-7,-1,-1.20105e-7,0.0108086,-2.58799e-7,-1,-1.37415e-7,0.0101252,-2.98302e-7,-1,-1.57835e-7,0.00946813,-3.45561e-7,-1,-1.82086e-7,0.0087619,-4.02587e-7,-1,-2.11113e-7,0.00802329,-4.72043e-7,-1,-2.46154e-7,0.00730793,-5.57498e-7,-1,-2.88859e-7,0.00658728,-6.63781e-7,-1,-3.41443e-7,0.00581854,-7.97497e-7,-1,-4.06906e-7,0.00512114,-9.67737e-7,-1,-4.89338e-7,0.00452814,-0.00000118704,-1,-5.94303e-7,0.00390625,-0.00000147252,-1,-7.29288e-7,0.00331169,-0.00000184686,-1,-9.03982e-7,0.00267443,-0.0000023377,-1,-0.00000112978,0.00229024,-0.00000297197,-1,-0.0000014168,0.00195312,-0.00000375714,-1,-0.00000176506,0.00154408,-0.00000463992,-1,-0.00000214594,0.00138107,-0.00000545355,-1,-0.00000248055,0.00119604,-0.00000572435,-1,-0.00000258323,0.000976562,-0.00000591704,-1,-0.00000264758,0.00119604,-0.00000602251,-1,-0.00000267057,0.00119604,-0.00000604024,-1,-0.00000265323,0.000976562,-0.00000597768,-1,-0.00000260011,0.00119604,-0.00000584807,-1,-0.00000251818,0.00119604,-0.00000566748,-1,-0.00000241536,0.00138107,-0.00000545214,-1,-0.00000229936,0.00154408,-0.00000521659,-1,-0.00000217684,0.00138107,-0.00000497265,-1,-0.00000205307,0.00169146,-0.00000472926,-1,-0.00000193187,0.00182698,-0.00000449271,-1,-0.00000181582,0.00195312,-0.00000426705,-1,-0.00000170645,0.00195312,-0.00000405464,-1,-0.00000160456,0.00229024,-0.00000385661,-1,-0.00000151042,0.00248976,-0.00000367323,-1,-0.00000142391,0.00258374,-0.00000350421,-1,-0.00000134472,0.00284714,-0.0000033489,-1,-0.00000127241,0.00292969,-0.00000320648,-1,-0.00000120645,0.00316442,-0.00000307603,-1,-0.00000114633,0.00345267,-0.00000295659,-1,-0.00000109154,0.00358812,-0.00000284724,-1,-0.00000104156,0.00384473,-0.0000027471,-1,-9.95959e-7,0.00408525,-0.00000265536,-1,-9.54304e-7,0.00431238,-0.00000257124,-1,-9.16216e-7,0.00458049,-0.00000249407,-1,-8.81351e-7,0.00473406,-0.00000242322,-1,-8.49401e-7,0.00502716,-0.00000235813,-1,-8.2009e-7,0.00525895,-0.0000022983,-1,-7.93172e-7,0.00552427,-0.00000224327,-1,-7.68428e-7,0.00573601,-0.00000219264,-1,-7.45662e-7,0.0059802,-0.00000214605,-1,-7.24702e-7,0.00621481,-0.00000210318,-1,-7.05393e-7,0.00640375,-0.00000206375,-1,-6.87598e-7,0.00669498,-0.00000202749,-1,-6.71195e-7,0.00687073,-0.00000199419,-1,-6.56077e-7,0.00710949,-0.00000196364,-1,-6.42148e-7,0.00734048,-0.00000193568,-1,-6.29322e-7,0.00750112,-0.00000191014,-1,-6.17525e-7,0.00772041,-0.00000188689,-1,-6.06691e-7,0.00793364,-0.00000186581,-1,-5.9676e-7,0.00811194,-0.0000018468,-1,-5.87683e-7,0.00822867,-0.00000182978,-1,-5.79416e-7,0.00840071,-0.00000181468,-1,-5.71919e-7,0.00856931,-0.00000180143,-1,-5.65163e-7,0.00867988,-0.00000179001,-1,-5.5912e-7,0.00881615,-0.00000178037,-1,-5.5377e-7,0.00892367,-0.00000177251,-1,-5.49098e-7,0.00902991,-0.00000176643,-1,-5.45093e-7,0.00910878,-0.00000176214,-1,-5.41751e-7,0.00918697,-0.00000175966,-1,-5.39072e-7,0.00923872,-0.00000175906,-1,-5.37065e-7,0.00929019,-0.00000176039,-1,-5.35742e-7,0.00929019,-0.00000176374,-1,-5.35124e-7,0.00926449,-0.00000176923,-1,-5.35239e-7,0.00923872,-0.000001777,-1,-5.36126e-7,0.00921288,-0.00000178722,-1,-5.37834e-7,0.00913491,-0.00000180011,-1,-5.40422e-7,0.00905628,-0.00000181594,-1,-5.43971e-7,0.00897695,-0.00000183169,-1,-5.47719e-7,0.00887008,-0.00000184969,-1,-5.52148e-7,0.00873465,-0.00000187009,-1,-5.57293e-7,0.00859709,-0.00000189306,-1,-5.63201e-7,0.00845729,-0.00000191881,-1,-5.69928e-7,0.00828641,-0.00000194759,-1,-5.77543e-7,0.00811194,-0.0000019797,-1,-5.86129e-7,0.00790353,-0.0000020155,-1,-5.95784e-7,0.0076584,-0.00000205541,-1,-6.06628e-7,0.00743728,-0.00000209996,-1,-6.18806e-7,0.00724239,-0.00000214975,-1,-6.32491e-7,0.00700816,-0.00000220556,-1,-6.47897e-7,0.0067305,-0.00000226829,-1,-6.65282e-7,0.00644087,-0.00000233909,-1,-6.84968e-7,0.00617633,-0.00000241938,-1,-7.07356e-7,0.00589993,-0.00000251094,-1,-7.32952e-7,0.00560993,-0.00000261608,-1,-7.62404e-7,0.00525895,-0.00000273775,-1,-7.96552e-7,0.0049314,-0.0000028799,-1,-8.36507e-7,0.00463224,-0.00000304782,-1,-8.83772e-7,0.00431238,-0.00000324885,-1,-9.40419e-7,0.00396682,-0.0000034934,-1,-0.0000010094,0.00352105,-0.00000379682,-1,-0.00000109505,0.00316442,-0.00000418264,-1,-0.00000120404,0.00292969,-0.00000468892,-1,-0.00000134714,0.00239208,-0.00000538147,-1,-0.00000154298,0.00218366,-0.00000638472,-1,-0.00000182678,0.00169146,-0.00000796585,-1,-0.00000227417,0.00138107,-0.0000108215,-1,-0.00000308237,0.000690534,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,-0.00000905768,1,-0.00000254581,0.000690534,-0.00000624805,1,-0.00000175061,0.00138107,-0.00000468568,1,-0.00000130847,0.00182698,-0.00000369171,1,-0.00000102723,0.00218366,-0.00000300429,1,-8.32752e-7,0.00248976,-0.00000250098,1,-6.90393e-7,0.00292969,-0.00000211691,1,-5.8178e-7,0.00345267,-0.00000181447,1,-4.9627e-7,0.00384473,-0.00000157037,1,-4.2727e-7,0.00420035,-0.00000136942,1,-3.70478e-7,0.00452814,-0.00000120127,1,-3.22968e-7,0.0049314,-0.00000105866,1,-2.82681e-7,0.00534885,-9.36319e-7,1,-2.48126e-7,0.00573601,-8.30334e-7,1,-2.18196e-7,0.0061376,-7.37747e-7,1,-1.92054e-7,0.00651449,-6.56275e-7,1,-1.69054e-7,0.00687073,-5.84132e-7,1,-1.48689e-7,0.00720939,-5.19895e-7,1,-1.30557e-7,0.00756443,-4.62425e-7,1,-1.14335e-7,0.00793364,-4.10792e-7,1,-9.97612e-8,0.00825759,-3.64235e-7,1,-8.66189e-8,0.00862477,-3.22124e-7,1,-7.47299e-8,0.00895035,-2.83932e-7,1,-6.3945e-8,0.00923872,-2.49217e-7,1,-5.41392e-8,0.00954338,-2.17606e-7,1,-4.52065e-8,0.00986281,-1.88781e-7,1,-3.70569e-8,0.0101487,-1.6247e-7,1,-2.96136e-8,0.010404,-1.38441e-7,1,-2.28104e-8,0.0106977,-1.16494e-7,1,-1.65907e-8,0.0109619,-9.64571e-8,1,-1.09054e-8,0.0111986,-7.81805e-8,1,-5.71213e-9,0.0114304,-6.15357e-8,1,-9.74291e-10,0.0116371,-4.64117e-8,1,3.33986e-9,0.0118402,-3.27129e-8,1,7.25771e-9,0.0120597,-2.03569e-8,1,1.08028e-8,0.0122363,-9.27398e-9,1,1.39954e-8,0.0123912,5.90582e-10,1,1.68512e-8,0.0125442,8.52874e-9,1,1.91562e-8,0.0126577,1.5921e-8,1,2.13027e-8,0.0127889,2.27999e-8,1,2.33001e-8,0.0128818,2.91951e-8,1,2.51571e-8,0.0130107,3.51342e-8,1,2.68816e-8,0.013102,4.06422e-8,1,2.84809e-8,0.0131927,4.57424e-8,1,2.99619e-8,0.0132647,5.04562e-8,1,3.13306e-8,0.0133722,5.48036e-8,1,3.2593e-8,0.0134255,5.88028e-8,1,3.37542e-8,0.013514,6.2471e-8,1,3.48194e-8,0.0135844,6.58241e-8,1,3.5793e-8,0.013637,6.88771e-8,1,3.66795e-8,0.0136893,7.16435e-8,1,3.74828e-8,0.0137415,7.41365e-8,1,3.82067e-8,0.0138107,7.63682e-8,1,3.88547e-8,0.0138452,7.83499e-8,1,3.94301e-8,0.0138968,8.00923e-8,1,3.99361e-8,0.0139139,8.16055e-8,1,4.03755e-8,0.0139652,8.2899e-8,1,4.07511e-8,0.0139823,8.39818e-8,1,4.10655e-8,0.0139993,8.48624e-8,1,4.13212e-8,0.0139993,8.55489e-8,1,4.15205e-8,0.0140163,8.6049e-8,1,4.16657e-8,0.0140333,8.637e-8,1,4.1759e-8,0.0140503,8.65189e-8,1,4.18022e-8,0.0140333,8.65024e-8,1,4.17974e-8,0.0140333,8.63271e-8,1,4.17465e-8,0.0140333,8.5999e-8,1,4.16513e-8,0.0140333,8.55242e-8,1,4.15134e-8,0.0140163,8.49086e-8,1,4.13347e-8,0.0139993,8.41577e-8,1,4.11166e-8,0.0139652,8.32769e-8,1,4.08609e-8,0.0139652,8.22718e-8,1,4.0569e-8,0.0139139,8.11475e-8,1,4.02426e-8,0.0139139,7.99092e-8,1,3.9883e-8,0.0138624,7.8562e-8,1,3.94919e-8,0.0138452,7.71109e-8,1,3.90705e-8,0.0137761,7.5561e-8,1,3.86205e-8,0.0137415,7.39172e-8,1,3.81432e-8,0.0137067,7.21844e-8,1,3.76401e-8,0.0136719,7.03677e-8,1,3.71126e-8,0.0136195,6.84721e-8,1,3.65621e-8,0.0135669,6.65025e-8,1,3.59902e-8,0.013514,6.44642e-8,1,3.53984e-8,0.013461,6.23621e-8,1,3.4788e-8,0.0134078,6.02015e-8,1,3.41607e-8,0.0133365,5.79878e-8,1,3.35179e-8,0.0132827,5.57264e-8,1,3.28613e-8,0.0132107,5.34228e-8,1,3.21924e-8,0.0131565,5.10828e-8,1,3.15129e-8,0.0130655,4.8712e-8,1,3.08245e-8,0.013029,4.63166e-8,1,3.0129e-8,0.0129372,4.39026e-8,1,2.9428e-8,0.0128818,4.14764e-8,1,2.87236e-8,0.0128075,3.90446e-8,1,2.80175e-8,0.0127328,3.6614e-8,1,2.73117e-8,0.0126577,3.41914e-8,1,2.66082e-8,0.0125821,3.17842e-8,1,2.59093e-8,0.012487,2.93997e-8,1,2.52169e-8,0.0124104,2.70459e-8,1,2.45334e-8,0.0123334,2.47306e-8,1,2.38612e-8,0.0122752,2.24621e-8,1,2.32025e-8,0.0121973,2.02492e-8,1,2.25599e-8,0.0120992,1.81007e-8,1,2.19361e-8,0.0120201,1.60258e-8,1,2.13336e-8,0.0119205,1.40341e-8,1,2.07553e-8,0.0118402,1.21355e-8,1,2.0204e-8,0.0117594,1.03403e-8,1,1.96828e-8,0.011678,8.65916e-9,1,1.91946e-8,0.0115961,7.10294e-9,1,1.87427e-8,0.0115342,5.68304e-9,1,1.83304e-8,0.0114512,4.41117e-9,1,1.79611e-8,0.0113676,3.2994e-9,1,1.76383e-8,0.0112834,2.36018e-9,1,1.73656e-8,0.0111986,1.60633e-9,1,1.71467e-8,0.0111131,1.05104e-9,1,1.69855e-8,0.011027,7.07838e-10,1,1.68858e-8,0.0109619,5.90605e-10,1,1.68518e-8,0.0108746,5.90605e-10,1,1.68518e-8,0.0108526,5.90605e-10,1,1.68518e-8,0.0108306,5.90605e-10,1,1.68518e-8,0.0107865,5.90605e-10,1,1.68518e-8,0.0107644,5.90605e-10,1,1.68518e-8,0.0107422,5.90605e-10,1,1.68518e-8,0.01072,5.90605e-10,1,1.68518e-8,0.0106531,5.90605e-10,1,1.68518e-8,0.0106531,5.90605e-10,1,1.68518e-8,0.0106082,5.90606e-10,1,1.68518e-8,0.0105857,5.90606e-10,1,1.68518e-8,0.0105632,5.90606e-10,1,1.68518e-8,0.0105406,5.90606e-10,1,1.68518e-8,0.0104952,5.90606e-10,1,1.68518e-8,0.0104725,5.90606e-10,1,1.68518e-8,0.0104268,5.90606e-10,1,1.68518e-8,0.010404,5.90606e-10,1,1.68518e-8,0.010358,5.90606e-10,1,1.68518e-8,0.010335,5.90606e-10,1,1.68518e-8,0.0102655,5.90606e-10,1,1.68518e-8,0.0102655,5.90606e-10,1,1.68518e-8,0.010219,5.90606e-10,1,1.68518e-8,0.0101956,5.90606e-10,1,1.68518e-8,0.0101252,5.90606e-10,1,1.68518e-8,0.0101252,5.90606e-10,1,1.68518e-8,0.010078,5.90606e-10,1,1.68518e-8,0.0100068,5.90606e-10,1,1.68518e-8,0.0100068,5.90606e-10,1,1.68518e-8,0.00995903,5.90606e-10,1,1.68518e-8,0.00993506,5.90606e-10,1,1.68518e-8,0.00986281,5.90607e-10,1,1.68518e-8,0.0098386,5.90606e-10,1,1.68518e-8,0.00981434,5.90607e-10,1,1.68518e-8,0.00974119,5.90607e-10,1,1.68518e-8,0.00969212,5.90607e-10,1,1.68518e-8,0.00969212,5.90607e-10,1,1.68518e-8,0.00961803,5.90607e-10,1,1.68518e-8,0.00956833,5.90607e-10,1,1.68518e-8,0.00954338,5.90607e-10,1,1.68518e-8,0.00949328,5.90607e-10,1,1.68518e-8,0.00944292,5.90607e-10,1,1.68518e-8,0.00941764,5.90607e-10,1,1.68518e-8,0.00936687,5.90607e-10,1,1.68518e-8,0.00931582,5.90607e-10,1,1.68518e-8,0.00929019,5.90607e-10,1,1.68518e-8,0.00926449,5.90607e-10,1,1.68518e-8,0.00921288,5.90607e-10,1,1.68519e-8,0.00916098,5.90607e-10,1,1.68519e-8,0.00908256,5.90607e-10,1,1.68519e-8,0.00908256,5.90607e-10,1,1.68519e-8,0.00902991,5.90607e-10,1,1.68519e-8,0.00895035,5.90607e-10,1,1.68519e-8,0.00892367,5.90607e-10,1,1.68519e-8,0.00887008,5.90607e-10,1,1.68519e-8,0.00881615,5.90607e-10,1,1.68519e-8,0.00878907,5.90607e-10,1,1.68519e-8,0.0087619,5.90607e-10,1,1.68519e-8,0.00867988,5.90607e-10,1,1.68519e-8,0.00865237,5.90607e-10,1,1.68519e-8,0.00856931,5.90607e-10,1,1.68519e-8,0.00854144,5.90607e-10,1,1.68519e-8,0.00851348,5.90607e-10,1,1.68519e-8,0.00842905,5.90607e-10,1,1.68519e-8,0.00837229,5.90608e-10,1,1.68519e-8,0.00837229,5.90608e-10,1,1.68519e-8,0.00828641,5.90608e-10,1,1.68519e-8,0.00822867,5.90608e-10,1,1.68519e-8,0.00819964,5.90608e-10,1,1.68519e-8,0.00814128,5.90608e-10,1,1.68519e-8,0.00811194,5.90608e-10,1,1.68519e-8,0.00805295,5.90608e-10,1,1.68519e-8,0.00796363,5.90608e-10,1,1.68519e-8,0.00796363,5.90608e-10,1,1.68519e-8,0.0078733,5.90608e-10,1,1.68519e-8,0.0078125,5.90608e-10,1,1.68519e-8,0.0078125,5.90608e-10,1,1.68519e-8,0.00772041,5.90608e-10,1,1.68519e-8,0.0076584,5.90608e-10,1,1.68519e-8,0.00759588,5.90608e-10,1,1.68519e-8,0.00759588,5.90608e-10,1,1.68519e-8,0.00753284,5.90608e-10,1,1.68519e-8,0.00746927,5.90608e-10,1,1.68519e-8,0.00740516,5.90608e-10,1,1.68519e-8,0.00737289,5.90608e-10,1,1.68519e-8,0.00734048,5.90608e-10,1,1.68519e-8,0.00727523,5.90608e-10,1,1.68519e-8,0.00717624,5.90608e-10,1,1.68519e-8,0.00717624,5.90608e-10,1,1.68519e-8,0.00710949,5.90608e-10,1,1.68519e-8,0.00700816,5.90608e-10,1,1.68519e-8,0.00697405,5.90608e-10,1,1.68519e-8,0.00693978,5.90608e-10,1,1.68519e-8,0.00687073,5.90608e-10,1,1.68519e-8,0.00680097,5.90608e-10,1,1.68519e-8,0.00676583,5.90608e-10,1,1.68519e-8,0.0067305,5.90608e-10,1,1.68519e-8,0.00665927,5.90608e-10,1,1.68519e-8,0.00658728,5.90608e-10,1,1.68519e-8,0.00655098,5.90608e-10,1,1.68519e-8,0.00651449,5.90608e-10,1,1.68519e-8,0.00644087,5.90608e-10,1,1.68519e-8,0.00640375,5.90608e-10,1,1.68519e-8,0.00629107,5.90608e-10,1,1.68519e-8,0.00629107,5.90608e-10,1,1.68519e-8,0.00617633,5.90608e-10,1,1.68519e-8,0.00617633,5.90608e-10,1,1.68519e-8,0.0061376,5.90608e-10,1,1.68519e-8,0.00605941,5.90608e-10,1,1.68519e-8,0.00601994,5.90608e-10,1,1.68519e-8,0.0059402,5.90608e-10,1,1.68519e-8,0.00589993,5.90608e-10,1,1.68519e-8,0.00585938,5.90608e-10,1,1.68519e-8,0.00573601,5.90608e-10,1,1.68519e-8,0.00573601,5.90608e-10,1,1.68519e-8,0.00569429,5.90608e-10,1,1.68519e-8,0.00556726,5.90608e-10,1,1.68519e-8,0.00556726,5.90608e-10,1,1.68519e-8,0.00552427,5.90608e-10,1,1.68519e-8,0.00539324,5.90608e-10,1,1.68519e-8,0.00539324,5.90608e-10,1,1.68519e-8,0.00530409,5.90608e-10,1,1.68519e-8,0.00530409,5.90608e-10,1,1.68519e-8,0.00516748,5.90608e-10,1,1.68519e-8,0.00512114,5.90608e-10,1,1.68519e-8,0.00507437,5.90608e-10,1,1.68519e-8,0.00507437,5.90608e-10,1,1.68519e-8,0.00502716,5.90608e-10,1,1.68519e-8,0.00488281,5.90608e-10,1,1.68519e-8,0.00483374,5.90608e-10,1,1.68519e-8,0.00478416,5.90608e-10,1,1.68519e-8,0.00478416,5.90608e-10,1,1.68519e-8,0.00473406,5.90608e-10,1,1.68519e-8,0.00468343,5.90608e-10,1,1.68519e-8,0.00458049,5.90608e-10,1,1.68519e-8,0.00458049,5.90609e-10,1,1.68519e-8,0.00452814,5.90609e-10,1,1.68519e-8,0.00447517,5.90608e-10,1,1.68519e-8,0.00442158,5.90608e-10,1,1.68519e-8,0.00436732,5.90608e-10,1,1.68519e-8,0.00425674,5.90608e-10,1,1.68519e-8,0.00420035,5.90608e-10,1,1.68519e-8,0.00420035,5.90608e-10,1,1.68519e-8,0.00408525,5.90608e-10,1,1.68519e-8,0.00408525,5.90609e-10,1,1.68519e-8,0.00402647,5.90608e-10,1,1.68519e-8,0.00390625,5.90608e-10,1,1.68519e-8,0.00384473,5.90608e-10,1,1.68519e-8,0.00378221,5.90608e-10,1,1.68519e-8,0.00371864,5.90608e-10,1,1.68519e-8,0.00371864,5.90608e-10,1,1.68519e-8,0.00371864,5.90608e-10,1,1.68519e-8,0.00365396,5.90608e-10,1,1.68519e-8,0.00352105,5.90608e-10,1,1.68519e-8,0.00345267,5.90608e-10,1,1.68519e-8,0.00352105,5.90608e-10,1,1.68519e-8,0.00345267,5.90608e-10,1,1.68519e-8,0.00338291,5.90608e-10,1,1.68519e-8,0.00331169,5.90608e-10,1,1.68519e-8,0.00323889,5.90608e-10,1,1.68519e-8,0.00316442,5.90608e-10,1,1.68519e-8,0.00316442,5.90608e-10,1,1.68519e-8,0.00308816,5.90608e-10,1,1.68519e-8,0.00300997,5.90608e-10,1,1.68519e-8,0.00300997,5.90608e-10,1,1.68519e-8,0.00300997,5.90608e-10,1,1.68519e-8,0.00284714,5.90608e-10,1,1.68519e-8,0.00276214,5.90608e-10,1,1.68519e-8,0.00284714,5.90608e-10,1,1.68519e-8,0.00276214,5.90608e-10,1,1.68519e-8,0.00276214,5.90608e-10,1,1.68519e-8,0.00267443,5.90608e-10,1,1.68519e-8,0.00248976,5.90608e-10,1,1.68519e-8,0.00258374,5.90608e-10,1,1.68519e-8,0.00248976,5.90608e-10,1,1.68519e-8,0.00239208,5.90608e-10,1,1.68519e-8,0.00229024,5.90608e-10,1,1.68519e-8,0.00229024,5.90608e-10,1,1.68519e-8,0.00218366,5.90608e-10,1,1.68519e-8,0.00218366,5.90608e-10,1,1.68519e-8,0.00229024,5.90608e-10,1,1.68519e-8,0.0020716,5.90608e-10,1,1.68519e-8,0.00218366,5.90608e-10,1,1.68519e-8,0.0020716,5.90608e-10,1,1.68519e-8,0.0020716,5.90608e-10,1,1.68519e-8,0.0020716,5.90608e-10,1,1.68519e-8,0.00195312,5.90608e-10,1,1.68519e-8,0.00182698,5.90608e-10,1,1.68519e-8,0.00169146,5.90608e-10,1,1.68519e-8,0.00169146,5.90608e-10,1,1.68519e-8,0.00169146,5.90608e-10,1,1.68519e-8,0.00169146,5.90608e-10,1,1.68519e-8,0.00169146,5.90608e-10,1,1.68519e-8,0.00169146,5.90608e-10,1,1.68519e-8,0.00169146,5.90608e-10,1,1.68519e-8,0.00154408,5.90608e-10,1,1.68519e-8,0.00154408,5.90608e-10,1,1.68519e-8,0.00138107,5.90608e-10,1,1.68519e-8,0.00138107,5.90608e-10,1,1.68519e-8,0.00138107,5.90608e-10,1,1.68519e-8,0.00119604,5.90608e-10,1,1.68519e-8,0.00119604,5.90607e-10,1,1.68519e-8,0.00119604,5.90608e-10,1,1.68519e-8,0.000976562,5.90607e-10,1,1.68519e-8,0.00119604,5.90607e-10,1,1.68519e-8,0.00119604,5.90607e-10,1,1.68519e-8,0.00119604,5.90607e-10,1,1.68519e-8,0.00119604,5.90607e-10,1,1.68519e-8,0.000690534,5.90607e-10,1,1.68519e-8,0.000976562,5.90607e-10,1,1.68519e-8,0.000976562,5.90607e-10,1,1.68519e-8,0.000976562,5.90607e-10,1,1.68519e-8,0.000690534,5.90607e-10,1,1.68519e-8,0.000690534,5.90607e-10,1,1.68519e-8,0.000690534,5.90607e-10,1,1.68519e-8,0.000690534,5.90607e-10,1,1.68518e-8,0.000690534,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,5.90606e-10,1,1.68518e-8,0.000690534,5.90606e-10,1,1.68518e-8,0.000690534,5.90606e-10,1,1.68518e-8,0.000690534,5.90606e-10,1,1.68518e-8,0.000690534,5.90606e-10,1,1.68518e-8,0.000690534,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0])}),

                                            new OrientationInterpolator({
                                              DEF : new SFString("Polo1ScaleOrientationInterp"),
                                              key : new MFFloat([0,0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.01,0.011,0.012,0.013,0.014,0.015,0.016,0.017,0.018,0.019,0.02,0.021,0.022,0.023,0.024,0.025,0.026,0.027,0.028,0.029,0.03,0.031,0.032,0.033,0.034,0.035,0.036,0.037,0.038,0.039,0.04,0.041,0.042,0.043,0.044,0.045,0.046,0.047,0.048,0.049,0.05,0.051,0.052,0.053,0.054,0.055,0.056,0.057,0.058,0.059,0.06,0.061,0.062,0.0629999,0.064,0.065,0.066,0.067,0.068,0.069,0.07,0.071,0.072,0.073,0.074,0.075,0.076,0.077,0.078,0.079,0.08,0.081,0.082,0.083,0.084,0.085,0.086,0.087,0.088,0.089,0.09,0.091,0.092,0.093,0.094,0.095,0.096,0.097,0.098,0.099,0.1,0.101017,0.102034,0.103051,0.104068,0.105085,0.106102,0.107119,0.108136,0.109153,0.11017,0.111186,0.112203,0.11322,0.114237,0.115254,0.116271,0.117288,0.118305,0.119322,0.120339,0.121356,0.122373,0.12339,0.124407,0.125424,0.126441,0.127458,0.128475,0.129492,0.130509,0.131525,0.132542,0.133559,0.134576,0.135593,0.13661,0.137627,0.138644,0.139661,0.140678,0.141695,0.142712,0.143729,0.144746,0.145763,0.14678,0.147797,0.148814,0.14983,0.150847,0.151864,0.152881,0.153898,0.154915,0.155932,0.156949,0.157966,0.158983,0.16,0.161,0.162,0.163,0.164,0.165,0.166,0.167,0.168,0.169,0.17,0.171,0.172,0.173,0.174,0.175,0.176,0.177,0.178,0.179,0.18,0.181,0.182,0.183,0.184,0.185,0.186,0.187,0.188,0.189,0.19,0.191,0.192,0.193,0.194,0.195,0.196,0.197,0.198,0.199,0.2,0.201,0.202,0.203,0.204,0.205,0.206,0.207,0.208,0.209,0.21,0.211,0.212,0.213,0.214,0.215,0.216,0.217,0.218,0.219,0.22,0.221,0.222,0.223,0.224,0.225,0.226,0.227,0.228,0.229,0.23,0.231,0.232,0.233,0.234,0.235,0.236,0.237,0.238,0.239,0.24,0.241,0.242,0.243,0.244,0.245,0.246056,0.247111,0.248167,0.249222,0.250278,0.251333,0.252389,0.253444,0.2545,0.255556,0.256611,0.257667,0.258722,0.259778,0.260833,0.261889,0.262945,0.264,0.265,0.266,0.267,0.268,0.269,0.27,0.271,0.272,0.273,0.274,0.275,0.276,0.277,0.278,0.279,0.28,0.281,0.282,0.283,0.284,0.285,0.286,0.287,0.288,0.289,0.29,0.291,0.292,0.293,0.294,0.295,0.296,0.297,0.298,0.299,0.3,0.301,0.302,0.302999,0.303999,0.304999,0.305999,0.306999,0.307999,0.308999,0.309999,0.310999,0.311999,0.312999,0.313999,0.314999,0.315999,0.316999,0.317999,0.318999,0.319999,0.320999,0.321999,0.322999,0.323999,0.324999,0.325999,0.326999,0.327999,0.328999,0.329999,0.330999,0.331999,0.332999,0.333999,0.334999,0.335999,0.336999,0.337999,0.338999,0.339999,0.340999,0.341999,0.342999,0.343999,0.344999,0.345999,0.346999,0.347999,0.348999,0.349999,0.350999,0.351999,0.352999,0.353999,0.354999,0.355999,0.356999,0.357999,0.358999,0.359999,0.360999,0.361999,0.362999,0.363999,0.364999,0.365999,0.366999,0.367999,0.368999,0.369999,0.370999,0.371999,0.372999,0.373999,0.374999,0.375999,0.376999,0.377999,0.378999,0.379999,0.380998,0.381998,0.382998,0.383998,0.384998,0.385998,0.386998,0.387998,0.388998,0.389998,0.390998,0.391998,0.392998,0.393998,0.394998,0.395998,0.396998,0.397998,0.398998,0.399998,0.400998,0.401998,0.402998,0.403998,0.404998,0.405998,0.406998,0.407998,0.408998,0.409998,0.410998,0.411998,0.412998,0.413998,0.414998,0.415998,0.416998,0.417998,0.418998,0.419998,0.420998,0.421998,0.422998,0.423998,0.424998,0.425998,0.426998,0.427998,0.428998,0.429998,0.430998,0.431998,0.432998,0.433998,0.434998,0.435998,0.436998,0.437998,0.438998,0.439998,0.440998,0.441998,0.442998,0.443998,0.444998,0.445998,0.446998,0.447998,0.448998,0.449998,0.450998,0.451998,0.452998,0.453998,0.454998,0.455998,0.456998,0.457998,0.458997,0.459997,0.460997,0.461997,0.462997,0.463997,0.464997,0.465997,0.466997,0.467997,0.468997,0.469997,0.470997,0.471997,0.472997,0.473997,0.474997,0.475997,0.476997,0.477997,0.478997,0.479997,0.480997,0.481997,0.482997,0.483997,0.484997,0.485997,0.486997,0.487997,0.488997,0.489997,0.490997,0.491997,0.492997,0.493997,0.494997,0.495997,0.496997,0.497997,0.498997,0.499997,0.500997,0.501997,0.502997,0.503997,0.504997,0.505997,0.506997,0.507997,0.508997,0.509997,0.510997,0.511997,0.512997,0.513997,0.514997,0.515997,0.516997,0.517997,0.518997,0.519997,0.520997,0.521997,0.522997,0.524,0.525,0.526,0.527,0.528,0.529,0.53,0.531,0.532,0.533,0.534,0.535,0.536,0.537,0.538,0.539,0.54,0.541,0.542,0.543,0.544,0.545,0.546,0.547,0.548,0.549,0.55,0.551,0.552,0.553,0.554,0.555,0.556,0.557,0.558,0.559,0.56,0.561,0.562,0.563,0.564,0.565,0.566,0.567,0.568,0.569,0.57,0.571,0.572,0.573,0.574,0.575,0.576,0.577,0.578,0.579,0.58,0.581,0.582,0.583,0.584,0.585,0.586,0.587,0.588,0.589,0.589999,0.590999,0.591999,0.592999,0.593999,0.594999,0.595999,0.596999,0.597999,0.598999,0.599999,0.600999,0.601999,0.602999,0.603999,0.604999,0.605999,0.606999,0.607999,0.609,0.610007,0.611013,0.61202,0.613027,0.614033,0.61504,0.616047,0.617053,0.61806,0.619067,0.620073,0.62108,0.622087,0.623093,0.6241,0.625107,0.626113,0.62712,0.628127,0.629133,0.63014,0.631147,0.632153,0.63316,0.634167,0.635173,0.63618,0.637187,0.638193,0.6392,0.640207,0.641213,0.64222,0.643227,0.644233,0.64524,0.646247,0.647253,0.64826,0.649267,0.650273,0.65128,0.652287,0.653293,0.6543,0.655307,0.656313,0.65732,0.658327,0.659333,0.66034,0.661346,0.662353,0.66336,0.664366,0.665373,0.66638,0.667386,0.668393,0.6694,0.670406,0.671413,0.67242,0.673426,0.674433,0.67544,0.676446,0.677453,0.67846,0.679466,0.680473,0.68148,0.682486,0.683493,0.6845,0.685506,0.686513,0.68752,0.688526,0.689533,0.69054,0.691546,0.692553,0.69356,0.694566,0.695573,0.69658,0.697586,0.698593,0.6996,0.700606,0.701613,0.70262,0.703626,0.704633,0.70564,0.706646,0.707653,0.70866,0.709666,0.710673,0.71168,0.712686,0.713693,0.7147,0.715706,0.716713,0.71772,0.718726,0.719733,0.72074,0.721746,0.722753,0.72376,0.724766,0.725773,0.72678,0.727786,0.728793,0.7298,0.730806,0.731813,0.73282,0.733826,0.734833,0.73584,0.736846,0.737853,0.73886,0.739866,0.740873,0.74188,0.742886,0.743893,0.7449,0.745906,0.746913,0.747919,0.748926,0.749933,0.750939,0.751946,0.752953,0.753959,0.754966,0.755973,0.756979,0.757986,0.758993,0.76]),
                                              keyValue : new MFRotation([-1,1.26127e-9,-2.20799e-9,1.13151,-1,1.26127e-9,-2.20799e-9,1.12568,-1,1.26127e-9,-2.20799e-9,1.11952,-1,1.26127e-9,-2.20799e-9,1.11304,-1,1.26127e-9,-2.20799e-9,1.10624,-1,1.26127e-9,-2.20799e-9,1.09912,-1,1.26127e-9,-2.20799e-9,1.0917,-1,1.26127e-9,-2.20799e-9,1.08398,-1,1.26127e-9,-2.20799e-9,1.07597,-1,1.26127e-9,-2.20799e-9,1.06767,-1,1.26127e-9,-2.20799e-9,1.05909,-1,1.26127e-9,-2.20799e-9,1.05025,-1,1.26127e-9,-2.20799e-9,1.04113,-1,1.26127e-9,-2.20799e-9,1.03176,-1,1.26127e-9,-2.20799e-9,1.02214,-1,1.26127e-9,-2.20799e-9,1.01228,-1,1.26127e-9,-2.20799e-9,1.00217,-1,1.26127e-9,-2.20799e-9,0.99184,-1,1.26127e-9,-2.20799e-9,0.981282,-1,1.26127e-9,-2.20799e-9,0.970506,-1,1.26127e-9,-2.20799e-9,0.959521,-1,1.26127e-9,-2.20799e-9,0.948331,-1,1.26127e-9,-2.20799e-9,0.936945,-1,1.26127e-9,-2.20799e-9,0.925368,-1,1.26127e-9,-2.20799e-9,0.913608,-1,1.26127e-9,-2.20799e-9,0.901672,-1,1.26127e-9,-2.20799e-9,0.889566,-1,1.26127e-9,-2.20799e-9,0.877297,-1,1.26127e-9,-2.20799e-9,0.864872,-1,1.26127e-9,-2.20799e-9,0.852297,-1,1.26127e-9,-2.20799e-9,0.83958,-1,1.26127e-9,-2.20799e-9,0.826728,-1,1.26127e-9,-2.20799e-9,0.813746,-1,1.26127e-9,-2.20799e-9,0.800642,-1,1.26127e-9,-2.20799e-9,0.787423,-1,1.26127e-9,-2.20799e-9,0.774094,-1,1.26127e-9,-2.20799e-9,0.760664,-1,1.26127e-9,-2.20799e-9,0.74714,-1,1.26127e-9,-2.20799e-9,0.733527,-1,1.26127e-9,-2.20799e-9,0.719832,-1,1.26127e-9,-2.20799e-9,0.706063,-1,1.26127e-9,-2.20799e-9,0.692225,-1,1.26127e-9,-2.20799e-9,0.678327,-1,1.26127e-9,-2.20799e-9,0.664374,-1,1.26127e-9,-2.20799e-9,0.650374,-1,1.26127e-9,-2.20799e-9,0.636333,-1,1.26127e-9,-2.20799e-9,0.622259,-1,1.26127e-9,-2.20799e-9,0.608156,-1,1.26127e-9,-2.20799e-9,0.594034,-1,1.26127e-9,-2.20799e-9,0.579898,-1,1.26127e-9,-2.20799e-9,0.565756,-1,1.26127e-9,-2.20799e-9,0.551613,-1,1.26127e-9,-2.20799e-9,0.537477,-1,1.26127e-9,-2.20799e-9,0.523354,-1,1.26127e-9,-2.20799e-9,0.509252,-1,1.26127e-9,-2.20799e-9,0.495178,-1,1.26127e-9,-2.20799e-9,0.481137,-1,1.26127e-9,-2.20799e-9,0.467137,-1,1.26127e-9,-2.20799e-9,0.453184,-1,1.26127e-9,-2.20799e-9,0.439286,-1,1.26127e-9,-2.20799e-9,0.425449,-1,1.26127e-9,-2.20799e-9,0.411679,-1,1.26127e-9,-2.20799e-9,0.397985,-1,1.26127e-9,-2.20799e-9,0.384372,-1,1.26127e-9,-2.20799e-9,0.370847,-1,1.26127e-9,-2.20799e-9,0.357416,-1,1.26127e-9,-2.20799e-9,0.344088,-1,1.26127e-9,-2.20799e-9,0.330869,-1,1.26127e-9,-2.20799e-9,0.317765,-1,1.26127e-9,-2.20799e-9,0.304783,-1,1.26127e-9,-2.20799e-9,0.291929,-1,1.26127e-9,-2.20799e-9,0.279213,-1,1.26127e-9,-2.20799e-9,0.266639,-1,1.26127e-9,-2.20799e-9,0.254213,-1,1.26127e-9,-2.20799e-9,0.241945,-1,1.26127e-9,-2.20799e-9,0.229839,-1,1.26127e-9,-2.20799e-9,0.217902,-1,1.26127e-9,-2.20799e-9,0.206142,-1,1.26127e-9,-2.20799e-9,0.194566,-1,1.26127e-9,-2.20799e-9,0.183179,-1,1.26127e-9,-2.20799e-9,0.171989,-1,1.26127e-9,-2.20799e-9,0.161005,-1,1.26127e-9,-2.20799e-9,0.150228,-1,1.26127e-9,-2.20799e-9,0.13967,-1,1.26127e-9,-2.20799e-9,0.129337,-1,1.26127e-9,-2.20799e-9,0.119232,-1,1.26127e-9,-2.20799e-9,0.109367,-1,1.26127e-9,-2.20799e-9,0.0997465,-1,1.26127e-9,-2.20799e-9,0.0903727,-1,1.26127e-9,-2.20799e-9,0.081263,-1,1.26127e-9,-2.20799e-9,0.0724179,-1,1.26127e-9,-2.20799e-9,0.0638388,-1,1.26127e-9,-2.20799e-9,0.0555372,-1,1.26127e-9,-2.20799e-9,0.0475327,-1,1.26127e-9,-2.20799e-9,0.0398128,-1,1.26127e-9,-2.20799e-9,0.0323893,-1,1.26127e-9,-2.20799e-9,0.0252779,-1,1.26127e-9,-2.20799e-9,0.0184646,-1,1.26127e-9,-2.20799e-9,0.0119803,-1,1.26127e-9,-2.20799e-9,0.00581854,0,0,1,0,1,-1.26127e-9,2.20799e-9,0.00926449,1,-1.26127e-9,2.20799e-9,0.0179007,1,-1.26127e-9,2.20799e-9,0.0259205,1,-1.26127e-9,2.20799e-9,0.0333325,1,-1.26127e-9,2.20799e-9,0.0401646,1,-1.26127e-9,2.20799e-9,0.0464212,1,-1.26127e-9,2.20799e-9,0.0521402,1,-1.26127e-9,2.20799e-9,0.0573204,1,-1.26127e-9,2.20799e-9,0.0619815,1,-1.26127e-9,2.20799e-9,0.0661394,1,-1.26127e-9,2.20799e-9,0.0698158,1,-1.26127e-9,2.20799e-9,0.0730213,1,-1.26127e-9,2.20799e-9,0.0757779,1,-1.26127e-9,2.20799e-9,0.0780964,1,-1.26127e-9,2.20799e-9,0.0799971,1,-1.26127e-9,2.20799e-9,0.0814945,1,-1.26127e-9,2.20799e-9,0.0826077,1,-1.26127e-9,2.20799e-9,0.0833521,1,-1.26127e-9,2.20799e-9,0.0837431,1,-1.26127e-9,2.20799e-9,0.0837972,1,-1.26127e-9,2.20799e-9,0.0835321,1,-1.26127e-9,2.20799e-9,0.0829649,1,-1.26127e-9,2.20799e-9,0.0821126,1,-1.26127e-9,2.20799e-9,0.0809866,1,-1.26127e-9,2.20799e-9,0.0796116,1,-1.26127e-9,2.20799e-9,0.0779955,1,-1.26127e-9,2.20799e-9,0.0761608,1,-1.26127e-9,2.20799e-9,0.0741233,1,-1.26127e-9,2.20799e-9,0.071899,1,-1.26127e-9,2.20799e-9,0.0695009,1,-1.26127e-9,2.20799e-9,0.0669493,1,-1.26127e-9,2.20799e-9,0.0642595,1,-1.26127e-9,2.20799e-9,0.0614522,1,-1.26127e-9,2.20799e-9,0.0585388,1,-1.26127e-9,2.20799e-9,0.0555329,1,-1.26127e-9,2.20799e-9,0.0524594,1,-1.26127e-9,2.20799e-9,0.0493297,1,-1.26127e-9,2.20799e-9,0.0461636,1,-1.26127e-9,2.20799e-9,0.0429751,1,-1.26127e-9,2.20799e-9,0.0397769,1,-1.26127e-9,2.20799e-9,0.0365923,1,-1.26127e-9,2.20799e-9,0.0334396,1,-1.26127e-9,2.20799e-9,0.0303209,1,-1.26127e-9,2.20799e-9,0.0272741,1,-1.26127e-9,2.20799e-9,0.0242967,1,-1.26127e-9,2.20799e-9,0.0214178,1,-1.26127e-9,2.20799e-9,0.0186445,1,-1.26127e-9,2.20799e-9,0.016002,1,-1.26127e-9,2.20799e-9,0.0134964,1,-1.26127e-9,2.20799e-9,0.0111559,1,-1.26127e-9,2.20799e-9,0.00900347,1,-1.26127e-9,2.20799e-9,0.00700816,1,-1.26127e-9,2.20799e-9,0.00525895,1,-1.26127e-9,2.20799e-9,0.00371864,1,-1.26127e-9,2.20799e-9,0.00239208,1,-1.26127e-9,2.20799e-9,0.00138107,1,-1.26127e-9,2.20799ee-7,-0.00000132012,0.533454,-1,-9.86689e-7,-0.00000131944,0.525374,-1,-9.79238e-7,-0.00000131874,0.517317,-1,-9.71587e-7,-0.00000131803,0.509284,-1,-9.63729e-7,-0.0000013173,0.501276,-1,-9.55656e-7,-0.00000131655,0.493294,-1,-9.47359e-7,-0.00000131577,0.485337,-1,-9.38829e-7,-0.00000131498,0.477407,-1,-9.30057e-7,-0.00000131416,0.469505,-1,-9.21033e-7,-0.00000131332,0.461632,-1,-9.11746e-7,-0.00000131245,0.453788,-1,-9.02185e-7,-0.00000131156,0.445975,-1,-8.92339e-7,-0.00000131064,0.438192,-1,-8.82195e-7,-0.0000013097,0.430442,-1,-8.7174e-7,-0.00000130872,0.422724,-1,-8.60961e-7,-0.00000130772,0.415039,-1,-8.49842e-7,-0.00000130668,0.407389,-1,-8.38369e-7,-0.00000130561,0.399774,-1,-8.26526e-7,-0.00000130451,0.392194,-1,-8.14294e-7,-0.00000130337,0.384652,-1,-8.01656e-7,-0.00000130219,0.377146,-1,-7.88591e-7,-0.00000130097,0.36968,-1,-7.7508e-7,-0.00000129971,0.362252,-1,-7.611e-7,-0.00000129841,0.354865,-1,-7.46627e-7,-0.00000129706,0.347517,-1,-7.31637e-7,-0.00000129566,0.340212,-1,-7.16103e-7,-0.00000129421,0.332949,-1,-6.99995e-7,-0.00000129271,0.325729,-1,-6.83285e-7,-0.00000129115,0.318552,-1,-6.65938e-7,-0.00000128953,0.311421,-1,-6.4792e-7,-0.00000128785,0.304335,-1,-6.29193e-7,-0.00000128611,0.297296,-1,-6.09718e-7,-0.00000128429,0.290303,-1,-5.8945e-7,-0.0000012824,0.283358,-1,-5.68342e-7,-0.00000128043,0.276463,-1,-5.46345e-7,-0.00000127838,0.269617,-1,-5.23405e-7,-0.00000127624,0.262821,-1,-4.99462e-7,-0.00000127401,0.256075,-1,-4.74452e-7,-0.00000127168,0.249384,-1,-4.48307e-7,-0.00000126924,0.242744,-1,-4.20952e-7,-0.00000126669,0.236156,-1,-3.92306e-7,-0.00000126402,0.229626,-1,-3.6228e-7,-0.00000126122,0.22315,-1,-3.30776e-7,-0.00000125828,0.216728,-1,-2.9769e-7,-0.0000012552,0.210363,-1,-2.62905e-7,-0.00000125195,0.204058,-1,-2.26294e-7,-0.00000124854,0.197811,-1,-1.87717e-7,-0.00000124494,0.19162,-1,-1.47019e-7,-0.00000124115,0.185494,-1,-1.0403e-7,-0.00000123714,0.179425,-1,-5.85611e-8,-0.0000012329,0.17342,-1,-1.04016e-8,-0.00000122841,0.167476,-1,4.06821e-8,-0.00000122365,0.161596,-1,9.4951e-8,-0.00000121859,0.155779,-1,1.52698e-7,-0.0000012132,0.150027,-1,2.14252e-7,-0.00000120746,0.144341,-1,2.79984e-7,-0.00000120133,0.138722,-1,3.50314e-7,-0.00000119478,0.133171,-1,4.25719e-7,-0.00000118775,0.127686,-1,5.06744e-7,-0.00000118019,0.122271,-1,5.94013e-7,-0.00000117205,0.116925,-1,6.88243e-7,-0.00000116327,0.111651,-1,7.90267e-7,-0.00000115375,0.106447,-1,9.01051e-7,-0.00000114342,0.101317,-1,0.00000102173,-0.00000113217,0.096254,-1,0.00000115363,-0.00000111987,0.0912708,-1,0.00000129834,-0.00000110638,0.0863621,-1,0.00000145775,-0.00000109152,0.0815267,-1,0.00000163413,-0.00000107507,0.0767659,-1,0.00000183025,-0.00000105678,0.0720812,-1,0.00000204951,-0.00000103634,0.0674815,-1,0.00000229613,-0.00000101335,0.0629549,-1,0.0000025754,-9.87307e-7,0.0585103,-1,0.00000289408,-9.57593e-7,0.0541415,-1,0.00000326091,-9.23389e-7,0.0498586,-1,0.00000368742,-8.83621e-7,0.0456546,-1,0.00000418909,-8.36845e-7,0.0415305,-1,0.00000478725,-7.81072e-7,0.0374998,-1,0.00000551215,-7.13482e-7,0.0335393,-1,0.00000640804,-6.29948e-7,0.0296772,-1,0.00000754249,-5.24171e-7,0.0258929,-1,0.00000902394,-3.86039e-7,0.0221941,-1,0.0000110382,-1.98231e-7,0.0185933,-1,0.0000139322,7.16104e-8,0.0150657,-1,0.0000184375,4.91695e-7,0.0116371,-1,0.0000264071,0.00000123478,0.00828641,-1,0.0000442978,0.00000290293,0.00502716,-1,0.000120923,0.0000100476,0.00182698,1,0.000193628,0.0000192815,0.00119604,-1,-0.00000918473,-0.00000208109,6.25401,-1,-0.00000562697,-0.00000174629,6.23032,-1,-0.00000441967,-0.00000163039,6.21066,-1,-0.00000381817,-0.00000157069,6.19477,-1,-0.0000034627,-0.00000153361,6.1824,-1,-0.00000323193,-0.00000150778,6.1733,-1,-0.0000030736,-0.00000148829,6.16721,-1,-0.00000296162,-0.00000147263,6.16387,-1,-0.00000288162,-0.00000145938,6.16302,-1,-0.00000282518,-0.00000144766,6.16442,-1,-0.00000278716,-0.00000143687,6.1678,-1,-0.00000276448,-0.00000142657,6.17292,-1,-0.00000275534,-0.0000014164,6.17951,-1,-0.00000275899,-0.00000140603,6.18732,-1,-0.00000277552,-0.00000139513,6.1961,-1,-0.00000280585,-0.00000138333,6.20558,-1,-0.00000285194,-0.00000137018,6.21552,-1,-0.00000291707,-0.00000135508,6.22565,-1,-0.00000300654,-0.00000133719,6.23574,-1,-0.00000312888,-0.00000131523,6.2455,-1,-0.00000329829,-0.00000128716,6.2547,-1,-0.00000353989,-0.00000124946,6.26306,-1,-0.00000390209,-0.00000119535,6.27034,-1,-0.00000449127,-0.00000111009,6.27628,-1,-0.00000559444,-9.53906e-7,6.2806,0,0,1,0,-1,-0.0000115025,-5.74175e-7,0.000690534,0,0,1,0,-1,-0.0000381696,-6.05489e-7,0.000690534,0,0,1,0,1,-0.000035615,5.25169e-7,0.000976562,1,-0.0000189063,5.44692e-7,0.00169146,1,-0.0000131218,5.52098e-7,0.00316442,1,-0.0000101972,5.56363e-7,0.00463224,1,-0.00000843872,5.59372e-7,0.00636641,1,-0.00000727004,5.61771e-7,0.00825759,1,-0.00000644122,5.63841e-7,0.010335,1,-0.00000582638,5.65726e-7,0.0125442,1,-0.00000535522,5.67509e-7,0.0148906,1,-0.00000498547,5.69241e-7,0.0173461,1,-0.00000469016,5.70957e-7,0.0198822,1,-0.00000445135,5.72684e-7,0.0225035,1,-0.00000425664,5.74442e-7,0.0251644,1,-0.00000409721,5.76247e-7,0.0278537,1,-0.00000396668,5.78115e-7,0.0305559,1,-0.00000386031,5.8006e-7,0.0332537,1,-0.00000377457,5.82097e-7,0.0359215,1,-0.00000370679,5.84239e-7,0.0385408,1,-0.00000365497,5.86504e-7,0.0410918,1,-0.00000361762,5.88907e-7,0.0435538,1,-0.00000359367,5.91468e-7,0.0459098,1,-0.00000358236,5.94207e-7,0.0481408,1,-0.00000358327,5.97148e-7,0.0502302,1,-0.00000359623,6.00319e-7,0.0521494,1,-0.00000362132,6.03753e-7,0.0538854,1,-0.00000365888,6.07487e-7,0.0554126,1,-0.00000370953,6.11566e-7,0.0567224,1,-0.00000377419,6.16045e-7,0.0577845,1,-0.00000385414,6.20987e-7,0.0585836,1,-0.00000395107,6.26475e-7,0.0590983,1,-0.00000406722,6.32605e-7,0.0593158,1,-0.00000420548,6.39501e-7,0.0592071,1,-0.00000436965,6.47322e-7,0.0587584,1,-0.00000456471,6.5627e-7,0.0579452,1,-0.00000479731,6.66613e-7,0.0567561,1,-0.00000507644,6.78707e-7,0.0551624,1,-0.00000541449,6.93044e-7,0.0531547,1,-0.00000582908,7.10318e-7,0.0507027,1,-0.00000634592,7.3154e-7,0.0477879,1,-0.00000700415,7.58246e-7,0.0443996,1,-0.00000786628,7.92885e-7,0.0405133,1,-0.00000903858,8.39619e-7,0.0361069,1,-0.0000107175,9.0614e-7,0.0311663,1,-0.0000133109,0.00000100841,0.025671,1,-0.0000178267,0.00000118588,0.0195923,1,-0.0000276183,0.00000156978,0.0129187,1,-0.0000646955,0.00000302144,0.00565227,-1,-0.000162232,0.00000585851,0.00229024,-1,-0.0000348882,8.74397e-7,0.0108746,-1,-0.0000192129,2.60354e-7,0.0201206,-1,-0.000013101,2.05916e-8,0.0300683,-1,-0.00000985041,-1.07173e-7,0.0407305,-1,-0.00000783544,-1.86563e-7,0.0521219,-1,-0.00000646568,-2.40683e-7,0.064267,-1,-0.00000547445,-2.79971e-7,0.0771965,-1,-0.00000515437,-2.9268e-7,0.0825268,-1,-0.00000486281,-3.04257e-7,0.0880495,-1,-0.00000459661,-3.14827e-7,0.0937586,-1,-0.00000435303,-3.24498e-7,0.0996508,-1,-0.00000412965,-3.33368e-7,0.105727,-1,-0.00000392436,-3.41519e-7,0.111981,-1,-0.0000037353,-3.49026e-7,0.118411,-1,-0.00000356085,-3.55953e-7,0.125017,-1,-0.00000339955,-3.62357e-7,0.131793,-1,-0.00000325014,-3.6829e-7,0.138739,-1,-0.00000311149,-3.73795e-7,0.145853,-1,-0.0000029826,-3.78913e-7,0.153127,-1,-0.00000286258,-3.83678e-7,0.160565,-1,-0.00000275063,-3.88123e-7,0.168162,-1,-0.00000264606,-3.92276e-7,0.175913,-1,-0.00000254822,-3.9616e-7,0.183818,-1,-0.00000245654,-3.998e-7,0.191876,-1,-0.00000237053,-4.03216e-7,0.20008,-1,-0.00000228972,-4.06424e-7,0.20843,-1,-0.00000221369,-4.09443e-7,0.216924,-1,-0.00000214208,-4.12287e-7,0.225556,-1,-0.00000207454,-4.14968e-7,0.23433,-1,-0.00000201077,-4.17501e-7,0.243236,-1,-0.00000195048,-4.19894e-7,0.252276,-1,-0.00000189343,-4.22159e-7,0.261447,-1,-0.00000183939,-4.24305e-7,0.270745,-1,-0.00000178814,-4.2634e-7,0.28017,-1,-0.00000173949,-4.28272e-7,0.289715,-1,-0.00000169326,-4.30107e-7,0.299379,-1,-0.0000016493,-4.31853e-7,0.309162,-1,-0.00000160746,-4.33514e-7,0.319061,-1,-0.00000156759,-4.35097e-7,0.32907,-1,-0.00000152957,-4.36607e-7,0.339189,-1,-0.0000014933,-4.38047e-7,0.349415,-1,-0.00000145865,-4.39423e-7,0.359745,-1,-0.00000142553,-4.40738e-7,0.370177,-1,-0.00000139386,-4.41996e-7,0.380708,-1,-0.00000136354,-4.43199e-7,0.391336,-1,-0.00000133449,-4.44353e-7,0.402057,-1,-0.00000130666,-4.45458e-7,0.412871,-1,-0.00000127996,-4.46518e-7,0.423773,-1,-0.00000125433,-4.47536e-7,0.434761,-1,-0.00000122972,-4.48513e-7,0.445833,-1,-0.00000120607,-4.49452e-7,0.456986,-1,-0.00000118333,-4.50355e-7,0.468217,-1,-0.00000116145,-4.51223e-7,0.479524,-1,-0.00000114039,-4.5206e-7,0.490905,-1,-0.00000112011,-4.52865e-7,0.502356,-1,-0.00000110056,-4.53641e-7,0.513875,-1,-0.00000108172,-4.54389e-7,0.525461,-1,-0.00000106354,-4.55111e-7,0.537109,-1,-0.000001046,-4.55808e-7,0.548817,-1,-0.00000102906,-4.5648e-7,0.560583,-1,-0.0000010127,-4.5713e-7,0.572404,-1,-9.96885e-7,-4.57758e-7,0.584278,-1,-9.81597e-7,-4.58365e-7,0.596202,-1,-9.66809e-7,-4.58952e-7,0.608173,-1,-9.52499e-7,-4.5952e-7,0.620189,-1,-9.38646e-7,-4.6007e-7,0.632247,-1,-9.2523e-7,-4.60603e-7,0.644345,-1,-9.12233e-7,-4.61119e-7,0.65648,-1,-8.99637e-7,-4.61619e-7,0.66865,-1,-8.87425e-7,-4.62104e-7,0.680852,-1,-8.75581e-7,-4.62574e-7,0.693083,-1,-8.6409e-7,-4.63031e-7,0.70534,-1,-8.52938e-7,-4.63473e-7,0.717622,-1,-8.42111e-7,-4.63903e-7,0.729925,-1,-8.31597e-7,-4.64321e-7,0.742247,-1,-8.21382e-7,-4.64726e-7,0.754586,-1,-8.11457e-7,-4.6512e-7,0.766939,-1,-8.01809e-7,-4.65503e-7,0.779302,-1,-7.92429e-7,-4.65876e-7,0.791674,-1,-7.83306e-7,-4.66238e-7,0.804053,-1,-7.74431e-7,-4.66591e-7,0.816435,-1,-7.65796e-7,-4.66933e-7,0.828817,-1,-7.5739e-7,-4.67267e-7,0.841198,-1,-7.49207e-7,-4.67592e-7,0.853575,-1,-7.41239e-7,-4.67909e-7,0.865945,-1,-7.33478e-7,-4.68217e-7,0.878305,-1,-7.25917e-7,-4.68517e-7,0.890654,-1,-7.1855e-7,-4.68809e-7,0.902987,-1,-7.1137e-7,-4.69095e-7,0.915304,-1,-7.0437e-7,-4.69372e-7,0.9276,-1,-6.97546e-7,-4.69643e-7,0.939874,-1,-6.90891e-7,-4.69908e-7,0.952123,-1,-6.84401e-7,-4.70165e-7,0.964345,-1,-6.78069e-7,-4.70417e-7,0.976536,-1,-6.71892e-7,-4.70662e-7,0.988695,-1,-6.65865e-7,-4.70901e-7,1.00082,-1,-6.59982e-7,-4.71135e-7,1.0129,-1,-6.54241e-7,-4.71363e-7,1.02495,-1,-6.48636e-7,-4.71585e-7,1.03695,-1,-6.43164e-7,-4.71803e-7,1.04891,-1,-6.37822e-7,-4.72015e-7,1.06081,-1,-6.32605e-7,-4.72222e-7,1.07267,-1,-6.2751e-7,-4.72424e-7,1.08447,-1,-6.22534e-7,-4.72622e-7,1.09622,-1,-6.17674e-7,-4.72815e-7,1.10791,-1,-6.12926e-7,-4.73003e-7,1.11954,-1,-6.08289e-7,-4.73188e-7,1.1311,-1,-6.03759e-7,-4.73367e-7,1.1426,-1,-5.99333e-7,-4.73543e-7,1.15403,-1,-5.95009e-7,-4.73715e-7,1.16539,-1,-5.90785e-7,-4.73882e-7,1.17667,-1,-5.86659e-7,-4.74046e-7,1.18787,-1,-5.82627e-7,-4.74206e-7,1.199,-1,-5.78688e-7,-4.74363e-7,1.21005,-1,-5.7484e-7,-4.74516e-7,1.22101,-1,-5.71081e-7,-4.74665e-7,1.23188,-1,-5.67409e-7,-4.74811e-7,1.24266,-1,-5.63822e-7,-4.74953e-7,1.25335,-1,-5.6032e-7,-4.75092e-7,1.26395,-1,-5.56899e-7,-4.75228e-7,1.27445,-1,-5.53558e-7,-4.75361e-7,1.28485,-1,-5.50296e-7,-4.7549e-7,1.29515,-1,-5.47112e-7,-4.75617e-7,1.30534,-1,-5.44004e-7,-4.7574e-7,1.31542,-1,-5.40971e-7,-4.7586e-7,1.32539,-1,-5.38012e-7,-4.75978e-7,1.33525,-1,-5.35125e-7,-4.76093e-7,1.345,-1,-5.32309e-7,-4.76204e-7,1.35463,-1,-5.29564e-7,-4.76313e-7,1.36413,-1,-5.26888e-7,-4.7642e-7,1.37351,-1,-5.2428e-7,-4.76523e-7,1.38277,-1,-5.21739e-7,-4.76624e-7,1.3919,-1,-5.19265e-7,-4.76722e-7,1.4009,-1,-5.16857e-7,-4.76818e-7,1.40976,-1,-5.14513e-7,-4.76911e-7,1.41849,-1,-5.12234e-7,-4.77001e-7,1.42708,-1,-5.10019e-7,-4.77089e-7,1.43552,-1,-5.07866e-7,-4.77175e-7,1.44383,-1,-5.05775e-7,-4.77258e-7,1.45198,-1,-5.03747e-7,-4.77338e-7,1.45999,-1,-5.01779e-7,-4.77417e-7,1.46785,-1,-4.99872e-7,-4.77492e-7,1.47555,-1,-4.98026e-7,-4.77566e-7,1.48309,-1,-4.96239e-7,-4.77637e-7,1.49048,-1,-4.94512e-7,-4.77705e-7,1.4977,-1,-4.92844e-7,-4.77771e-7,1.50476,-1,-4.91236e-7,-4.77835e-7,1.51165,-1,-4.89685e-7,-4.77897e-7,1.51837,-1,-4.88193e-7,-4.77956e-7,1.52492,-1,-4.8676e-7,-4.78013e-7,1.53129,-1,-4.85384e-7,-4.78068e-7,1.53749,-1,-4.84067e-7,-4.7812e-7,1.54351,-1,-4.82807e-7,-4.7817e-7,1.54934,-1,-4.81606e-7,-4.78218e-7,1.55499,-1,-4.80462e-7,-4.78263e-7,1.56045,-1,-4.79376e-7,-4.78306e-7,1.56572,1,4.78347e-7,4.78347e-7,4.71239])})])}),

                                        new Group({
                                          children : new MFNode([
                                            new Group({
                                              DEF : new SFString("Autofahrt"),
                                              children : new MFNode([
                                                new TimeSensor({
                                                  DEF : new SFString("Time_4"),
                                                  enabled : new SFBool(false),
                                                  cycleInterval : new SFTime(20),
                                                  loop : new SFBool(true),
                                                  stopTime : new SFTime(1)})])}),

                                            new PositionInterpolator({
                                              DEF : new SFString("Polo1TranslationInterp"),
                                              key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25,0.255,0.26,0.265,0.27,0.275,0.28,0.285,0.29,0.295,0.3,0.305,0.31,0.315,0.32,0.325,0.33,0.335,0.34,0.345,0.35,0.355,0.36,0.365,0.37,0.375,0.38,0.385,0.39,0.395,0.4,0.405,0.41,0.415,0.42,0.425,0.43,0.435,0.44,0.445,0.45,0.455,0.46,0.465,0.47,0.475,0.48,0.485,0.49,0.495,0.5,0.50499,0.505,0.51,0.515,0.52,0.525,0.53,0.535,0.54,0.545,0.55,0.555,0.56,0.565,0.57,0.575,0.58,0.585,0.59,0.595,0.6,0.605,0.61,0.615,0.62,0.625,0.63,0.635,0.64,0.645,0.65,0.655,0.66,0.665,0.67,0.675,0.68,0.685,0.69,0.695,0.7,0.705,0.71,0.715,0.72,0.725,0.73,0.735,0.74,0.745,0.75,0.755,0.76,0.765,0.77,0.775,0.78,0.785,0.79,0.795,0.8,0.805,0.81,0.815,0.82,0.825,0.83,0.835,0.84,0.845,0.85,0.855,0.86,0.865,0.87,0.875,0.88,0.885,0.89,0.895,0.9,0.905,0.91,0.915,0.92,0.925,0.93,0.935,0.94,0.945,0.95,0.955,0.96,0.965,0.97,0.975,0.98,0.985,0.99,0.995,1]),
                                              keyValue : new MFVec3f([138.05,0.513211,37.2388,136.407,0.513211,37.2388,134.764,0.513211,37.2388,133.121,0.513211,37.2388,131.478,0.513211,37.2388,129.835,0.513211,37.2388,128.192,0.513211,37.2388,126.549,0.513211,37.2388,124.906,0.513211,37.2388,123.263,0.513211,37.2387,121.62,0.513211,37.2387,119.977,0.513211,37.2387,118.334,0.513211,37.2387,116.691,0.513211,37.2387,115.048,0.513211,37.2387,113.405,0.513211,37.2387,111.762,0.513211,37.2387,110.118,0.513211,37.2387,108.475,0.513211,37.2387,106.832,0.513211,37.2387,105.189,0.513211,37.2387,103.546,0.513211,37.2387,101.903,0.513211,37.2387,100.26,0.513211,37.2387,98.6172,0.513211,37.2387,96.9742,0.513211,37.2387,95.3312,0.513211,37.2386,93.6882,0.513211,37.2386,92.0451,0.513211,37.2386,90.4021,0.513211,37.2386,88.7591,0.513211,37.2386,87.116,0.513211,37.2386,85.473,0.513211,37.2386,83.83,0.513211,37.2386,82.187,0.513211,37.2386,80.5439,0.513211,37.2386,78.9009,0.513211,37.2386,77.2579,0.513211,37.2386,75.6149,0.513211,37.2386,73.9718,0.513211,37.2386,72.3288,0.513211,37.2386,70.6858,0.513211,37.2386,69.0427,0.513211,37.2385,67.3997,0.513211,37.2385,65.7567,0.513211,37.2385,64.1136,0.513211,37.2385,62.4706,0.513211,37.2385,60.8276,0.513211,37.2385,59.1846,0.513211,37.2385,57.5415,0.513211,37.2385,55.8985,0.513211,37.2385,54.2554,0.513211,37.2385,52.6124,0.513211,37.2385,50.9694,0.513211,37.2385,49.3264,0.513211,37.2385,47.6833,0.513211,37.2385,46.0403,0.513211,37.2385,44.3973,0.513211,37.2385,42.7542,0.513211,37.2385,41.1112,0.513211,37.2384,39.4682,0.513211,37.2384,37.8252,0.513211,37.2384,36.1821,0.513211,37.2384,34.5391,0.513211,37.2384,32.8961,0.513211,37.2384,31.253,0.513211,37.2384,29.61,0.513211,37.2384,27.967,0.513211,37.2384,26.3239,0.513211,37.2384,24.6809,0.513211,37.2384,23.0379,0.513211,37.2384,21.3949,0.513211,37.2384,19.7518,0.513211,37.2384,18.1088,0.513211,37.2384,16.4658,0.513211,37.2384,14.8227,0.513211,37.2383,13.1797,0.513211,37.2383,11.5367,0.513211,37.2383,9.89367,0.513211,37.2383,8.25063,0.513211,37.2383,6.6076,0.513211,37.2383,4.96458,0.513211,37.2383,3.32155,0.513211,37.2383,1.67849,0.513211,37.2383,0.035471,0.513211,37.2383,-1.60755,0.513211,37.2383,-3.25056,0.513211,37.2383,-4.8936,0.513211,37.2383,-6.53664,0.513211,37.2383,-8.17967,0.513211,37.2383,-9.8227,0.513211,37.2383,-11.4657,0.513211,37.2383,-13.1088,0.513211,37.2383,-14.7518,0.513211,37.2382,-16.3948,0.513211,37.2382,-18.0379,0.513211,37.2382,-19.6809,0.513211,37.2382,-21.3239,0.513211,37.2382,-22.9669,0.513211,37.2382,-24.61,0.513211,37.2382,-26.2531,0.513211,37.2382,-26.2531,0.513211,37.2382,-182.301,0.513212,38.3456,-181.827,0.513212,38.3653,-181.291,0.513212,38.3845,-180.693,0.513212,38.4033,-180.033,0.513212,38.4217,-179.314,0.513212,38.4397,-178.536,0.513212,38.4573,-177.699,0.513212,38.4744,-176.806,0.513212,38.4912,-175.856,0.513212,38.5076,-174.851,0.513212,38.5236,-173.792,0.513212,38.5392,-172.68,0.513212,38.5544,-171.516,0.513212,38.5693,-170.3,0.513212,38.5838,-169.034,0.513212,38.598,-167.718,0.513212,38.6118,-166.355,0.513212,38.6253,-164.943,0.513212,38.6385,-163.486,0.513212,38.6514,-161.983,0.513212,38.6639,-160.435,0.513212,38.6761,-158.844,0.513212,38.688,-157.21,0.513212,38.6996,-155.535,0.513212,38.711,-153.819,0.513212,38.722,-152.063,0.513212,38.7328,-150.268,0.513212,38.7433,-148.436,0.513212,38.7535,-146.567,0.513212,38.7635,-144.663,0.513212,38.7733,-142.723,0.513212,38.7828,-140.75,0.513212,38.792,-138.743,0.513212,38.801,-136.705,0.513212,38.8099,-134.636,0.513212,38.8184,-132.537,0.513212,38.8268,-130.408,0.513212,38.835,-128.252,0.513212,38.843,-126.069,0.513212,38.8508,-123.859,0.513212,38.8584,-121.624,0.513212,38.8659,-119.365,0.513212,38.8731,-117.083,0.513212,38.8803,-114.779,0.513212,38.8872,-112.453,0.513212,38.894,-110.107,0.513212,38.9007,-107.742,0.513212,38.9072,-105.358,0.513212,38.9136,-102.957,0.513212,38.9199,-100.539,0.513212,38.9261,-98.1063,0.513212,38.9322,-95.6587,0.513212,38.9381,-93.1976,0.513212,38.944,-90.7239,0.513212,38.9498,-88.2385,0.513212,38.9555,-85.7426,0.513212,38.9611,-83.2369,0.513212,38.9667,-80.7225,0.513212,38.9722,-78.2004,0.513212,38.9776,-75.6715,0.513212,38.983,-73.1368,0.513212,38.9884,-70.5973,0.513212,38.9937,-68.0539,0.513212,38.999,-65.5076,0.513212,39.0043,-62.9594,0.513212,39.0096,-60.4102,0.513212,39.0148,-57.861,0.513212,39.0201,-55.3127,0.513212,39.0253,-52.7665,0.513212,39.0306,-50.2231,0.513212,39.0359,-47.6835,0.513212,39.0413,-45.1488,0.513212,39.0466,-42.6199,0.513212,39.052,-40.0978,0.513212,39.0575,-37.5835,0.513212,39.063,-35.0778,0.513212,39.0685,-32.5818,0.513212,39.0741,-30.0965,0.513212,39.0798,-27.6228,0.513212,39.0856,-25.1616,0.513212,39.0915,-22.714,0.513212,39.0975,-20.2809,0.513212,39.1035,-17.8633,0.513212,39.1097,-15.4622,0.513212,39.116,-13.0784,0.513212,39.1224,-10.7131,0.513212,39.1289,-8.36714,0.513212,39.1356,-6.04145,0.513212,39.1424,-3.73708,0.513212,39.1494,-1.45495,0.513212,39.1565,0.80401,0.513212,39.1638,3.03869,0.513212,39.1712,5.24824,0.513212,39.1788,7.43166,0.513212,39.1866,9.58805,0.513212,39.1946,11.7163,0.513212,39.2028,13.8155,0.513212,39.2112,15.8847,0.513212,39.2198,17.9232,0.513212,39.2286])}),

                                            new OrientationInterpolator({
                                              DEF : new SFString("Polo1RotationInterp"),
                                              key : new MFFloat([0,0.005,0.01,0.015,0.02,0.025,0.03,0.035,0.04,0.045,0.05,0.055,0.06,0.065,0.07,0.075,0.08,0.085,0.09,0.095,0.1,0.105,0.11,0.115,0.12,0.125,0.13,0.135,0.14,0.145,0.15,0.155,0.16,0.165,0.17,0.175,0.18,0.185,0.19,0.195,0.2,0.205,0.21,0.215,0.22,0.225,0.23,0.235,0.24,0.245,0.25,0.255,0.26,0.265,0.27,0.275,0.28,0.285,0.29,0.295,0.3,0.305,0.31,0.315,0.32,0.325,0.33,0.335,0.34,0.345,0.35,0.355,0.36,0.365,0.37,0.375,0.38,0.385,0.39,0.395,0.4,0.405,0.41,0.415,0.42,0.425,0.43,0.435,0.44,0.445,0.45,0.455,0.46,0.465,0.47,0.475,0.48,0.485,0.49,0.495,0.5,0.50499,0.505,0.51,0.515,0.52,0.525,0.53,0.535,0.54,0.545,0.55,0.555,0.56,0.565,0.57,0.575,0.58,0.585,0.59,0.595,0.6,0.605,0.61,0.615,0.62,0.625,0.63,0.635,0.64,0.645,0.65,0.655,0.66,0.665,0.67,0.675,0.68,0.685,0.69,0.695,0.7,0.705,0.71,0.715,0.72,0.725,0.73,0.735,0.74,0.745,0.75,0.755,0.76,0.765,0.77,0.775,0.78,0.785,0.79,0.795,0.8,0.805,0.81,0.815,0.82,0.825,0.83,0.835,0.84,0.845,0.85,0.855,0.86,0.865,0.87,0.875,0.88,0.885,0.89,0.895,0.9,0.905,0.91,0.915,0.92,0.925,0.93,0.935,0.94,0.945,0.95,0.955,0.96,0.965,0.97,0.975,0.98,0.985,0.99,0.995,1]),
                                              keyValue : new MFRotation([2.26996e-13,1,-1.78814e-7,3.14159,2.27007e-13,1,-1.78823e-7,3.14159,2.27042e-13,1,-1.7885e-7,3.14159,2.27099e-13,1,-1.78894e-7,3.14159,2.27178e-13,1,-1.78957e-7,3.14159,2.27281e-13,1,-1.79038e-7,3.14159,2.27407e-13,1,-1.79136e-7,3.14159,2.27555e-13,1,-1.79252e-7,3.14159,2.27726e-13,1,-1.79386e-7,3.14159,2.2792e-13,1,-1.79538e-7,3.14159,2.28137e-13,1,-1.79708e-7,3.14159,2.28376e-13,1,-1.79896e-7,3.14159,2.28638e-13,1,-1.80101e-7,3.14159,2.28924e-13,1,-1.80325e-7,3.14159,2.29232e-13,1,-1.80566e-7,3.14159,2.29562e-13,1,-1.80826e-7,3.14159,2.29916e-13,1,-1.81103e-7,3.14159,2.30292e-13,1,-1.81398e-7,3.14159,2.30692e-13,1,-1.81711e-7,3.14159,2.31114e-13,1,-1.82042e-7,3.14159,2.31558e-13,1,-1.8239e-7,3.14159,2.32026e-13,1,-1.82757e-7,3.14159,2.32517e-13,1,-1.83141e-7,3.14159,2.3303e-13,1,-1.83544e-7,3.14159,2.33566e-13,1,-1.83964e-7,3.14159,2.34125e-13,1,-1.84402e-7,3.14159,2.34706e-13,1,-1.84858e-7,3.14159,2.35311e-13,1,-1.85332e-7,3.14159,2.35938e-13,1,-1.85824e-7,3.14159,2.36588e-13,1,-1.86333e-7,3.14159,2.37261e-13,1,-1.86861e-7,3.14159,2.37957e-13,1,-1.87406e-7,3.14159,2.38676e-13,1,-1.87969e-7,3.14159,2.39417e-13,1,-1.8855e-7,3.14159,2.40181e-13,1,-1.89149e-7,3.14159,2.40968e-13,1,-1.89766e-7,3.14159,2.41778e-13,1,-1.90401e-7,3.14159,2.42611e-13,1,-1.91054e-7,3.14159,2.43466e-13,1,-1.91724e-7,3.14159,2.44345e-13,1,-1.92413e-7,3.14159,2.45246e-13,1,-1.93119e-7,3.14159,2.46169e-13,1,-1.93843e-7,3.14159,2.47116e-13,1,-1.94585e-7,3.14159,2.48086e-13,1,-1.95345e-7,3.14159,2.49078e-13,1,-1.96123e-7,3.14159,2.50093e-13,1,-1.96919e-7,3.14159,2.51131e-13,1,-1.97733e-7,3.14159,2.52192e-13,1,-1.98564e-7,3.14159,2.53275e-13,1,-1.99413e-7,3.14159,2.54382e-13,1,-2.00281e-7,3.14159,2.55511e-13,1,-2.01166e-7,3.14159,2.56663e-13,1,-2.02069e-7,3.14159,2.57838e-13,1,-2.0299e-7,3.14159,2.59035e-13,1,-2.03928e-7,3.14159,2.60256e-13,1,-2.04885e-7,3.14159,2.61499e-13,1,-2.0586e-7,3.14159,2.62765e-13,1,-2.06852e-7,3.14159,2.64054e-13,1,-2.07862e-7,3.14159,2.65366e-13,1,-2.0889e-7,3.14159,2.667e-13,1,-2.09937e-7,3.14159,2.68058e-13,1,-2.11e-7,3.14159,2.69438e-13,1,-2.12082e-7,3.14159,2.70841e-13,1,-2.13182e-7,3.14159,2.72266e-13,1,-2.143e-7,3.14159,2.73715e-13,1,-2.15435e-7,3.14159,2.75186e-13,1,-2.16588e-7,3.14159,2.7668e-13,1,-2.1776e-7,3.14159,2.78197e-13,1,-2.18949e-7,3.14159,2.79737e-13,1,-2.20156e-7,3.14159,2.813e-13,1,-2.21381e-7,3.14159,2.82885e-13,1,-2.22623e-7,3.14159,2.84494e-13,1,-2.23884e-7,3.14159,2.86125e-13,1,-2.25163e-7,3.14159,2.87778e-13,1,-2.26459e-7,3.14159,2.89455e-13,1,-2.27773e-7,3.14159,2.91155e-13,1,-2.29105e-7,3.14159,2.92877e-13,1,-2.30455e-7,3.14159,2.94622e-13,1,-2.31823e-7,3.14159,2.9639e-13,1,-2.33209e-7,3.14159,2.98181e-13,1,-2.34613e-7,3.14159,2.99994e-13,1,-2.36034e-7,3.14159,3.01831e-13,1,-2.37474e-7,3.14159,3.0369e-13,1,-2.38931e-7,3.14159,3.05572e-13,1,-2.40406e-7,3.14159,3.07477e-13,1,-2.41899e-7,3.14159,3.09404e-13,1,-2.4341e-7,3.14159,3.11355e-13,1,-2.44939e-7,3.14159,3.13328e-13,1,-2.46486e-7,3.14159,3.15324e-13,1,-2.48051e-7,3.14159,3.17343e-13,1,-2.49633e-7,3.14159,3.19384e-13,1,-2.51234e-7,3.14159,3.21449e-13,1,-2.52852e-7,3.14159,3.23536e-13,1,-2.54488e-7,3.14159,3.25646e-13,1,-2.56142e-7,3.14159,3.27779e-13,1,-2.57814e-7,3.14159,3.29935e-13,1,-2.59504e-7,3.14159,3.32114e-13,1,-2.61211e-7,3.14159,3.34315e-13,1,-2.62937e-7,3.14159,3.36539e-13,1,-2.6468e-7,3.14159,3.38786e-13,1,-2.66442e-7,3.14159,3.41056e-13,1,-2.68221e-7,3.14159,3.41056e-13,1,-2.68221e-7,3.14159,-0.0000011243,1,-2.68229e-7,0.468378,-0.00000115872,1,-2.68229e-7,0.454947,-0.00000119373,1,-2.68229e-7,0.442042,-0.00000122927,1,-2.6823e-7,0.429654,-0.00000126531,1,-2.6823e-7,0.417775,-0.00000130177,1,-2.6823e-7,0.406399,-0.00000133858,1,-2.6823e-7,0.395516,-0.00000137567,1,-2.68231e-7,0.385118,-0.00000141294,1,-2.68231e-7,0.375198,-0.00000145031,1,-2.68231e-7,0.365747,-0.00000148767,1,-2.68232e-7,0.356758,-0.00000152492,1,-2.68232e-7,0.348222,-0.00000156192,1,-2.68232e-7,0.340131,-0.00000159857,1,-2.68232e-7,0.332478,-0.00000163473,1,-2.68233e-7,0.325254,-0.00000167027,1,-2.68233e-7,0.318451,-0.00000170505,1,-2.68233e-7,0.312063,-0.00000173893,1,-2.68233e-7,0.306078,-0.00000177176,1,-2.68233e-7,0.300491,-0.00000180342,1,-2.68234e-7,0.295293,-0.00000183376,1,-2.68234e-7,0.290477,-0.00000186265,1,-2.68234e-7,0.286034,-0.00000188996,1,-2.68234e-7,0.281954,-0.00000191557,1,-2.68234e-7,0.278233,-0.00000193938,1,-2.68235e-7,0.274861,-0.00000196128,1,-2.68235e-7,0.271831,-0.00000198118,1,-2.68235e-7,0.269132,-0.00000199902,1,-2.68235e-7,0.266759,-0.00000201473,1,-2.68235e-7,0.264703,-0.00000202828,1,-2.68235e-7,0.262955,-0.00000203963,1,-2.68235e-7,0.261508,-0.00000204877,1,-2.68235e-7,0.260356,-0.0000020557,1,-2.68235e-7,0.259486,-0.00000206046,1,-2.68235e-7,0.258894,-0.00000206306,1,-2.68235e-7,0.258573,-0.00000206356,1,-2.68235e-7,0.25851,-0.00000206203,1,-2.68235e-7,0.2587,-0.00000205852,1,-2.68235e-7,0.259135,-0.00000205314,1,-2.68235e-7,0.259808,-0.00000204597,1,-2.68235e-7,0.260708,-0.00000203711,1,-2.68235e-7,0.261828,-0.00000202666,1,-2.68235e-7,0.263164,-0.00000201475,1,-2.68235e-7,0.264701,-0.00000200147,1,-2.68235e-7,0.266437,-0.00000198695,1,-2.68235e-7,0.268361,-0.00000197131,1,-2.68234e-7,0.270463,-0.00000195465,1,-2.68234e-7,0.27274,-0.0000019371,1,-2.68234e-7,0.27518,-0.00000191875,1,-2.68234e-7,0.277779,-0.00000189972,1,-2.68234e-7,0.280525,-0.00000188012,1,-2.68234e-7,0.283412,-0.00000186004,1,-2.68234e-7,0.286429,-0.00000183957,1,-2.68233e-7,0.289573,-0.0000018188,1,-2.68233e-7,0.292832,-0.00000179783,1,-2.68233e-7,0.2962,-0.00000177671,1,-2.68233e-7,0.299668,-0.00000175554,1,-2.68233e-7,0.303228,-0.00000173436,1,-2.68233e-7,0.306872,-0.00000171326,1,-2.68233e-7,0.310592,-0.00000169227,1,-2.68232e-7,0.314381,-0.00000167146,1,-2.68232e-7,0.31823,-0.00000165087,1,-2.68232e-7,0.32213,-0.00000163055,1,-2.68232e-7,0.326075,-0.00000161053,1,-2.68232e-7,0.330056,-0.00000159084,1,-2.68232e-7,0.334065,-0.00000157153,1,-2.68232e-7,0.338094,-0.0000015526,1,-2.68231e-7,0.342134,-0.0000015341,1,-2.68231e-7,0.34618,-0.00000151604,1,-2.68231e-7,0.350221,-0.00000149844,1,-2.68231e-7,0.35425,-0.00000148132,1,-2.68231e-7,0.358258,-0.00000146468,1,-2.68231e-7,0.362239,-0.00000144856,1,-2.68231e-7,0.366183,-0.00000143294,1,-2.68231e-7,0.370083,-0.00000141785,1,-2.6823e-7,0.37393,-0.0000014033,1,-2.6823e-7,0.377718,-0.00000138928,1,-2.6823e-7,0.381438,-0.00000137581,1,-2.6823e-7,0.385081,-0.0000013629,1,-2.6823e-7,0.388638,-0.00000135054,1,-2.6823e-7,0.392105,-0.00000133874,1,-2.6823e-7,0.395471,-0.00000132751,1,-2.6823e-7,0.398729,-0.00000131686,1,-2.6823e-7,0.401869,-0.00000130678,1,-2.6823e-7,0.404886,-0.00000129728,1,-2.68229e-7,0.40777,-0.00000128836,1,-2.68229e-7,0.410514,-0.00000128003,1,-2.68229e-7,0.413109,-0.0000012723,1,-2.68229e-7,0.415547,-0.00000126518,1,-2.68229e-7,0.417822,-0.00000125866,1,-2.68229e-7,0.419923,-0.00000125275,1,-2.68229e-7,0.421843,-0.00000124748,1,-2.68229e-7,0.423575,-0.00000124283,1,-2.68229e-7,0.42511,-0.00000123884,1,-2.68229e-7,0.426441,-0.0000012355,1,-2.68229e-7,0.427559,-0.00000123283,1,-2.68229e-7,0.428456,-0.00000123085,1,-2.68229e-7,0.429125,-0.00000122957,1,-2.68229e-7,0.429556,-0.00000122902,1,-2.68229e-7,0.429742,-0.00000122922,1,-2.68229e-7,0.429676])})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.390853,0.186852,3.4221]),
                                          scale : new SFVec3f([1.57956,0.471647,0.743738]),
                                          center : new SFVec3f([-0.000468493,0.05716,0]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(0.489362),
                                                      diffuseColor : new SFColor([0.44361,0.519253,1])})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_36"),
                                                      url : new MFString(["polo__3.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  texCoordIndex : new MFInt32([27,22,24,-1,23,3,25,-1,8,27,24,-1,8,26,27,-1,60,52,48,56,8,16,176,180,12,-1,8,24,16,-1,24,22,20,-1,24,20,16,-1,20,28,16,-1,88,92,96,100,14,25,10,-1,14,186,174,18,25,-1,18,37,21,-1,18,21,25,-1,21,23,25,-1,3,2,25,-1,2,10,25,-1,170,165,17,31,19,-1,17,30,31,-1,66,84,38,39,41,-1,39,40,41,-1,0,1,5,-1,1,7,5,-1,4,43,54,46,50,58,45,29,-1,49,53,51,47,-1,43,8,57,55,-1,61,12,70,45,59,-1,82,65,42,35,34,63,-1,67,9,42,64,-1,32,44,74,78,69,33,-1,80,77,71,13,162,167,15,73,-1,44,71,76,75,-1,81,73,69,79,-1,11,85,83,63,-1,98,94,90,87,62,6,36,68,-1,89,10,62,86,-1,97,93,91,95,-1,14,101,99,68,72,-1,84,66,104,105,-1,104,109,148,142,154,138,150,108,105,-1,109,107,147,149,-1,153,106,108,151,-1,153,151,139,141,-1,149,147,145,143,-1,141,139,155,157,-1,155,143,145,157,-1,153,151,151,153,-1,141,139,139,141,-1,141,27,27,141,-1,149,147,147,149,-1,145,147,147,145,-1,143,145,145,143,-1,139,151,139,-1,139,151,151,-1,143,27,143,-1,143,27,27,-1,159,102,163,168,103,158,-1,152,140,156,144,146,107,161,160,106,-1,161,159,158,160,-1,161,159,159,161,-1,158,159,159,158,-1,160,158,158,160,-1,160,27,160,-1,160,27,27,-1,182,179,166,171,172,184,169,164,-1,171,19,175,173,-1,177,17,166,178,-1,181,177,178,183,-1,175,187,185,173,-1]),
                                                  coordIndex : new MFInt32([5,18,20,-1,19,3,21,-1,10,5,20,-1,10,4,5,-1,31,27,25,29,10,14,88,90,12,-1,10,20,14,-1,20,18,16,-1,20,16,14,-1,16,7,14,-1,45,47,49,51,13,21,11,-1,13,93,87,15,21,-1,15,1,17,-1,15,17,21,-1,17,19,21,-1,3,2,21,-1,2,11,21,-1,85,83,14,1,15,-1,14,7,1,-1,34,43,11,2,10,-1,2,4,10,-1,6,0,8,-1,0,9,8,-1,8,22,28,24,26,30,23,6,-1,25,27,26,24,-1,22,10,29,28,-1,31,12,36,23,30,-1,42,33,22,8,9,32,-1,34,10,22,33,-1,6,23,38,40,35,0,-1,41,39,36,12,82,84,13,37,-1,23,36,39,38,-1,41,37,35,40,-1,11,43,42,32,-1,50,48,46,44,32,9,0,35,-1,45,11,32,44,-1,49,47,46,48,-1,13,51,50,35,37,-1,43,34,29,45,-1,29,55,61,58,64,56,62,54,45,-1,55,53,60,61,-1,63,52,54,62,-1,67,66,68,69,-1,71,70,72,73,-1,57,56,64,65,-1,64,58,59,65,-1,66,67,63,62,-1,69,68,56,57,-1,67,69,57,63,-1,70,71,61,60,-1,72,70,60,59,-1,73,72,59,58,-1,68,62,56,-1,68,66,62,-1,71,58,61,-1,71,73,58,-1,75,12,82,84,13,74,-1,63,57,65,59,60,53,77,76,52,-1,79,78,80,81,-1,78,79,77,75,-1,80,78,75,74,-1,81,80,74,76,-1,79,76,77,-1,79,81,76,-1,91,89,83,85,86,92,84,82,-1,85,15,87,86,-1,88,14,83,89,-1,90,88,89,91,-1,87,93,92,86,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.314845,0.599014,0.317776,0.505559,0.766839,0.446228,0.765905,0.183638,0.52458,0.977198,0.336822,0.582022,0.518858,0.982743,0.34269,0.514055,0.614926,0.599721,0.972411,0.602933,0.614322,0.600109,0.794761,0.602933,0.229569,0.603264,0.230328,0.589865,0.230141,0.596901,0.000685288,0.603533,0.230411,0.225096,0.229466,0.212768,0.230141,0.264601,0.00135259,0.212979,0.35162,0.0250328,0.372155,0.00285878,0.615574,0.0207149,0.614813,0.00266513,0.616201,0.166095,0.614346,0.165092,0.766022,0.443437,0.765828,0.117115,0.257347,0.100666,0.272918,0.996071,0.220809,0.0887781,0.00746351,0.0948936,0.191502,0.984712,0.0400551,0.980535,0.827531,0.914674,0.93964,0.908008,0.271227,0.982743,0.254106,0.107683,0.271193,0.486264,0.292702,0.505447,0.293655,0.550583,0.272146,0.575224,0.942664,0.879853,0.532918,0.942361,0.194959,0.951843,0.268994,0.960514,0.43889,0.948828,0.43889,0.948828,0.434678,0.601378,0.434678,0.601378,0.412746,0.950627,0.412746,0.950627,0.406464,0.601638,0.406464,0.601638,0.516015,0.943524,0.516015,0.943524,0.594633,0.599908,0.594633,0.599908,0.283252,0.959533,0.283252,0.959533,0.246708,0.603106,0.246708,0.603106,0.529087,0.941743,0.82402,0.88127,0.935349,0.87994,0.935349,0.87994,0.272108,0.571642,0.965258,0.602933,0.268416,0.956349,0.0374424,0.95509,0.233607,0.639859,0.226137,0.655428,0.235254,0.644922,0.00661527,0.654859,0.18568,0.952034,0.18568,0.952034,0.210125,0.655387,0.210125,0.655387,0.0453464,0.954927,0.0453464,0.954927,0.0211934,0.654897,0.0211934,0.654897,0.829724,0.881202,0.829724,0.881202,0.271229,0.489625,0.801473,0.602933,0.512695,0.942661,0.512695,0.942661,0.593939,0.599939,0.593939,0.599939,0.437833,0.946856,0.437833,0.946856,0.436623,0.598625,0.436623,0.598625,0.412745,0.948262,0.412745,0.948262,0.40855,0.598391,0.40855,0.598391,0.282665,0.955551,0.282665,0.955551,0.248915,0.597058,0.248915,0.597058,0.272108,0.571642,0.271229,0.489625,0.272108,0.571642,0.271229,0.489625,0.271229,0.489625,0.272108,0.571642,0.271229,0.489625,0.272108,0.571642,0.271668,0.530634,0.271668,0.530634,0.271668,0.530634,0.271668,0.530634,0.271449,0.510129,0.271449,0.510129,0.271449,0.510129,0.271449,0.510129,0.271888,0.551138,0.271888,0.551138,0.271888,0.551138,0.271888,0.551138,0.271339,0.499877,0.271339,0.499877,0.271339,0.499877,0.271339,0.499877,0.271558,0.520381,0.271558,0.520381,0.271558,0.520381,0.271558,0.520381,0.271778,0.540886,0.271778,0.540886,0.271778,0.540886,0.271778,0.540886,0.271998,0.56139,0.271998,0.56139,0.271998,0.56139,0.271998,0.56139,0.271613,0.525507,0.271613,0.525507,0.271613,0.525507,0.271613,0.525507,0.271723,0.53576,0.271723,0.53576,0.271723,0.53576,0.271723,0.53576,0.272053,0.566516,0.272053,0.566516,0.272053,0.566516,0.272053,0.566516,0.271284,0.494751,0.271284,0.494751,0.271284,0.494751,0.271284,0.494751,0.271668,0.530634,0.271668,0.530634,0.271668,0.530634,0.271668,0.530634,0.271229,0.489625,0.272108,0.571642,0.271229,0.489625,0.272108,0.571642,0.213336,0.620664,0.272045,0.565753,0.215463,0.59109,0.213801,0.212782,0.213801,0.212782,0.0202153,0.609615,0.2713,0.496232,0.0167178,0.602167,0.0190281,0.212963,0.0190281,0.212963,0.0195026,0.371503,0.0176609,0.376645,0.230141,0.399001,0.000921061,0.375278,0.230078,0.374799,0.229857,0.382112,0.215105,0.381495,0.213611,0.379334,0.22988,0.463433,0.22961,0.470431,0.213509,0.468793,0.215003,0.470954,0.019859,0.490559,0.0164821,0.488722,0.230141,0.497951,0.00115683,0.488722])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.817176,1.11432,0.641817,-0.815165,-1,0.84672,0.963592,-0.103845,0.816256,0.963592,-0.765492,0.816256,0.963592,-0.103845,-0.833984,0.963592,-0.765492,-0.833984,-0.811162,1.10352,-0.660245,-0.815165,-1,-0.836607,0.0769518,1.10352,-0.660245,0.0709375,1.11432,0.641817,0.451755,0.213137,-0.959775,0.451755,0.213137,0.943123,-0.964529,0.203043,-0.959775,-0.964529,0.203043,0.943123,-0.964529,-0.581778,-1,-0.964529,-0.581778,1,-0.473078,-1,-0.836607,-0.473078,-1,0.84672,0.478574,-1,-0.836607,0.478574,-1,0.84672,0.472326,-0.717375,-0.990629,0.472403,-0.720875,0.986914,0.111542,1.02135,-0.687888,-0.825045,1.02201,-0.687358,-0.222137,1.02158,-0.687699,-0.210703,0.208416,-0.959775,-0.314912,1.02165,-0.687647,-0.314394,0.207677,-0.959775,0.0515582,1.02139,-0.687854,0.377175,0.212605,-0.959775,-0.774446,1.02197,-0.687387,-0.901541,0.203492,-0.959775,0.111743,1.01776,0.674103,0.111554,1.02113,-0.603906,0.451755,0.213137,-0.883155,-0.827256,1.05198,0.662428,-0.950241,0.286933,-0.93187,-0.94619,0.316458,0.905623,-0.825175,1.02377,-0.607843,-0.949946,0.289087,-0.797846,-0.827145,1.05048,0.594698,-0.946459,0.314497,0.783598,0.111733,1.01793,0.608617,0.451755,0.213137,0.852127,0.0526958,1.01991,0.673369,0.376612,0.212601,0.943123,-0.216975,1.02974,0.670016,-0.203332,0.208468,0.943123,-0.30735,1.03303,0.668892,-0.306825,0.207731,0.943123,-0.775931,1.05011,0.663066,-0.895319,0.203536,0.943123,-0.323592,0.207611,0.943123,-0.323592,0.207611,-0.959775,-0.201236,0.208483,0.943123,-0.201236,0.208483,-0.959775,-0.201236,0.208483,0.110605,-0.323592,0.207611,0.110605,-0.201236,0.208483,-0.127257,-0.323592,0.207611,-0.127257,-0.323592,0.207611,-0.840844,-0.201236,0.208483,-0.840844,-0.201236,0.208483,0.824192,-0.323592,0.207611,0.824192,-0.201236,0.208483,-0.00832599,-0.323592,0.207611,-0.00832599,-0.257857,0.627498,0.735547,-0.323592,0.62703,0.735547,-0.257857,0.627498,0.191131,-0.323592,0.62703,0.191131,-0.323592,0.62703,-0.751896,-0.257857,0.627498,-0.751896,-0.323592,0.62703,-0.196889,-0.257857,0.627498,-0.196889,-0.788824,0.204295,0.943123,-0.788824,0.204295,-0.959775,-0.701252,0.204919,0.943123,-0.701252,0.204919,-0.959775,-0.788824,0.476141,-0.841082,-0.737728,0.476506,-0.841082,-0.788824,0.476141,0.812873,-0.737728,0.476506,0.812873,-0.964529,0.203043,-0.823146,-0.964529,-0.581778,-0.862652,-0.964529,0.203043,0.789832,-0.964529,-0.581778,0.845028,-0.964529,-0.268088,0.822967,-0.964529,-0.264355,0.976996,-0.964529,-0.271096,-0.984076,-0.964529,-0.26131,-0.84652,-0.964529,-0.0871512,-0.974649,-0.964529,-0.0891783,-0.837856,-0.964529,-0.0325223,0.806399,-0.964529,-0.030656,0.960059])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("_37"),
                                          translation : new SFVec3f([1.48852,-0.163094,2.78608]),
                                          rotation : new SFRotation([0.57735,0.57735,-0.57735,4.18879]),
                                          scale : new SFVec3f([2.1038,0.795998,2.1038]),
                                          scaleOrientation : new SFRotation([-2.42077e-7,1,-3.8879e-7,0.785398]),
                                          children : new MFNode([
                                            new Group({
                                              children : new MFNode([
                                                new Group({
                                                  DEF : new SFString("raddreh2"),
                                                  children : new MFNode([
                                                    new TimeSensor({
                                                      DEF : new SFString("Time_5"),
                                                      cycleInterval : new SFTime(0.4),
                                                      loop : new SFBool(true)})])}),

                                                new OrientationInterpolator({
                                                  DEF : new SFString("UnnamedShapeRotationInterp_1"),
                                                  key : new MFFloat([0,0.25,0.5,0.75,1]),
                                                  keyValue : new MFRotation([0.57735,0.57735,-0.57735,4.18879,-1,3.14886e-7,-8.17613e-8,1.5708,-0.57735,0.577351,-0.57735,2.0944,1.80552e-7,0.707107,-0.707107,3.14159,-0.57735,-0.57735,0.57735,2.09439])}),

                                                new OrientationInterpolator({
                                                  DEF : new SFString("UnnamedShapeScaleOrientationInterp_1"),
                                                  key : new MFFloat([0,0.25,0.5,0.75,1]),
                                                  keyValue : new MFRotation([-2.53883e-7,1,2.8604e-7,0.151342,-1.87436e-8,1,1.50384e-7,0.785398,1.22421e-7,-1,2.27848e-7,0.502956,-3.75051e-8,1,4.89911e-8,2.35619,-2.07772e-8,1,9.10501e-8,1.5708])}),

                                                new PositionInterpolator({
                                                  DEF : new SFString("UnnamedShapeScaleFactorInterp_1"),
                                                  key : new MFFloat([0,0.75]),
                                                  keyValue : new MFVec3f([2.1038,0.795998,2.1038,2.10379,0.795995,2.10379])})])}),

                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      DEF : new SFString("_38"),
                                                      ambientIntensity : new SFFloat(5.85714),
                                                      diffuseColor : new SFColor([0.0744681,0.0744681,0.0744681])})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_39"),
                                                      url : new MFString(["taxi_wheel-n.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.5,1,0.5,1,0.691342,0.96194,0.691342,0.96194,0.853554,0.853554,0.853554,0.853554,0.96194,0.691342,0.96194,0.691342,1,0.5,1,0.5,0.96194,0.308658,0.96194,0.308658,0.853554,0.146446,0.853554,0.146446,0.691342,0.03806,0.691342,0.03806,0.5,0,0.5,0,0.308659,0.03806,0.308659,0.03806,0.146446,0.146446,0.146446,0.146446,0.03806,0.308658,0.03806,0.308658,0,0.5,0,0.5,0.0380605,0.691342,0.0380605,0.691342,0.146446,0.853554,0.146446,0.853554,0.308659,0.96194,0.308659,0.96194,0.5,0.5,0.5,0.5])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0,-0.1,-0.1,0,0.1,-0.1,0.0382683,-0.1,-0.092388,0.0382683,0.1,-0.092388,0.0707107,-0.1,-0.0707107,0.0707107,0.1,-0.0707107,0.092388,-0.1,-0.0382683,0.092388,0.1,-0.0382683,0.1,-0.1,4.37114e-9,0.1,0.1,4.37114e-9,0.092388,-0.1,0.0382684,0.092388,0.1,0.0382684,0.0707107,-0.1,0.0707107,0.0707107,0.1,0.0707107,0.0382683,-0.1,0.092388,0.0382683,0.1,0.092388,1.50996e-8,-0.1,0.1,1.50996e-8,0.1,0.1,-0.0382683,-0.1,0.092388,-0.0382683,0.1,0.092388,-0.0707107,-0.1,0.0707107,-0.0707107,0.1,0.0707107,-0.092388,-0.1,0.0382684,-0.092388,0.1,0.0382684,-0.1,-0.1,-1.19249e-9,-0.1,0.1,-1.19249e-9,-0.0923879,-0.1,-0.0382684,-0.0923879,0.1,-0.0382684,-0.0707107,-0.1,-0.0707107,-0.0707107,0.1,-0.0707107,-0.0382683,-0.1,-0.092388,-0.0382683,0.1,-0.092388,0,0.1,0,0,-0.1,0])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("_40"),
                                          translation : new SFVec3f([-0.661124,-0.163095,2.73555]),
                                          rotation : new SFRotation([0.57735,0.57735,-0.57735,4.18879]),
                                          scale : new SFVec3f([2.1038,0.795999,2.1038]),
                                          scaleOrientation : new SFRotation([-8.81481e-7,1,-0.00000128963,0.785397]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      USE : new SFString("_38")})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_39")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.5,1,0.5,1,0.691342,0.96194,0.691342,0.96194,0.853554,0.853554,0.853554,0.853554,0.96194,0.691342,0.96194,0.691342,1,0.5,1,0.5,0.96194,0.308658,0.96194,0.308658,0.853554,0.146446,0.853554,0.146446,0.691342,0.03806,0.691342,0.03806,0.5,0,0.5,0,0.308659,0.03806,0.308659,0.03806,0.146446,0.146446,0.146446,0.146446,0.03806,0.308658,0.03806,0.308658,0,0.5,0,0.5,0.0380605,0.691342,0.0380605,0.691342,0.146446,0.853554,0.146446,0.853554,0.308659,0.96194,0.308659,0.96194,0.5,0.5,0.5,0.5])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0,-0.1,-0.1,0,0.1,-0.1,0.0382683,-0.1,-0.092388,0.0382683,0.1,-0.092388,0.0707107,-0.1,-0.0707107,0.0707107,0.1,-0.0707107,0.092388,-0.1,-0.0382683,0.092388,0.1,-0.0382683,0.1,-0.1,4.37114e-9,0.1,0.1,4.37114e-9,0.092388,-0.1,0.0382684,0.092388,0.1,0.0382684,0.0707107,-0.1,0.0707107,0.0707107,0.1,0.0707107,0.0382683,-0.1,0.092388,0.0382683,0.1,0.092388,1.50996e-8,-0.1,0.1,1.50996e-8,0.1,0.1,-0.0382683,-0.1,0.092388,-0.0382683,0.1,0.092388,-0.0707107,-0.1,0.0707107,-0.0707107,0.1,0.0707107,-0.092388,-0.1,0.0382684,-0.092388,0.1,0.0382684,-0.1,-0.1,-1.19249e-9,-0.1,0.1,-1.19249e-9,-0.0923879,-0.1,-0.0382684,-0.0923879,0.1,-0.0382684,-0.0707107,-0.1,-0.0707107,-0.0707107,0.1,-0.0707107,-0.0382683,-0.1,-0.092388,-0.0382683,0.1,-0.092388,0,0.1,0,0,-0.1,0])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("_41"),
                                          translation : new SFVec3f([-0.661124,-0.163096,4.0976]),
                                          rotation : new SFRotation([0.57735,0.57735,-0.57735,4.18879]),
                                          scale : new SFVec3f([2.1038,0.795999,2.1038]),
                                          scaleOrientation : new SFRotation([-8.07037e-7,1,-0.00000110991,0.785397]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      USE : new SFString("_38")})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_39")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.5,1,0.5,1,0.691342,0.96194,0.691342,0.96194,0.853554,0.853554,0.853554,0.853554,0.96194,0.691342,0.96194,0.691342,1,0.5,1,0.5,0.96194,0.308658,0.96194,0.308658,0.853554,0.146446,0.853554,0.146446,0.691342,0.03806,0.691342,0.03806,0.5,0,0.5,0,0.308659,0.03806,0.308659,0.03806,0.146446,0.146446,0.146446,0.146446,0.03806,0.308658,0.03806,0.308658,0,0.5,0,0.5,0.0380605,0.691342,0.0380605,0.691342,0.146446,0.853554,0.146446,0.853554,0.308659,0.96194,0.308659,0.96194,0.5,0.5,0.5,0.5])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0,-0.1,-0.1,0,0.1,-0.1,0.0382683,-0.1,-0.092388,0.0382683,0.1,-0.092388,0.0707107,-0.1,-0.0707107,0.0707107,0.1,-0.0707107,0.092388,-0.1,-0.0382683,0.092388,0.1,-0.0382683,0.1,-0.1,4.37114e-9,0.1,0.1,4.37114e-9,0.092388,-0.1,0.0382684,0.092388,0.1,0.0382684,0.0707107,-0.1,0.0707107,0.0707107,0.1,0.0707107,0.0382683,-0.1,0.092388,0.0382683,0.1,0.092388,1.50996e-8,-0.1,0.1,1.50996e-8,0.1,0.1,-0.0382683,-0.1,0.092388,-0.0382683,0.1,0.092388,-0.0707107,-0.1,0.0707107,-0.0707107,0.1,0.0707107,-0.092388,-0.1,0.0382684,-0.092388,0.1,0.0382684,-0.1,-0.1,-1.19249e-9,-0.1,0.1,-1.19249e-9,-0.0923879,-0.1,-0.0382684,-0.0923879,0.1,-0.0382684,-0.0707107,-0.1,-0.0707107,-0.0707107,0.1,-0.0707107,-0.0382683,-0.1,-0.092388,-0.0382683,0.1,-0.092388,0,0.1,0,0,-0.1,0])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("_42"),
                                          translation : new SFVec3f([1.48852,-0.163095,4.06821]),
                                          rotation : new SFRotation([0.57735,0.57735,-0.57735,4.18879]),
                                          scale : new SFVec3f([2.1038,0.795999,2.1038]),
                                          scaleOrientation : new SFRotation([-8.34961e-7,1,-0.00000117731,0.785397]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      USE : new SFString("_38")})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_39")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.5,1,0.5,1,0.691342,0.96194,0.691342,0.96194,0.853554,0.853554,0.853554,0.853554,0.96194,0.691342,0.96194,0.691342,1,0.5,1,0.5,0.96194,0.308658,0.96194,0.308658,0.853554,0.146446,0.853554,0.146446,0.691342,0.03806,0.691342,0.03806,0.5,0,0.5,0,0.308659,0.03806,0.308659,0.03806,0.146446,0.146446,0.146446,0.146446,0.03806,0.308658,0.03806,0.308658,0,0.5,0,0.5,0.0380605,0.691342,0.0380605,0.691342,0.146446,0.853554,0.146446,0.853554,0.308659,0.96194,0.308659,0.96194,0.5,0.5,0.5,0.5])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0,-0.1,-0.1,0,0.1,-0.1,0.0382683,-0.1,-0.092388,0.0382683,0.1,-0.092388,0.0707107,-0.1,-0.0707107,0.0707107,0.1,-0.0707107,0.092388,-0.1,-0.0382683,0.092388,0.1,-0.0382683,0.1,-0.1,4.37114e-9,0.1,0.1,4.37114e-9,0.092388,-0.1,0.0382684,0.092388,0.1,0.0382684,0.0707107,-0.1,0.0707107,0.0707107,0.1,0.0707107,0.0382683,-0.1,0.092388,0.0382683,0.1,0.092388,1.50996e-8,-0.1,0.1,1.50996e-8,0.1,0.1,-0.0382683,-0.1,0.092388,-0.0382683,0.1,0.092388,-0.0707107,-0.1,0.0707107,-0.0707107,0.1,0.0707107,-0.092388,-0.1,0.0382684,-0.092388,0.1,0.0382684,-0.1,-0.1,-1.19249e-9,-0.1,0.1,-1.19249e-9,-0.0923879,-0.1,-0.0382684,-0.0923879,0.1,-0.0382684,-0.0707107,-0.1,-0.0707107,-0.0707107,0.1,-0.0707107,-0.0382683,-0.1,-0.092388,-0.0382683,0.1,-0.092388,0,0.1,0,0,-0.1,0])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.246759,-0.114217,3.42423]),
                                          scale : new SFVec3f([1.57956,0.471647,0.743738]),
                                          center : new SFVec3f([-0.249095,0.626986,-0.00832599]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(1.00267),
                                                      diffuseColor : new SFColor([0,0.0426145,0.159574]),
                                                      specularColor : new SFColor([0.734043,0.734043,0.734043]),
                                                      transparency : new SFFloat(0.117021)})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_43"),
                                                      url : new MFString(["granite__2.png"])})),
                                                  textureTransform : new SFNode(
                                                    new TextureTransform({
                                                      scale : new SFVec2f([0.163906,0.0426618])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  texCoordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1,8,9,10,11,-1,12,13,14,15,-1,16,17,18,19,-1,20,21,22,23,-1]),
                                                  coordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1,8,9,10,11,-1,12,13,14,15,-1,16,17,18,19,-1,20,21,22,23,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.436623,0.598625,0.593939,0.599939,0.512695,0.942661,0.437833,0.946856,0.406464,0.601638,0.246708,0.603106,0.283252,0.959533,0.412746,0.950627,0.210125,0.655387,0.0211934,0.654897,0.0453464,0.954927,0.18568,0.952034,0.594633,0.599908,0.434678,0.601378,0.43889,0.948828,0.516015,0.943524,0.801473,0.602933,0.965258,0.602933,0.935349,0.87994,0.829724,0.881202,0.248915,0.597058,0.40855,0.598391,0.412745,0.948262,0.282665,0.955551])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.203332,0.208468,0.943123,0.376612,0.212601,0.943123,0.0526958,1.01991,0.673369,-0.216975,1.02974,0.670016,-0.314394,0.207677,-0.959775,-0.901541,0.203492,-0.959775,-0.774446,1.02197,-0.687387,-0.314912,1.02165,-0.687647,-0.949946,0.289087,-0.797846,-0.946459,0.314497,0.783598,-0.827145,1.05048,0.594698,-0.825175,1.02377,-0.607843,0.377175,0.212605,-0.959775,-0.210703,0.208416,-0.959775,-0.222137,1.02158,-0.687699,0.0515582,1.02139,-0.687854,0.451755,0.213137,0.87123,0.451755,0.213137,-0.883155,0.111554,1.02113,-0.603906,0.111733,1.01793,0.608617,-0.895319,0.203536,0.943123,-0.306825,0.207731,0.943123,-0.30735,1.03303,0.668892,-0.775931,1.05011,0.663066])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.391125,0.217053,3.4221]),
                                          scale : new SFVec3f([1.57956,0.471647,0.743738]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(0),
                                                      diffuseColor : new SFColor([0,0,0]),
                                                      emissiveColor : new SFColor([0.468085,0.468085,0.468085])})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_36")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,2,-1,0,3,1,-1]),
                                                  coordIndex : new MFInt32([0,1,2,-1,0,3,1,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.768126,0.46022,0.999243,0.160853,0.999818,0.45361,0.766976,0.15752])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0.963592,-0.103845,0.816256,0.963592,-0.765492,-0.833984,0.963592,-0.103845,-0.833984,0.963592,-0.765492,0.816256])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.391125,0.217053,3.4221]),
                                          scale : new SFVec3f([1.57956,0.471647,0.743738]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(0.489362),
                                                      diffuseColor : new SFColor([1,0.935346,0.920328]),
                                                      emissiveColor : new SFColor([0.648936,0,0.00826227])})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_36")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1]),
                                                  coordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.00115683,0.488722,0.000685288,0.603533,0.0167178,0.602167,0.0164821,0.488722,0.230328,0.589865,0.22961,0.470431,0.215003,0.470954,0.215463,0.59109])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.964529,-0.030656,0.960059,-0.964529,0.203043,0.943123,-0.964529,0.203043,0.789832,-0.964529,-0.0325223,0.806399,-0.964529,0.203043,-0.959775,-0.964529,-0.0871512,-0.974649,-0.964529,-0.0891783,-0.837856,-0.964529,0.203043,-0.823146])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([23.2693,-0.874556,12.236]),
                                          rotation : new SFRotation([0,1,0,3.1416]),
                                          scale : new SFVec3f([0.535306,0.535306,0.535306]),
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([45.7545,2.09838,15.2765]),
                                              children : new MFNode([
                                                new Billboard({
                                                  axisOfRotation : new SFVec3f([0,0,0]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([-45.5908,-2.07082,-17.7179]),
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([45.5908,2.07082,16.6418]),
                                                          scale : new SFVec3f([0.999997,1,0.999997]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  material : new SFNode(
                                                                    new Material({
                                                                      DEF : new SFString("_44"),
                                                                      ambientIntensity : new SFFloat(0.16),
                                                                      diffuseColor : new SFColor([1,0.0120871,0]),
                                                                      emissiveColor : new SFColor([0.638298,0.00771515,0]),
                                                                      shininess : new SFFloat(0)})),
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      DEF : new SFString("_45"),
                                                                      url : new MFString(["pologlow.png"])}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  creaseAngle : new SFFloat(0.5),
                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-1.07612,1.07613,1.07609,-1.07612,-1.07613,1.07609,1.07612,-1.07613,1.07609,1.07612,1.07613,1.07609])}))}))})])})])})])})])}),

                                            new Transform({
                                              translation : new SFVec3f([45.7545,2.09838,17.7997]),
                                              children : new MFNode([
                                                new Billboard({
                                                  axisOfRotation : new SFVec3f([0,0,0]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([-45.5908,-2.07082,-17.7179]),
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([45.5908,2.07082,16.6418]),
                                                          scale : new SFVec3f([0.999997,1,0.999997]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  material : new SFNode(
                                                                    new Material({
                                                                      USE : new SFString("_44")})),
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_45")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  creaseAngle : new SFFloat(0.5),
                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-1.07612,1.07613,1.07609,-1.07612,-1.07613,1.07609,1.07612,-1.07613,1.07609,1.07612,1.07613,1.07609])}))}))})])})])})])})])})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.342256,-0.39327,3.33803]),
                                          rotation : new SFRotation([8.96324e-7,-0.707107,0.707107,3.1416]),
                                          scale : new SFVec3f([4.37387,2.33866,2.53843]),
                                          center : new SFVec3f([-0.0123757,0.0468316,0]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(0),
                                                      diffuseColor : new SFColor([0,0,0]),
                                                      shininess : new SFFloat(0)})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_31")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.578771,-0.5,0,0.55402,-0.5,0,0.55402,0.593663,0,-0.578771,0.593663,0])}))}))})])}),

                                        new Viewpoint({
                                          DEF : new SFString("poloblick-blau"),
                                          position : new SFVec3f([0.202271,0.463836,3.23185]),
                                          orientation : new SFRotation([-0.0756044,0.994148,-0.0771602,4.68588])}),

                                        new Transform({
                                          translation : new SFVec3f([0.195669,0.196808,3.42211]),
                                          rotation : new SFRotation([-4.53491e-11,1,-2.53698e-7,3.1416]),
                                          scale : new SFVec3f([3.96953,1.12752,3.43545]),
                                          children : new MFNode([
                                            new VisibilitySensor({
                                              DEF : new SFString("_46"),
                                              size : new SFVec3f([1,1,1])})])})])}),

                                    new Transform({
                                      DEF : new SFString("Polo2"),
                                      translation : new SFVec3f([-59.3303,1.78757,-226.319]),
                                      rotation : new SFRotation([-7.59441e-7,1,2.06363e-8,4.71239]),
                                      scale : new SFVec3f([1.54507,1.54507,1.63503]),
                                      scaleOrientation : new SFRotation([3.82331e-12,1.39126e-10,-1,0.184314]),
                                      center : new SFVec3f([2.52141,0.176923,3.38321]),
                                      children : new MFNode([
                                        new Group({
                                          children : new MFNode([
                                            new Group({
                                              DEF : new SFString("polofahr"),
                                              children : new MFNode([
                                                new TimeSensor({
                                                  DEF : new SFString("Time_6"),
                                                  cycleInterval : new SFTime(32),
                                                  loop : new SFBool(true)})])}),

                                            new PositionInterpolator({
                                              DEF : new SFString("UnnamedTransformTranslationInterp_2"),
                                              key : new MFFloat([0,0.00125,0.0025,0.00375,0.005,0.00625,0.0075,0.00875,0.01,0.01125,0.0125,0.01375,0.015,0.01625,0.0175,0.01875,0.02,0.02125,0.0225,0.02375,0.025,0.02625,0.0275,0.02875,0.03,0.03125,0.0325,0.03375,0.035,0.03625,0.0375,0.03875,0.04,0.04125,0.0425,0.04375,0.045,0.04625,0.0475,0.04875,0.05,0.05125,0.0525,0.05375,0.055,0.05625,0.0575,0.05875,0.06,0.06125,0.0625,0.06375,0.065,0.06625,0.0675,0.06875,0.07,0.07125,0.0725,0.07375,0.075,0.07625,0.0775,0.07875,0.08,0.08125,0.0825,0.08375,0.085,0.08625,0.0875,0.08875,0.09,0.09125,0.0924999,0.0937499,0.0949999,0.0962499,0.0974999,0.0987499,0.0999999,0.10125,0.1025,0.10375,0.105,0.10625,0.1075,0.10875,0.11,0.11125,0.1125,0.11375,0.115,0.11625,0.1175,0.11875,0.12,0.12125,0.1225,0.12375,0.125,0.12625,0.1275,0.12875,0.13,0.13125,0.1325,0.13375,0.135,0.13625,0.1375,0.13875,0.14,0.14125,0.1425,0.14375,0.145,0.14625,0.1475,0.14875,0.15,0.15125,0.1525,0.15375,0.155,0.15625,0.1575,0.15875,0.16,0.16125,0.1625,0.16375,0.165,0.16625,0.1675,0.16875,0.17,0.17125,0.1725,0.17375,0.175,0.17625,0.1775,0.17875,0.18,0.18125,0.1825,0.18375,0.185,0.18625,0.1875,0.18875,0.19,0.19125,0.1925,0.19375,0.195,0.19625,0.1975,0.19875,0.2,0.20125,0.2025,0.20375,0.205,0.20625,0.2075,0.20875,0.21,0.21125,0.2125,0.21375,0.215,0.21625,0.2175,0.21875,0.22,0.22125,0.2225,0.22375,0.225,0.22625,0.2275,0.22875,0.23,0.23125,0.2325,0.23375,0.235,0.23625,0.2375,0.23875,0.24,0.24125,0.2425,0.24375,0.245,0.24625,0.2475,0.24875,0.25,0.25125,0.2525,0.25375,0.255,0.25625,0.2575,0.25875,0.26,0.26125,0.2625,0.26375,0.265,0.26625,0.2675,0.26875,0.27,0.27125,0.2725,0.27375,0.275,0.27625,0.2775,0.27875,0.28,0.28125,0.2825,0.28375,0.285,0.28625,0.2875,0.28875,0.29,0.29125,0.2925,0.29375,0.295,0.29625,0.2975,0.29875,0.3,0.30125,0.3025,0.30375,0.305,0.30625,0.3075,0.30875,0.31,0.31125,0.3125,0.31375,0.315,0.31625,0.3175,0.31875,0.32,0.321266,0.322532,0.323797,0.325063,0.326329,0.327595,0.328861,0.330127,0.331392,0.332658,0.333924,0.33519,0.336456,0.337722,0.338987,0.340253,0.341519,0.342785,0.344051,0.345316,0.346582,0.347848,0.349114,0.35038,0.351646,0.352911,0.354177,0.355443,0.356709,0.357975,0.359241,0.360506,0.361772,0.363038,0.364304,0.36557,0.366835,0.368101,0.369367,0.370633,0.371899,0.373165,0.37443,0.375696,0.376962,0.378228,0.379494,0.38076,0.382025,0.383291,0.384557,0.385823,0.387089,0.388354,0.38962,0.390886,0.392152,0.393418,0.394684,0.395949,0.397215,0.398481,0.399747,0.401013,0.402279,0.403544,0.40481,0.406076,0.407342,0.408608,0.409873,0.411139,0.412405,0.413671,0.414937,0.416203,0.417468,0.418734,0.42,0.42125,0.4225,0.42375,0.425,0.42625,0.4275,0.42875,0.43,0.43125,0.4325,0.43375,0.435,0.43625,0.4375,0.43875,0.44,0.44125,0.4425,0.44375,0.445,0.44625,0.4475,0.44875,0.45,0.45125,0.4525,0.45375,0.455,0.45625,0.4575,0.45875,0.46,0.46125,0.4625,0.46375,0.465,0.46625,0.4675,0.46875,0.47,0.47125,0.4725,0.47375,0.475,0.47625,0.4775,0.47875,0.48,0.48125,0.4825,0.48375,0.485,0.48625,0.4875,0.48875,0.49,0.491429,0.492857,0.494286,0.495714,0.497143,0.498571,0.5,0.501429,0.502857,0.504286,0.505714,0.507143,0.508571,0.51,0.51125,0.5125,0.51375,0.515,0.51625,0.5175,0.51875,0.52,0.52125,0.5225,0.52375,0.525,0.52625,0.5275,0.52875,0.53,0.53125,0.532501,0.533751,0.535001,0.536251,0.537501,0.538751,0.54,0.541282,0.542564,0.543846,0.545128,0.54641,0.547692,0.548974,0.550256,0.551538,0.55282,0.554102,0.555384,0.556666,0.557949,0.559231,0.560513,0.561795,0.563077,0.564359,0.565641,0.566923,0.568205,0.569487,0.570769,0.572051,0.573333,0.574615,0.575897,0.577179,0.578461,0.579743,0.581025,0.582307,0.583589,0.584871,0.586153,0.587435,0.588717,0.59,0.59125,0.5925,0.59375,0.595,0.59625,0.5975,0.59875,0.6,0.60125,0.6025,0.60375,0.605,0.60625,0.6075,0.60875,0.61,0.61125,0.6125,0.613751,0.615001,0.616251,0.617501,0.618751,0.62,0.62125,0.6225,0.62375,0.625,0.62625,0.6275,0.62875,0.63,0.63125,0.6325,0.63375,0.635,0.63625,0.6375,0.63875,0.64,0.64125,0.642501,0.643751,0.645001,0.646251,0.647501,0.648751,0.650001,0.651251,0.652501,0.653751,0.655001,0.656251,0.657501,0.658751,0.66,0.661266,0.662532,0.663797,0.665063,0.666329,0.667595,0.668861,0.670127,0.671392,0.672658,0.673924,0.67519,0.676456,0.677722,0.678987,0.680253,0.681519,0.682785,0.684051,0.685317,0.686582,0.687848,0.689114,0.69038,0.691646,0.692911,0.694177,0.695443,0.696709,0.697975,0.699241,0.700506,0.701772,0.703038,0.704304,0.70557,0.706836,0.708101,0.709367,0.710633,0.711899,0.713165,0.71443,0.715696,0.716962,0.718228,0.719494,0.72076,0.722025,0.723291,0.724557,0.725823,0.727089,0.728355,0.72962,0.730886,0.732152,0.733418,0.734684,0.735949,0.737215,0.738481,0.739747,0.741013,0.742279,0.743544,0.74481,0.746076,0.747342,0.748608,0.749874,0.751139,0.752405,0.753671,0.754937,0.756203,0.757468,0.758734,0.76,0.76125,0.7625,0.76375,0.765,0.76625,0.7675,0.76875,0.77,0.77125,0.7725,0.77375,0.775,0.77625,0.7775,0.77875,0.78,0.78125,0.782501,0.783751,0.785001,0.786251,0.787501,0.788751,0.79,0.79127,0.79254,0.793809,0.795079,0.796349,0.797619,0.798889,0.800159,0.801428,0.802698,0.803968,0.805238,0.806508,0.807777,0.809047,0.810317,0.811587,0.812857,0.814127,0.815396,0.816666,0.817936,0.819206,0.820476,0.821745,0.823015,0.824285,0.825555,0.826825,0.828095,0.829364,0.830634,0.831904,0.833174,0.834444,0.835713,0.836983,0.838253,0.839523,0.840793,0.842063,0.843332,0.844602,0.845872,0.847142,0.848412,0.849681,0.850951,0.852221,0.853491,0.854761,0.856031,0.8573,0.85857,0.85984,0.86111,0.86238,0.863649,0.864919,0.866189,0.867459,0.868729,0.87,0.87125,0.8725,0.87375,0.875,0.87625,0.8775,0.87875,0.88,0.88125,0.8825,0.88375,0.885,0.88625,0.8875,0.88875,0.89,0.89125,0.892501,0.893751,0.895001,0.896251,0.897501,0.898751,0.900001,0.901251,0.902501,0.903751,0.905001,0.906251,0.907501,0.908751,0.910001,0.911251,0.912501,0.913751,0.915001,0.916251,0.917501,0.918751,0.920001,0.921251,0.922501,0.923751,0.925001,0.926251,0.927501,0.928751,0.930001,0.931251,0.932501,0.933751,0.935001,0.936252,0.937502,0.938752,0.940002,0.941252,0.942502,0.943752,0.945002,0.946252,0.947502,0.948752,0.950002,0.951252,0.952502,0.953752,0.955002,0.956252,0.957502,0.958752,0.960002,0.961252,0.962502,0.963752,0.965002,0.966252,0.967502,0.968752,0.970002,0.971252,0.972502,0.973752,0.975002,0.976252,0.977502,0.978752,0.980003,0.981253,0.982503,0.983753,0.985003,0.986253,0.987503,0.988753,0.990003,0.991253,0.992503,0.993753,0.995003,0.996253,0.997503,0.998753,1]),
                                              keyValue : new MFVec3f([-59.3303,1.78757,-226.319,-59.3328,1.78757,-225.426,-59.3354,1.78757,-224.534,-59.3379,1.78757,-223.641,-59.3405,1.78757,-222.748,-59.343,1.78757,-221.856,-59.3456,1.78757,-220.963,-59.3481,1.78757,-220.07,-59.3507,1.78756,-219.178,-59.3532,1.78756,-218.285,-59.3558,1.78756,-217.392,-59.3584,1.78756,-216.5,-59.3609,1.78756,-215.607,-59.3635,1.78756,-214.715,-59.3661,1.78756,-213.822,-59.3686,1.78756,-212.929,-59.3712,1.78756,-212.037,-59.3738,1.78756,-211.144,-59.3764,1.78756,-210.252,-59.3789,1.78756,-209.359,-59.3815,1.78756,-208.466,-59.3841,1.78756,-207.574,-59.3867,1.78756,-206.681,-59.3893,1.78755,-205.789,-59.3919,1.78755,-204.896,-59.3945,1.78755,-204.004,-59.3971,1.78755,-203.111,-59.3997,1.78755,-202.219,-59.4023,1.78755,-201.326,-59.4049,1.78755,-200.434,-59.4075,1.78755,-199.541,-59.4101,1.78755,-198.649,-59.4127,1.78755,-197.756,-59.4153,1.78755,-196.864,-59.4179,1.78755,-195.971,-59.4205,1.78755,-195.079,-59.4231,1.78755,-194.186,-59.4257,1.78755,-193.294,-59.4283,1.78754,-192.401,-59.4309,1.78754,-191.509,-59.4336,1.78754,-190.616,-59.4362,1.78754,-189.724,-59.4388,1.78754,-188.831,-59.4414,1.78754,-187.939,-59.444,1.78754,-187.046,-59.4467,1.78754,-186.154,-59.4493,1.78754,-185.261,-59.4519,1.78754,-184.369,-59.4545,1.78754,-183.476,-59.4572,1.78754,-182.584,-59.4598,1.78754,-181.691,-59.4624,1.78754,-180.799,-59.465,1.78754,-179.907,-59.4677,1.78753,-179.014,-59.4703,1.78753,-178.122,-59.4729,1.78753,-177.229,-59.4756,1.78753,-176.337,-59.4782,1.78753,-175.444,-59.4809,1.78753,-174.552,-59.4835,1.78753,-173.66,-59.4861,1.78753,-172.767,-59.4888,1.78753,-171.875,-59.4914,1.78753,-170.982,-59.494,1.78753,-170.09,-59.4967,1.78753,-169.198,-59.4993,1.78753,-168.305,-59.502,1.78753,-167.413,-59.5046,1.78753,-166.52,-59.5073,1.78753,-165.628,-59.5099,1.78752,-164.736,-59.5126,1.78752,-163.843,-59.5152,1.78752,-162.951,-59.5178,1.78752,-162.058,-59.5205,1.78752,-161.166,-59.5231,1.78752,-160.274,-59.5258,1.78752,-159.381,-59.5284,1.78752,-158.489,-59.5311,1.78752,-157.596,-59.5337,1.78752,-156.704,-59.5364,1.78752,-155.812,-59.539,1.78752,-154.919,-59.5417,1.78752,-154.027,-59.5443,1.78752,-153.134,-59.547,1.78752,-152.242,-59.5496,1.78751,-151.35,-59.5523,1.78751,-150.457,-59.5549,1.78751,-149.565,-59.5576,1.78751,-148.672,-59.5602,1.78751,-147.78,-59.5629,1.78751,-146.888,-59.5655,1.78751,-145.995,-59.5681,1.78751,-145.103,-59.5708,1.78751,-144.21,-59.5734,1.78751,-143.318,-59.5761,1.78751,-142.426,-59.5787,1.78751,-141.533,-59.5814,1.78751,-140.641,-59.584,1.78751,-139.749,-59.5867,1.78751,-138.856,-59.5893,1.7875,-137.964,-59.592,1.7875,-137.071,-59.5946,1.7875,-136.179,-59.5973,1.7875,-135.287,-59.5999,1.7875,-134.394,-59.6025,1.7875,-133.502,-59.6052,1.7875,-132.609,-59.6078,1.7875,-131.717,-59.6105,1.7875,-130.824,-59.6131,1.7875,-129.932,-59.6158,1.7875,-129.04,-59.6184,1.7875,-128.147,-59.621,1.7875,-127.255,-59.6237,1.7875,-126.362,-59.6263,1.7875,-125.47,-59.6289,1.7875,-124.578,-59.6316,1.78749,-123.685,-59.6342,1.78749,-122.793,-59.6368,1.78749,-121.9,-59.6395,1.78749,-121.008,-59.6421,1.78749,-120.115,-59.6447,1.78749,-119.223,-59.6474,1.78749,-118.331,-59.65,1.78749,-117.438,-59.6526,1.78749,-116.546,-59.6553,1.78749,-115.653,-59.6579,1.78749,-114.761,-59.6605,1.78749,-113.868,-59.6631,1.78749,-112.976,-59.6657,1.78749,-112.083,-59.6684,1.78749,-111.191,-59.671,1.78748,-110.298,-59.6736,1.78748,-109.406,-59.6762,1.78748,-108.513,-59.6788,1.78748,-107.621,-59.6814,1.78748,-106.728,-59.6841,1.78748,-105.836,-59.6867,1.78748,-104.944,-59.6893,1.78748,-104.051,-59.6919,1.78748,-103.159,-59.6945,1.78748,-102.266,-59.6971,1.78748,-101.373,-59.6997,1.78748,-100.481,-59.7023,1.78748,-99.5885,-59.7049,1.78748,-98.6959,-59.7075,1.78747,-97.8034,-59.7101,1.78747,-96.9109,-59.7127,1.78747,-96.0183,-59.7153,1.78747,-95.1258,-59.7179,1.78747,-94.2332,-59.7204,1.78747,-93.3407,-59.723,1.78747,-92.4481,-59.7256,1.78747,-91.5555,-59.7282,1.78747,-90.663,-59.7308,1.78747,-89.7704,-59.7334,1.78747,-88.8778,-59.7359,1.78747,-87.9852,-59.7385,1.78747,-87.0927,-59.7411,1.78747,-86.2,-59.7436,1.78747,-85.3074,-59.7462,1.78747,-84.4148,-59.7488,1.78746,-83.5222,-59.7513,1.78746,-82.6296,-59.7539,1.78746,-81.737,-59.7565,1.78746,-80.8443,-59.759,1.78746,-79.9517,-59.7616,1.78746,-79.059,-59.7641,1.78746,-78.1664,-59.7667,1.78746,-77.2737,-59.7692,1.78746,-76.381,-59.7718,1.78746,-75.4884,-59.7743,1.78746,-74.5956,-59.7768,1.78746,-73.703,-59.7794,1.78746,-72.8102,-59.7819,1.78746,-71.9176,-59.7844,1.78746,-71.0249,-59.787,1.78745,-70.1321,-59.7895,1.78745,-69.2394,-59.792,1.78745,-68.3467,-59.7945,1.78745,-67.4539,-59.797,1.78745,-66.5612,-59.7996,1.78745,-65.6684,-59.8021,1.78745,-64.7757,-59.8046,1.78745,-63.8829,-59.8071,1.78745,-62.9901,-59.8096,1.78745,-62.0974,-59.8121,1.78745,-61.2045,-59.8146,1.78745,-60.3117,-59.8171,1.78745,-59.4189,-59.8195,1.78745,-58.5261,-59.822,1.78745,-57.6332,-59.8245,1.78744,-56.7404,-59.827,1.78744,-55.8476,-59.8295,1.78744,-54.9547,-59.832,1.78744,-54.0619,-59.8344,1.78744,-53.169,-59.8369,1.78744,-52.2761,-59.8394,1.78744,-51.3832,-59.8418,1.78744,-50.4903,-59.8443,1.78744,-49.5974,-59.8467,1.78744,-48.7045,-59.8492,1.78744,-47.8116,-59.8516,1.78744,-46.9186,-59.8541,1.78744,-46.0257,-59.8565,1.78744,-45.1327,-59.8589,1.78744,-44.2398,-59.8614,1.78743,-43.3467,-59.8638,1.78743,-42.4538,-59.8662,1.78743,-41.5608,-59.8686,1.78743,-40.6678,-59.8711,1.78743,-39.7748,-59.8735,1.78743,-38.8817,-59.8759,1.78743,-37.9887,-59.8783,1.78743,-37.0957,-59.8807,1.78743,-36.2026,-59.8831,1.78743,-35.3095,-59.8855,1.78743,-34.4165,-59.8879,1.78743,-33.5233,-59.8903,1.78743,-32.6302,-59.8926,1.78743,-31.7371,-59.895,1.78743,-30.844,-59.8974,1.78742,-29.9509,-59.8998,1.78742,-29.0577,-59.9021,1.78742,-28.1646,-59.9045,1.78742,-27.2714,-59.9069,1.78742,-26.3782,-59.9092,1.78742,-25.485,-59.9116,1.78742,-24.5918,-59.9139,1.78742,-23.6986,-59.9162,1.78742,-22.8054,-59.9186,1.78742,-21.9122,-59.9209,1.78742,-21.0189,-59.9232,1.78742,-20.1257,-59.9256,1.78742,-19.2324,-59.9279,1.78742,-18.3391,-59.9302,1.78742,-17.4458,-59.9325,1.78741,-16.5525,-59.9348,1.78741,-15.6592,-59.9371,1.78741,-14.7659,-59.9394,1.78741,-13.8724,-59.9417,1.78741,-12.9791,-59.944,1.78741,-12.0857,-59.9463,1.78741,-11.1923,-59.9485,1.78741,-10.299,-59.9508,1.78741,-9.4056,-59.9531,1.78741,-8.51212,-59.9553,1.78741,-7.61871,-59.9576,1.78741,-6.72525,-59.9599,1.78741,-5.83179,-59.9621,1.78741,-4.93832,-59.9643,1.7874,-4.0448,-59.9666,1.7874,-3.15131,-59.9688,1.7874,-2.25785,-59.971,1.7874,-1.36434,-59.9733,1.7874,-0.470738,-59.9755,1.7874,0.422876,-59.9777,1.7874,1.31639,-59.9799,1.7874,2.21015,-59.982,1.7874,3.11531,-59.9839,1.7874,4.02099,-59.9855,1.7874,4.92715,-59.987,1.7874,5.83378,-59.9882,1.7874,6.74087,-59.9892,1.7874,7.6484,-59.99,1.7874,8.55635,-59.9906,1.78739,9.46471,-59.9911,1.78739,10.3734,-59.9914,1.78739,11.2826,-59.9915,1.78739,12.192,-59.9915,1.78739,13.1018,-59.9913,1.78739,14.0119,-59.991,1.78739,14.9224,-59.9905,1.78739,15.8331,-59.9899,1.78739,16.744,-59.9893,1.78739,17.6553,-59.9885,1.78739,18.5667,-59.9876,1.78739,19.4784,-59.9866,1.78739,20.3903,-59.9856,1.78738,21.3023,-59.9845,1.78738,22.2146,-59.9833,1.78738,23.1269,-59.982,1.78738,24.0394,-59.9808,1.78738,24.952,-59.9794,1.78738,25.8648,-59.9781,1.78738,26.7775,-59.9767,1.78738,27.6904,-59.9753,1.78738,28.6033,-59.9739,1.78738,29.5162,-59.9725,1.78738,30.4292,-59.9712,1.78738,31.3421,-59.9698,1.78738,32.255,-59.9685,1.78738,33.1679,-59.9672,1.78737,34.0807,-59.9659,1.78737,34.9934,-59.9647,1.78737,35.9061,-59.9636,1.78737,36.8186,-59.9625,1.78737,37.731,-59.9615,1.78737,38.6433,-59.9606,1.78737,39.5554,-59.9598,1.78737,40.4673,-59.9591,1.78737,41.3791,-59.9585,1.78737,42.2906,-59.958,1.78737,43.2019,-59.9577,1.78737,44.113,-59.9575,1.78737,45.0238,-59.9574,1.78736,45.9343,-59.9575,1.78736,46.8445,-59.9577,1.78736,47.7544,-59.9581,1.78736,48.664,-59.9587,1.78736,49.5732,-59.9594,1.78736,50.4821,-59.9604,1.78736,51.3906,-59.9616,1.78736,52.2986,-59.9629,1.78736,53.2063,-59.9645,1.78736,54.1135,-59.9663,1.78736,55.0203,-59.9684,1.78736,55.9266,-59.9706,1.78736,56.8325,-59.9732,1.78735,57.7378,-59.976,1.78735,58.6426,-59.979,1.78735,59.5469,-59.9824,1.78735,60.4506,-59.986,1.78735,61.3538,-59.9899,1.78735,62.2564,-59.9941,1.78735,63.1583,-59.9986,1.78735,64.0597,-60.0035,1.78735,64.9604,-60.0087,1.78735,65.8604,-60.0141,1.78735,66.7598,-60.02,1.78735,67.6585,-60.0262,1.78734,68.5565,-60.0327,1.78734,69.4537,-60.0396,1.78734,70.3502,-60.0469,1.78734,71.246,-60.0546,1.78734,72.141,-60.0626,1.78734,73.0352,-60.0711,1.78734,73.9285,-60.0809,1.78734,74.8099,-60.0929,1.78734,75.6903,-60.1072,1.78734,76.5698,-60.1236,1.78734,77.4484,-60.142,1.78734,78.3261,-60.1622,1.78734,79.2028,-60.1841,1.78733,80.0786,-60.2076,1.78733,80.9534,-60.2326,1.78733,81.8273,-60.259,1.78733,82.7001,-60.2866,1.78733,83.5721,-60.3153,1.78733,84.443,-60.3451,1.78733,85.3129,-60.3757,1.78733,86.1819,-60.407,1.78733,87.0498,-60.439,1.78733,87.9167,-60.4715,1.78733,88.7826,-60.5044,1.78732,89.6475,-60.5376,1.78732,90.5114,-60.5709,1.78732,91.3742,-60.6043,1.78732,92.2359,-60.6376,1.78732,93.0966,-60.6706,1.78732,93.9563,-60.7034,1.78732,94.8149,-60.7356,1.78732,95.6724,-60.7673,1.78732,96.5288,-60.7984,1.78732,97.3841,-60.8285,1.78732,98.2384,-60.8578,1.78732,99.0915,-60.886,1.78731,99.9435,-60.913,1.78731,100.794,-60.9387,1.78731,101.644,-60.963,1.78731,102.493,-60.9858,1.78731,103.34,-61.0069,1.78731,104.187,-61.0262,1.78731,105.032,-61.0436,1.78731,105.876,-61.0589,1.78731,106.719,-61.0722,1.78731,107.561,-61.0831,1.78731,108.401,-61.0917,1.78731,109.24,-61.0977,1.7873,110.079,-61.1012,1.7873,110.916,-61.1018,1.7873,111.751,-61.0996,1.7873,112.586,-61.0945,1.7873,113.419,-61.0861,1.7873,114.251,-61.0746,1.7873,115.082,-61.1235,1.7873,115.959,-61.2465,1.7873,116.892,-61.3684,1.7873,117.823,-61.4141,1.7873,118.694,-61.3084,1.7873,119.447,-60.9762,1.7873,120.024,-60.3424,1.7873,120.368,-59.3318,1.7873,120.42,-57.4736,1.7873,120.053,-54.8934,1.7873,119.284,-51.8864,1.7873,118.223,-48.7474,1.78731,116.982,-45.7716,1.78731,115.67,-43.254,1.78731,114.399,-41.4895,1.78731,113.278,-40.5325,1.78731,112.272,-40.1389,1.78731,111.269,-40.156,1.78731,110.271,-40.4311,1.78731,109.275,-40.8115,1.78731,108.283,-41.1445,1.78731,107.293,-41.2775,1.78731,106.305,-41.2621,1.78731,105.442,-41.2473,1.78731,104.579,-41.233,1.78731,103.717,-41.2194,1.78731,102.855,-41.2062,1.78731,101.993,-41.1934,1.78731,101.131,-41.1811,1.78731,100.27,-41.1691,1.78731,99.4089,-41.1574,1.78731,98.5481,-41.1459,1.78731,97.6875,-41.1346,1.78731,96.8271,-41.1235,1.78731,95.9669,-41.1125,1.78731,95.1069,-41.1016,1.78732,94.2471,-41.0907,1.78732,93.3874,-41.0797,1.78732,92.5279,-41.0687,1.78732,91.6686,-41.0575,1.78732,90.8094,-41.0461,1.78732,89.9503,-41.0345,1.78732,89.0914,-41.0227,1.78732,88.2325,-41.0105,1.78732,87.3738,-40.998,1.78732,86.5151,-40.985,1.78732,85.657,-40.9724,1.78732,84.7767,-40.9614,1.78732,83.8969,-40.952,1.78732,83.0176,-40.944,1.78732,82.1387,-40.9372,1.78732,81.2601,-40.9315,1.78732,80.3819,-40.9268,1.78732,79.504,-40.923,1.78732,78.6264,-40.9198,1.78732,77.749,-40.9171,1.78732,76.8718,-40.9149,1.78733,75.9948,-40.9129,1.78733,75.1179,-40.911,1.78733,74.2411,-40.9091,1.78733,73.3643,-40.907,1.78733,72.4876,-40.9046,1.78733,71.6108,-40.9017,1.78733,70.7341,-40.8983,1.78733,69.8572,-40.8941,1.78733,68.9802,-40.889,1.78733,68.103,-40.8828,1.78733,67.2257,-40.8755,1.78733,66.3481,-40.8669,1.78733,65.4702,-40.8568,1.78733,64.5921,-40.8451,1.78733,63.7136,-40.8317,1.78733,62.8348,-40.8164,1.78733,61.9555,-40.799,1.78733,61.0758,-40.7795,1.78733,60.1956,-40.7576,1.78733,59.3149,-40.7333,1.78734,58.4336,-40.7064,1.78734,57.5518,-40.6768,1.78734,56.6693,-40.6442,1.78734,55.7862,-40.6087,1.78734,54.9024,-40.5699,1.78734,54.0178,-40.5279,1.78734,53.1325,-40.4823,1.78734,52.2464,-40.4332,1.78734,51.3591,-40.3774,1.78734,50.4929,-40.31,1.78734,49.625,-40.232,1.78734,48.7553,-40.1442,1.78734,47.884,-40.0477,1.78734,47.0112,-39.9434,1.78734,46.137,-39.8323,1.78735,45.2616,-39.7152,1.78735,44.3849,-39.5931,1.78735,43.5072,-39.4669,1.78735,42.6285,-39.3377,1.78735,41.749,-39.2063,1.78735,40.8686,-39.0737,1.78735,39.9877,-38.9408,1.78735,39.1061,-38.8086,1.78735,38.2241,-38.678,1.78735,37.3418,-38.5499,1.78735,36.4592,-38.4254,1.78736,35.5765,-38.3052,1.78736,34.6938,-38.1905,1.78736,33.8111,-38.0821,1.78736,32.9286,-37.981,1.78736,32.0464,-37.888,1.78736,31.1646,-37.8043,1.78736,30.2837,-37.7252,1.78736,29.4023,-37.6458,1.78736,28.5204,-37.5662,1.78736,27.638,-37.4867,1.78736,26.7551,-37.4074,1.78736,25.8717,-37.3285,1.78736,24.9879,-37.2501,1.78736,24.1038,-37.1726,1.78736,23.2194,-37.096,1.78736,22.3348,-37.0206,1.78736,21.4499,-36.9464,1.78736,20.5649,-36.8738,1.78736,19.6797,-36.8028,1.78736,18.7945,-36.7337,1.78736,17.9093,-36.6667,1.78737,17.024,-36.6019,1.78737,16.1388,-36.5394,1.78737,15.2538,-36.4796,1.78737,14.3688,-36.4225,1.78737,13.4841,-36.3684,1.78737,12.5996,-36.3174,1.78737,11.7154,-36.2698,1.78737,10.8315,-36.2256,1.78737,9.94801,-36.1851,1.78737,9.06493,-36.1485,1.78737,8.18231,-36.1159,1.78737,7.3002,-36.0875,1.78737,6.41864,-36.0636,1.78737,5.53769,-36.0442,1.78737,4.65738,-36.0296,1.78737,3.77776,-36.0199,1.78737,2.89888,-36.0154,1.78737,2.0214,-36.0141,1.78737,1.13265,-36.0138,1.78737,0.243976,-36.0148,1.78737,-0.644619,-36.0167,1.78737,-1.53314,-36.0198,1.78737,-2.42158,-36.0239,1.78737,-3.30995,-36.0291,1.78737,-4.19825,-36.0352,1.78737,-5.08647,-36.0423,1.78737,-5.97462,-36.0504,1.78737,-6.8627,-36.0593,1.78738,-7.75071,-36.0692,1.78738,-8.63865,-36.08,1.78738,-9.52652,-36.0917,1.78738,-10.4143,-36.1042,1.78738,-11.3021,-36.1175,1.78738,-12.1897,-36.1315,1.78738,-13.0773,-36.1464,1.78738,-13.9649,-36.162,1.78738,-14.8523,-36.1783,1.78738,-15.7398,-36.1953,1.78738,-16.6271,-36.213,1.78738,-17.5144,-36.2314,1.78738,-18.4016,-36.2504,1.78738,-19.2888,-36.27,1.78738,-20.1759,-36.2901,1.78738,-21.063,-36.3109,1.78738,-21.95,-36.3322,1.78738,-22.8369,-36.354,1.78738,-23.7238,-36.3762,1.78738,-24.6106,-36.399,1.78739,-25.4974,-36.4222,1.78739,-26.3841,-36.4458,1.78739,-27.2708,-36.4698,1.78739,-28.1574,-36.4943,1.78739,-29.044,-36.519,1.78739,-29.9305,-36.5441,1.78739,-30.817,-36.5695,1.78739,-31.7034,-36.5952,1.78739,-32.5898,-36.6211,1.78739,-33.4761,-36.6473,1.78739,-34.3624,-36.6737,1.78739,-35.2487,-36.7003,1.78739,-36.1349,-36.727,1.78739,-37.021,-36.7539,1.78739,-37.9072,-36.781,1.78739,-38.7932,-36.8081,1.78739,-39.6793,-36.8353,1.78739,-40.5653,-36.8626,1.78739,-41.4512,-36.8899,1.7874,-42.3372,-36.9172,1.7874,-43.223,-36.9445,1.7874,-44.1089,-36.9717,1.7874,-44.9947,-36.9989,1.7874,-45.8805,-37.026,1.7874,-46.7662,-37.053,1.7874,-47.652,-37.0799,1.7874,-48.5377,-37.1066,1.7874,-49.4233,-37.1332,1.7874,-50.3089,-37.1595,1.7874,-51.1945,-37.1856,1.7874,-52.0801,-37.2115,1.7874,-52.9656,-37.2371,1.7874,-53.8512,-37.2624,1.7874,-54.7366,-37.2874,1.7874,-55.6221,-37.3121,1.7874,-56.5076,-37.3364,1.7874,-57.393,-37.3604,1.7874,-58.2783,-37.3839,1.78741,-59.1637,-37.407,1.78741,-60.0491,-37.4296,1.78741,-60.9344,-37.4518,1.78741,-61.8197,-37.4734,1.78741,-62.705,-37.4946,1.78741,-63.5903,-37.5152,1.78741,-64.4756,-37.5352,1.78741,-65.3608,-37.5547,1.78741,-66.2461,-37.5735,1.78741,-67.1313,-37.5917,1.78741,-68.0164,-37.6114,1.78741,-68.8903,-37.6349,1.78741,-69.7635,-37.6614,1.78741,-70.6362,-37.6905,1.78741,-71.5084,-37.7214,1.78741,-72.3801,-37.7536,1.78741,-73.2514,-37.7865,1.78741,-74.1222,-37.8194,1.78741,-74.9926,-37.8517,1.78741,-75.8626,-37.8829,1.78741,-76.7323,-37.9122,1.78741,-77.6017,-37.9391,1.78742,-78.4708,-37.9631,1.78742,-79.3396,-37.9833,1.78742,-80.2082,-37.9993,1.78742,-81.0767,-38.0105,1.78742,-81.945,-38.0161,1.78742,-82.8131,-38.0157,1.78742,-83.6812,-38.0085,1.78742,-84.5492,-37.994,1.78742,-85.4171,-37.9716,1.78742,-86.2851,-37.9406,1.78742,-87.153,-37.9005,1.78742,-88.021,-37.8506,1.78742,-88.8887,-37.7945,1.78742,-89.7706,-37.7379,1.78742,-90.6523,-37.6807,1.78742,-91.534,-37.6231,1.78742,-92.4156,-37.5649,1.78742,-93.2971,-37.5062,1.78742,-94.1786,-37.4469,1.78742,-95.0599,-37.3871,1.78742,-95.9412,-37.3266,1.78742,-96.8225,-37.2655,1.78742,-97.7036,-37.2038,1.78743,-98.5847,-37.1415,1.78743,-99.4658,-37.0785,1.78743,-100.347,-37.0149,1.78743,-101.228,-36.9505,1.78743,-102.109,-36.8855,1.78743,-102.99,-36.8197,1.78743,-103.87,-36.7532,1.78743,-104.751,-36.6859,1.78743,-105.632,-36.6179,1.78743,-106.513,-36.5491,1.78743,-107.393,-36.4795,1.78743,-108.274,-36.4091,1.78743,-109.155,-36.3378,1.78743,-110.035,-36.2658,1.78743,-110.916,-36.1928,1.78743,-111.797,-36.119,1.78743,-112.678,-36.0443,1.78743,-113.558,-35.9687,1.78743,-114.439,-35.8922,1.78743,-115.32,-35.8147,1.78743,-116.2,-35.7363,1.78744,-117.081,-35.657,1.78744,-117.962,-35.5766,1.78744,-118.842,-35.4953,1.78744,-119.723,-35.4129,1.78744,-120.604,-35.3295,1.78744,-121.485,-35.2451,1.78744,-122.366,-35.1596,1.78744,-123.247,-35.073,1.78744,-124.128,-34.9854,1.78744,-125.009,-34.8966,1.78744,-125.89,-34.8067,1.78744,-126.771,-34.7157,1.78744,-127.652,-34.6236,1.78744,-128.534,-34.5302,1.78744,-129.415,-34.4357,1.78744,-130.296,-34.34,1.78744,-131.178,-34.2431,1.78744,-132.059,-34.145,1.78744,-132.941,-34.0456,1.78744,-133.823,-33.9449,1.78744,-134.705,-33.843,1.78745,-135.587,-33.7398,1.78745,-136.469,-33.6352,1.78745,-137.351,-33.5294,1.78745,-138.233,-33.4222,1.78745,-139.115,-33.3137,1.78745,-139.998,-33.2038,1.78745,-140.88,-33.0925,1.78745,-141.763,-32.9798,1.78745,-142.646,-32.8658,1.78745,-143.529,-32.7501,1.78745,-144.413,-32.6353,1.78745,-145.282,-32.5196,1.78745,-146.152,-32.4032,1.78745,-147.021,-32.2859,1.78745,-147.891,-32.1679,1.78745,-148.76,-32.0492,1.78745,-149.63,-31.9296,1.78745,-150.5,-31.8094,1.78745,-151.369,-31.6884,1.78745,-152.239,-31.5667,1.78745,-153.109,-31.4443,1.78746,-153.979,-31.3212,1.78746,-154.848,-31.1974,1.78746,-155.718,-31.073,1.78746,-156.588,-30.9479,1.78746,-157.458,-30.8221,1.78746,-158.328,-30.6957,1.78746,-159.198,-30.5687,1.78746,-160.068,-30.4411,1.78746,-160.938,-30.3129,1.78746,-161.808,-30.1841,1.78746,-162.678,-30.0548,1.78746,-163.548,-29.9248,1.78746,-164.419,-29.7944,1.78746,-165.289,-29.6634,1.78746,-166.159,-29.5318,1.78746,-167.029,-29.3998,1.78746,-167.9,-29.2672,1.78746,-168.77,-29.1342,1.78746,-169.64,-29.0007,1.78746,-170.511,-28.8667,1.78746,-171.381,-28.7322,1.78747,-172.251,-28.5974,1.78747,-173.122,-28.462,1.78747,-173.992,-28.3263,1.78747,-174.863,-28.1902,1.78747,-175.733,-28.0536,1.78747,-176.604,-27.9167,1.78747,-177.474,-27.7794,1.78747,-178.345,-27.6418,1.78747,-179.216,-27.5038,1.78747,-180.086,-27.3654,1.78747,-180.957,-27.2268,1.78747,-181.827,-27.0878,1.78747,-182.698,-26.9485,1.78747,-183.569,-26.809,1.78747,-184.439,-26.6691,1.78747,-185.31,-26.529,1.78747,-186.181,-26.3887,1.78747,-187.051,-26.2481,1.78747,-187.922,-26.1073,1.78747,-188.793,-25.9662,1.78747,-189.664,-25.825,1.78748,-190.534,-25.6835,1.78748,-191.405,-25.5419,1.78748,-192.276,-25.4001,1.78748,-193.147,-25.2582,1.78748,-194.018,-25.1161,1.78748,-194.888,-24.9739,1.78748,-195.759,-24.8315,1.78748,-196.63,-24.689,1.78748,-197.501,-24.5465,1.78748,-198.372,-24.4038,1.78748,-199.243,-24.2611,1.78748,-200.113,-24.1183,1.78748,-200.984,-23.9755,1.78748,-201.855,-23.8326,1.78748,-202.726,-23.6897,1.78748,-203.597,-23.5468,1.78748,-204.468,-23.4038,1.78748,-205.338,-23.2609,1.78748,-206.209,-23.118,1.78748,-207.08,-22.9752,1.78749,-207.951,-22.8323,1.78749,-208.822,-22.6896,1.78749,-209.693,-22.5469,1.78749,-210.564,-22.4042,1.78749,-211.434,-22.2617,1.78749,-212.305,-22.1193,1.78749,-213.176,-21.977,1.78749,-214.047,-21.8348,1.78749,-214.918,-21.6927,1.78749,-215.788,-21.5508,1.78749,-216.659,-21.4091,1.78749,-217.53,-21.2675,1.78749,-218.401,-21.1262,1.78749,-219.272,-20.985,1.78749,-220.142,-20.844,1.78749,-221.013,-20.7033,1.78749,-221.884,-20.5628,1.78749,-222.755,-20.4225,1.78749,-223.625,-20.2825,1.78749,-224.496,-20.1427,1.78749,-225.367,-20.0033,1.7875,-226.237,-19.8641,1.7875,-227.108,-19.7252,1.7875,-227.979,-19.5867,1.7875,-228.849,-19.4485,1.7875,-229.72,-19.3106,1.7875,-230.59,-19.173,1.7875,-231.461,-19.0359,1.7875,-232.332,-18.8991,1.7875,-233.202,-18.7627,1.7875,-234.073,-18.627,1.7875,-234.941])}),

                                            new OrientationInterpolator({
                                              DEF : new SFString("UnnamedTransformRotationInterp_2"),
                                              key : new MFFloat([0,0.00125,0.0025,0.00375,0.005,0.00625,0.0075,0.00875,0.01,0.01125,0.0125,0.01375,0.015,0.01625,0.0175,0.01875,0.02,0.02125,0.0225,0.02375,0.025,0.02625,0.0275,0.02875,0.03,0.03125,0.0325,0.03375,0.035,0.03625,0.0375,0.03875,0.04,0.04125,0.0425,0.04375,0.045,0.04625,0.0475,0.04875,0.05,0.05125,0.0525,0.05375,0.055,0.05625,0.0575,0.05875,0.06,0.06125,0.0625,0.06375,0.065,0.06625,0.0675,0.06875,0.07,0.07125,0.0725,0.07375,0.075,0.07625,0.0775,0.07875,0.08,0.08125,0.0825,0.08375,0.085,0.08625,0.0875,0.08875,0.09,0.09125,0.0924999,0.0937499,0.0949999,0.0962499,0.0974999,0.0987499,0.0999999,0.10125,0.1025,0.10375,0.105,0.10625,0.1075,0.10875,0.11,0.11125,0.1125,0.11375,0.115,0.11625,0.1175,0.11875,0.12,0.12125,0.1225,0.12375,0.125,0.12625,0.1275,0.12875,0.13,0.13125,0.1325,0.13375,0.135,0.13625,0.1375,0.13875,0.14,0.14125,0.1425,0.14375,0.145,0.14625,0.1475,0.14875,0.15,0.15125,0.1525,0.15375,0.155,0.15625,0.1575,0.15875,0.16,0.16125,0.1625,0.16375,0.165,0.16625,0.1675,0.16875,0.17,0.17125,0.1725,0.17375,0.175,0.17625,0.1775,0.17875,0.18,0.18125,0.1825,0.18375,0.185,0.18625,0.1875,0.18875,0.19,0.19125,0.1925,0.19375,0.195,0.19625,0.1975,0.19875,0.2,0.20125,0.2025,0.20375,0.205,0.20625,0.2075,0.20875,0.21,0.21125,0.2125,0.21375,0.215,0.21625,0.2175,0.21875,0.22,0.22125,0.2225,0.22375,0.225,0.22625,0.2275,0.22875,0.23,0.23125,0.2325,0.23375,0.235,0.23625,0.2375,0.23875,0.24,0.24125,0.2425,0.24375,0.245,0.24625,0.2475,0.24875,0.25,0.25125,0.2525,0.25375,0.255,0.25625,0.2575,0.25875,0.26,0.26125,0.2625,0.26375,0.265,0.26625,0.2675,0.26875,0.27,0.27125,0.2725,0.27375,0.275,0.27625,0.2775,0.27875,0.28,0.28125,0.2825,0.28375,0.285,0.28625,0.2875,0.28875,0.29,0.29125,0.2925,0.29375,0.295,0.29625,0.2975,0.29875,0.3,0.30125,0.3025,0.30375,0.305,0.30625,0.3075,0.30875,0.31,0.31125,0.3125,0.31375,0.315,0.31625,0.3175,0.31875,0.32,0.321266,0.322532,0.323797,0.325063,0.326329,0.327595,0.328861,0.330127,0.331392,0.332658,0.333924,0.33519,0.336456,0.337722,0.338987,0.340253,0.341519,0.342785,0.344051,0.345316,0.346582,0.347848,0.349114,0.35038,0.351646,0.352911,0.354177,0.355443,0.356709,0.357975,0.359241,0.360506,0.361772,0.363038,0.364304,0.36557,0.366835,0.368101,0.369367,0.370633,0.371899,0.373165,0.37443,0.375696,0.376962,0.378228,0.379494,0.38076,0.382025,0.383291,0.384557,0.385823,0.387089,0.388354,0.38962,0.390886,0.392152,0.393418,0.394684,0.395949,0.397215,0.398481,0.399747,0.401013,0.402279,0.403544,0.40481,0.406076,0.407342,0.408608,0.409873,0.411139,0.412405,0.413671,0.414937,0.416203,0.417468,0.418734,0.42,0.42125,0.4225,0.42375,0.425,0.42625,0.4275,0.42875,0.43,0.43125,0.4325,0.43375,0.435,0.43625,0.4375,0.43875,0.44,0.44125,0.4425,0.44375,0.445,0.44625,0.4475,0.44875,0.45,0.45125,0.4525,0.45375,0.455,0.45625,0.4575,0.45875,0.46,0.46125,0.4625,0.46375,0.465,0.46625,0.4675,0.46875,0.47,0.47125,0.4725,0.47375,0.475,0.47625,0.4775,0.47875,0.48,0.48125,0.4825,0.48375,0.485,0.48625,0.4875,0.48875,0.49,0.491429,0.492857,0.494286,0.495714,0.497143,0.498571,0.5,0.501429,0.502857,0.504286,0.505714,0.507143,0.508571,0.51,0.51125,0.5125,0.51375,0.515,0.51625,0.5175,0.51875,0.52,0.52125,0.5225,0.52375,0.525,0.52625,0.5275,0.52875,0.53,0.53125,0.532501,0.533751,0.535001,0.536251,0.537501,0.538751,0.54,0.541282,0.542564,0.543846,0.545128,0.54641,0.547692,0.548974,0.550256,0.551538,0.55282,0.554102,0.555384,0.556666,0.557949,0.559231,0.560513,0.561795,0.563077,0.564359,0.565641,0.566923,0.568205,0.569487,0.570769,0.572051,0.573333,0.574615,0.575897,0.577179,0.578461,0.579743,0.581025,0.582307,0.583589,0.584871,0.586153,0.587435,0.588717,0.59,0.59125,0.5925,0.59375,0.595,0.59625,0.5975,0.59875,0.6,0.60125,0.6025,0.60375,0.605,0.60625,0.6075,0.60875,0.61,0.61125,0.6125,0.613751,0.615001,0.616251,0.617501,0.618751,0.62,0.62125,0.6225,0.62375,0.625,0.62625,0.6275,0.62875,0.63,0.63125,0.6325,0.63375,0.635,0.63625,0.6375,0.63875,0.64,0.64125,0.642501,0.643751,0.645001,0.646251,0.647501,0.648751,0.650001,0.651251,0.652501,0.653751,0.655001,0.656251,0.657501,0.658751,0.66,0.661266,0.662532,0.663797,0.665063,0.666329,0.667595,0.668861,0.670127,0.671392,0.672658,0.673924,0.67519,0.676456,0.677722,0.678987,0.680253,0.681519,0.682785,0.684051,0.685317,0.686582,0.687848,0.689114,0.69038,0.691646,0.692911,0.694177,0.695443,0.696709,0.697975,0.699241,0.700506,0.701772,0.703038,0.704304,0.70557,0.706836,0.708101,0.709367,0.710633,0.711899,0.713165,0.71443,0.715696,0.716962,0.718228,0.719494,0.72076,0.722025,0.723291,0.724557,0.725823,0.727089,0.728355,0.72962,0.730886,0.732152,0.733418,0.734684,0.735949,0.737215,0.738481,0.739747,0.741013,0.742279,0.743544,0.74481,0.746076,0.747342,0.748608,0.749874,0.751139,0.752405,0.753671,0.754937,0.756203,0.757468,0.758734,0.76,0.76125,0.7625,0.76375,0.765,0.76625,0.7675,0.76875,0.77,0.77125,0.7725,0.77375,0.775,0.77625,0.7775,0.77875,0.78,0.78125,0.782501,0.783751,0.785001,0.786251,0.787501,0.788751,0.79,0.79127,0.79254,0.793809,0.795079,0.796349,0.797619,0.798889,0.800159,0.801428,0.802698,0.803968,0.805238,0.806508,0.807777,0.809047,0.810317,0.811587,0.812857,0.814127,0.815396,0.816666,0.817936,0.819206,0.820476,0.821745,0.823015,0.824285,0.825555,0.826825,0.828095,0.829364,0.830634,0.831904,0.833174,0.834444,0.835713,0.836983,0.838253,0.839523,0.840793,0.842063,0.843332,0.844602,0.845872,0.847142,0.848412,0.849681,0.850951,0.852221,0.853491,0.854761,0.856031,0.8573,0.85857,0.85984,0.86111,0.86238,0.863649,0.864919,0.866189,0.867459,0.868729,0.87]),
                                              keyValue : new MFRotation([-7.59441e-7,1,2.06363e-8,4.71239,-7.59487e-7,1,2.07523e-8,4.71239,-7.59534e-7,1,2.08705e-8,4.71239,-7.59582e-7,1,2.0991e-8,4.71239,-7.59631e-7,1,2.11136e-8,4.71239,-7.59681e-7,1,2.12384e-8,4.71239,-7.59732e-7,1,2.13654e-8,4.71239,-7.59784e-7,1,2.14945e-8,4.71239,-7.59837e-7,1,2.16257e-8,4.71239,-7.59891e-7,1,2.17591e-8,4.71239,-7.59946e-7,1,2.18946e-8,4.71239,-7.60002e-7,1,2.20321e-8,4.7124,-7.60059e-7,1,2.21717e-8,4.7124,-7.60117e-7,1,2.23134e-8,4.7124,-7.60175e-7,1,2.24571e-8,4.7124,-7.60235e-7,1,2.26028e-8,4.7124,-7.60296e-7,1,2.27505e-8,4.7124,-7.60357e-7,1,2.29002e-8,4.71241,-7.6042e-7,1,2.30519e-8,4.71241,-7.60483e-7,1,2.32056e-8,4.71241,-7.60547e-7,1,2.33612e-8,4.71241,-7.60612e-7,1,2.35187e-8,4.71242,-7.60678e-7,1,2.36781e-8,4.71242,-7.60745e-7,1,2.38394e-8,4.71242,-7.60813e-7,1,2.40026e-8,4.71242,-7.60881e-7,1,2.41677e-8,4.71243,-7.6095e-7,1,2.43346e-8,4.71243,-7.61021e-7,1,2.45034e-8,4.71243,-7.61092e-7,1,2.46739e-8,4.71244,-7.61163e-7,1,2.48463e-8,4.71244,-7.61236e-7,1,2.50204e-8,4.71245,-7.61309e-7,1,2.51963e-8,4.71245,-7.61384e-7,1,2.5374e-8,4.71245,-7.61459e-7,1,2.55534e-8,4.71246,-7.61534e-7,1,2.57345e-8,4.71246,-7.61611e-7,1,2.59174e-8,4.71247,-7.61688e-7,1,2.61019e-8,4.71247,-7.61766e-7,1,2.62881e-8,4.71247,-7.61845e-7,1,2.6476e-8,4.71248,-7.61924e-7,1,2.66655e-8,4.71248,-7.62005e-7,1,2.68566e-8,4.71249,-7.62086e-7,1,2.70493e-8,4.71249,-7.62167e-7,1,2.72437e-8,4.7125,-7.6225e-7,1,2.74396e-8,4.7125,-7.62333e-7,1,2.76371e-8,4.71251,-7.62417e-7,1,2.78361e-8,4.71251,-7.62501e-7,1,2.80367e-8,4.71252,-7.62586e-7,1,2.82388e-8,4.71252,-7.62672e-7,1,2.84424e-8,4.71253,-7.62758e-7,1,2.86474e-8,4.71253,-7.62845e-7,1,2.8854e-8,4.71254,-7.62933e-7,1,2.9062e-8,4.71255,-7.63021e-7,1,2.92714e-8,4.71255,-7.6311e-7,1,2.94823e-8,4.71256,-7.632e-7,1,2.96946e-8,4.71256,-7.6329e-7,1,2.99082e-8,4.71257,-7.63381e-7,1,3.01233e-8,4.71258,-7.63472e-7,1,3.03397e-8,4.71258,-7.63564e-7,1,3.05574e-8,4.71259,-7.63657e-7,1,3.07765e-8,4.71259,-7.6375e-7,1,3.09969e-8,4.7126,-7.63844e-7,1,3.12186e-8,4.71261,-7.63938e-7,1,3.14415e-8,4.71261,-7.64033e-7,1,3.16658e-8,4.71262,-7.64128e-7,1,3.18913e-8,4.71262,-7.64224e-7,1,3.2118e-8,4.71263,-7.6432e-7,1,3.23459e-8,4.71264,-7.64417e-7,1,3.25751e-8,4.71264,-7.64514e-7,1,3.28054e-8,4.71265,-7.64612e-7,1,3.30369e-8,4.71266,-7.6471e-7,1,3.32696e-8,4.71266,-7.64809e-7,1,3.35034e-8,4.71267,-7.64908e-7,1,3.37383e-8,4.71268,-7.65008e-7,1,3.39744e-8,4.71268,-7.65108e-7,1,3.42115e-8,4.71269,-7.65209e-7,1,3.44497e-8,4.7127,-7.6531e-7,1,3.4689e-8,4.7127,-7.65412e-7,1,3.49293e-8,4.71271,-7.65514e-7,1,3.51706e-8,4.71272,-7.65616e-7,1,3.5413e-8,4.71272,-7.65719e-7,1,3.56564e-8,4.71273,-7.65822e-7,1,3.59007e-8,4.71274,-7.65925e-7,1,3.6146e-8,4.71274,-7.66029e-7,1,3.63923e-8,4.71275,-7.66134e-7,1,3.66395e-8,4.71276,-7.66238e-7,1,3.68876e-8,4.71276,-7.66343e-7,1,3.71366e-8,4.71277,-7.66449e-7,1,3.73866e-8,4.71278,-7.66554e-7,1,3.76373e-8,4.71278,-7.6666e-7,1,3.7889e-8,4.71279,-7.66767e-7,1,3.81415e-8,4.7128,-7.66874e-7,1,3.83948e-8,4.7128,-7.66981e-7,1,3.86489e-8,4.71281,-7.67088e-7,1,3.89038e-8,4.71282,-7.67196e-7,1,3.91595e-8,4.71282,-7.67303e-7,1,3.9416e-8,4.71283,-7.67412e-7,1,3.96732e-8,4.71284,-7.6752e-7,1,3.99311e-8,4.71284,-7.67629e-7,1,4.01898e-8,4.71285,-7.67738e-7,1,4.04491e-8,4.71286,-7.67847e-7,1,4.07092e-8,4.71286,-7.67956e-7,1,4.09699e-8,4.71287,-7.68066e-7,1,4.12312e-8,4.71288,-7.68176e-7,1,4.14932e-8,4.71288,-7.68286e-7,1,4.17559e-8,4.71289,-7.68396e-7,1,4.20191e-8,4.7129,-7.68507e-7,1,4.22829e-8,4.7129,-7.68617e-7,1,4.25473e-8,4.71291,-7.68728e-7,1,4.28122e-8,4.71291,-7.68839e-7,1,4.30777e-8,4.71292,-7.68951e-7,1,4.33437e-8,4.71293,-7.69062e-7,1,4.36102e-8,4.71293,-7.69174e-7,1,4.38772e-8,4.71294,-7.69285e-7,1,4.41447e-8,4.71294,-7.69397e-7,1,4.44127e-8,4.71295,-7.69509e-7,1,4.46811e-8,4.71296,-7.69621e-7,1,4.49499e-8,4.71296,-7.69733e-7,1,4.52192e-8,4.71297,-7.69845e-7,1,4.54888e-8,4.71297,-7.69958e-7,1,4.57589e-8,4.71298,-7.7007e-7,1,4.60293e-8,4.71298,-7.70183e-7,1,4.63e-8,4.71299,-7.70295e-7,1,4.65711e-8,4.71299,-7.70408e-7,1,4.68425e-8,4.713,-7.70521e-7,1,4.71143e-8,4.71301,-7.70634e-7,1,4.73863e-8,4.71301,-7.70746e-7,1,4.76586e-8,4.71302,-7.70859e-7,1,4.79311e-8,4.71302,-7.70972e-7,1,4.82039e-8,4.71302,-7.71085e-7,1,4.84769e-8,4.71303,-7.71198e-7,1,4.87501e-8,4.71303,-7.7131e-7,1,4.90235e-8,4.71304,-7.71423e-7,1,4.92971e-8,4.71304,-7.71536e-7,1,4.95709e-8,4.71305,-7.71649e-7,1,4.98448e-8,4.71305,-7.71762e-7,1,5.01188e-8,4.71306,-7.71874e-7,1,5.0393e-8,4.71306,-7.71987e-7,1,5.06672e-8,4.71306,-7.721e-7,1,5.09416e-8,4.71307,-7.72212e-7,1,5.1216e-8,4.71307,-7.72325e-7,1,5.14904e-8,4.71307,-7.72437e-7,1,5.17649e-8,4.71308,-7.72549e-7,1,5.20394e-8,4.71308,-7.72662e-7,1,5.23139e-8,4.71308,-7.72774e-7,1,5.25884e-8,4.71309,-7.72886e-7,1,5.28629e-8,4.71309,-7.72998e-7,1,5.31373e-8,4.71309,-7.73109e-7,1,5.34117e-8,4.7131,-7.73221e-7,1,5.3686e-8,4.7131,-7.73332e-7,1,5.39602e-8,4.7131,-7.73443e-7,1,5.42343e-8,4.7131,-7.73555e-7,1,5.45083e-8,4.71311,-7.73665e-7,1,5.47822e-8,4.71311,-7.73776e-7,1,5.50559e-8,4.71311,-7.73887e-7,1,5.53294e-8,4.71311,-7.73997e-7,1,5.56027e-8,4.71311,-7.74107e-7,1,5.58759e-8,4.71312,-7.74217e-7,1,5.61488e-8,4.71312,-7.74327e-7,1,5.64215e-8,4.71312,-7.74436e-7,1,5.66939e-8,4.71312,-7.74546e-7,1,5.69661e-8,4.71312,-7.74655e-7,1,5.7238e-8,4.71312,-7.74764e-7,1,5.75096e-8,4.71312,-7.74872e-7,1,5.77809e-8,4.71312,-7.7498e-7,1,5.80518e-8,4.71312,-7.75088e-7,1,5.83225e-8,4.71312,-7.75196e-7,1,5.85927e-8,4.71312,-7.75303e-7,1,5.88626e-8,4.71312,-7.75411e-7,1,5.91321e-8,4.71312,-7.75517e-7,1,5.94012e-8,4.71312,-7.75624e-7,1,5.96698e-8,4.71312,-7.7573e-7,1,5.99381e-8,4.71312,-7.75836e-7,1,6.02058e-8,4.71312,-7.75941e-7,1,6.04731e-8,4.71312,-7.76046e-7,1,6.07399e-8,4.71311,-7.76151e-7,1,6.10062e-8,4.71311,-7.76256e-7,1,6.1272e-8,4.71311,-7.7636e-7,1,6.15373e-8,4.71311,-7.76463e-7,1,6.1802e-8,4.71311,-7.76566e-7,1,6.20661e-8,4.7131,-7.76669e-7,1,6.23297e-8,4.7131,-7.76772e-7,1,6.25927e-8,4.7131,-7.76874e-7,1,6.2855e-8,4.7131,-7.76976e-7,1,6.31167e-8,4.71309,-7.77077e-7,1,6.33778e-8,4.71309,-7.77177e-7,1,6.36382e-8,4.71309,-7.77278e-7,1,6.3898e-8,4.71308,-7.77377e-7,1,6.4157e-8,4.71308,-7.77477e-7,1,6.44153e-8,4.71307,-7.77576e-7,1,6.4673e-8,4.71307,-7.77674e-7,1,6.49298e-8,4.71306,-7.77772e-7,1,6.51859e-8,4.71306,-7.7787e-7,1,6.54413e-8,4.71305,-7.77967e-7,1,6.56958e-8,4.71305,-7.78063e-7,1,6.59496e-8,4.71304,-7.78159e-7,1,6.62025e-8,4.71304,-7.78255e-7,1,6.64546e-8,4.71303,-7.78349e-7,1,6.67059e-8,4.71303,-7.78444e-7,1,6.69563e-8,4.71302,-7.78537e-7,1,6.72058e-8,4.71301,-7.78631e-7,1,6.74544e-8,4.71301,-7.78723e-7,1,6.77021e-8,4.713,-7.78815e-7,1,6.79488e-8,4.71299,-7.78907e-7,1,6.81946e-8,4.71298,-7.78998e-7,1,6.84395e-8,4.71298,-7.79088e-7,1,6.86833e-8,4.71297,-7.79178e-7,1,6.89262e-8,4.71296,-7.79267e-7,1,6.91681e-8,4.71295,-7.79355e-7,1,6.94089e-8,4.71294,-7.79443e-7,1,6.96487e-8,4.71293,-7.7953e-7,1,6.98874e-8,4.71292,-7.79617e-7,1,7.01251e-8,4.71291,-7.79703e-7,1,7.03617e-8,4.7129,-7.79788e-7,1,7.05972e-8,4.71289,-7.79873e-7,1,7.08315e-8,4.71288,-7.79957e-7,1,7.10647e-8,4.71287,-7.8004e-7,1,7.12968e-8,4.71286,-7.80122e-7,1,7.15277e-8,4.71285,-7.80204e-7,1,7.17574e-8,4.71284,-7.80285e-7,1,7.19859e-8,4.71283,-7.80365e-7,1,7.22132e-8,4.71281,-7.80445e-7,1,7.24393e-8,4.7128,-7.80524e-7,1,7.26641e-8,4.71279,-7.80602e-7,1,7.28876e-8,4.71278,-7.80679e-7,1,7.31099e-8,4.71276,-7.80756e-7,1,7.33309e-8,4.71275,-7.80832e-7,1,7.35505e-8,4.71274,-7.80907e-7,1,7.37689e-8,4.71272,-7.80981e-7,1,7.39859e-8,4.71271,-7.81055e-7,1,7.42015e-8,4.71269,-7.81128e-7,1,7.44158e-8,4.71268,-7.812e-7,1,7.46286e-8,4.71266,-7.81271e-7,1,7.48401e-8,4.71265,-7.81341e-7,1,7.50501e-8,4.71263,-7.8141e-7,1,7.52587e-8,4.71262,-7.81479e-7,1,7.54659e-8,4.7126,-7.81547e-7,1,7.56716e-8,4.71258,-7.81614e-7,1,7.58758e-8,4.71257,-7.8168e-7,1,7.60784e-8,4.71255,-7.81745e-7,1,7.62796e-8,4.71253,-7.81809e-7,1,7.64793e-8,4.71251,-7.81872e-7,1,7.66774e-8,4.71249,-7.81935e-7,1,7.68739e-8,4.71248,-7.81996e-7,1,7.70688e-8,4.71246,-7.82057e-7,1,7.72622e-8,4.71244,-7.82117e-7,1,7.74539e-8,4.71242,-7.82176e-7,1,7.7644e-8,4.7124,-7.82234e-7,1,7.78325e-8,4.71238,-7.8229e-7,1,7.80193e-8,4.71236,-7.82346e-7,1,7.82044e-8,4.71234,-7.82402e-7,1,7.83879e-8,4.71232,-7.82456e-7,1,7.85696e-8,4.71229,-7.82509e-7,1,7.87496e-8,4.71227,-7.82561e-7,1,7.89279e-8,4.71225,-7.82612e-7,1,7.91044e-8,4.71223,-7.82662e-7,1,7.92791e-8,4.7122,-7.82711e-7,1,7.94521e-8,4.71218,-7.82867e-7,1,8.0009e-8,4.7121,-7.8302e-7,1,8.05647e-8,4.71203,-7.8317e-7,1,8.11189e-8,4.71195,-7.83317e-7,1,8.16715e-8,4.71187,-7.83461e-7,1,8.22224e-8,4.71179,-7.83602e-7,1,8.27715e-8,4.71171,-7.83739e-7,1,8.33186e-8,4.71163,-7.83874e-7,1,8.38636e-8,4.71155,-7.84005e-7,1,8.44063e-8,4.71147,-7.84134e-7,1,8.49465e-8,4.71138,-7.84259e-7,1,8.54843e-8,4.7113,-7.84381e-7,1,8.60194e-8,4.71121,-7.845e-7,1,8.65517e-8,4.71113,-7.84616e-7,1,8.7081e-8,4.71104,-7.84728e-7,1,8.76072e-8,4.71095,-7.84837e-7,1,8.81302e-8,4.71086,-7.84943e-7,1,8.86498e-8,4.71077,-7.85046e-7,1,8.9166e-8,4.71068,-7.85145e-7,1,8.96785e-8,4.71058,-7.85241e-7,1,9.01872e-8,4.71049,-7.85333e-7,1,9.0692e-8,4.71039,-7.85423e-7,1,9.11927e-8,4.71029,-7.85508e-7,1,9.16893e-8,4.71019,-7.85591e-7,1,9.21815e-8,4.71009,-7.8567e-7,1,9.26693e-8,4.70998,-7.85745e-7,1,9.31524e-8,4.70988,-7.85817e-7,1,9.36309e-8,4.70977,-7.85886e-7,1,9.41044e-8,4.70966,-7.85951e-7,1,9.45729e-8,4.70955,-7.86012e-7,1,9.50362e-8,4.70943,-7.8607e-7,1,9.54943e-8,4.70932,-7.86125e-7,1,9.59469e-8,4.7092,-7.86176e-7,1,9.6394e-8,4.70908,-7.86223e-7,1,9.68353e-8,4.70896,-7.86266e-7,1,9.72708e-8,4.70883,-7.86306e-7,1,9.77003e-8,4.70871,-7.86342e-7,1,9.81237e-8,4.70858,-7.86375e-7,1,9.85408e-8,4.70845,-7.86404e-7,1,9.89516e-8,4.70831,-7.86429e-7,1,9.93557e-8,4.70818,-7.8645e-7,1,9.97533e-8,4.70804,-7.86468e-7,1,1.00144e-7,4.7079,-7.86482e-7,1,1.00528e-7,4.70775,-7.86492e-7,1,1.00904e-7,4.7076,-7.86498e-7,1,1.01274e-7,4.70746,-7.86501e-7,1,1.01636e-7,4.7073,-7.86499e-7,1,1.01991e-7,4.70715,-7.86494e-7,1,1.02338e-7,4.70699,-7.86485e-7,1,1.02677e-7,4.70683,-7.86472e-7,1,1.03008e-7,4.70666,-7.86455e-7,1,1.03331e-7,4.7065,-7.86434e-7,1,1.03646e-7,4.70633,-7.86409e-7,1,1.03953e-7,4.70615,-7.8638e-7,1,1.04251e-7,4.70597,-7.86347e-7,1,1.04541e-7,4.70579,-7.8631e-7,1,1.04822e-7,4.70561,-7.86269e-7,1,1.05094e-7,4.70542,-7.86224e-7,1,1.05357e-7,4.70523,-7.86174e-7,1,1.05611e-7,4.70504,-7.86121e-7,1,1.05856e-7,4.70484,-7.86064e-7,1,1.06091e-7,4.70464,-7.86003e-7,1,1.06317e-7,4.70444,-7.85937e-7,1,1.06533e-7,4.70423,-7.85867e-7,1,1.06739e-7,4.70402,-7.85793e-7,1,1.06935e-7,4.7038,-7.85715e-7,1,1.07122e-7,4.70358,-7.85633e-7,1,1.07298e-7,4.70336,-7.85546e-7,1,1.07463e-7,4.70313,-7.85455e-7,1,1.07618e-7,4.7029,-7.8536e-7,1,1.07763e-7,4.70266,-7.8526e-7,1,1.07897e-7,4.70242,-7.85157e-7,1,1.08019e-7,4.70218,-7.85048e-7,1,1.08131e-7,4.70193,-7.84936e-7,1,1.08232e-7,4.70168,-7.84819e-7,1,1.08321e-7,4.70142,-7.84698e-7,1,1.08399e-7,4.70116,-7.84572e-7,1,1.08465e-7,4.70089,-7.84442e-7,1,1.0852e-7,4.70062,-7.84308e-7,1,1.08563e-7,4.70035,-7.84068e-7,1,1.0861e-7,4.69987,-7.83798e-7,1,1.0863e-7,4.69934,-7.83501e-7,1,1.08624e-7,4.69877,-7.83176e-7,1,1.0859e-7,4.69815,-7.82826e-7,1,1.08531e-7,4.6975,-7.82451e-7,1,1.08447e-7,4.69681,-7.82054e-7,1,1.08336e-7,4.69608,-7.81634e-7,1,1.08201e-7,4.69532,-7.81195e-7,1,1.08041e-7,4.69453,-7.80736e-7,1,1.07856e-7,4.69371,-7.80259e-7,1,1.07647e-7,4.69287,-7.79766e-7,1,1.07415e-7,4.69201,-7.79258e-7,1,1.07159e-7,4.69113,-7.78735e-7,1,1.0688e-7,4.69023,-7.782e-7,1,1.06578e-7,4.68932,-7.77654e-7,1,1.06254e-7,4.6884,-7.77097e-7,1,1.05907e-7,4.68747,-7.76532e-7,1,1.05539e-7,4.68653,-7.75959e-7,1,1.05149e-7,4.68559,-7.75379e-7,1,1.04738e-7,4.68465,-7.74794e-7,1,1.04306e-7,4.6837,-7.74206e-7,1,1.03854e-7,4.68277,-7.73615e-7,1,1.03381e-7,4.68184,-7.73022e-7,1,1.02889e-7,4.68092,-7.72429e-7,1,1.02376e-7,4.68001,-7.71837e-7,1,1.01845e-7,4.67912,-7.71247e-7,1,1.01294e-7,4.67824,-7.70661e-7,1,1.00725e-7,4.67739,-7.70079e-7,1,1.00137e-7,4.67656,-7.69504e-7,1,9.95311e-8,4.67575,-7.68935e-7,1,9.89072e-8,4.67497,-7.68374e-7,1,9.82657e-8,4.67422,-7.67823e-7,1,9.76069e-8,4.6735,-7.67283e-7,1,9.6931e-8,4.67282,-7.66754e-7,1,9.62382e-8,4.67217,-7.66238e-7,1,9.55289e-8,4.67157,-7.65736e-7,1,9.48032e-8,4.67101,-7.6525e-7,1,9.40614e-8,4.6705,-7.6478e-7,1,9.33038e-8,4.67003,-7.64328e-7,1,9.25305e-8,4.66962,-7.63894e-7,1,9.17418e-8,4.66926,-7.63481e-7,1,9.09379e-8,4.66896,-7.63089e-7,1,9.01191e-8,4.66871,-7.62719e-7,1,8.92854e-8,4.66853,-7.62372e-7,1,8.84372e-8,4.66841,-7.62051e-7,1,8.75745e-8,4.66835,-7.61755e-7,1,8.66977e-8,4.66837,-7.61486e-7,1,8.58067e-8,4.66846,-7.49533e-7,1,8.17514e-8,4.64915,-7.23488e-7,1,7.92093e-8,4.60151,-6.93206e-7,1,7.6724e-8,4.54325,-6.67145e-7,1,7.31359e-8,4.49208,-6.52459e-7,1,6.73896e-8,4.46571,-6.56104e-7,1,5.82449e-8,4.48183,-6.86833e-7,1,4.38258e-8,4.55815,-7.59441e-7,1,2.06363e-8,4.71239,-9.52302e-7,1,-3.12791e-8,5.02627,-0.00000144972,1,-1.58626e-7,5.47635,-0.00000396173,1,-7.94694e-7,6.0079,-0.0000033767,-1,-0.00000106089,6.0002,-9.56744e-7,-1,-4.48832e-7,5.46994,-4.67816e-7,-1,-3.25654e-7,5.02243,2.79487e-7,1,2.79602e-7,1.57079,-2.06452e-7,-1,-2.6405e-7,4.54957,-1.87262e-7,-1,-2.62945e-7,4.48853,-2.0188e-7,-1,-2.71132e-7,4.50131,-2.38039e-7,-1,-2.8529e-7,4.55994,-2.84384e-7,-1,-3.02138e-7,4.63646,-3.27065e-7,-1,-3.17555e-7,4.70288,3.48754e-7,1,3.26418e-7,1.55194,3.50133e-7,1,3.27481e-7,1.55201,3.5132e-7,1,3.2844e-7,1.5522,3.52327e-7,1,3.293e-7,1.55252,3.53162e-7,1,3.30065e-7,1.55294,3.53835e-7,1,3.3074e-7,1.55347,3.54359e-7,1,3.3133e-7,1.55409,3.54741e-7,1,3.31839e-7,1.5548,3.54994e-7,1,3.32271e-7,1.55558,3.55126e-7,1,3.32632e-7,1.55642,3.5515e-7,1,3.32927e-7,1.55732,3.55074e-7,1,3.33159e-7,1.55827,3.54909e-7,1,3.33334e-7,1.55926,3.54666e-7,1,3.33456e-7,1.56027,3.54355e-7,1,3.3353e-7,1.5613,3.53987e-7,1,3.33562e-7,1.56235,3.5357e-7,1,3.33555e-7,1.5634,3.53117e-7,1,3.33514e-7,1.56444,3.52637e-7,1,3.33444e-7,1.56546,3.52139e-7,1,3.33349e-7,1.56645,3.51635e-7,1,3.33235e-7,1.56742,3.51135e-7,1,3.33106e-7,1.56833,3.50648e-7,1,3.32966e-7,1.5692,3.50184e-7,1,3.32821e-7,1.57,3.49755e-7,1,3.32674e-7,1.57073,3.49468e-7,1,3.32567e-7,1.5712,3.49114e-7,1,3.32427e-7,1.57175,3.48698e-7,1,3.32255e-7,1.57237,3.48223e-7,1,3.32054e-7,1.57306,3.47695e-7,1,3.31825e-7,1.57382,3.47118e-7,1,3.3157e-7,1.57462,3.46497e-7,1,3.3129e-7,1.57547,3.45836e-7,1,3.30987e-7,1.57636,3.45139e-7,1,3.30664e-7,1.57729,3.44411e-7,1,3.30321e-7,1.57823,3.43656e-7,1,3.29961e-7,1.5792,3.42879e-7,1,3.29585e-7,1.58018,3.42085e-7,1,3.29195e-7,1.58116,3.41277e-7,1,3.28793e-7,1.58214,3.4046e-7,1,3.2838e-7,1.5831,3.39638e-7,1,3.27958e-7,1.58406,3.38817e-7,1,3.27529e-7,1.58498,3.37999e-7,1,3.27095e-7,1.58588,3.37189e-7,1,3.26657e-7,1.58674,3.36392e-7,1,3.26216e-7,1.58755,3.35611e-7,1,3.25775e-7,1.58831,3.34852e-7,1,3.25335e-7,1.58902,3.34118e-7,1,3.24897e-7,1.58965,3.33413e-7,1,3.24464e-7,1.59022,3.32742e-7,1,3.24037e-7,1.5907,3.32109e-7,1,3.23617e-7,1.5911,3.31518e-7,1,3.23207e-7,1.5914,3.30974e-7,1,3.22807e-7,1.5916,3.3048e-7,1,3.2242e-7,1.5917,3.30041e-7,1,3.22046e-7,1.59168,3.2966e-7,1,3.21688e-7,1.59153,3.29343e-7,1,3.21347e-7,1.59126,3.29093e-7,1,3.21025e-7,1.59085,3.28915e-7,1,3.20723e-7,1.5903,3.28814e-7,1,3.20444e-7,1.5896,3.28792e-7,1,3.20187e-7,1.58874,3.28856e-7,1,3.19956e-7,1.58772,3.29008e-7,1,3.19752e-7,1.58652,3.29255e-7,1,3.19576e-7,1.58515,3.29926e-7,1,3.19342e-7,1.5823,3.3096e-7,1,3.19162e-7,1.57859,3.32323e-7,1,3.19031e-7,1.57409,3.33983e-7,1,3.18944e-7,1.56889,3.3591e-7,1,3.18898e-7,1.56309,3.38069e-7,1,3.18889e-7,1.55677,3.4043e-7,1,3.18912e-7,1.55003,3.42958e-7,1,3.18964e-7,1.54295,3.4562e-7,1,3.19039e-7,1.53562,3.48382e-7,1,3.19135e-7,1.52813,3.51207e-7,1,3.19246e-7,1.52057,3.54058e-7,1,3.19369e-7,1.51303,3.56899e-7,1,3.19499e-7,1.5056,3.5969e-7,1,3.19632e-7,1.49837,3.62391e-7,1,3.19763e-7,1.49143,3.64961e-7,1,3.19886e-7,1.48486,3.67357e-7,1,3.19999e-7,1.47875,3.69537e-7,1,3.20094e-7,1.4732,3.71456e-7,1,3.20169e-7,1.4683,3.73072e-7,1,3.20217e-7,1.46413,3.74339e-7,1,3.20234e-7,1.46078,3.75215e-7,1,3.20215e-7,1.45834,3.75655e-7,1,3.20155e-7,1.4569,3.75619e-7,1,3.20049e-7,1.45655,3.7528e-7,1,3.19951e-7,1.45704,3.74704e-7,1,3.19854e-7,1.45813,3.73906e-7,1,3.19755e-7,1.4598,3.72899e-7,1,3.19655e-7,1.46201,3.71699e-7,1,3.19553e-7,1.46471,3.7032e-7,1,3.19448e-7,1.46789,3.68777e-7,1,3.1934e-7,1.47149,3.67086e-7,1,3.19227e-7,1.47548,3.6526e-7,1,3.19111e-7,1.47984,3.63314e-7,1,3.18989e-7,1.48451,3.61264e-7,1,3.18862e-7,1.48947,3.59123e-7,1,3.18728e-7,1.49468,3.56905e-7,1,3.18587e-7,1.50011,3.54625e-7,1,3.18439e-7,1.50571,3.52295e-7,1,3.18283e-7,1.51145,3.49929e-7,1,3.18118e-7,1.5173,3.47539e-7,1,3.17944e-7,1.52322,3.45139e-7,1,3.1776e-7,1.52918,3.42739e-7,1,3.17565e-7,1.53513,3.40353e-7,1,3.17359e-7,1.54104,3.37991e-7,1,3.17141e-7,1.54689,3.35666e-7,1,3.16911e-7,1.55262,3.33386e-7,1,3.16668e-7,1.5582,3.31164e-7,1,3.16411e-7,1.56361,3.2901e-7,1,3.1614e-7,1.56879,3.26933e-7,1,3.15854e-7,1.57373,3.24945e-7,1,3.15551e-7,1.57837,3.23054e-7,1,3.15232e-7,1.58269,3.2127e-7,1,3.14896e-7,1.58665,3.19603e-7,1,3.14541e-7,1.59021,3.18063e-7,1,3.14168e-7,1.59333,3.1666e-7,1,3.13774e-7,1.59599,3.16118e-7,1,3.13607e-7,1.59696,3.15572e-7,1,3.13433e-7,1.59793,3.15022e-7,1,3.13252e-7,1.59888,3.14469e-7,1,3.13065e-7,1.59983,3.13913e-7,1,3.12872e-7,1.60077,3.13354e-7,1,3.12672e-7,1.60169,3.12793e-7,1,3.12467e-7,1.60261,3.12229e-7,1,3.12256e-7,1.60351,3.11664e-7,1,3.12039e-7,1.6044,3.11097e-7,1,3.11817e-7,1.60528,3.1053e-7,1,3.11591e-7,1.60615,3.09961e-7,1,3.11359e-7,1.60701,3.09392e-7,1,3.11122e-7,1.60785,3.08823e-7,1,3.10881e-7,1.60868,3.08255e-7,1,3.10635e-7,1.60949,3.07686e-7,1,3.10386e-7,1.61029,3.07119e-7,1,3.10132e-7,1.61107,3.06552e-7,1,3.09874e-7,1.61184,3.05987e-7,1,3.09613e-7,1.61259,3.05424e-7,1,3.09348e-7,1.61333,3.04863e-7,1,3.0908e-7,1.61405,3.04304e-7,1,3.08809e-7,1.61475,3.03748e-7,1,3.08535e-7,1.61543,3.03195e-7,1,3.08258e-7,1.61609,3.02645e-7,1,3.07979e-7,1.61674,3.02099e-7,1,3.07697e-7,1.61736,3.01557e-7,1,3.07413e-7,1.61797,3.01019e-7,1,3.07128e-7,1.61856,3.00486e-7,1,3.0684e-7,1.61912,2.99957e-7,1,3.0655e-7,1.61966,2.99434e-7,1,3.06259e-7,1.62019,2.98916e-7,1,3.05967e-7,1.62069,2.98404e-7,1,3.05674e-7,1.62116,2.97898e-7,1,3.05379e-7,1.62162,2.97399e-7,1,3.05084e-7,1.62205,2.96906e-7,1,3.04788e-7,1.62246,2.9642e-7,1,3.04492e-7,1.62284,2.95941e-7,1,3.04195e-7,1.6232,2.9547e-7,1,3.03899e-7,1.62353,2.95007e-7,1,3.03602e-7,1.62384,2.94552e-7,1,3.03305e-7,1.62412,2.94106e-7,1,3.03009e-7,1.62437,2.93669e-7,1,3.02714e-7,1.6246,2.93241e-7,1,3.02419e-7,1.6248,2.92822e-7,1,3.02125e-7,1.62497,2.92413e-7,1,3.01833e-7,1.62511,2.92014e-7,1,3.01541e-7,1.62523,2.91625e-7,1,3.01251e-7,1.62531,2.91247e-7,1,3.00963e-7,1.62537,2.9088e-7,1,3.00676e-7,1.62539,2.90524e-7,1,3.00391e-7,1.62539,2.9018e-7,1,3.00109e-7,1.62535,2.89848e-7,1,2.99828e-7,1.62528,2.89528e-7,1,2.9955e-7,1.62518,2.89221e-7,1,2.99275e-7,1.62505,2.88926e-7,1,2.99002e-7,1.62488,2.88644e-7,1,2.98733e-7,1.62468,2.88376e-7,1,2.98466e-7,1.62445,2.88122e-7,1,2.98203e-7,1.62418,2.87882e-7,1,2.97943e-7,1.62388,2.87656e-7,1,2.97687e-7,1.62354,2.87446e-7,1,2.97434e-7,1.62317,2.8725e-7,1,2.97186e-7,1.62276,2.87069e-7,1,2.96941e-7,1.62231,2.86904e-7,1,2.96701e-7,1.62182,2.86756e-7,1,2.96466e-7,1.6213,2.86623e-7,1,2.96235e-7,1.62074,2.86508e-7,1,2.96009e-7,1.62015,2.86409e-7,1,2.95787e-7,1.61951,2.86328e-7,1,2.95571e-7,1.61883,2.86264e-7,1,2.95361e-7,1.61812,2.86218e-7,1,2.95156e-7,1.61736,2.86191e-7,1,2.94956e-7,1.61656,2.86183e-7,1,2.94762e-7,1.61573,2.86193e-7,1,2.94575e-7,1.61485,2.86223e-7,1,2.94393e-7,1.61392,2.86273e-7,1,2.94218e-7,1.61296,2.86343e-7,1,2.9405e-7,1.61195,2.86433e-7,1,2.93888e-7,1.6109,2.86923e-7,1,2.93392e-7,1.60695,2.87717e-7,1,2.92944e-7,1.6022,2.88793e-7,1,2.92539e-7,1.59671,2.9013e-7,1,2.92176e-7,1.59055,2.91707e-7,1,2.91849e-7,1.58379,2.93504e-7,1,2.91555e-7,1.57649,2.955e-7,1,2.91292e-7,1.56871,2.97674e-7,1,2.91055e-7,1.56053,3.00003e-7,1,2.90842e-7,1.55199,3.02467e-7,1,2.90648e-7,1.54318,3.05042e-7,1,2.90471e-7,1.53415,3.07706e-7,1,2.90308e-7,1.52496,3.10434e-7,1,2.90154e-7,1.51569,3.13201e-7,1,2.90007e-7,1.5064,3.15982e-7,1,2.89862e-7,1.49715,3.18751e-7,1,2.89717e-7,1.488,3.2148e-7,1,2.89567e-7,1.47903,3.2414e-7,1,2.8941e-7,1.47029,3.26703e-7,1,2.8924e-7,1.46186,3.29137e-7,1,2.89055e-7,1.45379,3.31413e-7,1,2.88851e-7,1.44615,3.33499e-7,1,2.88624e-7,1.439,3.35362e-7,1,2.8837e-7,1.43242,3.36969e-7,1,2.88086e-7,1.42646,3.37521e-7,1,2.8797e-7,1.42433,3.38058e-7,1,2.87851e-7,1.42223,3.38579e-7,1,2.87728e-7,1.42016,3.39086e-7,1,2.87603e-7,1.41811,3.39578e-7,1,2.87476e-7,1.41609,3.40056e-7,1,2.87346e-7,1.4141,3.40519e-7,1,2.87213e-7,1.41214,3.40969e-7,1,2.87078e-7,1.4102,3.41405e-7,1,2.86941e-7,1.40829,3.41828e-7,1,2.86801e-7,1.40641,3.42237e-7,1,2.8666e-7,1.40455,3.42634e-7,1,2.86516e-7,1.40272,3.43018e-7,1,2.86371e-7,1.40092,3.4339e-7,1,2.86225e-7,1.39914,3.43749e-7,1,2.86077e-7,1.39739,3.44097e-7,1,2.85927e-7,1.39566,3.44434e-7,1,2.85776e-7,1.39396,3.44759e-7,1,2.85624e-7,1.39229,3.45073e-7,1,2.85471e-7,1.39064,3.45376e-7,1,2.85317e-7,1.38902,3.45669e-7,1,2.85162e-7,1.38742,3.45952e-7,1,2.85006e-7,1.38584,3.46224e-7,1,2.8485e-7,1.38429,3.46488e-7,1,2.84694e-7,1.38277,3.46742e-7,1,2.84537e-7,1.38127,3.46987e-7,1,2.8438e-7,1.37979,3.47223e-7,1,2.84223e-7,1.37834,3.47451e-7,1,2.84066e-7,1.37691,3.4767e-7,1,2.8391e-7,1.37551,3.47882e-7,1,2.83753e-7,1.37413,3.48087e-7,1,2.83597e-7,1.37277,3.48284e-7,1,2.83442e-7,1.37144,3.48474e-7,1,2.83287e-7,1.37013,3.48657e-7,1,2.83133e-7,1.36884,3.48834e-7,1,2.8298e-7,1.36758,3.49005e-7,1,2.82829e-7,1.36633,3.49171e-7,1,2.82678e-7,1.36512,3.49331e-7,1,2.82529e-7,1.36392,3.49486e-7,1,2.82381e-7,1.36274,3.49636e-7,1,2.82235e-7,1.36159,3.49781e-7,1,2.82091e-7,1.36046,3.49923e-7,1,2.81948e-7,1.35935,3.5006e-7,1,2.81808e-7,1.35826,3.50194e-7,1,2.81669e-7,1.3572,3.50325e-7,1,2.81533e-7,1.35615,3.50453e-7,1,2.81399e-7,1.35513,3.50579e-7,1,2.81268e-7,1.35413,3.50702e-7,1,2.8114e-7,1.35314,3.50823e-7,1,2.81014e-7,1.35218,3.50942e-7,1,2.80891e-7,1.35124,3.51061e-7,1,2.80771e-7,1.35032,3.51178e-7,1,2.80655e-7,1.34942,3.51295e-7,1,2.80541e-7,1.34854,3.51411e-7,1,2.80431e-7,1.34768,3.51528e-7,1,2.80325e-7,1.34684,3.51644e-7,1,2.80222e-7,1.34602,3.51762e-7,1,2.80123e-7,1.34521,3.5188e-7,1,2.80029e-7,1.34443,3.52e-7,1,2.79938e-7,1.34367,3.52121e-7,1,2.79851e-7,1.34292,3.52245e-7,1,2.79769e-7,1.3422,3.5237e-7,1,2.79691e-7,1.34149,3.52499e-7,1,2.79618e-7,1.3408])}),

                                            new OrientationInterpolator({
                                              DEF : new SFString("Polo2ScaleOrientationInterp"),
                                              keyValue : new MFRotation([0,0,1,0])}),

                                            new PositionInterpolator({
                                              DEF : new SFString("Polo2ScaleFactorInterp"),
                                              key : new MFFloat([0,0.00125,0.0025,0.00375,0.005,0.00625,0.0075,0.00875,0.01,0.01125,0.0125,0.01375,0.015,0.01625,0.0175,0.01875,0.02,0.02125,0.0225,0.02375,0.025,0.02625,0.0275,0.02875,0.03,0.03125,0.0325,0.03375,0.035,0.03625,0.0375,0.03875,0.04,0.04125,0.0425,0.04375,0.045,0.04625,0.0475,0.04875,0.05,0.05125,0.0525,0.05375,0.055,0.05625,0.0575,0.05875,0.06,0.06125,0.0625,0.06375,0.065,0.06625,0.0675,0.06875,0.07,0.07125,0.0725,0.07375,0.075,0.07625,0.0775,0.07875,0.08,0.08125,0.0825,0.08375,0.085,0.08625,0.0875,0.08875,0.09,0.09125,0.0924999,0.0937499,0.0949999,0.0962499,0.0974999,0.0987499,0.0999999,0.10125,0.1025,0.10375,0.105,0.10625,0.1075,0.10875,0.11,0.11125,0.1125,0.11375,0.115,0.11625,0.1175,0.11875,0.12,0.12125,0.1225,0.12375,0.125,0.12625,0.1275,0.12875,0.13,0.13125,0.1325,0.13375,0.135,0.13625,0.1375,0.13875,0.14,0.14125,0.1425,0.14375,0.145,0.14625,0.1475,0.14875,0.15,0.15125,0.1525,0.15375,0.155,0.15625,0.1575,0.15875,0.16,0.16125,0.1625,0.16375,0.165,0.16625,0.1675,0.16875,0.17,0.17125,0.1725,0.17375,0.175,0.17625,0.1775,0.17875,0.18,0.18125,0.1825,0.18375,0.185,0.18625,0.1875,0.18875,0.19,0.19125,0.1925,0.19375,0.195,0.19625,0.1975,0.19875,0.2,0.20125,0.2025,0.20375,0.205,0.20625,0.2075,0.20875,0.21,0.21125,0.2125,0.21375,0.215,0.21625,0.2175,0.21875,0.22,0.22125,0.2225,0.22375,0.225,0.22625,0.2275,0.22875,0.23,0.23125,0.2325,0.23375,0.235,0.23625,0.2375,0.23875,0.24,0.24125,0.2425,0.24375,0.245,0.24625,0.2475,0.24875,0.25,0.25125,0.2525,0.25375,0.255,0.25625,0.2575,0.25875,0.26,0.26125,0.2625,0.26375,0.265,0.26625,0.2675,0.26875,0.27,0.27125,0.2725,0.27375,0.275,0.27625,0.2775,0.27875,0.28,0.28125,0.2825,0.28375,0.285,0.28625,0.2875,0.28875,0.29,0.29125,0.2925,0.29375,0.295,0.29625,0.2975,0.29875,0.3,0.30125,0.3025,0.30375,0.305,0.30625,0.3075,0.30875,0.31,0.31125,0.3125,0.31375,0.315,0.31625,0.3175,0.31875,0.32,0.32125,0.3225,0.32375,0.325,0.32625,0.3275,0.32875,0.33,0.33125,0.3325,0.33375,0.335,0.33625,0.3375,0.33875,0.34,0.34125,0.3425,0.34375,0.345,0.34625,0.3475,0.34875,0.35,0.35125,0.3525,0.35375,0.355,0.35625,0.3575,0.35875,0.36,0.36125,0.3625,0.36375,0.365,0.36625,0.3675,0.36875,0.37,0.37125,0.3725,0.37375,0.375,0.37625,0.3775,0.37875,0.38,0.38125,0.3825,0.38375,0.385,0.38625,0.3875,0.38875,0.39,0.39125,0.3925,0.39375,0.395,0.39625,0.3975,0.39875,0.4,0.40125,0.4025,0.40375,0.405,0.40625,0.4075,0.40875,0.41,0.41125,0.4125,0.41375,0.415,0.41625,0.4175,0.41875,0.42,0.42125,0.4225,0.42375,0.425,0.42625,0.4275,0.42875,0.43,0.43125,0.4325,0.43375,0.435,0.43625,0.4375,0.43875,0.44,0.44125,0.4425,0.44375,0.445,0.44625,0.4475,0.44875,0.45,0.45125,0.4525,0.45375,0.455,0.45625,0.4575,0.45875,0.46,0.46125,0.4625,0.46375,0.465,0.46625,0.4675,0.46875,0.47,0.47125,0.4725,0.47375,0.475,0.47625,0.4775,0.47875,0.48,0.48125,0.4825,0.48375,0.485,0.48625,0.4875,0.48875,0.49,0.49125,0.4925,0.49375,0.495,0.49625,0.4975,0.49875,0.5,0.50125,0.5025,0.50375,0.505,0.50625,0.5075,0.50875,0.51,0.51125,0.5125,0.51375,0.515,0.51625,0.5175,0.51875,0.52,0.52125,0.5225,0.52375,0.525,0.52625,0.5275,0.52875,0.53,0.53125,0.5325,0.53375,0.535,0.53625,0.5375,0.53875,0.54,0.541251,0.542501,0.543751,0.545001,0.546251,0.547501,0.548751,0.550001,0.551251,0.552501,0.553751,0.555001,0.556251,0.557501,0.558751,0.560001,0.561251,0.562501,0.563751,0.565001,0.566251,0.567501,0.568751,0.570001,0.571251,0.572501,0.573751,0.575001,0.576251,0.577501,0.578751,0.580001,0.581251,0.582501,0.583751,0.585002,0.586252,0.587502,0.588752,0.590002,0.591252,0.592502,0.593752,0.595002,0.596252,0.597502,0.598752,0.600002,0.601252,0.602502,0.603752,0.605002,0.606252,0.607502,0.608752,0.610002,0.611252,0.612502,0.613752,0.615002,0.616252,0.617502,0.618752,0.620002,0.621252,0.622502,0.623752,0.625002,0.626252,0.627503,0.628753,0.630003,0.631253,0.632503,0.633753,0.635003,0.636253,0.637503,0.638753,0.640003,0.641253,0.642503,0.643753,0.645003,0.646253,0.647503,0.648753,0.650003,0.651253,0.652503,0.653753,0.655003,0.656253,0.657503,0.658753,0.660003,0.661253,0.662503,0.663753,0.665003,0.666253,0.667503,0.668753,0.670003,0.671254,0.672504,0.673754,0.675004,0.676254,0.677504,0.678754,0.680004,0.681254,0.682504,0.683754,0.685004,0.686254,0.687504,0.688754,0.690004,0.691254,0.692504,0.693754,0.695004,0.696254,0.697504,0.698754,0.700004,0.701254,0.702504,0.703754,0.705004,0.706254,0.707504,0.708754,0.710004,0.711254,0.712504,0.713754,0.715005,0.716255,0.717505,0.718755,0.720005,0.721255,0.722505,0.723755,0.725005,0.726255,0.727505,0.728755,0.730005,0.731255,0.732505,0.733755,0.735005,0.736255,0.737505,0.738755,0.740005,0.741255,0.742505,0.743755,0.745005,0.746255,0.747505,0.748755,0.750005,0.751255,0.752505,0.753755,0.755005,0.756255,0.757505,0.758756,0.760006,0.761256,0.762506,0.763756,0.765006,0.766256,0.767506,0.768756,0.770006,0.771256,0.772506,0.773756,0.775006,0.776256,0.777506,0.778756,0.780006,0.781256,0.782506,0.783756,0.785006,0.786256,0.787506,0.788756,0.790006,0.791256,0.792506,0.793756,0.795006,0.796256,0.797506,0.798756,0.800006,0.801256,0.802507,0.803757,0.805007,0.806257,0.807507,0.808757,0.810007,0.811257,0.812507,0.813757,0.815007,0.816257,0.817507,0.818757,0.820007,0.821257,0.822507,0.823757,0.825007,0.826257,0.827507,0.828757,0.830007,0.831257,0.832507,0.833757,0.835007,0.836257,0.837507,0.838757,0.840007,0.841257,0.842507,0.843757,0.845007,0.846258,0.847508,0.848758,0.850008,0.851258,0.852508,0.853758,0.855008,0.856258,0.857508,0.858758,0.860008,0.861258,0.862508,0.863758,0.865008,0.866258,0.867508,0.868758,0.870008,0.871258,0.872508,0.873758,0.875008,0.876258,0.877508,0.878758,0.880008,0.881258,0.882508,0.883758,0.885008,0.886258,0.887508,0.888758,0.890009,0.891259,0.892509,0.893759,0.895009,0.896259,0.897509,0.898759,0.900009,0.901259,0.902509,0.903759,0.905009,0.906259,0.907509,0.908759,0.910009,0.911259,0.912509,0.913759,0.915009,0.916259,0.917509,0.918759,0.920009,0.921259,0.922509,0.923759,0.925009,0.926259,0.927509,0.928759,0.930009,0.931259,0.932509,0.93376,0.93501,0.93626,0.93751,0.93876,0.94001,0.94126,0.94251,0.94376,0.94501,0.94626,0.94751,0.94876,0.95001,0.95126,0.95251,0.95376,0.95501,0.95626,0.95751,0.95876,0.96001,0.96126,0.96251,0.96376,0.96501,0.96626,0.96751,0.96876,0.97001,0.97126,0.97251,0.97376,0.97501,0.97626,0.977511,0.978761,0.980011,0.981261,0.982511,0.983761,0.985011,0.986261,0.987511,0.988761,0.990011,0.991261,0.992511,0.993761,0.995011,0.996261,0.997511,0.998761,1]),
                                              keyValue : new MFVec3f})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.390854,-0.602876,3.42209]),
                                          scale : new SFVec3f([1.57956,0.471647,0.743738]),
                                          center : new SFVec3f([-0.000468493,0.05716,0]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(0.489362),
                                                      diffuseColor : new SFColor([1,0.812079,0.0371906])})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_36")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  texCoordIndex : new MFInt32([27,22,24,-1,23,3,25,-1,8,27,24,-1,8,26,27,-1,60,52,48,56,8,16,176,180,12,-1,8,24,16,-1,24,22,20,-1,24,20,16,-1,20,28,16,-1,88,92,96,100,14,25,10,-1,14,186,174,18,25,-1,18,37,21,-1,18,21,25,-1,21,23,25,-1,3,2,25,-1,2,10,25,-1,170,165,17,31,19,-1,17,30,31,-1,66,84,38,39,41,-1,39,40,41,-1,0,1,5,-1,1,7,5,-1,4,43,54,46,50,58,45,29,-1,49,53,51,47,-1,43,8,57,55,-1,61,12,70,45,59,-1,82,65,42,35,34,63,-1,67,9,42,64,-1,32,44,74,78,69,33,-1,80,77,71,13,162,167,15,73,-1,44,71,76,75,-1,81,73,69,79,-1,11,85,83,63,-1,98,94,90,87,62,6,36,68,-1,89,10,62,86,-1,97,93,91,95,-1,14,101,99,68,72,-1,84,66,104,105,-1,104,109,148,142,154,138,150,108,105,-1,109,107,147,149,-1,153,106,108,151,-1,153,151,139,141,-1,149,147,145,143,-1,141,139,155,157,-1,155,143,145,157,-1,153,151,151,153,-1,141,139,139,141,-1,141,27,27,141,-1,149,147,147,149,-1,145,147,147,145,-1,143,145,145,143,-1,139,151,139,-1,139,151,151,-1,143,27,143,-1,143,27,27,-1,159,102,163,168,103,158,-1,152,140,156,144,146,107,161,160,106,-1,161,159,158,160,-1,161,159,159,161,-1,158,159,159,158,-1,160,158,158,160,-1,160,27,160,-1,160,27,27,-1,182,179,166,171,172,184,169,164,-1,171,19,175,173,-1,177,17,166,178,-1,181,177,178,183,-1,175,187,185,173,-1]),
                                                  coordIndex : new MFInt32([5,18,20,-1,19,3,21,-1,10,5,20,-1,10,4,5,-1,31,27,25,29,10,14,88,90,12,-1,10,20,14,-1,20,18,16,-1,20,16,14,-1,16,7,14,-1,45,47,49,51,13,21,11,-1,13,93,87,15,21,-1,15,1,17,-1,15,17,21,-1,17,19,21,-1,3,2,21,-1,2,11,21,-1,85,83,14,1,15,-1,14,7,1,-1,34,43,11,2,10,-1,2,4,10,-1,6,0,8,-1,0,9,8,-1,8,22,28,24,26,30,23,6,-1,25,27,26,24,-1,22,10,29,28,-1,31,12,36,23,30,-1,42,33,22,8,9,32,-1,34,10,22,33,-1,6,23,38,40,35,0,-1,41,39,36,12,82,84,13,37,-1,23,36,39,38,-1,41,37,35,40,-1,11,43,42,32,-1,50,48,46,44,32,9,0,35,-1,45,11,32,44,-1,49,47,46,48,-1,13,51,50,35,37,-1,43,34,29,45,-1,29,55,61,58,64,56,62,54,45,-1,55,53,60,61,-1,63,52,54,62,-1,67,66,68,69,-1,71,70,72,73,-1,57,56,64,65,-1,64,58,59,65,-1,66,67,63,62,-1,69,68,56,57,-1,67,69,57,63,-1,70,71,61,60,-1,72,70,60,59,-1,73,72,59,58,-1,68,62,56,-1,68,66,62,-1,71,58,61,-1,71,73,58,-1,75,12,82,84,13,74,-1,63,57,65,59,60,53,77,76,52,-1,79,78,80,81,-1,78,79,77,75,-1,80,78,75,74,-1,81,80,74,76,-1,79,76,77,-1,79,81,76,-1,91,89,83,85,86,92,84,82,-1,85,15,87,86,-1,88,14,83,89,-1,90,88,89,91,-1,87,93,92,86,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.314845,0.599014,0.317776,0.505559,0.766839,0.446228,0.765905,0.183638,0.52458,0.977198,0.336822,0.582022,0.518858,0.982743,0.34269,0.514055,0.614926,0.599721,0.972411,0.602933,0.614322,0.600109,0.794761,0.602933,0.229569,0.603264,0.230328,0.589865,0.230141,0.596901,0.000685288,0.603533,0.230411,0.225096,0.229466,0.212768,0.230141,0.264601,0.00135259,0.212979,0.35162,0.0250328,0.372155,0.00285878,0.615574,0.0207149,0.614813,0.00266513,0.616201,0.166095,0.614346,0.165092,0.766022,0.443437,0.765828,0.117115,0.257347,0.100666,0.272918,0.996071,0.220809,0.0887781,0.00746351,0.0948936,0.191502,0.984712,0.0400551,0.980535,0.827531,0.914674,0.93964,0.908008,0.271227,0.982743,0.254106,0.107683,0.271193,0.486264,0.292702,0.505447,0.293655,0.550583,0.272146,0.575224,0.942664,0.879853,0.532918,0.942361,0.194959,0.951843,0.268994,0.960514,0.43889,0.948828,0.43889,0.948828,0.434678,0.601378,0.434678,0.601378,0.412746,0.950627,0.412746,0.950627,0.406464,0.601638,0.406464,0.601638,0.516015,0.943524,0.516015,0.943524,0.594633,0.599908,0.594633,0.599908,0.283252,0.959533,0.283252,0.959533,0.246708,0.603106,0.246708,0.603106,0.529087,0.941743,0.82402,0.88127,0.935349,0.87994,0.935349,0.87994,0.272108,0.571642,0.965258,0.602933,0.268416,0.956349,0.0374424,0.95509,0.233607,0.639859,0.226137,0.655428,0.235254,0.644922,0.00661527,0.654859,0.18568,0.952034,0.18568,0.952034,0.210125,0.655387,0.210125,0.655387,0.0453464,0.954927,0.0453464,0.954927,0.0211934,0.654897,0.0211934,0.654897,0.829724,0.881202,0.829724,0.881202,0.271229,0.489625,0.801473,0.602933,0.512695,0.942661,0.512695,0.942661,0.593939,0.599939,0.593939,0.599939,0.437833,0.946856,0.437833,0.946856,0.436623,0.598625,0.436623,0.598625,0.412745,0.948262,0.412745,0.948262,0.40855,0.598391,0.40855,0.598391,0.282665,0.955551,0.282665,0.955551,0.248915,0.597058,0.248915,0.597058,0.272108,0.571642,0.271229,0.489625,0.272108,0.571642,0.271229,0.489625,0.271229,0.489625,0.272108,0.571642,0.271229,0.489625,0.272108,0.571642,0.271668,0.530634,0.271668,0.530634,0.271668,0.530634,0.271668,0.530634,0.271449,0.510129,0.271449,0.510129,0.271449,0.510129,0.271449,0.510129,0.271888,0.551138,0.271888,0.551138,0.271888,0.551138,0.271888,0.551138,0.271339,0.499877,0.271339,0.499877,0.271339,0.499877,0.271339,0.499877,0.271558,0.520381,0.271558,0.520381,0.271558,0.520381,0.271558,0.520381,0.271778,0.540886,0.271778,0.540886,0.271778,0.540886,0.271778,0.540886,0.271998,0.56139,0.271998,0.56139,0.271998,0.56139,0.271998,0.56139,0.271613,0.525507,0.271613,0.525507,0.271613,0.525507,0.271613,0.525507,0.271723,0.53576,0.271723,0.53576,0.271723,0.53576,0.271723,0.53576,0.272053,0.566516,0.272053,0.566516,0.272053,0.566516,0.272053,0.566516,0.271284,0.494751,0.271284,0.494751,0.271284,0.494751,0.271284,0.494751,0.271668,0.530634,0.271668,0.530634,0.271668,0.530634,0.271668,0.530634,0.271229,0.489625,0.272108,0.571642,0.271229,0.489625,0.272108,0.571642,0.213336,0.620664,0.272045,0.565753,0.215463,0.59109,0.213801,0.212782,0.213801,0.212782,0.0202153,0.609615,0.2713,0.496232,0.0167178,0.602167,0.0190281,0.212963,0.0190281,0.212963,0.0195026,0.371503,0.0176609,0.376645,0.230141,0.399001,0.000921061,0.375278,0.230078,0.374799,0.229857,0.382112,0.215105,0.381495,0.213611,0.379334,0.22988,0.463433,0.22961,0.470431,0.213509,0.468793,0.215003,0.470954,0.019859,0.490559,0.0164821,0.488722,0.230141,0.497951,0.00115683,0.488722])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.817176,1.11432,0.641817,-0.815165,-1,0.84672,0.963592,-0.103845,0.816256,0.963592,-0.765492,0.816256,0.963592,-0.103845,-0.833984,0.963592,-0.765492,-0.833984,-0.811162,1.10352,-0.660245,-0.815165,-1,-0.836607,0.0769518,1.10352,-0.660245,0.0709375,1.11432,0.641817,0.451755,0.213137,-0.959775,0.451755,0.213137,0.943123,-0.964529,0.203043,-0.959775,-0.964529,0.203043,0.943123,-0.964529,-0.581778,-1,-0.964529,-0.581778,1,-0.473078,-1,-0.836607,-0.473078,-1,0.84672,0.478574,-1,-0.836607,0.478574,-1,0.84672,0.472326,-0.717375,-0.990629,0.472403,-0.720875,0.986914,0.111542,1.02135,-0.687888,-0.825045,1.02201,-0.687358,-0.222137,1.02158,-0.687699,-0.210703,0.208416,-0.959775,-0.314912,1.02165,-0.687647,-0.314394,0.207677,-0.959775,0.0515582,1.02139,-0.687854,0.377175,0.212605,-0.959775,-0.774446,1.02197,-0.687387,-0.901541,0.203492,-0.959775,0.111743,1.01776,0.674103,0.111554,1.02113,-0.603906,0.451755,0.213137,-0.883155,-0.827256,1.05198,0.662428,-0.950241,0.286933,-0.93187,-0.94619,0.316458,0.905623,-0.825175,1.02377,-0.607843,-0.949946,0.289087,-0.797846,-0.827145,1.05048,0.594698,-0.946459,0.314497,0.783598,0.111733,1.01793,0.608617,0.451755,0.213137,0.852127,0.0526958,1.01991,0.673369,0.376612,0.212601,0.943123,-0.216975,1.02974,0.670016,-0.203332,0.208468,0.943123,-0.30735,1.03303,0.668892,-0.306825,0.207731,0.943123,-0.775931,1.05011,0.663066,-0.895319,0.203536,0.943123,-0.323592,0.207611,0.943123,-0.323592,0.207611,-0.959775,-0.201236,0.208483,0.943123,-0.201236,0.208483,-0.959775,-0.201236,0.208483,0.110605,-0.323592,0.207611,0.110605,-0.201236,0.208483,-0.127257,-0.323592,0.207611,-0.127257,-0.323592,0.207611,-0.840844,-0.201236,0.208483,-0.840844,-0.201236,0.208483,0.824192,-0.323592,0.207611,0.824192,-0.201236,0.208483,-0.00832599,-0.323592,0.207611,-0.00832599,-0.257857,0.627498,0.735547,-0.323592,0.62703,0.735547,-0.257857,0.627498,0.191131,-0.323592,0.62703,0.191131,-0.323592,0.62703,-0.751896,-0.257857,0.627498,-0.751896,-0.323592,0.62703,-0.196889,-0.257857,0.627498,-0.196889,-0.788824,0.204295,0.943123,-0.788824,0.204295,-0.959775,-0.701252,0.204919,0.943123,-0.701252,0.204919,-0.959775,-0.788824,0.476141,-0.841082,-0.737728,0.476506,-0.841082,-0.788824,0.476141,0.812873,-0.737728,0.476506,0.812873,-0.964529,0.203043,-0.823146,-0.964529,-0.581778,-0.862652,-0.964529,0.203043,0.789832,-0.964529,-0.581778,0.845028,-0.964529,-0.268088,0.822967,-0.964529,-0.264355,0.976996,-0.964529,-0.271096,-0.984076,-0.964529,-0.26131,-0.84652,-0.964529,-0.0871512,-0.974649,-0.964529,-0.0891783,-0.837856,-0.964529,-0.0325223,0.806399,-0.964529,-0.030656,0.960059])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("_47"),
                                          translation : new SFVec3f([1.48853,-0.952822,2.78606]),
                                          rotation : new SFRotation([0.57735,0.57735,-0.57735,4.18879]),
                                          scale : new SFVec3f([2.1038,0.795998,2.1038]),
                                          scaleOrientation : new SFRotation([0.00016287,1,0.00000163835,0.0491506]),
                                          children : new MFNode([
                                            new Group({
                                              children : new MFNode([
                                                new Group({
                                                  DEF : new SFString("raddreh1"),
                                                  children : new MFNode([
                                                    new TimeSensor({
                                                      DEF : new SFString("Time_7"),
                                                      cycleInterval : new SFTime(0.4),
                                                      loop : new SFBool(true)})])}),

                                                new OrientationInterpolator({
                                                  DEF : new SFString("UnnamedShapeRotationInterp_2"),
                                                  key : new MFFloat([0,0.25,0.5,0.75,1]),
                                                  keyValue : new MFRotation([0.57735,0.57735,-0.57735,4.18879,-1,3.14886e-7,-8.17613e-8,1.5708,-0.57735,0.577351,-0.57735,2.0944,1.80552e-7,0.707107,-0.707107,3.14159,-0.57735,-0.57735,0.57735,2.09439])}),

                                                new OrientationInterpolator({
                                                  DEF : new SFString("UnnamedShapeScaleOrientationInterp"),
                                                  key : new MFFloat([0,0.25,0.5,0.75,1]),
                                                  keyValue : new MFRotation([-2.53883e-7,1,2.8604e-7,0.151342,-1.87436e-8,1,1.50384e-7,0.785398,1.22421e-7,-1,2.27848e-7,0.502956,-3.75051e-8,1,4.89911e-8,2.35619,-2.07772e-8,1,9.10501e-8,1.5708])}),

                                                new PositionInterpolator({
                                                  DEF : new SFString("UnnamedShapeScaleFactorInterp"),
                                                  key : new MFFloat([0,0.75]),
                                                  keyValue : new MFVec3f([2.1038,0.795998,2.1038,2.10379,0.795995,2.10379])})])}),

                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      DEF : new SFString("_48"),
                                                      ambientIntensity : new SFFloat(5.85714),
                                                      diffuseColor : new SFColor([0.0744681,0.0744681,0.0744681])})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_39")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.5,1,0.5,1,0.691342,0.96194,0.691342,0.96194,0.853554,0.853554,0.853554,0.853554,0.96194,0.691342,0.96194,0.691342,1,0.5,1,0.5,0.96194,0.308658,0.96194,0.308658,0.853554,0.146446,0.853554,0.146446,0.691342,0.03806,0.691342,0.03806,0.5,0,0.5,0,0.308659,0.03806,0.308659,0.03806,0.146446,0.146446,0.146446,0.146446,0.03806,0.308658,0.03806,0.308658,0,0.5,0,0.5,0.0380605,0.691342,0.0380605,0.691342,0.146446,0.853554,0.146446,0.853554,0.308659,0.96194,0.308659,0.96194,0.5,0.5,0.5,0.5])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0,-0.1,-0.1,0,0.1,-0.1,0.0382683,-0.1,-0.092388,0.0382683,0.1,-0.092388,0.0707107,-0.1,-0.0707107,0.0707107,0.1,-0.0707107,0.092388,-0.1,-0.0382683,0.092388,0.1,-0.0382683,0.1,-0.1,4.37114e-9,0.1,0.1,4.37114e-9,0.092388,-0.1,0.0382684,0.092388,0.1,0.0382684,0.0707107,-0.1,0.0707107,0.0707107,0.1,0.0707107,0.0382683,-0.1,0.092388,0.0382683,0.1,0.092388,1.50996e-8,-0.1,0.1,1.50996e-8,0.1,0.1,-0.0382683,-0.1,0.092388,-0.0382683,0.1,0.092388,-0.0707107,-0.1,0.0707107,-0.0707107,0.1,0.0707107,-0.092388,-0.1,0.0382684,-0.092388,0.1,0.0382684,-0.1,-0.1,-1.19249e-9,-0.1,0.1,-1.19249e-9,-0.0923879,-0.1,-0.0382684,-0.0923879,0.1,-0.0382684,-0.0707107,-0.1,-0.0707107,-0.0707107,0.1,-0.0707107,-0.0382683,-0.1,-0.092388,-0.0382683,0.1,-0.092388,0,0.1,0,0,-0.1,0])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("_49"),
                                          translation : new SFVec3f([-0.661117,-0.952823,2.73555]),
                                          rotation : new SFRotation([0.57735,0.57735,-0.57735,4.18879]),
                                          scale : new SFVec3f([2.1038,0.795999,2.1038]),
                                          scaleOrientation : new SFRotation([0.00027183,1,-0.0000116742,0.0273614]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      USE : new SFString("_48")})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_39")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.5,1,0.5,1,0.691342,0.96194,0.691342,0.96194,0.853554,0.853554,0.853554,0.853554,0.96194,0.691342,0.96194,0.691342,1,0.5,1,0.5,0.96194,0.308658,0.96194,0.308658,0.853554,0.146446,0.853554,0.146446,0.691342,0.03806,0.691342,0.03806,0.5,0,0.5,0,0.308659,0.03806,0.308659,0.03806,0.146446,0.146446,0.146446,0.146446,0.03806,0.308658,0.03806,0.308658,0,0.5,0,0.5,0.0380605,0.691342,0.0380605,0.691342,0.146446,0.853554,0.146446,0.853554,0.308659,0.96194,0.308659,0.96194,0.5,0.5,0.5,0.5])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0,-0.1,-0.1,0,0.1,-0.1,0.0382683,-0.1,-0.092388,0.0382683,0.1,-0.092388,0.0707107,-0.1,-0.0707107,0.0707107,0.1,-0.0707107,0.092388,-0.1,-0.0382683,0.092388,0.1,-0.0382683,0.1,-0.1,4.37114e-9,0.1,0.1,4.37114e-9,0.092388,-0.1,0.0382684,0.092388,0.1,0.0382684,0.0707107,-0.1,0.0707107,0.0707107,0.1,0.0707107,0.0382683,-0.1,0.092388,0.0382683,0.1,0.092388,1.50996e-8,-0.1,0.1,1.50996e-8,0.1,0.1,-0.0382683,-0.1,0.092388,-0.0382683,0.1,0.092388,-0.0707107,-0.1,0.0707107,-0.0707107,0.1,0.0707107,-0.092388,-0.1,0.0382684,-0.092388,0.1,0.0382684,-0.1,-0.1,-1.19249e-9,-0.1,0.1,-1.19249e-9,-0.0923879,-0.1,-0.0382684,-0.0923879,0.1,-0.0382684,-0.0707107,-0.1,-0.0707107,-0.0707107,0.1,-0.0707107,-0.0382683,-0.1,-0.092388,-0.0382683,0.1,-0.092388,0,0.1,0,0,-0.1,0])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("_50"),
                                          translation : new SFVec3f([-0.661129,-0.952824,4.0976]),
                                          rotation : new SFRotation([0.57735,0.57735,-0.57735,4.18879]),
                                          scale : new SFVec3f([2.1038,0.795999,2.1038]),
                                          scaleOrientation : new SFRotation([0.00124034,0.999999,-0.0000712202,0.0059802]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      USE : new SFString("_48")})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_39")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.5,1,0.5,1,0.691342,0.96194,0.691342,0.96194,0.853554,0.853554,0.853554,0.853554,0.96194,0.691342,0.96194,0.691342,1,0.5,1,0.5,0.96194,0.308658,0.96194,0.308658,0.853554,0.146446,0.853554,0.146446,0.691342,0.03806,0.691342,0.03806,0.5,0,0.5,0,0.308659,0.03806,0.308659,0.03806,0.146446,0.146446,0.146446,0.146446,0.03806,0.308658,0.03806,0.308658,0,0.5,0,0.5,0.0380605,0.691342,0.0380605,0.691342,0.146446,0.853554,0.146446,0.853554,0.308659,0.96194,0.308659,0.96194,0.5,0.5,0.5,0.5])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0,-0.1,-0.1,0,0.1,-0.1,0.0382683,-0.1,-0.092388,0.0382683,0.1,-0.092388,0.0707107,-0.1,-0.0707107,0.0707107,0.1,-0.0707107,0.092388,-0.1,-0.0382683,0.092388,0.1,-0.0382683,0.1,-0.1,4.37114e-9,0.1,0.1,4.37114e-9,0.092388,-0.1,0.0382684,0.092388,0.1,0.0382684,0.0707107,-0.1,0.0707107,0.0707107,0.1,0.0707107,0.0382683,-0.1,0.092388,0.0382683,0.1,0.092388,1.50996e-8,-0.1,0.1,1.50996e-8,0.1,0.1,-0.0382683,-0.1,0.092388,-0.0382683,0.1,0.092388,-0.0707107,-0.1,0.0707107,-0.0707107,0.1,0.0707107,-0.092388,-0.1,0.0382684,-0.092388,0.1,0.0382684,-0.1,-0.1,-1.19249e-9,-0.1,0.1,-1.19249e-9,-0.0923879,-0.1,-0.0382684,-0.0923879,0.1,-0.0382684,-0.0707107,-0.1,-0.0707107,-0.0707107,0.1,-0.0707107,-0.0382683,-0.1,-0.092388,-0.0382683,0.1,-0.092388,0,0.1,0,0,-0.1,0])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("_51"),
                                          translation : new SFVec3f([1.48852,-0.952823,4.06818]),
                                          rotation : new SFRotation([0.57735,0.57735,-0.57735,4.18879]),
                                          scale : new SFVec3f([2.1038,0.795999,2.1038]),
                                          scaleOrientation : new SFRotation([0.000127071,1,-0.0000044527,0.0581711]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      USE : new SFString("_48")})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_39")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1,2,3,5,4,-1,4,5,7,6,-1,6,7,9,8,-1,8,9,11,10,-1,10,11,13,12,-1,12,13,15,14,-1,14,15,17,16,-1,16,17,19,18,-1,18,19,21,20,-1,20,21,23,22,-1,22,23,25,24,-1,24,25,27,26,-1,26,27,29,28,-1,28,29,31,30,-1,30,31,1,0,-1,32,31,29,-1,32,29,27,-1,32,27,25,-1,32,25,23,-1,32,23,21,-1,32,21,19,-1,32,19,17,-1,32,17,15,-1,32,15,13,-1,32,13,11,-1,32,11,9,-1,32,9,7,-1,32,7,5,-1,32,5,3,-1,32,3,1,-1,32,1,31,-1,33,0,2,-1,33,2,4,-1,33,4,6,-1,33,6,8,-1,33,8,10,-1,33,10,12,-1,33,12,14,-1,33,14,16,-1,33,16,18,-1,33,18,20,-1,33,20,22,-1,33,22,24,-1,33,24,26,-1,33,26,28,-1,33,28,30,-1,33,30,0,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.5,1,0.5,1,0.691342,0.96194,0.691342,0.96194,0.853554,0.853554,0.853554,0.853554,0.96194,0.691342,0.96194,0.691342,1,0.5,1,0.5,0.96194,0.308658,0.96194,0.308658,0.853554,0.146446,0.853554,0.146446,0.691342,0.03806,0.691342,0.03806,0.5,0,0.5,0,0.308659,0.03806,0.308659,0.03806,0.146446,0.146446,0.146446,0.146446,0.03806,0.308658,0.03806,0.308658,0,0.5,0,0.5,0.0380605,0.691342,0.0380605,0.691342,0.146446,0.853554,0.146446,0.853554,0.308659,0.96194,0.308659,0.96194,0.5,0.5,0.5,0.5])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0,-0.1,-0.1,0,0.1,-0.1,0.0382683,-0.1,-0.092388,0.0382683,0.1,-0.092388,0.0707107,-0.1,-0.0707107,0.0707107,0.1,-0.0707107,0.092388,-0.1,-0.0382683,0.092388,0.1,-0.0382683,0.1,-0.1,4.37114e-9,0.1,0.1,4.37114e-9,0.092388,-0.1,0.0382684,0.092388,0.1,0.0382684,0.0707107,-0.1,0.0707107,0.0707107,0.1,0.0707107,0.0382683,-0.1,0.092388,0.0382683,0.1,0.092388,1.50996e-8,-0.1,0.1,1.50996e-8,0.1,0.1,-0.0382683,-0.1,0.092388,-0.0382683,0.1,0.092388,-0.0707107,-0.1,0.0707107,-0.0707107,0.1,0.0707107,-0.092388,-0.1,0.0382684,-0.092388,0.1,0.0382684,-0.1,-0.1,-1.19249e-9,-0.1,0.1,-1.19249e-9,-0.0923879,-0.1,-0.0382684,-0.0923879,0.1,-0.0382684,-0.0707107,-0.1,-0.0707107,-0.0707107,0.1,-0.0707107,-0.0382683,-0.1,-0.092388,-0.0382683,0.1,-0.092388,0,0.1,0,0,-0.1,0])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.24676,-0.903945,3.42423]),
                                          scale : new SFVec3f([1.57956,0.471647,0.743738]),
                                          center : new SFVec3f([-0.249095,0.626986,-0.00832599]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(1.00267),
                                                      diffuseColor : new SFColor([0,0.0426145,0.159574]),
                                                      specularColor : new SFColor([0.734043,0.734043,0.734043]),
                                                      transparency : new SFFloat(0.117021)})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_43")})),
                                                  textureTransform : new SFNode(
                                                    new TextureTransform({
                                                      scale : new SFVec2f([0.163906,0.0426618])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  texCoordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1,8,9,10,11,-1,12,13,14,15,-1,16,17,18,19,-1,20,21,22,23,-1]),
                                                  coordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1,8,9,10,11,-1,12,13,14,15,-1,16,17,18,19,-1,20,21,22,23,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.436623,0.598625,0.593939,0.599939,0.512695,0.942661,0.437833,0.946856,0.406464,0.601638,0.246708,0.603106,0.283252,0.959533,0.412746,0.950627,0.210125,0.655387,0.0211934,0.654897,0.0453464,0.954927,0.18568,0.952034,0.594633,0.599908,0.434678,0.601378,0.43889,0.948828,0.516015,0.943524,0.801473,0.602933,0.965258,0.602933,0.935349,0.87994,0.829724,0.881202,0.248915,0.597058,0.40855,0.598391,0.412745,0.948262,0.282665,0.955551])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.203332,0.208468,0.943123,0.376612,0.212601,0.943123,0.0526958,1.01991,0.673369,-0.216975,1.02974,0.670016,-0.314394,0.207677,-0.959775,-0.901541,0.203492,-0.959775,-0.774446,1.02197,-0.687387,-0.314912,1.02165,-0.687647,-0.949946,0.289087,-0.797846,-0.946459,0.314497,0.783598,-0.827145,1.05048,0.594698,-0.825175,1.02377,-0.607843,0.377175,0.212605,-0.959775,-0.210703,0.208416,-0.959775,-0.222137,1.02158,-0.687699,0.0515582,1.02139,-0.687854,0.451755,0.213137,0.87123,0.451755,0.213137,-0.883155,0.111554,1.02113,-0.603906,0.111733,1.01793,0.608617,-0.895319,0.203536,0.943123,-0.306825,0.207731,0.943123,-0.30735,1.03303,0.668892,-0.775931,1.05011,0.663066])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.391126,-0.572675,3.42209]),
                                          scale : new SFVec3f([1.57956,0.471647,0.743738]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(0),
                                                      diffuseColor : new SFColor([0,0,0]),
                                                      emissiveColor : new SFColor([0.468085,0.468085,0.468085])})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_36")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,2,-1,0,3,1,-1]),
                                                  coordIndex : new MFInt32([0,1,2,-1,0,3,1,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.768126,0.46022,0.999243,0.160853,0.999818,0.45361,0.766976,0.15752])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0.963592,-0.103845,0.816256,0.963592,-0.765492,-0.833984,0.963592,-0.103845,-0.833984,0.963592,-0.765492,0.816256])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.391126,-0.572675,3.42209]),
                                          scale : new SFVec3f([1.57956,0.471647,0.743738]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(0.489362),
                                                      diffuseColor : new SFColor([1,0.935346,0.920328]),
                                                      emissiveColor : new SFColor([0.648936,0,0.00826227])})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_36")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1]),
                                                  coordIndex : new MFInt32([0,1,2,3,-1,4,5,6,7,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.00115683,0.488722,0.000685288,0.603533,0.0167178,0.602167,0.0164821,0.488722,0.230328,0.589865,0.22961,0.470431,0.215003,0.470954,0.215463,0.59109])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.964529,-0.030656,0.960059,-0.964529,0.203043,0.943123,-0.964529,0.203043,0.789832,-0.964529,-0.0325223,0.806399,-0.964529,0.203043,-0.959775,-0.964529,-0.0871512,-0.974649,-0.964529,-0.0891783,-0.837856,-0.964529,0.203043,-0.823146])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([23.2692,-1.66428,12.2358]),
                                          rotation : new SFRotation([-1.84852e-8,1,5.43605e-10,3.1416]),
                                          scale : new SFVec3f([0.535311,0.535306,0.535301]),
                                          scaleOrientation : new SFRotation([0.00205922,0.999983,-0.00538125,0.782588]),
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([45.7545,2.09838,15.2765]),
                                              children : new MFNode([
                                                new Billboard({
                                                  axisOfRotation : new SFVec3f([0,0,0]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([-45.5908,-2.07082,-17.7179]),
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([45.5908,2.07082,16.6418]),
                                                          scale : new SFVec3f([0.999997,1,0.999997]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  material : new SFNode(
                                                                    new Material({
                                                                      DEF : new SFString("_52"),
                                                                      ambientIntensity : new SFFloat(0.16),
                                                                      diffuseColor : new SFColor([1,0.0120871,0]),
                                                                      emissiveColor : new SFColor([0.638298,0.00771515,0]),
                                                                      shininess : new SFFloat(0)})),
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_45")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  creaseAngle : new SFFloat(0.5),
                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-1.07612,1.07613,1.07609,-1.07612,-1.07613,1.07609,1.07612,-1.07613,1.07609,1.07612,1.07613,1.07609])}))}))})])})])})])})])}),

                                            new Transform({
                                              translation : new SFVec3f([45.7545,2.09838,17.7997]),
                                              children : new MFNode([
                                                new Billboard({
                                                  axisOfRotation : new SFVec3f([0,0,0]),
                                                  children : new MFNode([
                                                    new Transform({
                                                      translation : new SFVec3f([-45.5908,-2.07082,-17.7179]),
                                                      children : new MFNode([
                                                        new Transform({
                                                          translation : new SFVec3f([45.5908,2.07082,16.6418]),
                                                          scale : new SFVec3f([0.999997,1,0.999997]),
                                                          children : new MFNode([
                                                            new Shape({
                                                              appearance : new SFNode(
                                                                new Appearance({
                                                                  material : new SFNode(
                                                                    new Material({
                                                                      USE : new SFString("_52")})),
                                                                  texture : new SFNode(
                                                                    new ImageTexture({
                                                                      USE : new SFString("_45")}))})),
                                                              geometry : new SFNode(
                                                                new IndexedFaceSet({
                                                                  solid : new SFBool(false),
                                                                  creaseAngle : new SFFloat(0.5),
                                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                                  texCoord : new SFNode(
                                                                    new TextureCoordinate({
                                                                      point : new MFVec2f([0,1,0,0,1,0,1,1])})),
                                                                  coord : new SFNode(
                                                                    new Coordinate({
                                                                      point : new MFVec3f([-1.07612,1.07613,1.07609,-1.07612,-1.07613,1.07609,1.07612,-1.07613,1.07609,1.07612,1.07613,1.07609])}))}))})])})])})])})])})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.342257,-1.183,3.33802]),
                                          rotation : new SFRotation([0.00000227622,-0.707107,0.707107,3.14159]),
                                          scale : new SFVec3f([4.37387,2.33866,2.53843]),
                                          center : new SFVec3f([-0.0123757,0.0468316,0]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  material : new SFNode(
                                                    new Material({
                                                      ambientIntensity : new SFFloat(0),
                                                      diffuseColor : new SFColor([0,0,0]),
                                                      shininess : new SFFloat(0)})),
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      USE : new SFString("_31")}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,2,3,-1]),
                                                  coordIndex : new MFInt32([0,1,2,3,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,0,1,0,1,1,0,1])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.578771,-0.5,0,0.55402,-0.5,0,0.55402,0.593663,0,-0.578771,0.593663,0])}))}))})])}),

                                        new Viewpoint({
                                          DEF : new SFString("poloblick"),
                                          position : new SFVec3f([0.183673,-0.282281,3.16048]),
                                          orientation : new SFRotation([-0.064625,0.996635,-0.0504216,4.70308])}),

                                        new Transform({
                                          translation : new SFVec3f([0.00824762,-0.616905,3.42324]),
                                          rotation : new SFRotation([-8.03092e-7,1,9.84547e-8,1.57097]),
                                          scale : new SFVec3f([1.763,1.20372,3.9741]),
                                          children : new MFNode([
                                            new VisibilitySensor({
                                              DEF : new SFString("_53"),
                                              size : new SFVec3f([1,1,1])})])})])})])})])}))})])}),

                    new Collision({
                      enabled : new SFBool(false),
                      proxy : new SFNode(
                        new Transform({
                          DEF : new SFString("HUD"),
                          children : new MFNode([
                            new Transform({
                              DEF : new SFString("Blenden"),
                              children : new MFNode([
                                new Transform({
                                  DEF : new SFString("Blende1"),
                                  children : new MFNode([
                                    new Transform({
                                      children : new MFNode([
                                        new Script({
                                          DEF : new SFString("_anim1"),
                                          field : new MFNode([
                                            new field({
                                              type : field.TYPE_SFINT32,
                                              name : new SFString("whichChoice_changed"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("bind2"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("enabled"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFTIME,
                                              name : new SFString("startTime"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadein"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadeout"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("anim"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("isBound"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("set_play"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("jump"),
                                              accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),
                                          ]),vrmlscript:
, function initialize()
{
	whichChoice_changed = 0;
}

, function fadein(value, time)
{
	if (value) whichChoice_changed = 1;
	else bind2 = TRUE;
}

, function fadeout(value, time)
{
	if (!value) whichChoice_changed = 0;
}

, function anim(value, time)
{
	if (!value && jump){
		startTime = time;
	}
	enabled = !value;
}

, function isBound(value, time)
{
	if (!value && !enabled) jump = FALSE;
}

, function set_play(value, time)
{
	jump = value;
})}),

                                        new Switch({
                                          DEF : new SFString("_54"),
                                          whichChoice : new SFInt32(0),
                                          children : new MFNode([
                                            new Transform({}),

                                            new Transform({
                                              DEF : new SFString("Image_1"),
                                              translation : new SFVec3f([3.92172e-10,0,-0.0220314]),
                                              scale : new SFVec3f([0.973682,0.973682,0.973686]),
                                              children : new MFNode([
                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadein_1"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_8")})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_1"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([1,0])})])}),

                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadeout_1"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_9"),
                                                          startTime : new SFTime(953184905.315),
                                                          stopTime : new SFTime(1)})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_2"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([0,1])})])}),

                                                new Transform({
                                                  DEF : new SFString("image"),
                                                  translation : new SFVec3f([-4.71505e-10,-2.25525e-9,-0.444774]),
                                                  scale : new SFVec3f([0.379077,0.379077,0.379076]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              DEF : new SFString("_55")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["cam1.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([3,5,9,-1,5,6,9,-1,0,8,6,-1,0,3,8,-1]),
                                                          coordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([1,1,1,0.5,0.5,1,0,1,0,0.5,0,0,1,0,0.5,0,0.5,0.5,0.5,0.5])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([0.725,0.5,0,-0.725,0.5,0,-0.725,-0.5,0,0.725,-0.5,0,0,0,0])}))}))})])})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("Blende2"),
                                  children : new MFNode([
                                    new Transform({
                                      children : new MFNode([
                                        new Script({
                                          DEF : new SFString("_anim2"),
                                          field : new MFNode([
                                            new field({
                                              type : field.TYPE_SFINT32,
                                              name : new SFString("whichChoice_changed"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("bind2"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("enabled"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFTIME,
                                              name : new SFString("startTime"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadein"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadeout"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("anim"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("isBound"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("set_play"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("jump"),
                                              accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),
                                          ]),vrmlscript:
, function initialize()
{
	whichChoice_changed = 0;
}

, function fadein(value, time)
{
	if (value) whichChoice_changed = 1;
	else bind2 = TRUE;
}

, function fadeout(value, time)
{
	if (!value) whichChoice_changed = 0;
}

, function anim(value, time)
{
	if (!value && jump){
		startTime = time;
	}
	enabled = !value;
}

, function isBound(value, time)
{
	if (!value && !enabled) jump = FALSE;
}

, function set_play(value, time)
{
	jump = value;
})}),

                                        new Switch({
                                          DEF : new SFString("_56"),
                                          whichChoice : new SFInt32(0),
                                          children : new MFNode([
                                            new Transform({}),

                                            new Transform({
                                              DEF : new SFString("Image_2"),
                                              translation : new SFVec3f([0,0,-0.0103275]),
                                              center : new SFVec3f([0,0,-0.444774]),
                                              children : new MFNode([
                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadein_2"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_10"),
                                                          stopTime : new SFTime(1)})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_3"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([1,0])})])}),

                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadeout_2"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_11"),
                                                          stopTime : new SFTime(1)})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_4"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([0,1])})])}),

                                                new Transform({
                                                  translation : new SFVec3f([0,-2.25525e-9,-0.444774]),
                                                  scale : new SFVec3f([0.36925,0.36925,0.369248]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              DEF : new SFString("_57")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["cam2.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          coordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,0.5])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.725,-0.5,0,0.725,-0.5,0,0.725,0.5,0,-0.725,0.5,0,0,0,0])}))}))})])})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("Blende3"),
                                  children : new MFNode([
                                    new Transform({
                                      children : new MFNode([
                                        new Script({
                                          DEF : new SFString("_anim3"),
                                          field : new MFNode([
                                            new field({
                                              type : field.TYPE_SFINT32,
                                              name : new SFString("whichChoice_changed"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("bind2"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("enabled"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFTIME,
                                              name : new SFString("startTime"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadein"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadeout"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("anim"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("isBound"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("set_play"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("jump"),
                                              accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),
                                          ]),vrmlscript:
, function initialize()
{
	whichChoice_changed = 0;
}

, function fadein(value, time)
{
	if (value) whichChoice_changed = 1;
	else bind2 = TRUE;
}

, function fadeout(value, time)
{
	if (!value) whichChoice_changed = 0;
}

, function anim(value, time)
{
	if (!value && jump){
		startTime = time;
	}
	enabled = !value;
}

, function isBound(value, time)
{
	if (!value && !enabled) jump = FALSE;
}

, function set_play(value, time)
{
	jump = value;
})}),

                                        new Switch({
                                          DEF : new SFString("_58"),
                                          whichChoice : new SFInt32(0),
                                          children : new MFNode([
                                            new Transform({}),

                                            new Transform({
                                              DEF : new SFString("Image_3"),
                                              translation : new SFVec3f([0,0,-0.0103275]),
                                              center : new SFVec3f([0,0,-0.444774]),
                                              children : new MFNode([
                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadein_3"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_12")})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_5"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([1,0])})])}),

                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadeout_3"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_13"),
                                                          stopTime : new SFTime(1)})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_6"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([0,1])})])}),

                                                new Transform({
                                                  translation : new SFVec3f([0,-2.25525e-9,-0.444774]),
                                                  scale : new SFVec3f([0.36925,0.36925,0.369248]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              DEF : new SFString("_59")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["cam3.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          coordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,0.5])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.725,-0.5,0,0.725,-0.5,0,0.725,0.5,0,-0.725,0.5,0,0,0,0])}))}))})])})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("Blende4"),
                                  children : new MFNode([
                                    new Transform({
                                      children : new MFNode([
                                        new Script({
                                          DEF : new SFString("_anim4"),
                                          field : new MFNode([
                                            new field({
                                              type : field.TYPE_SFINT32,
                                              name : new SFString("whichChoice_changed"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("bind2"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("enabled"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFTIME,
                                              name : new SFString("startTime"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadein"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadeout"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("anim"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("isBound"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("set_play"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("jump"),
                                              accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),
                                          ]),vrmlscript:
, function initialize()
{
	whichChoice_changed = 0;
}

, function fadein(value, time)
{
	if (value) whichChoice_changed = 1;
	else bind2 = TRUE;
}

, function fadeout(value, time)
{
	if (!value) whichChoice_changed = 0;
}

, function anim(value, time)
{
	if (!value && jump){
		startTime = time;
	}
	enabled = !value;
}

, function isBound(value, time)
{
	if (!value && !enabled) jump = FALSE;
}

, function set_play(value, time)
{
	jump = value;
})}),

                                        new Switch({
                                          DEF : new SFString("_60"),
                                          whichChoice : new SFInt32(0),
                                          children : new MFNode([
                                            new Transform({}),

                                            new Transform({
                                              DEF : new SFString("Image_4"),
                                              translation : new SFVec3f([0,0,-0.0103275]),
                                              center : new SFVec3f([0,0,-0.444774]),
                                              children : new MFNode([
                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadein_4"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_14")})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_7"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([1,0])})])}),

                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadeout_4"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_15"),
                                                          stopTime : new SFTime(1)})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_8"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([0,1])})])}),

                                                new Transform({
                                                  translation : new SFVec3f([0,-2.25525e-9,-0.444774]),
                                                  scale : new SFVec3f([0.36925,0.36925,0.369248]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              DEF : new SFString("_61")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["cam4.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          coordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,0.5])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.725,-0.5,0,0.725,-0.5,0,0.725,0.5,0,-0.725,0.5,0,0,0,0])}))}))})])})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("Blende5"),
                                  children : new MFNode([
                                    new Transform({
                                      children : new MFNode([
                                        new Script({
                                          DEF : new SFString("_anim5"),
                                          field : new MFNode([
                                            new field({
                                              type : field.TYPE_SFINT32,
                                              name : new SFString("whichChoice_changed"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("bind2"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("enabled"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFTIME,
                                              name : new SFString("startTime"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadein"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadeout"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("anim"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("isBound"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("set_play"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("jump"),
                                              accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),
                                          ]),vrmlscript:
, function initialize()
{
	whichChoice_changed = 0;
}

, function fadein(value, time)
{
	if (value) whichChoice_changed = 1;
	else bind2 = TRUE;
}

, function fadeout(value, time)
{
	if (!value) whichChoice_changed = 0;
}

, function anim(value, time)
{
	if (!value && jump){
		startTime = time;
	}
	enabled = !value;
}

, function isBound(value, time)
{
	if (!value && !enabled) jump = FALSE;
}

, function set_play(value, time)
{
	jump = value;
})}),

                                        new Switch({
                                          DEF : new SFString("_62"),
                                          whichChoice : new SFInt32(0),
                                          children : new MFNode([
                                            new Transform({}),

                                            new Transform({
                                              DEF : new SFString("Image_5"),
                                              translation : new SFVec3f([0,0,-0.0103275]),
                                              center : new SFVec3f([0,0,-0.444774]),
                                              children : new MFNode([
                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadein_5"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_16")})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_9"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([1,0])})])}),

                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadeout_5"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_17"),
                                                          stopTime : new SFTime(1)})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_10"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([0,1])})])}),

                                                new Transform({
                                                  translation : new SFVec3f([0,-2.25525e-9,-0.444774]),
                                                  scale : new SFVec3f([0.36925,0.36925,0.369248]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              DEF : new SFString("_63")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["cam5.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          coordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,0.5])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.725,-0.5,0,0.725,-0.5,0,0.725,0.5,0,-0.725,0.5,0,0,0,0])}))}))})])})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("Blende6"),
                                  children : new MFNode([
                                    new Transform({
                                      children : new MFNode([
                                        new Script({
                                          DEF : new SFString("_anim6"),
                                          field : new MFNode([
                                            new field({
                                              type : field.TYPE_SFINT32,
                                              name : new SFString("whichChoice_changed"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("bind2"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("enabled"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFTIME,
                                              name : new SFString("startTime"),
                                              accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadein"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("fadeout"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("anim"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("isBound"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("set_play"),
                                              accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                            new field({
                                              type : field.TYPE_SFBOOL,
                                              name : new SFString("jump"),
                                              accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),
                                          ]),vrmlscript:
, function initialize()
{
	whichChoice_changed = 0;
}

, function fadein(value, time)
{
	if (value) whichChoice_changed = 1;
	else bind2 = TRUE;
}

, function fadeout(value, time)
{
	if (!value) whichChoice_changed = 0;
}

, function anim(value, time)
{
	if (!value && jump){
		startTime = time;
	}
	enabled = !value;
}

, function isBound(value, time)
{
	if (!value && !enabled) jump = FALSE;
}

, function set_play(value, time)
{
	jump = value;
})}),

                                        new Switch({
                                          DEF : new SFString("_64"),
                                          whichChoice : new SFInt32(0),
                                          children : new MFNode([
                                            new Transform({}),

                                            new Transform({
                                              DEF : new SFString("Image"),
                                              translation : new SFVec3f([0,0,-0.0103275]),
                                              center : new SFVec3f([0,0,-0.444774]),
                                              children : new MFNode([
                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadein"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_18")})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_11"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([1,0])})])}),

                                                new Group({
                                                  children : new MFNode([
                                                    new Group({
                                                      DEF : new SFString("fadeout"),
                                                      children : new MFNode([
                                                        new TimeSensor({
                                                          DEF : new SFString("Time_19"),
                                                          stopTime : new SFTime(1)})])}),

                                                    new ScalarInterpolator({
                                                      DEF : new SFString("ImageTransparencyInterp_12"),
                                                      key : new MFFloat([0,1]),
                                                      keyValue : new MFFloat([0,1])})])}),

                                                new Transform({
                                                  translation : new SFVec3f([0,-2.25525e-9,-0.444774]),
                                                  scale : new SFVec3f([0.36925,0.36925,0.369248]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      appearance : new SFNode(
                                                        new Appearance({
                                                          material : new SFNode(
                                                            new Material({
                                                              DEF : new SFString("_65")})),
                                                          texture : new SFNode(
                                                            new ImageTexture({
                                                              url : new MFString(["cam6.png"])}))})),
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          solid : new SFBool(false),
                                                          texCoordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          coordIndex : new MFInt32([1,2,4,-1,2,3,4,-1,0,4,3,-1,0,1,4,-1]),
                                                          texCoord : new SFNode(
                                                            new TextureCoordinate({
                                                              point : new MFVec2f([0,0,1,0,1,1,0,1,0.5,0.5])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-0.725,-0.5,0,0.725,-0.5,0,0.725,0.5,0,-0.725,0.5,0,0,0,0])}))}))})])})])})])})])})])}),

                                new SpotLight({
                                  DEF : new SFString("Light1"),
                                  attenuation : new SFVec3f([0.001,0,0]),
                                  location : new SFVec3f([0,0.118024,0.559522]),
                                  radius : new SFFloat(100000),
                                  beamWidth : new SFFloat(0.0174533),
                                  cutOffAngle : new SFFloat(0.454135)})])}),

                            new Transform({
                              DEF : new SFString("JumpCam"),
                              children : new MFNode([
                                new Script({
                                  DEF : new SFString("_start"),
                                  field : new MFNode([
                                    new field({
                                      type : field.TYPE_SFBOOL,
                                      name : new SFString("isBound"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFBOOL,
                                      name : new SFString("isBound2"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFBOOL,
                                      name : new SFString("isBound3"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("enterTime"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("enterTime2"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("enterTime3"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),
                                  ]),vrmlscript:
, function enterTime(value, time)
{
	isBound = TRUE;
}

, function enterTime2(value, time)
{
	isBound2 = TRUE;
}

, function enterTime2(value, time)
{
	isBound2 = TRUE;
}

, function enterTime3(value, time)
{
	isBound3 = TRUE;
})})])}),

                            new Transform({
                              DEF : new SFString("FotoButtons"),
                              children : new MFNode([
                                new Script({
                                  DEF : new SFString("_flipFoto"),
                                  field : new MFNode([
                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice1_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice2_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice3_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice4_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice5_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice6_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice7_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice8_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time1"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time2"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time3"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time4"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time5"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time6"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time7"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time8"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),
                                  ]),vrmlscript:
, function time1(value, time)
{
	whichChoice_changed = 0;
}

, function time2(value, time)
{
	whichChoice_changed = 1;
}

, function time3(value, time) 					
{												
	whichChoice_changed = 2;					
}												

, function time4(value, time)
{
	whichChoice_changed = 3;
}

, function time5(value, time)
{
	whichChoice_changed = 4;
}

, function time6(value, time)
{
	whichChoice_changed = 5;
}

, function time7(value, time)
{
	whichChoice_changed = 6;
}

, function time8(value, time)
{
	whichChoice_changed = 7;
}

, function eventsProcessed()
{
	whichChoice1_changed = whichChoice_changed == 0;
	whichChoice2_changed = whichChoice_changed == 1;
	whichChoice3_changed = whichChoice_changed == 2;
	whichChoice4_changed = whichChoice_changed == 3;
	whichChoice5_changed = whichChoice_changed == 4;
	whichChoice6_changed = whichChoice_changed == 5;
	whichChoice7_changed = whichChoice_changed == 6;
	whichChoice8_changed = whichChoice_changed == 7;
}

, function initialize()
{
	eventsProcessed();
})}),

                                new Transform({
                                  DEF : new SFString("B1"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_66")}),

                                    new Switch({
                                      DEF : new SFString("_67"),
                                      whichChoice : new SFInt32(1),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,0.02,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_68"),
                                                      url : new MFString(["fmadelnrot-mini.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([0.235,0.02,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("xform_4"),
                                              translation : new SFVec3f([0.235,0.02,-0.447837]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_68")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("B2"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_69")}),

                                    new Switch({
                                      DEF : new SFString("_70"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,-0.005,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_71"),
                                                      url : new MFString(["frueckblick-mini.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([0.235,-0.005,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("xform_5"),
                                              translation : new SFVec3f([0.235,-0.005,-0.447837]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_71")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("B3"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_72")}),

                                    new Switch({
                                      DEF : new SFString("_73"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,-0.03,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_74"),
                                                      url : new MFString(["f08_18-mini.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([0.235,-0.03,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("xform_6"),
                                              translation : new SFVec3f([0.235,-0.03,-0.447837]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_74")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("B4"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_75")}),

                                    new Switch({
                                      DEF : new SFString("_76"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,-0.055,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_77"),
                                                      url : new MFString(["f14_34-mini.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([0.235,-0.055,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("xform_7"),
                                              translation : new SFVec3f([0.235,-0.055,-0.447837]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_77")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("B5"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_78")}),

                                    new Switch({
                                      DEF : new SFString("_79"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,-0.085,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_80"),
                                                      url : new MFString(["mini5.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([0.235,-0.085,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("xform_8"),
                                              translation : new SFVec3f([0.235,-0.085,-0.447837]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_80")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("B6"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_81")}),

                                    new Switch({
                                      DEF : new SFString("_82"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,-0.11,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_83"),
                                                      url : new MFString(["mini6.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([0.235,-0.11,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("xform_9"),
                                              translation : new SFVec3f([0.235,-0.11,-0.447837]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_83")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("B7"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_84")}),

                                    new Switch({
                                      DEF : new SFString("_85"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,-0.135,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_86"),
                                                      url : new MFString(["mini7.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([0.235,-0.135,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("xform_10"),
                                              translation : new SFVec3f([0.235,-0.135,-0.447837]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_86")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("B8"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_87")}),

                                    new Switch({
                                      DEF : new SFString("_88"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,-0.16,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_89"),
                                                      url : new MFString(["mini8.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([0.235,-0.16,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              DEF : new SFString("xform"),
                                              translation : new SFVec3f([0.235,-0.16,-0.447837]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_89")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])})])}),

                            new Transform({
                              DEF : new SFString("CamButtons"),
                              children : new MFNode([
                                new Script({
                                  DEF : new SFString("_flipCam"),
                                  field : new MFNode([
                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice1_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice2_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice3_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice4_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice5_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice6_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice7_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time1"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time2"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time3"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time4"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time5"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time6"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("time7"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),
                                  ]),vrmlscript:
, function time1(value, time)
{
	whichChoice_changed = 0;
}

, function time2(value, time)
{
	whichChoice_changed = 1;
}

, function time3(value, time) 					
{												
	whichChoice_changed = 2;					
}												

, function time4(value, time)
{
	whichChoice_changed = 3;
}

, function time5(value, time)
{
	whichChoice_changed = 4;
}

, function time6(value, time)
{
	whichChoice_changed = 5;
}

, function time7(value, time)
{
	whichChoice_changed = 6;
}

, function eventsProcessed()
{
	whichChoice1_changed = whichChoice_changed == 0;
	whichChoice2_changed = whichChoice_changed == 1;
	whichChoice3_changed = whichChoice_changed == 2;
	whichChoice4_changed = whichChoice_changed == 3;
	whichChoice5_changed = whichChoice_changed == 4;
	whichChoice6_changed = whichChoice_changed == 5;
	whichChoice7_changed = whichChoice_changed == 6;
}

, function initialize()
{
	eventsProcessed();
})}),

                                new Transform({
                                  DEF : new SFString("PlayStop_1"),
                                  children : new MFNode([
                                    new Script({
                                      DEF : new SFString("_toggleplay"),
                                      field : new MFNode([
                                        new field({
                                          type : field.TYPE_SFINT32,
                                          name : new SFString("whichChoice_changed"),
                                          accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFTIME,
                                          name : new SFString("startTime"),
                                          accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFBOOL,
                                          name : new SFString("play"),
                                          accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFTIME,
                                          name : new SFString("start1"),
                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFTIME,
                                          name : new SFString("stopTime"),
                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFBOOL,
                                          name : new SFString("set_anim"),
                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFBOOL,
                                          name : new SFString("loop"),
                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFBOOL,
                                          name : new SFString("anim"),
                                          accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),
                                      ]),vrmlscript:
, function initialize()
{
	play = FALSE;
	whichChoice_changed = play;
}

, function start1(value, time)
{
	if (!anim && !play) startTime = time;

	play = !play;
	whichChoice_changed = play;
}

, function stopTime(value, time)
{
	if(play) {
		play = FALSE;
		whichChoice_changed = play;
	}
}

, function set_anim(value, time)
{
	anim = value;
}

, function loop(value, time)
{
	if(!value && play){
		startTime = time;
		play = TRUE;
	}
})}),

                                    new TouchSensor({
                                      DEF : new SFString("_90")}),

                                    new Transform({
                                      DEF : new SFString("PlayStop"),
                                      children : new MFNode([
                                        new Switch({
                                          DEF : new SFString("_91"),
                                          whichChoice : new SFInt32(0),
                                          children : new MFNode([
                                            new Transform({
                                              DEF : new SFString("Play"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("play"),
                                                  translation : new SFVec3f([-0.24,-0.16,-0.440281]),
                                                  rotation : new SFRotation([0,0,1,3.14159]),
                                                  scale : new SFVec3f([0.0110698,0.00988648,0.002281]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          colorIndex : new MFInt32([3,8,1,-1,4,7,2,-1,9,6,2,-1,9,5,6,-1,7,6,2,-1,7,2,6,-1,5,4,2,-1,5,9,4,-1,3,0,3,-1,3,0,0,-1,0,3,3,-1,0,0,3,-1,0,3,3,-1,0,0,3,-1]),
                                                          coordIndex : new MFInt32([6,7,9,-1,0,1,8,-1,2,4,3,-1,2,5,4,-1,1,4,8,-1,1,3,4,-1,5,0,8,-1,5,2,0,-1,4,9,8,-1,4,6,9,-1,7,4,5,-1,7,6,4,-1,9,5,8,-1,9,7,5,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.00657726,0.0961967,0.245989,0.0187309,0.273952,0.700535,0.00428952,0.062737,0.160428,0.026738,0.391061,1,0.00500445,0.0731932,0.187166,0.00672026,0.098288,0.251337,0.00457549,0.0669195,0.171123,0.00200178,0.0292773,0.0748663,0.00943694,0.138021,0.352941,0.0128686,0.188211,0.481283])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-1,1,1,-1,-1,1,1,1,1,1,-1,1,0.5,-0.5,1,0.5,0.5,1,0.5,-0.5,0.40171,0.5,0.5,0.40171,-0.5,0,1,-0.5,0,0.40171])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([-0.24,-0.16,-0.438]),
                                                  rotation : new SFRotation([1,0,0,1.57079]),
                                                  scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      geometry : new SFNode(
                                                        new IndexedLineSet({
                                                          colorPerVertex : new SFBool(false),
                                                          coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.0187309,0.273952,0.700535])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])})])}),

                                            new Transform({
                                              DEF : new SFString("Stop"),
                                              children : new MFNode([
                                                new Transform({
                                                  DEF : new SFString("stop"),
                                                  translation : new SFVec3f([-0.24,-0.160007,-0.439979]),
                                                  rotation : new SFRotation([-1,0,0,0.00338291]),
                                                  scale : new SFVec3f([0.011066,0.00989619,0.0019793]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      geometry : new SFNode(
                                                        new IndexedFaceSet({
                                                          creaseAngle : new SFFloat(0.5),
                                                          colorIndex : new MFInt32([6,3,1,-1,3,1,1,-1,2,2,8,-1,2,8,8,-1,2,8,8,-1,2,2,8,-1,0,7,8,-1,7,8,8,-1,8,7,8,-1,7,0,8,-1,4,0,4,-1,0,0,4,-1,9,6,4,-1,9,6,6,-1,0,0,5,-1,0,5,5,-1,6,6,4,-1,6,4,4,-1]),
                                                          coordIndex : new MFInt32([11,8,10,-1,8,9,10,-1,2,6,3,-1,6,4,3,-1,6,0,7,-1,6,2,0,-1,1,5,0,-1,5,7,0,-1,4,5,3,-1,5,1,3,-1,4,8,5,-1,8,11,5,-1,5,10,7,-1,5,11,10,-1,10,9,7,-1,9,6,7,-1,9,8,6,-1,8,4,6,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.0257371,0.534759,0.0692898,0.0414367,0.860963,0.111557,0.00308845,0.0641711,0.00831478,0.0244502,0.508021,0.0658253,0.0427236,0.887701,0.115021,0.0481284,1,0.129572,0.0213618,0.44385,0.0575105,0.0198176,0.411765,0.0533532,0.0102948,0.213904,0.0277159,0.0277961,0.57754,0.074833])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([-1,1,1,-1,-1,1,1,1,1,1,-1,1,0.5,-0.5,1,-0.5,-0.5,1,0.5,0.5,1,-0.5,0.5,1,0.5,-0.5,0.169957,0.5,0.5,0.169957,-0.5,0.5,0.169957,-0.5,-0.5,0.169957])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([-0.24,-0.16,-0.438]),
                                                  rotation : new SFRotation([1,0,0,1.57079]),
                                                  scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      geometry : new SFNode(
                                                        new IndexedLineSet({
                                                          colorPerVertex : new SFBool(false),
                                                          coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.0244502,0.508021,0.0658253])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                                new Transform({
                                                  translation : new SFVec3f([-0.144988,-0.160017,-0.438]),
                                                  rotation : new SFRotation([1,0,0,1.57079]),
                                                  scale : new SFVec3f([0.219219,0.0285424,0.0261696]),
                                                  children : new MFNode([
                                                    new Shape({
                                                      geometry : new SFNode(
                                                        new IndexedLineSet({
                                                          colorPerVertex : new SFBool(false),
                                                          coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                          color : new SFNode(
                                                            new Color({
                                                              color : new MFColor([0.012,0.25,0.04])})),
                                                          coord : new SFNode(
                                                            new Coordinate({
                                                              point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("C1"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_92")}),

                                    new Switch({
                                      DEF : new SFString("_93"),
                                      whichChoice : new SFInt32(1),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.2,-0.16,-0.448]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_94"),
                                                      url : new MFString(["cb1.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([-0.2,-0.16,-0.438]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([-0.2,-0.16,-0.448]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_94")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("C2"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_95")}),

                                    new Switch({
                                      DEF : new SFString("_96"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.17,-0.16,-0.448]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_97"),
                                                      url : new MFString(["cb2.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([-0.17,-0.16,-0.438]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([-0.17,-0.16,-0.448]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_97")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("C3"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_98")}),

                                    new Switch({
                                      DEF : new SFString("_99"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.14,-0.16,-0.448]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_100"),
                                                      url : new MFString(["cb3.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([-0.14,-0.16,-0.438]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([-0.14,-0.16,-0.448]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_100")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("C4"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_101")}),

                                    new Switch({
                                      DEF : new SFString("_102"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.11,-0.16,-0.448]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_103"),
                                                      url : new MFString(["cb4.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([-0.11,-0.16,-0.438]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([-0.11,-0.16,-0.448]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_103")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("C5"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_104")}),

                                    new Switch({
                                      DEF : new SFString("_105"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.08,-0.16,-0.448]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_106"),
                                                      url : new MFString(["cb5.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([-0.08,-0.16,-0.438]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([-0.08,-0.16,-0.448]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_106")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("C6"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_107")}),

                                    new Switch({
                                      DEF : new SFString("_108"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.05,-0.16,-0.448]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_109"),
                                                      url : new MFString(["cb6.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.604278,0.604278,0.604278])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([-0.05,-0.16,-0.438]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([-0.05,-0.16,-0.448]),
                                              scale : new SFVec3f([1.11111,1,1]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_109")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      creaseAngle : new SFFloat(0.5),
                                                      texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                      coordIndex : new MFInt32([0,1,3,2,-1]),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                                new Transform({
                                  DEF : new SFString("Walk"),
                                  children : new MFNode([
                                    new TouchSensor({
                                      DEF : new SFString("_110")}),

                                    new Switch({
                                      DEF : new SFString("_111"),
                                      whichChoice : new SFInt32(0),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.122513,0.160004,-0.437837]),
                                          scale : new SFVec3f([0.0198813,0.0198812,0.0198807]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      DEF : new SFString("_112"),
                                                      url : new MFString(["walk.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  solid : new SFBool(false),
                                                  colorPerVertex : new SFBool(false),
                                                  texCoordIndex : new MFInt32([1,2,3,0,-1]),
                                                  coordIndex : new MFInt32([1,2,3,0,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.114902,0.438503,0.138527])})),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0.0766457,1.00134,0.0766457,0.00134463,0.138838,0.00134463,0.138838,1.00134])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-6.47072,0.5,0,-6.47072,-0.5,0,-5.34817,-0.5,0,-5.34817,0.5,0])}))}))})])}),

                                        new Transform({
                                          children : new MFNode([
                                            new Transform({
                                              translation : new SFVec3f([-0.122513,0.160004,-0.437837]),
                                              scale : new SFVec3f([0.0198813,0.0198812,0.0198807]),
                                              children : new MFNode([
                                                new Shape({
                                                  appearance : new SFNode(
                                                    new Appearance({
                                                      texture : new SFNode(
                                                        new ImageTexture({
                                                          USE : new SFString("_112")}))})),
                                                  geometry : new SFNode(
                                                    new IndexedFaceSet({
                                                      solid : new SFBool(false),
                                                      colorPerVertex : new SFBool(false),
                                                      texCoordIndex : new MFInt32([1,2,3,0,-1]),
                                                      coordIndex : new MFInt32([1,2,3,0,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.212989,0.812834,0.256781])})),
                                                      texCoord : new SFNode(
                                                        new TextureCoordinate({
                                                          point : new MFVec2f([0.0766457,1.00134,0.0766457,0.00134463,0.138838,0.00134463,0.138838,1.00134])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([-6.47072,0.5,0,-6.47072,-0.5,0,-5.34817,-0.5,0,-5.34817,0.5,0])}))}))})])}),

                                            new Transform({
                                              translation : new SFVec3f([-0.24,0.160004,-0.437837]),
                                              rotation : new SFRotation([1,0,0,1.57079]),
                                              scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                              children : new MFNode([
                                                new Shape({
                                                  geometry : new SFNode(
                                                    new IndexedLineSet({
                                                      colorPerVertex : new SFBool(false),
                                                      coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                      color : new SFNode(
                                                        new Color({
                                                          color : new MFColor([0.212989,0.812834,0.256781])})),
                                                      coord : new SFNode(
                                                        new Coordinate({
                                                          point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])})])})])})])})])}),

                            new Transform({
                              DEF : new SFString("DayNight"),
                              children : new MFNode([
                                new Script({
                                  DEF : new SFString("_day-night"),
                                  field : new MFNode([
                                    new field({
                                      type : field.TYPE_SFINT32,
                                      name : new SFString("whichChoice_changed"),
                                      accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFTIME,
                                      name : new SFString("touchTime"),
                                      accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),

                                    new field({
                                      type : field.TYPE_SFBOOL,
                                      name : new SFString("day"),
                                      accessType : new SFString(field.ACCESSTYPE_INITIALIZEONLY)}),
                                  ]),vrmlscript:
, function initialize()
{
	whichChoice_changed = day;
}

, function touchTime(value, time)
{
	day = !day;
	whichChoice_changed = day;
})}),

                                new TouchSensor({
                                  DEF : new SFString("_113")}),

                                new Switch({
                                  DEF : new SFString("_114"),
                                  whichChoice : new SFInt32(0),
                                  children : new MFNode([
                                    new Transform({
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.21,0.160004,-0.437837]),
                                          rotation : new SFRotation([1,0,0,1.57079]),
                                          scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                          children : new MFNode([
                                            new Shape({
                                              geometry : new SFNode(
                                                new IndexedLineSet({
                                                  colorPerVertex : new SFBool(false),
                                                  coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([1,0.933333,0.623529])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([-0.21,0.160004,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      url : new MFString(["b-sonne.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])}),

                                    new Transform({
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([-0.21,0.160004,-0.437837]),
                                          rotation : new SFRotation([1,0,0,1.57079]),
                                          scale : new SFVec3f([0.0258312,0.0285424,0.0232504]),
                                          children : new MFNode([
                                            new Shape({
                                              geometry : new SFNode(
                                                new IndexedLineSet({
                                                  colorPerVertex : new SFBool(false),
                                                  coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0,0,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([-0.21,0.160004,-0.447837]),
                                          scale : new SFVec3f([1.11111,1,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({
                                                  texture : new SFNode(
                                                    new ImageTexture({
                                                      url : new MFString(["b-mond.png"])}))})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  creaseAngle : new SFFloat(0.5),
                                                  texCoordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  texCoord : new SFNode(
                                                    new TextureCoordinate({
                                                      point : new MFVec2f([0,1,0,0,1,1,1,0])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])})])}),

                            new Transform({
                              DEF : new SFString("ColorSpeed"),
                              children : new MFNode([
                                new Transform({
                                  children : new MFNode([
                                    new PlaneSensor({
                                      DEF : new SFString("_115"),
                                      maxPosition : new SFVec2f([0,0.101041])}),

                                    new Script({
                                      DEF : new SFString("_colorSpeed"),
                                      field : new MFNode([
                                        new field({
                                          type : field.TYPE_SFFLOAT,
                                          name : new SFString("fraction_changed"),
                                          accessType : new SFString(field.ACCESSTYPE_OUTPUTONLY)}),

                                        new field({
                                          type : field.TYPE_SFVEC3F,
                                          name : new SFString("set_translation"),
                                          accessType : new SFString(field.ACCESSTYPE_INPUTONLY)}),
                                      ]),vrmlscript:
, function set_translation(value, time)
{
	fraction_changed = (0.1 / (value.y + 0.005)) - 0.8; 
})}),

                                    new Transform({
                                      DEF : new SFString("Speed"),
                                      children : new MFNode([
                                        new Transform({
                                          translation : new SFVec3f([0.235,0.0601006,-0.439436]),
                                          rotation : new SFRotation([0,0,-1,1.57079]),
                                          scale : new SFVec3f([0.00471919,0.0110694,0.00228149]),
                                          children : new MFNode([
                                            new Shape({
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  colorIndex : new MFInt32([3,8,1,-1,4,7,2,-1,9,6,2,-1,9,5,6,-1,7,6,2,-1,7,2,6,-1,5,4,2,-1,5,9,4,-1,3,0,3,-1,3,0,0,-1,0,3,3,-1,0,0,3,-1,0,3,3,-1,0,0,3,-1]),
                                                  coordIndex : new MFInt32([6,7,9,-1,0,1,8,-1,2,4,3,-1,2,5,4,-1,1,4,8,-1,1,3,4,-1,5,0,8,-1,5,2,0,-1,4,9,8,-1,4,6,9,-1,7,4,5,-1,7,6,4,-1,9,5,8,-1,9,7,5,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.00657726,0.0961967,0.245989,0.0187309,0.273952,0.700535,0.00428952,0.062737,0.160428,0.026738,0.391061,1,0.00500445,0.0731932,0.187166,0.00672026,0.098288,0.251337,0.00457549,0.0669195,0.171123,0.00200178,0.0292773,0.0748663,0.00943694,0.138021,0.352941,0.0128686,0.188211,0.481283])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-1,1,1,-1,-1,1,1,1,1,1,-1,1,0.5,-0.5,1,0.5,0.5,1,0.5,-0.5,0.40171,0.5,0.5,0.40171,-0.5,0,1,-0.5,0,0.40171])}))}))})])}),

                                        new Transform({
                                          translation : new SFVec3f([0.235,0.0601006,-0.437155]),
                                          rotation : new SFRotation([1,0,0,1.57079]),
                                          scale : new SFVec3f([0.0258299,0.0285423,0.0110999]),
                                          children : new MFNode([
                                            new Shape({
                                              geometry : new SFNode(
                                                new IndexedLineSet({
                                                  colorPerVertex : new SFBool(false),
                                                  coordIndex : new MFInt32([0,1,2,3,0,-1]),
                                                  color : new SFNode(
                                                    new Color({
                                                      color : new MFColor([0.0187309,0.273952,0.700535])})),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([0.5,0,0.5,0.5,0,-0.5,-0.5,0,-0.5,-0.5,0,0.5])}))}))})])}),

                                        new Transform({
                                          DEF : new SFString("proxy"),
                                          translation : new SFVec3f([0.235,0.0598463,-0.44618]),
                                          scale : new SFVec3f([1.36202,0.683323,1]),
                                          children : new MFNode([
                                            new Shape({
                                              appearance : new SFNode(
                                                new Appearance({})),
                                              geometry : new SFNode(
                                                new IndexedFaceSet({
                                                  ccw : new SFBool(false),
                                                  creaseAngle : new SFFloat(0.5),
                                                  coordIndex : new MFInt32([0,1,3,2,-1]),
                                                  coord : new SFNode(
                                                    new Coordinate({
                                                      point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])}),

                                new Transform({
                                  DEF : new SFString("meter"),
                                  translation : new SFVec3f([0.235,0.110281,-0.447837]),
                                  scale : new SFVec3f([0.53975,5.89572,1]),
                                  children : new MFNode([
                                    new Shape({
                                      appearance : new SFNode(
                                        new Appearance({})),
                                      geometry : new SFNode(
                                        new IndexedFaceSet({
                                          creaseAngle : new SFFloat(0.5),
                                          colorIndex : new MFInt32([1,0,0,1,-1]),
                                          coordIndex : new MFInt32([0,1,3,2,-1]),
                                          color : new SFNode(
                                            new Color({
                                              color : new MFColor([0.00800715,0.117109,0.299465,0.411765,0.745203,1])})),
                                          coord : new SFNode(
                                            new Coordinate({
                                              point : new MFVec3f([-0.01,0.01,0.01,-0.01,-0.01,0.01,0.01,0.01,0.01,0.01,-0.01,0.01])}))}))})])})])})])}))})])}),

                new Transform({
                  children : new MFNode([
                    new Transform({
                      translation : new SFVec3f([7.79354,10.0248,6.83628]),
                      scale : new SFVec3f([38.5193,2.44394,6.58793]),
                      children : new MFNode([
                        new Shape({
                          geometry : new SFNode(
                            new IndexedFaceSet({
                              creaseAngle : new SFFloat(0.5),
                              colorIndex : new MFInt32([0,2,2,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,2,2,0,-1,1,0,0,1,-1]),
                              coordIndex : new MFInt32([0,1,3,2,-1,4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,2,4,-1,1,7,5,3,-1]),
                              color : new SFNode(
                                new Color({
                                  color : new MFColor([0.8,0.8,0.8,0.454545,0.454545,0.454545,0.663102,0.663102,0.663102])})),
                              coord : new SFNode(
                                new Coordinate({
                                  point : new MFVec3f([-0.136753,0.136753,0.136753,-0.136753,-0.136753,0.136753,0.136753,0.136753,0.136753,0.136753,-0.136753,0.136753,0.136753,0.136753,-0.136753,0.136753,-0.136753,-0.136753,-0.136753,0.136753,-0.136753,-0.136753,-0.136753,-0.136753])}))}))})])}),

                    new Transform({
                      translation : new SFVec3f([7.97035,4.75577,7.81475]),
                      scale : new SFVec3f([13.224,1,3.26697]),
                      children : new MFNode([
                        new Shape({
                          geometry : new SFNode(
                            new IndexedFaceSet({
                              creaseAngle : new SFFloat(0.5),
                              colorIndex : new MFInt32([0,1,1,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,-1,0,1,1,0,-1,2,0,0,2,-1]),
                              coordIndex : new MFInt32([0,1,3,2,-1,4,5,7,6,-1,6,7,1,0,-1,2,3,5,4,-1,6,0,2,4,-1,1,7,5,3,-1]),
                              color : new SFNode(
                                new Color({
                                  color : new MFColor([0.8,0.8,0.8,0.663102,0.663102,0.663102,0.454545,0.454545,0.454545])})),
                              coord : new SFNode(
                                new Coordinate({
                                  point : new MFVec3f([-0.415013,0.415017,0.415018,-0.415013,-0.415017,0.415018,0.415013,0.415017,0.415018,0.415013,-0.415017,0.415018,0.415013,0.415017,-0.415018,0.415013,-0.415017,-0.415018,-0.415013,0.415017,-0.415018,-0.415013,-0.415017,-0.415018])}))}))})])})])})])}),

            new Viewpoint({
              DEF : new SFString("EntryVP3"),
              position : new SFVec3f([-16.2377,3.08118,43.3011]),
              orientation : new SFRotation([0.242523,-0.967542,0.0710288,0.587893])}),

            new ROUTE({
              fromNode : new SFString("_1"),
              fromField : new SFString("enterTime"),
              toNode : new SFString("enterWorldScript"),
              toField : new SFString("triggerIn")}),

            new ROUTE({
              fromNode : new SFString("enterWorldScript"),
              fromField : new SFString("bind_changed"),
              toNode : new SFString("Entry"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_anim1"),
              fromField : new SFString("bind2"),
              toNode : new SFString("_AnimNavInfo1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_anim2"),
              fromField : new SFString("bind2"),
              toNode : new SFString("_AnimNavInfo1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_anim3"),
              fromField : new SFString("bind2"),
              toNode : new SFString("_AnimNavInfo1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_anim4"),
              fromField : new SFString("bind2"),
              toNode : new SFString("_AnimNavInfo1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_anim5"),
              fromField : new SFString("bind2"),
              toNode : new SFString("_AnimNavInfo1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_anim6"),
              fromField : new SFString("bind2"),
              toNode : new SFString("_AnimNavInfo1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("Entry"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_AnimNavInfo1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("Cam1"),
              fromField : new SFString("isBound"),
              toNode : new SFString("CamTime1"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Cam1"),
              fromField : new SFString("bindTime"),
              toNode : new SFString("CamTime1"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("CamTime1"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam1PositionInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime1"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam1OrientationInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_anim1"),
              fromField : new SFString("bind2"),
              toNode : new SFString("Cam1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("Cam1PositionInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam1"),
              toField : new SFString("set_position")}),

            new ROUTE({
              fromNode : new SFString("Cam1OrientationInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam1"),
              toField : new SFString("set_orientation")}),

            new ROUTE({
              fromNode : new SFString("Cam2"),
              fromField : new SFString("isBound"),
              toNode : new SFString("CamTime2"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Cam2"),
              fromField : new SFString("bindTime"),
              toNode : new SFString("CamTime2"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("CamTime2"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam2PositionInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime2"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam2OrientationInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_anim2"),
              fromField : new SFString("bind2"),
              toNode : new SFString("Cam2"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("Cam2PositionInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam2"),
              toField : new SFString("set_position")}),

            new ROUTE({
              fromNode : new SFString("Cam2OrientationInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam2"),
              toField : new SFString("set_orientation")}),

            new ROUTE({
              fromNode : new SFString("Cam3"),
              fromField : new SFString("isBound"),
              toNode : new SFString("CamTime3"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Cam3"),
              fromField : new SFString("bindTime"),
              toNode : new SFString("CamTime3"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("CamTime3"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam3PositionInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime3"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam3OrientationInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_anim3"),
              fromField : new SFString("bind2"),
              toNode : new SFString("Cam3"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("Cam3PositionInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam3"),
              toField : new SFString("set_position")}),

            new ROUTE({
              fromNode : new SFString("Cam3OrientationInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam3"),
              toField : new SFString("set_orientation")}),

            new ROUTE({
              fromNode : new SFString("Cam4"),
              fromField : new SFString("isBound"),
              toNode : new SFString("CamTime4"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Cam4"),
              fromField : new SFString("bindTime"),
              toNode : new SFString("CamTime4"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("CamTime4"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam4PositionInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime4"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam4OrientationInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_anim4"),
              fromField : new SFString("bind2"),
              toNode : new SFString("Cam4"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("Cam4PositionInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam4"),
              toField : new SFString("set_position")}),

            new ROUTE({
              fromNode : new SFString("Cam4OrientationInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam4"),
              toField : new SFString("set_orientation")}),

            new ROUTE({
              fromNode : new SFString("Cam5"),
              fromField : new SFString("isBound"),
              toNode : new SFString("CamTime5"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Cam5"),
              fromField : new SFString("bindTime"),
              toNode : new SFString("CamTime5"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("CamTime5"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam5PositionInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime5"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam5OrientationInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_anim5"),
              fromField : new SFString("bind2"),
              toNode : new SFString("Cam5"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("Cam5PositionInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam5"),
              toField : new SFString("set_position")}),

            new ROUTE({
              fromNode : new SFString("Cam5OrientationInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam5"),
              toField : new SFString("set_orientation")}),

            new ROUTE({
              fromNode : new SFString("Cam6"),
              fromField : new SFString("isBound"),
              toNode : new SFString("CamTime6"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Cam6"),
              fromField : new SFString("bindTime"),
              toNode : new SFString("CamTime6"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("CamTime6"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam6PositionInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime6"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Cam6OrientationInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_anim6"),
              fromField : new SFString("bind2"),
              toNode : new SFString("Cam6"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("Cam6PositionInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam6"),
              toField : new SFString("set_position")}),

            new ROUTE({
              fromNode : new SFString("Cam6OrientationInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Cam6"),
              toField : new SFString("set_orientation")}),

            new ROUTE({
              fromNode : new SFString("_walk"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_WalkNavInfo1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_110"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_walk"),
              toField : new SFString("startTime")}),

            new ROUTE({
              fromNode : new SFString("_WalkNavInfo1"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_walk"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_walk"),
              fromField : new SFString("isBound"),
              toNode : new SFString("VP1"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("_3"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_light"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_light"),
              fromField : new SFString("on"),
              toNode : new SFString("Light2"),
              toField : new SFString("set_on")}),

            new ROUTE({
              fromNode : new SFString("_day-night"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_3"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_7"),
              fromField : new SFString("time"),
              toNode : new SFString("_tex"),
              toField : new SFString("time")}),

            new ROUTE({
              fromNode : new SFString("_colorSpeed"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("_tex"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_tex"),
              fromField : new SFString("texture_changed"),
              toNode : new SFString("_9"),
              toField : new SFString("set_texture")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_11"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_day-night"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_20"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_22"),
              fromField : new SFString("enterTime"),
              toNode : new SFString("Time_1"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("_22"),
              fromField : new SFString("exitTime"),
              toNode : new SFString("Time_1"),
              toField : new SFString("set_stopTime")}),

            new ROUTE({
              fromNode : new SFString("Time_1"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("linksScaleFactorInterp_1"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_1"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("linksTranslationInterp_1"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_1"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("rechtsTranslationInterp_1"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_1"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("rechtsScaleFactorInterp_1"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_22"),
              fromField : new SFString("exitTime"),
              toNode : new SFString("Time_2"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("_22"),
              fromField : new SFString("enterTime"),
              toNode : new SFString("Time_2"),
              toField : new SFString("set_stopTime")}),

            new ROUTE({
              fromNode : new SFString("Time_2"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("linksTranslationInterp_2"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_2"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("linksScaleFactorInterp_2"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_2"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("rechtsTranslationInterp_2"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_2"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("rechtsScaleFactorInterp_2"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("linksTranslationInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("links_2"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("linksTranslationInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("links_2"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("linksScaleFactorInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("links_2"),
              toField : new SFString("set_scale")}),

            new ROUTE({
              fromNode : new SFString("linksScaleFactorInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("links_2"),
              toField : new SFString("set_scale")}),

            new ROUTE({
              fromNode : new SFString("rechtsTranslationInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("rechts_2"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("rechtsTranslationInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("rechts_2"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("rechtsScaleFactorInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("rechts_2"),
              toField : new SFString("set_scale")}),

            new ROUTE({
              fromNode : new SFString("rechtsScaleFactorInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("rechts_2"),
              toField : new SFString("set_scale")}),

            new ROUTE({
              fromNode : new SFString("poloblick-blau"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_NoNameScript1"),
              toField : new SFString("isBound")}),

            new ROUTE({
              fromNode : new SFString("_NoNameScript1"),
              fromField : new SFString("enabled"),
              toNode : new SFString("Time_3"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Time_3"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("UnnamedTransformTranslationInterp_1"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_3"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("UnnamedTransformRotationInterp_1"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("poloblick-blau"),
              fromField : new SFString("isBound"),
              toNode : new SFString("Time_4"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("poloblick-blau"),
              fromField : new SFString("bindTime"),
              toNode : new SFString("Time_4"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_4"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Polo1TranslationInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_4"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("Polo1RotationInterp"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_46"),
              fromField : new SFString("isActive"),
              toNode : new SFString("Time_5"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Time_5"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("UnnamedShapeRotationInterp_1"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("UnnamedShapeRotationInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_37"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedShapeRotationInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_40"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedShapeRotationInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_41"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedShapeRotationInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_42"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("_start"),
              fromField : new SFString("isBound2"),
              toNode : new SFString("poloblick-blau"),
              toField : new SFString("set_bind")}),

            new ROUTE({
              fromNode : new SFString("UnnamedTransformTranslationInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Polo1"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("Polo1TranslationInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Polo1"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedTransformRotationInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Polo1"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("Polo1RotationInterp"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Polo1"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("Time_6"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("UnnamedTransformTranslationInterp_2"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("Time_6"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("UnnamedTransformRotationInterp_2"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("_53"),
              fromField : new SFString("isActive"),
              toNode : new SFString("Time_7"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Time_7"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("UnnamedShapeRotationInterp_2"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("UnnamedShapeRotationInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_47"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedShapeRotationInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_49"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedShapeRotationInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_50"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedShapeRotationInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_51"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedTransformTranslationInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Polo2"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("UnnamedTransformRotationInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("Polo2"),
              toField : new SFString("set_rotation")}),

            new ROUTE({
              fromNode : new SFString("_WalkNavInfo1"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_2"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("Time_8"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim1"),
              toField : new SFString("fadein")}),

            new ROUTE({
              fromNode : new SFString("Time_9"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim1"),
              toField : new SFString("fadeout")}),

            new ROUTE({
              fromNode : new SFString("CamTime1"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim1"),
              toField : new SFString("anim")}),

            new ROUTE({
              fromNode : new SFString("Cam1"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_anim1"),
              toField : new SFString("isBound")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("play"),
              toNode : new SFString("_anim1"),
              toField : new SFString("set_play")}),

            new ROUTE({
              fromNode : new SFString("_92"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("Time_8"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("startTime"),
              toNode : new SFString("Time_8"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_8"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_1"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime1"),
              fromField : new SFString("startTime_changed"),
              toNode : new SFString("Time_9"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_9"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_2"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_1"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_55"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_2"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_55"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("_anim1"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_54"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("Time_10"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim2"),
              toField : new SFString("fadein")}),

            new ROUTE({
              fromNode : new SFString("Time_11"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim2"),
              toField : new SFString("fadeout")}),

            new ROUTE({
              fromNode : new SFString("CamTime2"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim2"),
              toField : new SFString("anim")}),

            new ROUTE({
              fromNode : new SFString("Cam2"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_anim2"),
              toField : new SFString("isBound")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("play"),
              toNode : new SFString("_anim2"),
              toField : new SFString("set_play")}),

            new ROUTE({
              fromNode : new SFString("_95"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("Time_10"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("_anim1"),
              fromField : new SFString("startTime"),
              toNode : new SFString("Time_10"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_10"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_3"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime2"),
              fromField : new SFString("startTime_changed"),
              toNode : new SFString("Time_11"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_11"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_4"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_3"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_57"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_4"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_57"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("_anim2"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_56"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("Time_12"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim3"),
              toField : new SFString("fadein")}),

            new ROUTE({
              fromNode : new SFString("Time_13"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim3"),
              toField : new SFString("fadeout")}),

            new ROUTE({
              fromNode : new SFString("CamTime3"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim3"),
              toField : new SFString("anim")}),

            new ROUTE({
              fromNode : new SFString("Cam3"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_anim3"),
              toField : new SFString("isBound")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("play"),
              toNode : new SFString("_anim3"),
              toField : new SFString("set_play")}),

            new ROUTE({
              fromNode : new SFString("_98"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("Time_12"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("_anim2"),
              fromField : new SFString("startTime"),
              toNode : new SFString("Time_12"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_12"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_5"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime3"),
              fromField : new SFString("startTime_changed"),
              toNode : new SFString("Time_13"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_13"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_6"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_5"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_59"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_6"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_59"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("_anim3"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_58"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("Time_14"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim4"),
              toField : new SFString("fadein")}),

            new ROUTE({
              fromNode : new SFString("Time_15"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim4"),
              toField : new SFString("fadeout")}),

            new ROUTE({
              fromNode : new SFString("CamTime4"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim4"),
              toField : new SFString("anim")}),

            new ROUTE({
              fromNode : new SFString("Cam4"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_anim4"),
              toField : new SFString("isBound")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("play"),
              toNode : new SFString("_anim4"),
              toField : new SFString("set_play")}),

            new ROUTE({
              fromNode : new SFString("_101"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("Time_14"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("_anim3"),
              fromField : new SFString("startTime"),
              toNode : new SFString("Time_14"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_14"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_7"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime4"),
              fromField : new SFString("startTime_changed"),
              toNode : new SFString("Time_15"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_15"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_8"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_7"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_61"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_8"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_61"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("_anim4"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_60"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("Time_16"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim5"),
              toField : new SFString("fadein")}),

            new ROUTE({
              fromNode : new SFString("Time_17"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim5"),
              toField : new SFString("fadeout")}),

            new ROUTE({
              fromNode : new SFString("CamTime5"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim5"),
              toField : new SFString("anim")}),

            new ROUTE({
              fromNode : new SFString("Cam5"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_anim5"),
              toField : new SFString("isBound")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("play"),
              toNode : new SFString("_anim5"),
              toField : new SFString("set_play")}),

            new ROUTE({
              fromNode : new SFString("_104"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("Time_16"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("_anim4"),
              fromField : new SFString("startTime"),
              toNode : new SFString("Time_16"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_16"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_9"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime5"),
              fromField : new SFString("startTime_changed"),
              toNode : new SFString("Time_17"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_17"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_10"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_9"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_63"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_10"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_63"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("_anim5"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_62"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("Time_18"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim6"),
              toField : new SFString("fadein")}),

            new ROUTE({
              fromNode : new SFString("Time_19"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim6"),
              toField : new SFString("fadeout")}),

            new ROUTE({
              fromNode : new SFString("CamTime6"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_anim6"),
              toField : new SFString("anim")}),

            new ROUTE({
              fromNode : new SFString("Cam6"),
              fromField : new SFString("isBound"),
              toNode : new SFString("_anim6"),
              toField : new SFString("isBound")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("play"),
              toNode : new SFString("_anim6"),
              toField : new SFString("set_play")}),

            new ROUTE({
              fromNode : new SFString("_107"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("Time_18"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("_anim5"),
              fromField : new SFString("startTime"),
              toNode : new SFString("Time_18"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_18"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_11"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("CamTime6"),
              fromField : new SFString("startTime_changed"),
              toNode : new SFString("Time_19"),
              toField : new SFString("set_startTime")}),

            new ROUTE({
              fromNode : new SFString("Time_19"),
              fromField : new SFString("fraction_changed"),
              toNode : new SFString("ImageTransparencyInterp_12"),
              toField : new SFString("set_fraction")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_11"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_65"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("ImageTransparencyInterp_12"),
              fromField : new SFString("value_changed"),
              toNode : new SFString("_65"),
              toField : new SFString("set_transparency")}),

            new ROUTE({
              fromNode : new SFString("_anim6"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_64"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_66"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipFoto"),
              toField : new SFString("time1")}),

            new ROUTE({
              fromNode : new SFString("_69"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipFoto"),
              toField : new SFString("time2")}),

            new ROUTE({
              fromNode : new SFString("_72"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipFoto"),
              toField : new SFString("time3")}),

            new ROUTE({
              fromNode : new SFString("_75"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipFoto"),
              toField : new SFString("time4")}),

            new ROUTE({
              fromNode : new SFString("_78"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipFoto"),
              toField : new SFString("time5")}),

            new ROUTE({
              fromNode : new SFString("_81"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipFoto"),
              toField : new SFString("time6")}),

            new ROUTE({
              fromNode : new SFString("_84"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipFoto"),
              toField : new SFString("time7")}),

            new ROUTE({
              fromNode : new SFString("_87"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipFoto"),
              toField : new SFString("time8")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice1_changed"),
              toNode : new SFString("_67"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice2_changed"),
              toNode : new SFString("_70"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice3_changed"),
              toNode : new SFString("_73"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice4_changed"),
              toNode : new SFString("_76"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice5_changed"),
              toNode : new SFString("_79"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice6_changed"),
              toNode : new SFString("_82"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice7_changed"),
              toNode : new SFString("_85"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_flipFoto"),
              fromField : new SFString("whichChoice8_changed"),
              toNode : new SFString("_88"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_92"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time1")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("startTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time1")}),

            new ROUTE({
              fromNode : new SFString("_95"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time2")}),

            new ROUTE({
              fromNode : new SFString("_anim1"),
              fromField : new SFString("startTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time2")}),

            new ROUTE({
              fromNode : new SFString("_98"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time3")}),

            new ROUTE({
              fromNode : new SFString("_anim2"),
              fromField : new SFString("startTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time3")}),

            new ROUTE({
              fromNode : new SFString("_101"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time4")}),

            new ROUTE({
              fromNode : new SFString("_anim3"),
              fromField : new SFString("startTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time4")}),

            new ROUTE({
              fromNode : new SFString("_104"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time5")}),

            new ROUTE({
              fromNode : new SFString("_anim4"),
              fromField : new SFString("startTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time5")}),

            new ROUTE({
              fromNode : new SFString("_107"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time6")}),

            new ROUTE({
              fromNode : new SFString("_anim5"),
              fromField : new SFString("startTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time6")}),

            new ROUTE({
              fromNode : new SFString("_110"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_flipCam"),
              toField : new SFString("time7")}),

            new ROUTE({
              fromNode : new SFString("_90"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("start1")}),

            new ROUTE({
              fromNode : new SFString("_107"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("stopTime")}),

            new ROUTE({
              fromNode : new SFString("_104"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("stopTime")}),

            new ROUTE({
              fromNode : new SFString("_101"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("stopTime")}),

            new ROUTE({
              fromNode : new SFString("_98"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("stopTime")}),

            new ROUTE({
              fromNode : new SFString("_95"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("stopTime")}),

            new ROUTE({
              fromNode : new SFString("_92"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("stopTime")}),

            new ROUTE({
              fromNode : new SFString("_110"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("stopTime")}),

            new ROUTE({
              fromNode : new SFString("CamTime1"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("set_anim")}),

            new ROUTE({
              fromNode : new SFString("CamTime6"),
              fromField : new SFString("isActive"),
              toNode : new SFString("_toggleplay"),
              toField : new SFString("loop")}),

            new ROUTE({
              fromNode : new SFString("_toggleplay"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_91"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_anim1"),
              fromField : new SFString("enabled"),
              toNode : new SFString("_92"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("_flipCam"),
              fromField : new SFString("whichChoice1_changed"),
              toNode : new SFString("_93"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_anim2"),
              fromField : new SFString("enabled"),
              toNode : new SFString("_95"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("_flipCam"),
              fromField : new SFString("whichChoice2_changed"),
              toNode : new SFString("_96"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_anim3"),
              fromField : new SFString("enabled"),
              toNode : new SFString("_98"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("_flipCam"),
              fromField : new SFString("whichChoice3_changed"),
              toNode : new SFString("_99"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_anim4"),
              fromField : new SFString("enabled"),
              toNode : new SFString("_101"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("_flipCam"),
              fromField : new SFString("whichChoice4_changed"),
              toNode : new SFString("_102"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_anim5"),
              fromField : new SFString("enabled"),
              toNode : new SFString("_104"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("_flipCam"),
              fromField : new SFString("whichChoice5_changed"),
              toNode : new SFString("_105"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_anim6"),
              fromField : new SFString("enabled"),
              toNode : new SFString("_107"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("_flipCam"),
              fromField : new SFString("whichChoice6_changed"),
              toNode : new SFString("_108"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_walk"),
              fromField : new SFString("enabled"),
              toNode : new SFString("_110"),
              toField : new SFString("set_enabled")}),

            new ROUTE({
              fromNode : new SFString("_flipCam"),
              fromField : new SFString("whichChoice7_changed"),
              toNode : new SFString("_111"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_113"),
              fromField : new SFString("touchTime"),
              toNode : new SFString("_day-night"),
              toField : new SFString("touchTime")}),

            new ROUTE({
              fromNode : new SFString("_day-night"),
              fromField : new SFString("whichChoice_changed"),
              toNode : new SFString("_114"),
              toField : new SFString("set_whichChoice")}),

            new ROUTE({
              fromNode : new SFString("_115"),
              fromField : new SFString("translation_changed"),
              toNode : new SFString("_colorSpeed"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("_115"),
              fromField : new SFString("translation_changed"),
              toNode : new SFString("Speed"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("_1"),
              fromField : new SFString("position_changed"),
              toNode : new SFString("HUD"),
              toField : new SFString("set_translation")}),

            new ROUTE({
              fromNode : new SFString("_1"),
              fromField : new SFString("orientation_changed"),
              toNode : new SFString("HUD"),
              toField : new SFString("set_rotation")})])}))});
console.log(X3D0.toXMLNode());
