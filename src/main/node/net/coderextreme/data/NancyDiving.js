var java = require('java');
java.asyncOptions = {
  asyncSuffix: undefined,     // Don't generate node-style methods taking callbacks
  syncSuffix: "",              // Sync methods use the base name(!!)
  promiseSuffix: "Promise",   // Generate methods returning promises, using the suffix Promise.
  promisify: require('util').promisify, // Needs Node.js version 8 or greater, see comment below
  ifReadOnlySuffix: "_alt"
};
var autoclass = require('../../../X3Dautoclass');
var ConfigurationProperties = autoclass.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
      var X3D0 =  (new autoclass.X3D()).setProfile("Immersive").setVersion("3.3")
      .setHead((new autoclass.head())
        .addComponent((new autoclass.component()).setName("H-Anim").setLevel(1))
        .addMeta((new autoclass.meta()).setName("title").setContent("NancyDiving.x3d"))
        .addMeta((new autoclass.meta()).setName("description").setContent("Nancy having fun scuba diving!"))
        .addMeta((new autoclass.meta()).setName("creator").setContent("Etsuko Lippi"))
        .addMeta((new autoclass.meta()).setName("translators").setContent("Tom Miller and Don Brutzman, NPS"))
        .addMeta((new autoclass.meta()).setName("created").setContent("17 December 2001"))
        .addMeta((new autoclass.meta()).setName("modified").setContent("4 July 2020"))
        .addMeta((new autoclass.meta()).setName("hint").setContent("Default orientation along X axis (vice HAnim required Y axis) since diving posture is typically prone."))
        .addMeta((new autoclass.meta()).setName("warning").setContent("problem with left arm animation"))
        .addMeta((new autoclass.meta()).setName("warning").setContent("Viewpoint nodes need to be made child nodes under HAnimHumanoid with containerField='viewpoints'."))
        .addMeta((new autoclass.meta()).setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Legacy/NancyDiving.x3d"))
        .addMeta((new autoclass.meta()).setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta((new autoclass.meta()).setName("license").setContent("../license.html")))
      .setScene((new autoclass.Scene())
        .addChild((new autoclass.Background()).setGroundColor(java.newArray("float", [java.newFloat(0), java.newFloat(0.4), java.newFloat(1)])).setSkyColor(java.newArray("float", [java.newFloat(0), java.newFloat(0.4), java.newFloat(1)])))
        .addChild((new autoclass.Viewpoint()).setDEF("DefaultViewpoint").setDescription("Nancy diving, view from right side").setPosition(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(3)])))
        .addChild((new autoclass.Group()).setDEF("HighResolution")
          .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(1.57)]))
            .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(-1.57)]))
              .addChild((new autoclass.Group()).setDEF("Viewpoints")
                .addChild((new autoclass.Viewpoint()).setDescription("Nancy diving, view from below").setPosition(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(4)])))
                .addChild((new autoclass.Viewpoint()).setDescription("Nancy diving, view from ahead").setOrientation(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(-1.57)])).setPosition(java.newArray("float", [java.newFloat(0), java.newFloat(3), java.newFloat(0)])))
                .addChild((new autoclass.Viewpoint()).setDescription("Nancy diving, view from left side").setOrientation(java.newArray("float", [java.newFloat(-0.58), java.newFloat(0.58), java.newFloat(-0.58), java.newFloat(2.09)])).setPosition(java.newArray("float", [java.newFloat(3), java.newFloat(0), java.newFloat(0)])))
                .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(1.57)])).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-3), java.newFloat(-0.8)]))
                  .addChild((new autoclass.Viewpoint()).setDescription("Nancy diving view from behind").setOrientation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(3.14)])).setPosition(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))))
                .addChild((new autoclass.Viewpoint()).setDescription("Nancy diving view from above").setOrientation(java.newArray("float", [java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(3.14)])).setPosition(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(-4)])))
                .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(1.57)])).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(0.45), java.newFloat(-0.04)]))
                  .addChild((new autoclass.Viewpoint()).setDescription("Nancy diving, view through her goggles").setOrientation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(3.14)])).setPosition(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])))))
              .addChild((new autoclass.Transform()).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-1), java.newFloat(0)]))
                .addChild((new autoclass.HAnimHumanoid()).setName("Nancy").setDEF("hanim_Nancy").setVersion("1.0")
                  .addSkeleton((new autoclass.HAnimJoint()).setName("humanoid_root").setDEF("hanim_humanoid_root").setCenter(java.newArray("float", [java.newFloat(-0.00405), java.newFloat(0.855), java.newFloat(-0.000113)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                    .addChild((new autoclass.HAnimJoint()).setName("sacroiliac").setDEF("hanim_sacroiliac").setCenter(java.newArray("float", [java.newFloat(0), java.newFloat(1.01), java.newFloat(-0.0204)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                      .addChild((new autoclass.HAnimSegment()).setName("pelvis").setDEF("hanim_pelvis")
                        .addChild((new autoclass.Shape())
                          .setAppearance((new autoclass.Appearance())
                            .setMaterial((new autoclass.Material()).setDEF("Pants_Color").setDiffuseColor(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0.502)]))))
                          .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [0,1,40,-1,1,2,40,-1,2,3,40,-1,3,4,40,-1,4,5,40,-1,5,4,9,-1,4,3,8,-1,3,2,8,-1,2,1,6,-1,0,7,1,-1,7,6,1,-1,6,8,2,-1,9,4,10,-1,4,8,10,-1,8,6,12,-1,7,0,47,-1,50,5,9,-1,7,47,55,-1,55,13,7,-1,50,9,56,-1,9,10,14,-1,10,11,15,-1,11,12,16,-1,12,13,19,-1,13,55,17,-1,60,17,55,-1,17,19,13,-1,19,16,12,-1,16,15,11,-1,15,18,10,-1,14,56,9,-1,56,14,64,-1,17,60,20,-1,20,19,17,-1,21,64,14,-1,14,22,21,-1,15,16,24,-1,16,19,24,-1,19,20,26,-1,24,23,15,-1,64,21,69,-1,21,22,29,-1,19,26,25,-1,20,63,27,-1,27,26,20,-1,25,24,19,-1,30,29,22,-1,29,28,21,-1,28,69,21,-1,27,34,26,-1,69,28,79,-1,29,30,32,-1,30,23,33,-1,23,24,37,-1,25,26,34,-1,83,27,77,-1,37,33,23,-1,33,32,30,-1,31,79,28,-1,79,31,84,-1,32,33,36,-1,24,25,37,-1,34,27,83,-1,83,38,34,-1,34,37,25,-1,37,36,33,-1,36,35,32,-1,84,31,89,-1,31,35,89,-1,35,36,39,-1,36,37,39,-1,38,83,89,-1,89,39,38,-1,39,89,35,-1,40,41,0,-1,40,42,41,-1,40,43,42,-1,40,44,43,-1,40,45,44,-1,49,44,45,-1,48,43,44,-1,48,42,43,-1,46,41,42,-1,41,47,0,-1,41,46,47,-1,42,48,46,-1,51,44,49,-1,51,48,44,-1,48,52,53,-1,49,45,50,-1,56,49,50,-1,57,51,49,-1,58,53,52,-1,59,54,53,-1,62,55,54,-1,55,62,60,-1,54,59,62,-1,53,58,59,-1,51,61,58,-1,49,56,57,-1,64,57,56,-1,67,59,58,-1,68,62,59,-1,60,63,20,-1,60,62,63,-1,59,67,68,-1,58,61,67,-1,57,64,65,-1,65,66,57,-1,71,63,62,-1,69,65,64,-1,74,66,65,-1,78,68,67,-1,70,71,62,-1,63,72,27,-1,63,71,72,-1,68,78,76,-1,67,75,78,-1,66,74,75,-1,65,73,74,-1,65,69,73,-1,77,27,72,-1,71,82,72,-1,79,73,69,-1,81,75,74,-1,82,71,70,-1,77,72,83,-1,73,79,80,-1,84,80,79,-1,86,75,81,-1,83,72,82,-1,82,88,83,-1,70,87,82,-1,81,85,86,-1,89,80,84,-1,89,85,80,-1,90,86,85,-1,90,87,86,-1,89,83,88,-1,88,90,89,-1,85,89,90,-1,50,45,5,-1,45,40,5,-1,10,8,11,-1,8,12,11,-1,18,22,10,-1,22,14,10,-1,57,66,51,-1,66,61,51,-1,51,58,48,-1,58,52,48,-1,48,53,46,-1,53,54,46,-1,76,70,68,-1,70,62,68,-1,29,32,28,-1,28,32,31,-1,32,35,31,-1,85,81,80,-1,81,73,80,-1,81,74,73,-1,39,37,38,-1,37,34,38,-1,82,87,88,-1,87,90,88,-1,87,78,86,-1,78,75,86,-1,61,66,67,-1,66,75,67,-1,22,18,15,-1,23,30,15,-1,30,22,15,-1,13,12,7,-1,12,6,7,-1,46,54,47,-1,54,55,47,-1,87,76,78,-1,87,70,76,-1])).setCreaseAngle(java.newFloat(1.14))
                            .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(0), java.newFloat(1.06), java.newFloat(0.0218), java.newFloat(0.0561), java.newFloat(1.07), java.newFloat(0.00726), java.newFloat(0.0851), java.newFloat(1.07), java.newFloat(-0.0115), java.newFloat(0.104), java.newFloat(1.07), java.newFloat(-0.0497), java.newFloat(0.0851), java.newFloat(1.07), java.newFloat(-0.0851), java.newFloat(0.032), java.newFloat(1.06), java.newFloat(-0.0985), java.newFloat(0.0873), java.newFloat(1.04), java.newFloat(0.0078), java.newFloat(0.033), java.newFloat(1.04), java.newFloat(0.0395), java.newFloat(0.123), java.newFloat(1.05), java.newFloat(-0.0405), java.newFloat(0.0609), java.newFloat(1.02), java.newFloat(-0.106), java.newFloat(0.0894), java.newFloat(0.996), java.newFloat(-0.106), java.newFloat(0.143), java.newFloat(1), java.newFloat(-0.0309), java.newFloat(0.117), java.newFloat(1), java.newFloat(0.0164), java.newFloat(0.0314), java.newFloat(0.999), java.newFloat(0.0502), java.newFloat(0.0314), java.newFloat(0.96), java.newFloat(-0.13), java.newFloat(0.156), java.newFloat(0.966), java.newFloat(-0.0405), java.newFloat(0.156), java.newFloat(0.968), java.newFloat(-0.00724), java.newFloat(0.0341), java.newFloat(0.954), java.newFloat(0.0513), java.newFloat(0.115), java.newFloat(0.96), java.newFloat(-0.0916), java.newFloat(0.121), java.newFloat(0.926), java.newFloat(0.0352), java.newFloat(0.0357), java.newFloat(0.92), java.newFloat(0.0497), java.newFloat(0.0314), java.newFloat(0.91), java.newFloat(-0.146), java.newFloat(0.0991), java.newFloat(0.91), java.newFloat(-0.131), java.newFloat(0.169), java.newFloat(0.883), java.newFloat(-0.0448), java.newFloat(0.169), java.newFloat(0.885), java.newFloat(-0.00939), java.newFloat(0.123), java.newFloat(0.873), java.newFloat(0.0384), java.newFloat(0.0926), java.newFloat(0.872), java.newFloat(0.047), java.newFloat(0.0325), java.newFloat(0.873), java.newFloat(0.0287), java.newFloat(0.0293), java.newFloat(0.866), java.newFloat(-0.142), java.newFloat(0.102), java.newFloat(0.869), java.newFloat(-0.131), java.newFloat(0.129), java.newFloat(0.868), java.newFloat(-0.103), java.newFloat(0.0314), java.newFloat(0.84), java.newFloat(-0.125), java.newFloat(0.101), java.newFloat(0.844), java.newFloat(-0.122), java.newFloat(0.133), java.newFloat(0.846), java.newFloat(-0.0878), java.newFloat(0.0653), java.newFloat(0.835), java.newFloat(0.0132), java.newFloat(0.0615), java.newFloat(0.824), java.newFloat(-0.111), java.newFloat(0.0985), java.newFloat(0.823), java.newFloat(-0.101), java.newFloat(0.132), java.newFloat(0.826), java.newFloat(-0.0448), java.newFloat(0.0609), java.newFloat(0.821), java.newFloat(-0.0158), java.newFloat(0.0599), java.newFloat(0.812), java.newFloat(-0.0545), java.newFloat(0), java.newFloat(1.08), java.newFloat(-0.0266), java.newFloat(-0.0561), java.newFloat(1.07), java.newFloat(0.00726), java.newFloat(-0.0851), java.newFloat(1.07), java.newFloat(-0.0115), java.newFloat(-0.104), java.newFloat(1.07), java.newFloat(-0.0497), java.newFloat(-0.0851), java.newFloat(1.07), java.newFloat(-0.0851), java.newFloat(-0.032), java.newFloat(1.06), java.newFloat(-0.0985), java.newFloat(-0.0873), java.newFloat(1.04), java.newFloat(0.0078), java.newFloat(-0.033), java.newFloat(1.04), java.newFloat(0.0395), java.newFloat(-0.123), java.newFloat(1.05), java.newFloat(-0.0405), java.newFloat(-0.0609), java.newFloat(1.02), java.newFloat(-0.106), java.newFloat(0), java.newFloat(1.02), java.newFloat(-0.108), java.newFloat(-0.0894), java.newFloat(0.996), java.newFloat(-0.106), java.newFloat(-0.143), java.newFloat(1), java.newFloat(-0.0309), java.newFloat(-0.144), java.newFloat(1), java.newFloat(-0.011), java.newFloat(-0.117), java.newFloat(1), java.newFloat(0.0164), java.newFloat(-0.0314), java.newFloat(0.999), java.newFloat(0.0502), java.newFloat(0), java.newFloat(0.961), java.newFloat(-0.123), java.newFloat(-0.0314), java.newFloat(0.96), java.newFloat(-0.13), java.newFloat(-0.156), java.newFloat(0.966), java.newFloat(-0.0405), java.newFloat(-0.156), java.newFloat(0.968), java.newFloat(-0.00724), java.newFloat(-0.0341), java.newFloat(0.954), java.newFloat(0.0513), java.newFloat(-0.115), java.newFloat(0.96), java.newFloat(-0.0916), java.newFloat(-0.121), java.newFloat(0.926), java.newFloat(0.0352), java.newFloat(-0.0357), java.newFloat(0.92), java.newFloat(0.0497), java.newFloat(0), java.newFloat(0.91), java.newFloat(-0.127), java.newFloat(-0.0314), java.newFloat(0.91), java.newFloat(-0.146), java.newFloat(-0.0991), java.newFloat(0.91), java.newFloat(-0.131), java.newFloat(-0.167), java.newFloat(0.911), java.newFloat(-0.0448), java.newFloat(-0.167), java.newFloat(0.912), java.newFloat(-0.00671), java.newFloat(0), java.newFloat(0.883), java.newFloat(-0.129), java.newFloat(-0.123), java.newFloat(0.873), java.newFloat(0.0384), java.newFloat(-0.0926), java.newFloat(0.872), java.newFloat(0.047), java.newFloat(-0.0325), java.newFloat(0.873), java.newFloat(0.0287), java.newFloat(-0.0293), java.newFloat(0.866), java.newFloat(-0.142), java.newFloat(-0.102), java.newFloat(0.869), java.newFloat(-0.131), java.newFloat(-0.129), java.newFloat(0.868), java.newFloat(-0.103), java.newFloat(-0.166), java.newFloat(0.863), java.newFloat(-0.0148), java.newFloat(0), java.newFloat(0.863), java.newFloat(-0.00456), java.newFloat(-0.166), java.newFloat(0.862), java.newFloat(-0.0459), java.newFloat(0), java.newFloat(0.858), java.newFloat(-0.1), java.newFloat(-0.0314), java.newFloat(0.84), java.newFloat(-0.125), java.newFloat(-0.101), java.newFloat(0.844), java.newFloat(-0.122), java.newFloat(-0.0653), java.newFloat(0.835), java.newFloat(0.0132), java.newFloat(0), java.newFloat(0.839), java.newFloat(-0.0217), java.newFloat(0), java.newFloat(0.835), java.newFloat(-0.0867), java.newFloat(-0.0615), java.newFloat(0.824), java.newFloat(-0.111), java.newFloat(-0.0985), java.newFloat(0.823), java.newFloat(-0.101), java.newFloat(-0.132), java.newFloat(0.826), java.newFloat(-0.0448), java.newFloat(-0.0609), java.newFloat(0.821), java.newFloat(-0.0158), java.newFloat(0), java.newFloat(0.831), java.newFloat(-0.0626), java.newFloat(-0.0599), java.newFloat(0.812), java.newFloat(-0.0545)]))))))
                      .addChild((new autoclass.HAnimJoint()).setName("l_hip").setDEF("hanim_l_hip").setCenter(java.newArray("float", [java.newFloat(0.122), java.newFloat(0.888271), java.newFloat(-0.0693267)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                        .addChild((new autoclass.HAnimSegment()).setName("l_thigh").setDEF("hanim_l_thigh")
                          .addChild((new autoclass.Shape())
                            .setAppearance((new autoclass.Appearance())
                              .setMaterial((new autoclass.Material()).setUSE("Pants_Color")))
                            .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [0,4,5,-1,3,4,0,-1,0,7,1,-1,0,8,7,-1,0,6,8,-1,0,5,6,-1,0,2,3,-1,0,1,2,-1,9,2,1,-1,10,3,2,-1,11,4,3,-1,12,5,4,-1,13,6,5,-1,15,7,8,-1,9,1,7,-1,7,15,9,-1,8,14,15,-1,5,16,13,-1,5,12,16,-1,4,11,12,-1,3,10,11,-1,2,9,10,-1,20,13,16,-1,18,11,10,-1,19,12,11,-1,20,16,12,-1,23,15,14,-1,15,23,24,-1,12,19,20,-1,11,18,19,-1,10,17,18,-1,26,18,17,-1,27,19,18,-1,27,20,19,-1,28,21,20,-1,29,23,22,-1,23,29,30,-1,20,32,28,-1,20,27,32,-1,18,26,27,-1,17,25,26,-1,25,31,30,-1,30,29,26,-1,30,26,25,-1,29,28,27,-1,29,27,26,-1,28,32,27,-1,22,23,14,-1,20,21,13,-1,21,22,13,-1,22,14,13,-1,9,15,24,-1,10,9,17,-1,9,24,17,-1,6,13,8,-1,13,14,8,-1,28,29,21,-1,29,22,21,-1,24,31,17,-1,31,25,17,-1,30,31,23,-1,31,24,23,-1])).setCreaseAngle(java.newFloat(1.32))
                              .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(0.0969), java.newFloat(0.804), java.newFloat(-0.0486), java.newFloat(0.101), java.newFloat(0.876), java.newFloat(0.0336), java.newFloat(0.17), java.newFloat(0.894), java.newFloat(-0.00778), java.newFloat(0.17), java.newFloat(0.891), java.newFloat(-0.076), java.newFloat(0.124), java.newFloat(0.858), java.newFloat(-0.129), java.newFloat(0.076), java.newFloat(0.843), java.newFloat(-0.143), java.newFloat(0.025), java.newFloat(0.819), java.newFloat(-0.0889), java.newFloat(0.0507), java.newFloat(0.847), java.newFloat(0.0196), java.newFloat(0.00349), java.newFloat(0.826), java.newFloat(-0.0287), java.newFloat(0.0991), java.newFloat(0.808), java.newFloat(0.0406), java.newFloat(0.161), java.newFloat(0.814), java.newFloat(-0.00187), java.newFloat(0.165), java.newFloat(0.808), java.newFloat(-0.0755), java.newFloat(0.122), java.newFloat(0.788), java.newFloat(-0.126), java.newFloat(0.00993), java.newFloat(0.762), java.newFloat(-0.0937), java.newFloat(0.00993), java.newFloat(0.762), java.newFloat(-0.0309), java.newFloat(0.0491), java.newFloat(0.777), java.newFloat(0.0185), java.newFloat(0.0755), java.newFloat(0.766), java.newFloat(-0.139), java.newFloat(0.13), java.newFloat(0.597), java.newFloat(-0.00618), java.newFloat(0.132), java.newFloat(0.6), java.newFloat(-0.0593), java.newFloat(0.108), java.newFloat(0.603), java.newFloat(-0.105), java.newFloat(0.0722), java.newFloat(0.601), java.newFloat(-0.118), java.newFloat(0.0314), java.newFloat(0.59), java.newFloat(-0.0953), java.newFloat(0.0239), java.newFloat(0.566), java.newFloat(-0.0427), java.newFloat(0.047), java.newFloat(0.566), java.newFloat(0.0051), java.newFloat(0.0878), java.newFloat(0.581), java.newFloat(0.0217), java.newFloat(0.114), java.newFloat(0.499), java.newFloat(-0.0132), java.newFloat(0.116), java.newFloat(0.488), java.newFloat(-0.061), java.newFloat(0.103), java.newFloat(0.567), java.newFloat(-0.0991), java.newFloat(0.0362), java.newFloat(0.557), java.newFloat(-0.0926), java.newFloat(0.025), java.newFloat(0.486), java.newFloat(-0.047), java.newFloat(0.0507), java.newFloat(0.497), java.newFloat(-0.00188), java.newFloat(0.0862), java.newFloat(0.513), java.newFloat(0.018), java.newFloat(0.0733), java.newFloat(0.579), java.newFloat(-0.108)]))))))
                        .addChild((new autoclass.HAnimJoint()).setName("l_knee").setDEF("hanim_l_knee").setCenter(java.newArray("float", [java.newFloat(0.0738), java.newFloat(0.517), java.newFloat(-0.0284)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                          .addChild((new autoclass.HAnimSegment()).setName("l_calf").setDEF("hanim_l_calf")
                            .addChild((new autoclass.Shape())
                              .setAppearance((new autoclass.Appearance())
                                .setMaterial((new autoclass.Material()).setUSE("Pants_Color")))
                              .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [2,1,0,-1,2,3,1,-1,2,4,3,-1,2,5,4,-1,2,6,5,-1,2,7,6,-1,2,8,7,-1,2,0,8,-1,9,8,0,-1,10,6,7,-1,11,5,6,-1,12,4,5,-1,12,3,4,-1,13,1,3,-1,1,13,14,-1,3,12,13,-1,5,11,12,-1,6,10,11,-1,8,9,15,-1,22,13,12,-1,13,22,14,-1,17,15,9,-1,20,12,11,-1,21,22,12,-1,23,9,14,-1,9,23,16,-1,14,22,23,-1,12,20,21,-1,15,17,18,-1,9,16,17,-1,24,17,16,-1,25,18,17,-1,26,19,18,-1,27,20,19,-1,28,21,20,-1,29,22,21,-1,30,23,22,-1,31,16,23,-1,23,30,31,-1,22,29,30,-1,21,28,29,-1,20,27,28,-1,19,26,27,-1,18,25,26,-1,17,24,25,-1,16,31,24,-1,33,26,25,-1,36,29,28,-1,37,31,30,-1,29,36,30,-1,25,24,33,-1,31,37,24,-1,32,33,24,-1,24,37,32,-1,38,37,30,-1,30,36,38,-1,41,33,32,-1,42,39,34,-1,44,36,35,-1,45,38,36,-1,46,37,38,-1,38,45,46,-1,36,44,45,-1,35,43,44,-1,39,42,47,-1,32,40,41,-1,40,46,45,-1,41,40,45,-1,41,45,44,-1,44,43,42,-1,44,42,41,-1,43,47,42,-1,39,35,28,-1,35,36,28,-1,34,39,27,-1,39,28,27,-1,33,34,26,-1,34,27,26,-1,33,41,34,-1,41,42,34,-1,40,32,46,-1,32,37,46,-1,10,19,11,-1,19,20,11,-1,14,9,1,-1,9,0,1,-1,8,15,7,-1,7,15,10,-1,15,19,10,-1,15,18,19,-1,43,35,47,-1,35,39,47,-1])).setCreaseAngle(java.newFloat(1.57))
                                .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(0.0883), java.newFloat(0.532), java.newFloat(-0.00349), java.newFloat(0.0609), java.newFloat(0.533), java.newFloat(-0.00833), java.newFloat(0.0814), java.newFloat(0.55), java.newFloat(-0.0395), java.newFloat(0.0529), java.newFloat(0.536), java.newFloat(-0.0368), java.newFloat(0.0577), java.newFloat(0.544), java.newFloat(-0.0577), java.newFloat(0.0722), java.newFloat(0.546), java.newFloat(-0.0717), java.newFloat(0.0975), java.newFloat(0.54), java.newFloat(-0.0647), java.newFloat(0.105), java.newFloat(0.539), java.newFloat(-0.0438), java.newFloat(0.104), java.newFloat(0.539), java.newFloat(-0.0223), java.newFloat(0.0862), java.newFloat(0.506), java.newFloat(0.0158), java.newFloat(0.101), java.newFloat(0.51), java.newFloat(-0.0798), java.newFloat(0.0706), java.newFloat(0.51), java.newFloat(-0.101), java.newFloat(0.0406), java.newFloat(0.513), java.newFloat(-0.0744), java.newFloat(0.0368), java.newFloat(0.51), java.newFloat(-0.0357), java.newFloat(0.0556), java.newFloat(0.506), java.newFloat(-0.000272), java.newFloat(0.117), java.newFloat(0.508), java.newFloat(-0.0169), java.newFloat(0.0878), java.newFloat(0.361), java.newFloat(-0.0126), java.newFloat(0.123), java.newFloat(0.363), java.newFloat(-0.04), java.newFloat(0.123), java.newFloat(0.363), java.newFloat(-0.0663), java.newFloat(0.107), java.newFloat(0.367), java.newFloat(-0.107), java.newFloat(0.0588), java.newFloat(0.365), java.newFloat(-0.122), java.newFloat(0.0228), java.newFloat(0.358), java.newFloat(-0.0926), java.newFloat(0.0239), java.newFloat(0.358), java.newFloat(-0.0475), java.newFloat(0.0497), java.newFloat(0.358), java.newFloat(-0.0234), java.newFloat(0.118), java.newFloat(0.311), java.newFloat(-0.0411), java.newFloat(0.118), java.newFloat(0.309), java.newFloat(-0.0685), java.newFloat(0.105), java.newFloat(0.31), java.newFloat(-0.108), java.newFloat(0.0572), java.newFloat(0.308), java.newFloat(-0.123), java.newFloat(0.0201), java.newFloat(0.309), java.newFloat(-0.0937), java.newFloat(0.0191), java.newFloat(0.311), java.newFloat(-0.0508), java.newFloat(0.0475), java.newFloat(0.307), java.newFloat(-0.0282), java.newFloat(0.0883), java.newFloat(0.309), java.newFloat(-0.018), java.newFloat(0.0959), java.newFloat(0.124), java.newFloat(-0.04), java.newFloat(0.0905), java.newFloat(0.12), java.newFloat(-0.0647), java.newFloat(0.0738), java.newFloat(0.117), java.newFloat(-0.0814), java.newFloat(0.0373), java.newFloat(0.121), java.newFloat(-0.0636), java.newFloat(0.0416), java.newFloat(0.124), java.newFloat(-0.0416), java.newFloat(0.0744), java.newFloat(0.13), java.newFloat(-0.0212), java.newFloat(0.0561), java.newFloat(0.13), java.newFloat(-0.0245), java.newFloat(0.0529), java.newFloat(0.121), java.newFloat(-0.0873), java.newFloat(0.0948), java.newFloat(0.0897), java.newFloat(-0.0368), java.newFloat(0.0916), java.newFloat(0.0779), java.newFloat(-0.0604), java.newFloat(0.0717), java.newFloat(0.0854), java.newFloat(-0.0765), java.newFloat(0.0406), java.newFloat(0.0918), java.newFloat(-0.0626), java.newFloat(0.0384), java.newFloat(0.0881), java.newFloat(-0.0363), java.newFloat(0.054), java.newFloat(0.0972), java.newFloat(-0.0175), java.newFloat(0.0765), java.newFloat(0.11), java.newFloat(-0.0169), java.newFloat(0.0486), java.newFloat(0.0999), java.newFloat(-0.0835)]))))))
                          .addChild((new autoclass.HAnimJoint()).setName("l_ankle").setDEF("hanim_l_ankle").setCenter(java.newArray("float", [java.newFloat(0.0645), java.newFloat(0.0719), java.newFloat(-0.048)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                            .addChild((new autoclass.HAnimSegment()).setName("l_hindfoot").setDEF("hanim_l_hindfoot")
                              .addChild((new autoclass.Shape())
                                .setAppearance((new autoclass.Appearance())
                                  .setMaterial((new autoclass.Material()).setDEF("Shoe_Color").setAmbientIntensity(java.newFloat(0.25)).setDiffuseColor(java.newArray("float", [java.newFloat(0.753), java.newFloat(1), java.newFloat(0.243)]))))
                                .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [2,1,0,-1,4,3,1,-1,2,4,1,-1,3,6,5,-1,1,3,5,-1,6,8,7,-1,5,6,7,-1,8,10,9,-1,7,8,9,-1,10,12,11,-1,9,10,11,-1,12,14,13,-1,11,12,13,-1,14,16,15,-1,13,14,15,-1,16,18,17,-1,15,16,17,-1,18,20,19,-1,17,18,19,-1,20,22,21,-1,19,20,21,-1,22,24,23,-1,21,22,23,-1,24,25,0,-1,23,24,0,-1,25,4,2,-1,0,25,2,-1,18,26,20,-1,16,26,18,-1,27,26,16,-1,14,27,16,-1,12,27,14,-1,28,27,12,-1,29,28,12,-1,10,29,12,-1,8,29,10,-1,6,37,8,-1,24,30,25,-1,31,30,24,-1,22,31,24,-1,32,31,22,-1,20,32,22,-1,33,32,20,-1,26,33,20,-1,34,33,26,-1,27,34,26,-1,35,34,27,-1,28,35,27,-1,29,35,28,-1,36,35,29,-1,8,36,29,-1,37,36,8,-1,6,38,37,-1,3,38,6,-1,39,38,3,-1,30,39,25,-1,41,40,30,-1,31,41,30,-1,42,41,31,-1,32,42,31,-1,43,42,32,-1,33,43,32,-1,44,43,33,-1,34,44,33,-1,45,44,34,-1,35,45,34,-1,46,45,35,-1,36,46,35,-1,47,46,36,-1,37,47,36,-1,38,47,37,-1,48,47,38,-1,49,48,38,-1,39,49,38,-1,40,49,39,-1,30,40,39,-1,48,49,50,-1,47,48,50,-1,46,47,50,-1,45,46,50,-1,44,45,50,-1,43,44,50,-1,42,43,50,-1,41,42,50,-1,40,41,50,-1,49,40,50,-1,11,13,15,-1,11,15,17,-1,9,11,17,-1,9,17,19,-1,7,9,19,-1,7,19,21,-1,5,7,21,-1,5,21,23,-1,5,23,0,-1,1,5,0,-1,3,4,39,-1,4,25,39,-1])).setCreaseAngle(java.newFloat(1.57))
                                  .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(0.0529), java.newFloat(0), java.newFloat(-0.0923), java.newFloat(0.0863), java.newFloat(0), java.newFloat(-0.0862), java.newFloat(0.0727), java.newFloat(0), java.newFloat(-0.0994), java.newFloat(0.0863), java.newFloat(0.0219), java.newFloat(-0.0862), java.newFloat(0.0727), java.newFloat(0.0219), java.newFloat(-0.0994), java.newFloat(0.1), java.newFloat(0), java.newFloat(-0.0594), java.newFloat(0.1), java.newFloat(0.0219), java.newFloat(-0.0594), java.newFloat(0.113), java.newFloat(0), java.newFloat(0.0645), java.newFloat(0.113), java.newFloat(0.0219), java.newFloat(0.0645), java.newFloat(0.112), java.newFloat(0), java.newFloat(0.117), java.newFloat(0.112), java.newFloat(0.0156), java.newFloat(0.117), java.newFloat(0.0701), java.newFloat(0), java.newFloat(0.146), java.newFloat(0.0701), java.newFloat(0.0156), java.newFloat(0.146), java.newFloat(0.0468), java.newFloat(0), java.newFloat(0.153), java.newFloat(0.0468), java.newFloat(0.0156), java.newFloat(0.153), java.newFloat(0.0215), java.newFloat(0), java.newFloat(0.146), java.newFloat(0.0215), java.newFloat(0.0156), java.newFloat(0.146), java.newFloat(0.0165), java.newFloat(0), java.newFloat(0.125), java.newFloat(0.0165), java.newFloat(0.0156), java.newFloat(0.125), java.newFloat(0.0211), java.newFloat(0), java.newFloat(0.0377), java.newFloat(0.0211), java.newFloat(0.0219), java.newFloat(0.0377), java.newFloat(0.0393), java.newFloat(0), java.newFloat(-0.0129), java.newFloat(0.0393), java.newFloat(0.0219), java.newFloat(-0.0129), java.newFloat(0.0433), java.newFloat(0), java.newFloat(-0.0534), java.newFloat(0.0433), java.newFloat(0.0219), java.newFloat(-0.0534), java.newFloat(0.0529), java.newFloat(0.0219), java.newFloat(-0.0923), java.newFloat(0.0305), java.newFloat(0.0253), java.newFloat(0.0938), java.newFloat(0.0505), java.newFloat(0.0253), java.newFloat(0.099), java.newFloat(0.0854), java.newFloat(0.0253), java.newFloat(0.0834), java.newFloat(0.102), java.newFloat(0.0253), java.newFloat(0.0707), java.newFloat(0.0568), java.newFloat(0.0573), java.newFloat(-0.0918), java.newFloat(0.0492), java.newFloat(0.0573), java.newFloat(-0.0497), java.newFloat(0.0435), java.newFloat(0.0573), java.newFloat(-0.0225), java.newFloat(0.0442), java.newFloat(0.0573), java.newFloat(0.0235), java.newFloat(0.0623), java.newFloat(0.0573), java.newFloat(0.0366), java.newFloat(0.0911), java.newFloat(0.0573), java.newFloat(0.0159), java.newFloat(0.0962), java.newFloat(0.0573), java.newFloat(-0.0121), java.newFloat(0.0911), java.newFloat(0.0573), java.newFloat(-0.0482), java.newFloat(0.0758), java.newFloat(0.0573), java.newFloat(-0.0899), java.newFloat(0.0676), java.newFloat(0.0573), java.newFloat(-0.0962), java.newFloat(0.0578), java.newFloat(0.0953), java.newFloat(-0.0896), java.newFloat(0.0489), java.newFloat(0.0953), java.newFloat(-0.0757), java.newFloat(0.0447), java.newFloat(0.0953), java.newFloat(-0.0432), java.newFloat(0.0451), java.newFloat(0.0953), java.newFloat(-0.0128), java.newFloat(0.0624), java.newFloat(0.0953), java.newFloat(-0.00466), java.newFloat(0.0857), java.newFloat(0.0953), java.newFloat(-0.0134), java.newFloat(0.0953), java.newFloat(0.0953), java.newFloat(-0.038), java.newFloat(0.0843), java.newFloat(0.0953), java.newFloat(-0.0803), java.newFloat(0.0761), java.newFloat(0.0953), java.newFloat(-0.0889), java.newFloat(0.0682), java.newFloat(0.0953), java.newFloat(-0.0929), java.newFloat(0.0675), java.newFloat(0.13), java.newFloat(-0.0608)])))))
                              .addChild((new autoclass.Transform()).setScale(java.newArray("float", [java.newFloat(0.015), java.newFloat(0.015), java.newFloat(0.015)]))
                                .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(1.57)])).setTranslation(java.newArray("float", [java.newFloat(6), java.newFloat(-0.5), java.newFloat(-7.5)]))
                                  .addChild((new autoclass.Shape())
                                    .setAppearance((new autoclass.Appearance())
                                      .setMaterial((new autoclass.Material()).setDiffuseColor(java.newArray("float", [java.newFloat(0.753), java.newFloat(1), java.newFloat(0.243)]))))
                                    .setGeometry((new autoclass.Extrusion()).setDEF("FinExtrusionLeft").setCcw(false).setCreaseAngle(java.newFloat(3.14)).setCrossSection(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(-0.8), java.newFloat(2), java.newFloat(-0.7), java.newFloat(3), java.newFloat(0), java.newFloat(5.2), java.newFloat(0.7), java.newFloat(3), java.newFloat(0.8), java.newFloat(2), java.newFloat(1), java.newFloat(0), java.newFloat(0.8), java.newFloat(-2), java.newFloat(0.7), java.newFloat(-3), java.newFloat(0), java.newFloat(-5.2), java.newFloat(-0.7), java.newFloat(-3), java.newFloat(-0.8), java.newFloat(-2), java.newFloat(-1), java.newFloat(0)])).setScale(java.newArray("float", [java.newFloat(0.25), java.newFloat(0.25), java.newFloat(0.5), java.newFloat(0.75), java.newFloat(0.5), java.newFloat(1.2), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35)])).setSpine(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(5), java.newFloat(0), java.newFloat(0), java.newFloat(8), java.newFloat(0), java.newFloat(0), java.newFloat(12), java.newFloat(0), java.newFloat(0), java.newFloat(15), java.newFloat(0.5), java.newFloat(0), java.newFloat(18), java.newFloat(1.5), java.newFloat(0), java.newFloat(25), java.newFloat(2.5), java.newFloat(0), java.newFloat(30), java.newFloat(4), java.newFloat(0), java.newFloat(34)]))))))))))
                      .addChild((new autoclass.HAnimJoint()).setName("r_hip").setDEF("hanim_r_hip").setCenter(java.newArray("float", [java.newFloat(-0.11), java.newFloat(0.892362), java.newFloat(-0.0732533)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                        .addChild((new autoclass.HAnimSegment()).setName("r_thigh").setDEF("hanim_r_thigh")
                          .addChild((new autoclass.Shape())
                            .setAppearance((new autoclass.Appearance())
                              .setMaterial((new autoclass.Material()).setUSE("Pants_Color")))
                            .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [5,4,0,-1,0,4,3,-1,1,7,0,-1,7,8,0,-1,8,6,0,-1,6,5,0,-1,3,2,0,-1,2,1,0,-1,1,2,9,-1,2,3,10,-1,3,4,11,-1,4,5,12,-1,5,6,13,-1,8,7,15,-1,7,1,9,-1,9,15,7,-1,15,14,8,-1,13,16,5,-1,16,12,5,-1,12,11,4,-1,11,10,3,-1,10,9,2,-1,12,16,20,-1,13,14,22,-1,14,15,23,-1,24,23,15,-1,23,22,14,-1,20,19,12,-1,17,18,26,-1,18,19,27,-1,19,20,27,-1,20,21,28,-1,22,23,29,-1,30,29,23,-1,27,26,18,-1,26,25,17,-1,30,31,25,-1,25,26,29,-1,25,29,30,-1,26,27,28,-1,26,28,29,-1,27,20,28,-1,24,15,9,-1,22,21,13,-1,29,28,22,-1,28,21,22,-1,24,31,23,-1,31,30,23,-1,25,31,17,-1,31,24,17,-1,17,24,10,-1,24,9,10,-1,18,10,11,-1,18,17,10,-1,18,12,19,-1,18,11,12,-1,21,20,13,-1,20,16,13,-1,14,13,8,-1,13,6,8,-1])).setCreaseAngle(java.newFloat(1.61))
                              .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(-0.0969), java.newFloat(0.804), java.newFloat(-0.0486), java.newFloat(-0.101), java.newFloat(0.876), java.newFloat(0.0336), java.newFloat(-0.17), java.newFloat(0.894), java.newFloat(-0.00778), java.newFloat(-0.17), java.newFloat(0.891), java.newFloat(-0.076), java.newFloat(-0.124), java.newFloat(0.858), java.newFloat(-0.129), java.newFloat(-0.076), java.newFloat(0.843), java.newFloat(-0.143), java.newFloat(-0.025), java.newFloat(0.819), java.newFloat(-0.0889), java.newFloat(-0.0507), java.newFloat(0.847), java.newFloat(0.0196), java.newFloat(-0.00349), java.newFloat(0.826), java.newFloat(-0.0287), java.newFloat(-0.0991), java.newFloat(0.808), java.newFloat(0.0406), java.newFloat(-0.161), java.newFloat(0.814), java.newFloat(-0.00187), java.newFloat(-0.165), java.newFloat(0.808), java.newFloat(-0.0755), java.newFloat(-0.122), java.newFloat(0.788), java.newFloat(-0.126), java.newFloat(-0.00993), java.newFloat(0.762), java.newFloat(-0.0937), java.newFloat(-0.00993), java.newFloat(0.762), java.newFloat(-0.0309), java.newFloat(-0.0491), java.newFloat(0.777), java.newFloat(0.0185), java.newFloat(-0.0755), java.newFloat(0.766), java.newFloat(-0.139), java.newFloat(-0.13), java.newFloat(0.597), java.newFloat(-0.00618), java.newFloat(-0.132), java.newFloat(0.6), java.newFloat(-0.0593), java.newFloat(-0.108), java.newFloat(0.603), java.newFloat(-0.105), java.newFloat(-0.0722), java.newFloat(0.601), java.newFloat(-0.118), java.newFloat(-0.0314), java.newFloat(0.59), java.newFloat(-0.0953), java.newFloat(-0.0239), java.newFloat(0.566), java.newFloat(-0.0427), java.newFloat(-0.047), java.newFloat(0.566), java.newFloat(0.0051), java.newFloat(-0.0878), java.newFloat(0.581), java.newFloat(0.0217), java.newFloat(-0.114), java.newFloat(0.499), java.newFloat(-0.0132), java.newFloat(-0.116), java.newFloat(0.488), java.newFloat(-0.061), java.newFloat(-0.103), java.newFloat(0.567), java.newFloat(-0.0991), java.newFloat(-0.0362), java.newFloat(0.557), java.newFloat(-0.0926), java.newFloat(-0.025), java.newFloat(0.486), java.newFloat(-0.047), java.newFloat(-0.0507), java.newFloat(0.497), java.newFloat(-0.00188), java.newFloat(-0.0862), java.newFloat(0.513), java.newFloat(0.018)]))))))
                        .addChild((new autoclass.HAnimJoint()).setName("r_knee").setDEF("hanim_r_knee").setCenter(java.newArray("float", [java.newFloat(-0.0699), java.newFloat(0.51), java.newFloat(-0.0166)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                          .addChild((new autoclass.HAnimSegment()).setName("r_calf").setDEF("hanim_r_calf")
                            .addChild((new autoclass.Shape())
                              .setAppearance((new autoclass.Appearance())
                                .setMaterial((new autoclass.Material()).setUSE("Pants_Color")))
                              .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [14,25,18,-1,25,32,18,-1,32,27,18,-1,27,22,18,-1,22,10,18,-1,10,6,18,-1,6,8,18,-1,8,14,18,-1,14,8,17,-1,6,10,9,-1,10,22,24,-1,22,27,39,-1,27,32,39,-1,32,25,42,-1,25,14,30,-1,17,30,14,-1,30,42,25,-1,42,39,32,-1,39,24,22,-1,24,9,10,-1,4,17,8,-1,39,42,43,-1,30,43,42,-1,17,4,1,-1,24,39,26,-1,39,43,44,-1,30,17,34,-1,16,34,17,-1,34,43,30,-1,44,26,39,-1,0,1,4,-1,1,16,17,-1,16,1,3,-1,1,0,2,-1,0,5,7,-1,5,26,28,-1,26,44,45,-1,44,43,46,-1,43,34,36,-1,34,16,15,-1,15,36,34,-1,36,46,43,-1,46,45,44,-1,45,28,26,-1,28,7,5,-1,7,2,0,-1,2,3,1,-1,3,15,16,-1,45,46,37,-1,36,15,20,-1,36,37,46,-1,13,2,7,-1,3,20,15,-1,3,2,13,-1,36,20,29,-1,29,37,36,-1,13,21,23,-1,21,33,23,-1,41,37,40,-1,37,29,31,-1,29,20,19,-1,19,31,29,-1,31,40,37,-1,40,38,41,-1,35,23,33,-1,23,12,13,-1,12,11,13,-1,31,19,11,-1,40,31,11,-1,40,11,12,-1,12,23,38,-1,12,38,40,-1,23,35,38,-1,28,21,7,-1,21,13,7,-1,45,33,28,-1,33,21,28,-1,33,45,41,-1,45,37,41,-1,33,41,35,-1,41,38,35,-1,20,3,47,-1,11,19,47,-1,19,20,47,-1,13,47,3,-1,13,11,47,-1,4,8,6,-1,26,5,24,-1,5,9,24,-1,6,9,4,-1,9,0,4,-1,9,5,0,-1])).setCreaseAngle(java.newFloat(1.57))
                                .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(-0.123), java.newFloat(0.363), java.newFloat(-0.0663), java.newFloat(-0.123), java.newFloat(0.363), java.newFloat(-0.04), java.newFloat(-0.118), java.newFloat(0.309), java.newFloat(-0.0685), java.newFloat(-0.118), java.newFloat(0.311), java.newFloat(-0.0411), java.newFloat(-0.117), java.newFloat(0.508), java.newFloat(-0.0169), java.newFloat(-0.107), java.newFloat(0.367), java.newFloat(-0.107), java.newFloat(-0.105), java.newFloat(0.539), java.newFloat(-0.0438), java.newFloat(-0.105), java.newFloat(0.31), java.newFloat(-0.108), java.newFloat(-0.104), java.newFloat(0.539), java.newFloat(-0.0223), java.newFloat(-0.101), java.newFloat(0.51), java.newFloat(-0.0798), java.newFloat(-0.0975), java.newFloat(0.54), java.newFloat(-0.0647), java.newFloat(-0.0948), java.newFloat(0.0897), java.newFloat(-0.0368), java.newFloat(-0.0916), java.newFloat(0.0779), java.newFloat(-0.0604), java.newFloat(-0.0905), java.newFloat(0.12), java.newFloat(-0.0647), java.newFloat(-0.0883), java.newFloat(0.532), java.newFloat(-0.00349), java.newFloat(-0.0883), java.newFloat(0.309), java.newFloat(-0.018), java.newFloat(-0.0878), java.newFloat(0.361), java.newFloat(-0.0126), java.newFloat(-0.0862), java.newFloat(0.506), java.newFloat(0.0158), java.newFloat(-0.0814), java.newFloat(0.55), java.newFloat(-0.0395), java.newFloat(-0.0765), java.newFloat(0.11), java.newFloat(-0.0169), java.newFloat(-0.0744), java.newFloat(0.13), java.newFloat(-0.0212), java.newFloat(-0.0738), java.newFloat(0.117), java.newFloat(-0.0814), java.newFloat(-0.0722), java.newFloat(0.546), java.newFloat(-0.0717), java.newFloat(-0.0717), java.newFloat(0.0854), java.newFloat(-0.0765), java.newFloat(-0.0706), java.newFloat(0.51), java.newFloat(-0.101), java.newFloat(-0.0609), java.newFloat(0.533), java.newFloat(-0.00833), java.newFloat(-0.0588), java.newFloat(0.365), java.newFloat(-0.122), java.newFloat(-0.0577), java.newFloat(0.544), java.newFloat(-0.0577), java.newFloat(-0.0572), java.newFloat(0.308), java.newFloat(-0.123), java.newFloat(-0.0561), java.newFloat(0.13), java.newFloat(-0.0245), java.newFloat(-0.0556), java.newFloat(0.506), java.newFloat(-0.000272), java.newFloat(-0.054), java.newFloat(0.0972), java.newFloat(-0.0175), java.newFloat(-0.0529), java.newFloat(0.536), java.newFloat(-0.0368), java.newFloat(-0.0529), java.newFloat(0.121), java.newFloat(-0.0873), java.newFloat(-0.0497), java.newFloat(0.358), java.newFloat(-0.0234), java.newFloat(-0.0486), java.newFloat(0.0999), java.newFloat(-0.0835), java.newFloat(-0.0475), java.newFloat(0.307), java.newFloat(-0.0282), java.newFloat(-0.0416), java.newFloat(0.124), java.newFloat(-0.0416), java.newFloat(-0.0406), java.newFloat(0.0918), java.newFloat(-0.0626), java.newFloat(-0.0406), java.newFloat(0.513), java.newFloat(-0.0744), java.newFloat(-0.0384), java.newFloat(0.0881), java.newFloat(-0.0363), java.newFloat(-0.0373), java.newFloat(0.121), java.newFloat(-0.0636), java.newFloat(-0.0368), java.newFloat(0.51), java.newFloat(-0.0357), java.newFloat(-0.0239), java.newFloat(0.358), java.newFloat(-0.0475), java.newFloat(-0.0228), java.newFloat(0.358), java.newFloat(-0.0926), java.newFloat(-0.0201), java.newFloat(0.309), java.newFloat(-0.0937), java.newFloat(-0.0191), java.newFloat(0.311), java.newFloat(-0.0508), java.newFloat(-0.0985), java.newFloat(0.125), java.newFloat(-0.0375)]))))))
                          .addChild((new autoclass.HAnimJoint()).setName("r_ankle").setDEF("hanim_r_ankle").setCenter(java.newArray("float", [java.newFloat(-0.064), java.newFloat(0.0753), java.newFloat(-0.0412)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                            .addChild((new autoclass.HAnimSegment()).setName("r_hindfoot").setDEF("hanim_r_hindfoot")
                              .addChild((new autoclass.Shape())
                                .setAppearance((new autoclass.Appearance())
                                  .setMaterial((new autoclass.Material()).setUSE("Shoe_Color")))
                                .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [6,50,0,-1,50,8,7,-1,50,7,0,-1,1,9,8,-1,1,8,50,-1,49,10,9,-1,49,9,1,-1,46,11,10,-1,46,10,49,-1,2,12,11,-1,2,11,46,-1,3,13,12,-1,3,12,2,-1,4,14,13,-1,4,13,3,-1,45,14,4,-1,47,15,45,-1,19,15,47,-1,48,18,19,-1,5,16,18,-1,5,18,48,-1,6,17,16,-1,6,16,5,-1,0,7,17,-1,0,17,6,-1,14,20,21,-1,14,21,13,-1,13,21,12,-1,12,21,22,-1,12,22,11,-1,11,22,10,-1,17,23,16,-1,16,23,24,-1,16,24,18,-1,18,24,25,-1,18,25,19,-1,19,25,26,-1,19,26,15,-1,15,26,20,-1,20,26,27,-1,20,27,21,-1,21,27,28,-1,21,28,22,-1,22,28,29,-1,10,30,9,-1,9,30,31,-1,9,31,8,-1,8,31,32,-1,17,32,23,-1,23,33,34,-1,23,34,35,-1,23,35,24,-1,24,35,36,-1,24,36,25,-1,25,36,37,-1,25,37,26,-1,26,37,38,-1,26,38,27,-1,27,38,39,-1,27,39,28,-1,28,39,40,-1,28,40,29,-1,29,40,41,-1,29,41,30,-1,30,41,42,-1,30,42,31,-1,31,42,43,-1,31,43,32,-1,32,43,33,-1,32,33,23,-1,44,43,42,-1,44,42,41,-1,44,41,40,-1,44,40,39,-1,44,39,38,-1,44,38,37,-1,44,37,36,-1,44,36,35,-1,44,35,34,-1,44,34,33,-1,44,33,43,-1,4,3,2,-1,45,4,2,-1,45,2,46,-1,47,45,46,-1,48,46,49,-1,5,48,49,-1,5,49,1,-1,6,5,1,-1,6,1,50,-1,30,10,29,-1,10,22,29,-1,17,7,32,-1,7,8,32,-1,19,47,48,-1,47,46,48,-1,20,14,15,-1,14,45,15,-1])).setCreaseAngle(java.newFloat(1.57))
                                  .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(-0.0727), java.newFloat(0), java.newFloat(-0.0994), java.newFloat(-0.1), java.newFloat(0), java.newFloat(-0.0594), java.newFloat(-0.0701), java.newFloat(0), java.newFloat(0.146), java.newFloat(-0.0468), java.newFloat(0), java.newFloat(0.153), java.newFloat(-0.0215), java.newFloat(0), java.newFloat(0.146), java.newFloat(-0.0433), java.newFloat(0), java.newFloat(-0.0534), java.newFloat(-0.0529), java.newFloat(0), java.newFloat(-0.0923), java.newFloat(-0.0727), java.newFloat(0.0219), java.newFloat(-0.0994), java.newFloat(-0.0863), java.newFloat(0.0219), java.newFloat(-0.0862), java.newFloat(-0.1), java.newFloat(0.0219), java.newFloat(-0.0594), java.newFloat(-0.108), java.newFloat(0.0219), java.newFloat(-0.00479), java.newFloat(-0.112), java.newFloat(0.0156), java.newFloat(0.117), java.newFloat(-0.0701), java.newFloat(0.0156), java.newFloat(0.146), java.newFloat(-0.0468), java.newFloat(0.0156), java.newFloat(0.153), java.newFloat(-0.0215), java.newFloat(0.0156), java.newFloat(0.146), java.newFloat(-0.0165), java.newFloat(0.017), java.newFloat(0.0777), java.newFloat(-0.0433), java.newFloat(0.0219), java.newFloat(-0.0534), java.newFloat(-0.0529), java.newFloat(0.0219), java.newFloat(-0.0923), java.newFloat(-0.0445), java.newFloat(0.0273), java.newFloat(-0.0189), java.newFloat(-0.0265), java.newFloat(0.0253), java.newFloat(0.0549), java.newFloat(-0.0305), java.newFloat(0.0253), java.newFloat(0.0938), java.newFloat(-0.069), java.newFloat(0.0253), java.newFloat(0.0938), java.newFloat(-0.102), java.newFloat(0.0253), java.newFloat(0.0707), java.newFloat(-0.0568), java.newFloat(0.0573), java.newFloat(-0.0918), java.newFloat(-0.0492), java.newFloat(0.0573), java.newFloat(-0.0497), java.newFloat(-0.0424), java.newFloat(0.0573), java.newFloat(-0.00142), java.newFloat(-0.0478), java.newFloat(0.0573), java.newFloat(0.0341), java.newFloat(-0.0623), java.newFloat(0.0573), java.newFloat(0.0366), java.newFloat(-0.0864), java.newFloat(0.0573), java.newFloat(0.0245), java.newFloat(-0.0962), java.newFloat(0.0573), java.newFloat(-0.0121), java.newFloat(-0.0845), java.newFloat(0.0573), java.newFloat(-0.0764), java.newFloat(-0.0758), java.newFloat(0.0573), java.newFloat(-0.0899), java.newFloat(-0.0676), java.newFloat(0.0573), java.newFloat(-0.0962), java.newFloat(-0.0578), java.newFloat(0.0953), java.newFloat(-0.0896), java.newFloat(-0.0489), java.newFloat(0.0953), java.newFloat(-0.0757), java.newFloat(-0.0459), java.newFloat(0.0953), java.newFloat(-0.0615), java.newFloat(-0.0435), java.newFloat(0.0953), java.newFloat(-0.0292), java.newFloat(-0.0485), java.newFloat(0.0953), java.newFloat(-0.00582), java.newFloat(-0.0624), java.newFloat(0.0953), java.newFloat(-0.00466), java.newFloat(-0.0857), java.newFloat(0.0953), java.newFloat(-0.0134), java.newFloat(-0.0953), java.newFloat(0.0953), java.newFloat(-0.038), java.newFloat(-0.0843), java.newFloat(0.0953), java.newFloat(-0.0803), java.newFloat(-0.0761), java.newFloat(0.0953), java.newFloat(-0.0889), java.newFloat(-0.0682), java.newFloat(0.0953), java.newFloat(-0.0929), java.newFloat(-0.0675), java.newFloat(0.13), java.newFloat(-0.0608), java.newFloat(-0.0165), java.newFloat(0), java.newFloat(0.125), java.newFloat(-0.112), java.newFloat(0), java.newFloat(0.117), java.newFloat(-0.0165), java.newFloat(0), java.newFloat(0.0777), java.newFloat(-0.0393), java.newFloat(0), java.newFloat(-0.0129), java.newFloat(-0.108), java.newFloat(0), java.newFloat(-0.00479), java.newFloat(-0.0863), java.newFloat(0), java.newFloat(-0.0862)])))))
                              .addChild((new autoclass.Transform()).setScale(java.newArray("float", [java.newFloat(0.015), java.newFloat(0.015), java.newFloat(0.015)]))
                                .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(1.57)])).setTranslation(java.newArray("float", [java.newFloat(-5), java.newFloat(-0.5), java.newFloat(-7.5)]))
                                  .addChild((new autoclass.Shape())
                                    .setAppearance((new autoclass.Appearance())
                                      .setMaterial((new autoclass.Material()).setDiffuseColor(java.newArray("float", [java.newFloat(0.753), java.newFloat(1), java.newFloat(0.243)]))))
                                    .setGeometry((new autoclass.Extrusion()).setDEF("FinExtrusionRight").setCcw(false).setCreaseAngle(java.newFloat(3.14)).setCrossSection(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(-0.8), java.newFloat(2), java.newFloat(-0.7), java.newFloat(3), java.newFloat(0), java.newFloat(5.2), java.newFloat(0.7), java.newFloat(3), java.newFloat(0.8), java.newFloat(2), java.newFloat(1), java.newFloat(0), java.newFloat(0.8), java.newFloat(-2), java.newFloat(0.7), java.newFloat(-3), java.newFloat(0), java.newFloat(-5.2), java.newFloat(-0.7), java.newFloat(-3), java.newFloat(-0.8), java.newFloat(-2), java.newFloat(-1), java.newFloat(0)])).setScale(java.newArray("float", [java.newFloat(0.25), java.newFloat(0.25), java.newFloat(0.5), java.newFloat(0.75), java.newFloat(0.5), java.newFloat(1.2), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35), java.newFloat(0.5), java.newFloat(1.35)])).setSpine(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(5), java.newFloat(0), java.newFloat(0), java.newFloat(8), java.newFloat(0), java.newFloat(0), java.newFloat(12), java.newFloat(0), java.newFloat(0), java.newFloat(15), java.newFloat(0.5), java.newFloat(0), java.newFloat(18), java.newFloat(1.5), java.newFloat(0), java.newFloat(25), java.newFloat(2.5), java.newFloat(0), java.newFloat(30), java.newFloat(4), java.newFloat(0), java.newFloat(34)])))))))))))
                    .addChild((new autoclass.HAnimJoint()).setName("vl1").setDEF("hanim_vl1").setCenter(java.newArray("float", [java.newFloat(-0.00405), java.newFloat(1.07), java.newFloat(-0.0275)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                      .addChild((new autoclass.HAnimSegment()).setName("l1").setDEF("hanim_l1")
                        .addChild((new autoclass.Transform()).setScale(java.newArray("float", [java.newFloat(1.05), java.newFloat(1.05), java.newFloat(1.05)])).setTranslation(java.newArray("float", [java.newFloat(-0.00405), java.newFloat(1.07), java.newFloat(-0.0275)]))
                          .addChild((new autoclass.Shape())
                            .setAppearance((new autoclass.Appearance())
                              .setMaterial((new autoclass.Material()).setDEF("WetShirtColor").setAmbientIntensity(java.newFloat(0.25)).setDiffuseColor(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0.502)])))
                              .setTexture((new autoclass.ImageTexture()).setDEF("small_logo_Tex").setUrl(java.newArray("java.lang.String", ["small_logo.gif","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Legacy/small_logo.gif"]))))
                            .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [0,1,2,-1,3,0,2,-1,4,5,6,-1,6,7,4,-1,8,7,6,-1,6,9,8,-1,9,10,8,-1,6,5,11,-1,9,6,12,-1,11,12,6,-1,12,10,9,-1,7,8,13,-1,13,4,7,-1,14,15,16,-1,15,17,13,-1,4,13,17,-1,17,15,18,-1,13,19,15,-1,19,13,8,-1,19,16,15,-1,16,19,8,-1,17,20,4,-1,5,4,20,-1,18,21,17,-1,20,17,21,-1,16,22,14,-1,22,16,23,-1,8,23,16,-1,23,8,10,-1,24,25,26,-1,26,27,24,-1,25,28,26,-1,28,29,30,-1,30,26,28,-1,31,32,33,-1,32,25,33,-1,25,24,34,-1,33,25,34,-1,24,35,34,-1,27,35,24,-1,33,36,31,-1,27,26,37,-1,37,26,30,-1,38,37,30,-1,33,34,39,-1,39,34,35,-1,39,35,40,-1,41,38,30,-1,35,27,42,-1,37,42,27,-1,40,35,42,-1,42,37,43,-1,37,38,44,-1,44,43,37,-1,36,45,46,-1,36,33,45,-1,40,42,47,-1,43,47,42,-1,47,48,40,-1,39,40,48,-1,47,43,49,-1,43,44,49,-1,50,49,44,-1,51,46,52,-1,46,45,52,-1,52,45,53,-1,33,53,45,-1,33,39,53,-1,49,54,47,-1,48,47,54,-1,55,56,52,-1,57,52,53,-1,57,55,52,-1,58,57,53,-1,59,58,53,-1,53,39,59,-1,39,48,59,-1,59,48,54,-1,58,59,60,-1,54,49,61,-1,59,54,61,-1,60,59,61,-1,49,50,62,-1,63,62,50,-1,62,61,49,-1,64,63,50,-1,63,64,65,-1,65,62,63,-1,66,60,61,-1,62,65,67,-1,68,67,65,-1,64,69,70,-1,64,70,65,-1,70,68,65,-1,69,71,72,-1,72,70,69,-1,73,74,75,-1,66,76,60,-1,67,77,62,-1,62,77,61,-1,77,66,61,-1,66,77,78,-1,77,67,79,-1,79,67,68,-1,79,78,77,-1,68,70,80,-1,70,72,80,-1,80,79,68,-1,74,73,81,-1,73,76,82,-1,82,81,73,-1,76,66,83,-1,78,83,66,-1,83,82,76,-1,78,79,84,-1,79,80,84,-1,84,85,78,-1,86,84,80,-1,81,82,87,-1,87,88,81,-1,82,83,89,-1,83,78,89,-1,89,87,82,-1,78,85,89,-1,90,91,92,-1,92,93,90,-1,90,94,91,-1,95,96,94,-1,94,90,95,-1,29,96,97,-1,96,95,97,-1,97,30,29,-1,30,97,41,-1,41,97,95,-1,98,99,100,-1,98,91,99,-1,101,92,91,-1,98,101,91,-1,101,102,92,-1,92,102,93,-1,36,103,31,-1,51,103,36,46,-1,103,100,31,-1,100,103,98,-1,104,90,93,-1,90,104,95,-1,95,105,41,-1,104,105,95,-1,106,101,98,-1,102,101,106,-1,107,93,102,-1,93,107,104,-1,108,104,107,-1,107,109,108,-1,110,105,104,-1,104,108,110,-1,109,107,111,-1,107,102,111,-1,111,102,106,-1,111,112,109,-1,106,112,111,-1,113,110,108,-1,110,113,114,-1,51,52,115,-1,116,115,117,-1,117,106,116,-1,118,109,112,-1,119,108,109,-1,108,119,113,-1,109,118,119,-1,120,113,119,-1,119,121,120,-1,52,56,122,-1,122,115,52,-1,115,122,123,-1,117,124,125,-1,106,117,125,-1,118,112,106,125,-1,119,118,125,-1,121,119,125,-1,126,124,123,-1,127,114,113,-1,114,127,128,-1,113,120,127,-1,114,128,129,-1,130,126,123,-1,122,130,123,-1,131,120,121,-1,131,127,120,-1,132,129,128,-1,128,127,132,-1,74,81,133,-1,81,134,133,-1,121,135,131,-1,136,132,127,-1,132,136,137,-1,138,71,129,-1,138,129,132,-1,137,138,132,-1,139,72,71,-1,72,139,80,-1,71,138,139,-1,140,135,121,-1,140,121,125,-1,141,127,131,-1,127,141,136,-1,131,135,141,-1,142,141,135,-1,143,136,141,-1,136,143,137,-1,141,142,143,-1,144,138,137,-1,144,139,138,-1,143,144,137,-1,145,146,134,-1,145,140,146,-1,134,81,145,-1,147,135,140,-1,135,147,142,-1,140,145,147,-1,148,80,139,-1,80,148,86,-1,139,144,148,-1,149,143,142,-1,149,144,143,-1,142,150,149,-1,151,148,144,-1,144,149,151,-1,152,145,81,-1,81,88,152,-1,153,147,145,-1,153,142,147,-1,145,152,153,-1,153,150,142,-1,154,86,148,-1,148,151,154,-1,155,28,25,-1,155,29,28,-1,155,25,32,-1,155,32,31,-1,155,31,100,-1,155,100,99,-1,155,99,91,-1,155,91,94,-1,155,94,96,-1,155,96,29,-1,156,151,149,-1,156,154,151,-1,156,149,150,-1,156,150,153,-1,156,153,152,-1,156,152,88,-1,156,88,87,-1,156,87,89,-1,156,89,85,-1,156,85,84,-1,156,84,86,-1,156,86,154,-1,76,157,60,-1,76,73,158,157,-1,159,158,73,75,160,-1,161,56,55,-1,60,162,58,-1,162,60,157,-1,161,55,163,-1,57,164,163,55,-1,160,163,164,-1,160,164,159,-1,164,57,165,-1,164,165,159,-1,57,58,166,165,-1,166,58,162,-1,165,166,159,-1,166,162,157,158,159,-1,140,125,167,-1,124,168,125,-1,168,167,125,-1,124,169,168,-1,146,140,167,170,-1,168,170,167,-1,168,169,170,-1,146,170,171,-1,169,171,170,-1,172,134,146,171,-1,134,172,130,-1,169,124,126,173,-1,173,126,130,-1,169,173,172,171,-1,173,130,172,-1,122,74,133,174,-1,133,134,174,-1,130,122,174,-1,134,130,174,-1,122,56,175,74,-1,74,175,176,-1,175,56,161,176,-1,74,176,75,-1,176,161,163,-1,176,160,75,-1,176,163,160,-1,115,116,177,51,-1,106,98,177,116,-1,51,177,103,-1,177,98,103,-1])).setCreaseAngle(java.newFloat(1.59))
                              .setCoord((new autoclass.Coordinate()).setDEF("pointValues").setPoint(java.newArray("float", [java.newFloat(0.043), java.newFloat(1.25), java.newFloat(0.0614), java.newFloat(0.101), java.newFloat(1.25), java.newFloat(0.0614), java.newFloat(0.103), java.newFloat(1.31), java.newFloat(0.0195), java.newFloat(0.021), java.newFloat(1.32), java.newFloat(0.0276), java.newFloat(0.0572), java.newFloat(1.27), java.newFloat(-0.153), java.newFloat(0.0524), java.newFloat(1.15), java.newFloat(-0.134), java.newFloat(0), java.newFloat(1.19), java.newFloat(-0.14), java.newFloat(0), java.newFloat(1.26), java.newFloat(-0.147), java.newFloat(-0.0572), java.newFloat(1.27), java.newFloat(-0.153), java.newFloat(-0.0228), java.newFloat(1.18), java.newFloat(-0.14), java.newFloat(-0.0524), java.newFloat(1.15), java.newFloat(-0.134), java.newFloat(0), java.newFloat(1.13), java.newFloat(-0.126), java.newFloat(-0.0228), java.newFloat(1.13), java.newFloat(-0.124), java.newFloat(0), java.newFloat(1.31), java.newFloat(-0.146), java.newFloat(-0.0545), java.newFloat(1.35), java.newFloat(-0.138), java.newFloat(0), java.newFloat(1.35), java.newFloat(-0.136), java.newFloat(-0.0593), java.newFloat(1.3), java.newFloat(-0.151), java.newFloat(0.0593), java.newFloat(1.3), java.newFloat(-0.151), java.newFloat(0.0545), java.newFloat(1.35), java.newFloat(-0.138), java.newFloat(-0.0255), java.newFloat(1.3), java.newFloat(-0.146), java.newFloat(0.0975), java.newFloat(1.26), java.newFloat(-0.15), java.newFloat(0.1), java.newFloat(1.3), java.newFloat(-0.148), java.newFloat(-0.1), java.newFloat(1.3), java.newFloat(-0.148), java.newFloat(-0.0975), java.newFloat(1.26), java.newFloat(-0.15), java.newFloat(-0.117), java.newFloat(1.41), java.newFloat(-0.0395), java.newFloat(-0.0674), java.newFloat(1.45), java.newFloat(-0.0314), java.newFloat(-0.0926), java.newFloat(1.41), java.newFloat(-0.0937), java.newFloat(-0.124), java.newFloat(1.4), java.newFloat(-0.0706), java.newFloat(-0.0583), java.newFloat(1.44), java.newFloat(-0.0615), java.newFloat(-0.0228), java.newFloat(1.46), java.newFloat(-0.0872), java.newFloat(-0.0534), java.newFloat(1.42), java.newFloat(-0.112), java.newFloat(-0.0228), java.newFloat(1.42), java.newFloat(0.00351), java.newFloat(-0.0593), java.newFloat(1.43), java.newFloat(-0.0185), java.newFloat(-0.0787), java.newFloat(1.39), java.newFloat(-0.00293), java.newFloat(-0.112), java.newFloat(1.4), java.newFloat(-0.0131), java.newFloat(-0.164), java.newFloat(1.39), java.newFloat(-0.0373), java.newFloat(-0.0153), java.newFloat(1.39), java.newFloat(0.0159), java.newFloat(-0.0953), java.newFloat(1.35), java.newFloat(-0.136), java.newFloat(-0.0545), java.newFloat(1.35), java.newFloat(-0.138), java.newFloat(-0.139), java.newFloat(1.34), java.newFloat(0.00297), java.newFloat(-0.137), java.newFloat(1.34), java.newFloat(-0.0368), java.newFloat(0), java.newFloat(1.35), java.newFloat(-0.136), java.newFloat(-0.156), java.newFloat(1.35), java.newFloat(-0.0915), java.newFloat(-0.132), java.newFloat(1.29), java.newFloat(-0.127), java.newFloat(-0.1), java.newFloat(1.3), java.newFloat(-0.148), java.newFloat(-0.0418), java.newFloat(1.35), java.newFloat(0.0168), java.newFloat(-0.013), java.newFloat(1.37), java.newFloat(0.0167), java.newFloat(-0.151), java.newFloat(1.28), java.newFloat(-0.0878), java.newFloat(-0.136), java.newFloat(1.32), java.newFloat(-0.0406), java.newFloat(-0.124), java.newFloat(1.26), java.newFloat(-0.125), java.newFloat(-0.0975), java.newFloat(1.26), java.newFloat(-0.15), java.newFloat(0.00228), java.newFloat(1.37), java.newFloat(0.0167), java.newFloat(-0.00959), java.newFloat(1.32), java.newFloat(0.0276), java.newFloat(-0.0918), java.newFloat(1.31), java.newFloat(0.0195), java.newFloat(-0.141), java.newFloat(1.25), java.newFloat(-0.0744), java.newFloat(-0.0316), java.newFloat(1.25), java.newFloat(0.0614), java.newFloat(-0.00261), java.newFloat(1.25), java.newFloat(0.0458), java.newFloat(-0.0611), java.newFloat(1.25), java.newFloat(0.0668), java.newFloat(-0.0896), java.newFloat(1.25), java.newFloat(0.0614), java.newFloat(-0.126), java.newFloat(1.24), java.newFloat(0.012), java.newFloat(-0.126), java.newFloat(1.22), java.newFloat(0.0141), java.newFloat(-0.129), java.newFloat(1.17), java.newFloat(-0.0523), java.newFloat(-0.115), java.newFloat(1.16), java.newFloat(-0.105), java.newFloat(-0.0851), java.newFloat(1.18), java.newFloat(-0.134), java.newFloat(-0.0524), java.newFloat(1.15), java.newFloat(-0.134), java.newFloat(-0.083), java.newFloat(1.13), java.newFloat(-0.122), java.newFloat(-0.117), java.newFloat(1.15), java.newFloat(-0.018), java.newFloat(-0.11), java.newFloat(1.1), java.newFloat(-0.0846), java.newFloat(-0.0808), java.newFloat(1.1), java.newFloat(-0.111), java.newFloat(-0.0228), java.newFloat(1.13), java.newFloat(-0.124), java.newFloat(-0.0524), java.newFloat(1.1), java.newFloat(-0.119), java.newFloat(0), java.newFloat(1.13), java.newFloat(-0.126), java.newFloat(-0.0228), java.newFloat(1.1), java.newFloat(-0.116), java.newFloat(-0.0563), java.newFloat(1.15), java.newFloat(0.0377), java.newFloat(-0.00476), java.newFloat(1.18), java.newFloat(0.0458), java.newFloat(-0.0343), java.newFloat(1.18), java.newFloat(0.0485), java.newFloat(-0.0966), java.newFloat(1.15), java.newFloat(-0.00413), java.newFloat(-0.12), java.newFloat(1.1), java.newFloat(-0.0373), java.newFloat(-0.121), java.newFloat(1.07), java.newFloat(-0.0356), java.newFloat(-0.106), java.newFloat(1.07), java.newFloat(-0.0711), java.newFloat(-0.0475), java.newFloat(1.06), java.newFloat(-0.105), java.newFloat(0), java.newFloat(1.08), java.newFloat(0.0556), java.newFloat(-0.0787), java.newFloat(1.08), java.newFloat(0.0347), java.newFloat(-0.103), java.newFloat(1.08), java.newFloat(0.00296), java.newFloat(-0.0975), java.newFloat(1.01), java.newFloat(-0.0873), java.newFloat(-0.134), java.newFloat(0.998), java.newFloat(-0.0314), java.newFloat(-0.0475), java.newFloat(1.02), java.newFloat(-0.109), java.newFloat(-0.0325), java.newFloat(1.02), java.newFloat(0.0529), java.newFloat(0), java.newFloat(1.02), java.newFloat(0.0422), java.newFloat(-0.0975), java.newFloat(1.02), java.newFloat(0.0132), java.newFloat(0.0926), java.newFloat(1.41), java.newFloat(-0.0937), java.newFloat(0.0674), java.newFloat(1.45), java.newFloat(-0.0314), java.newFloat(0.117), java.newFloat(1.41), java.newFloat(-0.0395), java.newFloat(0.124), java.newFloat(1.4), java.newFloat(-0.0706), java.newFloat(0.0583), java.newFloat(1.44), java.newFloat(-0.0615), java.newFloat(0.0534), java.newFloat(1.42), java.newFloat(-0.112), java.newFloat(0.0228), java.newFloat(1.46), java.newFloat(-0.0872), java.newFloat(0), java.newFloat(1.4), java.newFloat(-0.112), java.newFloat(0.0787), java.newFloat(1.39), java.newFloat(-0.00293), java.newFloat(0.0593), java.newFloat(1.43), java.newFloat(-0.0185), java.newFloat(0.0228), java.newFloat(1.42), java.newFloat(0.00351), java.newFloat(0.112), java.newFloat(1.4), java.newFloat(-0.0131), java.newFloat(0.164), java.newFloat(1.39), java.newFloat(-0.0373), java.newFloat(0.0153), java.newFloat(1.39), java.newFloat(0.0159), java.newFloat(0.0953), java.newFloat(1.35), java.newFloat(-0.136), java.newFloat(0.0545), java.newFloat(1.35), java.newFloat(-0.138), java.newFloat(0.139), java.newFloat(1.34), java.newFloat(0.00297), java.newFloat(0.156), java.newFloat(1.35), java.newFloat(-0.0915), java.newFloat(0.132), java.newFloat(1.29), java.newFloat(-0.127), java.newFloat(0.151), java.newFloat(1.28), java.newFloat(-0.0878), java.newFloat(0.1), java.newFloat(1.3), java.newFloat(-0.148), java.newFloat(0.137), java.newFloat(1.34), java.newFloat(-0.0368), java.newFloat(0.147), java.newFloat(1.32), java.newFloat(-0.0406), java.newFloat(0.124), java.newFloat(1.26), java.newFloat(-0.125), java.newFloat(0.0975), java.newFloat(1.26), java.newFloat(-0.15), java.newFloat(0.021), java.newFloat(1.32), java.newFloat(0.0276), java.newFloat(0.0532), java.newFloat(1.35), java.newFloat(0.0168), java.newFloat(0.103), java.newFloat(1.31), java.newFloat(0.0195), java.newFloat(0.135), java.newFloat(1.29), java.newFloat(-0.0406), java.newFloat(0.141), java.newFloat(1.25), java.newFloat(-0.0744), java.newFloat(0.132), java.newFloat(1.18), java.newFloat(-0.083), java.newFloat(0.134), java.newFloat(1.19), java.newFloat(-0.0572), java.newFloat(0.014), java.newFloat(1.25), java.newFloat(0.0458), java.newFloat(0.043), java.newFloat(1.25), java.newFloat(0.0614), java.newFloat(0.101), java.newFloat(1.25), java.newFloat(0.0614), java.newFloat(0.138), java.newFloat(1.24), java.newFloat(0.012), java.newFloat(0.065), java.newFloat(1.23), java.newFloat(0.0743), java.newFloat(0.115), java.newFloat(1.16), java.newFloat(-0.105), java.newFloat(0.0851), java.newFloat(1.18), java.newFloat(-0.134), java.newFloat(0.0524), java.newFloat(1.15), java.newFloat(-0.134), java.newFloat(0.043), java.newFloat(1.2), java.newFloat(0.0641), java.newFloat(0.127), java.newFloat(1.14), java.newFloat(-0.0427), java.newFloat(0.083), java.newFloat(1.13), java.newFloat(-0.122), java.newFloat(0.0162), java.newFloat(1.18), java.newFloat(0.0458), java.newFloat(0.0457), java.newFloat(1.18), java.newFloat(0.0485), java.newFloat(0.117), java.newFloat(1.15), java.newFloat(-0.018), java.newFloat(0.11), java.newFloat(1.1), java.newFloat(-0.0846), java.newFloat(0.0808), java.newFloat(1.1), java.newFloat(-0.111), java.newFloat(0.0524), java.newFloat(1.1), java.newFloat(-0.119), java.newFloat(0.0228), java.newFloat(1.1), java.newFloat(-0.116), java.newFloat(0.108), java.newFloat(1.15), java.newFloat(-0.00413), java.newFloat(0.12), java.newFloat(1.1), java.newFloat(-0.0373), java.newFloat(0.121), java.newFloat(1.07), java.newFloat(-0.0356), java.newFloat(0.106), java.newFloat(1.07), java.newFloat(-0.0711), java.newFloat(0.0475), java.newFloat(1.06), java.newFloat(-0.105), java.newFloat(0.0787), java.newFloat(1.08), java.newFloat(0.0347), java.newFloat(0.0844), java.newFloat(1.15), java.newFloat(0.0297), java.newFloat(0.103), java.newFloat(1.08), java.newFloat(0.00296), java.newFloat(0), java.newFloat(1.07), java.newFloat(-0.11), java.newFloat(0.0975), java.newFloat(1.01), java.newFloat(-0.0873), java.newFloat(0.134), java.newFloat(0.998), java.newFloat(-0.0475), java.newFloat(0.0475), java.newFloat(1.02), java.newFloat(-0.109), java.newFloat(0.0325), java.newFloat(1.02), java.newFloat(0.0529), java.newFloat(0.0975), java.newFloat(1.02), java.newFloat(0.0132), java.newFloat(0), java.newFloat(1.02), java.newFloat(-0.117), java.newFloat(0), java.newFloat(1.44), java.newFloat(-0.0389), java.newFloat(0), java.newFloat(1.01), java.newFloat(-0.0259), java.newFloat(-0.104), java.newFloat(1.19), java.newFloat(0.0423), java.newFloat(-0.0778), java.newFloat(1.19), java.newFloat(0.0642), java.newFloat(-0.078), java.newFloat(1.19), java.newFloat(0.0644), java.newFloat(-0.0493), java.newFloat(1.2), java.newFloat(0.0664), java.newFloat(-0.0281), java.newFloat(1.22), java.newFloat(0.0587), java.newFloat(-0.104), java.newFloat(1.2), java.newFloat(0.0568), java.newFloat(-0.0484), java.newFloat(1.21), java.newFloat(0.0692), java.newFloat(-0.0549), java.newFloat(1.21), java.newFloat(0.0708), java.newFloat(-0.0806), java.newFloat(1.21), java.newFloat(0.0713), java.newFloat(-0.0852), java.newFloat(1.21), java.newFloat(0.0703), java.newFloat(0.116), java.newFloat(1.19), java.newFloat(0.043), java.newFloat(0.114), java.newFloat(1.21), java.newFloat(0.0572), java.newFloat(0.0967), java.newFloat(1.21), java.newFloat(0.0701), java.newFloat(0.11), java.newFloat(1.19), java.newFloat(0.0502), java.newFloat(0.093), java.newFloat(1.19), java.newFloat(0.0622), java.newFloat(0.0832), java.newFloat(1.19), java.newFloat(0.0662), java.newFloat(0.0863), java.newFloat(1.21), java.newFloat(0.0728), java.newFloat(0.0154), java.newFloat(1.21), java.newFloat(0.0458), java.newFloat(-0.00393), java.newFloat(1.21), java.newFloat(0.0458), java.newFloat(-0.0145), java.newFloat(1.2), java.newFloat(0.0512), java.newFloat(0.0534), java.newFloat(1.35), java.newFloat(0.0168)])))
                              .setTexCoord((new autoclass.TextureCoordinate()).setPoint(java.newArray("float", [java.newFloat(0.1611), java.newFloat(-0.02056), java.newFloat(0.9468), java.newFloat(-0.02056), java.newFloat(0.9739), java.newFloat(0.9344), java.newFloat(-0.137), java.newFloat(1.094), java.newFloat(0.1973), java.newFloat(0.6424), java.newFloat(0.2231), java.newFloat(0.04876), java.newFloat(0.5054), java.newFloat(0.2466), java.newFloat(0.5054), java.newFloat(0.5929), java.newFloat(0.8135), java.newFloat(0.6424), java.newFloat(0.6282), java.newFloat(0.1972), java.newFloat(0.7876), java.newFloat(0.04876), java.newFloat(0.5054), java.newFloat(-0.05018), java.newFloat(0.6282), java.newFloat(-0.05018), java.newFloat(0.5054), java.newFloat(0.8403), java.newFloat(0.7989), java.newFloat(1.038), java.newFloat(0.5054), java.newFloat(1.038), java.newFloat(0.8248), java.newFloat(0.7908), java.newFloat(0.186), java.newFloat(0.7908), java.newFloat(0.2118), java.newFloat(1.038), java.newFloat(0.6427), java.newFloat(0.7908), java.newFloat(-0.01977), java.newFloat(0.5929), java.newFloat(-0.03324), java.newFloat(0.7908), java.newFloat(1.044), java.newFloat(0.7908), java.newFloat(1.031), java.newFloat(0.5929), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0)]))))))
                        .addChild((new autoclass.Transform()).setScale(java.newArray("float", [java.newFloat(1.25), java.newFloat(1.1), java.newFloat(1.3)])).setTranslation(java.newArray("float", [java.newFloat(-0.00405), java.newFloat(1.07), java.newFloat(-0.0275)]))
                          .addChild((new autoclass.Group())
                            .addChild((new autoclass.Transform()).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-1.2), java.newFloat(0)]))
                              .addChild((new autoclass.Shape())
                                .setAppearance((new autoclass.Appearance())
                                  .setMaterial((new autoclass.Material()).setDEF("BCLColor").setAmbientIntensity(java.newFloat(0.25)).setDiffuseColor(java.newArray("float", [java.newFloat(0.0588), java.newFloat(0.0588), java.newFloat(0.0588)])).setShininess(java.newFloat(0.5))))
                                .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [4,5,6,-1,6,7,4,-1,8,7,6,-1,6,9,8,-1,9,10,8,-1,6,5,11,-1,9,6,12,-1,11,12,6,-1,12,10,9,-1,7,8,13,-1,13,4,7,-1,14,15,16,-1,15,17,13,-1,4,13,17,-1,17,15,18,-1,13,19,15,-1,19,13,8,-1,19,16,15,-1,16,19,8,-1,17,20,4,-1,5,4,20,-1,18,21,17,-1,20,17,21,-1,16,22,14,-1,22,16,23,-1,8,23,16,-1,23,8,10,-1,24,25,26,-1,26,27,24,-1,25,28,26,-1,28,29,30,-1,30,26,28,-1,25,24,34,-1,33,25,34,-1,24,35,34,-1,27,35,24,-1,27,26,37,-1,37,26,30,-1,38,37,30,-1,33,34,39,-1,39,34,35,-1,41,38,30,-1,35,27,42,-1,37,42,27,-1,42,37,43,-1,37,38,44,-1,44,43,37,-1,43,47,42,-1,47,43,49,-1,43,44,49,-1,50,49,44,-1,33,39,53,-1,49,54,47,-1,59,58,53,-1,53,39,59,-1,58,59,60,-1,54,49,61,-1,49,50,62,-1,63,62,50,-1,62,61,49,-1,64,63,50,-1,63,64,65,-1,65,62,63,-1,66,60,61,-1,62,65,67,-1,68,67,65,-1,64,69,70,-1,64,70,65,-1,70,68,65,-1,69,71,72,-1,72,70,69,-1,66,76,60,-1,67,77,62,-1,62,77,61,-1,77,66,61,-1,66,77,78,-1,77,67,79,-1,79,67,68,-1,79,78,77,-1,68,70,80,-1,70,72,80,-1,80,79,68,-1,73,76,82,-1,76,66,83,-1,78,83,66,-1,83,82,76,-1,78,79,84,-1,79,80,84,-1,84,85,78,-1,86,84,80,-1,82,83,89,-1,83,78,89,-1,89,87,82,-1,78,85,89,-1,90,91,92,-1,92,93,90,-1,90,94,91,-1,95,96,94,-1,94,90,95,-1,29,96,97,-1,96,95,97,-1,97,30,29,-1,30,97,41,-1,41,97,95,-1,101,92,91,-1,98,101,91,-1,101,102,92,-1,92,102,93,-1,104,90,93,-1,90,104,95,-1,95,105,41,-1,104,105,95,-1,106,101,98,-1,102,101,106,-1,107,93,102,-1,93,107,104,-1,108,104,107,-1,107,109,108,-1,110,105,104,-1,104,108,110,-1,113,110,108,-1,110,113,114,-1,119,108,109,-1,108,119,113,-1,120,113,119,-1,119,121,120,-1,117,124,125,-1,106,117,125,-1,127,114,113,-1,114,127,128,-1,113,120,127,-1,114,128,129,-1,131,120,121,-1,131,127,120,-1,132,129,128,-1,128,127,132,-1,121,135,131,-1,136,132,127,-1,132,136,137,-1,138,71,129,-1,138,129,132,-1,137,138,132,-1,139,72,71,-1,72,139,80,-1,71,138,139,-1,140,135,121,-1,140,121,125,-1,141,127,131,-1,127,141,136,-1,131,135,141,-1,142,141,135,-1,143,136,141,-1,136,143,137,-1,141,142,143,-1,144,138,137,-1,144,139,138,-1,143,144,137,-1,145,140,146,-1,147,135,140,-1,135,147,142,-1,140,145,147,-1,148,80,139,-1,80,148,86,-1,139,144,148,-1,149,143,142,-1,149,144,143,-1,142,150,149,-1,151,148,144,-1,144,149,151,-1,153,147,145,-1,153,142,147,-1,145,152,153,-1,153,150,142,-1,154,86,148,-1,148,151,154,-1,76,157,60,-1,76,73,158,157,-1,60,162,58,-1,162,60,157,-1,166,58,162,-1,165,166,159,-1,166,162,157,158,159,-1,140,125,167,-1,124,168,125,-1,168,167,125,-1,124,169,168,-1,146,140,167,170,-1,168,170,167,-1,168,169,170,-1,146,170,171,-1,169,171,170,-1,98,117,106,-1])).setCreaseAngle(java.newFloat(1.59)).setSolid(false)
                                  .setCoord((new autoclass.Coordinate()).setUSE("pointValues"))
                                  .setTexCoord((new autoclass.TextureCoordinate()).setPoint(java.newArray("float", [java.newFloat(0.1611), java.newFloat(-0.02056), java.newFloat(0.9468), java.newFloat(-0.02056), java.newFloat(0.9739), java.newFloat(0.9344), java.newFloat(-0.137), java.newFloat(1.094), java.newFloat(0.1973), java.newFloat(0.6424), java.newFloat(0.2231), java.newFloat(0.04876), java.newFloat(0.5054), java.newFloat(0.2466), java.newFloat(0.5054), java.newFloat(0.5929), java.newFloat(0.8135), java.newFloat(0.6424), java.newFloat(0.6282), java.newFloat(0.1972), java.newFloat(0.7876), java.newFloat(0.04876), java.newFloat(0.5054), java.newFloat(-0.05018), java.newFloat(0.6282), java.newFloat(-0.05018), java.newFloat(0.5054), java.newFloat(0.8403), java.newFloat(0.7989), java.newFloat(1.038), java.newFloat(0.5054), java.newFloat(1.038), java.newFloat(0.8248), java.newFloat(0.7908), java.newFloat(0.186), java.newFloat(0.7908), java.newFloat(0.2118), java.newFloat(1.038), java.newFloat(0.6427), java.newFloat(0.7908), java.newFloat(-0.01977), java.newFloat(0.5929), java.newFloat(-0.03324), java.newFloat(0.7908), java.newFloat(1.044), java.newFloat(0.7908), java.newFloat(1.031), java.newFloat(0.5929), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0)]))))))
                            .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(1.57)])).setScale(java.newArray("float", [java.newFloat(2), java.newFloat(1.5), java.newFloat(1.5)])).setTranslation(java.newArray("float", [java.newFloat(0.13), java.newFloat(0.22), java.newFloat(-0.1)]))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(1.4)]))
                                .addChild((new autoclass.Shape()).setDEF("BCLSnorkelPad")
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setUSE("BCLColor")))
                                  .setGeometry((new autoclass.Extrusion()).setCrossSection(java.newArray("float", [java.newFloat(0), java.newFloat(0.013), java.newFloat(0.00494), java.newFloat(0.01196), java.newFloat(0.00923), java.newFloat(0.00923), java.newFloat(0.01196), java.newFloat(0.00494), java.newFloat(0.013), java.newFloat(0), java.newFloat(0.01196), java.newFloat(-0.00494), java.newFloat(0.00923), java.newFloat(-0.00923), java.newFloat(0.00494), java.newFloat(-0.01196), java.newFloat(0), java.newFloat(0.013)])).setSpine(java.newArray("float", [java.newFloat(-0.03), java.newFloat(0.01), java.newFloat(0), java.newFloat(-0.005), java.newFloat(0.04), java.newFloat(0), java.newFloat(0), java.newFloat(0.06), java.newFloat(0), java.newFloat(-0.01), java.newFloat(0.075), java.newFloat(0)]))))))
                            .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8)])).setTranslation(java.newArray("float", [java.newFloat(0.07), java.newFloat(0.08), java.newFloat(0.125)]))
                              .addChild((new autoclass.Shape())
                                .setAppearance((new autoclass.Appearance())
                                  .setMaterial((new autoclass.Material()).setDEF("BCLSnorkel").setDiffuseColor(java.newArray("float", [java.newFloat(0.25), java.newFloat(0.25), java.newFloat(0.25)])).setShininess(java.newFloat(0.5)).setTransparency(java.newFloat(0.1))))
                                .setGeometry((new autoclass.Extrusion()).setCrossSection(java.newArray("float", [java.newFloat(0), java.newFloat(0.013), java.newFloat(0.00494), java.newFloat(0.01196), java.newFloat(0.00923), java.newFloat(0.00923), java.newFloat(0.01196), java.newFloat(0.00494), java.newFloat(0.013), java.newFloat(0), java.newFloat(0.01196), java.newFloat(-0.00494), java.newFloat(0.00923), java.newFloat(-0.00923), java.newFloat(0.00494), java.newFloat(-0.01196), java.newFloat(0), java.newFloat(0.013), java.newFloat(-0.00494), java.newFloat(-0.01196), java.newFloat(-0.00923), java.newFloat(-0.00923), java.newFloat(-0.01196), java.newFloat(-0.00494), java.newFloat(-0.013), java.newFloat(0), java.newFloat(-0.01196), java.newFloat(0.00494), java.newFloat(-0.00923), java.newFloat(0.00923), java.newFloat(-0.00494), java.newFloat(0.01196), java.newFloat(0), java.newFloat(0.013)])).setScale(java.newArray("float", [java.newFloat(0.8), java.newFloat(0.8), java.newFloat(1), java.newFloat(1)])).setSpine(java.newArray("float", [java.newFloat(0.03), java.newFloat(0.03), java.newFloat(-0.05), java.newFloat(0.05), java.newFloat(0.2), java.newFloat(0)])))))
                            .addChild((new autoclass.Group()).setDEF("buckle")
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.68)])).setTranslation(java.newArray("float", [java.newFloat(-0.08), java.newFloat(0.1), java.newFloat(0.029)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setDEF("buckleHolder")
                                    .setMaterial((new autoclass.Material()).setDiffuseColor(java.newArray("float", [java.newFloat(0.25), java.newFloat(0.25), java.newFloat(0.25)]))))
                                  .setGeometry((new autoclass.Box()).setSize(java.newArray("float", [java.newFloat(0.03), java.newFloat(0.03), java.newFloat(0.005)])))))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.68)])).setTranslation(java.newArray("float", [java.newFloat(0.03), java.newFloat(0.1), java.newFloat(0.027)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setUSE("buckleHolder"))
                                  .setGeometry((new autoclass.Box()).setSize(java.newArray("float", [java.newFloat(0.15), java.newFloat(0.03), java.newFloat(0.001)])))))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.68)])).setTranslation(java.newArray("float", [java.newFloat(-0.045), java.newFloat(0.1), java.newFloat(0.028)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setDEF("pin")
                                    .setMaterial((new autoclass.Material())))
                                  .setGeometry((new autoclass.Box()).setSize(java.newArray("float", [java.newFloat(0.02), java.newFloat(0.028), java.newFloat(0.005)])))))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(1.57)])).setTranslation(java.newArray("float", [java.newFloat(-0.06), java.newFloat(0.1), java.newFloat(0.029)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setUSE("pin"))
                                  .setGeometry((new autoclass.Cylinder()).setHeight(java.newFloat(0.02)).setRadius(java.newFloat(0.0024)))))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(1.57)])).setTranslation(java.newArray("float", [java.newFloat(-0.06), java.newFloat(0.109), java.newFloat(0.0217)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setUSE("pin"))
                                  .setGeometry((new autoclass.Cylinder()).setHeight(java.newFloat(0.02)).setRadius(java.newFloat(0.0024)))))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(1.57)])).setTranslation(java.newArray("float", [java.newFloat(-0.06), java.newFloat(0.091), java.newFloat(0.036)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setUSE("pin"))
                                  .setGeometry((new autoclass.Cylinder()).setHeight(java.newFloat(0.02)).setRadius(java.newFloat(0.0024))))))
                            .addChild((new autoclass.Group()).setDEF("buckleBelt")
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-0.68)])).setTranslation(java.newArray("float", [java.newFloat(-0.07), java.newFloat(-0.12), java.newFloat(0.038)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setUSE("buckleHolder"))
                                  .setGeometry((new autoclass.Box()).setSize(java.newArray("float", [java.newFloat(0.04), java.newFloat(0.1), java.newFloat(0.005)])))))
                              .addChild((new autoclass.Transform()).setTranslation(java.newArray("float", [java.newFloat(0.005), java.newFloat(-0.12), java.newFloat(0.053)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setUSE("buckleHolder"))
                                  .setGeometry((new autoclass.Box()).setSize(java.newArray("float", [java.newFloat(0.12), java.newFloat(0.11), java.newFloat(0.001)])))))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.68)])).setTranslation(java.newArray("float", [java.newFloat(0.075), java.newFloat(-0.12), java.newFloat(0.038)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance()).setUSE("buckleHolder"))
                                  .setGeometry((new autoclass.Box()).setSize(java.newArray("float", [java.newFloat(0.04), java.newFloat(0.1), java.newFloat(0.005)]))))))))
                        .addChild((new autoclass.Transform()).setDEF("ScubaTank").setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(3.14)])).setScale(java.newArray("float", [java.newFloat(0.8), java.newFloat(0.8), java.newFloat(0.8)])).setTranslation(java.newArray("float", [java.newFloat(-0.00405), java.newFloat(1.07), java.newFloat(-0.0275)]))
                          .addChild((new autoclass.Inline()).setUrl(java.newArray("java.lang.String", ["ScubaTank.x3d","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Legacy/ScubaTank.x3d","ScubaTank.wrl","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Legacy/ScubaTank.wrl"])))))
                      .addChild((new autoclass.HAnimJoint()).setName("l_shoulder").setDEF("hanim_l_shoulder").setCenter(java.newArray("float", [java.newFloat(0.167), java.newFloat(1.36), java.newFloat(-0.0518)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                        .addChild((new autoclass.HAnimSegment()).setName("l_upperarm").setDEF("hanim_l_upperarm")
                          .addChild((new autoclass.Transform()).setDEF("l_upperarm_adjust").setCenter(java.newArray("float", [java.newFloat(0.182), java.newFloat(1.22), java.newFloat(-0.047)])).setRotation(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.119)])).setTranslation(java.newArray("float", [java.newFloat(0.167), java.newFloat(1.36), java.newFloat(-0.0518)]))
                            .addChild((new autoclass.Shape())
                              .setAppearance((new autoclass.Appearance())
                                .setMaterial((new autoclass.Material()).setUSE("WetShirtColor")))
                              .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [2,1,0,-1,2,3,1,-1,2,4,3,-1,2,0,5,-1,6,5,0,-1,7,2,5,-1,8,4,2,-1,8,3,4,-1,9,1,3,-1,10,0,1,-1,0,10,6,-1,1,9,10,-1,3,8,9,-1,2,7,8,-1,5,6,7,-1,11,7,6,-1,14,9,8,-1,15,10,9,-1,11,6,10,-1,10,15,11,-1,9,14,15,-1,8,13,14,-1,8,16,13,-1,7,11,12,-1,21,15,14,-1,15,17,11,-1,15,21,17,-1,16,19,13,-1,13,19,20,-1,21,14,20,-1,14,13,20,-1,12,17,18,-1,12,11,17,-1,12,18,16,-1,18,19,16,-1,12,16,7,-1,16,8,7,-1,19,18,17,-1,20,19,21,-1,19,17,21,-1])).setCreaseAngle(java.newFloat(1.65))
                                .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(0.174), java.newFloat(1.37), java.newFloat(-0.0625), java.newFloat(0.185), java.newFloat(1.38), java.newFloat(-0.0395), java.newFloat(0.156), java.newFloat(1.39), java.newFloat(-0.0464), java.newFloat(0.174), java.newFloat(1.37), java.newFloat(-0.0158), java.newFloat(0.154), java.newFloat(1.37), java.newFloat(-0.0185), java.newFloat(0.157), java.newFloat(1.38), java.newFloat(-0.0733), java.newFloat(0.182), java.newFloat(1.33), java.newFloat(-0.0728), java.newFloat(0.151), java.newFloat(1.33), java.newFloat(-0.0937), java.newFloat(0.15), java.newFloat(1.34), java.newFloat(-0.000787), java.newFloat(0.185), java.newFloat(1.33), java.newFloat(-0.00025), java.newFloat(0.201), java.newFloat(1.33), java.newFloat(-0.0411), java.newFloat(0.189), java.newFloat(1.26), java.newFloat(-0.0808), java.newFloat(0.155), java.newFloat(1.26), java.newFloat(-0.0867), java.newFloat(0.151), java.newFloat(1.26), java.newFloat(-0.000789), java.newFloat(0.19), java.newFloat(1.26), java.newFloat(-0.00401), java.newFloat(0.209), java.newFloat(1.26), java.newFloat(-0.0427), java.newFloat(0.141), java.newFloat(1.26), java.newFloat(-0.0421), java.newFloat(0.203), java.newFloat(1.08), java.newFloat(-0.0744), java.newFloat(0.162), java.newFloat(1.05), java.newFloat(-0.0561), java.newFloat(0.169), java.newFloat(1.08), java.newFloat(-0.00885), java.newFloat(0.208), java.newFloat(1.07), java.newFloat(-0.00133), java.newFloat(0.221), java.newFloat(1.08), java.newFloat(-0.0352)])))))))
                        .addChild((new autoclass.HAnimJoint()).setName("l_elbow").setDEF("hanim_l_elbow").setCenter(java.newArray("float", [java.newFloat(0.196), java.newFloat(1.07), java.newFloat(-0.0518)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                          .addChild((new autoclass.HAnimSegment()).setName("l_forearm").setDEF("hanim_l_forearm")
                            .addChild((new autoclass.Transform()).setDEF("l_forearm_adjust").setCenter(java.newArray("float", [java.newFloat(0.198), java.newFloat(0.961), java.newFloat(-0.0405)])).setRotation(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1)])).setTranslation(java.newArray("float", [java.newFloat(0.196), java.newFloat(1.07), java.newFloat(-0.0518)]))
                              .addChild((new autoclass.Shape())
                                .setAppearance((new autoclass.Appearance())
                                  .setMaterial((new autoclass.Material()).setUSE("WetShirtColor")))
                                .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [2,1,0,-1,2,3,1,-1,2,4,3,-1,2,5,4,-1,2,6,5,-1,2,0,6,-1,7,6,0,-1,8,5,6,-1,9,4,5,-1,9,3,4,-1,10,1,3,-1,11,0,1,-1,0,11,7,-1,1,10,11,-1,3,9,10,-1,5,12,9,-1,5,8,12,-1,6,7,8,-1,17,16,15,-1,14,17,15,-1,14,18,17,-1,13,18,14,-1,16,17,10,-1,16,10,9,-1,15,16,9,-1,15,9,12,-1,18,13,7,-1,18,7,11,-1,13,14,8,-1,13,8,7,-1,14,15,8,-1,15,12,8,-1,17,18,10,-1,18,11,10,-1])).setCreaseAngle(java.newFloat(1.75))
                                  .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(0.177), java.newFloat(1.09), java.newFloat(-0.0609), java.newFloat(0.202), java.newFloat(1.1), java.newFloat(-0.0566), java.newFloat(0.189), java.newFloat(1.1), java.newFloat(-0.0395), java.newFloat(0.213), java.newFloat(1.1), java.newFloat(-0.025), java.newFloat(0.203), java.newFloat(1.1), java.newFloat(-0.0158), java.newFloat(0.182), java.newFloat(1.09), java.newFloat(-0.00563), java.newFloat(0.167), java.newFloat(1.09), java.newFloat(-0.0325), java.newFloat(0.176), java.newFloat(1.08), java.newFloat(-0.0781), java.newFloat(0.16), java.newFloat(1.06), java.newFloat(-0.0373), java.newFloat(0.214), java.newFloat(1.07), java.newFloat(-0.00402), java.newFloat(0.228), java.newFloat(1.07), java.newFloat(-0.0319), java.newFloat(0.208), java.newFloat(1.08), java.newFloat(-0.0765), java.newFloat(0.179), java.newFloat(1.07), java.newFloat(-0.00294), java.newFloat(0.21), java.newFloat(0.818), java.newFloat(-0.0615), java.newFloat(0.201), java.newFloat(0.82), java.newFloat(-0.0405), java.newFloat(0.205), java.newFloat(0.819), java.newFloat(-0.00832), java.newFloat(0.224), java.newFloat(0.818), java.newFloat(-0.00778), java.newFloat(0.237), java.newFloat(0.82), java.newFloat(-0.0282), java.newFloat(0.231), java.newFloat(0.819), java.newFloat(-0.0609)])))))))
                          .addChild((new autoclass.HAnimJoint()).setName("l_wrist").setDEF("hanim_l_wrist").setCenter(java.newArray("float", [java.newFloat(0.213), java.newFloat(0.811), java.newFloat(-0.0338)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                            .addChild((new autoclass.HAnimSegment()).setName("l_hand").setDEF("hanim_l_hand")
                              .addChild((new autoclass.Transform()).setDEF("l_hand_adjust").setCenter(java.newArray("float", [java.newFloat(0.213), java.newFloat(0.811), java.newFloat(-0.0338)])).setRotation(java.newArray("float", [java.newFloat(-0.06361), java.newFloat(-0.9967), java.newFloat(0.04988), java.newFloat(1.333)])).setTranslation(java.newArray("float", [java.newFloat(0.213), java.newFloat(0.811), java.newFloat(-0.0338)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setDEF("Skin_Color").setAmbientIntensity(java.newFloat(0.25)).setDiffuseColor(java.newArray("float", [java.newFloat(0.749), java.newFloat(0.601), java.newFloat(0.462)]))))
                                  .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [2,1,0,-1,5,4,3,-1,3,7,6,-1,2,3,6,-1,7,9,8,-1,6,7,8,-1,9,11,10,-1,8,9,10,-1,11,13,12,-1,10,11,12,-1,13,15,14,-1,12,13,14,-1,15,17,16,-1,14,15,16,-1,17,19,18,-1,16,17,18,-1,19,21,20,-1,18,19,20,-1,31,4,1,-1,4,5,0,-1,1,4,0,-1,5,3,2,-1,0,5,2,-1,26,25,24,-1,26,24,23,-1,27,26,23,-1,28,27,23,-1,28,23,22,-1,29,28,22,-1,29,22,21,-1,30,29,21,-1,15,13,11,-1,17,15,11,-1,19,17,11,-1,19,11,9,-1,31,19,9,-1,31,9,7,-1,4,31,7,-1,4,7,3,-1,30,21,19,-1,31,30,19,-1,12,14,16,-1,10,12,16,-1,10,16,18,-1,8,10,18,-1,6,8,1,-1,2,6,1,-1,39,38,37,-1,37,38,40,-1,37,40,36,-1,36,40,41,-1,36,41,35,-1,35,41,42,-1,35,42,34,-1,34,42,43,-1,34,43,33,-1,33,43,44,-1,33,44,32,-1,20,32,44,-1,20,44,45,-1,20,45,46,-1,47,8,18,-1,47,18,20,-1,47,20,46,-1,8,47,1,-1,22,33,32,-1,23,35,34,-1,23,36,35,-1,37,24,25,-1,40,38,27,-1,29,43,42,-1,45,44,30,-1,47,31,1,-1,47,46,31,-1,29,30,43,-1,30,44,43,-1,45,31,46,-1,45,30,31,-1,28,29,41,-1,29,42,41,-1,28,40,27,-1,28,41,40,-1,26,27,39,-1,27,38,39,-1,25,39,37,-1,25,26,39,-1,24,36,23,-1,24,37,36,-1,23,34,22,-1,34,33,22,-1,22,32,21,-1,32,20,21,-1])).setCreaseAngle(java.newFloat(1.48))
                                    .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(0.211), java.newFloat(0.828), java.newFloat(-0.0434), java.newFloat(0.194), java.newFloat(0.81), java.newFloat(-0.0445), java.newFloat(0.237), java.newFloat(0.82), java.newFloat(-0.0425), java.newFloat(0.236), java.newFloat(0.82), java.newFloat(-0.0237), java.newFloat(0.194), java.newFloat(0.81), java.newFloat(-0.0254), java.newFloat(0.21), java.newFloat(0.828), java.newFloat(-0.0247), java.newFloat(0.252), java.newFloat(0.801), java.newFloat(-0.0424), java.newFloat(0.252), java.newFloat(0.801), java.newFloat(-0.0231), java.newFloat(0.269), java.newFloat(0.765), java.newFloat(-0.0426), java.newFloat(0.268), java.newFloat(0.765), java.newFloat(-0.0225), java.newFloat(0.273), java.newFloat(0.732), java.newFloat(-0.0395), java.newFloat(0.272), java.newFloat(0.732), java.newFloat(-0.0223), java.newFloat(0.27), java.newFloat(0.704), java.newFloat(-0.0342), java.newFloat(0.27), java.newFloat(0.704), java.newFloat(-0.0224), java.newFloat(0.262), java.newFloat(0.703), java.newFloat(-0.0345), java.newFloat(0.261), java.newFloat(0.703), java.newFloat(-0.0227), java.newFloat(0.256), java.newFloat(0.717), java.newFloat(-0.0389), java.newFloat(0.256), java.newFloat(0.717), java.newFloat(-0.023), java.newFloat(0.255), java.newFloat(0.738), java.newFloat(-0.0408), java.newFloat(0.255), java.newFloat(0.738), java.newFloat(-0.023), java.newFloat(0.251), java.newFloat(0.734), java.newFloat(-0.0406), java.newFloat(0.251), java.newFloat(0.734), java.newFloat(-0.0232), java.newFloat(0.251), java.newFloat(0.692), java.newFloat(-0.0232), java.newFloat(0.248), java.newFloat(0.657), java.newFloat(-0.0233), java.newFloat(0.24), java.newFloat(0.645), java.newFloat(-0.0236), java.newFloat(0.226), java.newFloat(0.637), java.newFloat(-0.0241), java.newFloat(0.213), java.newFloat(0.639), java.newFloat(-0.0246), java.newFloat(0.197), java.newFloat(0.652), java.newFloat(-0.0253), java.newFloat(0.188), java.newFloat(0.669), java.newFloat(-0.0256), java.newFloat(0.184), java.newFloat(0.697), java.newFloat(-0.0258), java.newFloat(0.183), java.newFloat(0.73), java.newFloat(-0.0258), java.newFloat(0.187), java.newFloat(0.77), java.newFloat(-0.0257), java.newFloat(0.244), java.newFloat(0.696), java.newFloat(-0.0375), java.newFloat(0.244), java.newFloat(0.692), java.newFloat(-0.0372), java.newFloat(0.242), java.newFloat(0.661), java.newFloat(-0.0345), java.newFloat(0.241), java.newFloat(0.658), java.newFloat(-0.0343), java.newFloat(0.241), java.newFloat(0.656), java.newFloat(-0.0341), java.newFloat(0.231), java.newFloat(0.646), java.newFloat(-0.0336), java.newFloat(0.206), java.newFloat(0.65), java.newFloat(-0.0349), java.newFloat(0.218), java.newFloat(0.644), java.newFloat(-0.034), java.newFloat(0.205), java.newFloat(0.652), java.newFloat(-0.0352), java.newFloat(0.198), java.newFloat(0.667), java.newFloat(-0.0367), java.newFloat(0.195), java.newFloat(0.691), java.newFloat(-0.039), java.newFloat(0.194), java.newFloat(0.696), java.newFloat(-0.0395), java.newFloat(0.193), java.newFloat(0.725), java.newFloat(-0.042), java.newFloat(0.193), java.newFloat(0.731), java.newFloat(-0.0425), java.newFloat(0.197), java.newFloat(0.765), java.newFloat(-0.0449), java.newFloat(0.197), java.newFloat(0.77), java.newFloat(-0.0453)]))))))))))
                      .addChild((new autoclass.HAnimJoint()).setName("r_shoulder").setDEF("hanim_r_shoulder").setCenter(java.newArray("float", [java.newFloat(-0.167), java.newFloat(1.36), java.newFloat(-0.0458)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                        .addChild((new autoclass.HAnimSegment()).setName("r_upperarm").setDEF("hanim_r_upperarm")
                          .addChild((new autoclass.Transform()).setDEF("r_upperarm_adjust").setCenter(java.newArray("float", [java.newFloat(-0.182), java.newFloat(1.22), java.newFloat(-0.047)])).setRotation(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.0836)])).setTranslation(java.newArray("float", [java.newFloat(-0.167), java.newFloat(1.36), java.newFloat(-0.0458)]))
                            .addChild((new autoclass.Shape())
                              .setAppearance((new autoclass.Appearance())
                                .setMaterial((new autoclass.Material()).setUSE("WetShirtColor")))
                              .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [14,10,20,-1,10,13,20,-1,13,22,20,-1,19,14,20,-1,14,19,12,-1,19,20,24,-1,20,22,25,-1,22,13,25,-1,13,10,11,-1,10,14,5,-1,12,5,14,-1,5,11,10,-1,11,25,13,-1,25,24,20,-1,24,12,19,-1,12,24,9,-1,25,11,8,-1,11,5,2,-1,5,12,9,-1,9,2,5,-1,2,8,11,-1,8,23,25,-1,23,27,25,-1,21,9,24,-1,9,21,7,-1,27,23,18,-1,23,8,18,-1,8,2,6,-1,2,9,7,-1,7,1,2,-1,1,6,2,-1,6,18,8,-1,18,26,27,-1,16,7,21,-1,7,16,4,-1,16,26,17,-1,26,18,15,-1,18,6,3,-1,6,1,0,-1,1,7,0,-1,4,0,7,-1,0,3,6,-1,3,15,18,-1,15,17,26,-1,17,4,16,-1,3,0,15,-1,15,0,4,-1,15,4,17,-1,25,27,24,-1,27,21,24,-1,27,26,21,-1,26,16,21,-1])).setCreaseAngle(java.newFloat(1.53))
                                .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(-0.221), java.newFloat(1.08), java.newFloat(-0.0352), java.newFloat(-0.214), java.newFloat(1.14), java.newFloat(-0.0405), java.newFloat(-0.209), java.newFloat(1.26), java.newFloat(-0.0427), java.newFloat(-0.208), java.newFloat(1.07), java.newFloat(-0.00133), java.newFloat(-0.203), java.newFloat(1.08), java.newFloat(-0.0744), java.newFloat(-0.201), java.newFloat(1.33), java.newFloat(-0.0411), java.newFloat(-0.198), java.newFloat(1.14), java.newFloat(-0.0024), java.newFloat(-0.198), java.newFloat(1.13), java.newFloat(-0.076), java.newFloat(-0.19), java.newFloat(1.26), java.newFloat(-0.00401), java.newFloat(-0.189), java.newFloat(1.26), java.newFloat(-0.0808), java.newFloat(-0.185), java.newFloat(1.38), java.newFloat(-0.0395), java.newFloat(-0.185), java.newFloat(1.33), java.newFloat(-0.00025), java.newFloat(-0.182), java.newFloat(1.33), java.newFloat(-0.0728), java.newFloat(-0.174), java.newFloat(1.37), java.newFloat(-0.0158), java.newFloat(-0.174), java.newFloat(1.37), java.newFloat(-0.0625), java.newFloat(-0.169), java.newFloat(1.08), java.newFloat(-0.00885), java.newFloat(-0.167), java.newFloat(1.13), java.newFloat(-0.0744), java.newFloat(-0.162), java.newFloat(1.05), java.newFloat(-0.0561), java.newFloat(-0.16), java.newFloat(1.13), java.newFloat(-0.000793), java.newFloat(-0.157), java.newFloat(1.38), java.newFloat(-0.0733), java.newFloat(-0.156), java.newFloat(1.39), java.newFloat(-0.0464), java.newFloat(-0.155), java.newFloat(1.26), java.newFloat(-0.0867), java.newFloat(-0.154), java.newFloat(1.37), java.newFloat(-0.0185), java.newFloat(-0.151), java.newFloat(1.26), java.newFloat(-0.000789), java.newFloat(-0.151), java.newFloat(1.33), java.newFloat(-0.0937), java.newFloat(-0.15), java.newFloat(1.34), java.newFloat(-0.000787), java.newFloat(-0.15), java.newFloat(1.13), java.newFloat(-0.0411), java.newFloat(-0.141), java.newFloat(1.26), java.newFloat(-0.0421)])))))))
                        .addChild((new autoclass.HAnimJoint()).setName("r_elbow").setDEF("hanim_r_elbow").setCenter(java.newArray("float", [java.newFloat(-0.192), java.newFloat(1.07), java.newFloat(-0.0498)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                          .addChild((new autoclass.HAnimSegment()).setName("r_forearm").setDEF("hanim_r_forearm")
                            .addChild((new autoclass.Transform()).setDEF("r_forearm_adjust").setCenter(java.newArray("float", [java.newFloat(-0.198), java.newFloat(0.961), java.newFloat(-0.0397)])).setRotation(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1254)])).setTranslation(java.newArray("float", [java.newFloat(-0.192), java.newFloat(1.07), java.newFloat(-0.0498)]))
                              .addChild((new autoclass.Shape())
                                .setAppearance((new autoclass.Appearance())
                                  .setMaterial((new autoclass.Material()).setUSE("WetShirtColor")))
                                .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [20,13,15,-1,13,8,15,-1,8,12,15,-1,12,18,15,-1,18,22,15,-1,22,20,15,-1,20,22,21,-1,22,18,24,-1,18,12,7,-1,12,8,7,-1,8,13,3,-1,13,20,10,-1,21,10,20,-1,10,3,13,-1,3,7,8,-1,7,19,18,-1,19,24,18,-1,24,21,22,-1,21,24,23,-1,24,19,16,-1,19,7,6,-1,7,3,1,-1,3,10,5,-1,10,21,17,-1,17,5,10,-1,5,1,3,-1,1,6,7,-1,6,16,19,-1,16,23,24,-1,23,17,21,-1,1,5,2,-1,5,17,9,-1,9,2,5,-1,1,4,6,-1,4,16,6,-1,23,9,17,-1,9,23,14,-1,23,16,11,-1,4,11,16,-1,11,14,23,-1,11,4,0,-1,11,0,14,-1,0,2,14,-1,14,2,9,-1,2,0,1,-1,0,4,1,-1])).setCreaseAngle(java.newFloat(1.73))
                                  .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(-0.237), java.newFloat(0.82), java.newFloat(-0.0282), java.newFloat(-0.235), java.newFloat(1.02), java.newFloat(-0.033), java.newFloat(-0.231), java.newFloat(0.819), java.newFloat(-0.0609), java.newFloat(-0.228), java.newFloat(1.07), java.newFloat(-0.0319), java.newFloat(-0.224), java.newFloat(0.818), java.newFloat(-0.00778), java.newFloat(-0.221), java.newFloat(1.01), java.newFloat(-0.0744), java.newFloat(-0.218), java.newFloat(1.01), java.newFloat(-0.00133), java.newFloat(-0.214), java.newFloat(1.07), java.newFloat(-0.00402), java.newFloat(-0.213), java.newFloat(1.1), java.newFloat(-0.025), java.newFloat(-0.21), java.newFloat(0.818), java.newFloat(-0.0615), java.newFloat(-0.208), java.newFloat(1.08), java.newFloat(-0.0765), java.newFloat(-0.205), java.newFloat(0.819), java.newFloat(-0.00832), java.newFloat(-0.203), java.newFloat(1.1), java.newFloat(-0.0158), java.newFloat(-0.202), java.newFloat(1.1), java.newFloat(-0.0566), java.newFloat(-0.201), java.newFloat(0.82), java.newFloat(-0.0405), java.newFloat(-0.189), java.newFloat(1.1), java.newFloat(-0.0395), java.newFloat(-0.183), java.newFloat(1.01), java.newFloat(-0.00831), java.newFloat(-0.183), java.newFloat(1.01), java.newFloat(-0.0781), java.newFloat(-0.182), java.newFloat(1.09), java.newFloat(-0.00563), java.newFloat(-0.179), java.newFloat(1.07), java.newFloat(-0.00294), java.newFloat(-0.177), java.newFloat(1.09), java.newFloat(-0.0609), java.newFloat(-0.176), java.newFloat(1.08), java.newFloat(-0.0781), java.newFloat(-0.167), java.newFloat(1.09), java.newFloat(-0.0325), java.newFloat(-0.166), java.newFloat(1), java.newFloat(-0.0405), java.newFloat(-0.16), java.newFloat(1.06), java.newFloat(-0.0373)])))))))
                          .addChild((new autoclass.HAnimJoint()).setName("r_wrist").setDEF("hanim_r_wrist").setCenter(java.newArray("float", [java.newFloat(-0.217), java.newFloat(0.811), java.newFloat(-0.0338)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                            .addChild((new autoclass.HAnimSegment()).setName("r_hand").setDEF("hanim_r_hand")
                              .addChild((new autoclass.Transform()).setDEF("r_hand_adjust").setCenter(java.newArray("float", [java.newFloat(-0.217), java.newFloat(0.811), java.newFloat(-0.0338)])).setRotation(java.newArray("float", [java.newFloat(-0.09024), java.newFloat(0.994), java.newFloat(-0.0624), java.newFloat(1.216)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setUSE("Skin_Color")))
                                  .setGeometry((new autoclass.IndexedFaceSet()).setCoordIndex(java.newArray("int", [10,9,0,-1,11,30,31,-1,1,12,11,-1,1,11,0,-1,2,13,12,-1,2,12,1,-1,3,14,13,-1,3,13,2,-1,4,15,14,-1,4,14,3,-1,5,16,15,-1,5,15,4,-1,6,17,16,-1,6,16,5,-1,7,18,17,-1,7,17,6,-1,8,19,18,-1,8,18,7,-1,10,31,30,-1,10,30,9,-1,0,11,31,-1,0,31,10,-1,22,23,24,-1,21,22,24,-1,21,24,25,-1,21,25,26,-1,20,21,26,-1,20,26,27,-1,19,20,27,-1,19,27,28,-1,14,15,16,-1,14,16,17,-1,14,17,18,-1,13,14,18,-1,13,18,29,-1,12,13,29,-1,12,29,30,-1,11,12,30,-1,18,19,28,-1,18,28,29,-1,6,5,4,-1,6,4,3,-1,7,6,3,-1,7,3,2,-1,9,2,1,-1,9,1,0,-1,32,38,33,-1,33,38,39,-1,33,39,34,-1,34,39,40,-1,34,40,35,-1,35,40,41,-1,35,41,36,-1,36,41,42,-1,36,42,37,-1,37,42,43,-1,37,43,44,-1,44,43,8,-1,44,8,45,-1,45,8,46,-1,46,8,7,-1,46,7,2,-1,46,2,47,-1,9,47,2,-1,25,34,35,-1,25,33,34,-1,25,24,33,-1,24,32,33,-1,32,24,23,-1,40,39,21,-1,41,40,21,-1,43,19,8,-1,43,20,19,-1,43,42,20,-1,21,20,41,-1,20,42,41,-1,38,22,39,-1,22,21,39,-1,32,23,38,-1,23,22,38,-1,26,25,35,-1,27,36,37,-1,27,37,28,-1,37,44,28,-1,26,35,27,-1,35,36,27,-1,28,44,45,-1,29,46,47,-1,29,9,30,-1,29,47,9,-1,28,45,29,-1,45,46,29,-1])).setCreaseAngle(java.newFloat(1.57))
                                    .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(-0.237), java.newFloat(0.82), java.newFloat(-0.0425), java.newFloat(-0.252), java.newFloat(0.801), java.newFloat(-0.0424), java.newFloat(-0.269), java.newFloat(0.765), java.newFloat(-0.0426), java.newFloat(-0.273), java.newFloat(0.732), java.newFloat(-0.0395), java.newFloat(-0.27), java.newFloat(0.704), java.newFloat(-0.0342), java.newFloat(-0.262), java.newFloat(0.703), java.newFloat(-0.0345), java.newFloat(-0.256), java.newFloat(0.717), java.newFloat(-0.0389), java.newFloat(-0.255), java.newFloat(0.738), java.newFloat(-0.0408), java.newFloat(-0.251), java.newFloat(0.734), java.newFloat(-0.0406), java.newFloat(-0.194), java.newFloat(0.81), java.newFloat(-0.0445), java.newFloat(-0.211), java.newFloat(0.828), java.newFloat(-0.0434), java.newFloat(-0.236), java.newFloat(0.82), java.newFloat(-0.0237), java.newFloat(-0.252), java.newFloat(0.801), java.newFloat(-0.0231), java.newFloat(-0.268), java.newFloat(0.765), java.newFloat(-0.0225), java.newFloat(-0.272), java.newFloat(0.732), java.newFloat(-0.0223), java.newFloat(-0.27), java.newFloat(0.704), java.newFloat(-0.0224), java.newFloat(-0.261), java.newFloat(0.703), java.newFloat(-0.0227), java.newFloat(-0.256), java.newFloat(0.717), java.newFloat(-0.023), java.newFloat(-0.255), java.newFloat(0.738), java.newFloat(-0.023), java.newFloat(-0.251), java.newFloat(0.734), java.newFloat(-0.0232), java.newFloat(-0.251), java.newFloat(0.692), java.newFloat(-0.0232), java.newFloat(-0.248), java.newFloat(0.657), java.newFloat(-0.0233), java.newFloat(-0.24), java.newFloat(0.645), java.newFloat(-0.0236), java.newFloat(-0.226), java.newFloat(0.637), java.newFloat(-0.0241), java.newFloat(-0.213), java.newFloat(0.639), java.newFloat(-0.0246), java.newFloat(-0.197), java.newFloat(0.652), java.newFloat(-0.0253), java.newFloat(-0.188), java.newFloat(0.669), java.newFloat(-0.0256), java.newFloat(-0.184), java.newFloat(0.697), java.newFloat(-0.0258), java.newFloat(-0.183), java.newFloat(0.73), java.newFloat(-0.0258), java.newFloat(-0.187), java.newFloat(0.77), java.newFloat(-0.0257), java.newFloat(-0.194), java.newFloat(0.81), java.newFloat(-0.0254), java.newFloat(-0.21), java.newFloat(0.828), java.newFloat(-0.0247), java.newFloat(-0.221), java.newFloat(0.641), java.newFloat(-0.0336), java.newFloat(-0.21), java.newFloat(0.65), java.newFloat(-0.0348), java.newFloat(-0.206), java.newFloat(0.652), java.newFloat(-0.0352), java.newFloat(-0.198), java.newFloat(0.667), java.newFloat(-0.0368), java.newFloat(-0.193), java.newFloat(0.692), java.newFloat(-0.0392), java.newFloat(-0.192), java.newFloat(0.696), java.newFloat(-0.0396), java.newFloat(-0.231), java.newFloat(0.646), java.newFloat(-0.0336), java.newFloat(-0.238), java.newFloat(0.656), java.newFloat(-0.0342), java.newFloat(-0.24), java.newFloat(0.658), java.newFloat(-0.0344), java.newFloat(-0.24), java.newFloat(0.662), java.newFloat(-0.0347), java.newFloat(-0.243), java.newFloat(0.692), java.newFloat(-0.0372), java.newFloat(-0.243), java.newFloat(0.696), java.newFloat(-0.0376), java.newFloat(-0.192), java.newFloat(0.725), java.newFloat(-0.0421), java.newFloat(-0.192), java.newFloat(0.73), java.newFloat(-0.0426), java.newFloat(-0.195), java.newFloat(0.766), java.newFloat(-0.0451), java.newFloat(-0.196), java.newFloat(0.77), java.newFloat(-0.0454)]))))))))))
                      .addChild((new autoclass.HAnimJoint()).setName("vc4").setDEF("hanim_vc4").setCenter(java.newArray("float", [java.newFloat(0), java.newFloat(1.43), java.newFloat(-0.0458)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                        .addChild((new autoclass.HAnimSegment()).setName("c4").setDEF("hanim_c4")
                          .addChild((new autoclass.Shape())
                            .setAppearance((new autoclass.Appearance())
                              .setMaterial((new autoclass.Material()).setUSE("WetShirtColor")))
                            .setGeometry((new autoclass.IndexedFaceSet()).setDEF("neck").setCoordIndex(java.newArray("int", [6,5,2,-1,6,2,3,-1,5,4,1,-1,5,1,2,-1,4,7,0,-1,4,0,1,-1,11,10,9,-1,11,9,8,-1,10,13,12,-1,10,12,9,-1,13,15,14,-1,13,14,12,-1,6,3,11,-1,6,11,8,-1,7,14,15,-1,7,15,0,-1,2,10,11,-1,2,11,3,-1,2,1,13,-1,2,13,10,-1,1,0,15,-1,1,15,13,-1,9,5,6,-1,9,6,8,-1,9,12,4,-1,9,4,5,-1,12,14,7,-1,12,7,4,-1])).setCreaseAngle(java.newFloat(1.91))
                              .setCoord((new autoclass.Coordinate()).setPoint(java.newArray("float", [java.newFloat(0.0105), java.newFloat(1.54), java.newFloat(-0.1), java.newFloat(0.0357), java.newFloat(1.54), java.newFloat(-0.0685), java.newFloat(0.0382), java.newFloat(1.55), java.newFloat(-0.0474), java.newFloat(0.0105), java.newFloat(1.55), java.newFloat(-0.0204), java.newFloat(0.0373), java.newFloat(1.4), java.newFloat(-0.0593), java.newFloat(0.0577), java.newFloat(1.4), java.newFloat(-0.0266), java.newFloat(0.0158), java.newFloat(1.4), java.newFloat(0.00512), java.newFloat(0.0132), java.newFloat(1.41), java.newFloat(-0.0824), java.newFloat(-0.0158), java.newFloat(1.4), java.newFloat(0.00512), java.newFloat(-0.0577), java.newFloat(1.4), java.newFloat(-0.0266), java.newFloat(-0.0382), java.newFloat(1.55), java.newFloat(-0.0474), java.newFloat(-0.0105), java.newFloat(1.55), java.newFloat(-0.0204), java.newFloat(-0.0373), java.newFloat(1.4), java.newFloat(-0.0593), java.newFloat(-0.0357), java.newFloat(1.54), java.newFloat(-0.0685), java.newFloat(-0.0132), java.newFloat(1.41), java.newFloat(-0.0824), java.newFloat(-0.0105), java.newFloat(1.54), java.newFloat(-0.1)]))))))
                        .addChild((new autoclass.HAnimJoint()).setName("skullbase").setDEF("hanim_skullbase").setCenter(java.newArray("float", [java.newFloat(0), java.newFloat(1.54), java.newFloat(-0.0409)])).setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setStiffness(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                          .addChild((new autoclass.HAnimSegment()).setName("skull").setDEF("hanim_skull")
                            .addChild((new autoclass.Shape())
                              .setAppearance((new autoclass.Appearance())
                                .setMaterial((new autoclass.Material()).setUSE("Skin_Color")))
                              .setGeometry((new autoclass.IndexedFaceSet()).setDEF("headIFS").setColorIndex(java.newArray("int", [1,1,1,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,1,1,1,-1,1,1,1,-1,0,0,0,-1,1,1,1,-1,1,1,1,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,2,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,1,1,1,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,2,-1,2,2,2,-1,0,0,0,-1,0,0,0,-1,2,2,2,-1,2,2,2,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,4,4,4,-1,0,0,0,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,0,0,0,-1,0,0,0,-1,4,4,4,-1,0,0,0,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,0,0,0,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,0,0,0,-1,0,0,0,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1,4,4,4,-1])).setCoordIndex(java.newArray("int", [48,87,58,-1,91,92,59,-1,59,92,88,-1,88,93,231,-1,232,86,233,-1,86,89,233,-1,89,57,56,-1,49,55,57,-1,102,86,96,-1,86,90,96,-1,97,95,96,-1,97,127,95,-1,41,96,154,-1,41,102,96,-1,99,102,41,-1,153,99,41,-1,102,40,86,-1,234,235,236,-1,87,237,58,-1,56,57,91,-1,87,234,237,-1,234,236,237,-1,89,49,57,-1,49,50,55,-1,40,89,86,-1,89,56,233,-1,232,90,86,-1,90,97,96,-1,92,93,88,-1,93,94,231,-1,232,231,94,-1,97,90,232,-1,96,42,154,-1,95,42,96,-1,53,46,45,-1,53,45,51,-1,53,51,92,-1,92,51,52,-1,92,52,93,-1,94,93,52,-1,94,52,4,-1,97,232,94,-1,54,47,46,-1,54,46,53,-1,55,47,54,-1,50,47,55,-1,34,33,50,-1,34,50,49,-1,35,34,49,-1,35,49,89,-1,35,89,40,-1,99,39,102,-1,39,35,40,-1,31,34,35,-1,31,35,32,-1,14,32,35,-1,14,35,39,-1,14,39,98,-1,137,38,153,-1,38,99,153,-1,38,98,99,-1,37,238,239,-1,11,238,37,-1,101,37,36,-1,241,141,242,-1,10,12,242,-1,12,13,14,-1,12,14,243,-1,13,15,32,-1,13,32,14,-1,15,16,31,-1,15,31,32,-1,2,70,10,-1,2,10,141,-1,70,69,12,-1,70,12,10,-1,69,68,13,-1,69,13,12,-1,68,67,15,-1,68,15,13,-1,67,66,16,-1,67,16,15,-1,98,39,99,-1,101,11,37,-1,100,101,36,-1,36,244,240,-1,141,10,242,-1,12,243,242,-1,36,37,239,-1,36,239,244,-1,57,55,91,-1,55,54,91,-1,39,40,102,-1,123,103,120,-1,114,122,104,-1,115,122,114,-1,208,105,115,-1,210,119,211,-1,210,106,119,-1,116,107,106,-1,107,108,117,-1,126,119,109,-1,126,110,119,-1,126,95,125,-1,95,127,125,-1,154,126,111,-1,126,109,111,-1,111,109,112,-1,111,112,153,-1,119,113,109,-1,207,213,214,-1,123,209,103,-1,213,212,214,-1,209,214,103,-1,209,207,214,-1,107,117,106,-1,108,118,117,-1,119,106,113,-1,210,116,106,-1,119,110,211,-1,126,125,110,-1,115,105,122,-1,208,124,105,-1,124,208,211,-1,211,110,125,-1,154,42,126,-1,126,42,95,-1,168,128,121,-1,170,168,121,-1,122,170,121,-1,172,170,122,-1,105,172,122,-1,172,105,124,-1,4,172,124,-1,124,211,125,-1,128,130,129,-1,121,128,129,-1,129,130,108,-1,108,130,118,-1,118,131,132,-1,117,118,132,-1,117,132,133,-1,106,117,133,-1,113,106,133,-1,109,152,112,-1,113,133,152,-1,133,132,134,-1,135,133,134,-1,133,135,136,-1,152,133,136,-1,148,152,136,-1,153,138,137,-1,153,112,138,-1,112,148,138,-1,219,217,139,-1,36,240,149,-1,139,217,140,-1,149,139,151,-1,36,149,100,-1,220,141,241,-1,220,150,142,-1,136,143,150,-1,221,136,150,-1,135,144,143,-1,136,135,143,-1,134,158,144,-1,135,134,144,-1,142,161,2,-1,141,142,2,-1,150,145,161,-1,142,150,161,-1,143,146,145,-1,150,143,145,-1,144,147,146,-1,143,144,146,-1,158,160,147,-1,144,158,147,-1,112,152,148,-1,139,140,151,-1,149,151,100,-1,240,218,149,-1,220,142,141,-1,220,221,150,-1,219,139,149,-1,218,219,149,-1,104,108,107,-1,104,129,108,-1,109,113,152,-1,153,41,111,-1,129,104,122,-1,129,122,121,-1,91,54,92,-1,54,53,92,-1,97,94,127,-1,127,94,4,-1,125,127,124,-1,127,4,124,-1,154,111,41,-1,31,30,33,-1,31,33,34,-1,16,17,30,-1,16,30,31,-1,66,65,17,-1,66,17,16,-1,2,73,156,-1,2,156,70,-1,156,72,66,-1,156,66,67,-1,156,67,68,-1,156,68,69,-1,156,69,70,-1,72,71,65,-1,72,65,66,-1,17,18,30,-1,45,44,51,-1,51,44,43,-1,51,43,52,-1,52,43,1,-1,52,1,4,-1,245,246,27,-1,245,27,3,-1,246,247,28,-1,246,28,27,-1,248,22,29,-1,248,29,28,-1,248,28,247,-1,27,26,0,-1,27,0,3,-1,27,28,25,-1,27,25,26,-1,29,24,25,-1,29,25,28,-1,22,23,24,-1,22,24,29,-1,249,250,22,-1,249,22,248,-1,250,60,23,-1,250,23,22,-1,17,254,18,-1,65,254,17,-1,71,64,65,-1,63,74,75,-1,63,75,61,-1,64,255,254,-1,75,62,61,-1,62,76,60,-1,76,77,23,-1,76,23,60,-1,77,24,23,-1,77,78,25,-1,77,25,24,-1,78,84,26,-1,78,26,25,-1,84,192,0,-1,84,0,26,-1,84,83,193,-1,84,193,192,-1,79,83,84,-1,79,84,78,-1,76,79,78,-1,76,78,77,-1,80,83,79,-1,80,204,83,-1,75,81,80,-1,81,85,204,-1,81,204,80,-1,74,81,75,-1,74,82,81,-1,82,5,85,-1,82,85,81,-1,155,8,71,-1,155,71,72,-1,8,6,64,-1,8,64,71,-1,6,7,255,-1,6,255,64,-1,7,9,256,-1,7,256,255,-1,9,257,256,-1,73,155,156,-1,155,72,156,-1,204,193,83,-1,64,254,65,-1,131,157,134,-1,132,131,134,-1,157,159,158,-1,134,157,158,-1,159,206,160,-1,158,159,160,-1,203,73,2,-1,161,203,2,-1,160,162,203,-1,147,160,203,-1,146,147,203,-1,145,146,203,-1,161,145,203,-1,206,163,162,-1,160,206,162,-1,157,164,159,-1,170,169,168,-1,171,169,170,-1,172,171,170,-1,1,171,172,-1,4,1,172,-1,173,227,245,-1,3,173,245,-1,174,226,227,-1,173,174,227,-1,176,175,215,-1,174,176,215,-1,226,174,215,-1,0,177,173,-1,3,0,173,-1,178,174,173,-1,177,178,173,-1,178,179,176,-1,174,178,176,-1,179,180,175,-1,176,179,175,-1,175,225,216,-1,215,175,216,-1,180,181,225,-1,175,180,225,-1,164,228,159,-1,159,228,206,-1,206,185,163,-1,187,186,184,-1,183,187,184,-1,228,229,185,-1,183,182,187,-1,181,188,182,-1,180,189,188,-1,181,180,188,-1,180,179,189,-1,178,190,189,-1,179,178,189,-1,177,191,190,-1,178,177,190,-1,0,192,191,-1,177,0,191,-1,193,205,191,-1,192,193,191,-1,191,205,194,-1,190,191,194,-1,190,194,188,-1,189,190,188,-1,194,205,195,-1,205,204,195,-1,195,196,187,-1,204,85,196,-1,195,204,196,-1,187,196,186,-1,196,197,186,-1,85,5,197,-1,196,85,197,-1,163,198,202,-1,162,163,202,-1,185,199,198,-1,163,185,198,-1,229,200,199,-1,185,229,199,-1,230,201,200,-1,229,230,200,-1,230,257,201,-1,203,202,73,-1,203,162,202,-1,205,193,204,-1,206,228,185,-1,198,8,155,-1,198,155,202,-1,155,73,202,-1,199,6,8,-1,199,8,198,-1,7,6,199,-1,7,199,200,-1,201,9,7,-1,201,7,200,-1,201,257,9,-1,188,194,195,-1,188,195,182,-1,195,187,182,-1,80,79,76,-1,80,62,75,-1,80,76,62,-1,47,50,33,-1,131,118,130,-1,20,21,47,-1,21,46,47,-1,20,33,19,-1,20,47,33,-1,33,30,19,-1,30,18,19,-1,62,60,251,-1,60,250,251,-1,252,61,251,-1,61,62,251,-1,252,63,61,-1,252,253,63,-1,166,130,167,-1,130,128,167,-1,166,131,130,-1,166,165,131,-1,165,157,131,-1,165,164,157,-1,224,181,182,-1,224,225,181,-1,224,183,223,-1,224,182,183,-1,183,184,223,-1,184,222,223,-1]))
                                .setCoord((new autoclass.Coordinate()).setDEF("Face").setPoint(java.newArray("float", [java.newFloat(0), java.newFloat(1.708), java.newFloat(-0.0435), java.newFloat(0), java.newFloat(1.655), java.newFloat(0.04322), java.newFloat(0), java.newFloat(1.486), java.newFloat(0.02335), java.newFloat(0), java.newFloat(1.694), java.newFloat(0.007789), java.newFloat(0), java.newFloat(1.631), java.newFloat(0.051), java.newFloat(0), java.newFloat(1.524), java.newFloat(-0.102), java.newFloat(0.04), java.newFloat(1.51), java.newFloat(-0.07278), java.newFloat(0.04029), java.newFloat(1.514), java.newFloat(-0.08254), java.newFloat(0.03528), java.newFloat(1.502), java.newFloat(-0.05013), java.newFloat(0.03479), java.newFloat(1.517), java.newFloat(-0.09269), java.newFloat(0.0116), java.newFloat(1.494), java.newFloat(0.03382), java.newFloat(0.01946), java.newFloat(1.52), java.newFloat(0.03421), java.newFloat(0.02204), java.newFloat(1.494), java.newFloat(0.0272), java.newFloat(0.02734), java.newFloat(1.498), java.newFloat(0.02215), java.newFloat(0.02788), java.newFloat(1.528), java.newFloat(0.03084), java.newFloat(0.0338), java.newFloat(1.503), java.newFloat(0.0124), java.newFloat(0.04008), java.newFloat(1.509), java.newFloat(0.002821), java.newFloat(0.05122), java.newFloat(1.518), java.newFloat(-0.02784), java.newFloat(0.05867), java.newFloat(1.544), java.newFloat(-0.03316), java.newFloat(0.06433), java.newFloat(1.563), java.newFloat(-0.03678), java.newFloat(0.06732), java.newFloat(1.583), java.newFloat(-0.03683), java.newFloat(0.06769), java.newFloat(1.617), java.newFloat(-0.03436), java.newFloat(0.06641), java.newFloat(1.637), java.newFloat(-0.03046), java.newFloat(0.06818), java.newFloat(1.637), java.newFloat(-0.04285), java.newFloat(0.06308), java.newFloat(1.666), java.newFloat(-0.04036), java.newFloat(0.05305), java.newFloat(1.685), java.newFloat(-0.03987), java.newFloat(0.03136), java.newFloat(1.7), java.newFloat(-0.0413), java.newFloat(0.02919), java.newFloat(1.688), java.newFloat(0.0091), java.newFloat(0.05272), java.newFloat(1.674), java.newFloat(-0.001657), java.newFloat(0.06061), java.newFloat(1.66), java.newFloat(-0.0101), java.newFloat(0.05254), java.newFloat(1.541), java.newFloat(-0.01363), java.newFloat(0.04099), java.newFloat(1.527), java.newFloat(0.008832), java.newFloat(0.03528), java.newFloat(1.524), java.newFloat(0.02097), java.newFloat(0.05792), java.newFloat(1.557), java.newFloat(-0.004307), java.newFloat(0.04413), java.newFloat(1.539), java.newFloat(0.0149), java.newFloat(0.03746), java.newFloat(1.539), java.newFloat(0.02656), java.newFloat(0.003407), java.newFloat(1.524), java.newFloat(0.04155), java.newFloat(0.01481), java.newFloat(1.526), java.newFloat(0.03912), java.newFloat(0.005112), java.newFloat(1.532), java.newFloat(0.04358), java.newFloat(0.02438), java.newFloat(1.542), java.newFloat(0.03578), java.newFloat(0.02636), java.newFloat(1.55), java.newFloat(0.03808), java.newFloat(0.006135), java.newFloat(1.55), java.newFloat(0.0545), java.newFloat(0), java.newFloat(1.559), java.newFloat(0.05502), java.newFloat(0.02958), java.newFloat(1.651), java.newFloat(0.03965), java.newFloat(0.04847), java.newFloat(1.643), java.newFloat(0.02895), java.newFloat(0.05856), java.newFloat(1.63), java.newFloat(0.01803), java.newFloat(0.06182), java.newFloat(1.614), java.newFloat(0.008199), java.newFloat(0.06194), java.newFloat(1.6), java.newFloat(0.002668), java.newFloat(0.01489), java.newFloat(1.583), java.newFloat(0.04109), java.newFloat(0.05282), java.newFloat(1.569), java.newFloat(0.02821), java.newFloat(0.05767), java.newFloat(1.58), java.newFloat(0.0184), java.newFloat(0.04643), java.newFloat(1.625), java.newFloat(0.03705), java.newFloat(0.0264), java.newFloat(1.628), java.newFloat(0.04807), java.newFloat(0.0556), java.newFloat(1.609), java.newFloat(0.02579), java.newFloat(0.05467), java.newFloat(1.599), java.newFloat(0.02153), java.newFloat(0.05316), java.newFloat(1.589), java.newFloat(0.0207), java.newFloat(0.03603), java.newFloat(1.58), java.newFloat(0.03536), java.newFloat(0.04597), java.newFloat(1.586), java.newFloat(0.02904), java.newFloat(0.02106), java.newFloat(1.592), java.newFloat(0.03748), java.newFloat(0.03428), java.newFloat(1.595), java.newFloat(0.03294), java.newFloat(0.06808), java.newFloat(1.617), java.newFloat(-0.06112), java.newFloat(0.06714), java.newFloat(1.564), java.newFloat(-0.07003), java.newFloat(0.06993), java.newFloat(1.594), java.newFloat(-0.08238), java.newFloat(0.05324), java.newFloat(1.536), java.newFloat(-0.05922), java.newFloat(0.04904), java.newFloat(1.521), java.newFloat(-0.05132), java.newFloat(0.04758), java.newFloat(1.514), java.newFloat(-0.03107), java.newFloat(0.03539), java.newFloat(1.503), java.newFloat(-0.00093), java.newFloat(0.02999), java.newFloat(1.498), java.newFloat(0.006194), java.newFloat(0.02308), java.newFloat(1.492), java.newFloat(0.01628), java.newFloat(0.01772), java.newFloat(1.488), java.newFloat(0.02135), java.newFloat(0.01378), java.newFloat(1.488), java.newFloat(0.02484), java.newFloat(0.04349), java.newFloat(1.512), java.newFloat(-0.03987), java.newFloat(0.02308), java.newFloat(1.499), java.newFloat(-0.02088), java.newFloat(0), java.newFloat(1.487), java.newFloat(-0.018), java.newFloat(0.04795), java.newFloat(1.531), java.newFloat(-0.08973), java.newFloat(0.05739), java.newFloat(1.555), java.newFloat(-0.0982), java.newFloat(0.06815), java.newFloat(1.622), java.newFloat(-0.107), java.newFloat(0.06872), java.newFloat(1.655), java.newFloat(-0.08466), java.newFloat(0.05233), java.newFloat(1.678), java.newFloat(-0.09642), java.newFloat(0.05334), java.newFloat(1.631), java.newFloat(-0.1239), java.newFloat(0.05011), java.newFloat(1.581), java.newFloat(-0.1193), java.newFloat(0.04359), java.newFloat(1.551), java.newFloat(-0.1067), java.newFloat(0.03839), java.newFloat(1.528), java.newFloat(-0.09652), java.newFloat(0.03399), java.newFloat(1.636), java.newFloat(-0.1304), java.newFloat(0.03224), java.newFloat(1.685), java.newFloat(-0.1024), java.newFloat(0), java.newFloat(1.557), java.newFloat(-0.1126), java.newFloat(0.01864), java.newFloat(1.566), java.newFloat(0.04105), java.newFloat(0.0249), java.newFloat(1.58), java.newFloat(0.0387), java.newFloat(0.02735), java.newFloat(1.596), java.newFloat(0.03552), java.newFloat(0.04317), java.newFloat(1.564), java.newFloat(0.03643), java.newFloat(0.01246), java.newFloat(1.577), java.newFloat(0.04276), java.newFloat(0.04354), java.newFloat(1.59), java.newFloat(0.02822), java.newFloat(0.04557), java.newFloat(1.601), java.newFloat(0.03652), java.newFloat(0.0291), java.newFloat(1.603), java.newFloat(0.04274), java.newFloat(0.01856), java.newFloat(1.6), java.newFloat(0.04349), java.newFloat(0), java.newFloat(1.579), java.newFloat(0.04893), java.newFloat(0.01064), java.newFloat(1.558), java.newFloat(0.04476), java.newFloat(0.005501), java.newFloat(1.578), java.newFloat(0.04574), java.newFloat(0.01405), java.newFloat(1.531), java.newFloat(0.04152), java.newFloat(0.01037), java.newFloat(1.544), java.newFloat(0.04266), java.newFloat(0), java.newFloat(1.515), java.newFloat(0.03836), java.newFloat(0.00797), java.newFloat(1.515), java.newFloat(0.03774), java.newFloat(0.01824), java.newFloat(1.55), java.newFloat(0.04063), java.newFloat(-0.0249), java.newFloat(1.58), java.newFloat(0.0387), java.newFloat(-0.04354), java.newFloat(1.59), java.newFloat(0.02822), java.newFloat(-0.0291), java.newFloat(1.603), java.newFloat(0.04274), java.newFloat(-0.04317), java.newFloat(1.564), java.newFloat(0.03643), java.newFloat(-0.04597), java.newFloat(1.586), java.newFloat(0.02904), java.newFloat(-0.05316), java.newFloat(1.589), java.newFloat(0.0207), java.newFloat(-0.01824), java.newFloat(1.55), java.newFloat(0.04063), java.newFloat(-0.01246), java.newFloat(1.577), java.newFloat(0.04276), java.newFloat(-0.006135), java.newFloat(1.55), java.newFloat(0.0545), java.newFloat(-0.01037), java.newFloat(1.544), java.newFloat(0.04266), java.newFloat(-0.02636), java.newFloat(1.55), java.newFloat(0.03808), java.newFloat(-0.03428), java.newFloat(1.595), java.newFloat(0.03294), java.newFloat(-0.02735), java.newFloat(1.596), java.newFloat(0.03552), java.newFloat(-0.03603), java.newFloat(1.58), java.newFloat(0.03536), java.newFloat(-0.05282), java.newFloat(1.569), java.newFloat(0.02821), java.newFloat(-0.05767), java.newFloat(1.58), java.newFloat(0.0184), java.newFloat(-0.01864), java.newFloat(1.566), java.newFloat(0.04105), java.newFloat(-0.01489), java.newFloat(1.583), java.newFloat(0.04109), java.newFloat(-0.0556), java.newFloat(1.609), java.newFloat(0.02579), java.newFloat(-0.04557), java.newFloat(1.601), java.newFloat(0.03652), java.newFloat(-0.02106), java.newFloat(1.592), java.newFloat(0.03748), java.newFloat(-0.01856), java.newFloat(1.6), java.newFloat(0.04349), java.newFloat(-0.005501), java.newFloat(1.578), java.newFloat(0.04574), java.newFloat(-0.01064), java.newFloat(1.558), java.newFloat(0.04476), java.newFloat(0), java.newFloat(1.592), java.newFloat(0.04694), java.newFloat(-0.06182), java.newFloat(1.614), java.newFloat(0.008199), java.newFloat(-0.05467), java.newFloat(1.599), java.newFloat(0.02153), java.newFloat(-0.06194), java.newFloat(1.6), java.newFloat(0.002668), java.newFloat(-0.05792), java.newFloat(1.557), java.newFloat(-0.004307), java.newFloat(-0.04413), java.newFloat(1.539), java.newFloat(0.0149), java.newFloat(-0.03746), java.newFloat(1.539), java.newFloat(0.02656), java.newFloat(-0.04099), java.newFloat(1.527), java.newFloat(0.008832), java.newFloat(-0.03528), java.newFloat(1.524), java.newFloat(0.02097), java.newFloat(-0.02788), java.newFloat(1.528), java.newFloat(0.03084), java.newFloat(0), java.newFloat(1.53), java.newFloat(0.04236), java.newFloat(-0.005112), java.newFloat(1.532), java.newFloat(0.04358), java.newFloat(-0.01481), java.newFloat(1.526), java.newFloat(0.03912), java.newFloat(-0.01946), java.newFloat(1.52), java.newFloat(0.03421), java.newFloat(0), java.newFloat(1.495), java.newFloat(0.0348), java.newFloat(-0.0116), java.newFloat(1.494), java.newFloat(0.03382), java.newFloat(-0.02734), java.newFloat(1.498), java.newFloat(0.02215), java.newFloat(-0.0338), java.newFloat(1.503), java.newFloat(0.0124), java.newFloat(-0.01772), java.newFloat(1.488), java.newFloat(0.02135), java.newFloat(-0.02308), java.newFloat(1.492), java.newFloat(0.01628), java.newFloat(-0.02999), java.newFloat(1.498), java.newFloat(0.006194), java.newFloat(-0.01405), java.newFloat(1.531), java.newFloat(0.04152), java.newFloat(-0.003407), java.newFloat(1.524), java.newFloat(0.04155), java.newFloat(-0.02204), java.newFloat(1.494), java.newFloat(0.0272), java.newFloat(-0.00797), java.newFloat(1.515), java.newFloat(0.03774), java.newFloat(-0.02438), java.newFloat(1.542), java.newFloat(0.03578), java.newFloat(0), java.newFloat(1.543), java.newFloat(0.04432), java.newFloat(0), java.newFloat(1.555), java.newFloat(0.05692), java.newFloat(0.02295), java.newFloat(1.492), java.newFloat(-0.02694), java.newFloat(0.007322), java.newFloat(1.489), java.newFloat(-0.01677), java.newFloat(-0.05254), java.newFloat(1.541), java.newFloat(-0.01363), java.newFloat(-0.04008), java.newFloat(1.509), java.newFloat(0.002821), java.newFloat(-0.05122), java.newFloat(1.518), java.newFloat(-0.02784), java.newFloat(-0.03539), java.newFloat(1.503), java.newFloat(-0.00093), java.newFloat(-0.01378), java.newFloat(1.488), java.newFloat(0.02484), java.newFloat(-0.02308), java.newFloat(1.499), java.newFloat(-0.02088), java.newFloat(-0.04349), java.newFloat(1.512), java.newFloat(-0.03987), java.newFloat(-0.05867), java.newFloat(1.544), java.newFloat(-0.03316), java.newFloat(-0.06433), java.newFloat(1.563), java.newFloat(-0.03678), java.newFloat(-0.06732), java.newFloat(1.583), java.newFloat(-0.03683), java.newFloat(-0.06769), java.newFloat(1.617), java.newFloat(-0.03436), java.newFloat(-0.05856), java.newFloat(1.63), java.newFloat(0.01803), java.newFloat(-0.04847), java.newFloat(1.643), java.newFloat(0.02895), java.newFloat(-0.04643), java.newFloat(1.625), java.newFloat(0.03705), java.newFloat(-0.02958), java.newFloat(1.651), java.newFloat(0.03965), java.newFloat(-0.0264), java.newFloat(1.628), java.newFloat(0.04807), java.newFloat(-0.02919), java.newFloat(1.688), java.newFloat(0.0091), java.newFloat(-0.05272), java.newFloat(1.674), java.newFloat(-0.001657), java.newFloat(-0.06641), java.newFloat(1.637), java.newFloat(-0.03046), java.newFloat(-0.06061), java.newFloat(1.66), java.newFloat(-0.0101), java.newFloat(-0.03136), java.newFloat(1.7), java.newFloat(-0.0413), java.newFloat(-0.05305), java.newFloat(1.685), java.newFloat(-0.03987), java.newFloat(-0.06308), java.newFloat(1.666), java.newFloat(-0.04036), java.newFloat(-0.06818), java.newFloat(1.637), java.newFloat(-0.04285), java.newFloat(-0.06808), java.newFloat(1.617), java.newFloat(-0.06112), java.newFloat(-0.06993), java.newFloat(1.594), java.newFloat(-0.08238), java.newFloat(-0.06714), java.newFloat(1.564), java.newFloat(-0.07003), java.newFloat(-0.05324), java.newFloat(1.536), java.newFloat(-0.05922), java.newFloat(-0.04904), java.newFloat(1.521), java.newFloat(-0.05132), java.newFloat(-0.04795), java.newFloat(1.531), java.newFloat(-0.08973), java.newFloat(-0.05739), java.newFloat(1.555), java.newFloat(-0.0982), java.newFloat(-0.06815), java.newFloat(1.622), java.newFloat(-0.107), java.newFloat(-0.06872), java.newFloat(1.655), java.newFloat(-0.08466), java.newFloat(-0.05233), java.newFloat(1.678), java.newFloat(-0.09642), java.newFloat(-0.03224), java.newFloat(1.685), java.newFloat(-0.1024), java.newFloat(0), java.newFloat(1.69), java.newFloat(-0.1047), java.newFloat(0), java.newFloat(1.64), java.newFloat(-0.1342), java.newFloat(-0.05334), java.newFloat(1.631), java.newFloat(-0.1239), java.newFloat(-0.05011), java.newFloat(1.581), java.newFloat(-0.1193), java.newFloat(-0.04359), java.newFloat(1.551), java.newFloat(-0.1067), java.newFloat(-0.03839), java.newFloat(1.528), java.newFloat(-0.09652), java.newFloat(-0.03528), java.newFloat(1.502), java.newFloat(-0.05013), java.newFloat(-0.04), java.newFloat(1.51), java.newFloat(-0.07278), java.newFloat(-0.04029), java.newFloat(1.514), java.newFloat(-0.08254), java.newFloat(-0.03479), java.newFloat(1.517), java.newFloat(-0.09269), java.newFloat(-0.02295), java.newFloat(1.492), java.newFloat(-0.02694), java.newFloat(-0.007322), java.newFloat(1.489), java.newFloat(-0.01677), java.newFloat(0), java.newFloat(1.588), java.newFloat(-0.1329), java.newFloat(-0.03399), java.newFloat(1.636), java.newFloat(-0.1304), java.newFloat(-0.04758), java.newFloat(1.514), java.newFloat(-0.03107), java.newFloat(-0.03428), java.newFloat(1.595), java.newFloat(0.03294), java.newFloat(-0.02106), java.newFloat(1.592), java.newFloat(0.03748), java.newFloat(-0.02735), java.newFloat(1.596), java.newFloat(0.03552), java.newFloat(-0.0249), java.newFloat(1.58), java.newFloat(0.0387), java.newFloat(-0.01489), java.newFloat(1.583), java.newFloat(0.04109), java.newFloat(-0.04597), java.newFloat(1.586), java.newFloat(0.02904), java.newFloat(-0.04354), java.newFloat(1.59), java.newFloat(0.02822), java.newFloat(-0.03603), java.newFloat(1.58), java.newFloat(0.03536), java.newFloat(-0.05856), java.newFloat(1.63), java.newFloat(0.01803), java.newFloat(-0.06182), java.newFloat(1.614), java.newFloat(0.008199), java.newFloat(-0.02788), java.newFloat(1.528), java.newFloat(0.03084), java.newFloat(-0.005112), java.newFloat(1.532), java.newFloat(0.04358), java.newFloat(-0.01405), java.newFloat(1.531), java.newFloat(0.04152), java.newFloat(-0.00797), java.newFloat(1.515), java.newFloat(0.03774), java.newFloat(-0.01946), java.newFloat(1.52), java.newFloat(0.03421), java.newFloat(-0.05867), java.newFloat(1.544), java.newFloat(-0.03316), java.newFloat(-0.06433), java.newFloat(1.563), java.newFloat(-0.03678), java.newFloat(-0.06732), java.newFloat(1.583), java.newFloat(-0.03683), java.newFloat(-0.06769), java.newFloat(1.617), java.newFloat(-0.03436), java.newFloat(-0.04847), java.newFloat(1.643), java.newFloat(0.02895), java.newFloat(-0.02958), java.newFloat(1.651), java.newFloat(0.03965), java.newFloat(-0.05324), java.newFloat(1.536), java.newFloat(-0.05922), java.newFloat(-0.04795), java.newFloat(1.531), java.newFloat(-0.08973), java.newFloat(-0.03839), java.newFloat(1.528), java.newFloat(-0.09652), java.newFloat(0.02106), java.newFloat(1.592), java.newFloat(0.03748), java.newFloat(0.01489), java.newFloat(1.583), java.newFloat(0.04109), java.newFloat(0.0249), java.newFloat(1.58), java.newFloat(0.0387), java.newFloat(0.03603), java.newFloat(1.58), java.newFloat(0.03536), java.newFloat(0.04354), java.newFloat(1.59), java.newFloat(0.02822), java.newFloat(0.03428), java.newFloat(1.595), java.newFloat(0.03294), java.newFloat(0.02735), java.newFloat(1.596), java.newFloat(0.03552), java.newFloat(0.02788), java.newFloat(1.528), java.newFloat(0.03084), java.newFloat(0.01405), java.newFloat(1.531), java.newFloat(0.04152), java.newFloat(0), java.newFloat(1.53), java.newFloat(0.04236), java.newFloat(0), java.newFloat(1.515), java.newFloat(0.03836), java.newFloat(0.00797), java.newFloat(1.515), java.newFloat(0.03774), java.newFloat(0.01946), java.newFloat(1.52), java.newFloat(0.03421), java.newFloat(0.005112), java.newFloat(1.532), java.newFloat(0.04358), java.newFloat(0), java.newFloat(1.655), java.newFloat(0.04322), java.newFloat(0.02958), java.newFloat(1.651), java.newFloat(0.03965), java.newFloat(0.04847), java.newFloat(1.643), java.newFloat(0.02895), java.newFloat(0.05856), java.newFloat(1.63), java.newFloat(0.01803), java.newFloat(0.06182), java.newFloat(1.614), java.newFloat(0.008199), java.newFloat(0.06769), java.newFloat(1.617), java.newFloat(-0.03436), java.newFloat(0.06732), java.newFloat(1.583), java.newFloat(-0.03683), java.newFloat(0.06433), java.newFloat(1.563), java.newFloat(-0.03678), java.newFloat(0.05867), java.newFloat(1.544), java.newFloat(-0.03316), java.newFloat(0.05324), java.newFloat(1.536), java.newFloat(-0.05922), java.newFloat(0.04795), java.newFloat(1.531), java.newFloat(-0.08973), java.newFloat(0.03839), java.newFloat(1.528), java.newFloat(-0.09652), java.newFloat(0), java.newFloat(1.524), java.newFloat(-0.102)])))
                                .setColor((new autoclass.Color()).setColor(java.newArray("float", [java.newFloat(0.749), java.newFloat(0.601), java.newFloat(0.462), java.newFloat(0.1735), java.newFloat(0.2602), java.newFloat(0.749), java.newFloat(0.6364), java.newFloat(0.133), java.newFloat(0.1526), java.newFloat(0.4545), java.newFloat(0.2759), java.newFloat(0.1902), java.newFloat(0), java.newFloat(0), java.newFloat(0.502)])))))
                            .addChild((new autoclass.Transform()).setDEF("maskAndSnorkel").setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(1.54), java.newFloat(-0.0409)]))
                              .addChild((new autoclass.Inline()).setDEF("MaskAndSnorkel").setUrl(java.newArray("java.lang.String", ["MaskAndSnorkel.x3d","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Legacy/MaskAndSnorkel.x3d","MaskAndSnorkel.wrl","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Legacy/MaskAndSnorkel.wrl"]))))
                            .addChild((new autoclass.Transform()).setDEF("mouthpiece").setRotation(java.newArray("float", [java.newFloat(0.86), java.newFloat(-0.58), java.newFloat(-0.58), java.newFloat(2.09)])).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(1.54), java.newFloat(-0.0409)]))
                              .addChild((new autoclass.Transform()).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(0.0018), java.newFloat(0)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setDEF("gray").setAmbientIntensity(java.newFloat(0.3)).setDiffuseColor(java.newArray("float", [java.newFloat(0.9), java.newFloat(0.9), java.newFloat(0.89)])).setShininess(java.newFloat(0.1)).setSpecularColor(java.newArray("float", [java.newFloat(0.5), java.newFloat(0.5), java.newFloat(0.5)]))))
                                  .setGeometry((new autoclass.Cylinder()).setHeight(java.newFloat(0.006)).setRadius(java.newFloat(0.015)))))
                              .addChild((new autoclass.Transform())
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setDEF("black").setDiffuseColor(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))))
                                  .setGeometry((new autoclass.Cone()).setBottomRadius(java.newFloat(0.03)).setHeight(java.newFloat(0.01)))))
                              .addChild((new autoclass.Transform()).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-0.015), java.newFloat(0)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setUSE("black")))
                                  .setGeometry((new autoclass.Cylinder()).setHeight(java.newFloat(0.02)).setRadius(java.newFloat(0.03)))))
                              .addChild((new autoclass.Transform()).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-0.025), java.newFloat(0)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setUSE("black")))
                                  .setGeometry((new autoclass.Cylinder()).setHeight(java.newFloat(0.02)).setRadius(java.newFloat(0.015)))))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0.9)])).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-0.04), java.newFloat(0)]))
                                .addChild((new autoclass.Shape()).setDEF("mouthpiecePlastic")
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setDiffuseColor(java.newArray("float", [java.newFloat(1), java.newFloat(1), java.newFloat(1)])).setEmissiveColor(java.newArray("float", [java.newFloat(1), java.newFloat(1), java.newFloat(1)]))))
                                  .setGeometry((new autoclass.Box()).setSize(java.newArray("float", [java.newFloat(0.002), java.newFloat(0.03), java.newFloat(0.018)])))))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(-0.9)])).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-0.04), java.newFloat(0)]))
                                .addChild((new autoclass.Shape()).setUSE("mouthpiecePlastic")))
                              .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(1.57)])).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-0.015), java.newFloat(0.03)]))
                                .addChild((new autoclass.Shape())
                                  .setAppearance((new autoclass.Appearance())
                                    .setMaterial((new autoclass.Material()).setUSE("gray")))
                                  .setGeometry((new autoclass.Cylinder()).setHeight(java.newFloat(0.02)).setRadius(java.newFloat(0.0075)))))
                              .addComments((new autoclass.CommentsBlock("x = 0, y = 50, z = -270")))
                              .addChild((new autoclass.Transform()).setDEF("airTube").setRotation(java.newArray("float", [java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1.57)])).setScale(java.newArray("float", [java.newFloat(0.7), java.newFloat(0.7), java.newFloat(0.7)])).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(-0.02), java.newFloat(0.055)]))
                                .addChild((new autoclass.Transform()).setRotation(java.newArray("float", [java.newFloat(-0.21), java.newFloat(0.21), java.newFloat(-0.95), java.newFloat(4.67)]))
                                  .addChild((new autoclass.Shape())
                                    .setAppearance((new autoclass.Appearance())
                                      .setMaterial((new autoclass.Material()).setDiffuseColor(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)]))))
                                    .setGeometry((new autoclass.Extrusion()).setCrossSection(java.newArray("float", [java.newFloat(0), java.newFloat(0.013), java.newFloat(0.00494), java.newFloat(0.01196), java.newFloat(0.00923), java.newFloat(0.00923), java.newFloat(0.01196), java.newFloat(0.00494), java.newFloat(0.013), java.newFloat(0), java.newFloat(0.01196), java.newFloat(-0.00494), java.newFloat(0.00923), java.newFloat(-0.00923), java.newFloat(0.00494), java.newFloat(-0.01196), java.newFloat(0), java.newFloat(0.013), java.newFloat(-0.00494), java.newFloat(-0.01196), java.newFloat(-0.00923), java.newFloat(-0.00923), java.newFloat(-0.01196), java.newFloat(-0.00494), java.newFloat(-0.013), java.newFloat(0), java.newFloat(-0.01196), java.newFloat(0.00494), java.newFloat(-0.00923), java.newFloat(0.00923), java.newFloat(-0.00494), java.newFloat(0.01196), java.newFloat(0), java.newFloat(0.013)])).setSpine(java.newArray("float", [java.newFloat(0.005), java.newFloat(-0.03), java.newFloat(0), java.newFloat(-0.01), java.newFloat(0.02), java.newFloat(0), java.newFloat(-0.03), java.newFloat(0.08), java.newFloat(0), java.newFloat(-0.05), java.newFloat(0.14), java.newFloat(0), java.newFloat(-0.08), java.newFloat(0.19), java.newFloat(0), java.newFloat(-0.1), java.newFloat(0.22), java.newFloat(0), java.newFloat(-0.12), java.newFloat(0.25), java.newFloat(0), java.newFloat(-0.15), java.newFloat(0.27), java.newFloat(0), java.newFloat(-0.18), java.newFloat(0.28), java.newFloat(0), java.newFloat(-0.21), java.newFloat(0.29), java.newFloat(0), java.newFloat(-0.26), java.newFloat(0.28), java.newFloat(0), java.newFloat(-0.28), java.newFloat(0.26), java.newFloat(0), java.newFloat(-0.305), java.newFloat(0.23), java.newFloat(0), java.newFloat(-0.32), java.newFloat(0.2), java.newFloat(0), java.newFloat(-0.34), java.newFloat(0.16), java.newFloat(0), java.newFloat(-0.35), java.newFloat(0.12), java.newFloat(0), java.newFloat(-0.37), java.newFloat(0.04), java.newFloat(0), java.newFloat(-0.385), java.newFloat(0), java.newFloat(0), java.newFloat(-0.39), java.newFloat(-0.07), java.newFloat(0)])))))))
                            .addChild((new autoclass.Transform()).setDEF("Bubbles").setScale(java.newArray("float", [java.newFloat(0.35), java.newFloat(0.35), java.newFloat(0.35)])).setTranslation(java.newArray("float", [java.newFloat(0), java.newFloat(1.54), java.newFloat(-0.0409)]))
                              .addChild((new autoclass.Inline()).setDEF("bubbles").setUrl(java.newArray("java.lang.String", ["Bubbles.x3d","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Legacy/Bubbles.x3d","Bubbles.wrl","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Legacy/Bubbles.wrl"])))))))))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_humanoid_root"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_sacroiliac"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_vl1"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_vc4"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_skullbase"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_l_ankle"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_r_ankle"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_l_elbow"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_r_elbow"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_l_hip"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_r_hip"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_l_knee"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_r_knee"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_l_shoulder"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_r_shoulder"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_l_wrist"))
                  .addJoints((new autoclass.HAnimJoint()).setUSE("hanim_r_wrist"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_pelvis"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_l1"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_c4"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_skull"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_l_calf"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_r_calf"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_l_forearm"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_r_forearm"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_l_hand"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_r_hand"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_l_hindfoot"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_r_hindfoot"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_l_thigh"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_r_thigh"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_l_upperarm"))
                  .addSegments((new autoclass.HAnimSegment()).setUSE("hanim_r_upperarm")))))))
        .addChild((new autoclass.Script()).setDEF("finWarpScript")
          .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("set_rotationLeft").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY))
          .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("set_rotationRight").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY))
          .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("finWarpLeft").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
          .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("finWarpRight").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
          .setSourceCode("ecmascript:\n"+
"function set_rotationLeft(rotationValue, timeStamp)\n"+
"{\n"+
"	if (rotationValue[0] <= 0)\n"+
"	{\n"+
"		finWarpLeft = false;\n"+
"	}\n"+
"	else\n"+
"	{\n"+
"		finWarpLeft = true;\n"+
"	}\n"+
"//	print ('Left  rotationValue[0] ' + rotationValue[0] + ', finWarpLeft=' + finWarpLeft);\n"+
"}\n"+
"\n"+
"function set_rotationRight(rotationValue, timeStamp)\n"+
"{\n"+
"	if (rotationValue[0] <= 0)\n"+
"	{\n"+
"		finWarpRight = false;\n"+
"	}\n"+
"	else\n"+
"	{\n"+
"		finWarpRight = true;\n"+
"	}\n"+
"//	print ('Right rotationValue[0] ' + rotationValue[0] + ', finWarpRight=' + finWarpRight);\n"+
"}"))
        .addComments((new autoclass.CommentsBlock("Fins animation")))
        .addChild((new autoclass.ProximitySensor()).setDEF("FinTriggerProximitySensor").setSize(java.newArray("float", [java.newFloat(15), java.newFloat(15), java.newFloat(15)])))
        .addChild((new autoclass.TimeSensor()).setDEF("FinClock").setCycleInterval(7).setLoop(true))
        .addChild((new autoclass.Group())
          .addChild((new autoclass.Script()).setDEF("FinScript")
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFVEC3F).setName("keyValueRight").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFVEC3F).setName("keyValueLeft").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFFLOAT).setName("set_fraction").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("finL").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("finR").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("finWarpL").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setValue("0"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("finWarpR").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setValue("0"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("traceEnabled").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setValue("false"))
            .setSourceCode("ecmascript:\n"+
"function finL(value, timeStamp)\n"+
"{\n"+
"	if (value == 0)\n"+
"	{\n"+
"		finWarpL = 0;\n"+
"	}\n"+
"	else\n"+
"	{\n"+
"		finWarpL = 1;\n"+
"	}\n"+
"	//print ('finWarpL' + finWarpL);\n"+
"}\n"+
"\n"+
"function finR(value, timeStamp)\n"+
"{\n"+
"	if (value == 0)\n"+
"	{\n"+
"		finWarpR = 0;\n"+
"	}\n"+
"	else\n"+
"	{\n"+
"		finWarpR = 1;\n"+
"	}\n"+
"	//print ('finWarpR' + finWarpR);\n"+
"}\n"+
"function finMove(fraction, timeStamp)\n"+
" {\n"+
"	if (finWarpL == 1)\n"+
"	{\n"+
"		// level 3 (warp outside) Left\n"+
"		kVL7 = new SFVec3f(1.25, 0, 25);\n"+
"		kVL8 = new SFVec3f(2.5, 0, 30);\n"+
" 		kVL9 = new SFVec3f(3.25, 0, 34);\n"+
"	}\n"+
"	else\n"+
"	{\n"+
"		// level -2 (warp inside) Left\n"+
"		kVL7 = new SFVec3f(-1.25, 0, 25);\n"+
"		kVL8 = new SFVec3f(-2.5, 0, 30);\n"+
" 		kVL9 = new SFVec3f(-3.25, 0, 34);\n"+
"	}\n"+
"\n"+
"	if (finWarpR == 0)\n"+
"	{\n"+
"		// level  1 (warp outside ) Right\n"+
"		kVR7 = new SFVec3f(1.25, 0, 25);\n"+
"		kVR8 = new SFVec3f(2.5, 0, 30);\n"+
" 		kVR9 = new SFVec3f(3.25, 0, 34);\n"+
"\n"+
"	}\n"+
"	else\n"+
"	{\n"+
"		// level  -2 ( warp inside) Right\n"+
"		kVR7 = new SFVec3f(-1.25, 0, 25);\n"+
"		kVR8 = new SFVec3f(-2.5, 0, 30);\n"+
" 		kVR9 = new SFVec3f(-3.25, 0, 34);\n"+
"	}\n"+
"\n"+
"	// Left Fin (fixed spine)\n"+
"	kVL1 = new SFVec3f(0, 0, 1);\n"+
"	kVL2 = new SFVec3f(0, 0, 5);\n"+
"	kVL3 = new SFVec3f(0, 0, 8);\n"+
"	kVL4 = new SFVec3f(0, 0, 12);\n"+
"	kVL5 = new SFVec3f(0, 0, 15);\n"+
"	kVL6 = new SFVec3f(0, 0, 18);\n"+
"	keyValueLeft = new MFVec3f(kVL1, kVL2, kVL3, kVL4, kVL5, kVL6, kVL7, kVL8, kVL9);\n"+
"\n"+
"	// Right Fin (fixed spine)\n"+
"	kVR1 = new SFVec3f(0, 0, 1);\n"+
"	kVR2 = new SFVec3f(0, 0, 5);\n"+
"	kVR3 = new SFVec3f(0, 0, 8);\n"+
"	kVR4 = new SFVec3f(0, 0, 12);\n"+
"	kVR5 = new SFVec3f(0, 0, 15);\n"+
"	kVR6 = new SFVec3f(0, 0, 18);\n"+
"	keyValueRight = new MFVec3f(kVR1, kVR2, kVR3, kVR4, kVR5, kVR6, kVR7, kVR8, kVR9);\n"+
"\n"+
"	//tracePrint ('keyValueLeft =' + keyValueLeft);\n"+
"	//tracePrint ('keyValueRight=' + keyValueRight);\n"+
"}\n"+
"\n"+
"function set_fraction (value, timeStamp)\n"+
"{\n"+
"	finMove(value);\n"+
"	//tracePrint('time fraction =' + value);\n"+
"}\n"+
"\n"+
"function tracePrint (outputString)\n"+
"{\n"+
"	if (traceEnabled) Browser.print ('[Fin Move]' + outputString);\n"+
"}"))
          .addChild((new autoclass.ROUTE()).setFromField("finWarpLeft").setFromNode("finWarpScript").setToField("finL").setToNode("FinScript"))
          .addChild((new autoclass.ROUTE()).setFromField("finWarpRight").setFromNode("finWarpScript").setToField("finR").setToNode("FinScript"))
          .addChild((new autoclass.ROUTE()).setFromField("isActive").setFromNode("FinTriggerProximitySensor").setToField("enabled").setToNode("FinClock"))
          .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("FinClock").setToField("set_fraction").setToNode("FinScript"))
          .addChild((new autoclass.ROUTE()).setFromField("keyValueRight").setFromNode("FinScript").setToField("set_spine").setToNode("FinExtrusionRight"))
          .addChild((new autoclass.ROUTE()).setFromField("keyValueLeft").setFromNode("FinScript").setToField("set_spine").setToNode("FinExtrusionLeft")))
        .addChild((new autoclass.NavigationInfo()).setAvatarSize(java.newArray("float", [java.newFloat(0.15), java.newFloat(1.53), java.newFloat(0.75)])).setSpeed(java.newFloat(0.5)))
        .addChild((new autoclass.WorldInfo()).setInfo(java.newArray("java.lang.String", ["Copyright (c) 1997. 3Name3D / Yglesias Wallock Divekar, Inc."])).setTitle("Nancy - an HAnim compliant avatar by 3Name3D"))
        .addChild((new autoclass.Group()).setDEF("Animations")
          .addChild((new autoclass.Group()).setDEF("Dive_Animation")
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ankle_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.125), java.newFloat(0.2083), java.newFloat(0.375), java.newFloat(0.4583), java.newFloat(0.5), java.newFloat(0.6667), java.newFloat(0.75), java.newFloat(0.7917), java.newFloat(0.9167), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8509), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8509), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8509), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.86001)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_knee_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.125), java.newFloat(0.2083), java.newFloat(0.375), java.newFloat(0.5), java.newFloat(0.6667), java.newFloat(0.9167), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8573), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5351), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1756), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1194), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3153), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.09354), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.08558), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8573)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_hip_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.125), java.newFloat(0.2083), java.newFloat(0.2917), java.newFloat(0.5), java.newFloat(0.7917), java.newFloat(0.9167), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(-0.5831), java.newFloat(0.03511), java.newFloat(0.8116), java.newFloat(0.1481), java.newFloat(-0.995), java.newFloat(0.02296), java.newFloat(0.09674), java.newFloat(0.4683), java.newFloat(-1), java.newFloat(0.00192), java.newFloat(0.007964), java.newFloat(0.4732), java.newFloat(-0.998), java.newFloat(-0.0158), java.newFloat(-0.06102), java.newFloat(0.5079), java.newFloat(-0.9131), java.newFloat(-0.06243), java.newFloat(-0.403), java.newFloat(0.3361), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.2571), java.newFloat(0.9891), java.newFloat(-0.02805), java.newFloat(0.1444), java.newFloat(0.3879), java.newFloat(-0.5831), java.newFloat(0.03511), java.newFloat(0.8116), java.newFloat(0.1481)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ankle_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.125), java.newFloat(0.2083), java.newFloat(0.375), java.newFloat(0.4583), java.newFloat(0.5), java.newFloat(0.6667), java.newFloat(0.75), java.newFloat(0.7917), java.newFloat(0.9167), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6509), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6509), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6509), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6509), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6001)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_knee_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.2083), java.newFloat(0.375), java.newFloat(0.5), java.newFloat(0.6667), java.newFloat(0.7917), java.newFloat(0.9167), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3226), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1556), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.08678), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8751), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(1.131), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.09961), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3942), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3226)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_hip_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.25), java.newFloat(0.375), java.newFloat(0.6667), java.newFloat(0.7917), java.newFloat(0.9167), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(-0.873), java.newFloat(0.06094), java.newFloat(0.484), java.newFloat(0.2865), java.newFloat(0.9963), java.newFloat(-0.01057), java.newFloat(0.08481), java.newFloat(0.2488), java.newFloat(0.9965), java.newFloat(0.01591), java.newFloat(-0.08222), java.newFloat(0.3836), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5518), java.newFloat(-0.9964), java.newFloat(0.02231), java.newFloat(0.0817), java.newFloat(0.5351), java.newFloat(-0.9809), java.newFloat(0.04912), java.newFloat(0.1881), java.newFloat(0.5204), java.newFloat(-0.873), java.newFloat(0.06094), java.newFloat(0.484), java.newFloat(0.2865)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("lower_body_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.5), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(-1), java.newFloat(0.1056), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0.09018), java.newFloat(0), java.newFloat(0), java.newFloat(-1), java.newFloat(0.1056)])))
            .addComments((new autoclass.CommentsBlock("")))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_wrist_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-0.0585279), java.newFloat(0.983903), java.newFloat(-0.168849), java.newFloat(1.85956), java.newFloat(-0.0585279), java.newFloat(0.983903), java.newFloat(-0.168849), java.newFloat(1.85956), java.newFloat(-0.00222418), java.newFloat(0.99801), java.newFloat(-0.0630095), java.newFloat(1.46072), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.497349), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_elbow_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.04151), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.04151), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5855), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5852), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_shoulder_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.45), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.9992), java.newFloat(0.02042), java.newFloat(0.03558), java.newFloat(7.2), java.newFloat(0.9989), java.newFloat(-0.04623), java.newFloat(0.005159), java.newFloat(4.079), java.newFloat(-0.8687), java.newFloat(-0.2525), java.newFloat(-0.4261), java.newFloat(1.501), java.newFloat(-0.941), java.newFloat(-0.2893), java.newFloat(-0.1754), java.newFloat(0.4788), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_wrist_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.067), java.newFloat(0.98), java.newFloat(-0.128), java.newFloat(4.15), java.newFloat(0.067), java.newFloat(0.98), java.newFloat(-0.128), java.newFloat(4.15), java.newFloat(0.067), java.newFloat(0.98), java.newFloat(-0.128), java.newFloat(4.15), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_elbow_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1229), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1229), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5976), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3917), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_shoulder_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.25), java.newFloat(0.375), java.newFloat(0.6667), java.newFloat(0.7917), java.newFloat(0.9167), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0.1), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0.2), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0.2), java.newFloat(0.86), java.newFloat(0.25), java.newFloat(0.42), java.newFloat(0.5), java.newFloat(0.86), java.newFloat(0.25), java.newFloat(0.42), java.newFloat(0.8), java.newFloat(0.86), java.newFloat(0.25), java.newFloat(0.42), java.newFloat(0.4), java.newFloat(0.86), java.newFloat(0.25), java.newFloat(0.42), java.newFloat(0.2)])))
            .addComments((new autoclass.CommentsBlock("")))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("head_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.3), java.newFloat(0.32), java.newFloat(0.4), java.newFloat(0.45), java.newFloat(0.6), java.newFloat(0.65), java.newFloat(0.7), java.newFloat(0.75), java.newFloat(0.85), java.newFloat(0.9), java.newFloat(0.95), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.999), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.99), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.99), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(1)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("neck_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("upper_body_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.2083), java.newFloat(0.375), java.newFloat(0.75), java.newFloat(0.8333), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.0826), java.newFloat(-0.01972), java.newFloat(-0.5974), java.newFloat(0.8017), java.newFloat(0.08231), java.newFloat(0.009296), java.newFloat(-0.9648), java.newFloat(0.2627), java.newFloat(0.1734), java.newFloat(-0.01238), java.newFloat(0.9549), java.newFloat(-0.2968), java.newFloat(0.08732), java.newFloat(-0.008125), java.newFloat(0.9691), java.newFloat(-0.2463), java.newFloat(0.158), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.0826)])))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("whole_body_RotationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)])))
            .addChild((new autoclass.PositionInterpolator()).setDEF("whole_body_TranslationInterpolator_BasicDive").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.04167), java.newFloat(0.125), java.newFloat(0.1667), java.newFloat(0.2083), java.newFloat(0.25), java.newFloat(0.2917), java.newFloat(0.375), java.newFloat(0.4583), java.newFloat(0.5), java.newFloat(0.5417), java.newFloat(0.5833), java.newFloat(0.625), java.newFloat(0.7083), java.newFloat(0.75), java.newFloat(0.7917), java.newFloat(0.875), java.newFloat(0.9167), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(-0.00928), java.newFloat(0), java.newFloat(0), java.newFloat(-0.003858), java.newFloat(0), java.newFloat(0), java.newFloat(-0.008847), java.newFloat(0), java.newFloat(0), java.newFloat(-0.01486), java.newFloat(0), java.newFloat(0), java.newFloat(-0.02641), java.newFloat(0), java.newFloat(0), java.newFloat(-0.03934), java.newFloat(0), java.newFloat(0), java.newFloat(-0.0502), java.newFloat(0), java.newFloat(0), java.newFloat(-0.07469), java.newFloat(0), java.newFloat(0), java.newFloat(-0.02732), java.newFloat(0), java.newFloat(0), java.newFloat(-0.01608), java.newFloat(0), java.newFloat(0), java.newFloat(-0.01129), java.newFloat(0), java.newFloat(0), java.newFloat(-0.005819), java.newFloat(0), java.newFloat(0), java.newFloat(-0.002004), java.newFloat(0), java.newFloat(0), java.newFloat(-0.002579), java.newFloat(0), java.newFloat(0), java.newFloat(-0.0143), java.newFloat(0), java.newFloat(0), java.newFloat(-0.03799), java.newFloat(0), java.newFloat(0), java.newFloat(-0.05648), java.newFloat(0), java.newFloat(0), java.newFloat(-0.045), java.newFloat(0), java.newFloat(0), java.newFloat(-0.00928), java.newFloat(0)])))
            .addChild((new autoclass.TimeSensor()).setDEF("Dive_Time").setCycleInterval(7).setLoop(true).setStartTime(-1))
            .addChild((new autoclass.ProximitySensor()).setDEF("TriggerProximitySensor").setSize(java.newArray("float", [java.newFloat(50), java.newFloat(50), java.newFloat(50)])))))
        .addChild((new autoclass.ROUTE()).setFromField("enterTime").setFromNode("TriggerProximitySensor").setToField("startTime").setToNode("Dive_Time"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("r_ankle_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("r_knee_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("r_hip_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("l_ankle_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("l_knee_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("l_hip_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("lower_body_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("head_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("neck_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("upper_body_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("whole_body_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("whole_body_TranslationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("r_ankle_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_r_ankle"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("r_knee_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_r_knee"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("r_hip_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_r_hip"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("l_ankle_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_l_ankle"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("l_knee_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_l_knee"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("l_hip_RotationInterpolator_BasicDive").setToField("set_rotationLeft").setToNode("finWarpScript"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("l_hip_RotationInterpolator_BasicDive").setToField("set_rotationRight").setToNode("finWarpScript"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("l_hip_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_l_hip"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("lower_body_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_sacroiliac"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("head_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_skullbase"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("neck_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_vc4"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("upper_body_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_vl1"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("whole_body_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_humanoid_root"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("whole_body_TranslationInterpolator_BasicDive").setToField("set_translation").setToNode("hanim_humanoid_root"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("r_wrist_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("r_elbow_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("r_shoulder_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("l_wrist_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("l_elbow_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("Dive_Time").setToField("set_fraction").setToNode("l_shoulder_RotationInterpolator_BasicDive"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("r_wrist_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_r_wrist"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("r_elbow_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_r_elbow"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("r_shoulder_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_r_shoulder"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("l_wrist_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_l_wrist"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("l_elbow_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_l_elbow"))
        .addChild((new autoclass.ROUTE()).setFromField("value_changed").setFromNode("l_shoulder_RotationInterpolator_BasicDive").setToField("set_rotation").setToNode("hanim_l_shoulder")))      ;
    X3D0.toFileX3D("../data/NancyDiving.new.x3d");
    process.exit(0);
