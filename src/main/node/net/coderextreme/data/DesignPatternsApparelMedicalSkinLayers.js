import java from 'node-java';
import util from 'util';
import autoclass from '../../../X3Dautoclass.js';
var ConfigurationProperties = autoclass.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
      var X3D0 =  (new autoclass.X3D()).setProfile("Immersive").setVersion("4.0")
      .setHead(new autoclass.head()
        .addMeta(new autoclass.meta().setName("title").setContent("DesignPatternsApparelMedicalSkinLayers.x3d"))
        .addMeta(new autoclass.meta().setName("description").setContent("Design patterns for skin and apparel using HAnim2 standard in X3D4"))
        .addMeta(new autoclass.meta().setName("creator").setContent("Don Brutzman"))
        .addMeta(new autoclass.meta().setName("creator").setContent("Joe D. Williams"))
        .addMeta(new autoclass.meta().setName("creator").setContent("Dick Puk"))
        .addMeta(new autoclass.meta().setName("created").setContent("23 December 2022"))
        .addMeta(new autoclass.meta().setName("modified").setContent("2 July 2023"))
        .addMeta(new autoclass.meta().setName("reference").setContent("DesignPatternsApparelVariations.txt"))
        .addMeta(new autoclass.meta().setName("reference").setContent("HAnim2 Part 1, HAnim architecture, 4.3 Humanoid object https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/concepts.html#HumanoidObject"))
        .addMeta(new autoclass.meta().setName("reference").setContent("HAnim2 Part 1, HAnim architecture, E.4 Multiple humanoids per file https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/Guidelines.html#MultipleHumanoidsPerFile"))
        .addMeta(new autoclass.meta().setName("reference").setContent("X3D4 Architecture, clause 26 HAnim component, 26.3.2 HAnimHumanoid https://www.web3d.org/specifications/X3Dv4Draft/ISO-IEC19775-1v4-DIS/Part01/components/hanim.html#HAnimHumanoid"))
        .addMeta(new autoclass.meta().setName("warning").setContent("Under development. This template example does not produce renderable HAnim models."))
        .addMeta(new autoclass.meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Skin/DesignPatternsApparelMedicalSkinLayers.x3d"))
        .addMeta(new autoclass.meta().setName("generator").setContent("X3D-Edit 4.0, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new autoclass.meta().setName("license").setContent("../license.html")))
      .setScene(new autoclass.Scene()
        .addChild(new autoclass.WorldInfo().setTitle("HAnimHumanoid skin design patterns for apparel, medical"))
        .addChild(new autoclass.Background().setSkyColor(java.newArray("float", [java.newFloat(0), java.newFloat(0.6), java.newFloat(0.6)])))
        .addChild(new autoclass.Group().setDEF("MultipleHumanoids")
          .setMetadata(new autoclass.MetadataString().setName("HAnimArchitecture").setReference("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/Guidelines.html#MultipleHumanoidsPerFile").setValue(java.newArray("java.lang.String", ["E.4 Multiple humanoids per file"])))
          .addComments((new autoclass.CommentsBlock("==============================")))
          .addChild(new autoclass.HAnimHumanoid("MultipleHumanoids").setName("SimpleSkeleton").setDEF("a_SimpleSkeleton").setVersion("2.0")
            .addSkeleton(new autoclass.HAnimJoint("a_SimpleSkeleton").setName("humanoid_root").setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setContainerFieldOverride("skeleton")
              .addChild(new autoclass.HAnimSegment().setName("sacrum")
                .addChild(new autoclass.Shape().setDEF("JointVisualization"))
                .addChild(new autoclass.Shape().setDEF("SegmentVisualization"))
                .addChild(new autoclass.HAnimSite().setName("feature01_tip").setDEF("a_feature01_tip")
                  .addChild(new autoclass.Shape().setDEF("SiteVisualization"))))))
          .addComments((new autoclass.CommentsBlock("==============================")))
          .addChild(new autoclass.HAnimHumanoid("MultipleHumanoids").setName("SimpleSkeletonMesh").setDEF("b_SimpleSkeletonMesh").setVersion("2.0")
            .addSkeleton(new autoclass.HAnimJoint("b_SimpleSkeletonMesh").setName("humanoid_root").setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setContainerFieldOverride("skeleton")
              .addChild(new autoclass.HAnimSegment().setName("sacrum")
                .addChild(new autoclass.Shape()
                  .setGeometry(new autoclass.IndexedFaceSet().setDEF("SegmentBoneMesh"))))))
          .addComments((new autoclass.CommentsBlock("==============================")))
          .addChild(new autoclass.HAnimHumanoid("MultipleHumanoids").setName("SkinIndexedGeometry").setDEF("c_SkinIndexedGeometry").setVersion("2.0")
            .addSkeleton(new autoclass.HAnimJoint("c_SkinIndexedGeometry").setName("humanoid_root").setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setContainerFieldOverride("skeleton")
              .addChild(new autoclass.HAnimSegment().setName("sacrum")))
            .addSkin(new autoclass.IndexedFaceSet().setDEF("SkinMeshIFS").setContainerFieldOverride("skin")))
          .addComments((new autoclass.CommentsBlock("==============================")))
          .addChild(new autoclass.HAnimHumanoid("MultipleHumanoids").setName("SkinShapeIndexedGeometry").setDEF("d_SkinShapeIndexedGeometry").setVersion("2.0")
            .addSkeleton(new autoclass.HAnimJoint("d_SkinShapeIndexedGeometry").setName("humanoid_root").setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setContainerFieldOverride("skeleton")
              .addChild(new autoclass.HAnimSegment().setName("sacrum")))
            .addSkin(new autoclass.Shape().setContainerFieldOverride("skin")
              .setGeometry(new autoclass.IndexedFaceSet().setUSE("SkinMeshIFS"))))
          .addComments((new autoclass.CommentsBlock("==============================")))
          .addChild(new autoclass.HAnimHumanoid("MultipleHumanoids").setName("SkinSwitchShapeIndexedGeometry").setDEF("e_SkinSwitchShapeIndexedGeometry").setVersion("2.0")
            .addSkeleton(new autoclass.HAnimJoint("e_SkinSwitchShapeIndexedGeometry").setName("humanoid_root").setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setContainerFieldOverride("skeleton")
              .addChild(new autoclass.HAnimSegment().setName("sacrum")))
            .addComments((new autoclass.CommentsBlock("TODO show X3D4.0 addition of <Switch DEF='AlternativeSkins' containerField='skin'>")))
            .addSkin(new autoclass.Shape().setContainerFieldOverride("skin")
              .setGeometry(new autoclass.IndexedFaceSet().setDEF("IndexedSkinMeshIFS")
                .setCoord(new autoclass.Coordinate().setDEF("SkinMeshCoordinate")))))
          .addComments((new autoclass.CommentsBlock("similarly for LOD")))
          .addComments((new autoclass.CommentsBlock("==============================")))
          .addChild(new autoclass.HAnimHumanoid("MultipleHumanoids").setName("SynthesizedSkinShapeIndexedTwoPartGeometry").setDEF("f_SynthesizedSkinShapeIndexedTwoPartGeometry").setVersion("2.0")
            .addSkeleton(new autoclass.HAnimJoint("f_SynthesizedSkinShapeIndexedTwoPartGeometry").setName("humanoid_root").setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setContainerFieldOverride("skeleton")
              .addChild(new autoclass.HAnimSegment().setName("sacrum")))
            .addSkin(new autoclass.Shape().setContainerFieldOverride("skin")
              .setGeometry(new autoclass.IndexedFaceSet().setDEF("TwoPartIndexedSkinMesh")
                .setCoord(new autoclass.Coordinate().setDEF("TwoPartSkinMesh")))))
          .addComments((new autoclass.CommentsBlock("==============================")))
          .addChild(new autoclass.HAnimHumanoid("MultipleHumanoids").setName("ApparelSkinIndexedGeometryMultipleShapes").setDEF("g_ApparelSkinIndexedGeometryMultipleShapes").setVersion("2.0")
            .addSkeleton(new autoclass.HAnimJoint("g_ApparelSkinIndexedGeometryMultipleShapes").setName("humanoid_root").setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setContainerFieldOverride("skeleton")
              .addChild(new autoclass.HAnimSegment().setName("sacrum")))
            .addSkin(new autoclass.Shape().setContainerFieldOverride("skin"))
            .addComments((new autoclass.CommentsBlock("allow multiple Shape nodes with containerField='apparel', one for each layer of clothing")))
            .addComments((new autoclass.CommentsBlock("TODO proposed for X3D4.1 <Shape containerField='apparel'/>"))))
          .addComments((new autoclass.CommentsBlock("==============================")))
          .addChild(new autoclass.HAnimHumanoid("MultipleHumanoids").setName("AnatomySkinIndexedGeometryMultipleShapes").setDEF("h_AnatomySkinIndexedGeometryMultipleShapes").setVersion("2.0")
            .addSkeleton(new autoclass.HAnimJoint("h_AnatomySkinIndexedGeometryMultipleShapes").setName("humanoid_root").setUlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setLlimit(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0)])).setContainerFieldOverride("skeleton")
              .addChild(new autoclass.HAnimSegment().setName("sacrum")))
            .addComments((new autoclass.CommentsBlock("allow multiple Shape nodes with containerField='skin', one for each layer of skin")))
            .addSkin(new autoclass.Shape().setContainerFieldOverride("skin")))
          .addComments((new autoclass.CommentsBlock("=============================="))))
        .addChild(new autoclass.Viewpoint().setDEF("ViewHelpText").setDescription("Select text to see website").setPosition(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(12)])))
        .addComments((new autoclass.CommentsBlock("Selectable Text design pattern has transparent Box and TouchSensor description as a tooltip")))
        .addChild(new autoclass.Anchor().setDescription("DesignPatternsApparelMedicalSkinLayers.x3d explores potential apparel approaches").setParameter(java.newArray("java.lang.String", ["target=blank"])).setUrl(java.newArray("java.lang.String", ["https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Skin/DesignPatternsApparelMedicalSkinLayersIndex.html"]))
          .addChild(new autoclass.Shape()
            .addComments((new autoclass.CommentsBlock("TODO adjust Text string and Box size, then set Material transparency='1'")))
            .setGeometry(new autoclass.Text().setString(java.newArray("java.lang.String", ["DesignPatternsApparelMedicalSkinLayers.x3d","","explores potential apparel approaches"]))
              .setFontStyle(new autoclass.FontStyle().setFamily(java.newArray("java.lang.String", ["SANS"])).setJustify(java.newArray("java.lang.String", ["MIDDLE","MIDDLE"])).setSize(java.newFloat(0.6)).setStyle("BOLD")))
            .setAppearance(new autoclass.Appearance()
              .setMaterial(new autoclass.Material().setDiffuseColor(java.newArray("float", [java.newFloat(0.9), java.newFloat(0.9), java.newFloat(0.9)])))))
          .addChild(new autoclass.Shape()
            .addComments((new autoclass.CommentsBlock("Author TODO: to adjust transparent Box as text-selection assist, set width and height to match size, then set transparency='1' to make invisible.")))
            .setGeometry(new autoclass.Box().setSize(java.newArray("float", [java.newFloat(11), java.newFloat(2), java.newFloat(0.001)])))
            .setAppearance(new autoclass.Appearance()
              .setMaterial(new autoclass.Material().setTransparency(java.newFloat(1)))))))      ;
    X3D0.toFileX3D("../data/DesignPatternsApparelMedicalSkinLayers.new.node.x3d");
    X3D0.toFileJSON("../data/DesignPatternsApparelMedicalSkinLayers.new.node.json");
    process.exit(0);
