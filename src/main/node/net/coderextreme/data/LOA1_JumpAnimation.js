var java = require('java');
var util = require('util');
java.asyncOptions = {
  asyncSuffix: undefined,     // Don't generate node-style methods taking callbacks
  syncSuffix: "",              // Sync methods use the base name(!!)
  promiseSuffix: "Promise",   // Generate methods returning promises, using the suffix Promise.
  promisify: util.promisify, // Needs Node.js version 8 or greater, see comment below
  ifReadOnlySuffix: "_alt"
};
var autoclass = require('../../../X3Dautoclass');
var ConfigurationProperties = autoclass.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
      var X3D0 =  (new autoclass.X3D()).setProfile("Immersive").setVersion("3.3")
      .setHead((new autoclass.head())
        .addMeta((new autoclass.meta()).setName("title").setContent("LOA1_JumpAnimation.x3d"))
        .addMeta((new autoclass.meta()).setName("description").setContent("Humanoid animation prototype reusable by any Humanoid."))
        .addMeta((new autoclass.meta()).setName("creator").setContent("Cindy Ballreich cindy@ballreich.net 3Name3D"))
        .addMeta((new autoclass.meta()).setName("rights").setContent("1997 3Name3D / Yglesias, Wallock, Divekar, Inc., all rights reserved."))
        .addMeta((new autoclass.meta()).setName("translator").setContent("Scott Tufts"))
        .addMeta((new autoclass.meta()).setName("translated").setContent("1 December 2001"))
        .addMeta((new autoclass.meta()).setName("modified").setContent("23 May 2020"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("http://www.ballreich.net/vrml/HAnim/nancy_HAnim.wrl"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("http://www.HAnim.org"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("http://HAnim.org/Models"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("http://HAnim.org/Nodes"))
        .addMeta((new autoclass.meta()).setName("subject").setContent("InterchangableActorsViaDynamicRouting Nancy jump Animation HAnim 2001"))
        .addMeta((new autoclass.meta()).setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/LOA1_JumpAnimation.x3d"))
        .addMeta((new autoclass.meta()).setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta((new autoclass.meta()).setName("license").setContent("../license.html")))
      .setScene((new autoclass.Scene())
        .addChild((new autoclass.WorldInfo()).setTitle("LOA1_JumpAnimation.x3d"))
        .addChild((new autoclass.ProtoDeclare()).setName("LOA1_JumpAnimation")
          .setProtoInterface((new autoclass.ProtoInterface())
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("cycleInterval").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setValue("2"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("enabled").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setValue("true"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("loop").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setValue("true"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("startTime").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setValue("0"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("stopTime").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setValue("-1"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFFLOAT).setName("fraction_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("isActive").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFVEC3F).setName("HumanoidRoot_translation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("HumanoidRoot_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("lower_body_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_hip_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_knee_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ankle_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_midtarsal_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_hip_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_knee_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ankle_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_midtarsal_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vl5_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("skullbase_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_shoulder_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_elbow_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_wrist_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_shoulder_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_elbow_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_wrist_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY)))
          .setProtoBody((new autoclass.ProtoBody())
            .addChild((new autoclass.Group())
              .addChild((new autoclass.TimeSensor()).setDEF("TIMER").setLoop(true)
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("cycleInterval").setProtoField("cycleInterval"))
                  .addConnect((new autoclass.connect()).setNodeField("enabled").setProtoField("enabled"))
                  .addConnect((new autoclass.connect()).setNodeField("loop").setProtoField("loop"))
                  .addConnect((new autoclass.connect()).setNodeField("startTime").setProtoField("startTime"))
                  .addConnect((new autoclass.connect()).setNodeField("stopTime").setProtoField("stopTime"))
                  .addConnect((new autoclass.connect()).setNodeField("fraction_changed").setProtoField("fraction_changed"))
                  .addConnect((new autoclass.connect()).setNodeField("isActive").setProtoField("isActive"))))
              .addChild((new autoclass.PositionInterpolator()).setDEF("HUMANOIDROOT_POSITION_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.04), java.newFloat(0.08), java.newFloat(0.12), java.newFloat(0.16), java.newFloat(0.2), java.newFloat(0.24), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.36), java.newFloat(0.4), java.newFloat(0.44), java.newFloat(0.48), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.8), java.newFloat(0.84), java.newFloat(0.88), java.newFloat(0.92), java.newFloat(0.96), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(-0.01264), java.newFloat(-0.01289), java.newFloat(0), java.newFloat(-0.04712), java.newFloat(-0.03738), java.newFloat(-0.0003345), java.newFloat(-0.1049), java.newFloat(-0.05353), java.newFloat(-0.0005712), java.newFloat(-0.1892), java.newFloat(-0.06561), java.newFloat(-0.0008233), java.newFloat(-0.286), java.newFloat(-0.06276), java.newFloat(-0.0009591), java.newFloat(-0.3795), java.newFloat(-0.05148), java.newFloat(-0.00106), java.newFloat(-0.4484), java.newFloat(-0.03656), java.newFloat(-0.00106), java.newFloat(-0.4484), java.newFloat(-0.03656), java.newFloat(-0.001122), java.newFloat(-0.3269), java.newFloat(-0.1499), java.newFloat(-0.0008616), java.newFloat(-0.13), java.newFloat(-0.06358), java.newFloat(-0.0005128), java.newFloat(-0.03123), java.newFloat(-0.05488), java.newFloat(0.0004779), java.newFloat(0.053), java.newFloat(0.02732), java.newFloat(0.0001728), java.newFloat(0.4148), java.newFloat(0.006873), java.newFloat(0), java.newFloat(0.03045), java.newFloat(0.02148), java.newFloat(0), java.newFloat(-0.01299), java.newFloat(-0.01057), java.newFloat(0), java.newFloat(-0.06932), java.newFloat(-0.01064), java.newFloat(0.0001365), java.newFloat(-0.1037), java.newFloat(-0.005059), java.newFloat(0.0001279), java.newFloat(-0.07198), java.newFloat(-0.007596), java.newFloat(0.000141), java.newFloat(-0.01626), java.newFloat(-0.004935), java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("HumanoidRoot_translation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("HUMANOIDROOT_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.48), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3273), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3273), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("HumanoidRoot_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("SACROILIAC_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.48), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1892), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1892), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("lower_body_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("L_HIP_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.36), java.newFloat(0.4), java.newFloat(0.44), java.newFloat(0.48), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(4.349), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(4.349), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(4.615), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9136), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3614), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.7869), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3918), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5433), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_hip_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("L_KNEE_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.48), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(2.047), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(2.047), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(1.566), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5913), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9235), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_knee_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("L_ANKLE_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.36), java.newFloat(0.4), java.newFloat(0.44), java.newFloat(0.48), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.84), java.newFloat(0.88), java.newFloat(0.92), java.newFloat(0.96), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.625), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.625), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3364), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.2742), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.05078), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.2833), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6667), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.2833), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.2108), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.375), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3146), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1174), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ankle_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("L_MIDTARSAL_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.5), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(-0.2), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_midtarsal_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("R_HIP_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.36), java.newFloat(0.4), java.newFloat(0.44), java.newFloat(0.48), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(4.433), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(4.433), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(4.647), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.8943), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3698), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.4963), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3829), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5169), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_hip_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("R_KNEE_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.48), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(2.005), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(2.005), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9507), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5845), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.9054), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_knee_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("R_ANKLE_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.36), java.newFloat(0.4), java.newFloat(0.44), java.newFloat(0.48), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.84), java.newFloat(0.88), java.newFloat(0.92), java.newFloat(0.96), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6735), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6735), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3527), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3038), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.07964), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3001), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.6509), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3001), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.2087), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3756), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3279), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1193), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ankle_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("R_MIDTARSAL_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.5), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(-0.2), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(-0.2)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_midtarsal_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("VL5_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.2083), java.newFloat(0.375), java.newFloat(0.75), java.newFloat(0.8333), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.0826), java.newFloat(-0.01972), java.newFloat(-0.5974), java.newFloat(0.8017), java.newFloat(0.08231), java.newFloat(0.009296), java.newFloat(-0.9648), java.newFloat(0.2627), java.newFloat(0.1734), java.newFloat(-0.01238), java.newFloat(0.9549), java.newFloat(-0.2968), java.newFloat(0.08732), java.newFloat(-0.008125), java.newFloat(0.9691), java.newFloat(-0.2463), java.newFloat(0.158), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.0826)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vl5_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("SKULLBASE_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.48), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5989), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5989), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3216), java.newFloat(1), java.newFloat(0), java.newFloat(0), java.newFloat(0.06503), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("skullbase_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("L_SHOULDER_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-0.9987), java.newFloat(0.02554), java.newFloat(0.04498), java.newFloat(1.57), java.newFloat(-0.9987), java.newFloat(0.02554), java.newFloat(0.04498), java.newFloat(1.57), java.newFloat(1), java.newFloat(0.0004113), java.newFloat(0.003055), java.newFloat(4.114), java.newFloat(-0.8413), java.newFloat(0.3238), java.newFloat(0.4329), java.newFloat(1.453), java.newFloat(-0.877), java.newFloat(0.4198), java.newFloat(0.2337), java.newFloat(0.6009), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_shoulder_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("L_ELBOW_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1229), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.1229), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5976), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.3917), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_elbow_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("L_WRIST_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.0672928), java.newFloat(0.989475), java.newFloat(-0.128107), java.newFloat(4.15574), java.newFloat(0.0672928), java.newFloat(0.989475), java.newFloat(-0.128107), java.newFloat(4.15574), java.newFloat(0.00364942), java.newFloat(0.999901), java.newFloat(0.0135896), java.newFloat(4.5822), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0.655922), java.newFloat(-0.00050618), java.newFloat(-0.999999), java.newFloat(0.0012782), java.newFloat(1.28397), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_wrist_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("R_SHOULDER_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(0.88), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.9992), java.newFloat(0.02042), java.newFloat(0.03558), java.newFloat(4.688), java.newFloat(0.9992), java.newFloat(0.02042), java.newFloat(0.03558), java.newFloat(4.688), java.newFloat(0.9989), java.newFloat(-0.04623), java.newFloat(0.005159), java.newFloat(4.079), java.newFloat(-0.8687), java.newFloat(-0.2525), java.newFloat(-0.4261), java.newFloat(1.501), java.newFloat(-0.941), java.newFloat(-0.2893), java.newFloat(-0.1754), java.newFloat(0.4788), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_shoulder_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("R_ELBOW_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.04151), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.04151), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5855), java.newFloat(-1), java.newFloat(0), java.newFloat(0), java.newFloat(0.5852), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_elbow_rotation_changed"))))
              .addChild((new autoclass.OrientationInterpolator()).setDEF("R_WRIST_ANIMATOR").setKey(java.newArray("float", [java.newFloat(0), java.newFloat(0.28), java.newFloat(0.32), java.newFloat(0.64), java.newFloat(0.76), java.newFloat(1)])).setKeyValue(java.newArray("float", [java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(-0.0585279), java.newFloat(0.983903), java.newFloat(-0.168849), java.newFloat(1.85956), java.newFloat(-0.0585279), java.newFloat(0.983903), java.newFloat(-0.168849), java.newFloat(1.85956), java.newFloat(-0.00222418), java.newFloat(0.99801), java.newFloat(-0.0630095), java.newFloat(1.46072), java.newFloat(0), java.newFloat(1), java.newFloat(0), java.newFloat(0.497349), java.newFloat(0), java.newFloat(0), java.newFloat(1), java.newFloat(0)]))
                .setIS((new autoclass.IS())
                  .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_wrist_rotation_changed")))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("HUMANOIDROOT_POSITION_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("HUMANOIDROOT_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("SACROILIAC_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_HIP_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_KNEE_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_ANKLE_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_MIDTARSAL_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_HIP_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_KNEE_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_ANKLE_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_MIDTARSAL_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("VL5_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("SKULLBASE_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_SHOULDER_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_ELBOW_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_WRIST_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_SHOULDER_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_ELBOW_ANIMATOR"))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_WRIST_ANIMATOR"))))
        .addChild((new autoclass.Anchor()).setDescription("see InterchangableActorsViaDynamicRouting scene").setParameter(java.newArray("java.lang.String", ["target=_blank"])).setUrl(java.newArray("java.lang.String", ["InterchangableActorsViaDynamicRouting.x3d","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/InterchangableActorsViaDynamicRouting.x3d","InterchangableActorsViaDynamicRouting.wrl","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/InterchangableActorsViaDynamicRouting.wrl"]))
          .addChild((new autoclass.Shape())
            .setGeometry((new autoclass.Text()).setString(java.newArray("java.lang.String", ["LOA1_JumpAnimation.x3d","defines a prototype","for animating a humanoid.","","Click this text to see","InterchangableActorsViaDynamicRouting example."]))
              .setFontStyle((new autoclass.FontStyle()).setJustify(java.newArray("java.lang.String", ["MIDDLE","MIDDLE"])).setSize(java.newFloat(0.8))))
            .setAppearance((new autoclass.Appearance())
              .setMaterial((new autoclass.Material()).setDiffuseColor(java.newArray("float", [java.newFloat(1), java.newFloat(1), java.newFloat(0.2)])))))))      ;
    X3D0.toFileX3D("../data/LOA1_JumpAnimation.new.node.x3d");
    X3D0.toFileJSON("../data/LOA1_JumpAnimation.new.node.json");
    process.exit(0);
