var java = require('java');
var util = require('util');
java.asyncOptions = {
  asyncSuffix: undefined,     // Don't generate node-style methods taking callbacks
  syncSuffix: "",              // Sync methods use the base name(!!)
  promiseSuffix: "Promise",   // Generate methods returning promises, using the suffix Promise.
  promisify: util.promisify, // Needs Node.js version 8 or greater, see comment below
  ifReadOnlySuffix: "_alt"
};
var autoclass = require('../../../X3Dautoclass');
var ConfigurationProperties = autoclass.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
var ProtoInstance0 = null;
var ProtoInstance1 = null;
var ProtoInstance2 = null;
      var X3D0 =  (new autoclass.X3D()).setProfile("Immersive").setVersion("3.3")
      .setHead((new autoclass.head())
        .addComponent((new autoclass.component()).setName("H-Anim").setLevel(1))
        .addMeta((new autoclass.meta()).setName("title").setContent("HAnimBehaviorPrototypes.x3d"))
        .addMeta((new autoclass.meta()).setName("description").setContent("Prototypes for HAnimBehavior node, which collects OrientationInterpolators for aggregate animation of an HAnim humanoid model, and HAnimBodyBehaviorChooser, which selects one body and enables/disables multiple aggregated behaviors."))
        .addMeta((new autoclass.meta()).setName("creator").setContent("Don Brutzman, Jeff Weekley, MV4205 Advanced X3D Authoring class, and Keith Victor"))
        .addMeta((new autoclass.meta()).setName("created").setContent("2 May 2006"))
        .addMeta((new autoclass.meta()).setName("modified").setContent("4 July 2020"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("Web3D2007BlendedBehaviorsChangeableBodies.pdf"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("https://www.web3d.org/files/specifications/19774/V1.0"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("https://www.web3d.org/x3d/specifications/ISO-IEC-19775-X3DAbstractSpecification_Revision1_to_Part1/Part01/components/hanim.html"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("InterchangableActorsViaDynamicRoutingPrototypes.x3d"))
        .addMeta((new autoclass.meta()).setName("reference").setContent("ApaydinThesis.pdf"))
        .addMeta((new autoclass.meta()).setName("subject").setContent("X3D HAnim humanoid animation behaviors"))
        .addMeta((new autoclass.meta()).setName("warning").setContent("under development. should joint translations be exposed? upgrade to HAnim v2.2"))
        .addMeta((new autoclass.meta()).setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/HAnimBehaviorPrototypes.x3d"))
        .addMeta((new autoclass.meta()).setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta((new autoclass.meta()).setName("license").setContent("../license.html")))
      .setScene((new autoclass.Scene())
        .addChild((new autoclass.WorldInfo()).setTitle("HAnimBehaviorPrototypes.x3d"))
        .addChild((new autoclass.ProtoDeclare()).setName("HAnimBehavior").setAppinfo("The HAnimBehavior node models a single humanoid behavior either for an entire body or simply parts of a body. It collects a TimeSensor clock with a single PositionInterpolator and multiple OrientationInterpolator nodes to provide a single humanoid behavior.").setDocumentation("https://www.web3d.org/files/specifications/19774/V1.0/")
          .setProtoInterface((new autoclass.ProtoInterface())
            .addComments((new autoclass.CommentsBlock("supported Level of Articulation (LOA)")))
            .addComments((new autoclass.CommentsBlock("shared common input for single TimeSensor animating all interpolators, since different Behaviors may have different cycleInterval durations")))
            .addComments((new autoclass.CommentsBlock("TODO: add other X3D 3.0 TimeSensor fields (pause etc.)")))
            .addComments((new autoclass.CommentsBlock("Not supported: animated translation of individual joints")))
            .addComments((new autoclass.CommentsBlock("pass in key/keyValue array pairs for single PositionInterpolator")))
            .addComments((new autoclass.CommentsBlock("pass in key/keyValue array pairs and expose named output for each OrientationInterpolator, joint by joint")))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("supportedLOA").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("Supported Level of Articulation (LOA) support needed by authored HAnimBehavior set of OrientationInterpolator values. Legal values 0 1 2 3.").setValue("-1"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("enabled").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("is this behavior enabled?").setValue("true"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("cycleInterval").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("how long do these interpolators take to execute?").setValue("1"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("loop").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("whether or not this behavior loops (e.g. walking) or is single shot (e.g. shake hands).").setValue("false"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("startTime").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("when time now >= startTime isActive becomes true and TimeSensor becomes active").setValue("0"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("stopTime").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("when stopTime becomes <= time now isActive becomes false and TimeSensor becomes inactive").setValue("0"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("pauseTime").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("when time now >= pauseTime isPaused becomes true and TimeSensor becomes paused").setValue("0"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("resumeTime").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("when resumeTime becomes <= time now isPaused becomes false and TimeSensor becomes inactive").setValue("0"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("cycleTime").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY).setAppinfo("cycleTime sends a time outputOnly at startTime and also at the beginning of each new cycle"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("isActive").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY).setAppinfo("isActive true/false events are sent when TimeSensor starts/stops running"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("isPaused").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY).setAppinfo("isPaused true/false events are sent when TimeSensor is paused/resumed"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("elapsedTime").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY).setAppinfo("current elapsed time since TimeSensor activated/running cumulative in seconds and not counting any paused time"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("time").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY).setAppinfo("continuously sends the absolute time (since January 1 1970)"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFFLOAT).setName("fraction_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY).setAppinfo("fraction_changed continuously sends value in range [0 1] showing time progress in the current cycle."))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("HumanoidRoot_translation_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFVEC3F).setName("HumanoidRoot_translation_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFVEC3F).setName("HumanoidRoot_translation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("HumanoidRoot_rotation_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("HumanoidRoot_rotation_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("HumanoidRoot_rotation_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("c1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("c1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("c1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("c2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("c2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("c2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("c3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("c3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("c3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("c4_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("c4_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("c4_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("c5_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("c5_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("c5_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("c6_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("c6_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("c6_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("c7_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("c7_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("c7_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("jaw_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("jaw_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("jaw_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l4_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l4_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l4_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l5_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l5_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l5_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_acromioclavicular_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_acromioclavicular_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_acromioclavicular_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ankle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ankle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ankle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_calf_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_calf_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_calf_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_clavicle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_clavicle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_clavicle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_elbow_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_elbow_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_elbow_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_eyeball_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_eyeball_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_eyeball_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_eyeball_joint_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_eyeball_joint_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_eyeball_joint_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_eyebrow_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_eyebrow_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_eyebrow_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_eyebrow_joint_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_eyebrow_joint_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_eyebrow_joint_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_eyelid_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_eyelid_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_eyelid_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_eyelid_joint_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_eyelid_joint_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_eyelid_joint_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_forearm_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_forearm_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_forearm_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_forefoot_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_forefoot_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_forefoot_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_hand_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_hand_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_hand_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_hindfoot_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_hindfoot_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_hindfoot_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_hip_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_hip_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_hip_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_index0_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_index0_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_index0_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_index1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_index1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_index1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_index2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_index2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_index2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_index3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_index3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_index3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_index_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_index_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_index_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_index_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_index_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_index_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_index_middle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_index_middle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_index_middle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_index_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_index_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_index_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_knee_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_knee_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_knee_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_metatarsal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_metatarsal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_metatarsal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middistal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middistal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middistal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middle0_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middle0_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middle0_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middle1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middle1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middle1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middle2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middle2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middle2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middle3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middle3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middle3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middle_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middle_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middle_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middle_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middle_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middle_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middle_middle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middle_middle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middle_middle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_middle_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_middle_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_middle_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_midproximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_midproximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_midproximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_midtarsal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_midtarsal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_midtarsal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_pinky0_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_pinky0_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_pinky0_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_pinky1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_pinky1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_pinky1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_pinky2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_pinky2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_pinky2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_pinky3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_pinky3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_pinky3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_pinky_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_pinky_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_pinky_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_pinky_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_pinky_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_pinky_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_pinky_middle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_pinky_middle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_pinky_middle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_pinky_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_pinky_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_pinky_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ring0_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ring0_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ring0_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ring1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ring1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ring1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ring2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ring2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ring2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ring3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ring3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ring3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ring_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ring_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ring_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ring_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ring_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ring_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ring_middle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ring_middle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ring_middle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_ring_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_ring_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_ring_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_scapula_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_scapula_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_scapula_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_shoulder_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_shoulder_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_shoulder_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_sternoclavicular_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_sternoclavicular_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_sternoclavicular_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_subtalar_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_subtalar_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_subtalar_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_thigh_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_thigh_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_thigh_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_thumb1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_thumb1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_thumb1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_thumb2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_thumb2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_thumb2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_thumb3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_thumb3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_thumb3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_thumb_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_thumb_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_thumb_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_thumb_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_thumb_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_thumb_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_thumb_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_thumb_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_thumb_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_upperarm_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_upperarm_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_upperarm_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("l_wrist_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("l_wrist_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("l_wrist_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("pelvis_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("pelvis_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("pelvis_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_acromioclavicular_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_acromioclavicular_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_acromioclavicular_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ankle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ankle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ankle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_calf_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_calf_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_calf_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_clavicle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_clavicle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_clavicle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_elbow_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_elbow_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_elbow_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_eyeball_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_eyeball_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_eyeball_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_eyeball_joint_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_eyeball_joint_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_eyeball_joint_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_eyebrow_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_eyebrow_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_eyebrow_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_eyebrow_joint_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_eyebrow_joint_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_eyebrow_joint_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_eyelid_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_eyelid_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_eyelid_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_eyelid_joint_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_eyelid_joint_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_eyelid_joint_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_forearm_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_forearm_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_forearm_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_forefoot_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_forefoot_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_forefoot_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_hand_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_hand_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_hand_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_hindfoot_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_hindfoot_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_hindfoot_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_hip_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_hip_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_hip_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_index0_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_index0_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_index0_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_index1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_index1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_index1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_index2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_index2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_index2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_index3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_index3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_index3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_index_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_index_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_index_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_index_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_index_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_index_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_index_middle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_index_middle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_index_middle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_index_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_index_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_index_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_knee_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_knee_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_knee_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_metatarsal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_metatarsal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_metatarsal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middistal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middistal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middistal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middle0_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middle0_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middle0_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middle1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middle1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middle1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middle2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middle2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middle2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middle3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middle3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middle3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middle_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middle_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middle_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middle_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middle_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middle_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middle_middle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middle_middle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middle_middle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_middle_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_middle_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_middle_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_midproximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_midproximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_midproximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_midtarsal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_midtarsal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_midtarsal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_pinky0_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_pinky0_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_pinky0_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_pinky1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_pinky1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_pinky1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_pinky2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_pinky2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_pinky2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_pinky3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_pinky3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_pinky3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_pinky_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_pinky_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_pinky_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_pinky_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_pinky_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_pinky_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_pinky_middle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_pinky_middle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_pinky_middle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_pinky_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_pinky_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_pinky_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ring0_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ring0_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ring0_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ring1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ring1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ring1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ring2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ring2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ring2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ring3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ring3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ring3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ring_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ring_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ring_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ring_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ring_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ring_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ring_middle_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ring_middle_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ring_middle_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_ring_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_ring_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_ring_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_scapula_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_scapula_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_scapula_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_shoulder_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_shoulder_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_shoulder_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_sternoclavicular_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_sternoclavicular_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_sternoclavicular_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_subtalar_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_subtalar_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_subtalar_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_thigh_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_thigh_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_thigh_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_thumb1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_thumb1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_thumb1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_thumb2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_thumb2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_thumb2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_thumb3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_thumb3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_thumb3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_thumb_distal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_thumb_distal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_thumb_distal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_thumb_metacarpal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_thumb_metacarpal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_thumb_metacarpal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_thumb_proximal_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_thumb_proximal_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_thumb_proximal_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_upperarm_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_upperarm_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_upperarm_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("r_wrist_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("r_wrist_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("r_wrist_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("sacroiliac_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("sacroiliac_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("sacroiliac_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("sacrum_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("sacrum_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("sacrum_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("skull_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("skull_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("skull_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("skullbase_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("skullbase_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("skullbase_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t10_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t10_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t10_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t11_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t11_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t11_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t12_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t12_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t12_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t4_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t4_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t4_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t5_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t5_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t5_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t6_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t6_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t6_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t7_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t7_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t7_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t8_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t8_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t8_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("t9_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("t9_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("t9_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("temporomandibular_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("temporomandibular_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("temporomandibular_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vc1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vc1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vc1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vc2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vc2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vc2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vc3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vc3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vc3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vc4_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vc4_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vc4_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vc5_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vc5_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vc5_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vc6_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vc6_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vc6_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vc7_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vc7_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vc7_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vl1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vl1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vl1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vl2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vl2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vl2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vl3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vl3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vl3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vl4_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vl4_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vl4_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vl5_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vl5_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vl5_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt10_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt10_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt10_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt11_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt11_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt11_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt12_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt12_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt12_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt1_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt1_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt1_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt2_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt2_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt2_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt3_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt3_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt3_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt4_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt4_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt4_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt5_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt5_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt5_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt6_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt6_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt6_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt7_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt7_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt7_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt8_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt8_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt8_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFFLOAT).setName("vt9_key").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFROTATION).setName("vt9_keyValue").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT)
              .addComments((new autoclass.CommentsBlock("no default value"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFROTATION).setName("vt9_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY)))
          .setProtoBody((new autoclass.ProtoBody())
            .addComments((new autoclass.CommentsBlock("design alternative: move TimeSensor out of the prototype, instead expose set_fraction globally to all interpolators")))
            .addChild((new autoclass.TimeSensor()).setDEF("BehaviorClock")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("enabled").setProtoField("enabled"))
                .addConnect((new autoclass.connect()).setNodeField("cycleInterval").setProtoField("cycleInterval"))
                .addConnect((new autoclass.connect()).setNodeField("loop").setProtoField("loop"))
                .addConnect((new autoclass.connect()).setNodeField("startTime").setProtoField("startTime"))
                .addConnect((new autoclass.connect()).setNodeField("stopTime").setProtoField("stopTime"))
                .addConnect((new autoclass.connect()).setNodeField("pauseTime").setProtoField("pauseTime"))
                .addConnect((new autoclass.connect()).setNodeField("resumeTime").setProtoField("resumeTime"))
                .addConnect((new autoclass.connect()).setNodeField("cycleTime").setProtoField("cycleTime"))
                .addConnect((new autoclass.connect()).setNodeField("isActive").setProtoField("isActive"))
                .addConnect((new autoclass.connect()).setNodeField("isPaused").setProtoField("isPaused"))
                .addConnect((new autoclass.connect()).setNodeField("elapsedTime").setProtoField("elapsedTime"))
                .addConnect((new autoclass.connect()).setNodeField("time").setProtoField("time"))
                .addConnect((new autoclass.connect()).setNodeField("fraction_changed").setProtoField("fraction_changed"))))
            .addComments((new autoclass.CommentsBlock("note that other nodes following the first node in the ProtoBody are not rendered but remain active nevertheless")))
            .addChild((new autoclass.Switch()).setDEF("SupportedLoaHolder1").setWhichChoice(-1)
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("whichChoice").setProtoField("supportedLOA"))))
            .addChild((new autoclass.PositionInterpolator()).setDEF("HumanoidRootPI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("HumanoidRoot_translation_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("HumanoidRoot_translation_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("HumanoidRoot_translation_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("HumanoidRootPI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("HumanoidRootOI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("HumanoidRoot_rotation_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("HumanoidRoot_rotation_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("HumanoidRoot_rotation_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("HumanoidRootOI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("c1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("c1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("c1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("c1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("c1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("c2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("c2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("c2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("c2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("c2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("c3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("c3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("c3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("c3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("c3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("c4_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("c4_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("c4_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("c4_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("c4_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("c5_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("c5_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("c5_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("c5_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("c5_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("c6_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("c6_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("c6_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("c6_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("c6_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("c7_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("c7_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("c7_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("c7_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("c7_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("jaw_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("jaw_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("jaw_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("jaw_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("jaw_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l4_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l4_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l4_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l4_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l4_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l5_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l5_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l5_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l5_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l5_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_acromioclavicular_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_acromioclavicular_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_acromioclavicular_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_acromioclavicular_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_acromioclavicular_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ankle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ankle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ankle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ankle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ankle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_calf_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_calf_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_calf_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_calf_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_calf_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_clavicle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_clavicle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_clavicle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_clavicle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_clavicle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_elbow_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_elbow_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_elbow_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_elbow_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_elbow_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_eyeball_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_eyeball_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_eyeball_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_eyeball_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_eyeball_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_eyeball_joint_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_eyeball_joint_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_eyeball_joint_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_eyeball_joint_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_eyeball_joint_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_eyebrow_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_eyebrow_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_eyebrow_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_eyebrow_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_eyebrow_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_eyebrow_joint_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_eyebrow_joint_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_eyebrow_joint_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_eyebrow_joint_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_eyebrow_joint_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_eyelid_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_eyelid_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_eyelid_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_eyelid_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_eyelid_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_eyelid_joint_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_eyelid_joint_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_eyelid_joint_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_eyelid_joint_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_eyelid_joint_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_forearm_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_forearm_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_forearm_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_forearm_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_forearm_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_forefoot_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_forefoot_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_forefoot_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_forefoot_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_forefoot_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_hand_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_hand_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_hand_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_hand_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_hand_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_hindfoot_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_hindfoot_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_hindfoot_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_hindfoot_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_hindfoot_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_hip_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_hip_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_hip_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_hip_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_hip_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_index0_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_index0_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_index0_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_index0_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_index0_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_index1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_index1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_index1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_index1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_index1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_index2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_index2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_index2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_index2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_index2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_index3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_index3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_index3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_index3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_index3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_index_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_index_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_index_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_index_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_index_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_index_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_index_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_index_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_index_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_index_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_index_middle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_index_middle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_index_middle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_index_middle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_index_middle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_index_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_index_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_index_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_index_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_index_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_knee_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_knee_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_knee_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_knee_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_knee_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_metatarsal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_metatarsal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_metatarsal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_metatarsal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_metatarsal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middistal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middistal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middistal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middistal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middistal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middle0_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middle0_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middle0_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middle0_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middle0_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middle1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middle1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middle1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middle1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middle1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middle2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middle2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middle2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middle2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middle2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middle3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middle3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middle3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middle3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middle3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middle_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middle_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middle_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middle_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middle_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middle_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middle_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middle_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middle_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middle_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middle_middle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middle_middle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middle_middle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middle_middle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middle_middle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_middle_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_middle_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_middle_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_middle_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_middle_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_midproximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_midproximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_midproximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_midproximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_midproximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_midtarsal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_midtarsal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_midtarsal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_midtarsal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_midtarsal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_pinky0_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_pinky0_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_pinky0_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_pinky0_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_pinky0_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_pinky1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_pinky1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_pinky1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_pinky1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_pinky1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_pinky2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_pinky2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_pinky2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_pinky2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_pinky2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_pinky3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_pinky3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_pinky3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_pinky3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_pinky3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_pinky_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_pinky_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_pinky_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_pinky_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_pinky_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_pinky_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_pinky_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_pinky_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_pinky_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_pinky_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_pinky_middle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_pinky_middle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_pinky_middle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_pinky_middle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_pinky_middle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_pinky_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_pinky_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_pinky_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_pinky_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_pinky_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ring0_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ring0_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ring0_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ring0_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ring0_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ring1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ring1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ring1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ring1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ring1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ring2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ring2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ring2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ring2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ring2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ring3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ring3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ring3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ring3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ring3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ring_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ring_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ring_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ring_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ring_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ring_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ring_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ring_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ring_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ring_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ring_middle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ring_middle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ring_middle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ring_middle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ring_middle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_ring_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_ring_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_ring_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_ring_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_ring_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_scapula_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_scapula_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_scapula_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_scapula_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_scapula_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_shoulder_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_shoulder_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_shoulder_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_shoulder_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_shoulder_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_sternoclavicular_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_sternoclavicular_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_sternoclavicular_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_sternoclavicular_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_sternoclavicular_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_subtalar_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_subtalar_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_subtalar_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_subtalar_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_subtalar_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_thigh_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_thigh_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_thigh_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_thigh_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_thigh_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_thumb1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_thumb1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_thumb1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_thumb1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_thumb1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_thumb2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_thumb2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_thumb2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_thumb2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_thumb2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_thumb3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_thumb3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_thumb3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_thumb3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_thumb3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_thumb_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_thumb_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_thumb_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_thumb_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_thumb_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_thumb_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_thumb_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_thumb_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_thumb_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_thumb_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_thumb_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_thumb_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_thumb_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_thumb_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_thumb_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_upperarm_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_upperarm_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_upperarm_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_upperarm_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_upperarm_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("l_wrist_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("l_wrist_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("l_wrist_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("l_wrist_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("l_wrist_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("pelvis_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("pelvis_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("pelvis_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("pelvis_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("pelvis_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_acromioclavicular_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_acromioclavicular_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_acromioclavicular_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_acromioclavicular_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_acromioclavicular_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ankle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ankle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ankle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ankle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ankle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_calf_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_calf_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_calf_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_calf_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_calf_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_clavicle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_clavicle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_clavicle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_clavicle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_clavicle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_elbow_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_elbow_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_elbow_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_elbow_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_elbow_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_eyeball_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_eyeball_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_eyeball_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_eyeball_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_eyeball_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_eyeball_joint_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_eyeball_joint_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_eyeball_joint_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_eyeball_joint_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_eyeball_joint_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_eyebrow_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_eyebrow_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_eyebrow_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_eyebrow_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_eyebrow_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_eyebrow_joint_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_eyebrow_joint_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_eyebrow_joint_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_eyebrow_joint_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_eyebrow_joint_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_eyelid_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_eyelid_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_eyelid_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_eyelid_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_eyelid_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_eyelid_joint_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_eyelid_joint_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_eyelid_joint_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_eyelid_joint_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_eyelid_joint_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_forearm_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_forearm_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_forearm_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_forearm_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_forearm_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_forefoot_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_forefoot_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_forefoot_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_forefoot_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_forefoot_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_hand_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_hand_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_hand_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_hand_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_hand_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_hindfoot_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_hindfoot_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_hindfoot_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_hindfoot_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_hindfoot_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_hip_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_hip_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_hip_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_hip_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_hip_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_index0_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_index0_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_index0_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_index0_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_index0_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_index1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_index1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_index1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_index1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_index1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_index2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_index2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_index2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_index2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_index2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_index3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_index3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_index3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_index3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_index3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_index_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_index_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_index_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_index_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_index_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_index_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_index_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_index_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_index_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_index_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_index_middle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_index_middle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_index_middle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_index_middle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_index_middle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_index_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_index_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_index_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_index_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_index_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_knee_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_knee_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_knee_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_knee_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_knee_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_metatarsal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_metatarsal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_metatarsal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_metatarsal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_metatarsal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middistal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middistal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middistal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middistal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middistal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middle0_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middle0_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middle0_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middle0_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middle0_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middle1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middle1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middle1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middle1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middle1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middle2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middle2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middle2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middle2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middle2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middle3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middle3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middle3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middle3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middle3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middle_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middle_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middle_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middle_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middle_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middle_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middle_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middle_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middle_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middle_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middle_middle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middle_middle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middle_middle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middle_middle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middle_middle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_middle_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_middle_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_middle_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_middle_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_middle_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_midproximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_midproximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_midproximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_midproximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_midproximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_midtarsal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_midtarsal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_midtarsal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_midtarsal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_midtarsal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_pinky0_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_pinky0_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_pinky0_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_pinky0_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_pinky0_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_pinky1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_pinky1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_pinky1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_pinky1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_pinky1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_pinky2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_pinky2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_pinky2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_pinky2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_pinky2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_pinky3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_pinky3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_pinky3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_pinky3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_pinky3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_pinky_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_pinky_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_pinky_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_pinky_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_pinky_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_pinky_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_pinky_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_pinky_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_pinky_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_pinky_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_pinky_middle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_pinky_middle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_pinky_middle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_pinky_middle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_pinky_middle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_pinky_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_pinky_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_pinky_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_pinky_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_pinky_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ring0_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ring0_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ring0_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ring0_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ring0_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ring1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ring1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ring1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ring1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ring1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ring2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ring2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ring2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ring2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ring2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ring3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ring3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ring3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ring3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ring3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ring_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ring_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ring_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ring_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ring_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ring_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ring_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ring_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ring_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ring_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ring_middle_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ring_middle_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ring_middle_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ring_middle_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ring_middle_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_ring_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_ring_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_ring_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_ring_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_ring_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_scapula_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_scapula_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_scapula_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_scapula_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_scapula_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_shoulder_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_shoulder_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_shoulder_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_shoulder_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_shoulder_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_sternoclavicular_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_sternoclavicular_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_sternoclavicular_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_sternoclavicular_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_sternoclavicular_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_subtalar_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_subtalar_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_subtalar_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_subtalar_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_subtalar_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_thigh_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_thigh_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_thigh_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_thigh_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_thigh_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_thumb1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_thumb1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_thumb1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_thumb1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_thumb1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_thumb2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_thumb2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_thumb2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_thumb2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_thumb2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_thumb3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_thumb3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_thumb3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_thumb3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_thumb3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_thumb_distal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_thumb_distal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_thumb_distal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_thumb_distal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_thumb_distal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_thumb_metacarpal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_thumb_metacarpal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_thumb_metacarpal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_thumb_metacarpal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_thumb_metacarpal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_thumb_proximal_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_thumb_proximal_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_thumb_proximal_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_thumb_proximal_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_thumb_proximal_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_upperarm_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_upperarm_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_upperarm_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_upperarm_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_upperarm_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("r_wrist_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("r_wrist_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("r_wrist_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("r_wrist_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("r_wrist_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("sacroiliac_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("sacroiliac_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("sacroiliac_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("sacroiliac_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("sacroiliac_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("sacrum_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("sacrum_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("sacrum_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("sacrum_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("sacrum_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("skull_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("skull_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("skull_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("skull_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("skull_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("skullbase_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("skullbase_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("skullbase_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("skullbase_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("skullbase_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t4_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t4_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t4_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t4_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t4_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t5_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t5_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t5_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t5_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t5_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t6_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t6_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t6_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t6_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t6_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t7_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t7_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t7_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t7_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t7_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t8_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t8_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t8_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t8_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t8_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t9_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t9_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t9_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t9_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t9_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t10_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t10_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t10_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t10_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t10_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t11_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t11_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t11_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t11_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t11_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("t12_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("t12_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("t12_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("t12_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("t12_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("temporomandibular_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("temporomandibular_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("temporomandibular_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("temporomandibular_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("temporomandibular_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vc1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vc1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vc1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vc1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vc1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vc2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vc2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vc2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vc2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vc2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vc3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vc3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vc3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vc3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vc3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vc4_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vc4_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vc4_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vc4_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vc4_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vc5_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vc5_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vc5_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vc5_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vc5_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vc6_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vc6_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vc6_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vc6_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vc6_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vc7_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vc7_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vc7_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vc7_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vc7_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vl1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vl1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vl1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vl1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vl1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vl2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vl2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vl2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vl2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vl2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vl3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vl3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vl3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vl3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vl3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vl4_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vl4_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vl4_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vl4_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vl4_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vl5_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vl5_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vl5_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vl5_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vl5_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt1_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt1_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt1_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt1_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt1_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt2_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt2_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt2_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt2_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt2_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt3_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt3_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt3_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt3_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt3_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt4_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt4_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt4_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt4_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt4_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt5_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt5_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt5_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt5_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt5_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt6_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt6_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt6_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt6_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt6_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt7_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt7_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt7_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt7_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt7_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt8_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt8_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt8_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt8_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt8_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt9_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt9_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt9_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt9_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt9_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt10_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt10_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt10_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt10_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt10_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt11_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt11_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt11_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt11_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt11_OI"))
            .addChild((new autoclass.OrientationInterpolator()).setDEF("vt12_OI")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("key").setProtoField("vt12_key"))
                .addConnect((new autoclass.connect()).setNodeField("keyValue").setProtoField("vt12_keyValue"))
                .addConnect((new autoclass.connect()).setNodeField("value_changed").setProtoField("vt12_changed"))))
            .addChild((new autoclass.ROUTE()).setFromField("fraction_changed").setFromNode("BehaviorClock").setToField("set_fraction").setToNode("vt12_OI"))))
        .addChild((new autoclass.ProtoDeclare()).setName("HAnimBodyBehaviorChooser").setAppinfo("The HAnimBodyBehaviorChooser node allows an author to select one of several HAnimHumanoid bodies and simultaneously apply multiple HAnimBehavior animations to the active body. Individual behaviors may be enabled or disabled at any time.")
          .setProtoInterface((new autoclass.ProtoInterface())
            .addComments((new autoclass.CommentsBlock("TODO: supported Level of Articulation (LOA) might be adapted to more efficiently setup/teardown pertinent ROUTEs")))
            .addComments((new autoclass.CommentsBlock("accessType=\"inputOutput\" avoided to maintain backwards compatilibility with VRML97 scripting constraints")))
            .addComments((new autoclass.CommentsBlock("shared common TimeSensor inputs for all BehaviorAnimation nodes, connected via ROUTEs")))
            .addComments((new autoclass.CommentsBlock("TODO: consider named accessors, e.g. enableBehaviorByName and disableBehaviorByName")))
            .addComments((new autoclass.CommentsBlock("TODO: consider addBody, removeBody, addBehavior, removeBehavior")))
            .addComments((new autoclass.CommentsBlock("TODO: consider startBehaviorByIndex, stopBehaviorByIndex, startBehaviorByName, stopBehaviorByName")))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("supportedLOA").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("Level of Articulation (LOA) support needed by authored HAnimBehavior set of OrientationInterpolator values. Legal values 0 1 2 3.").setValue("-1"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFNODE).setName("HumanoidArray").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("[HAnimHumanoid] nodes only")
              .addComments((new autoclass.CommentsBlock("default NULL"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("whichBody").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("whichBody is selected default is initial member of HumanoidArray").setValue("-1"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("set_whichBody").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY).setAppinfo("whichBody is selected default is none"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("whichBody_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY).setAppinfo("whichBody is selected default is none"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFNODE).setName("hAnimBehaviorNodes").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("[HAnimBehavior] nodes only some or all of which may be enabled. Warning: do not animate a single joint with more than one interpolator at a given time.")
              .addComments((new autoclass.CommentsBlock("default NULL"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFBOOL).setName("enabledBehaviorsArray").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("indicate which HAnimBehavior nodes are activated, empty indicates all enabled true")
              .addComments((new autoclass.CommentsBlock("no default values"))))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("enableBehavior").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY).setAppinfo("enable corresponding behavior identified by index number"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("disableBehavior").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY).setAppinfo("disable corresponding behavior identified by index number"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("startTime").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setValue("0"))
            .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFTIME).setName("stopTime").setAccessType(autoclass.field.ACCESSTYPE_INPUTOUTPUT).setValue("0")))
          .setProtoBody((new autoclass.ProtoBody())
            .addChild((new autoclass.Switch()).setDEF("BodySwitch").setWhichChoice(-1)
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("whichChoice").setProtoField("whichBody"))
                .addConnect((new autoclass.connect()).setNodeField("children").setProtoField("HumanoidArray"))))
            .addComments((new autoclass.CommentsBlock("note that other nodes following the first node in the ProtoBody are not rendered but remain active nevertheless")))
            .addChild((new autoclass.Group()).setDEF("BehaviorArrayHolder")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("children").setProtoField("hAnimBehaviorNodes"))))
            .addChild((new autoclass.TimeSensor()).setDEF("TimeSensorHolderStartStopTimes")
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("startTime").setProtoField("startTime"))
                .addConnect((new autoclass.connect()).setNodeField("stopTime").setProtoField("stopTime"))))
            .addChild((new autoclass.Switch()).setDEF("SupportedLoaHolder2").setWhichChoice(-1)
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("whichChoice").setProtoField("supportedLOA"))))
            .addChild((new autoclass.Script()).setDEF("BehaviorSelectionScript").setDirectOutput(true).setUrl(java.newArray("java.lang.String", ["HAnimBehaviorPrototypesScript.js","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/HAnimBehaviorPrototypesScript.js"]))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFNODE).setName("HumanoidArray").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("[HAnimHumanoid] nodes only"))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("whichBody").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("whichBody is selected default is none"))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("set_whichBody").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY).setAppinfo("whichBody is selected default is none"))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("whichBody_changed").setAccessType(autoclass.field.ACCESSTYPE_OUTPUTONLY).setAppinfo("whichBody is selected default is none"))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFNODE).setName("hAnimBehaviorNodes").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("[HAnimBehavior] nodes only")
                .addComments((new autoclass.CommentsBlock("TODO: might consider accessType=\"inputOutput\" if VRML97 compatibility not needed"))))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_MFBOOL).setName("enabledBehaviorsArray").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("enableBehavior").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY).setAppinfo("enable corresponding behavior"))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("disableBehavior").setAccessType(autoclass.field.ACCESSTYPE_INPUTONLY).setAppinfo("enable corresponding behavior"))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFNODE).setName("timeSensorNode").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY)
                .addChild((new autoclass.TimeSensor()).setUSE("TimeSensorHolderStartStopTimes")))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFINT32).setName("previousBodyIndex").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("remember prior body index to avoid unnecessary ROUTE teardown and creation").setValue("-1"))
              .addField((new autoclass.field()).setType(autoclass.field.TYPE_SFBOOL).setName("traceEnabled").setAccessType(autoclass.field.ACCESSTYPE_INITIALIZEONLY).setValue("true"))
              .setIS((new autoclass.IS())
                .addConnect((new autoclass.connect()).setNodeField("HumanoidArray").setProtoField("HumanoidArray"))
                .addConnect((new autoclass.connect()).setNodeField("whichBody").setProtoField("whichBody"))
                .addConnect((new autoclass.connect()).setNodeField("set_whichBody").setProtoField("set_whichBody"))
                .addConnect((new autoclass.connect()).setNodeField("whichBody_changed").setProtoField("whichBody_changed"))
                .addConnect((new autoclass.connect()).setNodeField("hAnimBehaviorNodes").setProtoField("hAnimBehaviorNodes"))
                .addConnect((new autoclass.connect()).setNodeField("enabledBehaviorsArray").setProtoField("enabledBehaviorsArray"))
                .addConnect((new autoclass.connect()).setNodeField("enableBehavior").setProtoField("enableBehavior"))
                .addConnect((new autoclass.connect()).setNodeField("disableBehavior").setProtoField("disableBehavior"))))))
        .addComments((new autoclass.CommentsBlock("TODO: Goal is to have 3 different ways to present a body: local creation, Inline with IMPORT/EXPORT, or external prototype.")))
        .addChild(ProtoInstance0 = (new autoclass.ProtoInstance()).setName("HAnimBehavior").setDEF("BehaviorTest1")
          .addComments((new autoclass.CommentsBlock("only one PositionInterpolator key/keyValue definition for entire humanoid - optional")))
          .addComments((new autoclass.CommentsBlock("must have paired overrides of each key/keyValue array being defined"))))
        .addChild(ProtoInstance1 = (new autoclass.ProtoInstance()).setName("HAnimBodyBehaviorChooser").setDEF("ChooserTest")))      ;
ProtoInstance0
          .addFieldValue((new autoclass.fieldValue()).setName("HumanoidRoot_translation_key").setValue("0 0.25 0.5 0.75 1"));
ProtoInstance0
          .addFieldValue((new autoclass.fieldValue()).setName("HumanoidRoot_translation_keyValue").setValue("0 0 0 0 0 10 0 0 20 0 0 30 0 0 40 0 0 50"));
ProtoInstance0
          .addFieldValue((new autoclass.fieldValue()).setName("r_ankle_key").setValue("0 0.5 1"));
ProtoInstance0
          .addFieldValue((new autoclass.fieldValue()).setName("r_ankle_keyValue").setValue("0 1 0 0 0 1 0 0.2 0 1 0 0.4"));
ProtoInstance1
          .addFieldValue((new autoclass.fieldValue()).setName("HumanoidArray")
            .addChild((new autoclass.HAnimHumanoid()).setName("DiamondManLOA-1").setDEF("hanim_DiamondManLOA-1").setVersion("2.0")));
ProtoInstance1
          .addFieldValue((new autoclass.fieldValue()).setName("whichBody").setValue("0"));
ProtoInstance1
          .addFieldValue((new autoclass.fieldValue()).setName("hAnimBehaviorNodes")
            .addChild(ProtoInstance2 = (new autoclass.ProtoInstance()).setUSE("BehaviorTest1")));
ProtoInstance1
          .addFieldValue((new autoclass.fieldValue()).setName("enabledBehaviorsArray").setValue("true"));
    X3D0.toFileX3D("../data/HAnimBehaviorPrototypes.new.x3d");
    process.exit(0);
