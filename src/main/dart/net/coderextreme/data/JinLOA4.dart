// Copyright 2021 by John Carlson.  All rights reserved.
import 'dart:io';
import '../x3d.dart';
var X3D0 =  X3D(

      profile_ : SFString('Immersive'),
      version_ : SFString('4.0'),
      head_ : 
        head(
          component_ : 
            component(
              name_ : SFString('HAnim'),
              level_ : 1),
          meta_ : [
            meta(
              name_ : SFString('title'),
              content_ : SFString('JinLOA4.x3d')),

            meta(
              name_ : SFString('creator'),
              content_ : SFString('Jin Hoon Lee and Min Joo Lee')),

            meta(
              name_ : SFString('translator'),
              content_ : SFString('Chul Hee Jung and Myeong Won Lee')),

            meta(
              name_ : SFString('created'),
              content_ : SFString('31 March 2011')),

            meta(
              name_ : SFString('translated'),
              content_ : SFString('1 November 2014')),

            meta(
              name_ : SFString('modified'),
              content_ : SFString('27 January 2023')),

            meta(
              name_ : SFString('description'),
              content_ : SFString('Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model.')),

            meta(
              name_ : SFString('reference'),
              content_ : SFString('KoreanCharacter00ReadMe.txt')),

            meta(
              name_ : SFString('reference'),
              content_ : SFString('KoreanCharacterHumanMotion_Infotech2014_140706.pdf')),

            meta(
              name_ : SFString('reference'),
              content_ : SFString('KoreanCharactersIllustrated.pdf')),

            meta(
              name_ : SFString('identifier'),
              content_ : SFString('https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/JinLOA4.x3d')),

            meta(
              name_ : SFString('generator'),
              content_ : SFString('3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview')),

            meta(
              name_ : SFString('generator'),
              content_ : SFString('Suwon HAnim Converter')),

            meta(
              name_ : SFString('generator'),
              content_ : SFString('Gnu Image Manipulation Program, http://www.gimp.org')),

            meta(
              name_ : SFString('generator'),
              content_ : SFString('X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit')),

            meta(
              name_ : SFString('license'),
              content_ : SFString('../license.html'))]),
      Scene_ : 
        Scene(
          children_ : [
            WorldInfo(
              title_ : SFString('JinLOA4.x3d')),

            NavigationInfo(
              speed_ : 1.5),

            Viewpoint(
              centerOfRotation_ : SFVec3f([SFDouble(0), SFDouble(1), SFDouble(0)]),
              description_ : SFString('JinLOA4'),
              position_ : SFVec3f([SFDouble(0), SFDouble(1), SFDouble(3)])),

            HAnimHumanoid(
              name_ : SFString('JinLOA4'),
              DEF_ : SFString('hanim_JinLOA4'),
              loa_ : 4,
              scale_ : SFVec3f([SFDouble(0.0225), SFDouble(0.0225), SFDouble(0.0225)]),
              version_ : SFString('2.0'),
              metadata_ : [
                MetadataSet(
                  name_ : SFString('HAnimHumanoid.info'),
                  reference_ : SFString('https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid'),
                  value_ : 
                    MetadataString(
                      name_ : SFString('authorName'),
                      value_ : MFString([SFString("Jin Hoon Lee and Min Joo Lee, Chul Hee Jung and Myeong Won Lee")])),
                  value_ : 
                    MetadataString(
                      name_ : SFString('authorEmail'),
                      value_ : MFString([SFString("myeongwonlee@gmail.com")])),
                  value_ : 
                    MetadataString(
                      name_ : SFString('creationDate'),
                      value_ : MFString([SFString("31 March 2011")])),
                  value_ : 
                    MetadataString(
                      name_ : SFString('gender'),
                      value_ : MFString([SFString("female")])),
                  value_ : 
                    MetadataFloat(
                      name_ : SFString('height'),
                      value_ : MFFloat([SFFloat(1.5)])),
                  value_ : 
                    MetadataString(
                      name_ : SFString('humanoidVersion'),
                      value_ : MFString([SFString("2.0")]))),
              joints_ : [
                HAnimJoint(
                  name_ : SFString('humanoid_root'),
                  DEF_ : SFString('hanim_humanoid_root'),
                  center_ : SFVec3f([SFDouble(0), SFDouble(36.709999), SFDouble(-0.7076)]),
                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                  children_ : [
                    HAnimSegment(
                      name_ : SFString('sacrum'),
                      DEF_ : SFString('hanim_sacrum'),
                      children_ : [
                        Transform(
                          translation_ : SFVec3f([SFDouble(0), SFDouble(36.709999), SFDouble(-0.7076)]),
                          child_ : 
                            Shape(
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                  texture_ : 
                                    ImageTexture(
                                      DEF_ : SFString('JinLOA4TextureAtlas'),
                                      url_ : MFString([SFString("images/Jin.png"), SFString("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/Jin.png")]))),
                              geometry_ : 
                                IndexedFaceSet(
                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(13), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(36), SFInt32(25), SFInt32(-1), SFInt32(38), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(45), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(25), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(48), SFInt32(37), SFInt32(-1), SFInt32(50), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(52), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(53), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(54), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(55), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(57), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(58), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(59), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(60), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(49), SFInt32(37), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(60), SFInt32(49), SFInt32(-1), SFInt32(61), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(61), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(61), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(61), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(61), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(61), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(61), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(61), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(61), SFInt32(58), SFInt32(57), SFInt32(-1), SFInt32(61), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(59), SFInt32(-1), SFInt32(61), SFInt32(49), SFInt32(60), SFInt32(-1)]),
                                  creaseAngle_ : 3.14159,
                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(13), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(36), SFInt32(25), SFInt32(-1), SFInt32(38), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(45), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(25), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(48), SFInt32(37), SFInt32(-1), SFInt32(50), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(52), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(53), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(54), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(55), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(57), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(58), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(59), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(60), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(49), SFInt32(37), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(60), SFInt32(49), SFInt32(-1), SFInt32(61), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(61), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(61), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(61), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(61), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(61), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(61), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(61), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(61), SFInt32(58), SFInt32(57), SFInt32(-1), SFInt32(61), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(59), SFInt32(-1), SFInt32(61), SFInt32(49), SFInt32(60), SFInt32(-1)]),
                                  coord_ : 
                                    Coordinate(
                                      point_ : MFVec3f([SFVec3f([0,1.053,0.0273]),SFVec3f([0,0.9123,-0.5414]),SFVec3f([-0.4375,0.9123,-0.4652]),SFVec3f([-0.7578,0.9123,-0.3733]),SFVec3f([-0.875,0.9123,0.0273]),SFVec3f([-0.7578,0.9123,0.4279]),SFVec3f([-0.4375,0.9123,0.5198]),SFVec3f([0,0.9123,0.596]),SFVec3f([0.4375,0.9123,0.5198]),SFVec3f([0.7578,0.9123,0.4279]),SFVec3f([0.875,0.9123,0.0273]),SFVec3f([0.7578,0.9123,-0.3733]),SFVec3f([0.4375,0.9123,-0.4652]),SFVec3f([0,0.5267,-0.8842]),SFVec3f([-0.5658,0.5267,-0.7621]),SFVec3f([-0.98,0.5267,-0.4285]),SFVec3f([-1.132,0.5267,0.0273]),SFVec3f([-0.98,0.5267,0.483]),SFVec3f([-0.5658,0.5267,0.6985]),SFVec3f([0,0.5267,0.8206]),SFVec3f([0.5658,0.5267,0.6985]),SFVec3f([0.98,0.5267,0.483]),SFVec3f([1.132,0.5267,0.0273]),SFVec3f([0.98,0.5267,-0.4285]),SFVec3f([0.5658,0.5267,-0.7621]),SFVec3f([0,0,-0.9616]),SFVec3f([-0.6534,0,-0.8206]),SFVec3f([-1.132,0,-0.4353]),SFVec3f([-1.307,0,0.0273]),SFVec3f([-1.132,0,0.5536]),SFVec3f([-0.6534,0,0.8206]),SFVec3f([0,0,0.9616]),SFVec3f([0.6534,0,0.8206]),SFVec3f([1.132,0,0.5536]),SFVec3f([1.307,0,0.0273]),SFVec3f([1.132,0,-0.4353]),SFVec3f([0.6534,0,-0.8206]),SFVec3f([0,-0.5267,-0.8206]),SFVec3f([-0.5658,-0.5267,-0.6985]),SFVec3f([-0.98,-0.5267,-0.3648]),SFVec3f([-1.132,-0.5267,0.0273]),SFVec3f([-0.98,-0.5267,0.483]),SFVec3f([-0.5658,-0.5267,0.6985]),SFVec3f([0,-0.5267,0.8206]),SFVec3f([0.5658,-0.5267,0.6985]),SFVec3f([0.98,-0.5267,0.483]),SFVec3f([1.132,-0.5267,0.0273]),SFVec3f([0.98,-0.5267,-0.3648]),SFVec3f([0.5658,-0.5267,-0.6985]),SFVec3f([0,-0.9123,-0.4353]),SFVec3f([-0.3267,-0.9123,-0.3648]),SFVec3f([-0.5658,-0.9123,-0.2358]),SFVec3f([-0.6534,-0.9123,0.0273]),SFVec3f([-0.5658,-0.9123,0.2904]),SFVec3f([-0.3267,-0.9123,0.483]),SFVec3f([0,-0.9123,0.5536]),SFVec3f([0.3267,-0.9123,0.483]),SFVec3f([0.5658,-0.9123,0.2904]),SFVec3f([0.6534,-0.9123,0.0273]),SFVec3f([0.5658,-0.9123,-0.2358]),SFVec3f([0.3267,-0.9123,-0.3648]),SFVec3f([0,-1.053,0.0273])])),
                                  texCoord_ : 
                                    TextureCoordinate(
                                      point_ : MFVec2f([SFVec2f([0.6211,0.5754]),SFVec2f([0.7851,0.572]),SFVec2f([0.7614,0.572]),SFVec2f([0.6907,0.5698]),SFVec2f([0.62,0.5698]),SFVec2f([0.6158,0.5702]),SFVec2f([0.5451,0.5702]),SFVec2f([0.4167,0.5698]),SFVec2f([0.5451,0.5702]),SFVec2f([0.6158,0.5702]),SFVec2f([0.62,0.5698]),SFVec2f([0.6907,0.5698]),SFVec2f([0.7614,0.572]),SFVec2f([0.8036,0.5346]),SFVec2f([0.7761,0.5346]),SFVec2f([0.6989,0.4838]),SFVec2f([0.6219,0.4428]),SFVec2f([0.6154,0.4438]),SFVec2f([0.5492,0.4639]),SFVec2f([0.4166,0.5346]),SFVec2f([0.5492,0.4639]),SFVec2f([0.6154,0.4438]),SFVec2f([0.6219,0.4428]),SFVec2f([0.6989,0.4838]),SFVec2f([0.7761,0.5346]),SFVec2f([0.7912,0.4044]),SFVec2f([0.7635,0.4044]),SFVec2f([0.7042,0.3925]),SFVec2f([0.6194,0.3907]),SFVec2f([0.6148,0.3907]),SFVec2f([0.545,0.3974]),SFVec2f([0.4163,0.4938]),SFVec2f([0.545,0.3974]),SFVec2f([0.6148,0.3907]),SFVec2f([0.6194,0.3907]),SFVec2f([0.7042,0.3925]),SFVec2f([0.7635,0.4044]),SFVec2f([0.795,0.3772]),SFVec2f([0.7662,0.3772]),SFVec2f([0.6945,0.3645]),SFVec2f([0.6236,0.3695]),SFVec2f([0.616,0.3695]),SFVec2f([0.5438,0.378]),SFVec2f([0.416,0.453]),SFVec2f([0.5438,0.378]),SFVec2f([0.616,0.3695]),SFVec2f([0.6236,0.3695]),SFVec2f([0.6945,0.3645]),SFVec2f([0.7662,0.3772]),SFVec2f([0.7887,0.3451]),SFVec2f([0.7635,0.3451]),SFVec2f([0.698,0.3508]),SFVec2f([0.6262,0.3508]),SFVec2f([0.6297,0.3503]),SFVec2f([0.5389,0.3503]),SFVec2f([0.4181,0.3884]),SFVec2f([0.5389,0.3503]),SFVec2f([0.6297,0.3503]),SFVec2f([0.6262,0.3508]),SFVec2f([0.698,0.3508]),SFVec2f([0.7635,0.3451]),SFVec2f([0.6237,0.3398])])))))]),

                    HAnimJoint(
                      name_ : SFString('sacroiliac'),
                      DEF_ : SFString('hanim_sacroiliac'),
                      center_ : SFVec3f([SFDouble(0), SFDouble(31.43), SFDouble(-0.7076)]),
                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                      children_ : [
                        HAnimSegment(
                          name_ : SFString('pelvis'),
                          DEF_ : SFString('hanim_pelvis'),
                          children_ : [
                            Transform(
                              translation_ : SFVec3f([SFDouble(0), SFDouble(31.43), SFDouble(-0.7076)]),
                              child_ : 
                                Shape(
                                  appearance_ : 
                                    Appearance(
                                      material_ : 
                                        Material(
                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                      texture_ : 
                                        ImageTexture(
                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                  geometry_ : 
                                    IndexedFaceSet(
                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(13), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(36), SFInt32(25), SFInt32(-1), SFInt32(38), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(45), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(25), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(48), SFInt32(37), SFInt32(-1), SFInt32(50), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(52), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(53), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(54), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(55), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(57), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(58), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(59), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(60), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(49), SFInt32(37), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(60), SFInt32(49), SFInt32(-1), SFInt32(61), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(61), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(61), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(61), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(61), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(61), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(61), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(61), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(61), SFInt32(58), SFInt32(57), SFInt32(-1), SFInt32(61), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(59), SFInt32(-1), SFInt32(61), SFInt32(49), SFInt32(60), SFInt32(-1)]),
                                      creaseAngle_ : 3.14159,
                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(13), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(36), SFInt32(25), SFInt32(-1), SFInt32(38), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(45), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(25), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(48), SFInt32(37), SFInt32(-1), SFInt32(50), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(52), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(53), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(54), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(55), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(57), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(58), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(59), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(60), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(49), SFInt32(37), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(60), SFInt32(49), SFInt32(-1), SFInt32(61), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(61), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(61), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(61), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(61), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(61), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(61), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(61), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(61), SFInt32(58), SFInt32(57), SFInt32(-1), SFInt32(61), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(59), SFInt32(-1), SFInt32(61), SFInt32(49), SFInt32(60), SFInt32(-1)]),
                                      coord_ : 
                                        Coordinate(
                                          point_ : MFVec3f([SFVec3f([0,10.79,0.1424]),SFVec3f([0,10.06,-2.825]),SFVec3f([-2.283,10.06,-2.428]),SFVec3f([-3.954,10.06,-1.948]),SFVec3f([-4.566,10.06,0.1424]),SFVec3f([-3.954,10.06,2.233]),SFVec3f([-2.283,10.06,2.712]),SFVec3f([0,10.06,3.11]),SFVec3f([2.283,10.06,2.712]),SFVec3f([3.954,10.06,2.233]),SFVec3f([4.566,10.06,0.1424]),SFVec3f([3.954,10.06,-1.948]),SFVec3f([2.283,10.06,-2.428]),SFVec3f([0,8.045,-4.614]),SFVec3f([-2.953,8.045,-3.977]),SFVec3f([-5.114,8.045,-2.236]),SFVec3f([-5.905,8.045,0.1424]),SFVec3f([-5.114,8.045,2.521]),SFVec3f([-2.953,8.045,3.645]),SFVec3f([0,8.045,4.282]),SFVec3f([2.953,8.045,3.645]),SFVec3f([5.114,8.045,2.521]),SFVec3f([5.905,8.045,0.1424]),SFVec3f([5.114,8.045,-2.236]),SFVec3f([2.953,8.045,-3.977]),SFVec3f([0,5.297,-5.018]),SFVec3f([-3.409,5.297,-4.282]),SFVec3f([-5.905,5.297,-2.272]),SFVec3f([-6.819,5.297,0.1424]),SFVec3f([-5.905,5.297,2.889]),SFVec3f([-3.409,5.297,4.282]),SFVec3f([0,5.297,5.018]),SFVec3f([3.409,5.297,4.282]),SFVec3f([5.905,5.297,2.889]),SFVec3f([6.819,5.297,0.1424]),SFVec3f([5.905,5.297,-2.272]),SFVec3f([3.409,5.297,-4.282]),SFVec3f([0,2.548,-4.282]),SFVec3f([-2.953,2.548,-3.645]),SFVec3f([-5.114,2.548,-1.904]),SFVec3f([-5.905,2.548,0.1424]),SFVec3f([-5.114,2.548,2.521]),SFVec3f([-2.953,2.548,3.645]),SFVec3f([0,2.548,4.282]),SFVec3f([2.953,2.548,3.645]),SFVec3f([5.114,2.548,2.521]),SFVec3f([5.905,2.548,0.1424]),SFVec3f([5.114,2.548,-1.904]),SFVec3f([2.953,2.548,-3.645]),SFVec3f([0,0.5362,-2.272]),SFVec3f([-1.705,0.5362,-1.904]),SFVec3f([-2.953,0.5362,-1.231]),SFVec3f([-3.409,0.5362,0.1424]),SFVec3f([-2.953,0.5362,1.516]),SFVec3f([-1.705,0.5362,2.521]),SFVec3f([0,0.5362,2.889]),SFVec3f([1.705,0.5362,2.521]),SFVec3f([2.953,0.5362,1.516]),SFVec3f([3.409,0.5362,0.1424]),SFVec3f([2.953,0.5362,-1.231]),SFVec3f([1.705,0.5362,-1.904]),SFVec3f([0,-0.2003,0.1424])])),
                                      texCoord_ : 
                                        TextureCoordinate(
                                          point_ : MFVec2f([SFVec2f([0.6211,0.5754]),SFVec2f([0.7851,0.572]),SFVec2f([0.7614,0.572]),SFVec2f([0.6907,0.5698]),SFVec2f([0.62,0.5698]),SFVec2f([0.6158,0.5702]),SFVec2f([0.5451,0.5702]),SFVec2f([0.4167,0.5698]),SFVec2f([0.5451,0.5702]),SFVec2f([0.6158,0.5702]),SFVec2f([0.62,0.5698]),SFVec2f([0.6907,0.5698]),SFVec2f([0.7614,0.572]),SFVec2f([0.8036,0.5346]),SFVec2f([0.7761,0.5346]),SFVec2f([0.6989,0.4838]),SFVec2f([0.6219,0.4428]),SFVec2f([0.6154,0.4438]),SFVec2f([0.5492,0.4639]),SFVec2f([0.4166,0.5346]),SFVec2f([0.5492,0.4639]),SFVec2f([0.6154,0.4438]),SFVec2f([0.6219,0.4428]),SFVec2f([0.6989,0.4838]),SFVec2f([0.7761,0.5346]),SFVec2f([0.7912,0.4044]),SFVec2f([0.7635,0.4044]),SFVec2f([0.7042,0.3925]),SFVec2f([0.6194,0.3907]),SFVec2f([0.6148,0.3907]),SFVec2f([0.545,0.3974]),SFVec2f([0.4163,0.4938]),SFVec2f([0.545,0.3974]),SFVec2f([0.6148,0.3907]),SFVec2f([0.6194,0.3907]),SFVec2f([0.7042,0.3925]),SFVec2f([0.7635,0.4044]),SFVec2f([0.795,0.3772]),SFVec2f([0.7662,0.3772]),SFVec2f([0.6945,0.3645]),SFVec2f([0.6236,0.3695]),SFVec2f([0.616,0.3695]),SFVec2f([0.5438,0.378]),SFVec2f([0.416,0.453]),SFVec2f([0.5438,0.378]),SFVec2f([0.616,0.3695]),SFVec2f([0.6236,0.3695]),SFVec2f([0.6945,0.3645]),SFVec2f([0.7662,0.3772]),SFVec2f([0.7887,0.3451]),SFVec2f([0.7635,0.3451]),SFVec2f([0.698,0.3508]),SFVec2f([0.6262,0.3508]),SFVec2f([0.6297,0.3503]),SFVec2f([0.5389,0.3503]),SFVec2f([0.4181,0.3884]),SFVec2f([0.5389,0.3503]),SFVec2f([0.6297,0.3503]),SFVec2f([0.6262,0.3508]),SFVec2f([0.698,0.3508]),SFVec2f([0.7635,0.3451]),SFVec2f([0.6237,0.3398])])))))]),

                        HAnimJoint(
                          name_ : SFString('l_hip'),
                          DEF_ : SFString('hanim_l_hip'),
                          center_ : SFVec3f([SFDouble(4.207), SFDouble(36.740002), SFDouble(-0.8155)]),
                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                          children_ : [
                            HAnimSegment(
                              name_ : SFString('l_thigh'),
                              DEF_ : SFString('hanim_l_thigh'),
                              children_ : [
                                Transform(
                                  translation_ : SFVec3f([SFDouble(4.207), SFDouble(36.740002), SFDouble(-0.8155)]),
                                  child_ : 
                                    Shape(
                                      appearance_ : 
                                        Appearance(
                                          material_ : 
                                            Material(
                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                          texture_ : 
                                            ImageTexture(
                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                      geometry_ : 
                                        IndexedFaceSet(
                                          coordIndex_ : MFInt32([SFInt32(47), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(45), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(47), SFInt32(45), SFInt32(42), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(42), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(56), SFInt32(58), SFInt32(61), SFInt32(-1), SFInt32(62), SFInt32(56), SFInt32(61), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(41), SFInt32(-1), SFInt32(35), SFInt32(41), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(28), SFInt32(35), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(44), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(42), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(48), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(51), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(52), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(53), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(54), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(55), SFInt32(-1), SFInt32(49), SFInt32(55), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(35), SFInt32(49), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(57), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(58), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(59), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(60), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(61), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(62), SFInt32(-1), SFInt32(56), SFInt32(62), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(49), SFInt32(56), SFInt32(-1)]),
                                          creaseAngle_ : 3.14159,
                                          texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(9), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(23), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(42), SFInt32(44), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(42), SFInt32(47), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(35), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(41), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(29), SFInt32(36), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(54), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(56), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(58), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(60), SFInt32(58), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(62), SFInt32(60), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(52), SFInt32(62), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(49), SFInt32(52), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(20), SFInt32(6), SFInt32(-1), SFInt32(63), SFInt32(64), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(63), SFInt32(-1), SFInt32(65), SFInt32(63), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(54), SFInt32(65), SFInt32(-1), SFInt32(66), SFInt32(65), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(66), SFInt32(-1), SFInt32(67), SFInt32(66), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(58), SFInt32(67), SFInt32(-1), SFInt32(68), SFInt32(67), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(68), SFInt32(-1), SFInt32(69), SFInt32(68), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(62), SFInt32(69), SFInt32(-1), SFInt32(64), SFInt32(69), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(52), SFInt32(64), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(63), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(65), SFInt32(44), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(66), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(67), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(68), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(69), SFInt32(48), SFInt32(-1), SFInt32(42), SFInt32(48), SFInt32(69), SFInt32(-1), SFInt32(69), SFInt32(64), SFInt32(42), SFInt32(-1)]),
                                          coord_ : 
                                            Coordinate(
                                              point_ : MFVec3f([SFVec3f([2.96,-0.0706,0]),SFVec3f([1.643,-0.0706,3.209]),SFVec3f([-1.316,-0.0706,4.002]),SFVec3f([-3.367,-0.0706,1.781]),SFVec3f([-3.367,-0.0706,-1.781]),SFVec3f([-1.316,-0.0706,-4.002]),SFVec3f([1.643,-0.0706,-3.209]),SFVec3f([2.96,-3.82,0]),SFVec3f([1.643,-3.82,3.209]),SFVec3f([-1.316,-3.82,4.002]),SFVec3f([-3.367,-3.82,1.781]),SFVec3f([-3.367,-3.82,-1.781]),SFVec3f([-1.316,-3.82,-4.002]),SFVec3f([1.643,-3.82,-3.209]),SFVec3f([2.96,-10.32,0]),SFVec3f([1.643,-10.32,3.209]),SFVec3f([-1.316,-10.32,4.002]),SFVec3f([-3.367,-10.32,1.781]),SFVec3f([-3.367,-10.32,-1.781]),SFVec3f([-1.316,-10.32,-4.002]),SFVec3f([1.643,-10.32,-3.209]),SFVec3f([3.367,-16.94,0]),SFVec3f([1.897,-16.94,3.582]),SFVec3f([-1.407,-16.94,4.467]),SFVec3f([-3.355,-16.94,1.988]),SFVec3f([-3.355,-16.94,-1.988]),SFVec3f([-1.407,-16.94,-4.467]),SFVec3f([1.897,-16.94,-3.582]),SFVec3f([2.146,-8.794,0]),SFVec3f([1.136,-8.794,2.462]),SFVec3f([-1.135,-8.794,3.07]),SFVec3f([-2.633,-8.794,1.366]),SFVec3f([-2.633,-8.794,-1.366]),SFVec3f([-1.135,-8.794,-3.07]),SFVec3f([1.136,-8.794,-2.462]),SFVec3f([2.156,-15.25,0]),SFVec3f([1.225,-15.25,1.956]),SFVec3f([-0.8662,-15.25,2.439]),SFVec3f([-2.543,-15.25,1.085]),SFVec3f([-2.543,-15.25,-1.085]),SFVec3f([-0.8662,-15.25,-2.439]),SFVec3f([1.225,-15.25,-1.956]),SFVec3f([2.051,1.92,0]),SFVec3f([1.076,1.92,2.375]),SFVec3f([-1.114,1.92,2.961]),SFVec3f([-2.87,1.92,1.318]),SFVec3f([-2.87,1.92,-1.318]),SFVec3f([-1.114,1.92,-2.961]),SFVec3f([1.076,1.92,-2.375]),SFVec3f([1.842,-18.93,0]),SFVec3f([1.03,-18.93,1.873]),SFVec3f([-0.7965,-18.93,2.295]),SFVec3f([-2.261,-18.93,1.113]),SFVec3f([-2.261,-18.93,-0.9478]),SFVec3f([-0.7965,-18.93,-2.13]),SFVec3f([1.03,-18.93,-1.708]),SFVec3f([0.6277,-19.91,0]),SFVec3f([0.2723,-19.91,0.912]),SFVec3f([-0.5262,-19.91,1.096]),SFVec3f([-1.167,-19.91,0.5796]),SFVec3f([-1.167,-19.91,-0.4145]),SFVec3f([-0.5262,-19.91,-0.9313]),SFVec3f([0.2723,-19.91,-0.7469])])),
                                          texCoord_ : 
                                            TextureCoordinate(
                                              point_ : MFVec2f([SFVec2f([0.719,0.5576]),SFVec2f([0.6284,0.5576]),SFVec2f([0.7414,0.5576]),SFVec2f([0.6787,0.5576]),SFVec2f([0.5781,0.5576]),SFVec2f([0.5154,0.5576]),SFVec2f([0.5378,0.5576]),SFVec2f([0.6284,0.5029]),SFVec2f([0.7509,0.3997]),SFVec2f([0.6284,0.3997]),SFVec2f([0.7509,0.5029]),SFVec2f([0.7811,0.3997]),SFVec2f([0.7811,0.5029]),SFVec2f([0.6964,0.3997]),SFVec2f([0.6964,0.5029]),SFVec2f([0.5604,0.3997]),SFVec2f([0.5604,0.5029]),SFVec2f([0.4756,0.3997]),SFVec2f([0.4756,0.5029]),SFVec2f([0.5059,0.3997]),SFVec2f([0.5059,0.5029]),SFVec2f([0.7509,0.3197]),SFVec2f([0.6284,0.3197]),SFVec2f([0.7811,0.3197]),SFVec2f([0.6964,0.3197]),SFVec2f([0.5604,0.3197]),SFVec2f([0.4756,0.3197]),SFVec2f([0.5059,0.3197]),SFVec2f([0.7651,0.2166]),SFVec2f([0.6284,0.2166]),SFVec2f([0.7989,0.2166]),SFVec2f([0.7043,0.2166]),SFVec2f([0.5525,0.2166]),SFVec2f([0.4579,0.2166]),SFVec2f([0.4917,0.2166]),SFVec2f([0.7224,0.263]),SFVec2f([0.6284,0.263]),SFVec2f([0.7456,0.263]),SFVec2f([0.6805,0.263]),SFVec2f([0.5762,0.263]),SFVec2f([0.5112,0.263]),SFVec2f([0.5344,0.263]),SFVec2f([0.8705,0.5452]),SFVec2f([0.8705,0.5383]),SFVec2f([0.8705,0.5369]),SFVec2f([0.8705,0.5408]),SFVec2f([0.8705,0.5483]),SFVec2f([0.8705,0.5522]),SFVec2f([0.8705,0.5509]),SFVec2f([0.917,0.5452]),SFVec2f([0.917,0.5266]),SFVec2f([0.89,0.5304]),SFVec2f([0.89,0.5452]),SFVec2f([0.917,0.522]),SFVec2f([0.89,0.5268]),SFVec2f([0.917,0.5349]),SFVec2f([0.89,0.537]),SFVec2f([0.917,0.5555]),SFVec2f([0.89,0.5534]),SFVec2f([0.917,0.5684]),SFVec2f([0.89,0.5636]),SFVec2f([0.917,0.5638]),SFVec2f([0.89,0.56]),SFVec2f([0.8746,0.531]),SFVec2f([0.8746,0.5452]),SFVec2f([0.8746,0.5279]),SFVec2f([0.8746,0.5368]),SFVec2f([0.8746,0.5524]),SFVec2f([0.8746,0.5613]),SFVec2f([0.8746,0.5581])])))))]),

                            HAnimJoint(
                              name_ : SFString('l_knee'),
                              DEF_ : SFString('hanim_l_knee'),
                              center_ : SFVec3f([SFDouble(4.116), SFDouble(18.17), SFDouble(-0.8639)]),
                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                              children_ : [
                                HAnimSegment(
                                  name_ : SFString('l_calf'),
                                  DEF_ : SFString('hanim_l_calf'),
                                  children_ : [
                                    Transform(
                                      translation_ : SFVec3f([SFDouble(4.116), SFDouble(18.17), SFDouble(-0.8639)]),
                                      child_ : 
                                        Shape(
                                          appearance_ : 
                                            Appearance(
                                              material_ : 
                                                Material(
                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                              texture_ : 
                                                ImageTexture(
                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                          geometry_ : 
                                            IndexedFaceSet(
                                              coordIndex_ : MFInt32([SFInt32(4), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(1), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(23), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(11), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(7), SFInt32(28), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(29), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(35), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(34), SFInt32(28), SFInt32(-1)]),
                                              creaseAngle_ : 3.14159,
                                              texCoordIndex_ : MFInt32([SFInt32(4), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(1), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(23), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(11), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(7), SFInt32(28), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(29), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(35), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(34), SFInt32(28), SFInt32(-1)]),
                                              coord_ : 
                                                Coordinate(
                                                  point_ : MFVec3f([SFVec3f([0.7186,0.9688,0.0234]),SFVec3f([0.3632,0.9688,0.9354]),SFVec3f([-0.4353,0.9688,1.12]),SFVec3f([-1.076,0.9688,0.603]),SFVec3f([-1.076,0.9688,-0.3911]),SFVec3f([-0.4353,0.9688,-0.9079]),SFVec3f([0.3632,0.9688,-0.7235]),SFVec3f([2.337,-4.613,0.0234]),SFVec3f([1.46,-3.622,2.019]),SFVec3f([1.236,-1.628,2.42]),SFVec3f([2.118,-1.912,0.0234]),SFVec3f([-0.8111,-3.622,2.567]),SFVec3f([-0.7468,-1.628,2.903]),SFVec3f([-2.254,-4.613,1.255]),SFVec3f([-2.337,-1.912,0.9793]),SFVec3f([-2.254,-5.383,-1.368]),SFVec3f([-2.337,-1.912,-0.9325]),SFVec3f([-0.8111,-5.383,-2.903]),SFVec3f([-0.7468,-1.912,-2.368]),SFVec3f([1.46,-5.383,-2.355]),SFVec3f([1.236,-1.912,-1.885]),SFVec3f([1.121,-0.0032,1.896]),SFVec3f([1.933,-0.0032,0.0234]),SFVec3f([-0.7056,-0.0032,2.318]),SFVec3f([-2.17,-0.0032,1.136]),SFVec3f([-2.17,-0.0032,-0.9244]),SFVec3f([-0.7056,-0.0032,-2.061]),SFVec3f([1.121,-0.0032,-1.64]),SFVec3f([1.607,-12.92,0.0032]),SFVec3f([0.9216,-12.91,1.565]),SFVec3f([-0.619,-12.91,1.951]),SFVec3f([-1.854,-12.92,0.8701]),SFVec3f([-1.854,-12.94,-0.9762]),SFVec3f([-0.619,-12.94,-1.742]),SFVec3f([0.9216,-12.94,-1.356]),SFVec3f([0.7072,-14.53,0.0239]),SFVec3f([0.3604,-14.53,0.814]),SFVec3f([-0.4188,-14.53,1.009]),SFVec3f([-1.044,-14.53,0.4624]),SFVec3f([-1.044,-14.54,-0.4714]),SFVec3f([-0.4188,-14.54,-0.8587]),SFVec3f([0.3604,-14.54,-0.6635])])),
                                              texCoord_ : 
                                                TextureCoordinate(
                                                  point_ : MFVec2f([SFVec2f([0.9309,0.5848]),SFVec2f([0.919,0.5848]),SFVec2f([0.8921,0.5848]),SFVec2f([0.8706,0.5848]),SFVec2f([0.8706,0.5848]),SFVec2f([0.8921,0.5848]),SFVec2f([0.919,0.5848]),SFVec2f([0.9845,0.5321]),SFVec2f([0.955,0.5475]),SFVec2f([0.9491,0.5599]),SFVec2f([0.9788,0.5571]),SFVec2f([0.8787,0.5475]),SFVec2f([0.8825,0.5599]),SFVec2f([0.8302,0.5321]),SFVec2f([0.8291,0.5571]),SFVec2f([0.8302,0.52]),SFVec2f([0.8291,0.5571]),SFVec2f([0.8787,0.52]),SFVec2f([0.8825,0.5571]),SFVec2f([0.955,0.52]),SFVec2f([0.9491,0.5571]),SFVec2f([0.9444,0.5755]),SFVec2f([0.9717,0.5755]),SFVec2f([0.8831,0.5755]),SFVec2f([0.8339,0.5755]),SFVec2f([0.8339,0.5755]),SFVec2f([0.8831,0.5755]),SFVec2f([0.9444,0.5755]),SFVec2f([0.9632,0.3942]),SFVec2f([0.9402,0.3943]),SFVec2f([0.8884,0.3943]),SFVec2f([0.8469,0.3942]),SFVec2f([0.8469,0.3941]),SFVec2f([0.8884,0.3941]),SFVec2f([0.9402,0.3941]),SFVec2f([0.9325,0.3742]),SFVec2f([0.9208,0.3742]),SFVec2f([0.8947,0.3742]),SFVec2f([0.8737,0.3742]),SFVec2f([0.8737,0.3741]),SFVec2f([0.8947,0.3741]),SFVec2f([0.9208,0.3741])])))))]),

                                HAnimJoint(
                                  name_ : SFString('l_talocrural'),
                                  DEF_ : SFString('hanim_l_talocrural'),
                                  center_ : SFVec3f([SFDouble(3.948), SFDouble(4.242), SFDouble(-0.4645)]),
                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                  children_ : [
                                    HAnimSegment(
                                      name_ : SFString('l_talus'),
                                      DEF_ : SFString('hanim_l_talus'),
                                      children_ : [
                                        Transform(
                                          translation_ : SFVec3f([SFDouble(3.948), SFDouble(4.242), SFDouble(-0.4645)]),
                                          child_ : 
                                            Shape(
                                              appearance_ : 
                                                Appearance(
                                                  material_ : 
                                                    Material(
                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                  texture_ : 
                                                    ImageTexture(
                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                              geometry_ : 
                                                IndexedFaceSet(
                                                  coordIndex_ : MFInt32([SFInt32(13), SFInt32(34), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(34), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(0), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(33), SFInt32(30), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(22), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(27), SFInt32(19), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(33), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(33), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(25), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(24), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(8), SFInt32(19), SFInt32(-1), SFInt32(4), SFInt32(22), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(29), SFInt32(19), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(6), SFInt32(19), SFInt32(29), SFInt32(-1), SFInt32(1), SFInt32(31), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(31), SFInt32(2), SFInt32(-1), SFInt32(31), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(3), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(31), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(31), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(31), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(31), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(31), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(33), SFInt32(14), SFInt32(-1), SFInt32(32), SFInt32(14), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(11), SFInt32(32), SFInt32(-1), SFInt32(35), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(43), SFInt32(41), SFInt32(39), SFInt32(-1), SFInt32(45), SFInt32(43), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(35), SFInt32(39), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(37), SFInt32(-1), SFInt32(26), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(8), SFInt32(26), SFInt32(-1), SFInt32(8), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(28), SFInt32(8), SFInt32(-1), SFInt32(28), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(10), SFInt32(28), SFInt32(-1), SFInt32(10), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(24), SFInt32(10), SFInt32(-1), SFInt32(24), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(12), SFInt32(23), SFInt32(-1), SFInt32(12), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(32), SFInt32(11), SFInt32(-1), SFInt32(32), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(13), SFInt32(32), SFInt32(-1), SFInt32(13), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(34), SFInt32(13), SFInt32(-1), SFInt32(34), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(9), SFInt32(34), SFInt32(-1), SFInt32(9), SFInt32(46), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(26), SFInt32(9), SFInt32(-1)]),
                                                  creaseAngle_ : 3.14159,
                                                  texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(12), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(34), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(30), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(33), SFInt32(30), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(21), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(33), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(2), SFInt32(19), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(28), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(23), SFInt32(28), SFInt32(-1), SFInt32(21), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(23), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(29), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(31), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(31), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(13), SFInt32(30), SFInt32(-1), SFInt32(13), SFInt32(31), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(31), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(31), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(31), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(26), SFInt32(-1), SFInt32(10), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(33), SFInt32(11), SFInt32(-1), SFInt32(32), SFInt32(11), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(3), SFInt32(32), SFInt32(-1), SFInt32(35), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(43), SFInt32(41), SFInt32(39), SFInt32(-1), SFInt32(45), SFInt32(43), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(35), SFInt32(39), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(37), SFInt32(-1), SFInt32(1), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(29), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(2), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(32), SFInt32(3), SFInt32(-1), SFInt32(32), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(5), SFInt32(32), SFInt32(-1), SFInt32(5), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(34), SFInt32(5), SFInt32(-1), SFInt32(34), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(7), SFInt32(34), SFInt32(-1), SFInt32(7), SFInt32(46), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(1), SFInt32(7), SFInt32(-1)]),
                                                  coord_ : 
                                                    Coordinate(
                                                      point_ : MFVec3f([SFVec3f([-0.8393,-0.0174,-1.188]),SFVec3f([-1.144,-0.1364,-0.2829]),SFVec3f([-0.3552,0.0498,-1.609]),SFVec3f([0.871,-0.0001,-1.186]),SFVec3f([1.125,-0.0898,-0.529]),SFVec3f([0.7565,-0.0703,0.5621]),SFVec3f([-0.053,-0.0302,0.8302]),SFVec3f([-0.7589,-0.0877,0.5643]),SFVec3f([-0.0732,-1.091,0.9897]),SFVec3f([-1.025,-1.308,0.5497]),SFVec3f([0.8955,-1.383,0.5769]),SFVec3f([0.2622,-1.481,-1.89]),SFVec3f([1.034,-1.351,-1.37]),SFVec3f([-1.019,-1.351,-1.414]),SFVec3f([-0.3452,-0.5115,-1.682]),SFVec3f([-0.9219,-0.5266,-1.26]),SFVec3f([0.7956,-0.4862,-1.244]),SFVec3f([1.31,-1.007,-0.0779]),SFVec3f([0.7172,-0.6496,0.5797]),SFVec3f([-0.0234,-0.5209,0.8613]),SFVec3f([-0.8111,-0.5742,0.5811]),SFVec3f([-1.266,-0.65,-0.3815]),SFVec3f([1.115,-0.1083,-0.0507]),SFVec3f([1.176,-1.652,-0.6627]),SFVec3f([1.158,-1.659,-0.1435]),SFVec3f([1.331,-0.9612,-0.5874]),SFVec3f([-0.5196,-1.198,0.8491]),SFVec3f([-0.3793,-0.5469,0.7717]),SFVec3f([0.4065,-1.235,0.8627]),SFVec3f([0.3849,-0.5846,0.771]),SFVec3f([0.2393,0.0558,-1.608]),SFVec3f([-0.037,0.336,-0.3208]),SFVec3f([-0.293,-1.478,-1.895]),SFVec3f([0.2103,-0.4984,-1.679]),SFVec3f([-1.331,-1.587,-0.3858]),SFVec3f([-0.4364,-2.025,0.6704]),SFVec3f([-0.0997,-1.904,0.7731]),SFVec3f([0.2642,-2.055,0.6792]),SFVec3f([0.6413,-2.205,0.4606]),SFVec3f([0.8623,-2.494,-0.1471]),SFVec3f([0.8786,-2.478,-0.6084]),SFVec3f([0.7666,-2.132,-1.193]),SFVec3f([0.1384,-2.273,-1.612]),SFVec3f([-0.2345,-2.279,-1.615]),SFVec3f([-0.8197,-2.156,-1.228]),SFVec3f([-1.09,-2.438,-0.3404]),SFVec3f([-0.8313,-2.145,0.4395])])),
                                                  texCoord_ : 
                                                    TextureCoordinate(
                                                      point_ : MFVec2f([SFVec2f([0.227,0.1089]),SFVec2f([0.2217,0.1285]),SFVec2f([0.2533,0.0835]),SFVec2f([0.273,0.1232]),SFVec2f([0.2824,0.0941]),SFVec2f([0.2433,0.1632]),SFVec2f([0.2685,0.0797]),SFVec2f([0.2165,0.148]),SFVec2f([0.2759,0.0832]),SFVec2f([0.2428,0.156]),SFVec2f([0.2563,0.142]),SFVec2f([0.2584,0.1419]),SFVec2f([0.2431,0.1588]),SFVec2f([0.2715,0.1062]),SFVec2f([0.2761,0.1011]),SFVec2f([0.2698,0.09]),SFVec2f([0.2775,0.078]),SFVec2f([0.2629,0.0863]),SFVec2f([0.248,0.0935]),SFVec2f([0.2498,0.0895]),SFVec2f([0.2702,0.0748]),SFVec2f([0.2296,0.1148]),SFVec2f([0.2397,0.101]),SFVec2f([0.2249,0.1266]),SFVec2f([0.2295,0.1126]),SFVec2f([0.2207,0.1406]),SFVec2f([0.2252,0.1591]),SFVec2f([0.2245,0.1634]),SFVec2f([0.2202,0.1406]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2662,0.1249]),SFVec2f([0.2599,0.1313]),SFVec2f([0.2623,0.1418]),SFVec2f([0.2691,0.1232]),SFVec2f([0.2231,0.166]),SFVec2f([0.2217,0.1285]),SFVec2f([0.227,0.1089]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2685,0.0797]),SFVec2f([0.2759,0.0832]),SFVec2f([0.2824,0.0941]),SFVec2f([0.273,0.1232]),SFVec2f([0.2623,0.1418]),SFVec2f([0.2433,0.1632]),SFVec2f([0.2231,0.166]),SFVec2f([0.2165,0.148])])))))]),

                                    HAnimJoint(
                                      name_ : SFString('l_talocalcaneonavicular'),
                                      DEF_ : SFString('hanim_l_talocalcaneonavicular'),
                                      center_ : SFVec3f([SFDouble(3.48), SFDouble(1.64), SFDouble(0.2162)]),
                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      children_ : [
                                        HAnimSegment(
                                          name_ : SFString('l_navicular'),
                                          DEF_ : SFString('hanim_l_navicular'),
                                          children_ : [
                                            Transform(
                                              translation_ : SFVec3f([SFDouble(3.48), SFDouble(1.64), SFDouble(0.2162)]),
                                              child_ : 
                                                Shape(
                                                  appearance_ : 
                                                    Appearance(
                                                      material_ : 
                                                        Material(
                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                      texture_ : 
                                                        ImageTexture(
                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                  geometry_ : 
                                                    IndexedFaceSet(
                                                      coordIndex_ : MFInt32([SFInt32(7), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(28), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(24), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(26), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(34), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(37), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(38), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(28), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(18), SFInt32(11), SFInt32(-1), SFInt32(18), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(13), SFInt32(37), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(37), SFInt32(13), SFInt32(-1), SFInt32(37), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(15), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(4), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(25), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(45), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(0), SFInt32(24), SFInt32(-1)]),
                                                      creaseAngle_ : 3.14159,
                                                      texCoordIndex_ : MFInt32([SFInt32(7), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(28), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(24), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(26), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(34), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(37), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(38), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(28), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(18), SFInt32(11), SFInt32(-1), SFInt32(18), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(13), SFInt32(37), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(37), SFInt32(13), SFInt32(-1), SFInt32(37), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(15), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(4), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(25), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(45), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(0), SFInt32(24), SFInt32(-1)]),
                                                      coord_ : 
                                                        Coordinate(
                                                          point_ : MFVec3f([SFVec3f([0.8972,0.8045,0.6788]),SFVec3f([-0.6876,-1.034,0.429]),SFVec3f([-0.8213,0.0037,0.4098]),SFVec3f([-0.5423,-1.396,0.5699]),SFVec3f([0.8663,-1.47,0.683]),SFVec3f([0.3971,1.184,0.6443]),SFVec3f([-0.6772,0.6655,0.5173]),SFVec3f([-0.1187,1.052,0.7179]),SFVec3f([0.3868,-1.485,0.6432]),SFVec3f([-0.1381,-1.479,0.7246]),SFVec3f([0.394,1.511,0.309]),SFVec3f([-0.5576,1.294,-0.131]),SFVec3f([-0.0524,1.404,0.1684]),SFVec3f([0.8736,1.366,0.182]),SFVec3f([-0.6272,-1.476,-0.1356]),SFVec3f([0.89,-1.511,-0.1477]),SFVec3f([0.1521,-1.51,-0.0848]),SFVec3f([-0.7688,-1.064,-0.1614]),SFVec3f([-0.8972,-0.0133,-0.1652]),SFVec3f([-0.6077,-0.9851,0.7902]),SFVec3f([-0.7367,-0.2268,0.7715]),SFVec3f([-0.6074,0.227,0.877]),SFVec3f([-0.1008,0.4934,1.071]),SFVec3f([0.3446,0.5793,0.9883]),SFVec3f([0.7568,0.3427,1.012]),SFVec3f([0.728,-1.256,1.016]),SFVec3f([0.3573,-1.265,0.9905]),SFVec3f([-0.1551,-1.261,1.074]),SFVec3f([-0.4926,-1.208,0.9273]),SFVec3f([0.4349,1.327,-0.2949]),SFVec3f([0.049,1.235,-0.4281]),SFVec3f([-0.3331,1.155,-0.7124]),SFVec3f([-0.6313,0.0115,-0.7287]),SFVec3f([-0.5112,-0.976,-0.7205]),SFVec3f([-0.4265,-1.229,-0.6873]),SFVec3f([0.2055,-1.256,-0.651]),SFVec3f([0.7238,-1.253,-0.736]),SFVec3f([0.7084,1.253,-0.4372]),SFVec3f([1.285,0.6426,0.462]),SFVec3f([1.266,0.8934,0.1006]),SFVec3f([1.139,1.106,-0.2956]),SFVec3f([1.153,-1.137,-0.563]),SFVec3f([1.28,-1.327,-0.1294]),SFVec3f([1.261,-1.289,0.5282]),SFVec3f([1.182,-1.352,0.8393]),SFVec3f([1.206,0.2601,0.8352])])),
                                                      texCoord_ : 
                                                        TextureCoordinate(
                                                          point_ : MFVec2f([SFVec2f([0.2314,0.0879]),SFVec2f([0.21,0.1541]),SFVec2f([0.2053,0.1595]),SFVec2f([0.2104,0.1443]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2032,0.149]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2163,0.1174]),SFVec2f([0.227,0.1089]),SFVec2f([0.2165,0.148]),SFVec2f([0.2217,0.1285]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2178,0.1526]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2213,0.1179]),SFVec2f([0.2171,0.1588]),SFVec2f([0.2129,0.1643]),SFVec2f([0.21,0.1541]),SFVec2f([0.2053,0.1595]),SFVec2f([0.2032,0.149]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2104,0.1443]),SFVec2f([0.227,0.1089]),SFVec2f([0.2217,0.1285]),SFVec2f([0.2165,0.148]),SFVec2f([0.2129,0.1643]),SFVec2f([0.2171,0.1588]),SFVec2f([0.2178,0.1526]),SFVec2f([0.2213,0.1179]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2314,0.0879])])))))]),

                                        HAnimJoint(
                                          name_ : SFString('l_cuneonavicular_1'),
                                          DEF_ : SFString('hanim_l_cuneonavicular_1'),
                                          center_ : SFVec3f([SFDouble(2.994), SFDouble(1.427), SFDouble(0.8174)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('l_cuneiform_1'),
                                              DEF_ : SFString('hanim_l_cuneiform_1'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(2.994), SFDouble(1.427), SFDouble(0.8174)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(22), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(4), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(28), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(6), SFInt32(9), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(22), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(15), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(28), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(6), SFInt32(9), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([0.0007,-1.109,0.4253]),SFVec3f([-0.2643,-0.769,0.4516]),SFVec3f([-0.31,0.2508,0.3964]),SFVec3f([0.3018,0.9142,0.48]),SFVec3f([0.2988,-1.247,0.4693]),SFVec3f([-0.4654,0.1787,1.077]),SFVec3f([-0.3013,-1.107,1.108]),SFVec3f([-0.5181,-0.7521,1.038]),SFVec3f([0.2439,0.5544,1.187]),SFVec3f([0.2465,-1.253,1.201]),SFVec3f([-0.2008,-0.8201,-0.1723]),SFVec3f([-0.3345,0.2174,-0.1914]),SFVec3f([-0.0554,-1.183,-0.0314]),SFVec3f([-0.1904,0.8791,-0.084]),SFVec3f([0.3681,1.266,0.1166]),SFVec3f([0.3487,-1.266,0.1234]),SFVec3f([0.5607,0.81,0.4342]),SFVec3f([0.5963,0.9711,0.2685]),SFVec3f([0.5792,-1.134,0.2739]),SFVec3f([0.5494,-1.122,0.4935]),SFVec3f([0.506,-1.127,1.102]),SFVec3f([0.5033,0.4765,1.089]),SFVec3f([-0.2424,-0.982,1.47]),SFVec3f([-0.4192,-0.7263,1.408]),SFVec3f([-0.3724,0.0098,1.445]),SFVec3f([0.2492,0.2999,1.549]),SFVec3f([0.3973,0.2594,1.478]),SFVec3f([0.3998,-1.02,1.489]),SFVec3f([0.2312,-1.094,1.562])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.2027,0.1355]),SFVec2f([0.2132,0.1171]),SFVec2f([0.1958,0.1447]),SFVec2f([0.1899,0.1499]),SFVec2f([0.2047,0.1286]),SFVec2f([0.1825,0.1473]),SFVec2f([0.1858,0.1369]),SFVec2f([0.1864,0.1452]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.21,0.1541]),SFVec2f([0.2053,0.1595]),SFVec2f([0.2104,0.1443]),SFVec2f([0.2032,0.149]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2047,0.1286]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2132,0.1171]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1858,0.1369]),SFVec2f([0.1864,0.1452]),SFVec2f([0.1825,0.1473]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.2059,0.1148])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('l_tarsometatarsal_1'),
                                              DEF_ : SFString('hanim_l_tarsometatarsal_1'),
                                              center_ : SFVec3f([SFDouble(2.872), SFDouble(1.033), SFDouble(1.964)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('l_metatarsal_1'),
                                                  DEF_ : SFString('hanim_l_metatarsal_1'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(2.872), SFDouble(1.033), SFDouble(1.964)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(21), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(39), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(36), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(42), SFInt32(40), SFInt32(46), SFInt32(-1), SFInt32(45), SFInt32(42), SFInt32(46), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(18), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(45), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(15), SFInt32(23), SFInt32(-1), SFInt32(15), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(5), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(16), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(31), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(17), SFInt32(39), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(27), SFInt32(23), SFInt32(-1), SFInt32(27), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(22), SFInt32(26), SFInt32(-1), SFInt32(22), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(46), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(21), SFInt32(19), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(3), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(39), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(36), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(42), SFInt32(40), SFInt32(46), SFInt32(-1), SFInt32(45), SFInt32(42), SFInt32(46), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(14), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(18), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(45), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(15), SFInt32(23), SFInt32(-1), SFInt32(15), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(5), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(16), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(31), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(17), SFInt32(39), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(27), SFInt32(23), SFInt32(-1), SFInt32(27), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(22), SFInt32(26), SFInt32(-1), SFInt32(22), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(46), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(21), SFInt32(19), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([-0.562,-0.9482,1.384]),SFVec3f([-0.6218,0.234,1.681]),SFVec3f([-0.7597,-0.537,1.629]),SFVec3f([-0.489,-0.3521,0.1795]),SFVec3f([-0.411,0.5415,0.3114]),SFVec3f([-0.5231,-0.8677,2.175]),SFVec3f([-0.5335,0.0824,2.208]),SFVec3f([-0.6227,-0.537,2.28]),SFVec3f([-0.2889,-0.7119,0.2522]),SFVec3f([-0.7121,-0.4572,1.055]),SFVec3f([-0.5707,0.3593,1.151]),SFVec3f([-0.5319,-0.9316,0.9896]),SFVec3f([0.3801,0.3685,1.628]),SFVec3f([0.3394,0.7871,0.4484]),SFVec3f([0.3842,-0.9482,1.527]),SFVec3f([0.3046,-0.8633,0.3382]),SFVec3f([0.4577,0.1663,2.193]),SFVec3f([0.4594,-0.868,2.156]),SFVec3f([0.3457,0.5783,1.066]),SFVec3f([-0.344,0.5726,-0.0702]),SFVec3f([-0.1799,-0.7129,-0.039]),SFVec3f([-0.3967,-0.3582,-0.1085]),SFVec3f([0.3653,0.9482,0.0401]),SFVec3f([0.3679,-0.8593,0.054]),SFVec3f([0.6136,0.3929,0.9908]),SFVec3f([0.6118,0.6022,0.3719]),SFVec3f([0.6079,0.6587,0.2275]),SFVec3f([0.617,-0.6662,0.2386]),SFVec3f([0.5774,-0.6674,0.3377]),SFVec3f([0.6534,-0.7513,1.513]),SFVec3f([0.7048,-0.6945,1.958]),SFVec3f([0.7047,0.029,1.984]),SFVec3f([0.6466,0.1836,1.552]),SFVec3f([-0.3548,-0.7559,2.4]),SFVec3f([-0.4377,-0.5059,2.486]),SFVec3f([-0.3635,-0.0376,2.427]),SFVec3f([0.4603,0.0258,2.414]),SFVec3f([0.6656,-0.078,2.241]),SFVec3f([0.6657,-0.6249,2.219]),SFVec3f([0.4618,-0.7561,2.383]),SFVec3f([-0.0182,-0.2985,-0.3352]),SFVec3f([0.1101,-0.5117,-0.2822]),SFVec3f([0.4889,-0.6114,-0.2535]),SFVec3f([0.5739,-0.5388,-0.1727]),SFVec3f([0.5662,0.5554,-0.1816]),SFVec3f([0.4934,0.669,-0.2851]),SFVec3f([0.0215,0.4249,-0.2986])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.177,0.1457]),SFVec2f([0.1567,0.1378]),SFVec2f([0.1506,0.1431]),SFVec2f([0.1539,0.1386]),SFVec2f([0.1751,0.1447]),SFVec2f([0.1523,0.1336]),SFVec2f([0.1493,0.1348]),SFVec2f([0.1463,0.1377]),SFVec2f([0.1689,0.1382]),SFVec2f([0.1638,0.1444]),SFVec2f([0.1645,0.1416]),SFVec2f([0.1607,0.138]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1859,0.1202]),SFVec2f([0.175,0.1048]),SFVec2f([0.1985,0.1126]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1825,0.1473]),SFVec2f([0.1858,0.1369]),SFVec2f([0.1864,0.1452]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1985,0.1126]),SFVec2f([0.175,0.1048]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1523,0.1336]),SFVec2f([0.1463,0.1377]),SFVec2f([0.1493,0.1348]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1864,0.1452]),SFVec2f([0.1858,0.1369]),SFVec2f([0.2059,0.1148]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1825,0.1473])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('l_metatarsophalangeal_1'),
                                                  DEF_ : SFString('hanim_l_metatarsophalangeal_1'),
                                                  center_ : SFVec3f([SFDouble(2.761), SFDouble(0.6411), SFDouble(4.161)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('l_tarsal_proximal_phalanx_1'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_phalanx_1'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(2.761), SFDouble(0.6411), SFDouble(4.161)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(9), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(5), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(11), SFInt32(-1), SFInt32(23), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(37), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(37), SFInt32(41), SFInt32(39), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(35), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(25), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(29), SFInt32(-1), SFInt32(35), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(17), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(15), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(29), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(42), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(2), SFInt32(3), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(27), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(27), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(35), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(32), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(36), SFInt32(34), SFInt32(-1), SFInt32(25), SFInt32(20), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(26), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(19), SFInt32(-1), SFInt32(37), SFInt32(20), SFInt32(32), SFInt32(-1), SFInt32(52), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(52), SFInt32(56), SFInt32(54), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(50), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(47), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(40), SFInt32(-1), SFInt32(43), SFInt32(40), SFInt32(44), SFInt32(-1), SFInt32(50), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(29), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(27), SFInt32(29), SFInt32(-1), SFInt32(27), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(31), SFInt32(27), SFInt32(-1), SFInt32(31), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(28), SFInt32(44), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(33), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(39), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(35), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(30), SFInt32(35), SFInt32(-1), SFInt32(30), SFInt32(51), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(4), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(9), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(57), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(4), SFInt32(6), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([0.5023,0.0206,0.5225]),SFVec3f([0.5069,0.3389,0.9722]),SFVec3f([-0.5239,0.3546,0.9857]),SFVec3f([-0.5823,-0.1222,0.9958]),SFVec3f([-0.5025,-0.5579,0.9554]),SFVec3f([0.5186,-0.5579,0.958]),SFVec3f([0.5816,-0.1339,0.9847]),SFVec3f([-0.5039,-0.0963,0.5275]),SFVec3f([-0.4495,0.4588,0.4262]),SFVec3f([-0.3875,0.4353,0.2405]),SFVec3f([-0.4682,-0.1454,0.2855]),SFVec3f([0.4437,0.4412,0.4574]),SFVec3f([0.4398,-0.4616,0.472]),SFVec3f([-0.4332,-0.4607,0.456]),SFVec3f([-0.3649,-0.4415,0.2162]),SFVec3f([-0.4121,-0.4761,-0.0214]),SFVec3f([-0.4225,0.4741,0.0111]),SFVec3f([-0.5118,-0.1454,0.0829]),SFVec3f([0.5687,0.5579,-0.0036]),SFVec3f([0.5704,-0.4763,-0.041]),SFVec3f([0.5628,-0.4412,0.2556]),SFVec3f([0.5641,0.4495,0.2541]),SFVec3f([0.5671,0.3479,0.4508]),SFVec3f([0.5823,-0.2729,0.4646]),SFVec3f([0.5691,0.0505,0.5098]),SFVec3f([-0.3979,-0.127,-0.1621]),SFVec3f([-0.3346,-0.3422,-0.2601]),SFVec3f([0.4303,-0.3427,-0.2664]),SFVec3f([0.429,0.4294,-0.2381]),SFVec3f([-0.3281,0.3657,-0.237]),SFVec3f([0.7564,-0.2649,-0.0329]),SFVec3f([0.752,-0.2445,0.139]),SFVec3f([0.7633,-0.147,0.2601]),SFVec3f([0.7556,0.0405,0.2863]),SFVec3f([0.7545,0.2128,0.2521]),SFVec3f([0.7527,0.2716,0.1381]),SFVec3f([0.7554,0.3345,-0.0112]),SFVec3f([-0.4054,0.215,1.213]),SFVec3f([0.3954,0.2028,1.201]),SFVec3f([0.4497,-0.1402,1.217]),SFVec3f([0.4063,-0.4314,1.193]),SFVec3f([-0.3905,-0.4313,1.189]),SFVec3f([-0.4468,-0.1239,1.226])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.148,0.1294]),SFVec2f([0.142,0.1322]),SFVec2f([0.1446,0.131]),SFVec2f([0.1613,0.0957]),SFVec2f([0.1341,0.1263]),SFVec2f([0.1554,0.0919]),SFVec2f([0.1317,0.1272]),SFVec2f([0.1363,0.1268]),SFVec2f([0.1571,0.0927]),SFVec2f([0.1559,0.0889]),SFVec2f([0.1392,0.1292]),SFVec2f([0.16,0.0958]),SFVec2f([0.1443,0.128]),SFVec2f([0.1415,0.1284]),SFVec2f([0.1616,0.0962]),SFVec2f([0.1346,0.0953]),SFVec2f([0.1273,0.0961]),SFVec2f([0.126,0.0891]),SFVec2f([0.1339,0.0889]),SFVec2f([0.1175,0.0992]),SFVec2f([0.228,0.0809]),SFVec2f([0.2186,0.0857]),SFVec2f([0.2172,0.0848]),SFVec2f([0.2097,0.0859]),SFVec2f([0.2098,0.0901]),SFVec2f([0.2285,0.0738]),SFVec2f([0.1152,0.1058]),SFVec2f([0.1523,0.1336]),SFVec2f([0.1493,0.1348]),SFVec2f([0.1463,0.1377]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.2293,0.0837]),SFVec2f([0.1648,0.0986]),SFVec2f([0.112,0.093]),SFVec2f([0.1632,0.098]),SFVec2f([0.113,0.0993]),SFVec2f([0.2302,0.0796]),SFVec2f([0.1153,0.1053]),SFVec2f([0.2293,0.0736]),SFVec2f([0.1463,0.1377]),SFVec2f([0.1523,0.1336]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1493,0.1348]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1648,0.0986]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2293,0.0736]),SFVec2f([0.113,0.0993]),SFVec2f([0.112,0.093]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1341,0.1263]),SFVec2f([0.1554,0.0919]),SFVec2f([0.1559,0.0889]),SFVec2f([0.1571,0.0927]),SFVec2f([0.1363,0.1268]),SFVec2f([0.1317,0.1272])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('l_tarsal_distal_interphalangeal_1'),
                                                      DEF_ : SFString('hanim_l_tarsal_distal_interphalangeal_1'),
                                                      center_ : SFVec3f([SFDouble(2.761), SFDouble(0.5394), SFDouble(5.125)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('l_tarsal_distal_phalanx_1'),
                                                          DEF_ : SFString('hanim_l_tarsal_distal_phalanx_1'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(2.761), SFDouble(0.5394), SFDouble(5.125)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(12), SFInt32(17), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(24), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(26), SFInt32(-1), SFInt32(16), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(23), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([0.344,0.2722,0.7455]),SFVec3f([-0.3545,0.2852,0.7666]),SFVec3f([-0.348,-0.0873,0.9093]),SFVec3f([-0.3417,-0.3926,0.7211]),SFVec3f([0.334,-0.3926,0.6949]),SFVec3f([0.3526,-0.0873,0.8916]),SFVec3f([0.4743,0.3506,0.4051]),SFVec3f([-0.5124,0.3666,0.4046]),SFVec3f([-0.567,-0.0456,0.443]),SFVec3f([-0.5027,-0.442,0.3984]),SFVec3f([0.4707,-0.4405,0.4103]),SFVec3f([0.5568,-0.1692,0.4444]),SFVec3f([0.5073,0.4406,0.0082]),SFVec3f([-0.5236,0.4563,0.0218]),SFVec3f([-0.582,-0.0206,0.0319]),SFVec3f([-0.5021,-0.4563,-0.0085]),SFVec3f([0.5189,-0.4563,-0.0059]),SFVec3f([0.582,-0.0322,0.0208]),SFVec3f([0.3902,0.3124,-0.2366]),SFVec3f([-0.4061,0.3245,-0.2249]),SFVec3f([-0.4471,-0.0116,-0.2116]),SFVec3f([-0.3913,-0.3165,-0.2486]),SFVec3f([0.401,-0.3166,-0.2442]),SFVec3f([0.444,-0.028,-0.2206])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.1287,0.113]),SFVec2f([0.1423,0.0921]),SFVec2f([0.1396,0.0889]),SFVec2f([0.1257,0.1107]),SFVec2f([0.1415,0.0903]),SFVec2f([0.1274,0.1123]),SFVec2f([0.1297,0.1214]),SFVec2f([0.15,0.0896]),SFVec2f([0.1273,0.1223]),SFVec2f([0.1313,0.1227]),SFVec2f([0.1521,0.0901]),SFVec2f([0.1498,0.0859]),SFVec2f([0.0527,0.151]),SFVec2f([0.0282,0.1325]),SFVec2f([0.0446,0.0894]),SFVec2f([0.0746,0.0899]),SFVec2f([0.1016,0.0977]),SFVec2f([0.1554,0.0919]),SFVec2f([0.0779,0.162]),SFVec2f([0.1341,0.1263]),SFVec2f([0.1317,0.1272]),SFVec2f([0.1363,0.1268]),SFVec2f([0.1571,0.0927]),SFVec2f([0.1559,0.0889]),SFVec2f([0.1554,0.0919]),SFVec2f([0.0779,0.162]),SFVec2f([0.1317,0.1272]),SFVec2f([0.1363,0.1268]),SFVec2f([0.1571,0.0927]),SFVec2f([0.1559,0.0889])])))))])])])])]),

                                        HAnimJoint(
                                          name_ : SFString('l_cuneonavicular_2'),
                                          DEF_ : SFString('hanim_l_cuneonavicular_2'),
                                          center_ : SFVec3f([SFDouble(3.619), SFDouble(1.49), SFDouble(0.9523)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('l_cuneiform_2'),
                                              DEF_ : SFString('hanim_l_cuneiform_2'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(3.619), SFDouble(1.49), SFDouble(0.9523)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(2), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(15), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(11), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(8), SFInt32(20), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(2), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(15), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(11), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(8), SFInt32(20), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([0.2418,-1.317,0.3066]),SFVec3f([0.262,1.069,0.2707]),SFVec3f([0.2399,-1.332,0.7678]),SFVec3f([0.289,0.7461,0.7818]),SFVec3f([-0.3232,0.8508,0.3451]),SFVec3f([-0.3262,-1.31,0.3344]),SFVec3f([-0.3811,0.491,1.052]),SFVec3f([-0.3785,-1.316,1.066]),SFVec3f([0.2589,1.334,-0.0919]),SFVec3f([-0.2569,1.202,-0.0183]),SFVec3f([0.2486,-1.334,-0.0929]),SFVec3f([-0.2763,-1.329,-0.0115]),SFVec3f([-0.4937,0.6449,0.0794]),SFVec3f([-0.5389,0.5099,0.2504]),SFVec3f([-0.5914,0.2392,0.9077]),SFVec3f([-0.5883,-1.064,0.9201]),SFVec3f([-0.5488,-1.06,0.3077]),SFVec3f([-0.5121,-1.07,0.0848]),SFVec3f([0.5859,0.5666,0.674]),SFVec3f([0.5593,0.8214,0.2083]),SFVec3f([0.5574,0.9493,0.0064]),SFVec3f([0.5505,-1.093,0.0054]),SFVec3f([0.5421,-1.082,0.3015]),SFVec3f([0.5387,-1.092,0.6611]),SFVec3f([-0.2547,0.2976,1.364]),SFVec3f([0.3749,0.5415,1.082]),SFVec3f([0.4702,0.4247,1.049]),SFVec3f([0.4305,-0.9692,1.038]),SFVec3f([0.2863,-1.137,1.089]),SFVec3f([-0.2662,-1.123,1.4]),SFVec3f([-0.354,-0.9652,1.34]),SFVec3f([-0.3565,0.1187,1.33]),SFVec3f([0.2197,1.194,-0.369]),SFVec3f([-0.2078,1.085,-0.3024]),SFVec3f([-0.3907,0.6038,-0.2314]),SFVec3f([-0.408,-1.005,-0.2264]),SFVec3f([-0.2645,-1.199,-0.2846]),SFVec3f([0.2118,-1.203,-0.3608]),SFVec3f([0.4088,-1.011,-0.2965]),SFVec3f([0.4151,0.8882,-0.2956])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.2179,0.1044]),SFVec2f([0.2186,0.1086]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2047,0.1286]),SFVec2f([0.2132,0.1171]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2047,0.1286]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2132,0.1171]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2179,0.1044]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2186,0.1086]),SFVec2f([0.2128,0.1035]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2224,0.1067])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('l_tarsometatarsal_2'),
                                              DEF_ : SFString('hanim_l_tarsometatarsal_2'),
                                              center_ : SFVec3f([SFDouble(3.564), SFDouble(1.16), SFDouble(1.825)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('l_metatarsal_2'),
                                                  DEF_ : SFString('hanim_l_metatarsal_2'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(3.564), SFDouble(1.16), SFDouble(1.825)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(12), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(18), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(46), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(29), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(19), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(19), SFInt32(28), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(37), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(3), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(16), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(18), SFInt32(14), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(50), SFInt32(-1), SFInt32(11), SFInt32(28), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(1), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(46), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(46), SFInt32(-1), SFInt32(17), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(13), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(38), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(5), SFInt32(37), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(15), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(7), SFInt32(15), SFInt32(-1), SFInt32(7), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(23), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(6), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(37), SFInt32(5), SFInt32(-1), SFInt32(37), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(45), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(10), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(28), SFInt32(11), SFInt32(-1), SFInt32(28), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(27), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(18), SFInt32(27), SFInt32(-1), SFInt32(18), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(33), SFInt32(17), SFInt32(-1), SFInt32(33), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(53), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(10), SFInt32(32), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(17), SFInt32(-1), SFInt32(45), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(49), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(22), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(22), SFInt32(31), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(32), SFInt32(40), SFInt32(-1), SFInt32(33), SFInt32(21), SFInt32(34), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(34), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(3), SFInt32(12), SFInt32(-1), SFInt32(3), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(45), SFInt32(-1), SFInt32(10), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(4), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(17), SFInt32(4), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(53), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(2), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(49), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(49), SFInt32(-1), SFInt32(14), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(1), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(41), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(41), SFInt32(-1), SFInt32(8), SFInt32(40), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(26), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(9), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(40), SFInt32(8), SFInt32(-1), SFInt32(40), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(39), SFInt32(48), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(7), SFInt32(39), SFInt32(-1), SFInt32(15), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(31), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(17), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(36), SFInt32(14), SFInt32(-1), SFInt32(36), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(35), SFInt32(56), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(15), SFInt32(35), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([0.376,0.2511,1.709]),SFVec3f([0.3357,0.7759,0.5398]),SFVec3f([-0.3119,0.2409,1.767]),SFVec3f([-0.3526,0.6595,0.5874]),SFVec3f([-0.3078,-1.076,1.666]),SFVec3f([0.3874,0.0522,2.259]),SFVec3f([-0.2343,0.0387,2.332]),SFVec3f([-0.2326,-0.9956,2.295]),SFVec3f([0.3451,0.5141,1.12]),SFVec3f([-0.3463,0.4507,1.205]),SFVec3f([0.3434,1.076,-0.0912]),SFVec3f([-0.3267,0.8206,0.1791]),SFVec3f([0.3294,-1.076,1.609]),SFVec3f([0.2875,-1.012,0.4679]),SFVec3f([-0.3874,-0.9909,0.4772]),SFVec3f([0.3851,-0.9944,2.223]),SFVec3f([-0.3874,-0.9909,0.4772]),SFVec3f([0.2943,-1.002,-0.1052]),SFVec3f([-0.3241,-0.9868,0.193]),SFVec3f([-0.5947,0.492,0.5352]),SFVec3f([-0.5929,0.2828,1.154]),SFVec3f([-0.5593,0.0734,1.716]),SFVec3f([-0.4991,-0.0854,2.16]),SFVec3f([-0.4989,-0.8372,2.132]),SFVec3f([-0.5532,-0.8961,1.67]),SFVec3f([-0.6306,-0.8125,0.499]),SFVec3f([-0.6285,-0.8121,0.4892]),SFVec3f([-0.587,-0.8107,0.3782]),SFVec3f([-0.5955,0.5581,0.3668]),SFVec3f([0.6024,0.1292,1.656]),SFVec3f([0.5716,0.3941,1.062]),SFVec3f([0.5635,0.6565,0.4802]),SFVec3f([0.5689,0.8722,0.0262]),SFVec3f([0.528,-0.8844,0.0143]),SFVec3f([0.522,-0.8924,0.4655]),SFVec3f([0.5629,-0.9551,1.597]),SFVec3f([0.6111,-0.8893,2.094]),SFVec3f([0.6095,-0.0402,2.124]),SFVec3f([0.3754,-0.8654,2.416]),SFVec3f([-0.1932,-0.8668,2.492]),SFVec3f([-0.3693,-0.7622,2.474]),SFVec3f([-0.3695,-0.1901,2.494]),SFVec3f([-0.1974,-0.1096,2.517]),SFVec3f([0.3791,-0.0968,2.442]),SFVec3f([0.5023,-0.1482,2.391]),SFVec3f([0.5036,-0.8058,2.368]),SFVec3f([0.2236,0.9197,-0.4593]),SFVec3f([-0.3621,0.6915,-0.1877]),SFVec3f([-0.5727,0.4882,-0.046]),SFVec3f([-0.565,-0.7245,-0.0357]),SFVec3f([-0.3891,-0.8422,-0.159]),SFVec3f([0.1716,-0.8563,-0.4501]),SFVec3f([0.3041,-0.7893,-0.3815]),SFVec3f([0.3412,0.8037,-0.3708])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.175,0.1048]),SFVec2f([0.1833,0.0898]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1985,0.1126]),SFVec2f([0.2017,0.0948]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1937,0.091]),SFVec2f([0.1795,0.1136]),SFVec2f([0.2068,0.0986]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1731,0.1071]),SFVec2f([0.2017,0.0948]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1937,0.091]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2017,0.0948]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.2098,0.0996]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('l_metatarsophalangeal_2'),
                                                  DEF_ : SFString('hanim_l_metatarsophalangeal_2'),
                                                  center_ : SFVec3f([SFDouble(3.668), SFDouble(0.6656), SFDouble(4.348)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('l_tarsal_proximal_phalanx_2'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_phalanx_2'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(3.668), SFDouble(0.6656), SFDouble(4.348)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(8), SFInt32(6), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(18), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(8), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(22), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(36), SFInt32(-1), SFInt32(31), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(34), SFInt32(31), SFInt32(35), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(29), SFInt32(-1), SFInt32(37), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(37), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(41), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(37), SFInt32(41), SFInt32(38), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(15), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(0), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(20), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(43), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(21), SFInt32(24), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(30), SFInt32(-1), SFInt32(25), SFInt32(2), SFInt32(26), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(26), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(29), SFInt32(26), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(31), SFInt32(-1), SFInt32(27), SFInt32(1), SFInt32(24), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(39), SFInt32(36), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(50), SFInt32(-1), SFInt32(45), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(49), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(22), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(43), SFInt32(-1), SFInt32(51), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(51), SFInt32(-1), SFInt32(45), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(55), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(51), SFInt32(55), SFInt32(52), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(26), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(35), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(32), SFInt32(36), SFInt32(-1), SFInt32(24), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(29), SFInt32(50), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(26), SFInt32(29), SFInt32(-1), SFInt32(31), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(9), SFInt32(31), SFInt32(-1), SFInt32(9), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(30), SFInt32(4), SFInt32(-1), SFInt32(33), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(39), SFInt32(33), SFInt32(-1), SFInt32(39), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(38), SFInt32(57), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(34), SFInt32(38), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([-0.3393,0.3234,0.264]),SFVec3f([-0.3241,-0.2974,0.2778]),SFVec3f([-0.3373,0.026,0.323]),SFVec3f([-0.2778,-0.0393,0.3227]),SFVec3f([-0.2424,-0.183,0.7679]),SFVec3f([-0.1972,-0.5469,0.7512]),SFVec3f([-0.2409,-0.4436,0.2718]),SFVec3f([0.2712,-0.5414,0.6896]),SFVec3f([0.2313,-0.4503,0.2153]),SFVec3f([0.3295,-0.1296,0.7058]),SFVec3f([0.2745,0.3527,0.6921]),SFVec3f([0.2339,0.4182,0.2093]),SFVec3f([0.3003,-0.075,0.2531]),SFVec3f([-0.204,0.3657,0.7504]),SFVec3f([-0.2252,0.4123,0.2599]),SFVec3f([0.3372,0.3253,0.1752]),SFVec3f([0.3386,-0.3128,0.1812]),SFVec3f([0.3436,0.0018,0.2359]),SFVec3f([0.2944,-0.4678,-0.021]),SFVec3f([0.3035,0.4187,-0.0402]),SFVec3f([-0.3436,-0.4656,0.0689]),SFVec3f([-0.3423,0.425,0.0673]),SFVec3f([0.2817,-0.4996,-0.2995]),SFVec3f([0.2839,0.5469,-0.2638]),SFVec3f([-0.3377,0.5334,-0.1904]),SFVec3f([-0.336,-0.5008,-0.2278]),SFVec3f([-0.2473,-0.3729,-0.4869]),SFVec3f([0.1345,-0.3721,-0.5309]),SFVec3f([0.1362,0.4342,-0.5035]),SFVec3f([-0.2486,0.4258,-0.4578]),SFVec3f([0.5241,0.2491,-0.0133]),SFVec3f([0.5013,0.3226,-0.1835]),SFVec3f([0.4932,0.3669,-0.2606]),SFVec3f([0.4932,-0.3819,-0.2863]),SFVec3f([0.4923,-0.3672,-0.1575]),SFVec3f([0.5259,-0.2546,-0.0109]),SFVec3f([0.5286,-0.0001,0.0336]),SFVec3f([-0.554,0.3222,-0.0429]),SFVec3f([-0.5543,0.2475,0.1018]),SFVec3f([-0.5536,0.0219,0.1466]),SFVec3f([-0.5407,-0.2386,0.1101]),SFVec3f([-0.5571,-0.3586,-0.0389]),SFVec3f([-0.5501,-0.3746,-0.1733]),SFVec3f([-0.5517,0.3659,-0.1465])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.2327,0.0796]),SFVec2f([0.2439,0.0803]),SFVec2f([0.2062,0.05]),SFVec2f([0.2147,0.0491]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2205,0.0532]),SFVec2f([0.2301,0.0734]),SFVec2f([0.2486,0.0743]),SFVec2f([0.2013,0.0552]),SFVec2f([0.2187,0.0481]),SFVec2f([0.221,0.0541]),SFVec2f([0.2293,0.0736]),SFVec2f([0.1746,0.075]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1745,0.076]),SFVec2f([0.1824,0.0523]),SFVec2f([0.1886,0.0572]),SFVec2f([0.183,0.0511]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1882,0.0556]),SFVec2f([0.1885,0.0566]),SFVec2f([0.1716,0.0676]),SFVec2f([0.1748,0.0736]),SFVec2f([0.2444,0.0847]),SFVec2f([0.2027,0.042]),SFVec2f([0.2022,0.0485]),SFVec2f([0.2464,0.0799]),SFVec2f([0.2486,0.0741]),SFVec2f([0.2011,0.0554]),SFVec2f([0.2293,0.0837]),SFVec2f([0.2177,0.0418]),SFVec2f([0.1769,0.0796]),SFVec2f([0.1648,0.0986]),SFVec2f([0.1632,0.098]),SFVec2f([0.1766,0.0777]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1682,0.1025]),SFVec2f([0.2022,0.0485]),SFVec2f([0.2027,0.042]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1769,0.0796]),SFVec2f([0.2464,0.0799]),SFVec2f([0.2486,0.0741]),SFVec2f([0.1632,0.098]),SFVec2f([0.2187,0.0481]),SFVec2f([0.221,0.0541]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2293,0.0837]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1682,0.1025])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('l_tarsal_proximal_interphalangeal_2'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_interphalangeal_2'),
                                                      center_ : SFVec3f([SFDouble(3.747), SFDouble(0.5621), SFDouble(5.067)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('l_tarsal_middle_phalanx_2'),
                                                          DEF_ : SFString('hanim_l_tarsal_middle_phalanx_2'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(3.747), SFDouble(0.5621), SFDouble(5.067)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(0), SFInt32(2), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(0), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(0), SFInt32(2), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([-0.3183,-0.4691,0.449]),SFVec3f([-0.3467,-0.0977,0.4619]),SFVec3f([0.3028,-0.4691,0.3802]),SFVec3f([0.3467,-0.0977,0.3792]),SFVec3f([0.2958,0.1955,0.3815]),SFVec3f([-0.2928,0.2184,0.4522]),SFVec3f([-0.3214,-0.0796,0.049]),SFVec3f([-0.2763,-0.4435,0.0323]),SFVec3f([0.1921,-0.4379,-0.0293]),SFVec3f([0.2505,-0.0262,-0.0131]),SFVec3f([0.1955,0.4562,-0.0268]),SFVec3f([-0.2831,0.4691,0.0315]),SFVec3f([-0.2728,-0.0774,-0.1826]),SFVec3f([-0.237,-0.3678,-0.1982]),SFVec3f([0.1011,-0.3637,-0.2446]),SFVec3f([0.1496,-0.025,-0.2272]),SFVec3f([0.1027,0.3833,-0.2419]),SFVec3f([-0.2402,0.3926,-0.1995]),SFVec3f([-0.1636,-0.3203,0.5822]),SFVec3f([-0.1797,-0.1053,0.5929]),SFVec3f([-0.1512,0.0631,0.5854]),SFVec3f([0.1873,0.0499,0.5442]),SFVec3f([0.214,-0.1025,0.5454]),SFVec3f([0.1882,-0.3203,0.5451])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.1293,0.0261]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1651,0.0639]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1291,0.0918]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1554,0.0532]),SFVec2f([0.1716,0.0676]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1554,0.0532]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1651,0.0639]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1795,0.0453])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('l_tarsal_distal_interphalangeal_2'),
                                                          DEF_ : SFString('hanim_l_tarsal_distal_interphalangeal_2'),
                                                          center_ : SFVec3f([SFDouble(3.747), SFDouble(0.4367), SFDouble(5.486)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('l_tarsal_distal_phalanx_2'),
                                                              DEF_ : SFString('hanim_l_tarsal_distal_phalanx_2'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(3.747), SFDouble(0.4367), SFDouble(5.486)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(11), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(15), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([-0.2128,-0.2652,0.3261]),SFVec3f([-0.2081,-0.028,0.4176]),SFVec3f([0.2913,-0.028,0.3571]),SFVec3f([0.2272,-0.2652,0.2666]),SFVec3f([0.2609,0.2185,0.2973]),SFVec3f([-0.1985,0.2313,0.3646]),SFVec3f([-0.3183,-0.3438,0.0295]),SFVec3f([-0.3467,0.0277,0.0425]),SFVec3f([0.3028,-0.3438,-0.0392]),SFVec3f([0.3467,0.0277,-0.0402]),SFVec3f([0.2958,0.3209,-0.0379]),SFVec3f([-0.2928,0.3438,0.0327]),SFVec3f([-0.2562,0.0235,-0.1565]),SFVec3f([-0.2371,-0.2306,-0.1677]),SFVec3f([0.182,-0.2306,-0.2127]),SFVec3f([0.2123,0.0256,-0.2127]),SFVec3f([0.1796,0.2132,-0.2131]),SFVec3f([-0.2214,0.2288,-0.1645])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.1643,0.0579]),SFVec2f([0.1638,0.0538]),SFVec2f([0.174,0.0396]),SFVec2f([0.1747,0.0423]),SFVec2f([0.1756,0.0403]),SFVec2f([0.1632,0.0573]),SFVec2f([0.066,0.0493]),SFVec2f([0.0915,0.0082]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1293,0.0261]),SFVec2f([0.1651,0.0639]),SFVec2f([0.1636,0.063]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.1293,0.0261])])))))])])])])])]),

                                        HAnimJoint(
                                          name_ : SFString('l_cuneonavicular_3'),
                                          DEF_ : SFString('hanim_l_cuneonavicular_3'),
                                          center_ : SFVec3f([SFDouble(4.132), SFDouble(1.484), SFDouble(0.8808)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('l_cuneiform_3'),
                                              DEF_ : SFString('hanim_l_cuneiform_3'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(4.132), SFDouble(1.484), SFDouble(0.8808)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(4), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(5), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(13), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(1), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(16), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(15), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(6), SFInt32(15), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(4), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(22), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(1), SFInt32(15), SFInt32(-1), SFInt32(1), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(29), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(6), SFInt32(17), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([0.3141,0.6132,0.8819]),SFVec3f([0.2408,-1.34,0.8742]),SFVec3f([-0.2719,-1.312,0.3782]),SFVec3f([-0.2517,1.075,0.3423]),SFVec3f([0.2453,0.9604,0.0142]),SFVec3f([-0.2738,-1.326,0.8393]),SFVec3f([-0.2247,0.7517,0.8534]),SFVec3f([0.2144,-1.314,0.0184]),SFVec3f([-0.2548,1.34,-0.0203]),SFVec3f([-0.2651,-1.329,-0.0214]),SFVec3f([0.5551,0.398,0.7409]),SFVec3f([0.4991,0.6279,0.1249]),SFVec3f([0.4757,-1.204,0.1283]),SFVec3f([0.4872,-1.221,0.7343]),SFVec3f([-0.4782,0.9895,0.2862]),SFVec3f([-0.4537,0.6961,0.7506]),SFVec3f([-0.5001,-1.215,0.7378]),SFVec3f([-0.4955,-1.204,0.381]),SFVec3f([-0.4895,-1.216,0.0879]),SFVec3f([-0.4811,1.134,0.0888]),SFVec3f([-0.2293,0.4659,1.208]),SFVec3f([0.2844,0.3497,1.239]),SFVec3f([0.4589,0.1843,1.144]),SFVec3f([0.3966,-1.12,1.138]),SFVec3f([0.222,-1.185,1.237]),SFVec3f([-0.2534,-1.174,1.199]),SFVec3f([-0.4036,-1.109,1.132]),SFVec3f([-0.3609,0.4374,1.144])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.2226,0.0828]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2186,0.1086]),SFVec2f([0.2179,0.1044]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2179,0.1044]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2186,0.1086]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('l_tarsometatarsal_3'),
                                              DEF_ : SFString('hanim_l_tarsometatarsal_3'),
                                              center_ : SFVec3f([SFDouble(4.204), SFDouble(1.16), SFDouble(1.751)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('l_metatarsal_3'),
                                                  DEF_ : SFString('hanim_l_metatarsal_3'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(4.204), SFDouble(1.16), SFDouble(1.751)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(15), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(3), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(17), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(35), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(27), SFInt32(35), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(17), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(48), SFInt32(-1), SFInt32(5), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(40), SFInt32(-1), SFInt32(13), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(44), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(44), SFInt32(-1), SFInt32(11), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(36), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(35), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(37), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(14), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(1), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(18), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(26), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(2), SFInt32(26), SFInt32(-1), SFInt32(2), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(34), SFInt32(0), SFInt32(-1), SFInt32(34), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(33), SFInt32(43), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(14), SFInt32(33), SFInt32(-1), SFInt32(16), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(5), SFInt32(16), SFInt32(-1), SFInt32(5), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(22), SFInt32(5), SFInt32(-1), SFInt32(22), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(4), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(30), SFInt32(11), SFInt32(-1), SFInt32(30), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(51), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(16), SFInt32(29), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(25), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(7), SFInt32(25), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(26), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(24), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(43), SFInt32(27), SFInt32(45), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(56), SFInt32(52), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(44), SFInt32(56), SFInt32(-1), SFInt32(36), SFInt32(28), SFInt32(38), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(40), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(42), SFInt32(40), SFInt32(-1), SFInt32(39), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(41), SFInt32(39), SFInt32(-1), SFInt32(1), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(22), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(28), SFInt32(11), SFInt32(-1), SFInt32(14), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(70), SFInt32(69), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(67), SFInt32(70), SFInt32(-1), SFInt32(5), SFInt32(35), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(24), SFInt32(5), SFInt32(-1), SFInt32(25), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(3), SFInt32(25), SFInt32(-1), SFInt32(13), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(23), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(40), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(58), SFInt32(62), SFInt32(-1), SFInt32(16), SFInt32(43), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(7), SFInt32(16), SFInt32(-1), SFInt32(15), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(26), SFInt32(15), SFInt32(-1), SFInt32(66), SFInt32(74), SFInt32(73), SFInt32(-1), SFInt32(73), SFInt32(71), SFInt32(66), SFInt32(-1), SFInt32(6), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(10), SFInt32(6), SFInt32(-1), SFInt32(21), SFInt32(49), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(8), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(51), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(57), SFInt32(65), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(63), SFInt32(57), SFInt32(-1), SFInt32(0), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(19), SFInt32(56), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(59), SFInt32(57), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(59), SFInt32(-1), SFInt32(70), SFInt32(67), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(72), SFInt32(70), SFInt32(-1), SFInt32(20), SFInt32(57), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(1), SFInt32(20), SFInt32(-1), SFInt32(1), SFInt32(58), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(29), SFInt32(1), SFInt32(-1), SFInt32(29), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(42), SFInt32(29), SFInt32(-1), SFInt32(42), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(2), SFInt32(42), SFInt32(-1), SFInt32(2), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(63), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(54), SFInt32(0), SFInt32(-1), SFInt32(54), SFInt32(64), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(53), SFInt32(65), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(20), SFInt32(53), SFInt32(-1), SFInt32(26), SFInt32(66), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(5), SFInt32(26), SFInt32(-1), SFInt32(5), SFInt32(67), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(35), SFInt32(5), SFInt32(-1), SFInt32(35), SFInt32(68), SFInt32(69), SFInt32(-1), SFInt32(69), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(34), SFInt32(69), SFInt32(70), SFInt32(-1), SFInt32(70), SFInt32(4), SFInt32(34), SFInt32(-1), SFInt32(4), SFInt32(70), SFInt32(72), SFInt32(-1), SFInt32(72), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(71), SFInt32(73), SFInt32(-1), SFInt32(73), SFInt32(48), SFInt32(6), SFInt32(-1), SFInt32(48), SFInt32(73), SFInt32(74), SFInt32(-1), SFInt32(74), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(47), SFInt32(74), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(26), SFInt32(47), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([0.3514,0.0088,2.189]),SFVec3f([-0.2551,-0.9944,2.297]),SFVec3f([-0.2528,0.0522,2.333]),SFVec3f([-0.2951,0.5141,1.194]),SFVec3f([-0.3459,-1.002,-0.0312]),SFVec3f([-0.2968,1.076,-0.0171]),SFVec3f([0.236,-1.076,1.597]),SFVec3f([0.2984,0.2146,1.686]),SFVec3f([0.2182,-1.032,0.4559]),SFVec3f([-0.3108,-1.076,1.683]),SFVec3f([-0.2642,0.2511,1.783]),SFVec3f([0.1688,-1.016,0.0037]),SFVec3f([0.2567,0.7002,0.5242]),SFVec3f([0.2664,0.4574,1.105]),SFVec3f([0.3555,-0.9951,2.147]),SFVec3f([-0.3045,0.7759,0.6139]),SFVec3f([0.2421,0.9373,0.0114]),SFVec3f([-0.3527,-1.012,0.5419]),SFVec3f([-0.4555,-0.9034,2.208]),SFVec3f([-0.5053,-0.9726,1.685]),SFVec3f([-0.5463,-0.9098,0.5513]),SFVec3f([-0.5402,-0.9013,0.0735]),SFVec3f([-0.4975,0.9256,0.0859]),SFVec3f([-0.5034,0.6915,0.5785]),SFVec3f([-0.495,0.4292,1.16]),SFVec3f([-0.4642,0.1647,1.753]),SFVec3f([-0.4562,-0.0112,2.238]),SFVec3f([0.4671,0.3356,0.9778]),SFVec3f([0.4564,0.5794,0.3947]),SFVec3f([0.4508,0.735,0.0575]),SFVec3f([0.3868,-0.8992,0.0513]),SFVec3f([0.4273,-0.911,0.3814]),SFVec3f([0.4427,-0.9545,1.511]),SFVec3f([0.5425,-0.8904,1.948]),SFVec3f([0.5341,-0.0799,1.982]),SFVec3f([0.4962,0.0926,1.56]),SFVec3f([0.404,-0.8727,2.327]),SFVec3f([-0.1714,-0.8722,2.472]),SFVec3f([-0.2831,-0.8318,2.473]),SFVec3f([-0.2837,-0.1125,2.497]),SFVec3f([-0.1794,-0.0912,2.498]),SFVec3f([0.3948,-0.1313,2.362]),SFVec3f([0.515,-0.1786,2.318]),SFVec3f([0.5218,-0.8172,2.291]),SFVec3f([0.1845,0.8454,-0.2358]),SFVec3f([-0.2895,0.9675,-0.2731]),SFVec3f([-0.4148,0.8711,-0.2009]),SFVec3f([-0.4547,-0.8346,-0.2124]),SFVec3f([-0.3314,-0.8987,-0.2789]),SFVec3f([0.1384,-0.9111,-0.2399]),SFVec3f([0.2817,-0.8344,-0.2087]),SFVec3f([0.3416,0.6936,-0.203])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.195,0.0629]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1937,0.091]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2138,0.0778]),SFVec2f([0.1989,0.0701]),SFVec2f([0.1984,0.068]),SFVec2f([0.2129,0.0844]),SFVec2f([0.1833,0.0898]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1937,0.091]),SFVec2f([0.2068,0.0986]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2061,0.0729]),SFVec2f([0.1989,0.0701]),SFVec2f([0.1984,0.068]),SFVec2f([0.1952,0.0651]),SFVec2f([0.2129,0.0844]),SFVec2f([0.1833,0.0898]),SFVec2f([0.1856,0.0872]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2138,0.0778]),SFVec2f([0.1937,0.091]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1937,0.091]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2017,0.0948]),SFVec2f([0.1937,0.091]),SFVec2f([0.1937,0.091]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1811,0.0824]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2138,0.0778]),SFVec2f([0.1984,0.068]),SFVec2f([0.1984,0.068]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.1984,0.068]),SFVec2f([0.1984,0.068]),SFVec2f([0.195,0.0629]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('l_metatarsophalangeal_3'),
                                                  DEF_ : SFString('hanim_l_metatarsophalangeal_3'),
                                                  center_ : SFVec3f([SFDouble(4.288), SFDouble(0.6692), SFDouble(4.241)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('l_tarsal_proximal_phalanx_3'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_phalanx_3'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(4.288), SFDouble(0.6692), SFDouble(4.241)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(13), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(24), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(23), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(35), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(41), SFInt32(37), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(35), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(37), SFInt32(41), SFInt32(39), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(15), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(29), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(23), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(25), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(24), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(18), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(10), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(19), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(43), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(20), SFInt32(16), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(22), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(36), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(36), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(27), SFInt32(25), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(35), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(15), SFInt32(28), SFInt32(-1), SFInt32(37), SFInt32(12), SFInt32(32), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(11), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(33), SFInt32(18), SFInt32(-1), SFInt32(32), SFInt32(12), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(34), SFInt32(32), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(30), SFInt32(-1), SFInt32(39), SFInt32(11), SFInt32(35), SFInt32(-1), SFInt32(9), SFInt32(23), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(49), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(45), SFInt32(49), SFInt32(46), SFInt32(-1), SFInt32(55), SFInt32(51), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(49), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(51), SFInt32(55), SFInt32(53), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(24), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(25), SFInt32(43), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(36), SFInt32(26), SFInt32(-1), SFInt32(35), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(39), SFInt32(35), SFInt32(-1), SFInt32(39), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(33), SFInt32(39), SFInt32(-1), SFInt32(34), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(32), SFInt32(34), SFInt32(-1), SFInt32(32), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(38), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(27), SFInt32(38), SFInt32(-1), SFInt32(27), SFInt32(50), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(14), SFInt32(30), SFInt32(-1), SFInt32(14), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(15), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(28), SFInt32(15), SFInt32(-1), SFInt32(29), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(24), SFInt32(29), SFInt32(-1), SFInt32(24), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(57), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(31), SFInt32(25), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([-0.1594,-0.1332,0.7353]),SFVec3f([-0.1083,-0.5433,0.705]),SFVec3f([0.2948,-0.537,0.6162]),SFVec3f([0.3607,-0.1332,0.6075]),SFVec3f([0.3179,0.2847,0.6096]),SFVec3f([-0.1134,0.2976,0.7106]),SFVec3f([0.2307,0.3831,0.1658]),SFVec3f([-0.1687,-0.4707,0.2753]),SFVec3f([-0.1683,0.3967,0.266]),SFVec3f([0.2141,-0.4772,0.1676]),SFVec3f([-0.2828,0.3217,0.2825]),SFVec3f([-0.2814,-0.3164,0.2886]),SFVec3f([-0.2764,-0.0018,0.3432]),SFVec3f([-0.2194,-0.0661,0.3461]),SFVec3f([0.2983,-0.0994,0.2248]),SFVec3f([-0.3383,-0.5032,-0.1922]),SFVec3f([-0.3361,0.5433,-0.1564]),SFVec3f([0.2723,-0.5039,-0.3421]),SFVec3f([0.2682,0.4999,-0.3003]),SFVec3f([-0.3256,-0.4714,0.0864]),SFVec3f([-0.3165,0.4151,0.0671]),SFVec3f([0.3314,0.3308,0.1403]),SFVec3f([0.3388,-0.0098,0.2061]),SFVec3f([0.2976,-0.4701,-0.0746]),SFVec3f([0.2868,0.3935,-0.0986]),SFVec3f([0.3268,-0.4338,0.1421]),SFVec3f([-0.2714,-0.3691,-0.4482]),SFVec3f([0.0939,-0.3695,-0.5391]),SFVec3f([0.091,0.3914,-0.5067]),SFVec3f([-0.2699,0.4174,-0.422]),SFVec3f([0.4721,-0.2654,-0.2843]),SFVec3f([0.4847,-0.2485,-0.151]),SFVec3f([0.4993,-0.2304,-0.0429]),SFVec3f([0.5052,-0.0191,-0.011]),SFVec3f([0.5015,0.1507,-0.0438]),SFVec3f([0.4793,0.182,-0.1629]),SFVec3f([0.47,0.235,-0.2634]),SFVec3f([-0.4981,0.3267,-0.001]),SFVec3f([-0.4733,0.2524,0.1707]),SFVec3f([-0.4685,-0.002,0.2185]),SFVec3f([-0.4718,-0.2559,0.1742]),SFVec3f([-0.5063,-0.3741,0.0202]),SFVec3f([-0.5105,-0.3938,-0.1519]),SFVec3f([-0.5097,0.3977,-0.1248])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.1706,0.0686]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1716,0.0676]),SFVec2f([0.1882,0.0556]),SFVec2f([0.1745,0.076]),SFVec2f([0.1748,0.0736]),SFVec2f([0.1886,0.0572]),SFVec2f([0.2327,0.0796]),SFVec2f([0.2439,0.0803]),SFVec2f([0.2076,0.0485]),SFVec2f([0.2162,0.0476]),SFVec2f([0.2201,0.0466]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2219,0.0517]),SFVec2f([0.2301,0.0734]),SFVec2f([0.2486,0.0743]),SFVec2f([0.2027,0.0537]),SFVec2f([0.2224,0.0526]),SFVec2f([0.2293,0.0736]),SFVec2f([0.1746,0.075]),SFVec2f([0.1885,0.0566]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1952,0.0651]),SFVec2f([0.195,0.0629]),SFVec2f([0.2293,0.0837]),SFVec2f([0.1769,0.0796]),SFVec2f([0.2191,0.0403]),SFVec2f([0.1766,0.0777]),SFVec2f([0.2037,0.047]),SFVec2f([0.2486,0.0741]),SFVec2f([0.2026,0.0539]),SFVec2f([0.2444,0.0847]),SFVec2f([0.1915,0.0602]),SFVec2f([0.2041,0.0405]),SFVec2f([0.1915,0.0578]),SFVec2f([0.2464,0.0799]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1952,0.0651]),SFVec2f([0.195,0.0629]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1952,0.0651]),SFVec2f([0.1915,0.0602]),SFVec2f([0.2464,0.0799]),SFVec2f([0.2486,0.0741]),SFVec2f([0.2037,0.047]),SFVec2f([0.2041,0.0405]),SFVec2f([0.195,0.0629]),SFVec2f([0.1766,0.0777]),SFVec2f([0.2201,0.0466]),SFVec2f([0.2224,0.0526]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2293,0.0837]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('l_tarsal_proximal_interphalangeal_3'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_interphalangeal_3'),
                                                      center_ : SFVec3f([SFDouble(4.394), SFDouble(0.5299), SFDouble(4.91)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('l_tarsal_middle_phalanx_3'),
                                                          DEF_ : SFString('hanim_l_tarsal_middle_phalanx_3'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(4.394), SFDouble(0.5299), SFDouble(4.91)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(2), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(0), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(0), SFInt32(2), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([-0.2639,-0.0654,0.4775]),SFVec3f([-0.2294,-0.4369,0.4537]),SFVec3f([0.3569,-0.4369,0.3314]),SFVec3f([0.4011,-0.0654,0.3295]),SFVec3f([0.356,0.2278,0.3349]),SFVec3f([-0.2178,0.2506,0.4454]),SFVec3f([-0.266,0.0061,0.0655]),SFVec3f([-0.2149,-0.404,0.0352]),SFVec3f([0.1882,-0.3977,-0.0536]),SFVec3f([0.2542,0.0061,-0.0624]),SFVec3f([0.2113,0.424,-0.0602]),SFVec3f([-0.22,0.4369,0.0407]),SFVec3f([-0.2241,0.0073,-0.12]),SFVec3f([-0.1856,-0.309,-0.1472]),SFVec3f([0.0609,-0.3052,-0.1988]),SFVec3f([0.1126,0.0092,-0.2043]),SFVec3f([0.0789,0.3331,-0.2044]),SFVec3f([-0.1892,0.3412,-0.1423]),SFVec3f([-0.0664,-0.2871,0.5717]),SFVec3f([-0.0852,-0.0696,0.5924]),SFVec3f([-0.0631,0.0962,0.5657]),SFVec3f([0.261,0.0833,0.5084]),SFVec3f([0.2846,-0.0679,0.5073]),SFVec3f([0.2579,-0.2871,0.5052])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.1651,0.0639]),SFVec2f([0.1293,0.0261]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1291,0.0918]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1554,0.0532]),SFVec2f([0.1716,0.0676]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1554,0.0532]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1651,0.0639]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1795,0.0453])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('l_tarsal_distal_interphalangeal_3'),
                                                          DEF_ : SFString('hanim_l_tarsal_distal_interphalangeal_3'),
                                                          center_ : SFVec3f([SFDouble(4.463), SFDouble(0.4367), SFDouble(5.32)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('l_tarsal_distal_phalanx_3'),
                                                              DEF_ : SFString('hanim_l_tarsal_distal_phalanx_3'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(4.463), SFDouble(0.4367), SFDouble(5.32)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(11), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(15), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([-0.1552,-0.028,0.3818]),SFVec3f([-0.166,-0.2652,0.2973]),SFVec3f([0.2126,-0.2652,0.2123]),SFVec3f([0.2749,-0.028,0.2919]),SFVec3f([0.2441,0.2185,0.2385]),SFVec3f([-0.1507,0.2313,0.332]),SFVec3f([-0.3325,0.0277,0.0683]),SFVec3f([-0.298,-0.3438,0.0445]),SFVec3f([0.2883,-0.3438,-0.0778]),SFVec3f([0.3325,0.0277,-0.0797]),SFVec3f([0.2874,0.3209,-0.0743]),SFVec3f([-0.2864,0.3438,0.0362]),SFVec3f([-0.2608,0.0241,-0.1382]),SFVec3f([-0.2381,-0.2318,-0.1597]),SFVec3f([0.1517,-0.2318,-0.2401]),SFVec3f([0.1828,0.0254,-0.239]),SFVec3f([0.1538,0.2121,-0.2369]),SFVec3f([-0.2327,0.2275,-0.1663])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.1643,0.0579]),SFVec2f([0.1747,0.0423]),SFVec2f([0.174,0.0396]),SFVec2f([0.1638,0.0538]),SFVec2f([0.1756,0.0403]),SFVec2f([0.1632,0.0573]),SFVec2f([0.0915,0.0082]),SFVec2f([0.066,0.0493]),SFVec2f([0.1636,0.063]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1293,0.0261]),SFVec2f([0.1651,0.0639]),SFVec2f([0.1636,0.063]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.1293,0.0261])])))))])])])])])])]),

                                    HAnimJoint(
                                      name_ : SFString('l_calcaneocuboid'),
                                      DEF_ : SFString('hanim_l_calcaneocuboid'),
                                      center_ : SFVec3f([SFDouble(3.96), SFDouble(2.577), SFDouble(-1.154)]),
                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      children_ : [
                                        HAnimSegment(
                                          name_ : SFString('l_calcaneus'),
                                          DEF_ : SFString('hanim_l_calcaneus'),
                                          children_ : [
                                            Transform(
                                              translation_ : SFVec3f([SFDouble(3.96), SFDouble(2.577), SFDouble(-1.154)]),
                                              child_ : 
                                                Shape(
                                                  appearance_ : 
                                                    Appearance(
                                                      material_ : 
                                                        Material(
                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                      texture_ : 
                                                        ImageTexture(
                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                  geometry_ : 
                                                    IndexedFaceSet(
                                                      coordIndex_ : MFInt32([SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(4), SFInt32(18), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(34), SFInt32(-1), SFInt32(17), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(21), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(35), SFInt32(-1), SFInt32(5), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(34), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(39), SFInt32(34), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(38), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(8), SFInt32(24), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(40), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(40), SFInt32(36), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(40), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(49), SFInt32(-1), SFInt32(44), SFInt32(42), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(44), SFInt32(49), SFInt32(47), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(47), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(55), SFInt32(53), SFInt32(51), SFInt32(-1), SFInt32(50), SFInt32(55), SFInt32(51), SFInt32(-1), SFInt32(55), SFInt32(50), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(34), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(33), SFInt32(38), SFInt32(-1), SFInt32(33), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(40), SFInt32(32), SFInt32(-1), SFInt32(40), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(39), SFInt32(36), SFInt32(-1), SFInt32(39), SFInt32(49), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(34), SFInt32(39), SFInt32(-1), SFInt32(25), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(27), SFInt32(29), SFInt32(-1), SFInt32(27), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(26), SFInt32(59), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(25), SFInt32(26), SFInt32(-1)]),
                                                      creaseAngle_ : 3.14159,
                                                      texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(4), SFInt32(18), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(34), SFInt32(-1), SFInt32(17), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(21), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(35), SFInt32(-1), SFInt32(5), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(34), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(39), SFInt32(34), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(38), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(8), SFInt32(24), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(40), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(40), SFInt32(36), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(40), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(49), SFInt32(-1), SFInt32(44), SFInt32(42), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(44), SFInt32(49), SFInt32(47), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(47), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(55), SFInt32(53), SFInt32(51), SFInt32(-1), SFInt32(50), SFInt32(55), SFInt32(51), SFInt32(-1), SFInt32(55), SFInt32(50), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(34), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(33), SFInt32(38), SFInt32(-1), SFInt32(33), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(40), SFInt32(32), SFInt32(-1), SFInt32(40), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(39), SFInt32(36), SFInt32(-1), SFInt32(39), SFInt32(49), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(34), SFInt32(39), SFInt32(-1), SFInt32(25), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(27), SFInt32(29), SFInt32(-1), SFInt32(27), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(26), SFInt32(59), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(25), SFInt32(26), SFInt32(-1)]),
                                                      coord_ : 
                                                        Coordinate(
                                                          point_ : MFVec3f([SFVec3f([0.9985,-2.493,-0.8739]),SFVec3f([0.3444,-2.493,-1.345]),SFVec3f([0.3385,-2.074,-1.537]),SFVec3f([1.107,-2.074,-1.019]),SFVec3f([-0.8502,-2.493,-0.9093]),SFVec3f([-1.215,-2.492,0.3485]),SFVec3f([-1.284,-2.074,0.3263]),SFVec3f([-0.9715,-2.074,-1.057]),SFVec3f([1.246,-2.492,0.3485]),SFVec3f([1.327,-2.074,0.3263]),SFVec3f([0.3384,-1.169,-1.658]),SFVec3f([1.174,-1.133,-1.133]),SFVec3f([-1.418,-0.9912,0.3376]),SFVec3f([-1.047,-1.181,-1.171]),SFVec3f([1.416,-1.1,0.3376]),SFVec3f([0.2948,-0.4644,-1.456]),SFVec3f([1.098,-0.4755,-0.9255]),SFVec3f([-1.039,-0.4898,-0.9709]),SFVec3f([-0.2136,-2.493,-1.352]),SFVec3f([-0.2242,-2.074,-1.543]),SFVec3f([-0.2315,-1.181,-1.664]),SFVec3f([-0.2693,-0.4684,-1.462]),SFVec3f([0.3014,-2.492,0.3485]),SFVec3f([-0.4242,-2.492,0.3485]),SFVec3f([1.298,-2.423,1.123]),SFVec3f([1.418,-2.067,1.103]),SFVec3f([1.397,-1.134,1.091]),SFVec3f([-1.106,-2.413,1.234]),SFVec3f([0.4108,-2.448,1.222]),SFVec3f([-0.327,-2.447,1.285]),SFVec3f([-1.248,-2.001,1.208]),SFVec3f([-1.376,-0.9503,1.205]),SFVec3f([-1.037,0.3568,1.239]),SFVec3f([0.8834,0.2818,1.266]),SFVec3f([0.2501,0.1842,-1.201]),SFVec3f([1.022,0.3141,-0.6813]),SFVec3f([-1.031,0.3141,-0.7249]),SFVec3f([1.164,0.0132,0.0265]),SFVec3f([1.146,0.0057,0.5457]),SFVec3f([-0.3051,0.1866,-1.206]),SFVec3f([-1.343,0.0781,0.3033]),SFVec3f([0.1992,0.7353,-0.8819]),SFVec3f([0.8414,0.867,-0.4508]),SFVec3f([0.9581,0.5635,0.1424]),SFVec3f([0.9423,0.5539,0.597]),SFVec3f([0.7475,0.8221,1.135]),SFVec3f([-0.8525,0.8859,1.112]),SFVec3f([-1.089,0.6115,0.3971]),SFVec3f([-0.8201,0.8534,-0.4873]),SFVec3f([-0.2191,0.7329,-0.8852]),SFVec3f([1.268,-1.998,1.433]),SFVec3f([1.191,-2.206,1.429]),SFVec3f([0.4157,-2.224,1.523]),SFVec3f([-0.3142,-2.223,1.586]),SFVec3f([-0.982,-2.198,1.531]),SFVec3f([-1.083,-1.928,1.525]),SFVec3f([-1.205,-1.01,1.526]),SFVec3f([-0.9056,0.0435,1.552]),SFVec3f([0.7799,-0.0171,1.583]),SFVec3f([1.248,-1.195,1.42])])),
                                                      texCoord_ : 
                                                        TextureCoordinate(
                                                          point_ : MFVec2f([SFVec2f([0.2845,0.0964]),SFVec2f([0.2768,0.1211]),SFVec2f([0.2792,0.1228]),SFVec2f([0.2886,0.0939]),SFVec2f([0.2493,0.1586]),SFVec2f([0.2252,0.161]),SFVec2f([0.2241,0.1634]),SFVec2f([0.2489,0.1638]),SFVec2f([0.2727,0.0786]),SFVec2f([0.2746,0.076]),SFVec2f([0.2809,0.1238]),SFVec2f([0.2914,0.0926]),SFVec2f([0.2206,0.1691]),SFVec2f([0.249,0.1672]),SFVec2f([0.2762,0.0729]),SFVec2f([0.2769,0.1234]),SFVec2f([0.2869,0.0933]),SFVec2f([0.2461,0.1652]),SFVec2f([0.2661,0.1399]),SFVec2f([0.2685,0.1417]),SFVec2f([0.27,0.1429]),SFVec2f([0.2661,0.1424]),SFVec2f([0.24,0.098]),SFVec2f([0.2266,0.1229]),SFVec2f([0.2628,0.0703]),SFVec2f([0.2665,0.0671]),SFVec2f([0.2664,0.0668]),SFVec2f([0.2178,0.1526]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2213,0.1179]),SFVec2f([0.2171,0.1588]),SFVec2f([0.2129,0.1643]),SFVec2f([0.2165,0.148]),SFVec2f([0.2533,0.0835]),SFVec2f([0.273,0.1232]),SFVec2f([0.2824,0.0941]),SFVec2f([0.2433,0.1632]),SFVec2f([0.2759,0.0832]),SFVec2f([0.2685,0.0797]),SFVec2f([0.2623,0.1418]),SFVec2f([0.2231,0.166]),SFVec2f([0.273,0.1232]),SFVec2f([0.2824,0.0941]),SFVec2f([0.2759,0.0832]),SFVec2f([0.2685,0.0797]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2165,0.148]),SFVec2f([0.2231,0.166]),SFVec2f([0.2433,0.1632]),SFVec2f([0.2623,0.1418]),SFVec2f([0.2665,0.0671]),SFVec2f([0.2628,0.0703]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2213,0.1179]),SFVec2f([0.2178,0.1526]),SFVec2f([0.2171,0.1588]),SFVec2f([0.2129,0.1643]),SFVec2f([0.2165,0.148]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2664,0.0668])])))))]),

                                        HAnimJoint(
                                          name_ : SFString('l_transversetarsal'),
                                          DEF_ : SFString('hanim_l_transversetarsal'),
                                          center_ : SFVec3f([SFDouble(4.917), SFDouble(1.568), SFDouble(0.09285)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('l_cuboid'),
                                              DEF_ : SFString('hanim_l_cuboid'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(4.917), SFDouble(1.568), SFDouble(0.09285)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(31), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(21), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(42), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(42), SFInt32(40), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(11), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(10), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(11), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(19), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(5), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(15), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(23), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(42), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(5), SFInt32(6), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(31), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(21), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(42), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(42), SFInt32(40), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(11), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(10), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(11), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(19), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(5), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(15), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(23), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(42), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(5), SFInt32(6), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([0.3927,-1.345,0.6502]),SFVec3f([0.5513,-1.052,0.467]),SFVec3f([0.4205,-0.159,0.5973]),SFVec3f([-0.212,-1.391,0.7994]),SFVec3f([-0.0207,0.5191,0.7402]),SFVec3f([0.62,-1.389,1.36]),SFVec3f([0.7814,-1.064,1.28]),SFVec3f([0.629,-0.2544,1.366]),SFVec3f([0.0531,-1.438,1.517]),SFVec3f([0.0856,0.2092,1.533]),SFVec3f([-0.0741,1.291,0.0195]),SFVec3f([-0.563,1.439,0.3053]),SFVec3f([-0.5395,0.8768,0.8021]),SFVec3f([-0.4707,0.5296,1.67]),SFVec3f([-0.5704,-1.398,0.8063]),SFVec3f([-0.544,-1.423,1.662]),SFVec3f([0.3405,-1.414,-0.124]),SFVec3f([0.4606,-1.058,-0.1434]),SFVec3f([0.4397,-0.1251,-0.1558]),SFVec3f([-0.5467,-1.439,-0.0243]),SFVec3f([-0.9941,0.9843,0.4637]),SFVec3f([-0.9743,0.7175,0.6996]),SFVec3f([-0.9157,0.4028,1.487]),SFVec3f([-0.9807,-1.215,1.481]),SFVec3f([-0.9974,-1.195,0.8178]),SFVec3f([-0.9758,-1.225,0.2106]),SFVec3f([-0.3762,1.179,-0.4448]),SFVec3f([-0.695,1.276,-0.2292]),SFVec3f([-1.005,0.9499,-0.116]),SFVec3f([-0.988,-1.072,-0.3476]),SFVec3f([-0.6823,-1.225,-0.5215]),SFVec3f([0.0476,-1.206,-0.5746]),SFVec3f([0.1183,-0.9956,-0.5875]),SFVec3f([0.0976,-0.1248,-0.6032]),SFVec3f([0.555,-1.35,1.795]),SFVec3f([0.0949,-1.389,1.923]),SFVec3f([-0.4583,-1.376,2.08]),SFVec3f([-0.7563,-1.099,1.955]),SFVec3f([-0.702,0.2537,1.96]),SFVec3f([-0.45,0.166,2.097]),SFVec3f([0.0298,-0.1076,1.961]),SFVec3f([0.5117,-0.5116,1.812]),SFVec3f([0.6379,-1.177,1.735])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.2528,0.0622]),SFVec2f([0.2585,0.0581]),SFVec2f([0.2383,0.0796]),SFVec2f([0.2566,0.0607]),SFVec2f([0.243,0.0749]),SFVec2f([0.2469,0.052]),SFVec2f([0.2512,0.047]),SFVec2f([0.2484,0.051]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2628,0.0703]),SFVec2f([0.2665,0.0671]),SFVec2f([0.2664,0.0668]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2628,0.0703]),SFVec2f([0.2665,0.0671]),SFVec2f([0.2664,0.0668]),SFVec2f([0.2469,0.052]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2484,0.051]),SFVec2f([0.2512,0.047])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('l_tarsometatarsal_4'),
                                              DEF_ : SFString('hanim_l_tarsometatarsal_4'),
                                              center_ : SFVec3f([SFDouble(4.733), SFDouble(1.091), SFDouble(1.708)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('l_metatarsal_4'),
                                                  DEF_ : SFString('hanim_l_metatarsal_4'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(4.733), SFDouble(1.091), SFDouble(1.708)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(11), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(40), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(27), SFInt32(35), SFInt32(-1), SFInt32(18), SFInt32(24), SFInt32(19), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(26), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(40), SFInt32(-1), SFInt32(15), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(44), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(44), SFInt32(-1), SFInt32(9), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(48), SFInt32(-1), SFInt32(13), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(11), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(36), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(36), SFInt32(-1), SFInt32(2), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(35), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(22), SFInt32(15), SFInt32(-1), SFInt32(22), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(6), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(34), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(33), SFInt32(43), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(12), SFInt32(33), SFInt32(-1), SFInt32(17), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(13), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(30), SFInt32(13), SFInt32(-1), SFInt32(30), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(8), SFInt32(29), SFInt32(-1), SFInt32(8), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(26), SFInt32(9), SFInt32(-1), SFInt32(26), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(51), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(17), SFInt32(25), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(50), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(29), SFInt32(18), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(29), SFInt32(37), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(10), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(16), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(46), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(46), SFInt32(-1), SFInt32(15), SFInt32(28), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(6), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(14), SFInt32(1), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(50), SFInt32(-1), SFInt32(13), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(5), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(38), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(4), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(37), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(24), SFInt32(10), SFInt32(-1), SFInt32(24), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(11), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(36), SFInt32(4), SFInt32(-1), SFInt32(36), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(35), SFInt32(45), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(3), SFInt32(35), SFInt32(-1), SFInt32(17), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(13), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(32), SFInt32(13), SFInt32(-1), SFInt32(32), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(31), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(14), SFInt32(31), SFInt32(-1), SFInt32(14), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(28), SFInt32(15), SFInt32(-1), SFInt32(28), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(27), SFInt32(53), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(17), SFInt32(27), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([0.43,0.2032,1.608]),SFVec3f([0.3411,0.4771,0.4203]),SFVec3f([0.411,0.0139,2.079]),SFVec3f([0.4023,0.3367,1.016]),SFVec3f([-0.2305,0.2838,1.729]),SFVec3f([-0.2723,0.7695,0.5671]),SFVec3f([-0.1775,0.078,2.232]),SFVec3f([-0.2625,0.5267,1.148]),SFVec3f([0.2694,0.6861,-0.0829]),SFVec3f([-0.2869,1.007,0.0542]),SFVec3f([0.3368,-1.007,1.41]),SFVec3f([0.2972,-0.9844,0.3484]),SFVec3f([0.4433,-0.8849,2.036]),SFVec3f([0.2369,-0.9615,-0.0987]),SFVec3f([-0.2929,-1.007,1.64]),SFVec3f([-0.1734,-0.9258,2.19]),SFVec3f([-0.3108,-0.9625,0.4987]),SFVec3f([-0.3602,-0.9465,0.0466]),SFVec3f([-0.5224,0.6131,0.5138]),SFVec3f([-0.5113,0.369,1.098]),SFVec3f([-0.4835,0.1258,1.68]),SFVec3f([-0.4517,-0.0328,2.07]),SFVec3f([-0.4416,-0.7633,2.038]),SFVec3f([-0.5332,-0.8205,1.648]),SFVec3f([-0.5476,-0.7772,0.5234]),SFVec3f([-0.5844,-0.7671,0.2439]),SFVec3f([-0.5243,0.735,0.2495]),SFVec3f([0.6251,0.1523,0.8741]),SFVec3f([0.5638,0.2829,0.284]),SFVec3f([0.5136,0.4134,-0.0498]),SFVec3f([0.4878,-0.815,-0.0625]),SFVec3f([0.5332,-0.8303,0.2548]),SFVec3f([0.5714,-0.8502,1.274]),SFVec3f([0.6659,-0.7584,1.777]),SFVec3f([0.6293,-0.1071,1.81]),SFVec3f([0.6528,0.0321,1.441]),SFVec3f([0.4534,-0.7489,2.227]),SFVec3f([-0.1154,-0.7865,2.387]),SFVec3f([-0.2893,-0.6899,2.374]),SFVec3f([-0.2972,-0.1417,2.398]),SFVec3f([-0.1301,-0.0829,2.414]),SFVec3f([0.4167,-0.1408,2.263]),SFVec3f([0.5514,-0.2089,2.135]),SFVec3f([0.5785,-0.6808,2.111]),SFVec3f([-0.4067,-0.7963,-0.3118]),SFVec3f([0.1321,-0.8098,-0.4434]),SFVec3f([0.2751,-0.7197,-0.4419]),SFVec3f([0.2976,0.3522,-0.4308]),SFVec3f([0.1123,0.5657,-0.4267]),SFVec3f([-0.366,0.8403,-0.3164]),SFVec3f([-0.4968,0.6732,-0.1797]),SFVec3f([-0.5511,-0.6808,-0.1849])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.2117,0.0481]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2142,0.0508]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2202,0.0585]),SFVec2f([0.2186,0.0548]),SFVec2f([0.1989,0.0701]),SFVec2f([0.1984,0.068]),SFVec2f([0.2138,0.0778]),SFVec2f([0.1952,0.0651]),SFVec2f([0.195,0.0629]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2129,0.0844]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2061,0.0729]),SFVec2f([0.1984,0.068]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.1984,0.068]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2186,0.0548]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2117,0.0481]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2117,0.0481]),SFVec2f([0.2083,0.0443]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('l_metatarsophalangeal_4'),
                                                  DEF_ : SFString('hanim_l_metatarsophalangeal_4'),
                                                  center_ : SFVec3f([SFDouble(4.883), SFDouble(0.6379), SFDouble(4.052)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('l_tarsal_proximal_phalanx_4'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_phalanx_4'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(4.883), SFDouble(0.6379), SFDouble(4.052)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(13), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(22), SFInt32(14), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(23), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(23), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(25), SFInt32(23), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(15), SFInt32(-1), SFInt32(24), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(37), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(35), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(40), SFInt32(37), SFInt32(42), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(29), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(17), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(22), SFInt32(17), SFInt32(-1), SFInt32(22), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(21), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(14), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(18), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(15), SFInt32(20), SFInt32(-1), SFInt32(15), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(43), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(14), SFInt32(16), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(27), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(27), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(35), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(8), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(15), SFInt32(32), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(32), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(23), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(18), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(39), SFInt32(36), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(37), SFInt32(19), SFInt32(34), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(45), SFInt32(49), SFInt32(47), SFInt32(-1), SFInt32(45), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(51), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(49), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(51), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(54), SFInt32(51), SFInt32(56), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(55), SFInt32(-1), SFInt32(29), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(43), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(28), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(35), SFInt32(28), SFInt32(-1), SFInt32(34), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(37), SFInt32(34), SFInt32(-1), SFInt32(37), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(39), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(36), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(32), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(30), SFInt32(33), SFInt32(-1), SFInt32(30), SFInt32(50), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(7), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(29), SFInt32(7), SFInt32(-1), SFInt32(29), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(31), SFInt32(29), SFInt32(-1), SFInt32(31), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(8), SFInt32(31), SFInt32(-1), SFInt32(16), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(18), SFInt32(57), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(13), SFInt32(18), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([0.3278,-0.057,0.1883]),SFVec3f([-0.0525,-0.5059,0.7169]),SFVec3f([-0.1097,-0.1019,0.7273]),SFVec3f([0.3613,-0.5312,0.6151]),SFVec3f([0.4078,-0.1019,0.5996]),SFVec3f([0.3711,0.3174,0.6207]),SFVec3f([-0.072,0.3613,0.7233]),SFVec3f([-0.167,0.3917,0.3145]),SFVec3f([0.2644,-0.4262,0.1511]),SFVec3f([0.2709,0.3574,0.152]),SFVec3f([-0.1661,-0.4211,0.2992]),SFVec3f([-0.2641,0.3621,0.329]),SFVec3f([-0.2567,0.0215,0.3948]),SFVec3f([-0.1987,-0.0648,0.3873]),SFVec3f([-0.2979,-0.4388,0.1141]),SFVec3f([-0.3087,0.4248,0.0901]),SFVec3f([-0.2687,-0.4025,0.3308]),SFVec3f([0.2935,-0.4317,-0.3075]),SFVec3f([-0.3232,-0.4726,-0.1534]),SFVec3f([0.2611,0.4671,-0.2648]),SFVec3f([-0.3273,0.5312,-0.1116]),SFVec3f([0.3082,0.3589,-0.1241]),SFVec3f([0.3082,-0.3803,-0.1229]),SFVec3f([0.3514,0.3217,0.1064]),SFVec3f([0.3527,-0.414,0.1117]),SFVec3f([0.3662,-0.0844,0.1549]),SFVec3f([-0.2703,-0.3363,-0.4209]),SFVec3f([0.1122,-0.3109,-0.516]),SFVec3f([0.0877,0.3691,-0.484]),SFVec3f([-0.2733,0.4085,-0.3896]),SFVec3f([0.5115,-0.288,-0.3108]),SFVec3f([0.5065,-0.2701,-0.2438]),SFVec3f([0.5667,-0.2929,-0.0861]),SFVec3f([0.5748,-0.0815,-0.058]),SFVec3f([0.5609,0.2313,-0.0969]),SFVec3f([0.5027,0.2605,-0.2789]),SFVec3f([0.4848,0.2657,-0.2832]),SFVec3f([-0.5105,-0.3286,0.0612]),SFVec3f([-0.5235,-0.3455,-0.0729]),SFVec3f([-0.526,0.3481,-0.044]),SFVec3f([-0.5229,0.3183,0.0128]),SFVec3f([-0.4893,0.27,0.1966]),SFVec3f([-0.4847,0.0183,0.2454]),SFVec3f([-0.4943,-0.306,0.1964])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.2033,0.0375]),SFVec2f([0.1866,0.0487]),SFVec2f([0.186,0.0472]),SFVec2f([0.1969,0.0343]),SFVec2f([0.1963,0.0328]),SFVec2f([0.1973,0.0341]),SFVec2f([0.1873,0.048]),SFVec2f([0.1915,0.0602]),SFVec2f([0.1915,0.0578]),SFVec2f([0.1897,0.0535]),SFVec2f([0.1888,0.0569]),SFVec2f([0.2031,0.037]),SFVec2f([0.2012,0.0381]),SFVec2f([0.2444,0.0847]),SFVec2f([0.2208,0.06]),SFVec2f([0.2111,0.0557]),SFVec2f([0.2254,0.054]),SFVec2f([0.2483,0.0809]),SFVec2f([0.2464,0.0799]),SFVec2f([0.2587,0.0865]),SFVec2f([0.225,0.0604]),SFVec2f([0.2239,0.0673]),SFVec2f([0.2238,0.0671]),SFVec2f([0.267,0.0845]),SFVec2f([0.2486,0.0741]),SFVec2f([0.2486,0.074]),SFVec2f([0.2049,0.059]),SFVec2f([0.1896,0.055]),SFVec2f([0.2102,0.0461]),SFVec2f([0.1952,0.0651]),SFVec2f([0.2083,0.0443]),SFVec2f([0.195,0.0629]),SFVec2f([0.2109,0.0476]),SFVec2f([0.2048,0.0404]),SFVec2f([0.2576,0.0911]),SFVec2f([0.2063,0.0414]),SFVec2f([0.2083,0.0537]),SFVec2f([0.2612,0.0869]),SFVec2f([0.2671,0.0842]),SFVec2f([0.2047,0.0593]),SFVec2f([0.1952,0.0651]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.195,0.0629]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2063,0.0414]),SFVec2f([0.2612,0.0869]),SFVec2f([0.2671,0.0842]),SFVec2f([0.2083,0.0537]),SFVec2f([0.2109,0.0476]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2444,0.0847]),SFVec2f([0.1952,0.0651]),SFVec2f([0.195,0.0629]),SFVec2f([0.1915,0.0578]),SFVec2f([0.225,0.0604]),SFVec2f([0.2239,0.0673]),SFVec2f([0.2464,0.0799])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('l_tarsal_proximal_interphalangeal_4'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_interphalangeal_4'),
                                                      center_ : SFVec3f([SFDouble(5.074), SFDouble(0.5442), SFDouble(4.725)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('l_tarsal_middle_phalanx_4'),
                                                          DEF_ : SFString('hanim_l_tarsal_middle_phalanx_4'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(5.074), SFDouble(0.5442), SFDouble(4.725)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(0), SFInt32(2), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(0), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(0), SFInt32(2), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([-0.2219,-0.455,0.3874]),SFVec3f([-0.2704,-0.0797,0.4109]),SFVec3f([0.2847,-0.455,0.2749]),SFVec3f([0.3388,-0.0797,0.2793]),SFVec3f([0.3015,0.1733,0.2582]),SFVec3f([-0.2248,0.1994,0.3929]),SFVec3f([-0.243,-0.4122,0.0438]),SFVec3f([-0.3003,-0.0082,0.0541]),SFVec3f([0.1707,-0.4375,-0.0581]),SFVec3f([0.2172,-0.0082,-0.0735]),SFVec3f([0.1805,0.4111,-0.0525]),SFVec3f([-0.2626,0.455,0.0501]),SFVec3f([-0.2483,-0.0038,-0.1702]),SFVec3f([-0.2041,-0.3133,-0.1768]),SFVec3f([0.0337,-0.3279,-0.2359]),SFVec3f([0.0682,-0.0062,-0.2491]),SFVec3f([0.0403,0.318,-0.2307]),SFVec3f([-0.2198,0.3438,-0.1726]),SFVec3f([-0.0622,-0.3044,0.5037]),SFVec3f([-0.0897,-0.0812,0.5234]),SFVec3f([-0.0698,0.0446,0.5123]),SFVec3f([0.208,0.0308,0.465]),SFVec3f([0.2246,-0.0777,0.4585]),SFVec3f([0.1903,-0.3044,0.4486])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.1822,0.0458]),SFVec2f([0.1809,0.0434]),SFVec2f([0.1953,0.0282]),SFVec2f([0.1948,0.024]),SFVec2f([0.1933,0.0293]),SFVec2f([0.1816,0.0411]),SFVec2f([0.1287,0.0243]),SFVec2f([0.0943,0.0785]),SFVec2f([0.1866,0.0487]),SFVec2f([0.186,0.0472]),SFVec2f([0.1969,0.0343]),SFVec2f([0.1963,0.0328]),SFVec2f([0.1973,0.0341]),SFVec2f([0.1322,0.09]),SFVec2f([0.157,0.0552]),SFVec2f([0.1873,0.048]),SFVec2f([0.186,0.0472]),SFVec2f([0.1866,0.0487]),SFVec2f([0.1969,0.0343]),SFVec2f([0.1963,0.0328]),SFVec2f([0.1973,0.0341]),SFVec2f([0.157,0.0552]),SFVec2f([0.1822,0.0458]),SFVec2f([0.1809,0.0434]),SFVec2f([0.1816,0.0411]),SFVec2f([0.0943,0.0785]),SFVec2f([0.1948,0.024]),SFVec2f([0.1953,0.0282])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('l_tarsal_distal_interphalangeal_4'),
                                                          DEF_ : SFString('hanim_l_tarsal_distal_interphalangeal_4'),
                                                          center_ : SFVec3f([SFDouble(5.141), SFDouble(0.4164), SFDouble(5.053)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('l_tarsal_distal_phalanx_4'),
                                                              DEF_ : SFString('hanim_l_tarsal_distal_phalanx_4'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(5.141), SFDouble(0.4164), SFDouble(5.053)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(11), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(15), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([-0.1526,-0.2418,0.2583]),SFVec3f([0.1598,-0.2418,0.1838]),SFVec3f([0.1914,0.016,0.2684]),SFVec3f([-0.1691,0.016,0.3383]),SFVec3f([0.1611,0.1898,0.2029]),SFVec3f([-0.1447,0.2049,0.275]),SFVec3f([-0.2895,-0.3272,0.0593]),SFVec3f([-0.338,0.0481,0.0828]),SFVec3f([0.2171,-0.3272,-0.0532]),SFVec3f([0.2712,0.0481,-0.0488]),SFVec3f([0.2339,0.301,-0.0699]),SFVec3f([-0.2924,0.3272,0.0648]),SFVec3f([-0.2684,0.045,-0.1247]),SFVec3f([-0.2357,-0.2162,-0.1453]),SFVec3f([0.0803,-0.2162,-0.2148]),SFVec3f([0.1196,0.0476,-0.2063]),SFVec3f([0.0957,0.1923,-0.2297]),SFVec3f([-0.2421,0.2091,-0.1375])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.1831,0.0355]),SFVec2f([0.1904,0.0263]),SFVec2f([0.1901,0.0243]),SFVec2f([0.1819,0.0351]),SFVec2f([0.1913,0.0249]),SFVec2f([0.182,0.0368]),SFVec2f([0.088,0.0133]),SFVec2f([0.0677,0.0461]),SFVec2f([0.1822,0.0458]),SFVec2f([0.1809,0.0434]),SFVec2f([0.1953,0.0282]),SFVec2f([0.1948,0.024]),SFVec2f([0.1933,0.0293]),SFVec2f([0.0943,0.0785]),SFVec2f([0.1287,0.0243]),SFVec2f([0.1816,0.0411]),SFVec2f([0.1809,0.0434]),SFVec2f([0.1822,0.0458]),SFVec2f([0.1953,0.0282]),SFVec2f([0.1948,0.024]),SFVec2f([0.1933,0.0293]),SFVec2f([0.1287,0.0243])])))))])])])])]),

                                            HAnimJoint(
                                              name_ : SFString('l_tarsometatarsal_5'),
                                              DEF_ : SFString('hanim_l_tarsometatarsal_5'),
                                              center_ : SFVec3f([SFDouble(5.37), SFDouble(0.9309), SFDouble(1.544)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('l_metatarsal_5'),
                                                  DEF_ : SFString('hanim_l_metatarsal_5'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(5.37), SFDouble(0.9309), SFDouble(1.544)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(33), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(41), SFInt32(39), SFInt32(45), SFInt32(-1), SFInt32(44), SFInt32(41), SFInt32(45), SFInt32(-1), SFInt32(28), SFInt32(23), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(32), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(44), SFInt32(-1), SFInt32(14), SFInt32(31), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(38), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(21), SFInt32(25), SFInt32(-1), SFInt32(7), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(31), SFInt32(14), SFInt32(-1), SFInt32(31), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(15), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(7), SFInt32(8), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(33), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(41), SFInt32(39), SFInt32(45), SFInt32(-1), SFInt32(44), SFInt32(41), SFInt32(45), SFInt32(-1), SFInt32(28), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(32), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(44), SFInt32(-1), SFInt32(14), SFInt32(31), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(38), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(21), SFInt32(25), SFInt32(-1), SFInt32(7), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(31), SFInt32(14), SFInt32(-1), SFInt32(31), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(15), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(7), SFInt32(8), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([0.3306,-0.8463,1.144]),SFVec3f([0.5928,-0.4351,1.443]),SFVec3f([0.453,0.1964,1.556]),SFVec3f([0.3168,-0.7816,0.375]),SFVec3f([0.4901,-0.4351,0.3998]),SFVec3f([0.3189,0.3175,0.4396]),SFVec3f([0.3613,-0.7553,2.007]),SFVec3f([0.5238,-0.4351,1.966]),SFVec3f([0.4304,0.0633,2.009]),SFVec3f([0.3979,0.2569,1.048]),SFVec3f([0.5415,-0.4351,0.9212]),SFVec3f([-0.2997,-0.8463,1.575]),SFVec3f([-0.2064,0.3634,1.773]),SFVec3f([-0.2954,0.6373,0.5845]),SFVec3f([-0.1931,-0.7247,2.2]),SFVec3f([-0.2255,0.1741,2.243]),SFVec3f([-0.3393,-0.8242,0.5125]),SFVec3f([-0.2342,0.4968,1.18]),SFVec3f([0.1673,-0.7522,-0.0918]),SFVec3f([0.3287,-0.4266,-0.171]),SFVec3f([0.1763,0.3828,-0.0859]),SFVec3f([-0.3996,-0.8013,0.0654]),SFVec3f([-0.3671,0.8463,0.0812]),SFVec3f([-0.5368,-0.6501,1.58]),SFVec3f([-0.5743,-0.6285,0.5402]),SFVec3f([-0.6111,-0.6148,0.2736]),SFVec3f([-0.5885,0.5776,0.2852]),SFVec3f([-0.5498,0.4676,0.5498]),SFVec3f([-0.4891,0.3238,1.161]),SFVec3f([-0.4604,0.1935,1.738]),SFVec3f([-0.4855,0.0596,2.072]),SFVec3f([-0.4467,-0.5603,2.042]),SFVec3f([-0.5171,-0.6818,-0.2412]),SFVec3f([-0.0362,-0.6408,-0.3566]),SFVec3f([0.0783,-0.4046,-0.4223]),SFVec3f([-0.0584,0.3254,-0.3431]),SFVec3f([-0.5171,0.7097,-0.2325]),SFVec3f([-0.6459,0.5317,-0.0795]),SFVec3f([-0.6663,-0.5485,-0.09]),SFVec3f([0.3834,-0.4628,2.152]),SFVec3f([0.275,-0.654,2.178]),SFVec3f([-0.1853,-0.6314,2.365]),SFVec3f([-0.3686,-0.526,2.255]),SFVec3f([-0.3984,-0.1094,2.279]),SFVec3f([-0.2347,-0.0432,2.397]),SFVec3f([0.3129,-0.1268,2.183])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.2299,0.0317]),SFVec2f([0.2316,0.0247]),SFVec2f([0.2265,0.0269]),SFVec2f([0.241,0.0419]),SFVec2f([0.244,0.0359]),SFVec2f([0.2401,0.0413]),SFVec2f([0.2245,0.0286]),SFVec2f([0.226,0.0221]),SFVec2f([0.2232,0.0245]),SFVec2f([0.2333,0.0341]),SFVec2f([0.2378,0.0303]),SFVec2f([0.2142,0.0508]),SFVec2f([0.2117,0.0481]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2202,0.0585]),SFVec2f([0.2186,0.0548]),SFVec2f([0.2469,0.052]),SFVec2f([0.2512,0.047]),SFVec2f([0.2484,0.051]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2142,0.0508]),SFVec2f([0.2202,0.0585]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2186,0.0548]),SFVec2f([0.2117,0.0481]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2469,0.052]),SFVec2f([0.2512,0.047]),SFVec2f([0.2484,0.051]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2292,0.0691]),SFVec2f([0.226,0.0221]),SFVec2f([0.2245,0.0286]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2232,0.0245])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('l_metatarsophalangeal_5'),
                                                  DEF_ : SFString('hanim_l_metatarsophalangeal_5'),
                                                  center_ : SFVec3f([SFDouble(5.514), SFDouble(0.6076), SFDouble(3.847)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('l_tarsal_proximal_phalanx_5'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_phalanx_5'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(5.514), SFDouble(0.6076), SFDouble(3.847)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(2), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(16), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(22), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(18), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(25), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(30), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(30), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(10), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(29), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(6), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(13), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(5), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(6), SFInt32(8), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(29), SFInt32(-1), SFInt32(37), SFInt32(28), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(39), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(40), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(40), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(39), SFInt32(-1), SFInt32(45), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(50), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(23), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(27), SFInt32(25), SFInt32(-1), SFInt32(27), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(44), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(4), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(26), SFInt32(4), SFInt32(-1), SFInt32(26), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(2), SFInt32(27), SFInt32(-1), SFInt32(8), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(16), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(21), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(51), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(15), SFInt32(18), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([0.2741,0.2687,-0.0725]),SFVec3f([0.2213,-0.4838,0.1708]),SFVec3f([0.2231,-0.4049,-0.097]),SFVec3f([0.3378,-0.1118,-0.0803]),SFVec3f([-0.1824,-0.3801,0.2853]),SFVec3f([-0.3221,0.3892,0.0803]),SFVec3f([-0.3221,-0.35,0.0816]),SFVec3f([-0.2789,0.352,0.3109]),SFVec3f([-0.2776,-0.3837,0.3162]),SFVec3f([-0.2642,-0.0541,0.3594]),SFVec3f([0.2176,-0.432,-0.2962]),SFVec3f([0.3801,-0.1118,-0.3374]),SFVec3f([0.2867,0.3866,-0.2941]),SFVec3f([-0.3368,-0.4014,-0.103]),SFVec3f([-0.3692,0.4974,-0.0603]),SFVec3f([-0.1862,0.3618,0.2861]),SFVec3f([0.2525,0.289,0.1702]),SFVec3f([0.3123,-0.0885,0.1981]),SFVec3f([-0.2184,-0.0456,0.3555]),SFVec3f([0.2559,-0.4974,0.2967]),SFVec3f([0.3388,-0.1325,0.3045]),SFVec3f([0.2868,0.2213,0.2956]),SFVec3f([-0.1724,0.2818,0.3981]),SFVec3f([-0.201,-0.1,0.4458]),SFVec3f([-0.1472,-0.4199,0.395]),SFVec3f([0.0738,-0.2949,-0.4949]),SFVec3f([0.1801,-0.0859,-0.5211]),SFVec3f([0.1104,0.284,-0.4899]),SFVec3f([-0.3045,0.3558,-0.3464]),SFVec3f([-0.282,-0.2747,-0.3769]),SFVec3f([-0.4986,-0.2481,0.0473]),SFVec3f([-0.4945,-0.2765,-0.0632]),SFVec3f([-0.5194,0.3282,-0.0342]),SFVec3f([-0.4997,0.2837,0.029]),SFVec3f([-0.469,0.2558,0.2138]),SFVec3f([-0.4531,-0.0475,0.2504]),SFVec3f([-0.4632,-0.2715,0.2213])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.2192,0.0256]),SFVec2f([0.2205,0.0195]),SFVec2f([0.2048,0.0404]),SFVec2f([0.2199,0.022]),SFVec2f([0.2063,0.0414]),SFVec2f([0.2047,0.0523]),SFVec2f([0.1956,0.0462]),SFVec2f([0.1979,0.0386]),SFVec2f([0.2109,0.0476]),SFVec2f([0.277,0.1031]),SFVec2f([0.2673,0.0987]),SFVec2f([0.263,0.1]),SFVec2f([0.2744,0.109]),SFVec2f([0.1892,0.0439]),SFVec2f([0.1911,0.0375]),SFVec2f([0.2576,0.0911]),SFVec2f([0.2083,0.0537]),SFVec2f([0.263,0.0893]),SFVec2f([0.2612,0.0869]),SFVec2f([0.2047,0.0593]),SFVec2f([0.2048,0.0593]),SFVec2f([0.2671,0.0842]),SFVec2f([0.2673,0.0839]),SFVec2f([0.2245,0.0286]),SFVec2f([0.226,0.0221]),SFVec2f([0.2232,0.0245]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2039,0.0358]),SFVec2f([0.2152,0.0224]),SFVec2f([0.2154,0.0203]),SFVec2f([0.2126,0.0258]),SFVec2f([0.2034,0.0366]),SFVec2f([0.2033,0.0375]),SFVec2f([0.2114,0.0219]),SFVec2f([0.2132,0.0168]),SFVec2f([0.2123,0.0196]),SFVec2f([0.1999,0.0356]),SFVec2f([0.201,0.0349]),SFVec2f([0.2011,0.0354]),SFVec2f([0.2245,0.0286]),SFVec2f([0.226,0.0221]),SFVec2f([0.2232,0.0245]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2576,0.0911]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2048,0.0404]),SFVec2f([0.2083,0.0537]),SFVec2f([0.2047,0.0593]),SFVec2f([0.2612,0.0869])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('l_tarsal_proximal_interphalangeal_5'),
                                                      DEF_ : SFString('hanim_l_tarsal_proximal_interphalangeal_5'),
                                                      center_ : SFVec3f([SFDouble(5.617), SFDouble(0.4825), SFDouble(4.184)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('l_tarsal_middle_phalanx_5'),
                                                          DEF_ : SFString('hanim_l_tarsal_middle_phalanx_5'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(5.617), SFDouble(0.4825), SFDouble(4.184)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(2), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(6), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(0), SFInt32(2), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([0.2408,-0.4069,0.2803]),SFVec3f([0.3104,-0.1317,0.2682]),SFVec3f([0.2708,0.1735,0.2787]),SFVec3f([-0.2317,0.2031,0.3777]),SFVec3f([-0.2679,-0.1354,0.3997]),SFVec3f([-0.1895,-0.4021,0.3653]),SFVec3f([0.1525,-0.3723,-0.0403]),SFVec3f([0.2354,-0.0074,-0.0325]),SFVec3f([0.1833,0.3464,-0.0414]),SFVec3f([-0.2758,0.4069,0.0611]),SFVec3f([-0.3045,0.025,0.1088]),SFVec3f([-0.2506,-0.2948,0.058]),SFVec3f([0.0394,-0.2528,-0.1664]),SFVec3f([0.0981,-0.0034,-0.1527]),SFVec3f([0.0588,0.2544,-0.1647]),SFVec3f([-0.223,0.2914,-0.1062]),SFVec3f([-0.2396,0.03,-0.0614]),SFVec3f([-0.202,-0.2065,-0.1082]),SFVec3f([0.193,-0.1236,0.4464]),SFVec3f([0.1591,-0.2569,0.4517]),SFVec3f([-0.0503,-0.2545,0.4894]),SFVec3f([-0.0876,-0.122,0.5141]),SFVec3f([-0.0715,0.0448,0.4955]),SFVec3f([0.173,0.0304,0.4518])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.2109,0.0133]),SFVec2f([0.2102,0.0181]),SFVec2f([0.2093,0.0169]),SFVec2f([0.1959,0.0354]),SFVec2f([0.1986,0.0324]),SFVec2f([0.1989,0.0342]),SFVec2f([0.2114,0.0219]),SFVec2f([0.2132,0.0168]),SFVec2f([0.2123,0.0196]),SFVec2f([0.1999,0.0356]),SFVec2f([0.201,0.0349]),SFVec2f([0.2011,0.0354]),SFVec2f([0.2114,0.0219]),SFVec2f([0.2132,0.0168]),SFVec2f([0.2123,0.0196]),SFVec2f([0.1999,0.0356]),SFVec2f([0.201,0.0349]),SFVec2f([0.2011,0.0354]),SFVec2f([0.2109,0.0133]),SFVec2f([0.2102,0.0181]),SFVec2f([0.1989,0.0342]),SFVec2f([0.1986,0.0324]),SFVec2f([0.1959,0.0354]),SFVec2f([0.2093,0.0169])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('l_tarsal_distal_interphalangeal_5'),
                                                          DEF_ : SFString('hanim_l_tarsal_distal_interphalangeal_5'),
                                                          center_ : SFVec3f([SFDouble(5.657), SFDouble(0.3806), SFDouble(4.528)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('l_tarsal_distal_phalanx_5'),
                                                              DEF_ : SFString('hanim_l_tarsal_distal_phalanx_5'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(5.657), SFDouble(0.3806), SFDouble(4.528)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(11), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(15), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([0.1245,-0.2998,0.2013]),SFVec3f([0.2172,-0.0402,0.2894]),SFVec3f([0.168,0.1871,0.2347]),SFVec3f([-0.1198,0.2033,0.2971]),SFVec3f([-0.1153,-0.0329,0.3526]),SFVec3f([-0.1253,-0.2998,0.2469]),SFVec3f([0.2006,-0.305,-0.0635]),SFVec3f([0.2702,-0.0298,-0.0756]),SFVec3f([0.2307,0.2754,-0.0651]),SFVec3f([-0.2719,0.305,0.0339]),SFVec3f([-0.3081,-0.0335,0.0559]),SFVec3f([-0.2297,-0.3002,0.0215]),SFVec3f([0.0767,-0.1908,-0.2275]),SFVec3f([0.1195,-0.022,-0.2346]),SFVec3f([0.0946,0.1698,-0.2279]),SFVec3f([-0.2144,0.188,-0.1703]),SFVec3f([-0.2355,-0.0217,-0.1508]),SFVec3f([-0.1879,-0.1878,-0.178])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.2048,0.0135]),SFVec2f([0.2053,0.0142]),SFVec2f([0.1964,0.026]),SFVec2f([0.1976,0.0232]),SFVec2f([0.1977,0.0271]),SFVec2f([0.2052,0.017]),SFVec2f([0.0639,0.0523]),SFVec2f([0.0903,0.0107]),SFVec2f([0.2102,0.0181]),SFVec2f([0.2109,0.0133]),SFVec2f([0.2093,0.0169]),SFVec2f([0.1317,0.0215]),SFVec2f([0.0951,0.0836]),SFVec2f([0.1959,0.0354]),SFVec2f([0.1986,0.0324]),SFVec2f([0.1989,0.0342]),SFVec2f([0.2102,0.0181]),SFVec2f([0.2109,0.0133]),SFVec2f([0.2093,0.0169]),SFVec2f([0.0951,0.0836]),SFVec2f([0.1986,0.0324]),SFVec2f([0.1989,0.0342])])))))])])])])])])])])])]),

                        HAnimJoint(
                          name_ : SFString('r_hip'),
                          DEF_ : SFString('hanim_r_hip'),
                          center_ : SFVec3f([SFDouble(-4.207), SFDouble(36.740002), SFDouble(-0.8155)]),
                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                          children_ : [
                            HAnimSegment(
                              name_ : SFString('r_thigh'),
                              DEF_ : SFString('hanim_r_thigh'),
                              children_ : [
                                Transform(
                                  translation_ : SFVec3f([SFDouble(-4.207), SFDouble(36.740002), SFDouble(-0.8155)]),
                                  child_ : 
                                    Shape(
                                      appearance_ : 
                                        Appearance(
                                          material_ : 
                                            Material(
                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                          texture_ : 
                                            ImageTexture(
                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                      geometry_ : 
                                        IndexedFaceSet(
                                          coordIndex_ : MFInt32([SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(42), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(42), SFInt32(47), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(61), SFInt32(58), SFInt32(56), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(56), SFInt32(-1), SFInt32(29), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(34), SFInt32(28), SFInt32(-1), SFInt32(36), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(35), SFInt32(28), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(41), SFInt32(35), SFInt32(-1), SFInt32(42), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(45), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(42), SFInt32(48), SFInt32(-1), SFInt32(50), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(52), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(53), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(54), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(55), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(49), SFInt32(35), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(55), SFInt32(49), SFInt32(-1), SFInt32(57), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(58), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(59), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(60), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(61), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(62), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(56), SFInt32(49), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(62), SFInt32(56), SFInt32(-1)]),
                                          creaseAngle_ : 3.14159,
                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(9), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(23), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(34), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(47), SFInt32(44), SFInt32(42), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(42), SFInt32(-1), SFInt32(35), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(35), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(36), SFInt32(29), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(41), SFInt32(36), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(54), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(56), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(58), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(58), SFInt32(60), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(60), SFInt32(62), SFInt32(-1), SFInt32(52), SFInt32(49), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(62), SFInt32(52), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(20), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(63), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(64), SFInt32(63), SFInt32(-1), SFInt32(65), SFInt32(54), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(63), SFInt32(65), SFInt32(-1), SFInt32(66), SFInt32(56), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(65), SFInt32(66), SFInt32(-1), SFInt32(67), SFInt32(58), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(66), SFInt32(67), SFInt32(-1), SFInt32(68), SFInt32(60), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(67), SFInt32(68), SFInt32(-1), SFInt32(69), SFInt32(62), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(68), SFInt32(69), SFInt32(-1), SFInt32(64), SFInt32(52), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(69), SFInt32(64), SFInt32(-1), SFInt32(43), SFInt32(63), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(65), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(45), SFInt32(66), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(67), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(68), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(48), SFInt32(69), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(42), SFInt32(64), SFInt32(69), SFInt32(-1), SFInt32(69), SFInt32(48), SFInt32(42), SFInt32(-1)]),
                                          coord_ : 
                                            Coordinate(
                                              point_ : MFVec3f([SFVec3f([-2.96,-0.0706,0]),SFVec3f([-1.643,-0.0706,3.209]),SFVec3f([1.316,-0.0706,4.002]),SFVec3f([3.367,-0.0706,1.781]),SFVec3f([3.367,-0.0706,-1.781]),SFVec3f([1.316,-0.0706,-4.002]),SFVec3f([-1.643,-0.0706,-3.209]),SFVec3f([-2.96,-3.82,0]),SFVec3f([-1.643,-3.82,3.209]),SFVec3f([1.316,-3.82,4.002]),SFVec3f([3.367,-3.82,1.781]),SFVec3f([3.367,-3.82,-1.781]),SFVec3f([1.316,-3.82,-4.002]),SFVec3f([-1.643,-3.82,-3.209]),SFVec3f([-2.96,-10.32,0]),SFVec3f([-1.643,-10.32,3.209]),SFVec3f([1.316,-10.32,4.002]),SFVec3f([3.367,-10.32,1.781]),SFVec3f([3.367,-10.32,-1.781]),SFVec3f([1.316,-10.32,-4.002]),SFVec3f([-1.643,-10.32,-3.209]),SFVec3f([-3.367,-16.94,0]),SFVec3f([-1.897,-16.94,3.582]),SFVec3f([1.407,-16.94,4.467]),SFVec3f([3.355,-16.94,1.988]),SFVec3f([3.355,-16.94,-1.988]),SFVec3f([1.407,-16.94,-4.467]),SFVec3f([-1.897,-16.94,-3.582]),SFVec3f([-2.146,-8.794,0]),SFVec3f([-1.136,-8.794,2.462]),SFVec3f([1.135,-8.794,3.07]),SFVec3f([2.633,-8.794,1.366]),SFVec3f([2.633,-8.794,-1.366]),SFVec3f([1.135,-8.794,-3.07]),SFVec3f([-1.136,-8.794,-2.462]),SFVec3f([-2.156,-15.25,0]),SFVec3f([-1.225,-15.25,1.956]),SFVec3f([0.8662,-15.25,2.439]),SFVec3f([2.543,-15.25,1.085]),SFVec3f([2.543,-15.25,-1.085]),SFVec3f([0.8662,-15.25,-2.439]),SFVec3f([-1.225,-15.25,-1.956]),SFVec3f([-2.051,1.92,0]),SFVec3f([-1.076,1.92,2.375]),SFVec3f([1.114,1.92,2.961]),SFVec3f([2.87,1.92,1.318]),SFVec3f([2.87,1.92,-1.318]),SFVec3f([1.114,1.92,-2.961]),SFVec3f([-1.076,1.92,-2.375]),SFVec3f([-1.842,-18.93,0]),SFVec3f([-1.03,-18.93,1.873]),SFVec3f([0.7965,-18.93,2.295]),SFVec3f([2.261,-18.93,1.113]),SFVec3f([2.261,-18.93,-0.9478]),SFVec3f([0.7965,-18.93,-2.13]),SFVec3f([-1.03,-18.93,-1.708]),SFVec3f([-0.6277,-19.91,0]),SFVec3f([-0.2723,-19.91,0.912]),SFVec3f([0.5262,-19.91,1.096]),SFVec3f([1.167,-19.91,0.5796]),SFVec3f([1.167,-19.91,-0.4145]),SFVec3f([0.5262,-19.91,-0.9313]),SFVec3f([-0.2723,-19.91,-0.7469])])),
                                          texCoord_ : 
                                            TextureCoordinate(
                                              point_ : MFVec2f([SFVec2f([0.719,0.5576]),SFVec2f([0.6284,0.5576]),SFVec2f([0.7414,0.5576]),SFVec2f([0.6787,0.5576]),SFVec2f([0.5781,0.5576]),SFVec2f([0.5154,0.5576]),SFVec2f([0.5378,0.5576]),SFVec2f([0.6284,0.5029]),SFVec2f([0.7509,0.3997]),SFVec2f([0.6284,0.3997]),SFVec2f([0.7509,0.5029]),SFVec2f([0.7811,0.3997]),SFVec2f([0.7811,0.5029]),SFVec2f([0.6964,0.3997]),SFVec2f([0.6964,0.5029]),SFVec2f([0.5604,0.3997]),SFVec2f([0.5604,0.5029]),SFVec2f([0.4756,0.3997]),SFVec2f([0.4756,0.5029]),SFVec2f([0.5059,0.3997]),SFVec2f([0.5059,0.5029]),SFVec2f([0.7509,0.3197]),SFVec2f([0.6284,0.3197]),SFVec2f([0.7811,0.3197]),SFVec2f([0.6964,0.3197]),SFVec2f([0.5604,0.3197]),SFVec2f([0.4756,0.3197]),SFVec2f([0.5059,0.3197]),SFVec2f([0.7651,0.2166]),SFVec2f([0.6284,0.2166]),SFVec2f([0.7989,0.2166]),SFVec2f([0.7043,0.2166]),SFVec2f([0.5525,0.2166]),SFVec2f([0.4579,0.2166]),SFVec2f([0.4917,0.2166]),SFVec2f([0.7224,0.263]),SFVec2f([0.6284,0.263]),SFVec2f([0.7456,0.263]),SFVec2f([0.6805,0.263]),SFVec2f([0.5762,0.263]),SFVec2f([0.5112,0.263]),SFVec2f([0.5344,0.263]),SFVec2f([0.8705,0.5452]),SFVec2f([0.8705,0.5383]),SFVec2f([0.8705,0.5369]),SFVec2f([0.8705,0.5408]),SFVec2f([0.8705,0.5483]),SFVec2f([0.8705,0.5522]),SFVec2f([0.8705,0.5509]),SFVec2f([0.917,0.5452]),SFVec2f([0.917,0.5266]),SFVec2f([0.89,0.5304]),SFVec2f([0.89,0.5452]),SFVec2f([0.917,0.522]),SFVec2f([0.89,0.5268]),SFVec2f([0.917,0.5349]),SFVec2f([0.89,0.537]),SFVec2f([0.917,0.5555]),SFVec2f([0.89,0.5534]),SFVec2f([0.917,0.5684]),SFVec2f([0.89,0.5636]),SFVec2f([0.917,0.5638]),SFVec2f([0.89,0.56]),SFVec2f([0.8746,0.531]),SFVec2f([0.8746,0.5452]),SFVec2f([0.8746,0.5279]),SFVec2f([0.8746,0.5368]),SFVec2f([0.8746,0.5524]),SFVec2f([0.8746,0.5613]),SFVec2f([0.8746,0.5581])])))))]),

                            HAnimJoint(
                              name_ : SFString('r_knee'),
                              DEF_ : SFString('hanim_r_knee'),
                              center_ : SFVec3f([SFDouble(-4.116), SFDouble(18.17), SFDouble(-0.8639)]),
                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                              children_ : [
                                HAnimSegment(
                                  name_ : SFString('r_calf'),
                                  DEF_ : SFString('hanim_r_calf'),
                                  children_ : [
                                    Transform(
                                      translation_ : SFVec3f([SFDouble(-4.116), SFDouble(18.17), SFDouble(-0.8639)]),
                                      child_ : 
                                        Shape(
                                          appearance_ : 
                                            Appearance(
                                              material_ : 
                                                Material(
                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                              texture_ : 
                                                ImageTexture(
                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                          geometry_ : 
                                            IndexedFaceSet(
                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(10), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(27), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(23), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(34), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(35), SFInt32(28), SFInt32(-1)]),
                                              creaseAngle_ : 3.14159,
                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(10), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(27), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(23), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(34), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(35), SFInt32(28), SFInt32(-1)]),
                                              coord_ : 
                                                Coordinate(
                                                  point_ : MFVec3f([SFVec3f([-0.7186,0.9688,0.0234]),SFVec3f([-0.3632,0.9688,0.9354]),SFVec3f([0.4353,0.9688,1.12]),SFVec3f([1.076,0.9688,0.603]),SFVec3f([1.076,0.9688,-0.3911]),SFVec3f([0.4353,0.9688,-0.9079]),SFVec3f([-0.3632,0.9688,-0.7235]),SFVec3f([-2.337,-4.613,0.0234]),SFVec3f([-1.46,-3.622,2.019]),SFVec3f([-1.236,-1.628,2.42]),SFVec3f([-2.118,-1.912,0.0234]),SFVec3f([0.8111,-3.622,2.567]),SFVec3f([0.7468,-1.628,2.903]),SFVec3f([2.254,-4.613,1.255]),SFVec3f([2.337,-1.912,0.9793]),SFVec3f([2.254,-5.383,-1.368]),SFVec3f([2.337,-1.912,-0.9325]),SFVec3f([0.8111,-5.383,-2.903]),SFVec3f([0.7468,-1.912,-2.368]),SFVec3f([-1.46,-5.383,-2.355]),SFVec3f([-1.236,-1.912,-1.885]),SFVec3f([-1.121,-0.0032,1.896]),SFVec3f([-1.933,-0.0032,0.0234]),SFVec3f([0.7056,-0.0032,2.318]),SFVec3f([2.17,-0.0032,1.136]),SFVec3f([2.17,-0.0032,-0.9244]),SFVec3f([0.7056,-0.0032,-2.061]),SFVec3f([-1.121,-0.0032,-1.64]),SFVec3f([-1.607,-12.92,0.0032]),SFVec3f([-0.9216,-12.91,1.565]),SFVec3f([0.619,-12.91,1.951]),SFVec3f([1.854,-12.92,0.8701]),SFVec3f([1.854,-12.94,-0.9762]),SFVec3f([0.619,-12.94,-1.742]),SFVec3f([-0.9216,-12.94,-1.356]),SFVec3f([-0.7072,-14.53,0.0239]),SFVec3f([-0.3604,-14.53,0.814]),SFVec3f([0.4188,-14.53,1.009]),SFVec3f([1.044,-14.53,0.4624]),SFVec3f([1.044,-14.54,-0.4714]),SFVec3f([0.4188,-14.54,-0.8587]),SFVec3f([-0.3604,-14.54,-0.6635])])),
                                              texCoord_ : 
                                                TextureCoordinate(
                                                  point_ : MFVec2f([SFVec2f([0.9309,0.5848]),SFVec2f([0.919,0.5848]),SFVec2f([0.8921,0.5848]),SFVec2f([0.8706,0.5848]),SFVec2f([0.8706,0.5848]),SFVec2f([0.8921,0.5848]),SFVec2f([0.919,0.5848]),SFVec2f([0.9845,0.5321]),SFVec2f([0.955,0.5475]),SFVec2f([0.9491,0.5599]),SFVec2f([0.9788,0.5571]),SFVec2f([0.8787,0.5475]),SFVec2f([0.8825,0.5599]),SFVec2f([0.8302,0.5321]),SFVec2f([0.8291,0.5571]),SFVec2f([0.8302,0.52]),SFVec2f([0.8291,0.5571]),SFVec2f([0.8787,0.52]),SFVec2f([0.8825,0.5571]),SFVec2f([0.955,0.52]),SFVec2f([0.9491,0.5571]),SFVec2f([0.9444,0.5755]),SFVec2f([0.9717,0.5755]),SFVec2f([0.8831,0.5755]),SFVec2f([0.8339,0.5755]),SFVec2f([0.8339,0.5755]),SFVec2f([0.8831,0.5755]),SFVec2f([0.9444,0.5755]),SFVec2f([0.9632,0.3942]),SFVec2f([0.9402,0.3943]),SFVec2f([0.8884,0.3943]),SFVec2f([0.8469,0.3942]),SFVec2f([0.8469,0.3941]),SFVec2f([0.8884,0.3941]),SFVec2f([0.9402,0.3941]),SFVec2f([0.9325,0.3742]),SFVec2f([0.9208,0.3742]),SFVec2f([0.8947,0.3742]),SFVec2f([0.8737,0.3742]),SFVec2f([0.8737,0.3741]),SFVec2f([0.8947,0.3741]),SFVec2f([0.9208,0.3741])])))))]),

                                HAnimJoint(
                                  name_ : SFString('r_talocrural'),
                                  DEF_ : SFString('hanim_r_talocrural'),
                                  center_ : SFVec3f([SFDouble(-3.931), SFDouble(4.242), SFDouble(-0.4645)]),
                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                  children_ : [
                                    HAnimSegment(
                                      name_ : SFString('r_talus'),
                                      DEF_ : SFString('hanim_r_talus'),
                                      children_ : [
                                        Transform(
                                          translation_ : SFVec3f([SFDouble(-3.931), SFDouble(4.242), SFDouble(-0.4645)]),
                                          child_ : 
                                            Shape(
                                              appearance_ : 
                                                Appearance(
                                                  material_ : 
                                                    Material(
                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                  texture_ : 
                                                    ImageTexture(
                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                              geometry_ : 
                                                IndexedFaceSet(
                                                  coordIndex_ : MFInt32([SFInt32(13), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(34), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(34), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(30), SFInt32(33), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(22), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(5), SFInt32(22), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(19), SFInt32(27), SFInt32(-1), SFInt32(7), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(33), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(33), SFInt32(-1), SFInt32(25), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(17), SFInt32(24), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(8), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(19), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(22), SFInt32(4), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(25), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(6), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(19), SFInt32(29), SFInt32(-1), SFInt32(6), SFInt32(29), SFInt32(19), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(4), SFInt32(22), SFInt32(31), SFInt32(-1), SFInt32(22), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(31), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(31), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(14), SFInt32(33), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(32), SFInt32(11), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(14), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(35), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(26), SFInt32(8), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(26), SFInt32(-1), SFInt32(8), SFInt32(28), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(8), SFInt32(-1), SFInt32(28), SFInt32(10), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(28), SFInt32(-1), SFInt32(10), SFInt32(24), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(10), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(12), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(23), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(32), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(11), SFInt32(-1), SFInt32(32), SFInt32(13), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(32), SFInt32(-1), SFInt32(13), SFInt32(34), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(13), SFInt32(-1), SFInt32(34), SFInt32(9), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(34), SFInt32(-1), SFInt32(9), SFInt32(26), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(46), SFInt32(9), SFInt32(-1)]),
                                                  creaseAngle_ : 3.14159,
                                                  texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(12), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(34), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(30), SFInt32(33), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(30), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(26), SFInt32(-1), SFInt32(12), SFInt32(5), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(33), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(33), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(2), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(22), SFInt32(19), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(28), SFInt32(23), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(21), SFInt32(23), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(9), SFInt32(31), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(31), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(31), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(31), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(31), SFInt32(-1), SFInt32(21), SFInt32(25), SFInt32(31), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(31), SFInt32(-1), SFInt32(10), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(11), SFInt32(33), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(32), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(11), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(35), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(29), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(0), SFInt32(-1), SFInt32(29), SFInt32(2), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(32), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(3), SFInt32(-1), SFInt32(32), SFInt32(5), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(32), SFInt32(-1), SFInt32(5), SFInt32(34), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(5), SFInt32(-1), SFInt32(34), SFInt32(7), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(34), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(46), SFInt32(7), SFInt32(-1)]),
                                                  coord_ : 
                                                    Coordinate(
                                                      point_ : MFVec3f([SFVec3f([0.8393,-0.0174,-1.188]),SFVec3f([1.144,-0.1364,-0.2829]),SFVec3f([0.3552,0.0498,-1.609]),SFVec3f([-0.871,-0.0001,-1.186]),SFVec3f([-1.125,-0.0898,-0.529]),SFVec3f([-0.7565,-0.0703,0.5621]),SFVec3f([0.053,-0.0302,0.8302]),SFVec3f([0.7589,-0.0877,0.5643]),SFVec3f([0.0732,-1.091,0.9897]),SFVec3f([1.025,-1.308,0.5497]),SFVec3f([-0.8955,-1.383,0.5769]),SFVec3f([-0.2622,-1.481,-1.89]),SFVec3f([-1.034,-1.351,-1.37]),SFVec3f([1.019,-1.351,-1.414]),SFVec3f([0.3452,-0.5115,-1.682]),SFVec3f([0.9219,-0.5266,-1.26]),SFVec3f([-0.7956,-0.4862,-1.244]),SFVec3f([-1.31,-1.007,-0.0779]),SFVec3f([-0.7172,-0.6496,0.5797]),SFVec3f([0.0234,-0.5209,0.8613]),SFVec3f([0.8111,-0.5742,0.5811]),SFVec3f([1.266,-0.65,-0.3815]),SFVec3f([-1.115,-0.1083,-0.0507]),SFVec3f([-1.176,-1.652,-0.6627]),SFVec3f([-1.158,-1.659,-0.1435]),SFVec3f([-1.331,-0.9612,-0.5874]),SFVec3f([0.5196,-1.198,0.8491]),SFVec3f([0.3793,-0.5469,0.7717]),SFVec3f([-0.4065,-1.235,0.8627]),SFVec3f([-0.3849,-0.5846,0.771]),SFVec3f([-0.2393,0.0558,-1.608]),SFVec3f([0.037,0.336,-0.3208]),SFVec3f([0.293,-1.478,-1.895]),SFVec3f([-0.2103,-0.4984,-1.679]),SFVec3f([1.331,-1.587,-0.3858]),SFVec3f([0.4364,-2.025,0.6704]),SFVec3f([0.0997,-1.904,0.7731]),SFVec3f([-0.2642,-2.055,0.6792]),SFVec3f([-0.6413,-2.205,0.4606]),SFVec3f([-0.8623,-2.494,-0.1471]),SFVec3f([-0.8786,-2.478,-0.6084]),SFVec3f([-0.7666,-2.132,-1.193]),SFVec3f([-0.1384,-2.273,-1.612]),SFVec3f([0.2345,-2.279,-1.615]),SFVec3f([0.8197,-2.156,-1.228]),SFVec3f([1.09,-2.438,-0.3404]),SFVec3f([0.8313,-2.145,0.4395])])),
                                                  texCoord_ : 
                                                    TextureCoordinate(
                                                      point_ : MFVec2f([SFVec2f([0.227,0.1089]),SFVec2f([0.2217,0.1285]),SFVec2f([0.2533,0.0835]),SFVec2f([0.273,0.1232]),SFVec2f([0.2824,0.0941]),SFVec2f([0.2433,0.1632]),SFVec2f([0.2685,0.0797]),SFVec2f([0.2165,0.148]),SFVec2f([0.2759,0.0832]),SFVec2f([0.2428,0.156]),SFVec2f([0.2563,0.142]),SFVec2f([0.2584,0.1419]),SFVec2f([0.2431,0.1588]),SFVec2f([0.2715,0.1062]),SFVec2f([0.2761,0.1011]),SFVec2f([0.2698,0.09]),SFVec2f([0.2775,0.078]),SFVec2f([0.2629,0.0863]),SFVec2f([0.248,0.0935]),SFVec2f([0.2498,0.0895]),SFVec2f([0.2702,0.0748]),SFVec2f([0.2296,0.1148]),SFVec2f([0.2397,0.101]),SFVec2f([0.2249,0.1266]),SFVec2f([0.2295,0.1126]),SFVec2f([0.2207,0.1406]),SFVec2f([0.2252,0.1591]),SFVec2f([0.2245,0.1634]),SFVec2f([0.2202,0.1406]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2662,0.1249]),SFVec2f([0.2599,0.1313]),SFVec2f([0.2623,0.1418]),SFVec2f([0.2691,0.1232]),SFVec2f([0.2231,0.166]),SFVec2f([0.2217,0.1285]),SFVec2f([0.227,0.1089]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2685,0.0797]),SFVec2f([0.2759,0.0832]),SFVec2f([0.2824,0.0941]),SFVec2f([0.273,0.1232]),SFVec2f([0.2623,0.1418]),SFVec2f([0.2433,0.1632]),SFVec2f([0.2231,0.166]),SFVec2f([0.2165,0.148])])))))]),

                                    HAnimJoint(
                                      name_ : SFString('r_talocalcaneonavicular'),
                                      DEF_ : SFString('hanim_r_talocalcaneonavicular'),
                                      center_ : SFVec3f([SFDouble(-3.464), SFDouble(1.64), SFDouble(0.2162)]),
                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      children_ : [
                                        HAnimSegment(
                                          name_ : SFString('r_navicular'),
                                          DEF_ : SFString('hanim_r_navicular'),
                                          children_ : [
                                            Transform(
                                              translation_ : SFVec3f([SFDouble(-3.464), SFDouble(1.64), SFDouble(0.2162)]),
                                              child_ : 
                                                Shape(
                                                  appearance_ : 
                                                    Appearance(
                                                      material_ : 
                                                        Material(
                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                      texture_ : 
                                                        ImageTexture(
                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                  geometry_ : 
                                                    IndexedFaceSet(
                                                      coordIndex_ : MFInt32([SFInt32(7), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(18), SFInt32(-1), SFInt32(4), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(37), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(37), SFInt32(32), SFInt32(34), SFInt32(-1), SFInt32(37), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(5), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(38), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(28), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(11), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(16), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(37), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(37), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(13), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(36), SFInt32(-1), SFInt32(15), SFInt32(4), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(15), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(4), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(45), SFInt32(24), SFInt32(-1)]),
                                                      creaseAngle_ : 3.14159,
                                                      texCoordIndex_ : MFInt32([SFInt32(7), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(18), SFInt32(-1), SFInt32(4), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(37), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(37), SFInt32(32), SFInt32(34), SFInt32(-1), SFInt32(37), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(5), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(38), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(28), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(11), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(16), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(37), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(37), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(13), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(36), SFInt32(-1), SFInt32(15), SFInt32(4), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(15), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(4), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(45), SFInt32(24), SFInt32(-1)]),
                                                      coord_ : 
                                                        Coordinate(
                                                          point_ : MFVec3f([SFVec3f([-0.8972,0.8045,0.6788]),SFVec3f([0.6876,-1.034,0.429]),SFVec3f([0.8213,0.0037,0.4098]),SFVec3f([0.5423,-1.396,0.5699]),SFVec3f([-0.8663,-1.47,0.683]),SFVec3f([-0.3971,1.184,0.6443]),SFVec3f([0.6772,0.6655,0.5173]),SFVec3f([0.1187,1.052,0.7179]),SFVec3f([-0.3868,-1.485,0.6432]),SFVec3f([0.1381,-1.479,0.7246]),SFVec3f([-0.394,1.511,0.309]),SFVec3f([0.5576,1.294,-0.131]),SFVec3f([0.0524,1.404,0.1684]),SFVec3f([-0.8736,1.366,0.182]),SFVec3f([0.6272,-1.476,-0.1356]),SFVec3f([-0.89,-1.511,-0.1477]),SFVec3f([-0.1521,-1.51,-0.0848]),SFVec3f([0.7688,-1.064,-0.1614]),SFVec3f([0.8972,-0.0133,-0.1652]),SFVec3f([0.6077,-0.9851,0.7902]),SFVec3f([0.7367,-0.2268,0.7715]),SFVec3f([0.6074,0.227,0.877]),SFVec3f([0.1008,0.4934,1.071]),SFVec3f([-0.3446,0.5793,0.9883]),SFVec3f([-0.7568,0.3427,1.012]),SFVec3f([-0.728,-1.256,1.016]),SFVec3f([-0.3573,-1.265,0.9905]),SFVec3f([0.1551,-1.261,1.074]),SFVec3f([0.4926,-1.208,0.9273]),SFVec3f([-0.4349,1.327,-0.2949]),SFVec3f([-0.049,1.235,-0.4281]),SFVec3f([0.3331,1.155,-0.7124]),SFVec3f([0.6313,0.0115,-0.7287]),SFVec3f([0.5112,-0.976,-0.7205]),SFVec3f([0.4265,-1.229,-0.6873]),SFVec3f([-0.2055,-1.256,-0.651]),SFVec3f([-0.7238,-1.253,-0.736]),SFVec3f([-0.7084,1.253,-0.4372]),SFVec3f([-1.285,0.6426,0.462]),SFVec3f([-1.266,0.8934,0.1006]),SFVec3f([-1.139,1.106,-0.2956]),SFVec3f([-1.153,-1.137,-0.563]),SFVec3f([-1.28,-1.327,-0.1294]),SFVec3f([-1.261,-1.289,0.5282]),SFVec3f([-1.182,-1.352,0.8393]),SFVec3f([-1.206,0.2601,0.8352])])),
                                                      texCoord_ : 
                                                        TextureCoordinate(
                                                          point_ : MFVec2f([SFVec2f([0.2314,0.0879]),SFVec2f([0.21,0.1541]),SFVec2f([0.2053,0.1595]),SFVec2f([0.2104,0.1443]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2032,0.149]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2163,0.1174]),SFVec2f([0.227,0.1089]),SFVec2f([0.2165,0.148]),SFVec2f([0.2217,0.1285]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2178,0.1526]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2213,0.1179]),SFVec2f([0.2171,0.1588]),SFVec2f([0.2129,0.1643]),SFVec2f([0.21,0.1541]),SFVec2f([0.2053,0.1595]),SFVec2f([0.2032,0.149]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2104,0.1443]),SFVec2f([0.227,0.1089]),SFVec2f([0.2217,0.1285]),SFVec2f([0.2165,0.148]),SFVec2f([0.2129,0.1643]),SFVec2f([0.2171,0.1588]),SFVec2f([0.2178,0.1526]),SFVec2f([0.2213,0.1179]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2314,0.0879])])))))]),

                                        HAnimJoint(
                                          name_ : SFString('r_cuneonavicular_1'),
                                          DEF_ : SFString('hanim_r_cuneonavicular_1'),
                                          center_ : SFVec3f([SFDouble(-2.977), SFDouble(1.427), SFDouble(0.8174)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('r_cuneiform_1'),
                                              DEF_ : SFString('hanim_r_cuneiform_1'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(-2.977), SFDouble(1.427), SFDouble(0.8174)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(2), SFInt32(-1), SFInt32(12), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(28), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(4), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(9), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(3), SFInt32(-1), SFInt32(12), SFInt32(1), SFInt32(15), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(28), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(9), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([-0.0007,-1.109,0.4253]),SFVec3f([0.2643,-0.769,0.4516]),SFVec3f([0.31,0.2508,0.3964]),SFVec3f([-0.3018,0.9142,0.48]),SFVec3f([-0.2988,-1.247,0.4693]),SFVec3f([0.4654,0.1787,1.077]),SFVec3f([0.3013,-1.107,1.108]),SFVec3f([0.5181,-0.7521,1.038]),SFVec3f([-0.2439,0.5544,1.187]),SFVec3f([-0.2465,-1.253,1.201]),SFVec3f([0.2008,-0.8201,-0.1723]),SFVec3f([0.3345,0.2174,-0.1914]),SFVec3f([0.0554,-1.183,-0.0314]),SFVec3f([0.1904,0.8791,-0.084]),SFVec3f([-0.3681,1.266,0.1166]),SFVec3f([-0.3487,-1.266,0.1234]),SFVec3f([-0.5607,0.81,0.4342]),SFVec3f([-0.5963,0.9711,0.2685]),SFVec3f([-0.5792,-1.134,0.2739]),SFVec3f([-0.5494,-1.122,0.4935]),SFVec3f([-0.506,-1.127,1.102]),SFVec3f([-0.5033,0.4765,1.089]),SFVec3f([0.2424,-0.982,1.47]),SFVec3f([0.4192,-0.7263,1.408]),SFVec3f([0.3724,0.0098,1.445]),SFVec3f([-0.2492,0.2999,1.549]),SFVec3f([-0.3973,0.2594,1.478]),SFVec3f([-0.3998,-1.02,1.489]),SFVec3f([-0.2312,-1.094,1.562])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.2027,0.1355]),SFVec2f([0.2132,0.1171]),SFVec2f([0.1958,0.1447]),SFVec2f([0.1899,0.1499]),SFVec2f([0.2047,0.1286]),SFVec2f([0.1825,0.1473]),SFVec2f([0.1858,0.1369]),SFVec2f([0.1864,0.1452]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.21,0.1541]),SFVec2f([0.2053,0.1595]),SFVec2f([0.2104,0.1443]),SFVec2f([0.2032,0.149]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2047,0.1286]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2132,0.1171]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1858,0.1369]),SFVec2f([0.1864,0.1452]),SFVec2f([0.1825,0.1473]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.2059,0.1148])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('r_tarsometatarsal_1'),
                                              DEF_ : SFString('hanim_r_tarsometatarsal_1'),
                                              center_ : SFVec3f([SFDouble(-2.856), SFDouble(1.033), SFDouble(1.964)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('r_metatarsal_1'),
                                                  DEF_ : SFString('hanim_r_metatarsal_1'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(-2.856), SFDouble(1.033), SFDouble(1.964)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(14), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(33), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(46), SFInt32(40), SFInt32(42), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(42), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(29), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(13), SFInt32(-1), SFInt32(45), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(23), SFInt32(15), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(23), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(12), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(16), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(6), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(16), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(17), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(30), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(39), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(23), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(26), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(46), SFInt32(19), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(14), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(3), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(33), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(46), SFInt32(40), SFInt32(42), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(42), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(14), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(13), SFInt32(-1), SFInt32(45), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(23), SFInt32(15), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(23), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(12), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(16), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(6), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(16), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(17), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(30), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(39), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(23), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(26), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(46), SFInt32(19), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([0.562,-0.9482,1.384]),SFVec3f([0.6218,0.234,1.681]),SFVec3f([0.7597,-0.537,1.629]),SFVec3f([0.489,-0.3521,0.1795]),SFVec3f([0.411,0.5415,0.3114]),SFVec3f([0.5231,-0.8677,2.175]),SFVec3f([0.5335,0.0824,2.208]),SFVec3f([0.6227,-0.537,2.28]),SFVec3f([0.2889,-0.7119,0.2522]),SFVec3f([0.7121,-0.4572,1.055]),SFVec3f([0.5707,0.3593,1.151]),SFVec3f([0.5319,-0.9316,0.9896]),SFVec3f([-0.3801,0.3685,1.628]),SFVec3f([-0.3394,0.7871,0.4484]),SFVec3f([-0.3842,-0.9482,1.527]),SFVec3f([-0.3046,-0.8633,0.3382]),SFVec3f([-0.4577,0.1663,2.193]),SFVec3f([-0.4594,-0.868,2.156]),SFVec3f([-0.3457,0.5783,1.066]),SFVec3f([0.344,0.5726,-0.0702]),SFVec3f([0.1799,-0.7129,-0.039]),SFVec3f([0.3967,-0.3582,-0.1085]),SFVec3f([-0.3653,0.9482,0.0401]),SFVec3f([-0.3679,-0.8593,0.054]),SFVec3f([-0.6136,0.3929,0.9908]),SFVec3f([-0.6118,0.6022,0.3719]),SFVec3f([-0.6079,0.6587,0.2275]),SFVec3f([-0.617,-0.6662,0.2386]),SFVec3f([-0.5774,-0.6674,0.3377]),SFVec3f([-0.6534,-0.7513,1.513]),SFVec3f([-0.7048,-0.6945,1.958]),SFVec3f([-0.7047,0.029,1.984]),SFVec3f([-0.6466,0.1836,1.552]),SFVec3f([0.3548,-0.7559,2.4]),SFVec3f([0.4377,-0.5059,2.486]),SFVec3f([0.3635,-0.0376,2.427]),SFVec3f([-0.4603,0.0258,2.414]),SFVec3f([-0.6656,-0.078,2.241]),SFVec3f([-0.6657,-0.6249,2.219]),SFVec3f([-0.4618,-0.7561,2.383]),SFVec3f([0.0182,-0.2985,-0.3352]),SFVec3f([-0.1101,-0.5117,-0.2822]),SFVec3f([-0.4889,-0.6114,-0.2535]),SFVec3f([-0.5739,-0.5388,-0.1727]),SFVec3f([-0.5662,0.5554,-0.1816]),SFVec3f([-0.4934,0.669,-0.2851]),SFVec3f([-0.0215,0.4249,-0.2986])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.177,0.1457]),SFVec2f([0.1567,0.1378]),SFVec2f([0.1506,0.1431]),SFVec2f([0.1539,0.1386]),SFVec2f([0.1751,0.1447]),SFVec2f([0.1523,0.1336]),SFVec2f([0.1493,0.1348]),SFVec2f([0.1463,0.1377]),SFVec2f([0.1689,0.1382]),SFVec2f([0.1638,0.1444]),SFVec2f([0.1645,0.1416]),SFVec2f([0.1607,0.138]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1859,0.1202]),SFVec2f([0.175,0.1048]),SFVec2f([0.1985,0.1126]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1825,0.1473]),SFVec2f([0.1858,0.1369]),SFVec2f([0.1864,0.1452]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1985,0.1126]),SFVec2f([0.175,0.1048]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1523,0.1336]),SFVec2f([0.1463,0.1377]),SFVec2f([0.1493,0.1348]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1864,0.1452]),SFVec2f([0.1858,0.1369]),SFVec2f([0.2059,0.1148]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1825,0.1473])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('r_metatarsophalangeal_1'),
                                                  DEF_ : SFString('hanim_r_metatarsophalangeal_1'),
                                                  center_ : SFVec3f([SFDouble(-2.745), SFDouble(0.6411), SFDouble(4.161)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('r_tarsal_proximal_phalanx_1'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_phalanx_1'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(-2.745), SFDouble(0.6411), SFDouble(4.161)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(9), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(11), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(37), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(37), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(35), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(35), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(17), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(29), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(42), SFInt32(3), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(1), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(33), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(27), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(27), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(35), SFInt32(2), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(32), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(25), SFInt32(39), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(20), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(26), SFInt32(19), SFInt32(-1), SFInt32(37), SFInt32(32), SFInt32(20), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(52), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(52), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(52), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(50), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(40), SFInt32(42), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(50), SFInt32(-1), SFInt32(29), SFInt32(27), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(29), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(27), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(30), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(38), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(35), SFInt32(30), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(35), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(51), SFInt32(30), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(5), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(57), SFInt32(6), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([-0.5023,0.0206,0.5225]),SFVec3f([-0.5069,0.3389,0.9722]),SFVec3f([0.5239,0.3546,0.9857]),SFVec3f([0.5823,-0.1222,0.9958]),SFVec3f([0.5025,-0.5579,0.9554]),SFVec3f([-0.5186,-0.5579,0.958]),SFVec3f([-0.5816,-0.1339,0.9847]),SFVec3f([0.5039,-0.0963,0.5275]),SFVec3f([0.4495,0.4588,0.4262]),SFVec3f([0.3875,0.4353,0.2405]),SFVec3f([0.4682,-0.1454,0.2855]),SFVec3f([-0.4437,0.4412,0.4574]),SFVec3f([-0.4398,-0.4616,0.472]),SFVec3f([0.4332,-0.4607,0.456]),SFVec3f([0.3649,-0.4415,0.2162]),SFVec3f([0.4121,-0.4761,-0.0214]),SFVec3f([0.4225,0.4741,0.0111]),SFVec3f([0.5118,-0.1454,0.0829]),SFVec3f([-0.5687,0.5579,-0.0036]),SFVec3f([-0.5704,-0.4763,-0.041]),SFVec3f([-0.5628,-0.4412,0.2556]),SFVec3f([-0.5641,0.4495,0.2541]),SFVec3f([-0.5671,0.3479,0.4508]),SFVec3f([-0.5823,-0.2729,0.4646]),SFVec3f([-0.5691,0.0505,0.5098]),SFVec3f([0.3979,-0.127,-0.1621]),SFVec3f([0.3346,-0.3422,-0.2601]),SFVec3f([-0.4303,-0.3427,-0.2664]),SFVec3f([-0.429,0.4294,-0.2381]),SFVec3f([0.3281,0.3657,-0.237]),SFVec3f([-0.7564,-0.2649,-0.0329]),SFVec3f([-0.752,-0.2445,0.139]),SFVec3f([-0.7633,-0.147,0.2601]),SFVec3f([-0.7556,0.0405,0.2863]),SFVec3f([-0.7545,0.2128,0.2521]),SFVec3f([-0.7527,0.2716,0.1381]),SFVec3f([-0.7554,0.3345,-0.0112]),SFVec3f([0.4054,0.215,1.213]),SFVec3f([-0.3954,0.2028,1.201]),SFVec3f([-0.4497,-0.1402,1.217]),SFVec3f([-0.4063,-0.4314,1.193]),SFVec3f([0.3905,-0.4313,1.189]),SFVec3f([0.4468,-0.1239,1.226])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.148,0.1294]),SFVec2f([0.142,0.1322]),SFVec2f([0.1446,0.131]),SFVec2f([0.1613,0.0957]),SFVec2f([0.1341,0.1263]),SFVec2f([0.1554,0.0919]),SFVec2f([0.1317,0.1272]),SFVec2f([0.1363,0.1268]),SFVec2f([0.1571,0.0927]),SFVec2f([0.1559,0.0889]),SFVec2f([0.1392,0.1292]),SFVec2f([0.16,0.0958]),SFVec2f([0.1443,0.128]),SFVec2f([0.1415,0.1284]),SFVec2f([0.1616,0.0962]),SFVec2f([0.1346,0.0953]),SFVec2f([0.1273,0.0961]),SFVec2f([0.126,0.0891]),SFVec2f([0.1339,0.0889]),SFVec2f([0.1175,0.0992]),SFVec2f([0.228,0.0809]),SFVec2f([0.2186,0.0857]),SFVec2f([0.2172,0.0848]),SFVec2f([0.2097,0.0859]),SFVec2f([0.2098,0.0901]),SFVec2f([0.2285,0.0738]),SFVec2f([0.1152,0.1058]),SFVec2f([0.1523,0.1336]),SFVec2f([0.1493,0.1348]),SFVec2f([0.1463,0.1377]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.2293,0.0837]),SFVec2f([0.1648,0.0986]),SFVec2f([0.112,0.093]),SFVec2f([0.1632,0.098]),SFVec2f([0.113,0.0993]),SFVec2f([0.2302,0.0796]),SFVec2f([0.1153,0.1053]),SFVec2f([0.2293,0.0736]),SFVec2f([0.1463,0.1377]),SFVec2f([0.1523,0.1336]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1493,0.1348]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1648,0.0986]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2293,0.0736]),SFVec2f([0.113,0.0993]),SFVec2f([0.112,0.093]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1341,0.1263]),SFVec2f([0.1554,0.0919]),SFVec2f([0.1559,0.0889]),SFVec2f([0.1571,0.0927]),SFVec2f([0.1363,0.1268]),SFVec2f([0.1317,0.1272])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('r_tarsal_distal_interphalangeal_1'),
                                                      DEF_ : SFString('hanim_r_tarsal_distal_interphalangeal_1'),
                                                      center_ : SFVec3f([SFDouble(-2.744), SFDouble(0.5394), SFDouble(5.125)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('r_tarsal_distal_phalanx_1'),
                                                          DEF_ : SFString('hanim_r_tarsal_distal_phalanx_1'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(-2.744), SFDouble(0.5394), SFDouble(5.125)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(3), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(17), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(7), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(23), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([-0.344,0.2722,0.7455]),SFVec3f([0.3545,0.2852,0.7666]),SFVec3f([0.348,-0.0873,0.9093]),SFVec3f([0.3417,-0.3926,0.7211]),SFVec3f([-0.334,-0.3926,0.6949]),SFVec3f([-0.3526,-0.0873,0.8916]),SFVec3f([-0.4743,0.3506,0.4051]),SFVec3f([0.5124,0.3666,0.4046]),SFVec3f([0.567,-0.0456,0.443]),SFVec3f([0.5027,-0.442,0.3984]),SFVec3f([-0.4707,-0.4405,0.4103]),SFVec3f([-0.5568,-0.1692,0.4444]),SFVec3f([-0.5073,0.4406,0.0082]),SFVec3f([0.5236,0.4563,0.0218]),SFVec3f([0.582,-0.0206,0.0319]),SFVec3f([0.5021,-0.4563,-0.0085]),SFVec3f([-0.5189,-0.4563,-0.0059]),SFVec3f([-0.582,-0.0322,0.0208]),SFVec3f([-0.3902,0.3124,-0.2366]),SFVec3f([0.4061,0.3245,-0.2249]),SFVec3f([0.4471,-0.0116,-0.2116]),SFVec3f([0.3913,-0.3165,-0.2486]),SFVec3f([-0.401,-0.3166,-0.2442]),SFVec3f([-0.444,-0.028,-0.2206])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.1287,0.113]),SFVec2f([0.1423,0.0921]),SFVec2f([0.1396,0.0889]),SFVec2f([0.1257,0.1107]),SFVec2f([0.1415,0.0903]),SFVec2f([0.1274,0.1123]),SFVec2f([0.1297,0.1214]),SFVec2f([0.15,0.0896]),SFVec2f([0.1273,0.1223]),SFVec2f([0.1313,0.1227]),SFVec2f([0.1521,0.0901]),SFVec2f([0.1498,0.0859]),SFVec2f([0.0527,0.151]),SFVec2f([0.0282,0.1325]),SFVec2f([0.0446,0.0894]),SFVec2f([0.0746,0.0899]),SFVec2f([0.1016,0.0977]),SFVec2f([0.1554,0.0919]),SFVec2f([0.0779,0.162]),SFVec2f([0.1341,0.1263]),SFVec2f([0.1317,0.1272]),SFVec2f([0.1363,0.1268]),SFVec2f([0.1571,0.0927]),SFVec2f([0.1559,0.0889]),SFVec2f([0.1554,0.0919]),SFVec2f([0.0779,0.162]),SFVec2f([0.1317,0.1272]),SFVec2f([0.1363,0.1268]),SFVec2f([0.1571,0.0927]),SFVec2f([0.1559,0.0889])])))))])])])])]),

                                        HAnimJoint(
                                          name_ : SFString('r_cuneonavicular_2'),
                                          DEF_ : SFString('hanim_r_cuneonavicular_2'),
                                          center_ : SFVec3f([SFDouble(-3.602), SFDouble(1.49), SFDouble(0.9523)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('r_cuneiform_2'),
                                              DEF_ : SFString('hanim_r_cuneiform_2'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(-3.602), SFDouble(1.49), SFDouble(0.9523)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(0), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(23), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(7), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(17), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(20), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(0), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(1), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(2), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(23), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(7), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(17), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(39), SFInt32(20), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([-0.2418,-1.317,0.3066]),SFVec3f([-0.262,1.069,0.2707]),SFVec3f([-0.2399,-1.332,0.7678]),SFVec3f([-0.289,0.7461,0.7818]),SFVec3f([0.3232,0.8508,0.3451]),SFVec3f([0.3262,-1.31,0.3344]),SFVec3f([0.3811,0.491,1.052]),SFVec3f([0.3785,-1.316,1.066]),SFVec3f([-0.2589,1.334,-0.0919]),SFVec3f([0.2569,1.202,-0.0183]),SFVec3f([-0.2486,-1.334,-0.0929]),SFVec3f([0.2763,-1.329,-0.0115]),SFVec3f([0.4937,0.6449,0.0794]),SFVec3f([0.5389,0.5099,0.2504]),SFVec3f([0.5914,0.2392,0.9077]),SFVec3f([0.5883,-1.064,0.9201]),SFVec3f([0.5488,-1.06,0.3077]),SFVec3f([0.5121,-1.07,0.0848]),SFVec3f([-0.5859,0.5666,0.674]),SFVec3f([-0.5593,0.8214,0.2083]),SFVec3f([-0.5574,0.9493,0.0064]),SFVec3f([-0.5505,-1.093,0.0054]),SFVec3f([-0.5421,-1.082,0.3015]),SFVec3f([-0.5387,-1.092,0.6611]),SFVec3f([0.2547,0.2976,1.364]),SFVec3f([-0.3749,0.5415,1.082]),SFVec3f([-0.4702,0.4247,1.049]),SFVec3f([-0.4305,-0.9692,1.038]),SFVec3f([-0.2863,-1.137,1.089]),SFVec3f([0.2662,-1.123,1.4]),SFVec3f([0.354,-0.9652,1.34]),SFVec3f([0.3565,0.1187,1.33]),SFVec3f([-0.2197,1.194,-0.369]),SFVec3f([0.2078,1.085,-0.3024]),SFVec3f([0.3907,0.6038,-0.2314]),SFVec3f([0.408,-1.005,-0.2264]),SFVec3f([0.2645,-1.199,-0.2846]),SFVec3f([-0.2118,-1.203,-0.3608]),SFVec3f([-0.4088,-1.011,-0.2965]),SFVec3f([-0.4151,0.8882,-0.2956])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.2179,0.1044]),SFVec2f([0.2186,0.1086]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2047,0.1286]),SFVec2f([0.2132,0.1171]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2047,0.1286]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2132,0.1171]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2179,0.1044]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2186,0.1086]),SFVec2f([0.2128,0.1035]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2163,0.1174]),SFVec2f([0.2132,0.1285]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2224,0.1067])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('r_tarsometatarsal_2'),
                                              DEF_ : SFString('hanim_r_tarsometatarsal_2'),
                                              center_ : SFVec3f([SFDouble(-3.548), SFDouble(1.16), SFDouble(1.825)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('r_metatarsal_2'),
                                                  DEF_ : SFString('hanim_r_metatarsal_2'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(-3.548), SFDouble(1.16), SFDouble(1.825)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(12), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(46), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(29), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(19), SFInt32(-1), SFInt32(28), SFInt32(19), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(21), SFInt32(-1), SFInt32(37), SFInt32(29), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(34), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(2), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(4), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(16), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(50), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(28), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(8), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(1), SFInt32(-1), SFInt32(46), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(46), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(12), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(38), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(37), SFInt32(5), SFInt32(-1), SFInt32(15), SFInt32(7), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(15), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(7), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(22), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(37), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(5), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(15), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(45), SFInt32(36), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(28), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(11), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(28), SFInt32(-1), SFInt32(27), SFInt32(18), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(27), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(33), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(17), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(10), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(53), SFInt32(32), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(17), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(45), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(49), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(32), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(22), SFInt32(-1), SFInt32(31), SFInt32(22), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(40), SFInt32(32), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(23), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(34), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(3), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(3), SFInt32(-1), SFInt32(45), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(18), SFInt32(-1), SFInt32(4), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(4), SFInt32(-1), SFInt32(53), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(5), SFInt32(-1), SFInt32(49), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(49), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(13), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(1), SFInt32(-1), SFInt32(41), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(41), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(40), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(26), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(10), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(25), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(40), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(8), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(40), SFInt32(-1), SFInt32(39), SFInt32(7), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(48), SFInt32(39), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(16), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(17), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(30), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(36), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(14), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(36), SFInt32(-1), SFInt32(35), SFInt32(15), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(56), SFInt32(35), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([-0.376,0.2511,1.709]),SFVec3f([-0.3357,0.7759,0.5398]),SFVec3f([0.3119,0.2409,1.767]),SFVec3f([0.3526,0.6595,0.5874]),SFVec3f([0.3078,-1.076,1.666]),SFVec3f([-0.3874,0.0522,2.259]),SFVec3f([0.2343,0.0387,2.332]),SFVec3f([0.2326,-0.9956,2.295]),SFVec3f([-0.3451,0.5141,1.12]),SFVec3f([0.3463,0.4507,1.205]),SFVec3f([-0.3434,1.076,-0.0912]),SFVec3f([0.3267,0.8206,0.1791]),SFVec3f([-0.3294,-1.076,1.609]),SFVec3f([-0.2875,-1.012,0.4679]),SFVec3f([0.3874,-0.9909,0.4772]),SFVec3f([-0.3851,-0.9944,2.223]),SFVec3f([0.3874,-0.9909,0.4772]),SFVec3f([-0.2943,-1.002,-0.1052]),SFVec3f([0.3241,-0.9868,0.193]),SFVec3f([0.5947,0.492,0.5352]),SFVec3f([0.5929,0.2828,1.154]),SFVec3f([0.5593,0.0734,1.716]),SFVec3f([0.4991,-0.0854,2.16]),SFVec3f([0.4989,-0.8372,2.132]),SFVec3f([0.5532,-0.8961,1.67]),SFVec3f([0.6306,-0.8125,0.499]),SFVec3f([0.6285,-0.8121,0.4892]),SFVec3f([0.587,-0.8107,0.3782]),SFVec3f([0.5955,0.5581,0.3668]),SFVec3f([-0.6024,0.1292,1.656]),SFVec3f([-0.5716,0.3941,1.062]),SFVec3f([-0.5635,0.6565,0.4802]),SFVec3f([-0.5689,0.8722,0.0262]),SFVec3f([-0.528,-0.8844,0.0143]),SFVec3f([-0.522,-0.8924,0.4655]),SFVec3f([-0.5629,-0.9551,1.597]),SFVec3f([-0.6111,-0.8893,2.094]),SFVec3f([-0.6095,-0.0402,2.124]),SFVec3f([-0.3754,-0.8654,2.416]),SFVec3f([0.1932,-0.8668,2.492]),SFVec3f([0.3693,-0.7622,2.474]),SFVec3f([0.3695,-0.1901,2.494]),SFVec3f([0.1974,-0.1096,2.517]),SFVec3f([-0.3791,-0.0968,2.442]),SFVec3f([-0.5023,-0.1482,2.391]),SFVec3f([-0.5036,-0.8058,2.368]),SFVec3f([-0.2236,0.9197,-0.4593]),SFVec3f([0.3621,0.6915,-0.1877]),SFVec3f([0.5727,0.4882,-0.046]),SFVec3f([0.565,-0.7245,-0.0357]),SFVec3f([0.3891,-0.8422,-0.159]),SFVec3f([-0.1716,-0.8563,-0.4501]),SFVec3f([-0.3041,-0.7893,-0.3815]),SFVec3f([-0.3412,0.8037,-0.3708])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.175,0.1048]),SFVec2f([0.1833,0.0898]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1985,0.1126]),SFVec2f([0.2017,0.0948]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1937,0.091]),SFVec2f([0.1795,0.1136]),SFVec2f([0.2068,0.0986]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2059,0.1148]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1731,0.1071]),SFVec2f([0.2017,0.0948]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1731,0.1071]),SFVec2f([0.1795,0.1136]),SFVec2f([0.1859,0.1202]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1937,0.091]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2017,0.0948]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.2098,0.0996]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.1953,0.1244]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('r_metatarsophalangeal_2'),
                                                  DEF_ : SFString('hanim_r_metatarsophalangeal_2'),
                                                  center_ : SFVec3f([SFDouble(-3.651), SFDouble(0.6656), SFDouble(4.348)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('r_tarsal_proximal_phalanx_2'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_phalanx_2'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(-3.651), SFDouble(0.6656), SFDouble(4.348)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(8), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(20), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(21), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(36), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(31), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(31), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(37), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(37), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(41), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(21), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(20), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(43), SFInt32(24), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(24), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(30), SFInt32(4), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(26), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(31), SFInt32(3), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(17), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(39), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(36), SFInt32(-1), SFInt32(50), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(45), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(45), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(14), SFInt32(-1), SFInt32(43), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(51), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(51), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(45), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(55), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(26), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(32), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(27), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(50), SFInt32(29), SFInt32(-1), SFInt32(31), SFInt32(9), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(31), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(30), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(4), SFInt32(-1), SFInt32(33), SFInt32(39), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(33), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(39), SFInt32(-1), SFInt32(38), SFInt32(34), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(57), SFInt32(38), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([0.3393,0.3234,0.264]),SFVec3f([0.3241,-0.2974,0.2778]),SFVec3f([0.3373,0.026,0.323]),SFVec3f([0.2778,-0.0393,0.3227]),SFVec3f([0.2424,-0.183,0.7679]),SFVec3f([0.1972,-0.5469,0.7512]),SFVec3f([0.2409,-0.4436,0.2718]),SFVec3f([-0.2712,-0.5414,0.6896]),SFVec3f([-0.2313,-0.4503,0.2153]),SFVec3f([-0.3295,-0.1296,0.7058]),SFVec3f([-0.2745,0.3527,0.6921]),SFVec3f([-0.2339,0.4182,0.2093]),SFVec3f([-0.3003,-0.075,0.2531]),SFVec3f([0.204,0.3657,0.7504]),SFVec3f([0.2252,0.4123,0.2599]),SFVec3f([-0.3372,0.3253,0.1752]),SFVec3f([-0.3386,-0.3128,0.1812]),SFVec3f([-0.3436,0.0018,0.2359]),SFVec3f([-0.2944,-0.4678,-0.021]),SFVec3f([-0.3035,0.4187,-0.0402]),SFVec3f([0.3436,-0.4656,0.0689]),SFVec3f([0.3423,0.425,0.0673]),SFVec3f([-0.2817,-0.4996,-0.2995]),SFVec3f([-0.2839,0.5469,-0.2638]),SFVec3f([0.3377,0.5334,-0.1904]),SFVec3f([0.336,-0.5008,-0.2278]),SFVec3f([0.2473,-0.3729,-0.4869]),SFVec3f([-0.1345,-0.3721,-0.5309]),SFVec3f([-0.1362,0.4342,-0.5035]),SFVec3f([0.2486,0.4258,-0.4578]),SFVec3f([-0.5241,0.2491,-0.0133]),SFVec3f([-0.5013,0.3226,-0.1835]),SFVec3f([-0.4932,0.3669,-0.2606]),SFVec3f([-0.4932,-0.3819,-0.2863]),SFVec3f([-0.4923,-0.3672,-0.1575]),SFVec3f([-0.5259,-0.2546,-0.0109]),SFVec3f([-0.5286,-0.0001,0.0336]),SFVec3f([0.554,0.3222,-0.0429]),SFVec3f([0.5543,0.2475,0.1018]),SFVec3f([0.5536,0.0219,0.1466]),SFVec3f([0.5407,-0.2386,0.1101]),SFVec3f([0.5571,-0.3586,-0.0389]),SFVec3f([0.5501,-0.3746,-0.1733]),SFVec3f([0.5517,0.3659,-0.1465])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.2327,0.0796]),SFVec2f([0.2439,0.0803]),SFVec2f([0.2062,0.05]),SFVec2f([0.2147,0.0491]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2205,0.0532]),SFVec2f([0.2301,0.0734]),SFVec2f([0.2486,0.0743]),SFVec2f([0.2013,0.0552]),SFVec2f([0.2187,0.0481]),SFVec2f([0.221,0.0541]),SFVec2f([0.2293,0.0736]),SFVec2f([0.1746,0.075]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1745,0.076]),SFVec2f([0.1824,0.0523]),SFVec2f([0.1886,0.0572]),SFVec2f([0.183,0.0511]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1882,0.0556]),SFVec2f([0.1885,0.0566]),SFVec2f([0.1716,0.0676]),SFVec2f([0.1748,0.0736]),SFVec2f([0.2444,0.0847]),SFVec2f([0.2027,0.042]),SFVec2f([0.2022,0.0485]),SFVec2f([0.2464,0.0799]),SFVec2f([0.2486,0.0741]),SFVec2f([0.2011,0.0554]),SFVec2f([0.2293,0.0837]),SFVec2f([0.2177,0.0418]),SFVec2f([0.1769,0.0796]),SFVec2f([0.1648,0.0986]),SFVec2f([0.1632,0.098]),SFVec2f([0.1766,0.0777]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1682,0.1025]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1682,0.1025]),SFVec2f([0.2022,0.0485]),SFVec2f([0.2027,0.042]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1769,0.0796]),SFVec2f([0.2464,0.0799]),SFVec2f([0.2486,0.0741]),SFVec2f([0.1632,0.098]),SFVec2f([0.2187,0.0481]),SFVec2f([0.221,0.0541]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2293,0.0837]),SFVec2f([0.1699,0.1017]),SFVec2f([0.1682,0.1025])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('r_tarsal_proximal_interphalangeal_2'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_interphalangeal_2'),
                                                      center_ : SFVec3f([SFDouble(-3.73), SFDouble(0.5621), SFDouble(5.067)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('r_tarsal_middle_phalanx_2'),
                                                          DEF_ : SFString('hanim_r_tarsal_middle_phalanx_2'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(-3.73), SFDouble(0.5621), SFDouble(5.067)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(2), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(2), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([0.3183,-0.4691,0.449]),SFVec3f([0.3467,-0.0977,0.4619]),SFVec3f([-0.3028,-0.4691,0.3802]),SFVec3f([-0.3467,-0.0977,0.3792]),SFVec3f([-0.2958,0.1955,0.3815]),SFVec3f([0.2928,0.2184,0.4522]),SFVec3f([0.3214,-0.0796,0.049]),SFVec3f([0.2763,-0.4435,0.0323]),SFVec3f([-0.1921,-0.4379,-0.0293]),SFVec3f([-0.2505,-0.0262,-0.0131]),SFVec3f([-0.1955,0.4562,-0.0268]),SFVec3f([0.2831,0.4691,0.0315]),SFVec3f([0.2728,-0.0774,-0.1826]),SFVec3f([0.237,-0.3678,-0.1982]),SFVec3f([-0.1011,-0.3637,-0.2446]),SFVec3f([-0.1496,-0.025,-0.2272]),SFVec3f([-0.1027,0.3833,-0.2419]),SFVec3f([0.2402,0.3926,-0.1995]),SFVec3f([0.1636,-0.3203,0.5822]),SFVec3f([0.1797,-0.1053,0.5929]),SFVec3f([0.1512,0.0631,0.5854]),SFVec3f([-0.1873,0.0499,0.5442]),SFVec3f([-0.214,-0.1025,0.5454]),SFVec3f([-0.1882,-0.3203,0.5451])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.1293,0.0261]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1651,0.0639]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1291,0.0918]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1554,0.0532]),SFVec2f([0.1716,0.0676]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1554,0.0532]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1651,0.0639]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1795,0.0453])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('r_tarsal_distal_interphalangeal_2'),
                                                          DEF_ : SFString('hanim_r_tarsal_distal_interphalangeal_2'),
                                                          center_ : SFVec3f([SFDouble(-3.73), SFDouble(0.4367), SFDouble(5.486)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('r_tarsal_distal_phalanx_2'),
                                                              DEF_ : SFString('hanim_r_tarsal_distal_phalanx_2'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(-3.73), SFDouble(0.4367), SFDouble(5.486)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(15), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([0.2128,-0.2652,0.3261]),SFVec3f([0.2081,-0.028,0.4176]),SFVec3f([-0.2913,-0.028,0.3571]),SFVec3f([-0.2272,-0.2652,0.2666]),SFVec3f([-0.2609,0.2185,0.2973]),SFVec3f([0.1985,0.2313,0.3646]),SFVec3f([0.3183,-0.3438,0.0295]),SFVec3f([0.3467,0.0277,0.0425]),SFVec3f([-0.3028,-0.3438,-0.0392]),SFVec3f([-0.3467,0.0277,-0.0402]),SFVec3f([-0.2958,0.3209,-0.0379]),SFVec3f([0.2928,0.3438,0.0327]),SFVec3f([0.2562,0.0235,-0.1565]),SFVec3f([0.2371,-0.2306,-0.1677]),SFVec3f([-0.182,-0.2306,-0.2127]),SFVec3f([-0.2123,0.0256,-0.2127]),SFVec3f([-0.1796,0.2132,-0.2131]),SFVec3f([0.2214,0.2288,-0.1645])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.1643,0.0579]),SFVec2f([0.1638,0.0538]),SFVec2f([0.174,0.0396]),SFVec2f([0.1747,0.0423]),SFVec2f([0.1756,0.0403]),SFVec2f([0.1632,0.0573]),SFVec2f([0.066,0.0493]),SFVec2f([0.0915,0.0082]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1293,0.0261]),SFVec2f([0.1651,0.0639]),SFVec2f([0.1636,0.063]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.1293,0.0261])])))))])])])])])]),

                                        HAnimJoint(
                                          name_ : SFString('r_cuneonavicular_3'),
                                          DEF_ : SFString('hanim_r_cuneonavicular_3'),
                                          center_ : SFVec3f([SFDouble(-4.116), SFDouble(1.484), SFDouble(0.8808)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('r_cuneiform_3'),
                                              DEF_ : SFString('hanim_r_cuneiform_3'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(-4.116), SFDouble(1.484), SFDouble(0.8808)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(4), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(13), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(16), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(5), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(16), SFInt32(-1), SFInt32(15), SFInt32(6), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(15), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(4), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(22), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(1), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(15), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(29), SFInt32(17), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([-0.3141,0.6132,0.8819]),SFVec3f([-0.2408,-1.34,0.8742]),SFVec3f([0.2719,-1.312,0.3782]),SFVec3f([0.2517,1.075,0.3423]),SFVec3f([-0.2453,0.9604,0.0142]),SFVec3f([0.2738,-1.326,0.8393]),SFVec3f([0.2247,0.7517,0.8534]),SFVec3f([-0.2144,-1.314,0.0184]),SFVec3f([0.2548,1.34,-0.0203]),SFVec3f([0.2651,-1.329,-0.0214]),SFVec3f([-0.5551,0.398,0.7409]),SFVec3f([-0.4991,0.6279,0.1249]),SFVec3f([-0.4757,-1.204,0.1283]),SFVec3f([-0.4872,-1.221,0.7343]),SFVec3f([0.4782,0.9895,0.2862]),SFVec3f([0.4537,0.6961,0.7506]),SFVec3f([0.5001,-1.215,0.7378]),SFVec3f([0.4955,-1.204,0.381]),SFVec3f([0.4895,-1.216,0.0879]),SFVec3f([0.4811,1.134,0.0888]),SFVec3f([0.2293,0.4659,1.208]),SFVec3f([-0.2844,0.3497,1.239]),SFVec3f([-0.4589,0.1843,1.144]),SFVec3f([-0.3966,-1.12,1.138]),SFVec3f([-0.222,-1.185,1.237]),SFVec3f([0.2534,-1.174,1.199]),SFVec3f([0.4036,-1.109,1.132]),SFVec3f([0.3609,0.4374,1.144])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.2226,0.0828]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2186,0.1086]),SFVec2f([0.2179,0.1044]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2179,0.1044]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2186,0.1086]),SFVec2f([0.2197,0.1123]),SFVec2f([0.2224,0.1067]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('r_tarsometatarsal_3'),
                                              DEF_ : SFString('hanim_r_tarsometatarsal_3'),
                                              center_ : SFVec3f([SFDouble(-4.188), SFDouble(1.16), SFDouble(1.751)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('r_metatarsal_3'),
                                                  DEF_ : SFString('hanim_r_metatarsal_3'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(-4.188), SFDouble(1.16), SFDouble(1.751)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(15), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(17), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(35), SFInt32(27), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(35), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(9), SFInt32(-1), SFInt32(17), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(5), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(10), SFInt32(-1), SFInt32(40), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(12), SFInt32(-1), SFInt32(44), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(44), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(6), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(35), SFInt32(7), SFInt32(-1), SFInt32(37), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(48), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(14), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(1), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(18), SFInt32(-1), SFInt32(26), SFInt32(2), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(26), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(34), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(0), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(34), SFInt32(-1), SFInt32(33), SFInt32(14), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(43), SFInt32(33), SFInt32(-1), SFInt32(16), SFInt32(5), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(16), SFInt32(-1), SFInt32(5), SFInt32(22), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(5), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(21), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(30), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(11), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(16), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(51), SFInt32(29), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(25), SFInt32(7), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(25), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(24), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(26), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(43), SFInt32(45), SFInt32(27), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(46), SFInt32(-1), SFInt32(56), SFInt32(44), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(52), SFInt32(56), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(28), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(40), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(39), SFInt32(-1), SFInt32(1), SFInt32(22), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(28), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(11), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(14), SFInt32(-1), SFInt32(70), SFInt32(67), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(69), SFInt32(70), SFInt32(-1), SFInt32(5), SFInt32(24), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(35), SFInt32(5), SFInt32(-1), SFInt32(25), SFInt32(3), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(25), SFInt32(-1), SFInt32(13), SFInt32(23), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(39), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(40), SFInt32(12), SFInt32(-1), SFInt32(62), SFInt32(58), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(16), SFInt32(7), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(43), SFInt32(16), SFInt32(-1), SFInt32(15), SFInt32(26), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(15), SFInt32(-1), SFInt32(66), SFInt32(71), SFInt32(73), SFInt32(-1), SFInt32(73), SFInt32(74), SFInt32(66), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(48), SFInt32(6), SFInt32(-1), SFInt32(21), SFInt32(8), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(49), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(51), SFInt32(18), SFInt32(-1), SFInt32(57), SFInt32(63), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(65), SFInt32(57), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(0), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(56), SFInt32(19), SFInt32(-1), SFInt32(59), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(57), SFInt32(59), SFInt32(-1), SFInt32(70), SFInt32(72), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(67), SFInt32(70), SFInt32(-1), SFInt32(20), SFInt32(1), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(57), SFInt32(20), SFInt32(-1), SFInt32(1), SFInt32(29), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(58), SFInt32(1), SFInt32(-1), SFInt32(29), SFInt32(42), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(29), SFInt32(-1), SFInt32(42), SFInt32(2), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(42), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(54), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(63), SFInt32(0), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(64), SFInt32(54), SFInt32(-1), SFInt32(53), SFInt32(20), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(65), SFInt32(53), SFInt32(-1), SFInt32(26), SFInt32(5), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(66), SFInt32(26), SFInt32(-1), SFInt32(5), SFInt32(35), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(67), SFInt32(5), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(69), SFInt32(-1), SFInt32(69), SFInt32(68), SFInt32(35), SFInt32(-1), SFInt32(34), SFInt32(4), SFInt32(70), SFInt32(-1), SFInt32(70), SFInt32(69), SFInt32(34), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(72), SFInt32(-1), SFInt32(72), SFInt32(70), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(48), SFInt32(73), SFInt32(-1), SFInt32(73), SFInt32(71), SFInt32(6), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(74), SFInt32(-1), SFInt32(74), SFInt32(73), SFInt32(48), SFInt32(-1), SFInt32(47), SFInt32(26), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(74), SFInt32(47), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([-0.3514,0.0088,2.189]),SFVec3f([0.2551,-0.9944,2.297]),SFVec3f([0.2528,0.0522,2.333]),SFVec3f([0.2951,0.5141,1.194]),SFVec3f([0.3459,-1.002,-0.0312]),SFVec3f([0.2968,1.076,-0.0171]),SFVec3f([-0.236,-1.076,1.597]),SFVec3f([-0.2984,0.2146,1.686]),SFVec3f([-0.2182,-1.032,0.4559]),SFVec3f([0.3108,-1.076,1.683]),SFVec3f([0.2642,0.2511,1.783]),SFVec3f([-0.1688,-1.016,0.0037]),SFVec3f([-0.2567,0.7002,0.5242]),SFVec3f([-0.2664,0.4574,1.105]),SFVec3f([-0.3555,-0.9951,2.147]),SFVec3f([0.3045,0.7759,0.6139]),SFVec3f([-0.2421,0.9373,0.0114]),SFVec3f([0.3527,-1.012,0.5419]),SFVec3f([0.4555,-0.9034,2.208]),SFVec3f([0.5053,-0.9726,1.685]),SFVec3f([0.5463,-0.9098,0.5513]),SFVec3f([0.5402,-0.9013,0.0735]),SFVec3f([0.4975,0.9256,0.0859]),SFVec3f([0.5034,0.6915,0.5785]),SFVec3f([0.495,0.4292,1.16]),SFVec3f([0.4642,0.1647,1.753]),SFVec3f([0.4562,-0.0112,2.238]),SFVec3f([-0.4671,0.3356,0.9778]),SFVec3f([-0.4564,0.5794,0.3947]),SFVec3f([-0.4508,0.735,0.0575]),SFVec3f([-0.3868,-0.8992,0.0513]),SFVec3f([-0.4273,-0.911,0.3814]),SFVec3f([-0.4427,-0.9545,1.511]),SFVec3f([-0.5425,-0.8904,1.948]),SFVec3f([-0.5341,-0.0799,1.982]),SFVec3f([-0.4962,0.0926,1.56]),SFVec3f([-0.404,-0.8727,2.327]),SFVec3f([0.1714,-0.8722,2.472]),SFVec3f([0.2831,-0.8318,2.473]),SFVec3f([0.2837,-0.1125,2.497]),SFVec3f([0.1794,-0.0912,2.498]),SFVec3f([-0.3948,-0.1313,2.362]),SFVec3f([-0.515,-0.1786,2.318]),SFVec3f([-0.5218,-0.8172,2.291]),SFVec3f([-0.1845,0.8454,-0.2358]),SFVec3f([0.2895,0.9675,-0.2731]),SFVec3f([0.4148,0.8711,-0.2009]),SFVec3f([0.4547,-0.8346,-0.2124]),SFVec3f([0.3314,-0.8987,-0.2789]),SFVec3f([-0.1384,-0.9111,-0.2399]),SFVec3f([-0.2817,-0.8344,-0.2087]),SFVec3f([-0.3416,0.6936,-0.203])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.195,0.0629]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1937,0.091]),SFVec2f([0.2128,0.1035]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2138,0.0778]),SFVec2f([0.1989,0.0701]),SFVec2f([0.1984,0.068]),SFVec2f([0.2129,0.0844]),SFVec2f([0.1833,0.0898]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1937,0.091]),SFVec2f([0.2068,0.0986]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2061,0.0729]),SFVec2f([0.1989,0.0701]),SFVec2f([0.1984,0.068]),SFVec2f([0.1952,0.0651]),SFVec2f([0.2129,0.0844]),SFVec2f([0.1833,0.0898]),SFVec2f([0.1856,0.0872]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2138,0.0778]),SFVec2f([0.1937,0.091]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1937,0.091]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2017,0.0948]),SFVec2f([0.2017,0.0948]),SFVec2f([0.1937,0.091]),SFVec2f([0.1937,0.091]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1856,0.0872]),SFVec2f([0.1811,0.0824]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2138,0.0778]),SFVec2f([0.1984,0.068]),SFVec2f([0.1984,0.068]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.1984,0.068]),SFVec2f([0.1984,0.068]),SFVec2f([0.195,0.0629]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1811,0.0824]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2098,0.0996]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('r_metatarsophalangeal_3'),
                                                  DEF_ : SFString('hanim_r_metatarsophalangeal_3'),
                                                  center_ : SFVec3f([SFDouble(-4.271), SFDouble(0.6692), SFDouble(4.241)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('r_tarsal_proximal_phalanx_3'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_phalanx_3'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(-4.271), SFDouble(0.6692), SFDouble(4.241)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(13), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(35), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(37), SFInt32(41), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(20), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(11), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(43), SFInt32(16), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(22), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(36), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(36), SFInt32(-1), SFInt32(25), SFInt32(27), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(11), SFInt32(35), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(30), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(28), SFInt32(15), SFInt32(-1), SFInt32(37), SFInt32(32), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(33), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(11), SFInt32(18), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(12), SFInt32(32), SFInt32(-1), SFInt32(10), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(30), SFInt32(13), SFInt32(-1), SFInt32(39), SFInt32(35), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(23), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(49), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(51), SFInt32(55), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(49), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(27), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(43), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(36), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(26), SFInt32(-1), SFInt32(35), SFInt32(39), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(35), SFInt32(-1), SFInt32(39), SFInt32(33), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(39), SFInt32(-1), SFInt32(34), SFInt32(32), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(34), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(32), SFInt32(-1), SFInt32(38), SFInt32(27), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(38), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(50), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(14), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(30), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(21), SFInt32(-1), SFInt32(15), SFInt32(28), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(15), SFInt32(-1), SFInt32(29), SFInt32(24), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(29), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(57), SFInt32(25), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([0.1594,-0.1332,0.7353]),SFVec3f([0.1083,-0.5433,0.705]),SFVec3f([-0.2948,-0.537,0.6162]),SFVec3f([-0.3607,-0.1332,0.6075]),SFVec3f([-0.3179,0.2847,0.6096]),SFVec3f([0.1134,0.2976,0.7106]),SFVec3f([-0.2307,0.3831,0.1658]),SFVec3f([0.1687,-0.4707,0.2753]),SFVec3f([0.1683,0.3967,0.266]),SFVec3f([-0.2141,-0.4772,0.1676]),SFVec3f([0.2828,0.3217,0.2825]),SFVec3f([0.2814,-0.3164,0.2886]),SFVec3f([0.2764,-0.0018,0.3432]),SFVec3f([0.2194,-0.0661,0.3461]),SFVec3f([-0.2983,-0.0994,0.2248]),SFVec3f([0.3383,-0.5032,-0.1922]),SFVec3f([0.3361,0.5433,-0.1564]),SFVec3f([-0.2723,-0.5039,-0.3421]),SFVec3f([-0.2682,0.4999,-0.3003]),SFVec3f([0.3256,-0.4714,0.0864]),SFVec3f([0.3165,0.4151,0.0671]),SFVec3f([-0.3314,0.3308,0.1403]),SFVec3f([-0.3388,-0.0098,0.2061]),SFVec3f([-0.2976,-0.4701,-0.0746]),SFVec3f([-0.2868,0.3935,-0.0986]),SFVec3f([-0.3268,-0.4338,0.1421]),SFVec3f([0.2714,-0.3691,-0.4482]),SFVec3f([-0.0939,-0.3695,-0.5391]),SFVec3f([-0.091,0.3914,-0.5067]),SFVec3f([0.2699,0.4174,-0.422]),SFVec3f([-0.4721,-0.2654,-0.2843]),SFVec3f([-0.4847,-0.2485,-0.151]),SFVec3f([-0.4993,-0.2304,-0.0429]),SFVec3f([-0.5052,-0.0191,-0.011]),SFVec3f([-0.5015,0.1507,-0.0438]),SFVec3f([-0.4793,0.182,-0.1629]),SFVec3f([-0.47,0.235,-0.2634]),SFVec3f([0.4981,0.3267,-0.001]),SFVec3f([0.4733,0.2524,0.1707]),SFVec3f([0.4685,-0.002,0.2185]),SFVec3f([0.4718,-0.2559,0.1742]),SFVec3f([0.5063,-0.3741,0.0202]),SFVec3f([0.5105,-0.3938,-0.1519]),SFVec3f([0.5097,0.3977,-0.1248])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.1706,0.0686]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1716,0.0676]),SFVec2f([0.1882,0.0556]),SFVec2f([0.1745,0.076]),SFVec2f([0.1748,0.0736]),SFVec2f([0.1886,0.0572]),SFVec2f([0.2327,0.0796]),SFVec2f([0.2439,0.0803]),SFVec2f([0.2076,0.0485]),SFVec2f([0.2162,0.0476]),SFVec2f([0.2201,0.0466]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2219,0.0517]),SFVec2f([0.2301,0.0734]),SFVec2f([0.2486,0.0743]),SFVec2f([0.2027,0.0537]),SFVec2f([0.2224,0.0526]),SFVec2f([0.2293,0.0736]),SFVec2f([0.1746,0.075]),SFVec2f([0.1885,0.0566]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1952,0.0651]),SFVec2f([0.195,0.0629]),SFVec2f([0.2293,0.0837]),SFVec2f([0.1769,0.0796]),SFVec2f([0.2191,0.0403]),SFVec2f([0.1766,0.0777]),SFVec2f([0.2037,0.047]),SFVec2f([0.2486,0.0741]),SFVec2f([0.2026,0.0539]),SFVec2f([0.2444,0.0847]),SFVec2f([0.1915,0.0602]),SFVec2f([0.2041,0.0405]),SFVec2f([0.1915,0.0578]),SFVec2f([0.2464,0.0799]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1952,0.0651]),SFVec2f([0.195,0.0629]),SFVec2f([0.1811,0.0824]),SFVec2f([0.1952,0.0651]),SFVec2f([0.1915,0.0602]),SFVec2f([0.2464,0.0799]),SFVec2f([0.2486,0.0741]),SFVec2f([0.2037,0.047]),SFVec2f([0.2041,0.0405]),SFVec2f([0.195,0.0629]),SFVec2f([0.1766,0.0777]),SFVec2f([0.2201,0.0466]),SFVec2f([0.2224,0.0526]),SFVec2f([0.2302,0.0796]),SFVec2f([0.2293,0.0837]),SFVec2f([0.1801,0.0847]),SFVec2f([0.1811,0.0824])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('r_tarsal_proximal_interphalangeal_3'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_interphalangeal_3'),
                                                      center_ : SFVec3f([SFDouble(-4.378), SFDouble(0.5299), SFDouble(4.91)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('r_tarsal_middle_phalanx_3'),
                                                          DEF_ : SFString('hanim_r_tarsal_middle_phalanx_3'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(-4.378), SFDouble(0.5299), SFDouble(4.91)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(1), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(2), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(2), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([0.2639,-0.0654,0.4775]),SFVec3f([0.2294,-0.4369,0.4537]),SFVec3f([-0.3569,-0.4369,0.3314]),SFVec3f([-0.4011,-0.0654,0.3295]),SFVec3f([-0.356,0.2278,0.3349]),SFVec3f([0.2178,0.2506,0.4454]),SFVec3f([0.266,0.0061,0.0655]),SFVec3f([0.2149,-0.404,0.0352]),SFVec3f([-0.1882,-0.3977,-0.0536]),SFVec3f([-0.2542,0.0061,-0.0624]),SFVec3f([-0.2113,0.424,-0.0602]),SFVec3f([0.22,0.4369,0.0407]),SFVec3f([0.2241,0.0073,-0.12]),SFVec3f([0.1856,-0.309,-0.1472]),SFVec3f([-0.0609,-0.3052,-0.1988]),SFVec3f([-0.1126,0.0092,-0.2043]),SFVec3f([-0.0789,0.3331,-0.2044]),SFVec3f([0.1892,0.3412,-0.1423]),SFVec3f([0.0664,-0.2871,0.5717]),SFVec3f([0.0852,-0.0696,0.5924]),SFVec3f([0.0631,0.0962,0.5657]),SFVec3f([-0.261,0.0833,0.5084]),SFVec3f([-0.2846,-0.0679,0.5073]),SFVec3f([-0.2579,-0.2871,0.5052])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.1651,0.0639]),SFVec2f([0.1293,0.0261]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1291,0.0918]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1554,0.0532]),SFVec2f([0.1716,0.0676]),SFVec2f([0.1709,0.0678]),SFVec2f([0.1706,0.0686]),SFVec2f([0.1824,0.0523]),SFVec2f([0.183,0.0511]),SFVec2f([0.1834,0.0508]),SFVec2f([0.1554,0.0532]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1636,0.063]),SFVec2f([0.1651,0.0639]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1795,0.0453])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('r_tarsal_distal_interphalangeal_3'),
                                                          DEF_ : SFString('hanim_r_tarsal_distal_interphalangeal_3'),
                                                          center_ : SFVec3f([SFDouble(-4.446), SFDouble(0.4367), SFDouble(5.32)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('r_tarsal_distal_phalanx_3'),
                                                              DEF_ : SFString('hanim_r_tarsal_distal_phalanx_3'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(-4.446), SFDouble(0.4367), SFDouble(5.32)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(15), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([0.1552,-0.028,0.3818]),SFVec3f([0.166,-0.2652,0.2973]),SFVec3f([-0.2126,-0.2652,0.2123]),SFVec3f([-0.2749,-0.028,0.2919]),SFVec3f([-0.2441,0.2185,0.2385]),SFVec3f([0.1507,0.2313,0.332]),SFVec3f([0.3325,0.0277,0.0683]),SFVec3f([0.298,-0.3438,0.0445]),SFVec3f([-0.2883,-0.3438,-0.0778]),SFVec3f([-0.3325,0.0277,-0.0797]),SFVec3f([-0.2874,0.3209,-0.0743]),SFVec3f([0.2864,0.3438,0.0362]),SFVec3f([0.2608,0.0241,-0.1382]),SFVec3f([0.2381,-0.2318,-0.1597]),SFVec3f([-0.1517,-0.2318,-0.2401]),SFVec3f([-0.1828,0.0254,-0.239]),SFVec3f([-0.1538,0.2121,-0.2369]),SFVec3f([0.2327,0.2275,-0.1663])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.1643,0.0579]),SFVec2f([0.1747,0.0423]),SFVec2f([0.174,0.0396]),SFVec2f([0.1638,0.0538]),SFVec2f([0.1756,0.0403]),SFVec2f([0.1632,0.0573]),SFVec2f([0.0915,0.0082]),SFVec2f([0.066,0.0493]),SFVec2f([0.1636,0.063]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.0949,0.0775]),SFVec2f([0.1293,0.0261]),SFVec2f([0.1651,0.0639]),SFVec2f([0.1636,0.063]),SFVec2f([0.1653,0.0654]),SFVec2f([0.1795,0.0453]),SFVec2f([0.1792,0.0409]),SFVec2f([0.1786,0.0451]),SFVec2f([0.1293,0.0261])])))))])])])])])])]),

                                    HAnimJoint(
                                      name_ : SFString('r_calcaneocuboid'),
                                      DEF_ : SFString('hanim_r_calcaneocuboid'),
                                      center_ : SFVec3f([SFDouble(-3.943), SFDouble(2.577), SFDouble(-1.154)]),
                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      children_ : [
                                        HAnimSegment(
                                          name_ : SFString('r_calcaneus'),
                                          DEF_ : SFString('hanim_r_calcaneus'),
                                          children_ : [
                                            Transform(
                                              translation_ : SFVec3f([SFDouble(-3.943), SFDouble(2.577), SFDouble(-1.154)]),
                                              child_ : 
                                                Shape(
                                                  appearance_ : 
                                                    Appearance(
                                                      material_ : 
                                                        Material(
                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                      texture_ : 
                                                        ImageTexture(
                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                  geometry_ : 
                                                    IndexedFaceSet(
                                                      coordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(18), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(34), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(17), SFInt32(21), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(35), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(34), SFInt32(-1), SFInt32(22), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(38), SFInt32(14), SFInt32(-1), SFInt32(23), SFInt32(5), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(22), SFInt32(-1), SFInt32(8), SFInt32(22), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(24), SFInt32(8), SFInt32(-1), SFInt32(30), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(40), SFInt32(32), SFInt32(-1), SFInt32(40), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(49), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(47), SFInt32(49), SFInt32(44), SFInt32(-1), SFInt32(47), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(45), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(50), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(56), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(33), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(38), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(40), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(32), SFInt32(-1), SFInt32(40), SFInt32(36), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(39), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(39), SFInt32(34), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(49), SFInt32(39), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(28), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(27), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(29), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(33), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(59), SFInt32(26), SFInt32(-1)]),
                                                      creaseAngle_ : 3.14159,
                                                      texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(18), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(34), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(17), SFInt32(21), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(35), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(34), SFInt32(-1), SFInt32(22), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(38), SFInt32(14), SFInt32(-1), SFInt32(23), SFInt32(5), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(22), SFInt32(-1), SFInt32(8), SFInt32(22), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(24), SFInt32(8), SFInt32(-1), SFInt32(30), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(40), SFInt32(32), SFInt32(-1), SFInt32(40), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(49), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(47), SFInt32(49), SFInt32(44), SFInt32(-1), SFInt32(47), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(45), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(50), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(56), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(33), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(38), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(40), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(32), SFInt32(-1), SFInt32(40), SFInt32(36), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(39), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(39), SFInt32(34), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(49), SFInt32(39), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(28), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(27), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(29), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(33), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(59), SFInt32(26), SFInt32(-1)]),
                                                      coord_ : 
                                                        Coordinate(
                                                          point_ : MFVec3f([SFVec3f([-0.9985,-2.493,-0.8739]),SFVec3f([-0.3444,-2.493,-1.345]),SFVec3f([-0.3385,-2.074,-1.537]),SFVec3f([-1.107,-2.074,-1.019]),SFVec3f([0.8502,-2.493,-0.9093]),SFVec3f([1.215,-2.492,0.3484]),SFVec3f([1.284,-2.074,0.3263]),SFVec3f([0.9715,-2.074,-1.057]),SFVec3f([-1.246,-2.492,0.3485]),SFVec3f([-1.327,-2.074,0.3263]),SFVec3f([-0.3384,-1.169,-1.658]),SFVec3f([-1.174,-1.133,-1.133]),SFVec3f([1.418,-0.9912,0.3376]),SFVec3f([1.047,-1.181,-1.171]),SFVec3f([-1.416,-1.1,0.3376]),SFVec3f([-0.2948,-0.4644,-1.456]),SFVec3f([-1.098,-0.4755,-0.9255]),SFVec3f([1.039,-0.4898,-0.9709]),SFVec3f([0.2136,-2.493,-1.352]),SFVec3f([0.2242,-2.074,-1.543]),SFVec3f([0.2315,-1.181,-1.664]),SFVec3f([0.2693,-0.4684,-1.462]),SFVec3f([-0.3014,-2.492,0.3485]),SFVec3f([0.4242,-2.492,0.3485]),SFVec3f([-1.298,-2.423,1.123]),SFVec3f([-1.418,-2.067,1.103]),SFVec3f([-1.397,-1.134,1.091]),SFVec3f([1.106,-2.413,1.234]),SFVec3f([-0.4108,-2.448,1.222]),SFVec3f([0.327,-2.447,1.285]),SFVec3f([1.248,-2.001,1.208]),SFVec3f([1.376,-0.9503,1.205]),SFVec3f([1.037,0.3568,1.239]),SFVec3f([-0.8834,0.2818,1.266]),SFVec3f([-0.2501,0.1842,-1.201]),SFVec3f([-1.022,0.3141,-0.6813]),SFVec3f([1.031,0.3141,-0.7249]),SFVec3f([-1.164,0.0132,0.0265]),SFVec3f([-1.146,0.0057,0.5457]),SFVec3f([0.3051,0.1866,-1.206]),SFVec3f([1.343,0.0781,0.3033]),SFVec3f([-0.1992,0.7353,-0.8819]),SFVec3f([-0.8414,0.867,-0.4508]),SFVec3f([-0.9581,0.5635,0.1424]),SFVec3f([-0.9423,0.5539,0.597]),SFVec3f([-0.7475,0.8221,1.135]),SFVec3f([0.8525,0.8859,1.112]),SFVec3f([1.089,0.6115,0.3971]),SFVec3f([0.8201,0.8534,-0.4873]),SFVec3f([0.2191,0.7329,-0.8852]),SFVec3f([-1.268,-1.998,1.433]),SFVec3f([-1.191,-2.206,1.429]),SFVec3f([-0.4157,-2.224,1.523]),SFVec3f([0.3142,-2.223,1.586]),SFVec3f([0.982,-2.198,1.531]),SFVec3f([1.083,-1.928,1.525]),SFVec3f([1.205,-1.01,1.526]),SFVec3f([0.9056,0.0435,1.552]),SFVec3f([-0.7799,-0.0171,1.583]),SFVec3f([-1.248,-1.195,1.42])])),
                                                      texCoord_ : 
                                                        TextureCoordinate(
                                                          point_ : MFVec2f([SFVec2f([0.2845,0.0964]),SFVec2f([0.2768,0.1211]),SFVec2f([0.2792,0.1228]),SFVec2f([0.2886,0.0939]),SFVec2f([0.2493,0.1586]),SFVec2f([0.2252,0.161]),SFVec2f([0.2241,0.1634]),SFVec2f([0.2489,0.1638]),SFVec2f([0.2727,0.0786]),SFVec2f([0.2746,0.076]),SFVec2f([0.2809,0.1238]),SFVec2f([0.2914,0.0926]),SFVec2f([0.2206,0.1691]),SFVec2f([0.249,0.1672]),SFVec2f([0.2762,0.0729]),SFVec2f([0.2769,0.1234]),SFVec2f([0.2869,0.0933]),SFVec2f([0.2461,0.1652]),SFVec2f([0.2661,0.1399]),SFVec2f([0.2685,0.1417]),SFVec2f([0.27,0.1429]),SFVec2f([0.2661,0.1424]),SFVec2f([0.24,0.098]),SFVec2f([0.2266,0.1229]),SFVec2f([0.2628,0.0703]),SFVec2f([0.2665,0.0671]),SFVec2f([0.2664,0.0668]),SFVec2f([0.2178,0.1526]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2213,0.1179]),SFVec2f([0.2171,0.1588]),SFVec2f([0.2129,0.1643]),SFVec2f([0.2165,0.148]),SFVec2f([0.2533,0.0835]),SFVec2f([0.273,0.1232]),SFVec2f([0.2824,0.0941]),SFVec2f([0.2433,0.1632]),SFVec2f([0.2759,0.0832]),SFVec2f([0.2685,0.0797]),SFVec2f([0.2623,0.1418]),SFVec2f([0.2231,0.166]),SFVec2f([0.273,0.1232]),SFVec2f([0.2824,0.0941]),SFVec2f([0.2759,0.0832]),SFVec2f([0.2685,0.0797]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2165,0.148]),SFVec2f([0.2231,0.166]),SFVec2f([0.2433,0.1632]),SFVec2f([0.2623,0.1418]),SFVec2f([0.2665,0.0671]),SFVec2f([0.2628,0.0703]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2213,0.1179]),SFVec2f([0.2178,0.1526]),SFVec2f([0.2171,0.1588]),SFVec2f([0.2129,0.1643]),SFVec2f([0.2165,0.148]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2664,0.0668])])))))]),

                                        HAnimJoint(
                                          name_ : SFString('r_transversetarsal'),
                                          DEF_ : SFString('hanim_r_transversetarsal'),
                                          center_ : SFVec3f([SFDouble(-4.901), SFDouble(1.568), SFDouble(0.09285)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('r_cuboid'),
                                              DEF_ : SFString('hanim_r_cuboid'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(-4.901), SFDouble(1.568), SFDouble(0.09285)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(18), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(19), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(27), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(42), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(36), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(12), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(14), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(11), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(18), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(8), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(15), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(42), SFInt32(6), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(18), SFInt32(3), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(19), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(27), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(42), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(36), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(12), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(14), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(11), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(18), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(8), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(15), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(23), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(42), SFInt32(6), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([-0.3927,-1.345,0.6502]),SFVec3f([-0.5513,-1.052,0.467]),SFVec3f([-0.4205,-0.159,0.5973]),SFVec3f([0.212,-1.391,0.7994]),SFVec3f([0.0207,0.5191,0.7402]),SFVec3f([-0.62,-1.389,1.36]),SFVec3f([-0.7814,-1.064,1.28]),SFVec3f([-0.629,-0.2544,1.366]),SFVec3f([-0.0531,-1.438,1.517]),SFVec3f([-0.0856,0.2092,1.533]),SFVec3f([0.0741,1.291,0.0195]),SFVec3f([0.563,1.439,0.3053]),SFVec3f([0.5395,0.8768,0.8021]),SFVec3f([0.4707,0.5296,1.67]),SFVec3f([0.5704,-1.398,0.8063]),SFVec3f([0.544,-1.423,1.662]),SFVec3f([-0.3405,-1.414,-0.124]),SFVec3f([-0.4606,-1.058,-0.1434]),SFVec3f([-0.4397,-0.1251,-0.1558]),SFVec3f([0.5467,-1.439,-0.0243]),SFVec3f([0.9941,0.9843,0.4637]),SFVec3f([0.9743,0.7175,0.6996]),SFVec3f([0.9157,0.4028,1.487]),SFVec3f([0.9807,-1.215,1.481]),SFVec3f([0.9974,-1.195,0.8178]),SFVec3f([0.9758,-1.225,0.2106]),SFVec3f([0.3762,1.179,-0.4448]),SFVec3f([0.695,1.276,-0.2292]),SFVec3f([1.005,0.9499,-0.116]),SFVec3f([0.988,-1.072,-0.3476]),SFVec3f([0.6823,-1.225,-0.5215]),SFVec3f([-0.0476,-1.206,-0.5746]),SFVec3f([-0.1183,-0.9956,-0.5875]),SFVec3f([-0.0976,-0.1248,-0.6032]),SFVec3f([-0.555,-1.35,1.795]),SFVec3f([-0.0949,-1.389,1.923]),SFVec3f([0.4583,-1.376,2.08]),SFVec3f([0.7563,-1.099,1.955]),SFVec3f([0.702,0.2537,1.96]),SFVec3f([0.45,0.166,2.097]),SFVec3f([-0.0298,-0.1076,1.961]),SFVec3f([-0.5117,-0.5116,1.812]),SFVec3f([-0.6379,-1.177,1.735])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.2528,0.0622]),SFVec2f([0.2585,0.0581]),SFVec2f([0.2383,0.0796]),SFVec2f([0.2566,0.0607]),SFVec2f([0.243,0.0749]),SFVec2f([0.2469,0.052]),SFVec2f([0.2512,0.047]),SFVec2f([0.2484,0.051]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2628,0.0703]),SFVec2f([0.2665,0.0671]),SFVec2f([0.2664,0.0668]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2314,0.0879]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2271,0.0958]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2533,0.0835]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2407,0.0951]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2363,0.0929]),SFVec2f([0.2628,0.0703]),SFVec2f([0.2665,0.0671]),SFVec2f([0.2664,0.0668]),SFVec2f([0.2469,0.052]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2484,0.051]),SFVec2f([0.2512,0.047])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('r_tarsometatarsal_4'),
                                              DEF_ : SFString('hanim_r_tarsometatarsal_4'),
                                              center_ : SFVec3f([SFDouble(-4.717), SFDouble(1.091), SFDouble(1.708)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('r_metatarsal_4'),
                                                  DEF_ : SFString('hanim_r_metatarsal_4'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(-4.717), SFDouble(1.091), SFDouble(1.708)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(11), SFInt32(13), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(40), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(48), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(27), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(35), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(19), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(4), SFInt32(-1), SFInt32(40), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(16), SFInt32(-1), SFInt32(44), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(44), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(1), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(10), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(36), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(35), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(22), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(15), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(21), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(34), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(2), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(34), SFInt32(-1), SFInt32(33), SFInt32(12), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(43), SFInt32(33), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(30), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(13), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(8), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(29), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(26), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(9), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(51), SFInt32(25), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(13), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(50), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(18), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(30), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(29), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(37), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(21), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(7), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(16), SFInt32(-1), SFInt32(46), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(46), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(15), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(14), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(1), SFInt32(-1), SFInt32(50), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(13), SFInt32(5), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(13), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(38), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(38), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(37), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(24), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(10), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(23), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(36), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(4), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(35), SFInt32(3), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(45), SFInt32(35), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(32), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(13), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(32), SFInt32(-1), SFInt32(31), SFInt32(14), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(31), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(28), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(15), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(28), SFInt32(-1), SFInt32(27), SFInt32(17), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(53), SFInt32(27), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([-0.43,0.2032,1.608]),SFVec3f([-0.3411,0.4771,0.4203]),SFVec3f([-0.411,0.0139,2.079]),SFVec3f([-0.4023,0.3367,1.016]),SFVec3f([0.2305,0.2838,1.729]),SFVec3f([0.2723,0.7695,0.5671]),SFVec3f([0.1775,0.078,2.232]),SFVec3f([0.2625,0.5267,1.148]),SFVec3f([-0.2694,0.6861,-0.0829]),SFVec3f([0.2869,1.007,0.0543]),SFVec3f([-0.3368,-1.007,1.41]),SFVec3f([-0.2972,-0.9844,0.3484]),SFVec3f([-0.4433,-0.8849,2.036]),SFVec3f([-0.2369,-0.9615,-0.0987]),SFVec3f([0.2929,-1.007,1.64]),SFVec3f([0.1734,-0.9258,2.19]),SFVec3f([0.3108,-0.9625,0.4987]),SFVec3f([0.3602,-0.9465,0.0466]),SFVec3f([0.5224,0.6131,0.5138]),SFVec3f([0.5113,0.369,1.098]),SFVec3f([0.4835,0.1258,1.68]),SFVec3f([0.4517,-0.0328,2.07]),SFVec3f([0.4416,-0.7633,2.038]),SFVec3f([0.5332,-0.8205,1.648]),SFVec3f([0.5476,-0.7772,0.5234]),SFVec3f([0.5844,-0.7671,0.2439]),SFVec3f([0.5243,0.735,0.2495]),SFVec3f([-0.6251,0.1523,0.8741]),SFVec3f([-0.5638,0.2829,0.284]),SFVec3f([-0.5136,0.4134,-0.0498]),SFVec3f([-0.4878,-0.815,-0.0625]),SFVec3f([-0.5332,-0.8303,0.2548]),SFVec3f([-0.5714,-0.8502,1.274]),SFVec3f([-0.6659,-0.7584,1.777]),SFVec3f([-0.6293,-0.1071,1.81]),SFVec3f([-0.6528,0.0321,1.441]),SFVec3f([-0.4534,-0.7489,2.227]),SFVec3f([0.1154,-0.7865,2.387]),SFVec3f([0.2893,-0.6899,2.374]),SFVec3f([0.2972,-0.1417,2.398]),SFVec3f([0.1301,-0.0829,2.414]),SFVec3f([-0.4167,-0.1408,2.263]),SFVec3f([-0.5514,-0.2089,2.135]),SFVec3f([-0.5785,-0.6808,2.111]),SFVec3f([0.4067,-0.7963,-0.3118]),SFVec3f([-0.1321,-0.8098,-0.4434]),SFVec3f([-0.2751,-0.7197,-0.4419]),SFVec3f([-0.2976,0.3522,-0.4308]),SFVec3f([-0.1123,0.5657,-0.4267]),SFVec3f([0.366,0.8403,-0.3164]),SFVec3f([0.4968,0.6732,-0.1797]),SFVec3f([0.5511,-0.6808,-0.1849])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.2117,0.0481]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2142,0.0508]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2202,0.0585]),SFVec2f([0.2186,0.0548]),SFVec2f([0.1989,0.0701]),SFVec2f([0.1984,0.068]),SFVec2f([0.2138,0.0778]),SFVec2f([0.1952,0.0651]),SFVec2f([0.195,0.0629]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2129,0.0844]),SFVec2f([0.2197,0.0903]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2138,0.0778]),SFVec2f([0.2061,0.0729]),SFVec2f([0.1984,0.068]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.1984,0.068]),SFVec2f([0.2061,0.0729]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2186,0.0548]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2117,0.0481]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2117,0.0481]),SFVec2f([0.2083,0.0443]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.195,0.0629]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828]),SFVec2f([0.2226,0.0828])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('r_metatarsophalangeal_4'),
                                                  DEF_ : SFString('hanim_r_metatarsophalangeal_4'),
                                                  center_ : SFVec3f([SFDouble(-4.867), SFDouble(0.6379), SFDouble(4.052)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('r_tarsal_proximal_phalanx_4'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_phalanx_4'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(-4.867), SFDouble(0.6379), SFDouble(4.052)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(13), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(22), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(14), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(8), SFInt32(22), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(23), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(23), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(37), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(35), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(37), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(37), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(20), SFInt32(-1), SFInt32(17), SFInt32(22), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(17), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(23), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(19), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(20), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(43), SFInt32(16), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(27), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(27), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(35), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(8), SFInt32(31), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(32), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(34), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(15), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(18), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(36), SFInt32(39), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(37), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(45), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(51), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(49), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(51), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(51), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(43), SFInt32(31), SFInt32(-1), SFInt32(28), SFInt32(35), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(28), SFInt32(-1), SFInt32(34), SFInt32(37), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(34), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(37), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(39), SFInt32(-1), SFInt32(36), SFInt32(32), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(30), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(33), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(50), SFInt32(30), SFInt32(-1), SFInt32(7), SFInt32(29), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(7), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(29), SFInt32(-1), SFInt32(31), SFInt32(8), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(31), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(24), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(57), SFInt32(18), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([-0.3278,-0.057,0.1883]),SFVec3f([0.0525,-0.5059,0.7169]),SFVec3f([0.1097,-0.1019,0.7273]),SFVec3f([-0.3613,-0.5312,0.6151]),SFVec3f([-0.4078,-0.1019,0.5996]),SFVec3f([-0.3711,0.3174,0.6207]),SFVec3f([0.072,0.3613,0.7233]),SFVec3f([0.167,0.3917,0.3145]),SFVec3f([-0.2644,-0.4262,0.1511]),SFVec3f([-0.2709,0.3574,0.152]),SFVec3f([0.1661,-0.4211,0.2992]),SFVec3f([0.2641,0.3621,0.329]),SFVec3f([0.2567,0.0215,0.3948]),SFVec3f([0.1987,-0.0648,0.3873]),SFVec3f([0.2979,-0.4388,0.1141]),SFVec3f([0.3087,0.4248,0.0901]),SFVec3f([0.2687,-0.4025,0.3308]),SFVec3f([-0.2935,-0.4317,-0.3075]),SFVec3f([0.3232,-0.4726,-0.1534]),SFVec3f([-0.2611,0.4671,-0.2648]),SFVec3f([0.3273,0.5312,-0.1116]),SFVec3f([-0.3082,0.3589,-0.1241]),SFVec3f([-0.3082,-0.3803,-0.1229]),SFVec3f([-0.3514,0.3217,0.1064]),SFVec3f([-0.3527,-0.414,0.1117]),SFVec3f([-0.3662,-0.0844,0.1549]),SFVec3f([0.2703,-0.3363,-0.4209]),SFVec3f([-0.1122,-0.3109,-0.516]),SFVec3f([-0.0877,0.3691,-0.484]),SFVec3f([0.2733,0.4085,-0.3896]),SFVec3f([-0.5115,-0.288,-0.3108]),SFVec3f([-0.5065,-0.2701,-0.2438]),SFVec3f([-0.5667,-0.2929,-0.0861]),SFVec3f([-0.5748,-0.0815,-0.058]),SFVec3f([-0.5609,0.2313,-0.0969]),SFVec3f([-0.5027,0.2605,-0.2789]),SFVec3f([-0.4848,0.2657,-0.2832]),SFVec3f([0.5105,-0.3286,0.0612]),SFVec3f([0.5235,-0.3455,-0.0729]),SFVec3f([0.526,0.3481,-0.044]),SFVec3f([0.5229,0.3183,0.0128]),SFVec3f([0.4893,0.27,0.1966]),SFVec3f([0.4847,0.0183,0.2454]),SFVec3f([0.4943,-0.306,0.1964])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.2033,0.0375]),SFVec2f([0.1866,0.0487]),SFVec2f([0.186,0.0472]),SFVec2f([0.1969,0.0343]),SFVec2f([0.1963,0.0328]),SFVec2f([0.1973,0.0341]),SFVec2f([0.1873,0.048]),SFVec2f([0.1915,0.0602]),SFVec2f([0.1915,0.0578]),SFVec2f([0.1897,0.0535]),SFVec2f([0.1888,0.0569]),SFVec2f([0.2031,0.037]),SFVec2f([0.2012,0.0381]),SFVec2f([0.2444,0.0847]),SFVec2f([0.2208,0.06]),SFVec2f([0.2111,0.0557]),SFVec2f([0.2254,0.054]),SFVec2f([0.2483,0.0809]),SFVec2f([0.2464,0.0799]),SFVec2f([0.2587,0.0865]),SFVec2f([0.225,0.0604]),SFVec2f([0.2239,0.0673]),SFVec2f([0.2238,0.0671]),SFVec2f([0.267,0.0845]),SFVec2f([0.2486,0.0741]),SFVec2f([0.2486,0.074]),SFVec2f([0.2049,0.059]),SFVec2f([0.1896,0.055]),SFVec2f([0.2102,0.0461]),SFVec2f([0.1952,0.0651]),SFVec2f([0.2083,0.0443]),SFVec2f([0.195,0.0629]),SFVec2f([0.2109,0.0476]),SFVec2f([0.2048,0.0404]),SFVec2f([0.2576,0.0911]),SFVec2f([0.2063,0.0414]),SFVec2f([0.2083,0.0537]),SFVec2f([0.2612,0.0869]),SFVec2f([0.2671,0.0842]),SFVec2f([0.2047,0.0593]),SFVec2f([0.1952,0.0651]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.195,0.0629]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2063,0.0414]),SFVec2f([0.2612,0.0869]),SFVec2f([0.2671,0.0842]),SFVec2f([0.2083,0.0537]),SFVec2f([0.2109,0.0476]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2444,0.0847]),SFVec2f([0.1952,0.0651]),SFVec2f([0.195,0.0629]),SFVec2f([0.1915,0.0578]),SFVec2f([0.225,0.0604]),SFVec2f([0.2239,0.0673]),SFVec2f([0.2464,0.0799])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('r_tarsal_proximal_interphalangeal_4'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_interphalangeal_4'),
                                                      center_ : SFVec3f([SFDouble(-5.057), SFDouble(0.5442), SFDouble(4.725)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('r_tarsal_middle_phalanx_4'),
                                                          DEF_ : SFString('hanim_r_tarsal_middle_phalanx_4'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(-5.057), SFDouble(0.5442), SFDouble(4.725)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(2), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(2), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([0.2219,-0.455,0.3874]),SFVec3f([0.2704,-0.0797,0.4109]),SFVec3f([-0.2847,-0.455,0.2749]),SFVec3f([-0.3388,-0.0797,0.2793]),SFVec3f([-0.3015,0.1733,0.2582]),SFVec3f([0.2248,0.1994,0.3929]),SFVec3f([0.243,-0.4122,0.0438]),SFVec3f([0.3003,-0.0082,0.0541]),SFVec3f([-0.1707,-0.4375,-0.0581]),SFVec3f([-0.2172,-0.0082,-0.0735]),SFVec3f([-0.1805,0.4111,-0.0525]),SFVec3f([0.2626,0.455,0.0501]),SFVec3f([0.2483,-0.0038,-0.1702]),SFVec3f([0.2041,-0.3133,-0.1768]),SFVec3f([-0.0337,-0.3279,-0.2359]),SFVec3f([-0.0682,-0.0062,-0.2491]),SFVec3f([-0.0403,0.318,-0.2307]),SFVec3f([0.2198,0.3438,-0.1726]),SFVec3f([0.0622,-0.3044,0.5037]),SFVec3f([0.0897,-0.0812,0.5234]),SFVec3f([0.0698,0.0446,0.5123]),SFVec3f([-0.208,0.0308,0.465]),SFVec3f([-0.2246,-0.0777,0.4585]),SFVec3f([-0.1903,-0.3044,0.4486])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.1822,0.0458]),SFVec2f([0.1809,0.0434]),SFVec2f([0.1953,0.0282]),SFVec2f([0.1948,0.024]),SFVec2f([0.1933,0.0293]),SFVec2f([0.1816,0.0411]),SFVec2f([0.1287,0.0243]),SFVec2f([0.0943,0.0785]),SFVec2f([0.1866,0.0487]),SFVec2f([0.186,0.0472]),SFVec2f([0.1969,0.0343]),SFVec2f([0.1963,0.0328]),SFVec2f([0.1973,0.0341]),SFVec2f([0.1322,0.09]),SFVec2f([0.157,0.0552]),SFVec2f([0.1873,0.048]),SFVec2f([0.186,0.0472]),SFVec2f([0.1866,0.0487]),SFVec2f([0.1969,0.0343]),SFVec2f([0.1963,0.0328]),SFVec2f([0.1973,0.0341]),SFVec2f([0.157,0.0552]),SFVec2f([0.1822,0.0458]),SFVec2f([0.1809,0.0434]),SFVec2f([0.1816,0.0411]),SFVec2f([0.0943,0.0785]),SFVec2f([0.1948,0.024]),SFVec2f([0.1953,0.0282])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('r_tarsal_distal_interphalangeal_4'),
                                                          DEF_ : SFString('hanim_r_tarsal_distal_interphalangeal_4'),
                                                          center_ : SFVec3f([SFDouble(-5.125), SFDouble(0.4164), SFDouble(5.053)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('r_tarsal_distal_phalanx_4'),
                                                              DEF_ : SFString('hanim_r_tarsal_distal_phalanx_4'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(-5.125), SFDouble(0.4164), SFDouble(5.053)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(15), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([0.1526,-0.2418,0.2583]),SFVec3f([-0.1598,-0.2418,0.1838]),SFVec3f([-0.1914,0.016,0.2684]),SFVec3f([0.1691,0.016,0.3383]),SFVec3f([-0.1611,0.1898,0.2029]),SFVec3f([0.1447,0.2049,0.275]),SFVec3f([0.2895,-0.3272,0.0593]),SFVec3f([0.338,0.0481,0.0828]),SFVec3f([-0.2171,-0.3272,-0.0532]),SFVec3f([-0.2712,0.0481,-0.0488]),SFVec3f([-0.2339,0.301,-0.0699]),SFVec3f([0.2924,0.3272,0.0648]),SFVec3f([0.2684,0.045,-0.1247]),SFVec3f([0.2357,-0.2162,-0.1453]),SFVec3f([-0.0803,-0.2162,-0.2148]),SFVec3f([-0.1196,0.0476,-0.2063]),SFVec3f([-0.0957,0.1923,-0.2297]),SFVec3f([0.2421,0.2091,-0.1375])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.1831,0.0355]),SFVec2f([0.1904,0.0263]),SFVec2f([0.1901,0.0243]),SFVec2f([0.1819,0.0351]),SFVec2f([0.1913,0.0249]),SFVec2f([0.182,0.0368]),SFVec2f([0.088,0.0133]),SFVec2f([0.0677,0.0461]),SFVec2f([0.1822,0.0458]),SFVec2f([0.1809,0.0434]),SFVec2f([0.1953,0.0282]),SFVec2f([0.1948,0.024]),SFVec2f([0.1933,0.0293]),SFVec2f([0.0943,0.0785]),SFVec2f([0.1287,0.0243]),SFVec2f([0.1816,0.0411]),SFVec2f([0.1809,0.0434]),SFVec2f([0.1822,0.0458]),SFVec2f([0.1953,0.0282]),SFVec2f([0.1948,0.024]),SFVec2f([0.1933,0.0293]),SFVec2f([0.1287,0.0243])])))))])])])])]),

                                            HAnimJoint(
                                              name_ : SFString('r_tarsometatarsal_5'),
                                              DEF_ : SFString('hanim_r_tarsometatarsal_5'),
                                              center_ : SFVec3f([SFDouble(-5.353), SFDouble(0.9309), SFDouble(1.544)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('r_metatarsal_5'),
                                                  DEF_ : SFString('hanim_r_metatarsal_5'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(-5.353), SFDouble(0.9309), SFDouble(1.544)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(45), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(41), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(23), SFInt32(29), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(16), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(32), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(12), SFInt32(-1), SFInt32(44), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(31), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(25), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(31), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(14), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(15), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(30), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(8), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(45), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(41), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(28), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(23), SFInt32(29), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(16), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(32), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(12), SFInt32(-1), SFInt32(44), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(31), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(25), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(31), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(14), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(15), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(30), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(8), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([-0.3306,-0.8463,1.144]),SFVec3f([-0.5928,-0.4351,1.443]),SFVec3f([-0.453,0.1964,1.556]),SFVec3f([-0.3168,-0.7816,0.375]),SFVec3f([-0.4901,-0.4351,0.3998]),SFVec3f([-0.3189,0.3175,0.4396]),SFVec3f([-0.3613,-0.7553,2.007]),SFVec3f([-0.5238,-0.4351,1.966]),SFVec3f([-0.4304,0.0633,2.009]),SFVec3f([-0.3979,0.2569,1.048]),SFVec3f([-0.5415,-0.4351,0.9212]),SFVec3f([0.2997,-0.8463,1.575]),SFVec3f([0.2064,0.3634,1.773]),SFVec3f([0.2954,0.6373,0.5845]),SFVec3f([0.1931,-0.7247,2.2]),SFVec3f([0.2255,0.1741,2.243]),SFVec3f([0.3393,-0.8242,0.5125]),SFVec3f([0.2342,0.4968,1.18]),SFVec3f([-0.1673,-0.7522,-0.0918]),SFVec3f([-0.3287,-0.4266,-0.171]),SFVec3f([-0.1763,0.3828,-0.0859]),SFVec3f([0.3996,-0.8013,0.0654]),SFVec3f([0.3671,0.8463,0.0812]),SFVec3f([0.5368,-0.6501,1.58]),SFVec3f([0.5743,-0.6285,0.5402]),SFVec3f([0.6111,-0.6148,0.2736]),SFVec3f([0.5885,0.5776,0.2852]),SFVec3f([0.5498,0.4676,0.5498]),SFVec3f([0.4891,0.3238,1.161]),SFVec3f([0.4604,0.1935,1.738]),SFVec3f([0.4855,0.0596,2.072]),SFVec3f([0.4467,-0.5603,2.042]),SFVec3f([0.5171,-0.6818,-0.2412]),SFVec3f([0.0362,-0.6408,-0.3566]),SFVec3f([-0.0783,-0.4046,-0.4223]),SFVec3f([0.0584,0.3254,-0.3431]),SFVec3f([0.5171,0.7097,-0.2325]),SFVec3f([0.6459,0.5317,-0.0795]),SFVec3f([0.6663,-0.5485,-0.09]),SFVec3f([-0.3834,-0.4628,2.152]),SFVec3f([-0.275,-0.654,2.178]),SFVec3f([0.1853,-0.6314,2.365]),SFVec3f([0.3686,-0.526,2.255]),SFVec3f([0.3984,-0.1094,2.279]),SFVec3f([0.2347,-0.0432,2.397]),SFVec3f([-0.3129,-0.1268,2.183])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.2299,0.0317]),SFVec2f([0.2316,0.0247]),SFVec2f([0.2265,0.0269]),SFVec2f([0.241,0.0419]),SFVec2f([0.244,0.0359]),SFVec2f([0.2401,0.0413]),SFVec2f([0.2245,0.0286]),SFVec2f([0.226,0.0221]),SFVec2f([0.2232,0.0245]),SFVec2f([0.2333,0.0341]),SFVec2f([0.2378,0.0303]),SFVec2f([0.2142,0.0508]),SFVec2f([0.2117,0.0481]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2202,0.0585]),SFVec2f([0.2186,0.0548]),SFVec2f([0.2469,0.052]),SFVec2f([0.2512,0.047]),SFVec2f([0.2484,0.051]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2142,0.0508]),SFVec2f([0.2202,0.0585]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2254,0.0615]),SFVec2f([0.2186,0.0548]),SFVec2f([0.2117,0.0481]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2292,0.0691]),SFVec2f([0.2469,0.052]),SFVec2f([0.2512,0.047]),SFVec2f([0.2484,0.051]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2342,0.0682]),SFVec2f([0.2292,0.0691]),SFVec2f([0.226,0.0221]),SFVec2f([0.2245,0.0286]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2232,0.0245])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('r_metatarsophalangeal_5'),
                                                  DEF_ : SFString('hanim_r_metatarsophalangeal_5'),
                                                  center_ : SFVec3f([SFDouble(-5.497), SFDouble(0.6076), SFDouble(3.847)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('r_tarsal_proximal_phalanx_5'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_phalanx_5'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(-5.497), SFDouble(0.6076), SFDouble(3.847)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(2), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(15), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(15), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(18), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(25), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(30), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(30), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(29), SFInt32(13), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(6), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(5), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(14), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(8), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(28), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(40), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(39), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(35), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(45), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(45), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(45), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(27), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(25), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(26), SFInt32(-1), SFInt32(4), SFInt32(26), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(4), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(2), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(27), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(8), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(16), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(51), SFInt32(18), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([-0.2741,0.2687,-0.0725]),SFVec3f([-0.2213,-0.4838,0.1708]),SFVec3f([-0.2231,-0.4049,-0.097]),SFVec3f([-0.3378,-0.1118,-0.0803]),SFVec3f([0.1824,-0.3801,0.2853]),SFVec3f([0.3221,0.3892,0.0803]),SFVec3f([0.3221,-0.35,0.0816]),SFVec3f([0.2789,0.352,0.3109]),SFVec3f([0.2776,-0.3837,0.3162]),SFVec3f([0.2642,-0.0541,0.3594]),SFVec3f([-0.2176,-0.432,-0.2962]),SFVec3f([-0.3801,-0.1118,-0.3374]),SFVec3f([-0.2867,0.3866,-0.2941]),SFVec3f([0.3368,-0.4014,-0.103]),SFVec3f([0.3692,0.4974,-0.0603]),SFVec3f([0.1862,0.3618,0.2861]),SFVec3f([-0.2525,0.289,0.1702]),SFVec3f([-0.3123,-0.0885,0.1981]),SFVec3f([0.2184,-0.0456,0.3555]),SFVec3f([-0.2559,-0.4974,0.2967]),SFVec3f([-0.3388,-0.1325,0.3045]),SFVec3f([-0.2868,0.2213,0.2956]),SFVec3f([0.1724,0.2818,0.3981]),SFVec3f([0.201,-0.1,0.4458]),SFVec3f([0.1472,-0.4199,0.395]),SFVec3f([-0.0738,-0.2949,-0.4949]),SFVec3f([-0.1801,-0.0859,-0.5211]),SFVec3f([-0.1104,0.284,-0.4899]),SFVec3f([0.3045,0.3558,-0.3464]),SFVec3f([0.282,-0.2747,-0.3769]),SFVec3f([0.4986,-0.2481,0.0473]),SFVec3f([0.4945,-0.2765,-0.0632]),SFVec3f([0.5194,0.3282,-0.0342]),SFVec3f([0.4997,0.2837,0.029]),SFVec3f([0.469,0.2558,0.2138]),SFVec3f([0.4531,-0.0475,0.2504]),SFVec3f([0.4632,-0.2715,0.2213])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.2192,0.0256]),SFVec2f([0.2205,0.0195]),SFVec2f([0.2048,0.0404]),SFVec2f([0.2199,0.022]),SFVec2f([0.2063,0.0414]),SFVec2f([0.2047,0.0523]),SFVec2f([0.1956,0.0462]),SFVec2f([0.1979,0.0386]),SFVec2f([0.2109,0.0476]),SFVec2f([0.277,0.1031]),SFVec2f([0.2673,0.0987]),SFVec2f([0.263,0.1]),SFVec2f([0.2744,0.109]),SFVec2f([0.1892,0.0439]),SFVec2f([0.1911,0.0375]),SFVec2f([0.2576,0.0911]),SFVec2f([0.2083,0.0537]),SFVec2f([0.263,0.0893]),SFVec2f([0.2612,0.0869]),SFVec2f([0.2047,0.0593]),SFVec2f([0.2048,0.0593]),SFVec2f([0.2671,0.0842]),SFVec2f([0.2673,0.0839]),SFVec2f([0.2245,0.0286]),SFVec2f([0.226,0.0221]),SFVec2f([0.2232,0.0245]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2039,0.0358]),SFVec2f([0.2152,0.0224]),SFVec2f([0.2154,0.0203]),SFVec2f([0.2126,0.0258]),SFVec2f([0.2034,0.0366]),SFVec2f([0.2033,0.0375]),SFVec2f([0.2114,0.0219]),SFVec2f([0.2132,0.0168]),SFVec2f([0.2123,0.0196]),SFVec2f([0.1999,0.0356]),SFVec2f([0.201,0.0349]),SFVec2f([0.2011,0.0354]),SFVec2f([0.2245,0.0286]),SFVec2f([0.226,0.0221]),SFVec2f([0.2232,0.0245]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2576,0.0911]),SFVec2f([0.2102,0.0461]),SFVec2f([0.2083,0.0443]),SFVec2f([0.2048,0.0404]),SFVec2f([0.2083,0.0537]),SFVec2f([0.2047,0.0593]),SFVec2f([0.2612,0.0869])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('r_tarsal_proximal_interphalangeal_5'),
                                                      DEF_ : SFString('hanim_r_tarsal_proximal_interphalangeal_5'),
                                                      center_ : SFVec3f([SFDouble(-5.6), SFDouble(0.4825), SFDouble(4.184)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('r_tarsal_middle_phalanx_5'),
                                                          DEF_ : SFString('hanim_r_tarsal_middle_phalanx_5'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(-5.6), SFDouble(0.4825), SFDouble(4.184)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(6), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(2), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(6), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(2), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([-0.2408,-0.4069,0.2803]),SFVec3f([-0.3104,-0.1317,0.2682]),SFVec3f([-0.2708,0.1735,0.2787]),SFVec3f([0.2317,0.2031,0.3777]),SFVec3f([0.2679,-0.1354,0.3997]),SFVec3f([0.1895,-0.4021,0.3653]),SFVec3f([-0.1525,-0.3723,-0.0403]),SFVec3f([-0.2354,-0.0074,-0.0325]),SFVec3f([-0.1833,0.3464,-0.0414]),SFVec3f([0.2758,0.4069,0.0611]),SFVec3f([0.3045,0.025,0.1088]),SFVec3f([0.2506,-0.2948,0.058]),SFVec3f([-0.0394,-0.2528,-0.1664]),SFVec3f([-0.0981,-0.0034,-0.1527]),SFVec3f([-0.0588,0.2544,-0.1647]),SFVec3f([0.223,0.2914,-0.1062]),SFVec3f([0.2396,0.03,-0.0614]),SFVec3f([0.202,-0.2065,-0.1082]),SFVec3f([-0.193,-0.1236,0.4464]),SFVec3f([-0.1591,-0.2569,0.4517]),SFVec3f([0.0503,-0.2545,0.4894]),SFVec3f([0.0876,-0.122,0.5141]),SFVec3f([0.0715,0.0448,0.4955]),SFVec3f([-0.173,0.0304,0.4518])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.2109,0.0133]),SFVec2f([0.2102,0.0181]),SFVec2f([0.2093,0.0169]),SFVec2f([0.1959,0.0354]),SFVec2f([0.1986,0.0324]),SFVec2f([0.1989,0.0342]),SFVec2f([0.2114,0.0219]),SFVec2f([0.2132,0.0168]),SFVec2f([0.2123,0.0196]),SFVec2f([0.1999,0.0356]),SFVec2f([0.201,0.0349]),SFVec2f([0.2011,0.0354]),SFVec2f([0.2114,0.0219]),SFVec2f([0.2132,0.0168]),SFVec2f([0.2123,0.0196]),SFVec2f([0.1999,0.0356]),SFVec2f([0.201,0.0349]),SFVec2f([0.2011,0.0354]),SFVec2f([0.2109,0.0133]),SFVec2f([0.2102,0.0181]),SFVec2f([0.1989,0.0342]),SFVec2f([0.1986,0.0324]),SFVec2f([0.1959,0.0354]),SFVec2f([0.2093,0.0169])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('r_tarsal_distal_interphalangeal_5'),
                                                          DEF_ : SFString('hanim_r_tarsal_distal_interphalangeal_5'),
                                                          center_ : SFVec3f([SFDouble(-5.641), SFDouble(0.3806), SFDouble(4.528)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('r_tarsal_distal_phalanx_5'),
                                                              DEF_ : SFString('hanim_r_tarsal_distal_phalanx_5'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(-5.641), SFDouble(0.3806), SFDouble(4.528)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(2), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(11), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(4), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(15), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([-0.1245,-0.2998,0.2013]),SFVec3f([-0.2172,-0.0402,0.2894]),SFVec3f([-0.168,0.1871,0.2347]),SFVec3f([0.1198,0.2033,0.2971]),SFVec3f([0.1153,-0.0329,0.3526]),SFVec3f([0.1253,-0.2998,0.2469]),SFVec3f([-0.2006,-0.305,-0.0635]),SFVec3f([-0.2702,-0.0298,-0.0756]),SFVec3f([-0.2307,0.2754,-0.0651]),SFVec3f([0.2719,0.305,0.0339]),SFVec3f([0.3081,-0.0335,0.0559]),SFVec3f([0.2297,-0.3002,0.0215]),SFVec3f([-0.0767,-0.1908,-0.2275]),SFVec3f([-0.1195,-0.022,-0.2346]),SFVec3f([-0.0946,0.1698,-0.2279]),SFVec3f([0.2144,0.188,-0.1703]),SFVec3f([0.2355,-0.0217,-0.1508]),SFVec3f([0.1879,-0.1878,-0.178])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.2048,0.0135]),SFVec2f([0.2053,0.0142]),SFVec2f([0.1964,0.026]),SFVec2f([0.1976,0.0232]),SFVec2f([0.1977,0.0271]),SFVec2f([0.2052,0.017]),SFVec2f([0.0639,0.0523]),SFVec2f([0.0903,0.0107]),SFVec2f([0.2102,0.0181]),SFVec2f([0.2109,0.0133]),SFVec2f([0.2093,0.0169]),SFVec2f([0.1317,0.0215]),SFVec2f([0.0951,0.0836]),SFVec2f([0.1959,0.0354]),SFVec2f([0.1986,0.0324]),SFVec2f([0.1989,0.0342]),SFVec2f([0.2102,0.0181]),SFVec2f([0.2109,0.0133]),SFVec2f([0.2093,0.0169]),SFVec2f([0.0951,0.0836]),SFVec2f([0.1986,0.0324]),SFVec2f([0.1989,0.0342])])))))])])])])])])])])])]),

                        HAnimJoint(
                          name_ : SFString('vl5'),
                          DEF_ : SFString('hanim_vl5'),
                          center_ : SFVec3f([SFDouble(0), SFDouble(41.130001), SFDouble(-0.6117)]),
                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                          children_ : [
                            HAnimSegment(
                              name_ : SFString('l5'),
                              DEF_ : SFString('hanim_l5'),
                              children_ : [
                                Transform(
                                  translation_ : SFVec3f([SFDouble(0), SFDouble(41.130001), SFDouble(-0.6117)]),
                                  child_ : 
                                    Shape(
                                      appearance_ : 
                                        Appearance(
                                          material_ : 
                                            Material(
                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                          texture_ : 
                                            ImageTexture(
                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                      geometry_ : 
                                        IndexedFaceSet(
                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(33), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(29), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(29), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(2), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(13), SFInt32(-1)]),
                                          creaseAngle_ : 3.14159,
                                          texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(25), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(29), SFInt32(-1), SFInt32(19), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(22), SFInt32(19), SFInt32(-1), SFInt32(26), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(19), SFInt32(26), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(46), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(43), SFInt32(46), SFInt32(50), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(50), SFInt32(-1), SFInt32(39), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(39), SFInt32(51), SFInt32(38), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(3), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(12), SFInt32(-1), SFInt32(34), SFInt32(31), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(34), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(24), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(30), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(24), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(36), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(0), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(51), SFInt32(17), SFInt32(-1)]),
                                          coord_ : 
                                            Coordinate(
                                              point_ : MFVec3f([SFVec3f([4.178,1.114,3.711]),SFVec3f([5.76,1.15,1.754]),SFVec3f([1.52,0.9575,-3.918]),SFVec3f([3.95,0.9672,-2.776]),SFVec3f([5.309,1.072,-0.9797]),SFVec3f([3.789,0.0396,2.969]),SFVec3f([5.166,0.0713,1.445]),SFVec3f([1.593,-0.0798,-2.916]),SFVec3f([3.6,-0.0573,-2.087]),SFVec3f([4.841,-0.0103,-0.6841]),SFVec3f([1.635,1.083,4.322]),SFVec3f([1.595,0.0009,3.405]),SFVec3f([0,0.0009,3.405]),SFVec3f([0,1.083,4.322]),SFVec3f([-1.595,0.0009,3.405]),SFVec3f([-3.789,0.0396,2.969]),SFVec3f([-4.178,1.114,3.711]),SFVec3f([-1.635,1.083,4.322]),SFVec3f([-5.166,0.0713,1.445]),SFVec3f([-5.76,1.15,1.754]),SFVec3f([-3.6,-0.0573,-2.087]),SFVec3f([-1.593,-0.0798,-2.916]),SFVec3f([-1.52,0.9575,-3.918]),SFVec3f([-3.95,0.9672,-2.776]),SFVec3f([-4.841,-0.0103,-0.6841]),SFVec3f([-5.309,1.072,-0.9797]),SFVec3f([0,-0.0798,-2.916]),SFVec3f([0,0.9575,-3.918]),SFVec3f([1.609,1.473,4.099]),SFVec3f([4.053,1.473,3.512]),SFVec3f([5.524,1.473,1.692]),SFVec3f([5.098,1.473,-0.8893]),SFVec3f([3.806,1.473,-2.528]),SFVec3f([1.47,1.473,-3.626]),SFVec3f([0,1.473,-3.626]),SFVec3f([-1.47,1.473,-3.626]),SFVec3f([-3.806,1.473,-2.528]),SFVec3f([-5.098,1.473,-0.8893]),SFVec3f([-5.524,1.473,1.692]),SFVec3f([-4.053,1.473,3.512]),SFVec3f([-1.609,1.473,4.099]),SFVec3f([0,1.473,4.099])])),
                                          texCoord_ : 
                                            TextureCoordinate(
                                              point_ : MFVec2f([SFVec2f([0.019,0.2349]),SFVec2f([0.1011,0.241]),SFVec2f([0.1445,0.2419]),SFVec2f([0.2369,0.2375]),SFVec2f([0.3561,0.2404]),SFVec2f([0.1927,0.24]),SFVec2f([0.0206,0.2122]),SFVec2f([0.1067,0.2154]),SFVec2f([0.1463,0.2162]),SFVec2f([0.227,0.2131]),SFVec2f([0.3536,0.2151]),SFVec2f([0.1879,0.2143]),SFVec2f([0.3553,0.2398]),SFVec2f([0.3555,0.2151]),SFVec2f([0.3557,0.2401]),SFVec2f([0.3545,0.2151]),SFVec2f([0.3536,0.2151]),SFVec2f([0.019,0.2349]),SFVec2f([0.0206,0.2122]),SFVec2f([0.0206,0.2122]),SFVec2f([0.1067,0.2154]),SFVec2f([0.1011,0.241]),SFVec2f([0.019,0.2349]),SFVec2f([0.1463,0.2162]),SFVec2f([0.1445,0.2419]),SFVec2f([0.227,0.2131]),SFVec2f([0.3536,0.2151]),SFVec2f([0.3561,0.2404]),SFVec2f([0.2369,0.2375]),SFVec2f([0.1879,0.2143]),SFVec2f([0.1927,0.24]),SFVec2f([0.3553,0.2398]),SFVec2f([0.3555,0.2151]),SFVec2f([0.3545,0.2151]),SFVec2f([0.3557,0.2401]),SFVec2f([0.0206,0.2122]),SFVec2f([0.019,0.2349]),SFVec2f([0.3536,0.2151]),SFVec2f([0.019,0.2349]),SFVec2f([0.1011,0.241]),SFVec2f([0.1445,0.2419]),SFVec2f([0.1927,0.24]),SFVec2f([0.2369,0.2375]),SFVec2f([0.3561,0.2404]),SFVec2f([0.3557,0.2401]),SFVec2f([0.3553,0.2398]),SFVec2f([0.2369,0.2375]),SFVec2f([0.1927,0.24]),SFVec2f([0.1445,0.2419]),SFVec2f([0.1011,0.241]),SFVec2f([0.019,0.2349]),SFVec2f([0.019,0.2349])])))))]),

                            HAnimJoint(
                              name_ : SFString('vl4'),
                              DEF_ : SFString('hanim_vl4'),
                              center_ : SFVec3f([SFDouble(0), SFDouble(42.209999), SFDouble(-0.6117)]),
                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                              children_ : [
                                HAnimSegment(
                                  name_ : SFString('l4'),
                                  DEF_ : SFString('hanim_l4'),
                                  children_ : [
                                    Transform(
                                      translation_ : SFVec3f([SFDouble(0), SFDouble(42.209999), SFDouble(-0.6117)]),
                                      child_ : 
                                        Shape(
                                          appearance_ : 
                                            Appearance(
                                              material_ : 
                                                Material(
                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                              texture_ : 
                                                ImageTexture(
                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                          geometry_ : 
                                            IndexedFaceSet(
                                              coordIndex_ : MFInt32([SFInt32(11), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(25), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(27), SFInt32(2), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(25), SFInt32(-1), SFInt32(21), SFInt32(27), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(33), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(29), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(29), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(48), SFInt32(51), SFInt32(55), SFInt32(-1), SFInt32(44), SFInt32(48), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(2), SFInt32(-1), SFInt32(27), SFInt32(21), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(24), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(18), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(26), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(16), SFInt32(-1), SFInt32(26), SFInt32(3), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(26), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(25), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(11), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(25), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(14), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(7), SFInt32(-1)]),
                                              creaseAngle_ : 3.14159,
                                              texCoordIndex_ : MFInt32([SFInt32(15), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(17), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(41), SFInt32(44), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(41), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(52), SFInt32(54), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(56), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(59), SFInt32(61), SFInt32(63), SFInt32(-1), SFInt32(56), SFInt32(59), SFInt32(63), SFInt32(-1), SFInt32(52), SFInt32(56), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(3), SFInt32(-1), SFInt32(35), SFInt32(32), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(35), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(29), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(27), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(29), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(21), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(9), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(15), SFInt32(-1), SFInt32(30), SFInt32(18), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(30), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(22), SFInt32(-1), SFInt32(28), SFInt32(24), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(28), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(24), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(33), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(14), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(10), SFInt32(-1)]),
                                              coord_ : 
                                                Coordinate(
                                                  point_ : MFVec3f([SFVec3f([4.026,0.7465,3.365]),SFVec3f([5.556,0.7644,1.615]),SFVec3f([1.443,0.6683,-3.473]),SFVec3f([1.519,0.7312,3.919]),SFVec3f([3.83,0.6731,-2.414]),SFVec3f([5.148,0.7257,-0.8425]),SFVec3f([4.178,0.0328,3.711]),SFVec3f([5.76,0.0687,1.754]),SFVec3f([1.52,-0.1236,-3.918]),SFVec3f([3.95,-0.1138,-2.776]),SFVec3f([5.309,-0.0087,-0.9797]),SFVec3f([1.635,0.0023,4.322]),SFVec3f([0,-0.1236,-3.918]),SFVec3f([-1.635,0.0023,4.322]),SFVec3f([-4.178,0.0328,3.711]),SFVec3f([-4.026,0.7465,3.365]),SFVec3f([-1.519,0.7312,3.919]),SFVec3f([-5.76,0.0687,1.754]),SFVec3f([-5.556,0.7644,1.615]),SFVec3f([-3.95,-0.1138,-2.776]),SFVec3f([-1.52,-0.1236,-3.918]),SFVec3f([-1.443,0.6683,-3.473]),SFVec3f([-3.83,0.6731,-2.414]),SFVec3f([-5.309,-0.0087,-0.9797]),SFVec3f([-5.148,0.7257,-0.8425]),SFVec3f([0,0.0023,4.322]),SFVec3f([0,0.7312,3.919]),SFVec3f([0,0.6683,-3.473]),SFVec3f([1.493,1.061,3.676]),SFVec3f([3.895,1.061,3.145]),SFVec3f([5.297,1.061,1.541]),SFVec3f([4.918,1.061,-0.7369]),SFVec3f([3.68,1.061,-2.214]),SFVec3f([1.392,1.061,-3.23]),SFVec3f([0,1.061,-3.23]),SFVec3f([-1.392,1.061,-3.23]),SFVec3f([-3.68,1.061,-2.214]),SFVec3f([-4.918,1.061,-0.7369]),SFVec3f([-5.297,1.061,1.541]),SFVec3f([-3.895,1.061,3.145]),SFVec3f([-1.493,1.061,3.676]),SFVec3f([0,1.061,3.676]),SFVec3f([3.857,-0.461,3.349]),SFVec3f([1.533,-0.461,3.907]),SFVec3f([0,-0.461,3.907]),SFVec3f([-1.533,-0.461,3.907]),SFVec3f([-3.857,-0.461,3.349]),SFVec3f([-5.251,-0.461,1.624]),SFVec3f([-4.847,-0.461,-0.8254]),SFVec3f([-3.619,-0.461,-2.448]),SFVec3f([-1.398,-0.461,-3.492]),SFVec3f([0,-0.461,-3.492]),SFVec3f([1.398,-0.461,-3.492]),SFVec3f([3.619,-0.461,-2.448]),SFVec3f([4.847,-0.461,-0.8254]),SFVec3f([5.251,-0.461,1.624])])),
                                              texCoord_ : 
                                                TextureCoordinate(
                                                  point_ : MFVec2f([SFVec2f([0.1026,0.2616]),SFVec2f([0.1481,0.2604]),SFVec2f([0.3503,0.2575]),SFVec2f([0.3578,0.2568]),SFVec2f([0.0179,0.2574]),SFVec2f([0.2289,0.2559]),SFVec2f([0.1884,0.2584]),SFVec2f([0.0186,0.2582]),SFVec2f([0.3542,0.2515]),SFVec2f([0.1011,0.241]),SFVec2f([0.1445,0.2419]),SFVec2f([0.3553,0.2398]),SFVec2f([0.3561,0.2404]),SFVec2f([0.2369,0.2375]),SFVec2f([0.1927,0.24]),SFVec2f([0.019,0.2349]),SFVec2f([0.3557,0.2401]),SFVec2f([0.019,0.2349]),SFVec2f([0.019,0.2349]),SFVec2f([0.1011,0.241]),SFVec2f([0.1026,0.2616]),SFVec2f([0.0179,0.2574]),SFVec2f([0.1445,0.2419]),SFVec2f([0.1481,0.2604]),SFVec2f([0.2369,0.2375]),SFVec2f([0.3561,0.2404]),SFVec2f([0.3503,0.2575]),SFVec2f([0.2289,0.2559]),SFVec2f([0.1927,0.24]),SFVec2f([0.1884,0.2584]),SFVec2f([0.019,0.2349]),SFVec2f([0.0186,0.2582]),SFVec2f([0.3578,0.2568]),SFVec2f([0.3553,0.2398]),SFVec2f([0.3557,0.2401]),SFVec2f([0.3542,0.2515]),SFVec2f([0.0179,0.2574]),SFVec2f([0.1026,0.2616]),SFVec2f([0.1481,0.2604]),SFVec2f([0.1884,0.2584]),SFVec2f([0.2289,0.2559]),SFVec2f([0.3503,0.2575]),SFVec2f([0.3542,0.2515]),SFVec2f([0.3578,0.2568]),SFVec2f([0.2289,0.2559]),SFVec2f([0.1884,0.2584]),SFVec2f([0.1481,0.2604]),SFVec2f([0.1026,0.2616]),SFVec2f([0.0179,0.2574]),SFVec2f([0.0186,0.2582]),SFVec2f([0.1011,0.241]),SFVec2f([0.019,0.2349]),SFVec2f([0.019,0.2349]),SFVec2f([0.019,0.2349]),SFVec2f([0.1011,0.241]),SFVec2f([0.1445,0.2419]),SFVec2f([0.1927,0.24]),SFVec2f([0.2369,0.2375]),SFVec2f([0.3561,0.2404]),SFVec2f([0.3557,0.2401]),SFVec2f([0.3553,0.2398]),SFVec2f([0.2369,0.2375]),SFVec2f([0.1927,0.24]),SFVec2f([0.1445,0.2419])])))))]),

                                HAnimJoint(
                                  name_ : SFString('vl3'),
                                  DEF_ : SFString('hanim_vl3'),
                                  center_ : SFVec3f([SFDouble(0), SFDouble(42.93), SFDouble(-0.6117)]),
                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                  children_ : [
                                    HAnimSegment(
                                      name_ : SFString('l3'),
                                      DEF_ : SFString('hanim_l3'),
                                      children_ : [
                                        Transform(
                                          translation_ : SFVec3f([SFDouble(0), SFDouble(42.93), SFDouble(-0.6117)]),
                                          child_ : 
                                            Shape(
                                              appearance_ : 
                                                Appearance(
                                                  material_ : 
                                                    Material(
                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                  texture_ : 
                                                    ImageTexture(
                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                              geometry_ : 
                                                IndexedFaceSet(
                                                  coordIndex_ : MFInt32([SFInt32(1), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(27), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(21), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(13), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(27), SFInt32(19), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(33), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(29), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(29), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(48), SFInt32(51), SFInt32(55), SFInt32(-1), SFInt32(44), SFInt32(48), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(16), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(1), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(23), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(13), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(27), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(19), SFInt32(-1), SFInt32(27), SFInt32(4), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(27), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(12), SFInt32(-1), SFInt32(20), SFInt32(17), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(20), SFInt32(-1), SFInt32(17), SFInt32(21), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(21), SFInt32(-1), SFInt32(26), SFInt32(24), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(26), SFInt32(-1), SFInt32(24), SFInt32(14), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(24), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(7), SFInt32(-1)]),
                                                  creaseAngle_ : 3.14159,
                                                  texCoordIndex_ : MFInt32([SFInt32(4), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(5), SFInt32(-1), SFInt32(15), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(41), SFInt32(44), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(41), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(52), SFInt32(54), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(56), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(59), SFInt32(61), SFInt32(63), SFInt32(-1), SFInt32(56), SFInt32(59), SFInt32(63), SFInt32(-1), SFInt32(52), SFInt32(56), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(21), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(27), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(23), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(27), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(34), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(24), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(9), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(13), SFInt32(-1), SFInt32(35), SFInt32(25), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(35), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(26), SFInt32(-1), SFInt32(33), SFInt32(31), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(31), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(19), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(15), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(10), SFInt32(-1)]),
                                                  coord_ : 
                                                    Coordinate(
                                                      point_ : MFVec3f([SFVec3f([3.874,0.7332,3.02]),SFVec3f([1.367,0.7332,-3.028]),SFVec3f([3.71,0.7332,-2.051]),SFVec3f([4.987,0.7332,-0.7054]),SFVec3f([1.404,0.7332,3.517]),SFVec3f([5.353,0.7332,1.475]),SFVec3f([4.026,0.0196,3.365]),SFVec3f([5.556,0.0375,1.615]),SFVec3f([1.443,-0.0586,-3.473]),SFVec3f([1.519,0.0043,3.919]),SFVec3f([3.83,-0.0538,-2.414]),SFVec3f([5.148,-0.0012,-0.8425]),SFVec3f([0,0.0043,3.919]),SFVec3f([-1.367,0.7332,-3.028]),SFVec3f([-1.443,-0.0586,-3.473]),SFVec3f([0,-0.0586,-3.473]),SFVec3f([0,0.7332,-3.028]),SFVec3f([-4.026,0.0196,3.365]),SFVec3f([-3.874,0.7332,3.02]),SFVec3f([-1.404,0.7332,3.517]),SFVec3f([-1.519,0.0043,3.919]),SFVec3f([-5.556,0.0375,1.615]),SFVec3f([-5.353,0.7332,1.475]),SFVec3f([-3.71,0.7332,-2.051]),SFVec3f([-3.83,-0.0538,-2.414]),SFVec3f([-4.987,0.7332,-0.7054]),SFVec3f([-5.148,-0.0012,-0.8425]),SFVec3f([0,0.7332,3.517]),SFVec3f([1.366,1.112,3.286]),SFVec3f([3.726,1.112,2.811]),SFVec3f([5.078,1.112,1.398]),SFVec3f([4.742,1.112,-0.6029]),SFVec3f([3.55,1.112,-1.86]),SFVec3f([1.311,1.112,-2.794]),SFVec3f([0,1.112,-2.794]),SFVec3f([-1.311,1.112,-2.794]),SFVec3f([-3.55,1.112,-1.86]),SFVec3f([-4.742,1.112,-0.6029]),SFVec3f([-5.078,1.112,1.398]),SFVec3f([-3.726,1.112,2.811]),SFVec3f([-1.366,1.112,3.286]),SFVec3f([0,1.112,3.286]),SFVec3f([3.87,-0.3411,3.153]),SFVec3f([1.478,-0.3411,3.682]),SFVec3f([0,-0.3411,3.682]),SFVec3f([-1.478,-0.3411,3.682]),SFVec3f([-3.87,-0.3411,3.153]),SFVec3f([-5.28,-0.3411,1.54]),SFVec3f([-4.9,-0.3411,-0.7446]),SFVec3f([-3.661,-0.3411,-2.221]),SFVec3f([-1.384,-0.3411,-3.233]),SFVec3f([0,-0.3411,-3.233]),SFVec3f([1.384,-0.3411,-3.233]),SFVec3f([3.661,-0.3411,-2.221]),SFVec3f([4.9,-0.3411,-0.7446]),SFVec3f([5.28,-0.3411,1.54])])),
                                                  texCoord_ : 
                                                    TextureCoordinate(
                                                      point_ : MFVec2f([SFVec2f([0.1041,0.2822]),SFVec2f([0.0168,0.2798]),SFVec2f([0.1518,0.2789]),SFVec2f([0.3444,0.2746]),SFVec2f([0.3604,0.2737]),SFVec2f([0.221,0.2742]),SFVec2f([0.1842,0.2768]),SFVec2f([0.3527,0.263]),SFVec2f([0.0181,0.2816]),SFVec2f([0.1026,0.2616]),SFVec2f([0.1481,0.2604]),SFVec2f([0.3578,0.2568]),SFVec2f([0.3503,0.2575]),SFVec2f([0.0179,0.2574]),SFVec2f([0.2289,0.2559]),SFVec2f([0.1884,0.2584]),SFVec2f([0.0186,0.2582]),SFVec2f([0.3542,0.2515]),SFVec2f([0.3604,0.2737]),SFVec2f([0.3578,0.2568]),SFVec2f([0.3542,0.2515]),SFVec2f([0.3527,0.263]),SFVec2f([0.1026,0.2616]),SFVec2f([0.1041,0.2822]),SFVec2f([0.0168,0.2798]),SFVec2f([0.0179,0.2574]),SFVec2f([0.1481,0.2604]),SFVec2f([0.1518,0.2789]),SFVec2f([0.3503,0.2575]),SFVec2f([0.3444,0.2746]),SFVec2f([0.221,0.2742]),SFVec2f([0.2289,0.2559]),SFVec2f([0.1842,0.2768]),SFVec2f([0.1884,0.2584]),SFVec2f([0.0181,0.2816]),SFVec2f([0.0186,0.2582]),SFVec2f([0.0168,0.2798]),SFVec2f([0.1041,0.2822]),SFVec2f([0.1518,0.2789]),SFVec2f([0.1842,0.2768]),SFVec2f([0.221,0.2742]),SFVec2f([0.3444,0.2746]),SFVec2f([0.3527,0.263]),SFVec2f([0.3604,0.2737]),SFVec2f([0.221,0.2742]),SFVec2f([0.1842,0.2768]),SFVec2f([0.1518,0.2789]),SFVec2f([0.1041,0.2822]),SFVec2f([0.0168,0.2798]),SFVec2f([0.0181,0.2816]),SFVec2f([0.1026,0.2616]),SFVec2f([0.0179,0.2574]),SFVec2f([0.0186,0.2582]),SFVec2f([0.0179,0.2574]),SFVec2f([0.1026,0.2616]),SFVec2f([0.1481,0.2604]),SFVec2f([0.1884,0.2584]),SFVec2f([0.2289,0.2559]),SFVec2f([0.3503,0.2575]),SFVec2f([0.3542,0.2515]),SFVec2f([0.3578,0.2568]),SFVec2f([0.2289,0.2559]),SFVec2f([0.1884,0.2584]),SFVec2f([0.1481,0.2604])])))))]),

                                    HAnimJoint(
                                      name_ : SFString('vl2'),
                                      DEF_ : SFString('hanim_vl2'),
                                      center_ : SFVec3f([SFDouble(0), SFDouble(43.66), SFDouble(-0.6117)]),
                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                      children_ : [
                                        HAnimSegment(
                                          name_ : SFString('l2'),
                                          DEF_ : SFString('hanim_l2'),
                                          children_ : [
                                            Transform(
                                              translation_ : SFVec3f([SFDouble(0), SFDouble(43.66), SFDouble(-0.6117)]),
                                              child_ : 
                                                Shape(
                                                  appearance_ : 
                                                    Appearance(
                                                      material_ : 
                                                        Material(
                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                      texture_ : 
                                                        ImageTexture(
                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                  geometry_ : 
                                                    IndexedFaceSet(
                                                      coordIndex_ : MFInt32([SFInt32(3), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(12), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(31), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(48), SFInt32(51), SFInt32(55), SFInt32(-1), SFInt32(44), SFInt32(48), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(15), SFInt32(-1), SFInt32(12), SFInt32(22), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(12), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(24), SFInt32(-1), SFInt32(21), SFInt32(17), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(21), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(18), SFInt32(-1), SFInt32(26), SFInt32(5), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(26), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(27), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(27), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(23), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(14), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(11), SFInt32(-1)]),
                                                      creaseAngle_ : 3.14159,
                                                      texCoordIndex_ : MFInt32([SFInt32(6), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(43), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(39), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(52), SFInt32(54), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(56), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(59), SFInt32(61), SFInt32(63), SFInt32(-1), SFInt32(56), SFInt32(59), SFInt32(63), SFInt32(-1), SFInt32(52), SFInt32(56), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(6), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(21), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(27), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(23), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(27), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(34), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(24), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(14), SFInt32(-1), SFInt32(35), SFInt32(25), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(35), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(26), SFInt32(-1), SFInt32(33), SFInt32(31), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(31), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(16), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(15), SFInt32(-1)]),
                                                      coord_ : 
                                                        Coordinate(
                                                          point_ : MFVec3f([SFVec3f([3.71,0.777,2.648]),SFVec3f([4.818,0.777,-0.5615]),SFVec3f([5.128,0.777,1.321]),SFVec3f([1.293,0.777,-2.595]),SFVec3f([3.593,0.777,-1.696]),SFVec3f([1.281,0.777,3.092]),SFVec3f([3.874,0.0063,3.02]),SFVec3f([1.367,0.0063,-3.028]),SFVec3f([3.71,0.0063,-2.051]),SFVec3f([4.987,0.0063,-0.7054]),SFVec3f([1.404,0.0063,3.517]),SFVec3f([5.353,0.0063,1.475]),SFVec3f([-1.293,0.777,-2.595]),SFVec3f([-1.367,0.0063,-3.028]),SFVec3f([0,0.0063,-3.028]),SFVec3f([0,0.777,-2.595]),SFVec3f([-3.874,0.0063,3.02]),SFVec3f([-3.71,0.777,2.648]),SFVec3f([-1.281,0.777,3.092]),SFVec3f([-1.404,0.0063,3.517]),SFVec3f([-5.353,0.0063,1.475]),SFVec3f([-5.128,0.777,1.321]),SFVec3f([-3.593,0.777,-1.696]),SFVec3f([-3.71,0.0063,-2.051]),SFVec3f([-4.818,0.777,-0.5615]),SFVec3f([-4.987,0.0063,-0.7054]),SFVec3f([0,0.777,3.092]),SFVec3f([0,0.0063,3.517]),SFVec3f([1.261,1.231,2.872]),SFVec3f([3.606,1.231,2.442]),SFVec3f([4.891,1.231,1.241]),SFVec3f([4.612,1.231,-0.451]),SFVec3f([3.473,1.231,-1.506]),SFVec3f([1.251,1.231,-2.375]),SFVec3f([0,1.231,-2.375]),SFVec3f([-1.251,1.231,-2.375]),SFVec3f([-3.473,1.231,-1.506]),SFVec3f([-4.612,1.231,-0.451]),SFVec3f([-4.891,1.231,1.241]),SFVec3f([-3.606,1.231,2.442]),SFVec3f([-1.261,1.231,2.872]),SFVec3f([0,1.231,2.872]),SFVec3f([3.853,-0.3735,2.877]),SFVec3f([1.415,-0.3735,3.367]),SFVec3f([0,-0.3735,3.367]),SFVec3f([-1.415,-0.3735,3.367]),SFVec3f([-3.853,-0.3735,2.877]),SFVec3f([-5.24,-0.3735,1.428]),SFVec3f([-4.895,-0.3735,-0.6254]),SFVec3f([-3.668,-0.3735,-1.919]),SFVec3f([-1.354,-0.3735,-2.884]),SFVec3f([0,-0.3735,-2.884]),SFVec3f([1.354,-0.3735,-2.884]),SFVec3f([3.668,-0.3735,-1.919]),SFVec3f([4.895,-0.3735,-0.6254]),SFVec3f([5.24,-0.3735,1.428])])),
                                                      texCoord_ : 
                                                        TextureCoordinate(
                                                          point_ : MFVec2f([SFVec2f([0.0177,0.3051]),SFVec2f([0.0982,0.302]),SFVec2f([0.1487,0.2975]),SFVec2f([0.2175,0.2944]),SFVec2f([0.3621,0.2922]),SFVec2f([0.1849,0.2961]),SFVec2f([0.3633,0.2922]),SFVec2f([0.3627,0.2922]),SFVec2f([0.0177,0.3051]),SFVec2f([0.1055,0.2814]),SFVec2f([0.3697,0.2711]),SFVec2f([0.3605,0.2757]),SFVec2f([0.2204,0.275]),SFVec2f([0.1853,0.2768]),SFVec2f([0.024,0.2813]),SFVec2f([0.1448,0.2785]),SFVec2f([0.3603,0.2745]),SFVec2f([0.0155,0.2778]),SFVec2f([0.3633,0.2922]),SFVec2f([0.3697,0.2711]),SFVec2f([0.3603,0.2745]),SFVec2f([0.3627,0.2922]),SFVec2f([0.1055,0.2814]),SFVec2f([0.0982,0.302]),SFVec2f([0.0177,0.3051]),SFVec2f([0.024,0.2813]),SFVec2f([0.1448,0.2785]),SFVec2f([0.1487,0.2975]),SFVec2f([0.3605,0.2757]),SFVec2f([0.3621,0.2922]),SFVec2f([0.2175,0.2944]),SFVec2f([0.2204,0.275]),SFVec2f([0.1849,0.2961]),SFVec2f([0.1853,0.2768]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0155,0.2778]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0982,0.302]),SFVec2f([0.1487,0.2975]),SFVec2f([0.1849,0.2961]),SFVec2f([0.2175,0.2944]),SFVec2f([0.3621,0.2922]),SFVec2f([0.3627,0.2922]),SFVec2f([0.3633,0.2922]),SFVec2f([0.2175,0.2944]),SFVec2f([0.1849,0.2961]),SFVec2f([0.1487,0.2975]),SFVec2f([0.0982,0.302]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0177,0.3051]),SFVec2f([0.1055,0.2814]),SFVec2f([0.024,0.2813]),SFVec2f([0.0155,0.2778]),SFVec2f([0.024,0.2813]),SFVec2f([0.1055,0.2814]),SFVec2f([0.1448,0.2785]),SFVec2f([0.1853,0.2768]),SFVec2f([0.2204,0.275]),SFVec2f([0.3605,0.2757]),SFVec2f([0.3603,0.2745]),SFVec2f([0.3697,0.2711]),SFVec2f([0.2204,0.275]),SFVec2f([0.1853,0.2768]),SFVec2f([0.1448,0.2785])])))))]),

                                        HAnimJoint(
                                          name_ : SFString('vl1'),
                                          DEF_ : SFString('hanim_vl1'),
                                          center_ : SFVec3f([SFDouble(0), SFDouble(44.43), SFDouble(-0.6117)]),
                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                          children_ : [
                                            HAnimSegment(
                                              name_ : SFString('l1'),
                                              DEF_ : SFString('hanim_l1'),
                                              children_ : [
                                                Transform(
                                                  translation_ : SFVec3f([SFDouble(0), SFDouble(44.43), SFDouble(-0.6117)]),
                                                  child_ : 
                                                    Shape(
                                                      appearance_ : 
                                                        Appearance(
                                                          material_ : 
                                                            Material(
                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                          texture_ : 
                                                            ImageTexture(
                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                      geometry_ : 
                                                        IndexedFaceSet(
                                                          coordIndex_ : MFInt32([SFInt32(7), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(3), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(31), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(46), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(54), SFInt32(-1), SFInt32(43), SFInt32(46), SFInt32(54), SFInt32(-1), SFInt32(43), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(27), SFInt32(23), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(20), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(26), SFInt32(-1), SFInt32(20), SFInt32(17), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(20), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(18), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(7), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(9), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(25), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(25), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(22), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(13), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(11), SFInt32(-1)]),
                                                          creaseAngle_ : 3.14159,
                                                          texCoordIndex_ : MFInt32([SFInt32(9), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(16), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(17), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(18), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(28), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(43), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(39), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(62), SFInt32(-1), SFInt32(54), SFInt32(58), SFInt32(62), SFInt32(-1), SFInt32(51), SFInt32(54), SFInt32(62), SFInt32(-1), SFInt32(51), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(4), SFInt32(-1), SFInt32(35), SFInt32(32), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(35), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(29), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(27), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(29), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(21), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(9), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(17), SFInt32(-1), SFInt32(30), SFInt32(18), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(30), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(22), SFInt32(-1), SFInt32(28), SFInt32(24), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(28), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(24), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(33), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(16), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(10), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(13), SFInt32(-1)]),
                                                          coord_ : 
                                                            Coordinate(
                                                              point_ : MFVec3f([SFVec3f([3.702,1.056,2.588]),SFVec3f([1.286,1.056,3.04]),SFVec3f([5.104,1.056,1.294]),SFVec3f([1.363,1.056,-2.529]),SFVec3f([3.588,1.056,-1.686]),SFVec3f([4.805,1.056,-0.5256]),SFVec3f([0,1.056,3.04]),SFVec3f([3.71,0.0128,2.648]),SFVec3f([4.818,0.0128,-0.5615]),SFVec3f([0,0.0128,3.092]),SFVec3f([0,0.0128,-2.595]),SFVec3f([5.128,0.0128,1.321]),SFVec3f([1.293,0.0128,-2.595]),SFVec3f([3.593,0.0128,-1.696]),SFVec3f([1.281,0.0128,3.092]),SFVec3f([-1.281,0.0128,3.092]),SFVec3f([-3.71,0.0128,2.648]),SFVec3f([-3.702,1.056,2.588]),SFVec3f([-1.286,1.056,3.04]),SFVec3f([-5.128,0.0128,1.321]),SFVec3f([-5.104,1.056,1.294]),SFVec3f([-3.593,0.0128,-1.696]),SFVec3f([-1.293,0.0128,-2.595]),SFVec3f([-1.363,1.056,-2.529]),SFVec3f([-3.588,1.056,-1.686]),SFVec3f([-4.818,0.0128,-0.5615]),SFVec3f([-4.805,1.056,-0.5256]),SFVec3f([0,1.056,-2.529]),SFVec3f([1.266,1.5,2.82]),SFVec3f([3.599,1.5,2.383]),SFVec3f([4.867,1.5,1.212]),SFVec3f([4.6,1.5,-0.4169]),SFVec3f([3.469,1.5,-1.496]),SFVec3f([1.323,1.5,-2.308]),SFVec3f([0,1.5,-2.309]),SFVec3f([-1.323,1.5,-2.308]),SFVec3f([-3.469,1.5,-1.496]),SFVec3f([-4.6,1.5,-0.4169]),SFVec3f([-4.867,1.5,1.212]),SFVec3f([-3.599,1.5,2.383]),SFVec3f([-1.266,1.5,2.82]),SFVec3f([0,1.5,2.82]),SFVec3f([3.606,-0.3662,2.442]),SFVec3f([1.261,-0.3662,2.872]),SFVec3f([0,-0.3662,2.872]),SFVec3f([-1.261,-0.3662,2.872]),SFVec3f([-3.606,-0.3662,2.442]),SFVec3f([-4.891,-0.3662,1.241]),SFVec3f([-4.612,-0.3662,-0.451]),SFVec3f([-3.473,-0.3662,-1.506]),SFVec3f([-1.251,-0.3662,-2.375]),SFVec3f([0,-0.3662,-2.375]),SFVec3f([1.251,-0.3662,-2.375]),SFVec3f([3.473,-0.3662,-1.506]),SFVec3f([4.612,-0.3662,-0.451]),SFVec3f([4.891,-0.3662,1.241])])),
                                                          texCoord_ : 
                                                            TextureCoordinate(
                                                              point_ : MFVec2f([SFVec2f([0.0943,0.3233]),SFVec2f([0.0192,0.3251]),SFVec2f([0.1489,0.3212]),SFVec2f([0.3615,0.3195]),SFVec2f([0.3631,0.318]),SFVec2f([0.2175,0.3185]),SFVec2f([0.1844,0.32]),SFVec2f([0.3623,0.3188]),SFVec2f([0.0192,0.3251]),SFVec2f([0.0982,0.302]),SFVec2f([0.1849,0.2961]),SFVec2f([0.0177,0.3051]),SFVec2f([0.3627,0.2922]),SFVec2f([0.1487,0.2975]),SFVec2f([0.3633,0.2922]),SFVec2f([0.3621,0.2922]),SFVec2f([0.2175,0.2944]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0982,0.302]),SFVec2f([0.0943,0.3233]),SFVec2f([0.0192,0.3251]),SFVec2f([0.1487,0.2975]),SFVec2f([0.1489,0.3212]),SFVec2f([0.2175,0.2944]),SFVec2f([0.3621,0.2922]),SFVec2f([0.3615,0.3195]),SFVec2f([0.2175,0.3185]),SFVec2f([0.1849,0.2961]),SFVec2f([0.1844,0.32]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0192,0.3251]),SFVec2f([0.3631,0.318]),SFVec2f([0.3633,0.2922]),SFVec2f([0.3627,0.2922]),SFVec2f([0.3623,0.3188]),SFVec2f([0.0192,0.3251]),SFVec2f([0.0943,0.3233]),SFVec2f([0.1489,0.3212]),SFVec2f([0.1844,0.32]),SFVec2f([0.2175,0.3185]),SFVec2f([0.3615,0.3195]),SFVec2f([0.3623,0.3188]),SFVec2f([0.3631,0.318]),SFVec2f([0.2175,0.3185]),SFVec2f([0.1844,0.32]),SFVec2f([0.1489,0.3212]),SFVec2f([0.0943,0.3233]),SFVec2f([0.0192,0.3251]),SFVec2f([0.0192,0.3251]),SFVec2f([0.0982,0.302]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0177,0.3051]),SFVec2f([0.0982,0.302]),SFVec2f([0.1487,0.2975]),SFVec2f([0.1849,0.2961]),SFVec2f([0.2175,0.2944]),SFVec2f([0.3621,0.2922]),SFVec2f([0.3627,0.2922]),SFVec2f([0.3633,0.2922]),SFVec2f([0.2175,0.2944]),SFVec2f([0.1849,0.2961]),SFVec2f([0.1487,0.2975])])))))]),

                                            HAnimJoint(
                                              name_ : SFString('vt12'),
                                              DEF_ : SFString('hanim_vt12'),
                                              center_ : SFVec3f([SFDouble(0), SFDouble(45.470001), SFDouble(-0.6117)]),
                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                              children_ : [
                                                HAnimSegment(
                                                  name_ : SFString('t12'),
                                                  DEF_ : SFString('hanim_t12'),
                                                  children_ : [
                                                    Transform(
                                                      translation_ : SFVec3f([SFDouble(0), SFDouble(45.470001), SFDouble(-0.6117)]),
                                                      child_ : 
                                                        Shape(
                                                          appearance_ : 
                                                            Appearance(
                                                              material_ : 
                                                                Material(
                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                              texture_ : 
                                                                ImageTexture(
                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                          geometry_ : 
                                                            IndexedFaceSet(
                                                              coordIndex_ : MFInt32([SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(27), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(27), SFInt32(23), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(31), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(46), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(54), SFInt32(-1), SFInt32(43), SFInt32(46), SFInt32(54), SFInt32(-1), SFInt32(43), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(17), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(14), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(26), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(27), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(23), SFInt32(-1), SFInt32(27), SFInt32(2), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(27), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(12), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(24), SFInt32(-1), SFInt32(21), SFInt32(25), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(21), SFInt32(-1), SFInt32(25), SFInt32(15), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(25), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(8), SFInt32(-1)]),
                                                              creaseAngle_ : 3.14159,
                                                              texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(6), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(33), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(19), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(28), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(43), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(39), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(62), SFInt32(-1), SFInt32(54), SFInt32(58), SFInt32(62), SFInt32(-1), SFInt32(51), SFInt32(54), SFInt32(62), SFInt32(-1), SFInt32(51), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(4), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(22), SFInt32(-1), SFInt32(33), SFInt32(18), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(33), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(31), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(31), SFInt32(27), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(31), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(34), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(28), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(10), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(35), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(29), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(20), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(30), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(32), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(24), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(11), SFInt32(-1)]),
                                                              coord_ : 
                                                                Coordinate(
                                                                  point_ : MFVec3f([SFVec3f([3.695,1.054,2.529]),SFVec3f([5.081,1.054,1.266]),SFVec3f([1.292,1.054,2.988]),SFVec3f([1.434,1.054,-2.463]),SFVec3f([3.584,1.054,-1.677]),SFVec3f([4.793,1.054,-0.4897]),SFVec3f([3.702,0.0104,2.588]),SFVec3f([1.286,0.0104,3.04]),SFVec3f([5.104,0.0104,1.294]),SFVec3f([1.363,0.0104,-2.529]),SFVec3f([3.588,0.0104,-1.686]),SFVec3f([4.805,0.0104,-0.5256]),SFVec3f([0,0.0104,3.04]),SFVec3f([-3.584,1.054,-1.677]),SFVec3f([-4.793,1.054,-0.4897]),SFVec3f([-4.805,0.0104,-0.5256]),SFVec3f([-3.588,0.0104,-1.686]),SFVec3f([0,1.054,-2.464]),SFVec3f([-1.434,1.054,-2.463]),SFVec3f([-1.363,0.0104,-2.529]),SFVec3f([0,0.0104,-2.529]),SFVec3f([-3.702,0.0104,2.588]),SFVec3f([-3.695,1.054,2.529]),SFVec3f([-1.292,1.054,2.988]),SFVec3f([-1.286,0.0104,3.04]),SFVec3f([-5.104,0.0104,1.294]),SFVec3f([-5.081,1.054,1.266]),SFVec3f([0,1.054,2.988]),SFVec3f([1.276,1.452,2.823]),SFVec3f([3.618,1.452,2.375]),SFVec3f([4.904,1.452,1.204]),SFVec3f([4.639,1.452,-0.4096]),SFVec3f([3.494,1.452,-1.534]),SFVec3f([1.405,1.452,-2.298]),SFVec3f([0,1.452,-2.298]),SFVec3f([-1.405,1.452,-2.298]),SFVec3f([-3.494,1.452,-1.534]),SFVec3f([-4.639,1.452,-0.4096]),SFVec3f([-4.904,1.452,1.204]),SFVec3f([-3.618,1.452,2.375]),SFVec3f([-1.276,1.452,2.823]),SFVec3f([0,1.452,2.823]),SFVec3f([3.625,-0.4686,2.435]),SFVec3f([1.271,-0.4686,2.875]),SFVec3f([0,-0.4686,2.875]),SFVec3f([-1.271,-0.4686,2.875]),SFVec3f([-3.625,-0.4686,2.435]),SFVec3f([-4.927,-0.4686,1.233]),SFVec3f([-4.651,-0.4686,-0.4442]),SFVec3f([-3.499,-0.4686,-1.544]),SFVec3f([-1.333,-0.4686,-2.364]),SFVec3f([0,-0.4686,-2.364]),SFVec3f([1.333,-0.4686,-2.364]),SFVec3f([3.499,-0.4686,-1.544]),SFVec3f([4.651,-0.4686,-0.4442]),SFVec3f([4.927,-0.4686,1.233])])),
                                                              texCoord_ : 
                                                                TextureCoordinate(
                                                                  point_ : MFVec2f([SFVec2f([0.0903,0.3446]),SFVec2f([0.1491,0.3449]),SFVec2f([0.0206,0.3452]),SFVec2f([0.3608,0.3469]),SFVec2f([0.3629,0.3439]),SFVec2f([0.2175,0.3427]),SFVec2f([0.1838,0.3438]),SFVec2f([0.3619,0.3454]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0943,0.3233]),SFVec2f([0.0192,0.3251]),SFVec2f([0.1489,0.3212]),SFVec2f([0.3631,0.318]),SFVec2f([0.3615,0.3195]),SFVec2f([0.2175,0.3185]),SFVec2f([0.1844,0.32]),SFVec2f([0.3623,0.3188]),SFVec2f([0.0192,0.3251]),SFVec2f([0.2175,0.3427]),SFVec2f([0.1838,0.3438]),SFVec2f([0.1844,0.32]),SFVec2f([0.2175,0.3185]),SFVec2f([0.3619,0.3454]),SFVec2f([0.3629,0.3439]),SFVec2f([0.3631,0.318]),SFVec2f([0.3623,0.3188]),SFVec2f([0.0943,0.3233]),SFVec2f([0.0903,0.3446]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0192,0.3251]),SFVec2f([0.1489,0.3212]),SFVec2f([0.1491,0.3449]),SFVec2f([0.3615,0.3195]),SFVec2f([0.3608,0.3469]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0192,0.3251]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0903,0.3446]),SFVec2f([0.1491,0.3449]),SFVec2f([0.1838,0.3438]),SFVec2f([0.2175,0.3427]),SFVec2f([0.3608,0.3469]),SFVec2f([0.3619,0.3454]),SFVec2f([0.3629,0.3439]),SFVec2f([0.2175,0.3427]),SFVec2f([0.1838,0.3438]),SFVec2f([0.1491,0.3449]),SFVec2f([0.0903,0.3446]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0943,0.3233]),SFVec2f([0.0192,0.3251]),SFVec2f([0.0192,0.3251]),SFVec2f([0.0192,0.3251]),SFVec2f([0.0943,0.3233]),SFVec2f([0.1489,0.3212]),SFVec2f([0.1844,0.32]),SFVec2f([0.2175,0.3185]),SFVec2f([0.3615,0.3195]),SFVec2f([0.3623,0.3188]),SFVec2f([0.3631,0.318]),SFVec2f([0.2175,0.3185]),SFVec2f([0.1844,0.32]),SFVec2f([0.1489,0.3212])])))))]),

                                                HAnimJoint(
                                                  name_ : SFString('vt11'),
                                                  DEF_ : SFString('hanim_vt11'),
                                                  center_ : SFVec3f([SFDouble(0), SFDouble(46.52), SFDouble(-0.6117)]),
                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                  children_ : [
                                                    HAnimSegment(
                                                      name_ : SFString('t11'),
                                                      DEF_ : SFString('hanim_t11'),
                                                      children_ : [
                                                        Transform(
                                                          translation_ : SFVec3f([SFDouble(0), SFDouble(46.52), SFDouble(-0.6117)]),
                                                          child_ : 
                                                            Shape(
                                                              appearance_ : 
                                                                Appearance(
                                                                  material_ : 
                                                                    Material(
                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                  texture_ : 
                                                                    ImageTexture(
                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                              geometry_ : 
                                                                IndexedFaceSet(
                                                                  coordIndex_ : MFInt32([SFInt32(4), SFInt32(3), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(16), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(42), SFInt32(-1), SFInt32(34), SFInt32(38), SFInt32(42), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(42), SFInt32(-1), SFInt32(31), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(31), SFInt32(43), SFInt32(30), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(47), SFInt32(49), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(47), SFInt32(51), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(47), SFInt32(55), SFInt32(57), SFInt32(-1), SFInt32(45), SFInt32(47), SFInt32(57), SFInt32(-1), SFInt32(45), SFInt32(57), SFInt32(44), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(7), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(25), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(28), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(16), SFInt32(-1), SFInt32(28), SFInt32(3), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(28), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(43), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(29), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(10), SFInt32(-1), SFInt32(29), SFInt32(17), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(29), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(22), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(27), SFInt32(-1), SFInt32(24), SFInt32(14), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(24), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(14), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(9), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(57), SFInt32(13), SFInt32(-1)]),
                                                                  creaseAngle_ : 3.14159,
                                                                  texCoordIndex_ : MFInt32([SFInt32(6), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(35), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(52), SFInt32(-1), SFInt32(44), SFInt32(48), SFInt32(52), SFInt32(-1), SFInt32(41), SFInt32(44), SFInt32(52), SFInt32(-1), SFInt32(41), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(41), SFInt32(53), SFInt32(40), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(57), SFInt32(59), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(64), SFInt32(65), SFInt32(-1), SFInt32(61), SFInt32(63), SFInt32(65), SFInt32(-1), SFInt32(57), SFInt32(61), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(66), SFInt32(67), SFInt32(-1), SFInt32(57), SFInt32(65), SFInt32(67), SFInt32(-1), SFInt32(55), SFInt32(57), SFInt32(67), SFInt32(-1), SFInt32(55), SFInt32(67), SFInt32(54), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(0), SFInt32(-1), SFInt32(28), SFInt32(33), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(28), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(26), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(34), SFInt32(-1), SFInt32(26), SFInt32(24), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(26), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(20), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(37), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(7), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(53), SFInt32(3), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(19), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(13), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(39), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(27), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(25), SFInt32(-1), SFInt32(27), SFInt32(35), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(27), SFInt32(-1), SFInt32(35), SFInt32(30), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(35), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(30), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(63), SFInt32(18), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(64), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(65), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(66), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(67), SFInt32(17), SFInt32(-1)]),
                                                                  coord_ : 
                                                                    Coordinate(
                                                                      point_ : MFVec3f([SFVec3f([3.695,0.0098,2.529]),SFVec3f([5.081,0.0098,1.266]),SFVec3f([1.292,0.0098,2.988]),SFVec3f([1.434,0.0098,-2.463]),SFVec3f([3.584,0.0098,-1.677]),SFVec3f([4.793,0.0098,-0.4897]),SFVec3f([1.292,0.0098,2.988]),SFVec3f([0,0.0098,2.988]),SFVec3f([3.86,0.776,2.936]),SFVec3f([5.361,0.776,1.276]),SFVec3f([1.588,0.776,-2.498]),SFVec3f([1.36,0.776,3.192]),SFVec3f([3.752,0.776,-1.776]),SFVec3f([4.97,0.776,-0.6037]),SFVec3f([0,0.776,3.192]),SFVec3f([-3.584,0.0098,-1.677]),SFVec3f([-1.434,0.0098,-2.463]),SFVec3f([-1.588,0.776,-2.498]),SFVec3f([-3.752,0.776,-1.776]),SFVec3f([-4.793,0.0098,-0.4897]),SFVec3f([-4.97,0.776,-0.6037]),SFVec3f([-5.081,0.0098,1.266]),SFVec3f([-5.361,0.776,1.276]),SFVec3f([-1.292,0.0098,2.988]),SFVec3f([-1.36,0.776,3.192]),SFVec3f([-3.695,0.0098,2.529]),SFVec3f([-1.292,0.0098,2.988]),SFVec3f([-3.86,0.776,2.936]),SFVec3f([0,0.0098,-2.464]),SFVec3f([0,0.776,-2.506]),SFVec3f([3.599,-0.4771,2.338]),SFVec3f([1.272,-0.4771,2.783]),SFVec3f([0,-0.4771,2.783]),SFVec3f([-1.272,-0.4771,2.783]),SFVec3f([-3.599,-0.4771,2.338]),SFVec3f([-4.861,-0.4771,1.189]),SFVec3f([-4.602,-0.4771,-0.3904]),SFVec3f([-3.472,-0.4771,-1.499]),SFVec3f([-1.398,-0.4771,-2.258]),SFVec3f([0,-0.4771,-2.259]),SFVec3f([1.398,-0.4771,-2.258]),SFVec3f([3.472,-0.4771,-1.499]),SFVec3f([4.602,-0.4771,-0.3904]),SFVec3f([4.861,-0.4771,1.189]),SFVec3f([3.643,1.099,-1.596]),SFVec3f([1.555,1.099,-2.294]),SFVec3f([0,1.099,-2.302]),SFVec3f([-1.555,1.099,-2.294]),SFVec3f([-3.643,1.099,-1.596]),SFVec3f([-4.782,1.099,-0.4999]),SFVec3f([-5.14,1.099,1.216]),SFVec3f([-3.76,1.099,2.74]),SFVec3f([-1.35,1.099,2.987]),SFVec3f([0,1.099,2.987]),SFVec3f([1.35,1.099,2.987]),SFVec3f([3.76,1.099,2.74]),SFVec3f([5.14,1.099,1.216]),SFVec3f([4.782,1.099,-0.4999])])),
                                                                  texCoord_ : 
                                                                    TextureCoordinate(
                                                                      point_ : MFVec2f([SFVec2f([0.0206,0.3452]),SFVec2f([0.0903,0.3446]),SFVec2f([0.0903,0.3446]),SFVec2f([0.1491,0.3449]),SFVec2f([0.3629,0.3439]),SFVec2f([0.3608,0.3469]),SFVec2f([0.2175,0.3427]),SFVec2f([0.1838,0.3438]),SFVec2f([0.0206,0.3452]),SFVec2f([0.3619,0.3454]),SFVec2f([0.0206,0.3452]),SFVec2f([0.089,0.3604]),SFVec2f([0.1508,0.3559]),SFVec2f([0.3623,0.3532]),SFVec2f([0.3588,0.3561]),SFVec2f([0.0232,0.3561]),SFVec2f([0.2188,0.3538]),SFVec2f([0.1874,0.3541]),SFVec2f([0.0232,0.3546]),SFVec2f([0.3608,0.3537]),SFVec2f([0.2175,0.3427]),SFVec2f([0.3608,0.3469]),SFVec2f([0.3588,0.3561]),SFVec2f([0.2188,0.3538]),SFVec2f([0.1838,0.3438]),SFVec2f([0.1874,0.3541]),SFVec2f([0.1491,0.3449]),SFVec2f([0.1508,0.3559]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0232,0.3561]),SFVec2f([0.0232,0.3546]),SFVec2f([0.0903,0.3446]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0903,0.3446]),SFVec2f([0.089,0.3604]),SFVec2f([0.3623,0.3532]),SFVec2f([0.3629,0.3439]),SFVec2f([0.3619,0.3454]),SFVec2f([0.3608,0.3537]),SFVec2f([0.0903,0.3446]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0206,0.3452]),SFVec2f([0.0903,0.3446]),SFVec2f([0.1491,0.3449]),SFVec2f([0.1838,0.3438]),SFVec2f([0.2175,0.3427]),SFVec2f([0.3608,0.3469]),SFVec2f([0.3619,0.3454]),SFVec2f([0.3629,0.3439]),SFVec2f([0.2175,0.3427]),SFVec2f([0.1838,0.3438]),SFVec2f([0.1491,0.3449]),SFVec2f([0.2188,0.3538]),SFVec2f([0.3588,0.3561]),SFVec2f([0.3608,0.3537]),SFVec2f([0.3623,0.3532]),SFVec2f([0.2188,0.3538]),SFVec2f([0.1874,0.3541]),SFVec2f([0.1508,0.3559]),SFVec2f([0.089,0.3604]),SFVec2f([0.0232,0.3561]),SFVec2f([0.0232,0.3546]),SFVec2f([0.0232,0.3561]),SFVec2f([0.089,0.3604]),SFVec2f([0.1508,0.3559]),SFVec2f([0.1874,0.3541])])))))]),

                                                    HAnimJoint(
                                                      name_ : SFString('vt10'),
                                                      DEF_ : SFString('hanim_vt10'),
                                                      center_ : SFVec3f([SFDouble(0), SFDouble(47.279999), SFDouble(-0.6127)]),
                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                      children_ : [
                                                        HAnimSegment(
                                                          name_ : SFString('t10'),
                                                          DEF_ : SFString('hanim_t10'),
                                                          children_ : [
                                                            Transform(
                                                              translation_ : SFVec3f([SFDouble(0), SFDouble(47.279999), SFDouble(-0.6127)]),
                                                              child_ : 
                                                                Shape(
                                                                  appearance_ : 
                                                                    Appearance(
                                                                      material_ : 
                                                                        Material(
                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                      texture_ : 
                                                                        ImageTexture(
                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                  geometry_ : 
                                                                    IndexedFaceSet(
                                                                      coordIndex_ : MFInt32([SFInt32(11), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(13), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(33), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(29), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(29), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(46), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(50), SFInt32(54), SFInt32(42), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(42), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(42), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(23), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(23), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(26), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(13), SFInt32(-1), SFInt32(26), SFInt32(2), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(26), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(27), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(11), SFInt32(-1), SFInt32(27), SFInt32(14), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(27), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(25), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(12), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(22), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(12), SFInt32(-1)]),
                                                                      creaseAngle_ : 3.14159,
                                                                      texCoordIndex_ : MFInt32([SFInt32(15), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(15), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(14), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(30), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(41), SFInt32(44), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(41), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(58), SFInt32(62), SFInt32(50), SFInt32(-1), SFInt32(54), SFInt32(58), SFInt32(50), SFInt32(-1), SFInt32(52), SFInt32(54), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(50), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(4), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(29), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(25), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(30), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(23), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(21), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(33), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(9), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(14), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(15), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(10), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(16), SFInt32(-1), SFInt32(35), SFInt32(32), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(35), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(24), SFInt32(-1), SFInt32(31), SFInt32(27), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(31), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(27), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(17), SFInt32(-1)]),
                                                                      coord_ : 
                                                                        Coordinate(
                                                                          point_ : MFVec3f([SFVec3f([3.86,0.0118,2.936]),SFVec3f([5.361,0.0118,1.276]),SFVec3f([1.588,0.0118,-2.498]),SFVec3f([1.36,0.0118,3.192]),SFVec3f([3.752,0.0118,-1.776]),SFVec3f([4.97,0.0118,-0.6037]),SFVec3f([1.418,0.6583,3.362]),SFVec3f([3.892,0.6583,-1.86]),SFVec3f([5.121,0.6583,-0.6992]),SFVec3f([3.987,0.6583,3.259]),SFVec3f([5.601,0.6583,1.285]),SFVec3f([1.717,0.6583,-2.528]),SFVec3f([0,0.6583,3.363]),SFVec3f([-1.588,0.0118,-2.498]),SFVec3f([-1.717,0.6583,-2.528]),SFVec3f([-3.892,0.6583,-1.86]),SFVec3f([-3.752,0.0118,-1.776]),SFVec3f([-5.121,0.6583,-0.6992]),SFVec3f([-4.97,0.0118,-0.6037]),SFVec3f([-5.601,0.6583,1.285]),SFVec3f([-5.361,0.0118,1.276]),SFVec3f([-1.36,0.0118,3.192]),SFVec3f([-1.418,0.6583,3.362]),SFVec3f([0,0.0118,3.192]),SFVec3f([-3.86,0.0118,2.936]),SFVec3f([-3.987,0.6583,3.259]),SFVec3f([0,0.0118,-2.506]),SFVec3f([0,0.6583,-2.543]),SFVec3f([1.558,-0.2996,-2.316]),SFVec3f([3.655,-0.2996,-1.616]),SFVec3f([4.803,-0.2996,-0.5114]),SFVec3f([5.164,-0.2996,1.223]),SFVec3f([3.771,-0.2996,2.762]),SFVec3f([1.351,-0.2996,3.01]),SFVec3f([0,-0.2996,3.01]),SFVec3f([-1.351,-0.2996,3.01]),SFVec3f([-3.771,-0.2996,2.762]),SFVec3f([-5.164,-0.2996,1.223]),SFVec3f([-4.803,-0.2996,-0.5114]),SFVec3f([-3.655,-0.2996,-1.616]),SFVec3f([-1.558,-0.2996,-2.316]),SFVec3f([0,-0.2996,-2.324]),SFVec3f([1.415,0.9368,3.18]),SFVec3f([3.898,0.9368,3.08]),SFVec3f([5.402,0.9368,1.24]),SFVec3f([4.956,0.9368,-0.6038]),SFVec3f([3.798,0.9368,-1.698]),SFVec3f([1.689,0.9368,-2.346]),SFVec3f([0,0.9368,-2.361]),SFVec3f([-1.689,0.9368,-2.346]),SFVec3f([-3.798,0.9368,-1.698]),SFVec3f([-4.956,0.9368,-0.6038]),SFVec3f([-5.402,0.9368,1.24]),SFVec3f([-3.898,0.9368,3.08]),SFVec3f([-1.415,0.9368,3.18]),SFVec3f([0,0.9368,3.18])])),
                                                                      texCoord_ : 
                                                                        TextureCoordinate(
                                                                          point_ : MFVec2f([SFVec2f([0.089,0.3604]),SFVec2f([0.1508,0.3559]),SFVec2f([0.3588,0.3561]),SFVec2f([0.3623,0.3532]),SFVec2f([0.0232,0.3561]),SFVec2f([0.2188,0.3538]),SFVec2f([0.1874,0.3541]),SFVec2f([0.0232,0.3546]),SFVec2f([0.3608,0.3537]),SFVec2f([0.0245,0.3617]),SFVec2f([0.2207,0.3633]),SFVec2f([0.1922,0.3628]),SFVec2f([0.3616,0.3609]),SFVec2f([0.0859,0.3657]),SFVec2f([0.1489,0.3665]),SFVec2f([0.3589,0.3648]),SFVec2f([0.3617,0.3609]),SFVec2f([0.0254,0.3626]),SFVec2f([0.3588,0.3561]),SFVec2f([0.3589,0.3648]),SFVec2f([0.2207,0.3633]),SFVec2f([0.2188,0.3538]),SFVec2f([0.1922,0.3628]),SFVec2f([0.1874,0.3541]),SFVec2f([0.1489,0.3665]),SFVec2f([0.1508,0.3559]),SFVec2f([0.0232,0.3561]),SFVec2f([0.0245,0.3617]),SFVec2f([0.0254,0.3626]),SFVec2f([0.0232,0.3546]),SFVec2f([0.089,0.3604]),SFVec2f([0.0859,0.3657]),SFVec2f([0.3617,0.3609]),SFVec2f([0.3623,0.3532]),SFVec2f([0.3608,0.3537]),SFVec2f([0.3616,0.3609]),SFVec2f([0.3623,0.3532]),SFVec2f([0.2188,0.3538]),SFVec2f([0.1874,0.3541]),SFVec2f([0.1508,0.3559]),SFVec2f([0.089,0.3604]),SFVec2f([0.0232,0.3561]),SFVec2f([0.0232,0.3546]),SFVec2f([0.0232,0.3561]),SFVec2f([0.089,0.3604]),SFVec2f([0.1508,0.3559]),SFVec2f([0.1874,0.3541]),SFVec2f([0.2188,0.3538]),SFVec2f([0.3588,0.3561]),SFVec2f([0.3608,0.3537]),SFVec2f([0.0245,0.3617]),SFVec2f([0.0859,0.3657]),SFVec2f([0.1489,0.3665]),SFVec2f([0.1922,0.3628]),SFVec2f([0.2207,0.3633]),SFVec2f([0.3589,0.3648]),SFVec2f([0.3616,0.3609]),SFVec2f([0.3617,0.3609]),SFVec2f([0.2207,0.3633]),SFVec2f([0.1922,0.3628]),SFVec2f([0.1489,0.3665]),SFVec2f([0.0859,0.3657]),SFVec2f([0.0245,0.3617]),SFVec2f([0.0254,0.3626])])))))]),

                                                        HAnimJoint(
                                                          name_ : SFString('vt9'),
                                                          DEF_ : SFString('hanim_vt9'),
                                                          center_ : SFVec3f([SFDouble(0), SFDouble(47.93), SFDouble(-0.6117)]),
                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                          children_ : [
                                                            HAnimSegment(
                                                              name_ : SFString('t9'),
                                                              DEF_ : SFString('hanim_t9'),
                                                              children_ : [
                                                                Transform(
                                                                  translation_ : SFVec3f([SFDouble(0), SFDouble(47.93), SFDouble(-0.6117)]),
                                                                  child_ : 
                                                                    Shape(
                                                                      appearance_ : 
                                                                        Appearance(
                                                                          material_ : 
                                                                            Material(
                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                          texture_ : 
                                                                            ImageTexture(
                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                      geometry_ : 
                                                                        IndexedFaceSet(
                                                                          coordIndex_ : MFInt32([SFInt32(7), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(12), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(16), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(18), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(15), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(36), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(43), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(47), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(47), SFInt32(50), SFInt32(54), SFInt32(-1), SFInt32(43), SFInt32(47), SFInt32(54), SFInt32(-1), SFInt32(43), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(15), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(6), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(16), SFInt32(-1), SFInt32(22), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(22), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(20), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(12), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(21), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(12), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(24), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(18), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(26), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(23), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(13), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(9), SFInt32(-1)]),
                                                                          creaseAngle_ : 3.14159,
                                                                          texCoordIndex_ : MFInt32([SFInt32(9), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(20), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(32), SFInt32(-1), SFInt32(19), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(55), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(62), SFInt32(-1), SFInt32(55), SFInt32(58), SFInt32(62), SFInt32(-1), SFInt32(51), SFInt32(55), SFInt32(62), SFInt32(-1), SFInt32(51), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(0), SFInt32(-1), SFInt32(35), SFInt32(19), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(35), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(26), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(20), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(26), SFInt32(-1), SFInt32(33), SFInt32(31), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(31), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(15), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(25), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(27), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(21), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(27), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(34), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(11), SFInt32(-1)]),
                                                                          coord_ : 
                                                                            Coordinate(
                                                                              point_ : MFVec3f([SFVec3f([1.418,0.0059,3.362]),SFVec3f([3.892,0.0059,-1.86]),SFVec3f([5.121,0.0059,-0.6992]),SFVec3f([3.987,0.0059,3.259]),SFVec3f([5.601,0.0059,1.285]),SFVec3f([1.717,0.0059,-2.528]),SFVec3f([0,0.0059,3.363]),SFVec3f([1.476,0.6524,3.533]),SFVec3f([4.033,0.6524,-1.943]),SFVec3f([5.271,0.6524,-0.7947]),SFVec3f([4.115,0.6524,3.582]),SFVec3f([5.84,0.6524,1.295]),SFVec3f([1.845,0.6524,-2.558]),SFVec3f([0,0.6524,3.533]),SFVec3f([-1.476,0.6524,3.533]),SFVec3f([-1.418,0.0059,3.362]),SFVec3f([-3.987,0.0059,3.259]),SFVec3f([-4.115,0.6524,3.582]),SFVec3f([-1.845,0.6524,-2.558]),SFVec3f([-1.717,0.0059,-2.528]),SFVec3f([0,0.0059,-2.543]),SFVec3f([0,0.6524,-2.58]),SFVec3f([-5.601,0.0059,1.285]),SFVec3f([-5.84,0.6524,1.295]),SFVec3f([-4.033,0.6524,-1.943]),SFVec3f([-3.892,0.0059,-1.86]),SFVec3f([-5.271,0.6524,-0.7947]),SFVec3f([-5.121,0.0059,-0.6992]),SFVec3f([3.895,-0.2838,3.074]),SFVec3f([1.415,-0.2838,3.173]),SFVec3f([0,-0.2838,3.173]),SFVec3f([-1.415,-0.2838,3.173]),SFVec3f([-3.895,-0.2838,3.074]),SFVec3f([-5.395,-0.2838,1.239]),SFVec3f([-4.95,-0.2838,-0.6002]),SFVec3f([-3.794,-0.2838,-1.692]),SFVec3f([-1.688,-0.2838,-2.339]),SFVec3f([0,-0.2838,-2.354]),SFVec3f([1.688,-0.2838,-2.339]),SFVec3f([3.794,-0.2838,-1.692]),SFVec3f([4.95,-0.2838,-0.6002]),SFVec3f([5.395,-0.2838,1.239]),SFVec3f([3.937,0.9744,-1.774]),SFVec3f([1.818,0.9744,-2.369]),SFVec3f([0,0.9744,-2.391]),SFVec3f([-1.818,0.9744,-2.369]),SFVec3f([-3.937,0.9744,-1.774]),SFVec3f([-5.103,0.9744,-0.6928]),SFVec3f([-5.633,0.9744,1.255]),SFVec3f([-4.022,0.9744,3.391]),SFVec3f([-1.478,0.9744,3.344]),SFVec3f([0,0.9744,3.344]),SFVec3f([1.478,0.9744,3.344]),SFVec3f([4.022,0.9744,3.391]),SFVec3f([5.633,0.9744,1.255]),SFVec3f([5.103,0.9744,-0.6928])])),
                                                                          texCoord_ : 
                                                                            TextureCoordinate(
                                                                              point_ : MFVec2f([SFVec2f([0.0245,0.3617]),SFVec2f([0.2207,0.3633]),SFVec2f([0.1922,0.3628]),SFVec2f([0.3616,0.3609]),SFVec2f([0.0859,0.3657]),SFVec2f([0.1489,0.3665]),SFVec2f([0.3589,0.3648]),SFVec2f([0.3617,0.3609]),SFVec2f([0.0254,0.3626]),SFVec2f([0.0258,0.3672]),SFVec2f([0.2227,0.3728]),SFVec2f([0.1969,0.3716]),SFVec2f([0.0826,0.3711]),SFVec2f([0.1469,0.377]),SFVec2f([0.3589,0.3735]),SFVec2f([0.3612,0.3687]),SFVec2f([0.0276,0.3706]),SFVec2f([0.3625,0.3682]),SFVec2f([0.0258,0.3672]),SFVec2f([0.0245,0.3617]),SFVec2f([0.0859,0.3657]),SFVec2f([0.0826,0.3711]),SFVec2f([0.3612,0.3687]),SFVec2f([0.3617,0.3609]),SFVec2f([0.3616,0.3609]),SFVec2f([0.3625,0.3682]),SFVec2f([0.1489,0.3665]),SFVec2f([0.1469,0.377]),SFVec2f([0.3589,0.3648]),SFVec2f([0.3589,0.3735]),SFVec2f([0.2227,0.3728]),SFVec2f([0.2207,0.3633]),SFVec2f([0.1969,0.3716]),SFVec2f([0.1922,0.3628]),SFVec2f([0.0276,0.3706]),SFVec2f([0.0254,0.3626]),SFVec2f([0.0859,0.3657]),SFVec2f([0.0245,0.3617]),SFVec2f([0.0254,0.3626]),SFVec2f([0.0245,0.3617]),SFVec2f([0.0859,0.3657]),SFVec2f([0.1489,0.3665]),SFVec2f([0.1922,0.3628]),SFVec2f([0.2207,0.3633]),SFVec2f([0.3589,0.3648]),SFVec2f([0.3616,0.3609]),SFVec2f([0.3617,0.3609]),SFVec2f([0.2207,0.3633]),SFVec2f([0.1922,0.3628]),SFVec2f([0.1489,0.3665]),SFVec2f([0.2227,0.3728]),SFVec2f([0.3589,0.3735]),SFVec2f([0.3625,0.3682]),SFVec2f([0.3612,0.3687]),SFVec2f([0.2227,0.3728]),SFVec2f([0.1969,0.3716]),SFVec2f([0.1469,0.377]),SFVec2f([0.0826,0.3711]),SFVec2f([0.0258,0.3672]),SFVec2f([0.0276,0.3706]),SFVec2f([0.0258,0.3672]),SFVec2f([0.0826,0.3711]),SFVec2f([0.1469,0.377]),SFVec2f([0.1969,0.3716])])))))]),

                                                            HAnimJoint(
                                                              name_ : SFString('vt8'),
                                                              DEF_ : SFString('hanim_vt8'),
                                                              center_ : SFVec3f([SFDouble(0), SFDouble(48.580002), SFDouble(-0.6117)]),
                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                              children_ : [
                                                                HAnimSegment(
                                                                  name_ : SFString('t8'),
                                                                  DEF_ : SFString('hanim_t8'),
                                                                  children_ : [
                                                                    Transform(
                                                                      translation_ : SFVec3f([SFDouble(0), SFDouble(48.580002), SFDouble(-0.6117)]),
                                                                      child_ : 
                                                                        Shape(
                                                                          appearance_ : 
                                                                            Appearance(
                                                                              material_ : 
                                                                                Material(
                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                              texture_ : 
                                                                                ImageTexture(
                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                          geometry_ : 
                                                                            IndexedFaceSet(
                                                                              coordIndex_ : MFInt32([SFInt32(4), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(27), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(27), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(31), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(31), SFInt32(41), SFInt32(-1), SFInt32(29), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(45), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(49), SFInt32(51), SFInt32(53), SFInt32(-1), SFInt32(45), SFInt32(49), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(45), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(45), SFInt32(55), SFInt32(-1), SFInt32(43), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(11), SFInt32(1), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(11), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(0), SFInt32(-1), SFInt32(27), SFInt32(14), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(21), SFInt32(-1), SFInt32(26), SFInt32(24), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(26), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(24), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(19), SFInt32(-1), SFInt32(12), SFInt32(4), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(12), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(20), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(6), SFInt32(-1), SFInt32(20), SFInt32(17), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(20), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(22), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(13), SFInt32(-1)]),
                                                                              creaseAngle_ : 3.14159,
                                                                              texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(20), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(32), SFInt32(-1), SFInt32(19), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(43), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(39), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(49), SFInt32(-1), SFInt32(37), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(53), SFInt32(55), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(57), SFInt32(59), SFInt32(61), SFInt32(-1), SFInt32(53), SFInt32(57), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(53), SFInt32(61), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(53), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(17), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(14), SFInt32(-1), SFInt32(35), SFInt32(19), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(35), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(26), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(20), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(26), SFInt32(-1), SFInt32(33), SFInt32(31), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(31), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(23), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(5), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(25), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(27), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(21), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(27), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(34), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(18), SFInt32(-1)]),
                                                                              coord_ : 
                                                                                Coordinate(
                                                                                  point_ : MFVec3f([SFVec3f([1.476,0.0001,3.533]),SFVec3f([4.033,0.0001,-1.943]),SFVec3f([5.271,0.0001,-0.7947]),SFVec3f([4.234,0.6936,3.898]),SFVec3f([1.538,0.6936,3.713]),SFVec3f([6.114,0.7245,1.306]),SFVec3f([1.987,0.7245,-2.592]),SFVec3f([4.188,0.7245,-2.037]),SFVec3f([5.442,0.7245,-0.9006]),SFVec3f([4.115,0.0001,3.582]),SFVec3f([5.84,0.0001,1.295]),SFVec3f([1.845,0.0001,-2.558]),SFVec3f([0,0.6936,3.713]),SFVec3f([-1.538,0.6936,3.713]),SFVec3f([-1.476,0.0001,3.533]),SFVec3f([-4.115,0.0001,3.582]),SFVec3f([-4.234,0.6936,3.898]),SFVec3f([-1.987,0.7245,-2.592]),SFVec3f([-1.845,0.0001,-2.558]),SFVec3f([0,0.0001,-2.58]),SFVec3f([0,0.7245,-2.622]),SFVec3f([-5.84,0.0001,1.295]),SFVec3f([-6.114,0.7245,1.306]),SFVec3f([-4.188,0.7245,-2.037]),SFVec3f([-4.033,0.0001,-1.943]),SFVec3f([-5.442,0.7245,-0.9006]),SFVec3f([-5.271,0.0001,-0.7947]),SFVec3f([0,0.0001,3.533]),SFVec3f([1.82,-0.2993,-2.38]),SFVec3f([3.943,-0.2993,-1.784]),SFVec3f([5.113,-0.2993,-0.6987]),SFVec3f([5.646,-0.2993,1.257]),SFVec3f([4.027,-0.2993,3.403]),SFVec3f([1.478,-0.2993,3.355]),SFVec3f([0,-0.2993,3.355]),SFVec3f([-1.478,-0.2993,3.355]),SFVec3f([-4.027,-0.2993,3.403]),SFVec3f([-5.646,-0.2993,1.257]),SFVec3f([-5.113,-0.2993,-0.6987]),SFVec3f([-3.943,-0.2993,-1.784]),SFVec3f([-1.82,-0.2993,-2.38]),SFVec3f([0,-0.2993,-2.402]),SFVec3f([0,1.036,3.535]),SFVec3f([1.544,1.036,3.534]),SFVec3f([4.148,1.036,3.713]),SFVec3f([5.917,1.036,1.273]),SFVec3f([5.286,1.036,-0.8017]),SFVec3f([4.102,1.036,-1.875]),SFVec3f([1.963,1.036,-2.414]),SFVec3f([0,1.036,-2.444]),SFVec3f([-1.963,1.036,-2.414]),SFVec3f([-4.102,1.036,-1.875]),SFVec3f([-5.286,1.036,-0.8017]),SFVec3f([-5.917,1.036,1.273]),SFVec3f([-4.148,1.036,3.713]),SFVec3f([-1.544,1.036,3.534])])),
                                                                              texCoord_ : 
                                                                                TextureCoordinate(
                                                                                  point_ : MFVec2f([SFVec2f([0.0908,0.3999]),SFVec2f([0.0325,0.3879]),SFVec2f([0.0306,0.3835]),SFVec2f([0.1568,0.3845]),SFVec2f([0.3535,0.3812]),SFVec2f([0.3589,0.3783]),SFVec2f([0.2214,0.3832]),SFVec2f([0.1952,0.3809]),SFVec2f([0.3561,0.3769]),SFVec2f([0.0802,0.3883]),SFVec2f([0.1575,0.3746]),SFVec2f([0.3637,0.3704]),SFVec2f([0.356,0.3713]),SFVec2f([0.3581,0.3683]),SFVec2f([0.0256,0.3731]),SFVec2f([0.0261,0.363]),SFVec2f([0.2218,0.3729]),SFVec2f([0.1941,0.3712]),SFVec2f([0.0325,0.3879]),SFVec2f([0.0256,0.3731]),SFVec2f([0.0802,0.3883]),SFVec2f([0.0908,0.3999]),SFVec2f([0.3589,0.3783]),SFVec2f([0.3637,0.3704]),SFVec2f([0.3581,0.3683]),SFVec2f([0.3561,0.3769]),SFVec2f([0.1575,0.3746]),SFVec2f([0.1568,0.3845]),SFVec2f([0.356,0.3713]),SFVec2f([0.3535,0.3812]),SFVec2f([0.2214,0.3832]),SFVec2f([0.2218,0.3729]),SFVec2f([0.1952,0.3809]),SFVec2f([0.1941,0.3712]),SFVec2f([0.0306,0.3835]),SFVec2f([0.0261,0.363]),SFVec2f([0.3637,0.3704]),SFVec2f([0.2218,0.3729]),SFVec2f([0.1941,0.3712]),SFVec2f([0.1575,0.3746]),SFVec2f([0.0802,0.3883]),SFVec2f([0.0256,0.3731]),SFVec2f([0.0261,0.363]),SFVec2f([0.0256,0.3731]),SFVec2f([0.0802,0.3883]),SFVec2f([0.1575,0.3746]),SFVec2f([0.1941,0.3712]),SFVec2f([0.2218,0.3729]),SFVec2f([0.356,0.3713]),SFVec2f([0.3581,0.3683]),SFVec2f([0.0306,0.3835]),SFVec2f([0.0325,0.3879]),SFVec2f([0.0908,0.3999]),SFVec2f([0.1568,0.3845]),SFVec2f([0.1952,0.3809]),SFVec2f([0.2214,0.3832]),SFVec2f([0.3535,0.3812]),SFVec2f([0.3561,0.3769]),SFVec2f([0.3589,0.3783]),SFVec2f([0.2214,0.3832]),SFVec2f([0.1952,0.3809]),SFVec2f([0.1568,0.3845]),SFVec2f([0.0908,0.3999]),SFVec2f([0.0325,0.3879])])))))]),

                                                                HAnimJoint(
                                                                  name_ : SFString('vt7'),
                                                                  DEF_ : SFString('hanim_vt7'),
                                                                  center_ : SFVec3f([SFDouble(0), SFDouble(49.279999), SFDouble(-0.6117)]),
                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                  children_ : [
                                                                    HAnimSegment(
                                                                      name_ : SFString('t7'),
                                                                      DEF_ : SFString('hanim_t7'),
                                                                      children_ : [
                                                                        Transform(
                                                                          translation_ : SFVec3f([SFDouble(0), SFDouble(49.279999), SFDouble(-0.6117)]),
                                                                          child_ : 
                                                                            Shape(
                                                                              appearance_ : 
                                                                                Appearance(
                                                                                  material_ : 
                                                                                    Material(
                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                  texture_ : 
                                                                                    ImageTexture(
                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                              geometry_ : 
                                                                                IndexedFaceSet(
                                                                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(16), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(26), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(36), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(46), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(46), SFInt32(54), SFInt32(42), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(42), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(24), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(16), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(13), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(26), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(21), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(5), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(22), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(7), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(15), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(20), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(15), SFInt32(-1), SFInt32(12), SFInt32(27), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(12), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(27), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(25), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(18), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(6), SFInt32(-1)]),
                                                                                  creaseAngle_ : 3.14159,
                                                                                  texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(32), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(34), SFInt32(-1), SFInt32(27), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(62), SFInt32(-1), SFInt32(54), SFInt32(58), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(54), SFInt32(62), SFInt32(50), SFInt32(-1), SFInt32(52), SFInt32(54), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(50), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(5), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(25), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(32), SFInt32(-1), SFInt32(34), SFInt32(19), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(34), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(20), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(27), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(1), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(10), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(29), SFInt32(-1), SFInt32(26), SFInt32(21), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(26), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(35), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(18), SFInt32(-1), SFInt32(35), SFInt32(33), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(30), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(33), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(23), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(9), SFInt32(-1)]),
                                                                                  coord_ : 
                                                                                    Coordinate(
                                                                                      point_ : MFVec3f([SFVec3f([6.285,0.5819,1.319]),SFVec3f([2.062,0.5819,-2.618]),SFVec3f([4.101,0.5819,3.729]),SFVec3f([4.29,0.5819,-2.105]),SFVec3f([5.572,0.5819,-0.9516]),SFVec3f([1.585,0.5819,3.822]),SFVec3f([4.234,0.0006,3.898]),SFVec3f([1.538,0.0006,3.713]),SFVec3f([6.114,0.0315,1.306]),SFVec3f([1.987,0.0315,-2.592]),SFVec3f([4.188,0.0315,-2.037]),SFVec3f([5.442,0.0315,-0.9006]),SFVec3f([-6.114,0.0315,1.306]),SFVec3f([-6.285,0.5819,1.319]),SFVec3f([-4.101,0.5819,3.729]),SFVec3f([-4.234,0.0006,3.898]),SFVec3f([-2.062,0.5819,-2.618]),SFVec3f([-1.987,0.0315,-2.592]),SFVec3f([0,0.0315,-2.622]),SFVec3f([0,0.5819,-2.665]),SFVec3f([-1.538,0.0006,3.713]),SFVec3f([-1.585,0.5819,3.822]),SFVec3f([0,0.5819,3.826]),SFVec3f([0,0.0006,3.713]),SFVec3f([-4.29,0.5819,-2.105]),SFVec3f([-4.188,0.0315,-2.037]),SFVec3f([-5.572,0.5819,-0.9516]),SFVec3f([-5.442,0.0315,-0.9006]),SFVec3f([2.035,0.9259,-2.406]),SFVec3f([0,0.9259,-2.453]),SFVec3f([-2.035,0.9259,-2.406]),SFVec3f([-4.189,0.9259,-1.911]),SFVec3f([-5.387,0.9259,-0.8326]),SFVec3f([-6.046,0.9259,1.267]),SFVec3f([-4.004,0.9259,3.52]),SFVec3f([-1.581,0.9259,3.609]),SFVec3f([0,0.9259,3.614]),SFVec3f([1.581,0.9259,3.609]),SFVec3f([4.004,0.9259,3.52]),SFVec3f([6.046,0.9259,1.267]),SFVec3f([5.387,0.9259,-0.8326]),SFVec3f([4.189,0.9259,-1.911]),SFVec3f([1.524,-0.369,3.422]),SFVec3f([0,-0.369,3.422]),SFVec3f([-1.524,-0.369,3.422]),SFVec3f([-4.074,-0.369,3.594]),SFVec3f([-5.798,-0.369,1.248]),SFVec3f([-5.183,-0.369,-0.7464]),SFVec3f([-4.029,-0.369,-1.779]),SFVec3f([-1.931,-0.369,-2.301]),SFVec3f([0,-0.369,-2.33]),SFVec3f([1.931,-0.369,-2.301]),SFVec3f([4.029,-0.369,-1.779]),SFVec3f([5.183,-0.369,-0.7464]),SFVec3f([5.798,-0.369,1.248]),SFVec3f([4.074,-0.369,3.594])])),
                                                                                  texCoord_ : 
                                                                                    TextureCoordinate(
                                                                                      point_ : MFVec2f([SFVec2f([0.0437,0.4075]),SFVec2f([0.2185,0.3912]),SFVec2f([0.3484,0.3944]),SFVec2f([0.1518,0.3905]),SFVec2f([0.1902,0.3894]),SFVec2f([0.3503,0.3879]),SFVec2f([0.3505,0.3886]),SFVec2f([0.0427,0.408]),SFVec2f([0.0961,0.4138]),SFVec2f([0.0908,0.3999]),SFVec2f([0.0325,0.3879]),SFVec2f([0.1568,0.3845]),SFVec2f([0.3535,0.3812]),SFVec2f([0.3589,0.3783]),SFVec2f([0.2214,0.3832]),SFVec2f([0.1952,0.3809]),SFVec2f([0.3561,0.3769]),SFVec2f([0.0306,0.3835]),SFVec2f([0.1568,0.3845]),SFVec2f([0.1518,0.3905]),SFVec2f([0.0961,0.4138]),SFVec2f([0.0908,0.3999]),SFVec2f([0.3503,0.3879]),SFVec2f([0.3589,0.3783]),SFVec2f([0.3561,0.3769]),SFVec2f([0.3505,0.3886]),SFVec2f([0.0325,0.3879]),SFVec2f([0.0437,0.4075]),SFVec2f([0.0427,0.408]),SFVec2f([0.0306,0.3835]),SFVec2f([0.3535,0.3812]),SFVec2f([0.3484,0.3944]),SFVec2f([0.2185,0.3912]),SFVec2f([0.2214,0.3832]),SFVec2f([0.1902,0.3894]),SFVec2f([0.1952,0.3809]),SFVec2f([0.3484,0.3944]),SFVec2f([0.3505,0.3886]),SFVec2f([0.3503,0.3879]),SFVec2f([0.2185,0.3912]),SFVec2f([0.1902,0.3894]),SFVec2f([0.1518,0.3905]),SFVec2f([0.0961,0.4138]),SFVec2f([0.0437,0.4075]),SFVec2f([0.0427,0.408]),SFVec2f([0.0437,0.4075]),SFVec2f([0.0961,0.4138]),SFVec2f([0.1518,0.3905]),SFVec2f([0.1902,0.3894]),SFVec2f([0.2185,0.3912]),SFVec2f([0.0325,0.3879]),SFVec2f([0.0306,0.3835]),SFVec2f([0.0325,0.3879]),SFVec2f([0.0908,0.3999]),SFVec2f([0.1568,0.3845]),SFVec2f([0.1952,0.3809]),SFVec2f([0.2214,0.3832]),SFVec2f([0.3535,0.3812]),SFVec2f([0.3561,0.3769]),SFVec2f([0.3589,0.3783]),SFVec2f([0.2214,0.3832]),SFVec2f([0.1952,0.3809]),SFVec2f([0.1568,0.3845]),SFVec2f([0.0908,0.3999])])))))]),

                                                                    HAnimJoint(
                                                                      name_ : SFString('vt6'),
                                                                      DEF_ : SFString('hanim_vt6'),
                                                                      center_ : SFVec3f([SFDouble(0), SFDouble(49.849998), SFDouble(-0.6117)]),
                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                      children_ : [
                                                                        HAnimSegment(
                                                                          name_ : SFString('t6'),
                                                                          DEF_ : SFString('hanim_t6'),
                                                                          children_ : [
                                                                            Transform(
                                                                              translation_ : SFVec3f([SFDouble(0), SFDouble(49.849998), SFDouble(-0.6117)]),
                                                                              child_ : 
                                                                                Shape(
                                                                                  appearance_ : 
                                                                                    Appearance(
                                                                                      material_ : 
                                                                                        Material(
                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                      texture_ : 
                                                                                        ImageTexture(
                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                  geometry_ : 
                                                                                    IndexedFaceSet(
                                                                                      coordIndex_ : MFInt32([SFInt32(12), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(12), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(25), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(3), SFInt32(25), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(25), SFInt32(16), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(17), SFInt32(-1), SFInt32(27), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(36), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(46), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(50), SFInt32(54), SFInt32(42), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(42), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(42), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(0), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(21), SFInt32(27), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(27), SFInt32(18), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(27), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(25), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(16), SFInt32(-1), SFInt32(25), SFInt32(3), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(23), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(14), SFInt32(-1), SFInt32(20), SFInt32(17), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(20), SFInt32(-1), SFInt32(17), SFInt32(26), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(17), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(26), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(22), SFInt32(-1)]),
                                                                                      creaseAngle_ : 3.14159,
                                                                                      texCoordIndex_ : MFInt32([SFInt32(17), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(17), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(22), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(58), SFInt32(62), SFInt32(50), SFInt32(-1), SFInt32(54), SFInt32(58), SFInt32(50), SFInt32(-1), SFInt32(52), SFInt32(54), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(50), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(1), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(29), SFInt32(-1), SFInt32(35), SFInt32(33), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(23), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(33), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(30), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(21), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(14), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(11), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(9), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(17), SFInt32(-1), SFInt32(31), SFInt32(18), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(31), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(25), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(32), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(22), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(27), SFInt32(-1)]),
                                                                                      coord_ : 
                                                                                        Coordinate(
                                                                                          point_ : MFVec3f([SFVec3f([1.937,0.6896,-2.644]),SFVec3f([6.192,0.6897,1.374]),SFVec3f([5.738,0.6897,-0.7614]),SFVec3f([1.615,0.6897,3.729]),SFVec3f([4.273,0.6897,-2.169]),SFVec3f([3.945,0.6897,3.53]),SFVec3f([6.285,0.0041,1.319]),SFVec3f([2.062,0.0041,-2.618]),SFVec3f([0,0.0041,3.826]),SFVec3f([4.101,0.0041,3.729]),SFVec3f([4.29,0.0041,-2.105]),SFVec3f([5.572,0.0041,-0.9516]),SFVec3f([1.585,0.0041,3.822]),SFVec3f([-1.585,0.0041,3.822]),SFVec3f([-4.101,0.0041,3.729]),SFVec3f([-3.945,0.6897,3.53]),SFVec3f([-1.615,0.6897,3.729]),SFVec3f([-5.572,0.0041,-0.9516]),SFVec3f([-5.738,0.6897,-0.7614]),SFVec3f([-6.192,0.6897,1.374]),SFVec3f([-6.285,0.0041,1.319]),SFVec3f([-1.937,0.6896,-2.644]),SFVec3f([-2.062,0.0041,-2.618]),SFVec3f([0,0.0041,-2.665]),SFVec3f([0,0.6896,-2.735]),SFVec3f([0,0.6897,3.756]),SFVec3f([-4.29,0.0041,-2.105]),SFVec3f([-4.273,0.6897,-2.169]),SFVec3f([1.603,1.033,3.489]),SFVec3f([3.84,1.033,3.298]),SFVec3f([5.929,1.033,1.293]),SFVec3f([5.518,1.033,-0.6393]),SFVec3f([4.157,1.033,-1.947]),SFVec3f([1.907,1.033,-2.405]),SFVec3f([0,1.033,-2.494]),SFVec3f([-1.907,1.033,-2.405]),SFVec3f([-4.157,1.033,-1.947]),SFVec3f([-5.518,1.033,-0.6393]),SFVec3f([-5.929,1.033,1.293]),SFVec3f([-3.84,1.033,3.298]),SFVec3f([-1.603,1.033,3.489]),SFVec3f([0,1.033,3.516]),SFVec3f([0,-0.2313,-2.425]),SFVec3f([2.032,-0.2313,-2.378]),SFVec3f([4.176,-0.2313,-1.885]),SFVec3f([5.362,-0.2313,-0.8168]),SFVec3f([6.015,-0.2313,1.26]),SFVec3f([3.991,-0.2313,3.492]),SFVec3f([1.581,-0.2313,3.581]),SFVec3f([0,-0.2313,3.586]),SFVec3f([-1.581,-0.2313,3.581]),SFVec3f([-3.991,-0.2313,3.492]),SFVec3f([-6.015,-0.2313,1.26]),SFVec3f([-5.362,-0.2313,-0.8168]),SFVec3f([-4.176,-0.2313,-1.885]),SFVec3f([-2.032,-0.2313,-2.378])])),
                                                                                      texCoord_ : 
                                                                                        TextureCoordinate(
                                                                                          point_ : MFVec2f([SFVec2f([0.3061,0.4256]),SFVec2f([0.3364,0.4029]),SFVec2f([0.1528,0.4078]),SFVec2f([0.1843,0.4071]),SFVec2f([0.055,0.4216]),SFVec2f([0.3325,0.4068]),SFVec2f([0.0482,0.4185]),SFVec2f([0.221,0.4256]),SFVec2f([0.1008,0.4259]),SFVec2f([0.1518,0.3905]),SFVec2f([0.3506,0.3865]),SFVec2f([0.3484,0.3944]),SFVec2f([0.0427,0.408]),SFVec2f([0.0961,0.4138]),SFVec2f([0.3437,0.3934]),SFVec2f([0.2185,0.3912]),SFVec2f([0.1902,0.3894]),SFVec2f([0.0437,0.4075]),SFVec2f([0.0437,0.4075]),SFVec2f([0.0961,0.4138]),SFVec2f([0.1008,0.4259]),SFVec2f([0.055,0.4216]),SFVec2f([0.1902,0.3894]),SFVec2f([0.1843,0.4071]),SFVec2f([0.1528,0.4078]),SFVec2f([0.1518,0.3905]),SFVec2f([0.3364,0.4029]),SFVec2f([0.3506,0.3865]),SFVec2f([0.3437,0.3934]),SFVec2f([0.3325,0.4068]),SFVec2f([0.0482,0.4185]),SFVec2f([0.0427,0.408]),SFVec2f([0.2185,0.3912]),SFVec2f([0.221,0.4256]),SFVec2f([0.3484,0.3944]),SFVec2f([0.3061,0.4256]),SFVec2f([0.055,0.4216]),SFVec2f([0.1008,0.4259]),SFVec2f([0.1528,0.4078]),SFVec2f([0.1843,0.4071]),SFVec2f([0.221,0.4256]),SFVec2f([0.3061,0.4256]),SFVec2f([0.3325,0.4068]),SFVec2f([0.3364,0.4029]),SFVec2f([0.221,0.4256]),SFVec2f([0.1843,0.4071]),SFVec2f([0.1528,0.4078]),SFVec2f([0.1008,0.4259]),SFVec2f([0.055,0.4216]),SFVec2f([0.0482,0.4185]),SFVec2f([0.3437,0.3934]),SFVec2f([0.3506,0.3865]),SFVec2f([0.2185,0.3912]),SFVec2f([0.1902,0.3894]),SFVec2f([0.1518,0.3905]),SFVec2f([0.0961,0.4138]),SFVec2f([0.0437,0.4075]),SFVec2f([0.0427,0.408]),SFVec2f([0.0437,0.4075]),SFVec2f([0.0961,0.4138]),SFVec2f([0.1518,0.3905]),SFVec2f([0.1902,0.3894]),SFVec2f([0.2185,0.3912]),SFVec2f([0.3484,0.3944])])))))]),

                                                                        HAnimJoint(
                                                                          name_ : SFString('vt5'),
                                                                          DEF_ : SFString('hanim_vt5'),
                                                                          center_ : SFVec3f([SFDouble(0), SFDouble(50.540001), SFDouble(-0.6117)]),
                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                          children_ : [
                                                                            HAnimSegment(
                                                                              name_ : SFString('t5'),
                                                                              DEF_ : SFString('hanim_t5'),
                                                                              children_ : [
                                                                                Transform(
                                                                                  translation_ : SFVec3f([SFDouble(0), SFDouble(50.540001), SFDouble(-0.6117)]),
                                                                                  child_ : 
                                                                                    Shape(
                                                                                      appearance_ : 
                                                                                        Appearance(
                                                                                          material_ : 
                                                                                            Material(
                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                          texture_ : 
                                                                                            ImageTexture(
                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                      geometry_ : 
                                                                                        IndexedFaceSet(
                                                                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(27), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(28), SFInt32(-1), SFInt32(36), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(46), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(42), SFInt32(-1), SFInt32(50), SFInt32(54), SFInt32(42), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(42), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(42), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(27), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(14), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(27), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(19), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(41), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(12), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(10), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(18), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(15), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(26), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(16), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(55), SFInt32(7), SFInt32(-1)]),
                                                                                          creaseAngle_ : 3.14159,
                                                                                          texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(63), SFInt32(50), SFInt32(-1), SFInt32(58), SFInt32(62), SFInt32(50), SFInt32(-1), SFInt32(54), SFInt32(58), SFInt32(50), SFInt32(-1), SFInt32(52), SFInt32(54), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(50), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(5), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(18), SFInt32(-1), SFInt32(35), SFInt32(33), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(30), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(33), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(29), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(25), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(8), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(13), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(32), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(20), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(11), SFInt32(-1)]),
                                                                                          coord_ : 
                                                                                            Coordinate(
                                                                                              point_ : MFVec3f([SFVec3f([1.811,0.6855,-2.67]),SFVec3f([5.903,0.6856,-0.5713]),SFVec3f([3.788,0.6856,3.331]),SFVec3f([1.646,0.6856,3.637]),SFVec3f([4.256,0.6856,-2.233]),SFVec3f([6.098,0.6856,1.429]),SFVec3f([1.937,0,-2.644]),SFVec3f([6.192,0.0001,1.374]),SFVec3f([5.738,0.0001,-0.7614]),SFVec3f([1.615,0.0001,3.729]),SFVec3f([0,0.0001,3.756]),SFVec3f([4.273,0.0001,-2.169]),SFVec3f([3.945,0.0001,3.53]),SFVec3f([0,0.6855,-2.804]),SFVec3f([-1.811,0.6855,-2.67]),SFVec3f([-1.937,0,-2.644]),SFVec3f([0,0,-2.735]),SFVec3f([0,0.6856,3.687]),SFVec3f([-1.615,0.0001,3.729]),SFVec3f([-1.646,0.6856,3.637]),SFVec3f([-3.788,0.6856,3.331]),SFVec3f([-3.945,0.0001,3.53]),SFVec3f([-6.192,0.0001,1.374]),SFVec3f([-6.098,0.6856,1.429]),SFVec3f([-5.903,0.6856,-0.5713]),SFVec3f([-5.738,0.0001,-0.7614]),SFVec3f([-4.273,0.0001,-2.169]),SFVec3f([-4.256,0.6856,-2.233]),SFVec3f([1.621,1.052,3.355]),SFVec3f([3.67,1.052,3.062]),SFVec3f([5.802,1.052,1.306]),SFVec3f([5.631,1.052,-0.4437]),SFVec3f([4.118,1.052,-1.97]),SFVec3f([1.776,1.052,-2.389]),SFVec3f([0,1.052,-2.52]),SFVec3f([-1.776,1.052,-2.389]),SFVec3f([-4.118,1.052,-1.97]),SFVec3f([-5.631,1.052,-0.4437]),SFVec3f([-5.802,1.052,1.306]),SFVec3f([-3.67,1.052,3.062]),SFVec3f([-1.621,1.052,3.355]),SFVec3f([0,1.052,3.404]),SFVec3f([3.821,-0.3346,3.256]),SFVec3f([1.601,-0.3346,3.447]),SFVec3f([0,-0.3346,3.474]),SFVec3f([-1.601,-0.3346,3.447]),SFVec3f([-3.821,-0.3346,3.256]),SFVec3f([-5.882,-0.3346,1.279]),SFVec3f([-5.479,-0.3346,-0.6177]),SFVec3f([-4.136,-0.3346,-1.908]),SFVec3f([-1.902,-0.3347,-2.363]),SFVec3f([0,-0.3347,-2.451]),SFVec3f([1.902,-0.3347,-2.363]),SFVec3f([4.136,-0.3346,-1.908]),SFVec3f([5.479,-0.3346,-0.6177]),SFVec3f([5.882,-0.3346,1.279])])),
                                                                                          texCoord_ : 
                                                                                            TextureCoordinate(
                                                                                              point_ : MFVec2f([SFVec2f([0.2236,0.46]),SFVec2f([0.2638,0.4568]),SFVec2f([0.3214,0.4203]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1784,0.4249]),SFVec2f([0.3223,0.4192]),SFVec2f([0.1055,0.438]),SFVec2f([0.0663,0.4356]),SFVec2f([0.0537,0.4289]),SFVec2f([0.3061,0.4256]),SFVec2f([0.3364,0.4029]),SFVec2f([0.1528,0.4078]),SFVec2f([0.1843,0.4071]),SFVec2f([0.055,0.4216]),SFVec2f([0.3325,0.4068]),SFVec2f([0.0482,0.4185]),SFVec2f([0.221,0.4256]),SFVec2f([0.1008,0.4259]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3223,0.4192]),SFVec2f([0.3364,0.4029]),SFVec2f([0.3325,0.4068]),SFVec2f([0.0537,0.4289]),SFVec2f([0.0482,0.4185]),SFVec2f([0.055,0.4216]),SFVec2f([0.0663,0.4356]),SFVec2f([0.1055,0.438]),SFVec2f([0.1008,0.4259]),SFVec2f([0.1528,0.4078]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1843,0.4071]),SFVec2f([0.221,0.4256]),SFVec2f([0.2236,0.46]),SFVec2f([0.3061,0.4256]),SFVec2f([0.2638,0.4568]),SFVec2f([0.0663,0.4356]),SFVec2f([0.1055,0.438]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1784,0.4249]),SFVec2f([0.2236,0.46]),SFVec2f([0.2638,0.4568]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3223,0.4192]),SFVec2f([0.2236,0.46]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1055,0.438]),SFVec2f([0.0663,0.4356]),SFVec2f([0.0537,0.4289]),SFVec2f([0.1008,0.4259]),SFVec2f([0.055,0.4216]),SFVec2f([0.0482,0.4185]),SFVec2f([0.055,0.4216]),SFVec2f([0.1008,0.4259]),SFVec2f([0.1528,0.4078]),SFVec2f([0.1843,0.4071]),SFVec2f([0.221,0.4256]),SFVec2f([0.3061,0.4256]),SFVec2f([0.3325,0.4068]),SFVec2f([0.3364,0.4029]),SFVec2f([0.221,0.4256]),SFVec2f([0.1843,0.4071]),SFVec2f([0.1528,0.4078])])))))]),

                                                                            HAnimJoint(
                                                                              name_ : SFString('vt4'),
                                                                              DEF_ : SFString('hanim_vt4'),
                                                                              center_ : SFVec3f([SFDouble(0), SFDouble(51.220001), SFDouble(-0.6117)]),
                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                              children_ : [
                                                                                HAnimSegment(
                                                                                  name_ : SFString('t4'),
                                                                                  DEF_ : SFString('hanim_t4'),
                                                                                  children_ : [
                                                                                    Transform(
                                                                                      translation_ : SFVec3f([SFDouble(0), SFDouble(51.220001), SFDouble(-0.6117)]),
                                                                                      child_ : 
                                                                                        Shape(
                                                                                          appearance_ : 
                                                                                            Appearance(
                                                                                              material_ : 
                                                                                                Material(
                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                              texture_ : 
                                                                                                ImageTexture(
                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                          geometry_ : 
                                                                                            IndexedFaceSet(
                                                                                              coordIndex_ : MFInt32([SFInt32(2), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(25), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(23), SFInt32(-1), SFInt32(14), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(42), SFInt32(-1), SFInt32(31), SFInt32(38), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(31), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(31), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(31), SFInt32(45), SFInt32(30), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(50), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(54), SFInt32(56), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(46), SFInt32(-1), SFInt32(54), SFInt32(58), SFInt32(46), SFInt32(-1), SFInt32(50), SFInt32(54), SFInt32(46), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(46), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(21), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(14), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(25), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(25), SFInt32(0), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(25), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(45), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(26), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(10), SFInt32(-1), SFInt32(26), SFInt32(18), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(26), SFInt32(-1), SFInt32(18), SFInt32(16), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(29), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(13), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(29), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(7), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(55), SFInt32(20), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(12), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(59), SFInt32(12), SFInt32(-1)]),
                                                                                              creaseAngle_ : 3.14159,
                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(0), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(34), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(21), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(41), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(41), SFInt32(44), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(52), SFInt32(-1), SFInt32(48), SFInt32(50), SFInt32(52), SFInt32(-1), SFInt32(41), SFInt32(48), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(41), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(41), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(41), SFInt32(55), SFInt32(40), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(63), SFInt32(64), SFInt32(-1), SFInt32(60), SFInt32(62), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(65), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(67), SFInt32(68), SFInt32(-1), SFInt32(64), SFInt32(66), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(69), SFInt32(56), SFInt32(-1), SFInt32(64), SFInt32(68), SFInt32(56), SFInt32(-1), SFInt32(60), SFInt32(64), SFInt32(56), SFInt32(-1), SFInt32(58), SFInt32(60), SFInt32(56), SFInt32(-1), SFInt32(57), SFInt32(58), SFInt32(56), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(6), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(28), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(36), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(33), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(21), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(37), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(51), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(34), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(24), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(55), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(15), SFInt32(-1), SFInt32(35), SFInt32(25), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(35), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(39), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(20), SFInt32(-1), SFInt32(38), SFInt32(30), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(62), SFInt32(38), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(63), SFInt32(30), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(64), SFInt32(26), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(65), SFInt32(17), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(66), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(67), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(69), SFInt32(-1), SFInt32(69), SFInt32(68), SFInt32(13), SFInt32(-1), SFInt32(18), SFInt32(14), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(69), SFInt32(18), SFInt32(-1)]),
                                                                                              coord_ : 
                                                                                                Coordinate(
                                                                                                  point_ : MFVec3f([SFVec3f([1.681,0.822,3.528]),SFVec3f([5.775,0.849,-0.9043]),SFVec3f([5.825,0.7894,1.521]),SFVec3f([3.585,0.9022,3.073]),SFVec3f([1.811,0.849,-2.505]),SFVec3f([4.284,0.849,-2.108]),SFVec3f([4.617,0.849,-2.072]),SFVec3f([1.811,0.0128,-2.67]),SFVec3f([5.903,0.0129,-0.5713]),SFVec3f([3.788,0.0129,3.331]),SFVec3f([1.646,0.0129,3.637]),SFVec3f([4.256,0.0129,-2.233]),SFVec3f([6.098,0.0129,1.429]),SFVec3f([-6.098,0.0129,1.429]),SFVec3f([-5.825,0.7894,1.521]),SFVec3f([-3.585,0.9022,3.073]),SFVec3f([-3.788,0.0129,3.331]),SFVec3f([-1.681,0.822,3.528]),SFVec3f([-1.646,0.0129,3.637]),SFVec3f([-1.811,0.0128,-2.67]),SFVec3f([0,0.0128,-2.804]),SFVec3f([0,0.849,-2.639]),SFVec3f([-1.811,0.849,-2.505]),SFVec3f([-4.256,0.0129,-2.233]),SFVec3f([-4.284,0.849,-2.108]),SFVec3f([0,0.822,3.616]),SFVec3f([0,0.0129,3.687]),SFVec3f([-4.617,0.849,-2.072]),SFVec3f([-5.775,0.849,-0.9043]),SFVec3f([-5.903,0.0129,-0.5713]),SFVec3f([3.461,1.375,2.795]),SFVec3f([5.523,1.375,1.367]),SFVec3f([5.479,1.375,-0.7788]),SFVec3f([4.48,1.375,-1.787]),SFVec3f([4.244,1.375,-1.812]),SFVec3f([1.776,1.375,-2.209]),SFVec3f([0,1.375,-2.34]),SFVec3f([-1.776,1.375,-2.209]),SFVec3f([-4.244,1.375,-1.812]),SFVec3f([-4.48,1.375,-1.787]),SFVec3f([-5.479,1.375,-0.7788]),SFVec3f([-5.523,1.375,1.367]),SFVec3f([-3.461,1.375,2.795]),SFVec3f([-1.638,1.375,3.231]),SFVec3f([0,1.375,3.317]),SFVec3f([1.638,1.375,3.231]),SFVec3f([3.663,-0.3222,3.047]),SFVec3f([1.62,-0.3222,3.339]),SFVec3f([0,-0.3222,3.388]),SFVec3f([-1.62,-0.3222,3.339]),SFVec3f([-3.663,-0.3222,3.047]),SFVec3f([-5.786,-0.3222,1.299]),SFVec3f([-5.616,-0.3222,-0.4366]),SFVec3f([-4.111,-0.3222,-1.955]),SFVec3f([-1.774,-0.3222,-2.373]),SFVec3f([0,-0.3222,-2.505]),SFVec3f([1.774,-0.3222,-2.373]),SFVec3f([4.111,-0.3222,-1.955]),SFVec3f([5.616,-0.3222,-0.4366]),SFVec3f([5.786,-0.3222,1.299])])),
                                                                                              texCoord_ : 
                                                                                                TextureCoordinate(
                                                                                                  point_ : MFVec2f([SFVec2f([0.0639,0.4488]),SFVec2f([0.0777,0.4495]),SFVec2f([0.1846,0.4438]),SFVec2f([0.1504,0.4433]),SFVec2f([0.1107,0.4532]),SFVec2f([0.2633,0.457]),SFVec2f([0.3222,0.4193]),SFVec2f([0.3214,0.4203]),SFVec2f([0.2198,0.4731]),SFVec2f([0.2144,0.4674]),SFVec2f([0.3223,0.4192]),SFVec2f([0.2638,0.4568]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1055,0.438]),SFVec2f([0.0663,0.4356]),SFVec2f([0.2236,0.46]),SFVec2f([0.3214,0.4203]),SFVec2f([0.1538,0.4251]),SFVec2f([0.0537,0.4289]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1504,0.4433]),SFVec2f([0.1107,0.4532]),SFVec2f([0.1055,0.438]),SFVec2f([0.0777,0.4495]),SFVec2f([0.0663,0.4356]),SFVec2f([0.3223,0.4192]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3222,0.4193]),SFVec2f([0.2236,0.46]),SFVec2f([0.2638,0.4568]),SFVec2f([0.2633,0.457]),SFVec2f([0.2198,0.4731]),SFVec2f([0.0639,0.4488]),SFVec2f([0.0537,0.4289]),SFVec2f([0.2144,0.4674]),SFVec2f([0.1846,0.4438]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1107,0.4532]),SFVec2f([0.1504,0.4433]),SFVec2f([0.1846,0.4438]),SFVec2f([0.2144,0.4674]),SFVec2f([0.2198,0.4731]),SFVec2f([0.2633,0.457]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3222,0.4193]),SFVec2f([0.2198,0.4731]),SFVec2f([0.2144,0.4674]),SFVec2f([0.1846,0.4438]),SFVec2f([0.1504,0.4433]),SFVec2f([0.1107,0.4532]),SFVec2f([0.0777,0.4495]),SFVec2f([0.0639,0.4488]),SFVec2f([0.0777,0.4495]),SFVec2f([0.1055,0.438]),SFVec2f([0.0663,0.4356]),SFVec2f([0.0537,0.4289]),SFVec2f([0.0663,0.4356]),SFVec2f([0.1055,0.438]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1784,0.4249]),SFVec2f([0.2236,0.46]),SFVec2f([0.2638,0.4568]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3223,0.4192]),SFVec2f([0.2236,0.46]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1538,0.4251])])))))]),

                                                                                HAnimJoint(
                                                                                  name_ : SFString('vt3'),
                                                                                  DEF_ : SFString('hanim_vt3'),
                                                                                  center_ : SFVec3f([SFDouble(0), SFDouble(52.040001), SFDouble(-0.6117)]),
                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                  children_ : [
                                                                                    HAnimSegment(
                                                                                      name_ : SFString('t3'),
                                                                                      DEF_ : SFString('hanim_t3'),
                                                                                      children_ : [
                                                                                        Transform(
                                                                                          translation_ : SFVec3f([SFDouble(0), SFDouble(52.040001), SFDouble(-0.6117)]),
                                                                                          child_ : 
                                                                                            Shape(
                                                                                              appearance_ : 
                                                                                                Appearance(
                                                                                                  material_ : 
                                                                                                    Material(
                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                  texture_ : 
                                                                                                    ImageTexture(
                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                              geometry_ : 
                                                                                                IndexedFaceSet(
                                                                                                  coordIndex_ : MFInt32([SFInt32(16), SFInt32(15), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(16), SFInt32(-1), SFInt32(0), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(49), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(8), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(62), SFInt32(17), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(15), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(18), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(48), SFInt32(-1), SFInt32(40), SFInt32(36), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(45), SFInt32(-1), SFInt32(49), SFInt32(35), SFInt32(16), SFInt32(-1), SFInt32(35), SFInt32(39), SFInt32(34), SFInt32(-1), SFInt32(38), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(43), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(46), SFInt32(43), SFInt32(-1), SFInt32(46), SFInt32(50), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(41), SFInt32(46), SFInt32(-1), SFInt32(41), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(18), SFInt32(41), SFInt32(-1), SFInt32(35), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(39), SFInt32(35), SFInt32(-1), SFInt32(39), SFInt32(54), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(38), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(47), SFInt32(38), SFInt32(-1), SFInt32(47), SFInt32(57), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(43), SFInt32(47), SFInt32(-1), SFInt32(37), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(40), SFInt32(37), SFInt32(-1), SFInt32(40), SFInt32(58), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(36), SFInt32(60), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(15), SFInt32(36), SFInt32(-1), SFInt32(17), SFInt32(62), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(42), SFInt32(17), SFInt32(-1), SFInt32(42), SFInt32(61), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(45), SFInt32(42), SFInt32(-1), SFInt32(45), SFInt32(63), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(44), SFInt32(64), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(48), SFInt32(44), SFInt32(-1), SFInt32(48), SFInt32(65), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(37), SFInt32(48), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(60), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(65), SFInt32(-1), SFInt32(29), SFInt32(58), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(64), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(65), SFInt32(63), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(62), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(65), SFInt32(62), SFInt32(33), SFInt32(-1), SFInt32(29), SFInt32(65), SFInt32(33), SFInt32(-1), SFInt32(27), SFInt32(29), SFInt32(33), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(26), SFInt32(-1)]),
                                                                                                  creaseAngle_ : 3.14159,
                                                                                                  texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(14), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(29), SFInt32(7), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(13), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(21), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(38), SFInt32(14), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(40), SFInt32(43), SFInt32(39), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(57), SFInt32(56), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(57), SFInt32(-1), SFInt32(47), SFInt32(43), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(58), SFInt32(54), SFInt32(-1), SFInt32(60), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(41), SFInt32(46), SFInt32(40), SFInt32(-1), SFInt32(45), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(52), SFInt32(62), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(55), SFInt32(52), SFInt32(-1), SFInt32(55), SFInt32(61), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(59), SFInt32(55), SFInt32(-1), SFInt32(50), SFInt32(63), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(41), SFInt32(66), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(46), SFInt32(41), SFInt32(-1), SFInt32(46), SFInt32(65), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(45), SFInt32(67), SFInt32(68), SFInt32(-1), SFInt32(68), SFInt32(56), SFInt32(45), SFInt32(-1), SFInt32(56), SFInt32(68), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(52), SFInt32(56), SFInt32(-1), SFInt32(44), SFInt32(70), SFInt32(69), SFInt32(-1), SFInt32(69), SFInt32(47), SFInt32(44), SFInt32(-1), SFInt32(47), SFInt32(69), SFInt32(71), SFInt32(-1), SFInt32(71), SFInt32(43), SFInt32(47), SFInt32(-1), SFInt32(43), SFInt32(71), SFInt32(72), SFInt32(-1), SFInt32(72), SFInt32(39), SFInt32(43), SFInt32(-1), SFInt32(48), SFInt32(74), SFInt32(73), SFInt32(-1), SFInt32(73), SFInt32(51), SFInt32(48), SFInt32(-1), SFInt32(58), SFInt32(73), SFInt32(75), SFInt32(-1), SFInt32(75), SFInt32(54), SFInt32(58), SFInt32(-1), SFInt32(54), SFInt32(75), SFInt32(76), SFInt32(-1), SFInt32(76), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(53), SFInt32(76), SFInt32(77), SFInt32(-1), SFInt32(77), SFInt32(57), SFInt32(53), SFInt32(-1), SFInt32(57), SFInt32(77), SFInt32(70), SFInt32(-1), SFInt32(70), SFInt32(44), SFInt32(57), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(71), SFInt32(69), SFInt32(-1), SFInt32(69), SFInt32(70), SFInt32(77), SFInt32(-1), SFInt32(33), SFInt32(69), SFInt32(77), SFInt32(-1), SFInt32(77), SFInt32(76), SFInt32(75), SFInt32(-1), SFInt32(75), SFInt32(73), SFInt32(74), SFInt32(-1), SFInt32(77), SFInt32(75), SFInt32(74), SFInt32(-1), SFInt32(74), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(74), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(77), SFInt32(74), SFInt32(38), SFInt32(-1), SFInt32(33), SFInt32(77), SFInt32(38), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(38), SFInt32(-1), SFInt32(31), SFInt32(38), SFInt32(30), SFInt32(-1)]),
                                                                                                  coord_ : 
                                                                                                    Coordinate(
                                                                                                      point_ : MFVec3f([SFVec3f([1.713,0.7435,3.428]),SFVec3f([5.378,1.242,1.672]),SFVec3f([4.324,1.242,-1.927]),SFVec3f([5.141,1.242,-1.839]),SFVec3f([5.589,1.242,-1.387]),SFVec3f([3.32,1.242,2.736]),SFVec3f([1.811,1.242,-2.266]),SFVec3f([1.593,1.064,4.098]),SFVec3f([1.681,0.002,3.528]),SFVec3f([5.775,0.029,-0.9043]),SFVec3f([5.825,-0.0306,1.521]),SFVec3f([3.585,0.0822,3.073]),SFVec3f([1.811,0.029,-2.505]),SFVec3f([4.284,0.029,-2.108]),SFVec3f([4.617,0.029,-2.072]),SFVec3f([0,0.002,3.616]),SFVec3f([0,0.3874,4.121]),SFVec3f([0,0.029,-2.639]),SFVec3f([0,1.242,-2.4]),SFVec3f([5.018,1.668,-1.583]),SFVec3f([4.292,1.668,-1.661]),SFVec3f([1.783,1.668,-2]),SFVec3f([1.521,1.668,3.814]),SFVec3f([3.175,1.668,2.51]),SFVec3f([5.121,1.668,1.504]),SFVec3f([5.314,1.668,-1.285]),SFVec3f([5.669,-0.44,1.408]),SFVec3f([3.545,-0.44,2.879]),SFVec3f([1.676,-0.44,3.326]),SFVec3f([0,-0.44,3.413]),SFVec3f([1.817,-0.44,-2.289]),SFVec3f([4.335,-0.44,-1.884]),SFVec3f([4.586,-0.44,-1.857]),SFVec3f([5.623,-0.44,-0.8114]),SFVec3f([-1.713,0.7435,3.428]),SFVec3f([-1.593,1.064,4.098]),SFVec3f([-1.681,0.002,3.528]),SFVec3f([-5.825,-0.0306,1.521]),SFVec3f([-5.378,1.242,1.672]),SFVec3f([-3.32,1.242,2.736]),SFVec3f([-3.585,0.0822,3.073]),SFVec3f([-1.811,1.242,-2.266]),SFVec3f([-1.811,0.029,-2.505]),SFVec3f([-5.141,1.242,-1.839]),SFVec3f([-4.617,0.029,-2.072]),SFVec3f([-4.284,0.029,-2.108]),SFVec3f([-4.324,1.242,-1.927]),SFVec3f([-5.589,1.242,-1.387]),SFVec3f([-5.775,0.029,-0.9043]),SFVec3f([0,1.15,3.82]),SFVec3f([-4.292,1.668,-1.661]),SFVec3f([-5.018,1.668,-1.583]),SFVec3f([-1.783,1.668,-2]),SFVec3f([0,1.668,-2.132]),SFVec3f([-3.175,1.668,2.51]),SFVec3f([-1.521,1.668,3.814]),SFVec3f([-5.121,1.668,1.504]),SFVec3f([-5.314,1.668,-1.285]),SFVec3f([-3.545,-0.44,2.879]),SFVec3f([-5.669,-0.44,1.408]),SFVec3f([-1.676,-0.44,3.326]),SFVec3f([-1.817,-0.44,-2.289]),SFVec3f([0,-0.44,-2.423]),SFVec3f([-4.335,-0.44,-1.884]),SFVec3f([-4.586,-0.44,-1.857]),SFVec3f([-5.623,-0.44,-0.8114])])),
                                                                                                  texCoord_ : 
                                                                                                    TextureCoordinate(
                                                                                                      point_ : MFVec2f([SFVec2f([0.0763,0.4945]),SFVec2f([0.0877,0.4617]),SFVec2f([0.0525,0.4715]),SFVec2f([0.0399,0.5407]),SFVec2f([0.1491,0.4682]),SFVec2f([0.2169,0.492]),SFVec2f([0.2035,0.4795]),SFVec2f([0.1915,0.4696]),SFVec2f([0.1178,0.4708]),SFVec2f([0.2635,0.4569]),SFVec2f([0.3223,0.4193]),SFVec2f([0.3214,0.4203]),SFVec2f([0.0639,0.4488]),SFVec2f([0.0777,0.4495]),SFVec2f([0.1846,0.4438]),SFVec2f([0.1504,0.4433]),SFVec2f([0.1107,0.4532]),SFVec2f([0.3222,0.4193]),SFVec2f([0.2633,0.457]),SFVec2f([0.3214,0.4203]),SFVec2f([0.2198,0.4731]),SFVec2f([0.2144,0.4674]),SFVec2f([0.2035,0.4795]),SFVec2f([0.2169,0.492]),SFVec2f([0.2635,0.4569]),SFVec2f([0.3214,0.4203]),SFVec2f([0.0763,0.4945]),SFVec2f([0.1178,0.4708]),SFVec2f([0.1491,0.4682]),SFVec2f([0.1915,0.4696]),SFVec2f([0.1504,0.4433]),SFVec2f([0.1107,0.4532]),SFVec2f([0.0777,0.4495]),SFVec2f([0.0639,0.4488]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3222,0.4193]),SFVec2f([0.2198,0.4731]),SFVec2f([0.2144,0.4674]),SFVec2f([0.1846,0.4438]),SFVec2f([0.0639,0.4488]),SFVec2f([0.0877,0.4617]),SFVec2f([0.0763,0.4945]),SFVec2f([0.0525,0.4715]),SFVec2f([0.0777,0.4495]),SFVec2f([0.1504,0.4433]),SFVec2f([0.1491,0.4682]),SFVec2f([0.1178,0.4708]),SFVec2f([0.1107,0.4532]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3223,0.4193]),SFVec2f([0.3222,0.4193]),SFVec2f([0.2035,0.4795]),SFVec2f([0.2144,0.4674]),SFVec2f([0.2198,0.4731]),SFVec2f([0.2169,0.492]),SFVec2f([0.1915,0.4696]),SFVec2f([0.1846,0.4438]),SFVec2f([0.2633,0.457]),SFVec2f([0.2635,0.4569]),SFVec2f([0.0399,0.5407]),SFVec2f([0.2169,0.492]),SFVec2f([0.2035,0.4795]),SFVec2f([0.2635,0.4569]),SFVec2f([0.3214,0.4203]),SFVec2f([0.1178,0.4708]),SFVec2f([0.0763,0.4945]),SFVec2f([0.1491,0.4682]),SFVec2f([0.1915,0.4696]),SFVec2f([0.1107,0.4532]),SFVec2f([0.1504,0.4433]),SFVec2f([0.0777,0.4495]),SFVec2f([0.0639,0.4488]),SFVec2f([0.3222,0.4193]),SFVec2f([0.3214,0.4203]),SFVec2f([0.2198,0.4731]),SFVec2f([0.2144,0.4674]),SFVec2f([0.1846,0.4438])])))))]),

                                                                                    HAnimJoint(
                                                                                      name_ : SFString('vt2'),
                                                                                      DEF_ : SFString('hanim_vt2'),
                                                                                      center_ : SFVec3f([SFDouble(0), SFDouble(53.139999), SFDouble(-0.6127)]),
                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                      children_ : [
                                                                                        HAnimSegment(
                                                                                          name_ : SFString('t2'),
                                                                                          DEF_ : SFString('hanim_t2'),
                                                                                          children_ : [
                                                                                            Transform(
                                                                                              translation_ : SFVec3f([SFDouble(0), SFDouble(53.139999), SFDouble(-0.6127)]),
                                                                                              child_ : 
                                                                                                Shape(
                                                                                                  appearance_ : 
                                                                                                    Appearance(
                                                                                                      material_ : 
                                                                                                        Material(
                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                      texture_ : 
                                                                                                        ImageTexture(
                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                  geometry_ : 
                                                                                                    IndexedFaceSet(
                                                                                                      coordIndex_ : MFInt32([SFInt32(1), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(17), SFInt32(0), SFInt32(19), SFInt32(-1), SFInt32(0), SFInt32(17), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(20), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(20), SFInt32(-1), SFInt32(2), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(17), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(3), SFInt32(-1), SFInt32(51), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(12), SFInt32(51), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(31), SFInt32(19), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(65), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(14), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(32), SFInt32(18), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(39), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(41), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(40), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(37), SFInt32(-1), SFInt32(20), SFInt32(4), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(39), SFInt32(20), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(43), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(47), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(43), SFInt32(49), SFInt32(-1), SFInt32(50), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(3), SFInt32(21), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(3), SFInt32(-1), SFInt32(51), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(4), SFInt32(51), SFInt32(-1), SFInt32(42), SFInt32(44), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(50), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(44), SFInt32(42), SFInt32(-1), SFInt32(44), SFInt32(52), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(43), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(49), SFInt32(43), SFInt32(-1), SFInt32(49), SFInt32(55), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(3), SFInt32(49), SFInt32(-1), SFInt32(46), SFInt32(58), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(45), SFInt32(57), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(47), SFInt32(45), SFInt32(-1), SFInt32(47), SFInt32(59), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(50), SFInt32(47), SFInt32(-1), SFInt32(50), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(41), SFInt32(50), SFInt32(-1), SFInt32(41), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(36), SFInt32(41), SFInt32(-1), SFInt32(36), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(21), SFInt32(65), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(48), SFInt32(21), SFInt32(-1), SFInt32(48), SFInt32(64), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(46), SFInt32(48), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(63), SFInt32(62), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(59), SFInt32(57), SFInt32(-1), SFInt32(62), SFInt32(60), SFInt32(57), SFInt32(-1), SFInt32(62), SFInt32(57), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(64), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(32), SFInt32(26), SFInt32(-1), SFInt32(58), SFInt32(65), SFInt32(26), SFInt32(-1), SFInt32(62), SFInt32(58), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(62), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(26), SFInt32(-1)]),
                                                                                                      creaseAngle_ : 3.14159,
                                                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(22), SFInt32(3), SFInt32(26), SFInt32(-1), SFInt32(3), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(27), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(27), SFInt32(-1), SFInt32(5), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(13), SFInt32(-1), SFInt32(18), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(11), SFInt32(-1), SFInt32(17), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(8), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(14), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(12), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(41), SFInt32(23), SFInt32(-1), SFInt32(42), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(48), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(52), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(49), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(46), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(48), SFInt32(55), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(55), SFInt32(-1), SFInt32(56), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(57), SFInt32(58), SFInt32(60), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(56), SFInt32(62), SFInt32(-1), SFInt32(63), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(65), SFInt32(64), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(66), SFInt32(65), SFInt32(-1), SFInt32(68), SFInt32(44), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(69), SFInt32(68), SFInt32(-1), SFInt32(53), SFInt32(57), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(63), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(71), SFInt32(70), SFInt32(-1), SFInt32(70), SFInt32(57), SFInt32(53), SFInt32(-1), SFInt32(57), SFInt32(70), SFInt32(72), SFInt32(-1), SFInt32(72), SFInt32(56), SFInt32(57), SFInt32(-1), SFInt32(56), SFInt32(72), SFInt32(73), SFInt32(-1), SFInt32(73), SFInt32(62), SFInt32(56), SFInt32(-1), SFInt32(66), SFInt32(73), SFInt32(74), SFInt32(-1), SFInt32(74), SFInt32(65), SFInt32(66), SFInt32(-1), SFInt32(59), SFInt32(76), SFInt32(75), SFInt32(-1), SFInt32(75), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(58), SFInt32(75), SFInt32(77), SFInt32(-1), SFInt32(77), SFInt32(60), SFInt32(58), SFInt32(-1), SFInt32(60), SFInt32(77), SFInt32(78), SFInt32(-1), SFInt32(78), SFInt32(63), SFInt32(60), SFInt32(-1), SFInt32(63), SFInt32(78), SFInt32(79), SFInt32(-1), SFInt32(79), SFInt32(52), SFInt32(63), SFInt32(-1), SFInt32(52), SFInt32(79), SFInt32(80), SFInt32(-1), SFInt32(80), SFInt32(45), SFInt32(52), SFInt32(-1), SFInt32(45), SFInt32(80), SFInt32(81), SFInt32(-1), SFInt32(81), SFInt32(55), SFInt32(45), SFInt32(-1), SFInt32(64), SFInt32(83), SFInt32(82), SFInt32(-1), SFInt32(82), SFInt32(67), SFInt32(64), SFInt32(-1), SFInt32(61), SFInt32(82), SFInt32(76), SFInt32(-1), SFInt32(76), SFInt32(59), SFInt32(61), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(80), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(80), SFInt32(-1), SFInt32(80), SFInt32(79), SFInt32(78), SFInt32(-1), SFInt32(78), SFInt32(77), SFInt32(75), SFInt32(-1), SFInt32(80), SFInt32(78), SFInt32(75), SFInt32(-1), SFInt32(80), SFInt32(75), SFInt32(76), SFInt32(-1), SFInt32(76), SFInt32(82), SFInt32(83), SFInt32(-1), SFInt32(83), SFInt32(41), SFInt32(33), SFInt32(-1), SFInt32(76), SFInt32(83), SFInt32(33), SFInt32(-1), SFInt32(80), SFInt32(76), SFInt32(33), SFInt32(-1), SFInt32(37), SFInt32(80), SFInt32(33), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(33), SFInt32(-1)]),
                                                                                                      coord_ : 
                                                                                                        Coordinate(
                                                                                                          point_ : MFVec3f([SFVec3f([3.131,0.4823,3.66]),SFVec3f([1.373,0.5334,3.428]),SFVec3f([1.38,0.5334,3.897]),SFVec3f([0,0.9032,-2.25]),SFVec3f([0,-0.0071,3.661]),SFVec3f([2.043,1.067,3.089]),SFVec3f([5.086,0.9718,1.771]),SFVec3f([2.245,1.223,3.581]),SFVec3f([1.811,0.9032,-2.116]),SFVec3f([5.472,0.9071,-1.692]),SFVec3f([4.349,0.906,-1.813]),SFVec3f([3.805,1.161,2.723]),SFVec3f([1.182,1.067,2.765]),SFVec3f([5.378,0.1425,1.672]),SFVec3f([4.324,0.1425,-1.927]),SFVec3f([5.141,0.1425,-1.839]),SFVec3f([5.589,0.1425,-1.387]),SFVec3f([3.32,0.1425,2.736]),SFVec3f([1.811,0.1425,-2.266]),SFVec3f([1.593,-0.036,4.098]),SFVec3f([0,0.0508,3.82]),SFVec3f([0,0.1425,-2.4]),SFVec3f([4.884,1.323,1.266]),SFVec3f([4.971,1.271,-1.4]),SFVec3f([4.325,1.271,-1.641]),SFVec3f([1.791,1.268,-1.912]),SFVec3f([4.298,-0.4521,-1.715]),SFVec3f([5.043,-0.4521,-1.635]),SFVec3f([5.369,-0.4521,-1.306]),SFVec3f([5.173,-0.4521,1.538]),SFVec3f([3.204,-0.4521,2.555]),SFVec3f([1.535,-0.4521,2.956]),SFVec3f([1.789,-0.4521,-2.054]),SFVec3f([-1.373,0.5334,3.428]),SFVec3f([-2.043,1.067,3.089]),SFVec3f([-1.182,1.067,2.765]),SFVec3f([-1.593,-0.036,4.098]),SFVec3f([-3.131,0.4823,3.66]),SFVec3f([-2.245,1.223,3.581]),SFVec3f([-1.38,0.5334,3.897]),SFVec3f([-3.805,1.161,2.723]),SFVec3f([-3.32,0.1425,2.736]),SFVec3f([-5.086,0.9718,1.771]),SFVec3f([-4.349,0.906,-1.813]),SFVec3f([-5.472,0.9071,-1.692]),SFVec3f([-5.141,0.1425,-1.839]),SFVec3f([-4.324,0.1425,-1.927]),SFVec3f([-5.589,0.1425,-1.387]),SFVec3f([-1.811,0.1425,-2.266]),SFVec3f([-1.811,0.9032,-2.116]),SFVec3f([-5.378,0.1425,1.672]),SFVec3f([0,1.067,2.596]),SFVec3f([-4.971,1.271,-1.4]),SFVec3f([-4.884,1.323,1.266]),SFVec3f([-4.325,1.271,-1.641]),SFVec3f([-1.791,1.268,-1.912]),SFVec3f([0,1.268,-2.03]),SFVec3f([-5.043,-0.4521,-1.635]),SFVec3f([-4.298,-0.4521,-1.715]),SFVec3f([-5.369,-0.4521,-1.306]),SFVec3f([-5.173,-0.4521,1.538]),SFVec3f([-3.204,-0.4521,2.555]),SFVec3f([-1.535,-0.4521,2.956]),SFVec3f([0,-0.4521,3.603]),SFVec3f([-1.789,-0.4521,-2.054]),SFVec3f([0,-0.4521,-2.186])])),
                                                                                                      texCoord_ : 
                                                                                                        TextureCoordinate(
                                                                                                          point_ : MFVec2f([SFVec2f([0.4473,0.6921]),SFVec2f([0.4449,0.6914]),SFVec2f([0.4513,0.6918]),SFVec2f([0.1025,0.5076]),SFVec2f([0.0865,0.5614]),SFVec2f([0.0652,0.5465]),SFVec2f([0.0786,0.5849]),SFVec2f([0.0516,0.5759]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1963,0.4863]),SFVec2f([0.0346,0.5664]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3223,0.4192]),SFVec2f([0.2638,0.4568]),SFVec2f([0.2146,0.5039]),SFVec2f([0.1227,0.5144]),SFVec2f([0.4468,0.6898]),SFVec2f([0.4495,0.6881]),SFVec2f([0.1491,0.4682]),SFVec2f([0.2169,0.492]),SFVec2f([0.2035,0.4795]),SFVec2f([0.1915,0.4696]),SFVec2f([0.1178,0.4708]),SFVec2f([0.2635,0.4569]),SFVec2f([0.3223,0.4193]),SFVec2f([0.3214,0.4203]),SFVec2f([0.0763,0.4945]),SFVec2f([0.0399,0.5407]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1963,0.4863]),SFVec2f([0.2146,0.5039]),SFVec2f([0.2638,0.4568]),SFVec2f([0.3214,0.4203]),SFVec2f([0.2169,0.492]),SFVec2f([0.2035,0.4795]),SFVec2f([0.1915,0.4696]),SFVec2f([0.1491,0.4682]),SFVec2f([0.1178,0.4708]),SFVec2f([0.0763,0.4945]),SFVec2f([0.0399,0.5407]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3223,0.4193]),SFVec2f([0.4473,0.6921]),SFVec2f([0.4449,0.6914]),SFVec2f([0.4468,0.6898]),SFVec2f([0.0763,0.4945]),SFVec2f([0.1025,0.5076]),SFVec2f([0.0865,0.5614]),SFVec2f([0.0652,0.5465]),SFVec2f([0.1227,0.5144]),SFVec2f([0.0786,0.5849]),SFVec2f([0.0516,0.5759]),SFVec2f([0.1178,0.4708]),SFVec2f([0.1474,0.4856]),SFVec2f([0.0346,0.5664]),SFVec2f([0.0399,0.5407]),SFVec2f([0.2146,0.5039]),SFVec2f([0.1963,0.4863]),SFVec2f([0.2035,0.4795]),SFVec2f([0.2169,0.492]),SFVec2f([0.1915,0.4696]),SFVec2f([0.2635,0.4569]),SFVec2f([0.2638,0.4568]),SFVec2f([0.1491,0.4682]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3214,0.4203]),SFVec2f([0.3223,0.4192]),SFVec2f([0.3223,0.4193]),SFVec2f([0.4495,0.6881]),SFVec2f([0.4513,0.6918]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1474,0.4856]),SFVec2f([0.2146,0.5039]),SFVec2f([0.2638,0.4568]),SFVec2f([0.3214,0.4203]),SFVec2f([0.2035,0.4795]),SFVec2f([0.2169,0.492]),SFVec2f([0.1915,0.4696]),SFVec2f([0.1491,0.4682]),SFVec2f([0.1178,0.4708]),SFVec2f([0.0763,0.4945]),SFVec2f([0.0399,0.5407]),SFVec2f([0.3223,0.4193]),SFVec2f([0.3214,0.4203])])))))]),

                                                                                        HAnimJoint(
                                                                                          name_ : SFString('vt1'),
                                                                                          DEF_ : SFString('hanim_vt1'),
                                                                                          center_ : SFVec3f([SFDouble(0), SFDouble(54.200001), SFDouble(-0.6117)]),
                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                          children_ : [
                                                                                            HAnimSegment(
                                                                                              name_ : SFString('t1'),
                                                                                              DEF_ : SFString('hanim_t1'),
                                                                                              children_ : [
                                                                                                Transform(
                                                                                                  translation_ : SFVec3f([SFDouble(0), SFDouble(54.200001), SFDouble(-0.6117)]),
                                                                                                  child_ : 
                                                                                                    Shape(
                                                                                                      appearance_ : 
                                                                                                        Appearance(
                                                                                                          material_ : 
                                                                                                            Material(
                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                          texture_ : 
                                                                                                            ImageTexture(
                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                      geometry_ : 
                                                                                                        IndexedFaceSet(
                                                                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(27), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(43), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(43), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(35), SFInt32(26), SFInt32(12), SFInt32(-1), SFInt32(43), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(72), SFInt32(28), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(29), SFInt32(72), SFInt32(8), SFInt32(-1), SFInt32(26), SFInt32(35), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(49), SFInt32(26), SFInt32(-1), SFInt32(35), SFInt32(0), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(35), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(27), SFInt32(16), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(27), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(8), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(28), SFInt32(72), SFInt32(-1), SFInt32(72), SFInt32(29), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(61), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(22), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(61), SFInt32(23), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(25), SFInt32(61), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(30), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(19), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(33), SFInt32(24), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(68), SFInt32(69), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(68), SFInt32(-1), SFInt32(30), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(8), SFInt32(34), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(69), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(35), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(58), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(51), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(11), SFInt32(43), SFInt32(-1), SFInt32(38), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(12), SFInt32(51), SFInt32(-1), SFInt32(45), SFInt32(12), SFInt32(26), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(12), SFInt32(38), SFInt32(-1), SFInt32(73), SFInt32(47), SFInt32(56), SFInt32(-1), SFInt32(47), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(56), SFInt32(47), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(42), SFInt32(38), SFInt32(-1), SFInt32(46), SFInt32(59), SFInt32(73), SFInt32(-1), SFInt32(26), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(26), SFInt32(-1), SFInt32(45), SFInt32(48), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(45), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(55), SFInt32(52), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(41), SFInt32(55), SFInt32(-1), SFInt32(57), SFInt32(55), SFInt32(36), SFInt32(-1), SFInt32(41), SFInt32(58), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(55), SFInt32(41), SFInt32(-1), SFInt32(53), SFInt32(59), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(52), SFInt32(46), SFInt32(73), SFInt32(-1), SFInt32(73), SFInt32(56), SFInt32(52), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(57), SFInt32(-1), SFInt32(21), SFInt32(61), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(62), SFInt32(21), SFInt32(-1), SFInt32(62), SFInt32(60), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(64), SFInt32(62), SFInt32(-1), SFInt32(64), SFInt32(63), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(64), SFInt32(-1), SFInt32(62), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(21), SFInt32(62), SFInt32(-1), SFInt32(64), SFInt32(50), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(62), SFInt32(64), SFInt32(-1), SFInt32(50), SFInt32(64), SFInt32(54), SFInt32(-1), SFInt32(61), SFInt32(25), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(60), SFInt32(65), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(63), SFInt32(60), SFInt32(-1), SFInt32(63), SFInt32(66), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(53), SFInt32(63), SFInt32(-1), SFInt32(51), SFInt32(57), SFInt32(36), SFInt32(-1), SFInt32(50), SFInt32(54), SFInt32(57), SFInt32(-1), SFInt32(55), SFInt32(57), SFInt32(54), SFInt32(-1), SFInt32(68), SFInt32(67), SFInt32(70), SFInt32(-1), SFInt32(70), SFInt32(69), SFInt32(68), SFInt32(-1), SFInt32(65), SFInt32(70), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(71), SFInt32(59), SFInt32(-1), SFInt32(66), SFInt32(70), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(71), SFInt32(66), SFInt32(-1), SFInt32(70), SFInt32(65), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(69), SFInt32(70), SFInt32(-1), SFInt32(12), SFInt32(45), SFInt32(51), SFInt32(-1), SFInt32(81), SFInt32(82), SFInt32(83), SFInt32(-1), SFInt32(81), SFInt32(83), SFInt32(84), SFInt32(-1), SFInt32(81), SFInt32(84), SFInt32(85), SFInt32(-1), SFInt32(85), SFInt32(86), SFInt32(87), SFInt32(-1), SFInt32(81), SFInt32(85), SFInt32(87), SFInt32(-1), SFInt32(88), SFInt32(89), SFInt32(90), SFInt32(-1), SFInt32(88), SFInt32(90), SFInt32(91), SFInt32(-1), SFInt32(87), SFInt32(88), SFInt32(91), SFInt32(-1), SFInt32(91), SFInt32(74), SFInt32(75), SFInt32(-1), SFInt32(91), SFInt32(75), SFInt32(76), SFInt32(-1), SFInt32(87), SFInt32(91), SFInt32(76), SFInt32(-1), SFInt32(87), SFInt32(76), SFInt32(77), SFInt32(-1), SFInt32(81), SFInt32(87), SFInt32(77), SFInt32(-1), SFInt32(81), SFInt32(77), SFInt32(78), SFInt32(-1), SFInt32(81), SFInt32(78), SFInt32(79), SFInt32(-1), SFInt32(81), SFInt32(79), SFInt32(80), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(75), SFInt32(-1), SFInt32(75), SFInt32(74), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(76), SFInt32(-1), SFInt32(76), SFInt32(75), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(77), SFInt32(-1), SFInt32(77), SFInt32(76), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(44), SFInt32(78), SFInt32(-1), SFInt32(78), SFInt32(77), SFInt32(11), SFInt32(-1), SFInt32(44), SFInt32(39), SFInt32(79), SFInt32(-1), SFInt32(79), SFInt32(78), SFInt32(44), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(80), SFInt32(-1), SFInt32(80), SFInt32(79), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(47), SFInt32(81), SFInt32(-1), SFInt32(81), SFInt32(80), SFInt32(40), SFInt32(-1), SFInt32(47), SFInt32(73), SFInt32(82), SFInt32(-1), SFInt32(82), SFInt32(81), SFInt32(47), SFInt32(-1), SFInt32(73), SFInt32(59), SFInt32(83), SFInt32(-1), SFInt32(83), SFInt32(82), SFInt32(73), SFInt32(-1), SFInt32(59), SFInt32(71), SFInt32(84), SFInt32(-1), SFInt32(84), SFInt32(83), SFInt32(59), SFInt32(-1), SFInt32(71), SFInt32(67), SFInt32(85), SFInt32(-1), SFInt32(85), SFInt32(84), SFInt32(71), SFInt32(-1), SFInt32(67), SFInt32(68), SFInt32(86), SFInt32(-1), SFInt32(86), SFInt32(85), SFInt32(67), SFInt32(-1), SFInt32(68), SFInt32(31), SFInt32(87), SFInt32(-1), SFInt32(87), SFInt32(86), SFInt32(68), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(88), SFInt32(-1), SFInt32(88), SFInt32(87), SFInt32(31), SFInt32(-1), SFInt32(34), SFInt32(8), SFInt32(89), SFInt32(-1), SFInt32(89), SFInt32(88), SFInt32(34), SFInt32(-1), SFInt32(8), SFInt32(72), SFInt32(90), SFInt32(-1), SFInt32(90), SFInt32(89), SFInt32(8), SFInt32(-1), SFInt32(72), SFInt32(9), SFInt32(91), SFInt32(-1), SFInt32(91), SFInt32(90), SFInt32(72), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(74), SFInt32(-1), SFInt32(74), SFInt32(91), SFInt32(9), SFInt32(-1)]),
                                                                                                          creaseAngle_ : 3.14159,
                                                                                                          texCoordIndex_ : MFInt32([SFInt32(14), SFInt32(15), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(66), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(17), SFInt32(-1), SFInt32(4), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(15), SFInt32(4), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(48), SFInt32(-1), SFInt32(47), SFInt32(49), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(47), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(29), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(50), SFInt32(32), SFInt32(-1), SFInt32(53), SFInt32(32), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(53), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(56), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(54), SFInt32(52), SFInt32(-1), SFInt32(52), SFInt32(55), SFInt32(29), SFInt32(-1), SFInt32(49), SFInt32(33), SFInt32(28), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(34), SFInt32(37), SFInt32(-1), SFInt32(39), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(42), SFInt32(36), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(45), SFInt32(42), SFInt32(-1), SFInt32(39), SFInt32(37), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(39), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(44), SFInt32(57), SFInt32(-1), SFInt32(57), SFInt32(46), SFInt32(35), SFInt32(-1), SFInt32(34), SFInt32(38), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(58), SFInt32(34), SFInt32(-1), SFInt32(38), SFInt32(30), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(65), SFInt32(38), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(33), SFInt32(-1), SFInt32(28), SFInt32(33), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(62), SFInt32(63), SFInt32(64), SFInt32(-1), SFInt32(64), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(57), SFInt32(65), SFInt32(64), SFInt32(-1), SFInt32(65), SFInt32(56), SFInt32(60), SFInt32(-1), SFInt32(65), SFInt32(60), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(64), SFInt32(65), SFInt32(-1), SFInt32(64), SFInt32(63), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(57), SFInt32(64), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(66), SFInt32(-1), SFInt32(69), SFInt32(68), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(70), SFInt32(69), SFInt32(-1), SFInt32(70), SFInt32(67), SFInt32(71), SFInt32(-1), SFInt32(74), SFInt32(73), SFInt32(72), SFInt32(-1), SFInt32(72), SFInt32(75), SFInt32(74), SFInt32(-1), SFInt32(76), SFInt32(78), SFInt32(77), SFInt32(-1), SFInt32(80), SFInt32(79), SFInt32(82), SFInt32(-1), SFInt32(82), SFInt32(81), SFInt32(80), SFInt32(-1), SFInt32(83), SFInt32(84), SFInt32(77), SFInt32(-1), SFInt32(77), SFInt32(84), SFInt32(76), SFInt32(-1), SFInt32(85), SFInt32(84), SFInt32(86), SFInt32(-1), SFInt32(80), SFInt32(87), SFInt32(79), SFInt32(-1), SFInt32(79), SFInt32(87), SFInt32(70), SFInt32(-1), SFInt32(132), SFInt32(90), SFInt32(89), SFInt32(-1), SFInt32(90), SFInt32(74), SFInt32(75), SFInt32(-1), SFInt32(75), SFInt32(89), SFInt32(90), SFInt32(-1), SFInt32(70), SFInt32(71), SFInt32(82), SFInt32(-1), SFInt32(82), SFInt32(79), SFInt32(70), SFInt32(-1), SFInt32(88), SFInt32(91), SFInt32(132), SFInt32(-1), SFInt32(94), SFInt32(93), SFInt32(92), SFInt32(-1), SFInt32(92), SFInt32(95), SFInt32(94), SFInt32(-1), SFInt32(95), SFInt32(92), SFInt32(96), SFInt32(-1), SFInt32(96), SFInt32(97), SFInt32(95), SFInt32(-1), SFInt32(100), SFInt32(99), SFInt32(98), SFInt32(-1), SFInt32(98), SFInt32(101), SFInt32(100), SFInt32(-1), SFInt32(101), SFInt32(98), SFInt32(102), SFInt32(-1), SFInt32(102), SFInt32(103), SFInt32(101), SFInt32(-1), SFInt32(104), SFInt32(101), SFInt32(105), SFInt32(-1), SFInt32(103), SFInt32(106), SFInt32(105), SFInt32(-1), SFInt32(105), SFInt32(101), SFInt32(103), SFInt32(-1), SFInt32(99), SFInt32(108), SFInt32(107), SFInt32(-1), SFInt32(107), SFInt32(98), SFInt32(99), SFInt32(-1), SFInt32(98), SFInt32(107), SFInt32(109), SFInt32(-1), SFInt32(109), SFInt32(102), SFInt32(98), SFInt32(-1), SFInt32(97), SFInt32(96), SFInt32(104), SFInt32(-1), SFInt32(112), SFInt32(111), SFInt32(110), SFInt32(-1), SFInt32(110), SFInt32(113), SFInt32(112), SFInt32(-1), SFInt32(116), SFInt32(115), SFInt32(114), SFInt32(-1), SFInt32(114), SFInt32(117), SFInt32(116), SFInt32(-1), SFInt32(117), SFInt32(114), SFInt32(99), SFInt32(-1), SFInt32(99), SFInt32(100), SFInt32(117), SFInt32(-1), SFInt32(120), SFInt32(119), SFInt32(118), SFInt32(-1), SFInt32(118), SFInt32(112), SFInt32(120), SFInt32(-1), SFInt32(117), SFInt32(96), SFInt32(92), SFInt32(-1), SFInt32(92), SFInt32(116), SFInt32(117), SFInt32(-1), SFInt32(96), SFInt32(117), SFInt32(100), SFInt32(-1), SFInt32(111), SFInt32(122), SFInt32(121), SFInt32(-1), SFInt32(121), SFInt32(123), SFInt32(111), SFInt32(-1), SFInt32(115), SFInt32(125), SFInt32(124), SFInt32(-1), SFInt32(124), SFInt32(114), SFInt32(115), SFInt32(-1), SFInt32(114), SFInt32(124), SFInt32(108), SFInt32(-1), SFInt32(108), SFInt32(99), SFInt32(114), SFInt32(-1), SFInt32(97), SFInt32(104), SFInt32(105), SFInt32(-1), SFInt32(96), SFInt32(100), SFInt32(104), SFInt32(-1), SFInt32(101), SFInt32(104), SFInt32(100), SFInt32(-1), SFInt32(127), SFInt32(126), SFInt32(129), SFInt32(-1), SFInt32(129), SFInt32(128), SFInt32(127), SFInt32(-1), SFInt32(121), SFInt32(129), SFInt32(124), SFInt32(-1), SFInt32(124), SFInt32(130), SFInt32(108), SFInt32(-1), SFInt32(124), SFInt32(129), SFInt32(126), SFInt32(-1), SFInt32(126), SFInt32(130), SFInt32(124), SFInt32(-1), SFInt32(129), SFInt32(121), SFInt32(131), SFInt32(-1), SFInt32(131), SFInt32(128), SFInt32(129), SFInt32(-1), SFInt32(84), SFInt32(85), SFInt32(133), SFInt32(-1), SFInt32(141), SFInt32(142), SFInt32(143), SFInt32(-1), SFInt32(141), SFInt32(143), SFInt32(144), SFInt32(-1), SFInt32(141), SFInt32(144), SFInt32(145), SFInt32(-1), SFInt32(145), SFInt32(146), SFInt32(147), SFInt32(-1), SFInt32(141), SFInt32(145), SFInt32(147), SFInt32(-1), SFInt32(148), SFInt32(149), SFInt32(150), SFInt32(-1), SFInt32(148), SFInt32(150), SFInt32(151), SFInt32(-1), SFInt32(147), SFInt32(148), SFInt32(151), SFInt32(-1), SFInt32(151), SFInt32(134), SFInt32(135), SFInt32(-1), SFInt32(151), SFInt32(135), SFInt32(136), SFInt32(-1), SFInt32(147), SFInt32(151), SFInt32(136), SFInt32(-1), SFInt32(147), SFInt32(136), SFInt32(137), SFInt32(-1), SFInt32(141), SFInt32(147), SFInt32(137), SFInt32(-1), SFInt32(141), SFInt32(137), SFInt32(138), SFInt32(-1), SFInt32(141), SFInt32(138), SFInt32(139), SFInt32(-1), SFInt32(141), SFInt32(139), SFInt32(140), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(135), SFInt32(-1), SFInt32(135), SFInt32(134), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(136), SFInt32(-1), SFInt32(136), SFInt32(135), SFInt32(19), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(137), SFInt32(-1), SFInt32(137), SFInt32(136), SFInt32(24), SFInt32(-1), SFInt32(81), SFInt32(82), SFInt32(138), SFInt32(-1), SFInt32(138), SFInt32(137), SFInt32(81), SFInt32(-1), SFInt32(82), SFInt32(71), SFInt32(139), SFInt32(-1), SFInt32(139), SFInt32(138), SFInt32(82), SFInt32(-1), SFInt32(73), SFInt32(74), SFInt32(140), SFInt32(-1), SFInt32(140), SFInt32(139), SFInt32(73), SFInt32(-1), SFInt32(74), SFInt32(90), SFInt32(141), SFInt32(-1), SFInt32(141), SFInt32(140), SFInt32(74), SFInt32(-1), SFInt32(90), SFInt32(132), SFInt32(142), SFInt32(-1), SFInt32(142), SFInt32(141), SFInt32(90), SFInt32(-1), SFInt32(132), SFInt32(91), SFInt32(143), SFInt32(-1), SFInt32(143), SFInt32(142), SFInt32(132), SFInt32(-1), SFInt32(108), SFInt32(130), SFInt32(144), SFInt32(-1), SFInt32(144), SFInt32(143), SFInt32(108), SFInt32(-1), SFInt32(130), SFInt32(126), SFInt32(145), SFInt32(-1), SFInt32(145), SFInt32(144), SFInt32(130), SFInt32(-1), SFInt32(126), SFInt32(127), SFInt32(146), SFInt32(-1), SFInt32(146), SFInt32(145), SFInt32(126), SFInt32(-1), SFInt32(62), SFInt32(61), SFInt32(147), SFInt32(-1), SFInt32(147), SFInt32(146), SFInt32(62), SFInt32(-1), SFInt32(61), SFInt32(60), SFInt32(148), SFInt32(-1), SFInt32(148), SFInt32(147), SFInt32(61), SFInt32(-1), SFInt32(60), SFInt32(56), SFInt32(149), SFInt32(-1), SFInt32(149), SFInt32(148), SFInt32(60), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(150), SFInt32(-1), SFInt32(150), SFInt32(149), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(151), SFInt32(-1), SFInt32(151), SFInt32(150), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(134), SFInt32(-1), SFInt32(134), SFInt32(151), SFInt32(23), SFInt32(-1)]),
                                                                                                          coord_ : 
                                                                                                            Coordinate(
                                                                                                              point_ : MFVec3f([SFVec3f([1.47,1.71,-1.15]),SFVec3f([2.016,1.688,0.0414]),SFVec3f([2.914,1.242,0.0931]),SFVec3f([3.187,0.3754,1.303]),SFVec3f([0.7806,1.128,1.368]),SFVec3f([1.573,1.389,0.8702]),SFVec3f([2.043,0.0045,3.089]),SFVec3f([2.245,0.1604,3.581]),SFVec3f([5.472,-0.1553,-1.692]),SFVec3f([3.805,0.0984,2.723]),SFVec3f([1.182,0.0045,2.765]),SFVec3f([0,0.0045,2.596]),SFVec3f([0,1.333,-0.0527]),SFVec3f([2.599,2.142,-1.646]),SFVec3f([0.9629,2.166,-3.392]),SFVec3f([2.035,2.193,-3.055]),SFVec3f([3.439,2.077,0.1272]),SFVec3f([3.953,1.215,-2.467]),SFVec3f([5.073,1.55,0.1272]),SFVec3f([4.655,0.2739,-2.02]),SFVec3f([1.032,-0.6843,-4.667]),SFVec3f([0,-0.6754,-4.802]),SFVec3f([2.39,-0.2981,-4.154]),SFVec3f([1.677,-4.028,-3.387]),SFVec3f([4.12,-2.512,-3.272]),SFVec3f([0,-3.532,-2.804]),SFVec3f([0,1.519,-1.61]),SFVec3f([2.982,1.02,1.941]),SFVec3f([4.42,0.7184,1.865]),SFVec3f([5.602,0.5099,-0.0537]),SFVec3f([1.811,-3.383,-2.67]),SFVec3f([1.811,-0.1592,-2.116]),SFVec3f([1.833,-2.424,-2.283]),SFVec3f([4.241,-2.424,-2.283]),SFVec3f([4.225,-0.1553,-1.692]),SFVec3f([0.6928,1.497,-1.503]),SFVec3f([-2.914,1.242,0.0931]),SFVec3f([-2.016,1.688,0.0414]),SFVec3f([-1.573,1.389,0.8702]),SFVec3f([-2.043,0.0045,3.089]),SFVec3f([-2.245,0.1604,3.581]),SFVec3f([-2.982,1.02,1.941]),SFVec3f([-0.7806,1.128,1.368]),SFVec3f([0,1.119,1.49]),SFVec3f([-1.182,0.0045,2.765]),SFVec3f([-0.6928,1.497,-1.503]),SFVec3f([-5.602,0.5099,-0.0537]),SFVec3f([-3.805,0.0984,2.723]),SFVec3f([-0.9629,2.166,-3.392]),SFVec3f([0,2.143,-3.557]),SFVec3f([-2.035,2.193,-3.055]),SFVec3f([-1.47,1.71,-1.15]),SFVec3f([-5.073,1.55,0.1272]),SFVec3f([-4.655,0.2739,-2.02]),SFVec3f([-3.953,1.215,-2.467]),SFVec3f([-3.439,2.077,0.1272]),SFVec3f([-4.42,0.7184,1.865]),SFVec3f([-2.599,2.142,-1.646]),SFVec3f([-3.187,0.3754,1.303]),SFVec3f([-5.472,-0.1553,-1.692]),SFVec3f([-1.677,-4.028,-3.387]),SFVec3f([0,-4.35,-3.506]),SFVec3f([-1.032,-0.6843,-4.667]),SFVec3f([-4.12,-2.512,-3.272]),SFVec3f([-2.39,-0.2981,-4.154]),SFVec3f([-1.811,-3.383,-2.67]),SFVec3f([-4.241,-2.424,-2.283]),SFVec3f([-1.811,-0.1592,-2.116]),SFVec3f([0,-0.1592,-2.25]),SFVec3f([0,-2.424,-2.283]),SFVec3f([-1.833,-2.424,-2.283]),SFVec3f([-4.225,-0.1553,-1.692]),SFVec3f([5.086,-0.0906,1.771]),SFVec3f([-5.086,-0.0906,1.771]),SFVec3f([2.337,-0.4422,3.448]),SFVec3f([2.182,-0.4422,3.182]),SFVec3f([1.228,-0.4422,2.736]),SFVec3f([0,-0.4422,2.56]),SFVec3f([-1.228,-0.4422,2.736]),SFVec3f([-2.182,-0.4422,3.182]),SFVec3f([-2.337,-0.4422,3.448]),SFVec3f([-3.706,-0.4422,2.653]),SFVec3f([-4.913,-0.4422,1.734]),SFVec3f([-5.268,-0.4422,-1.51]),SFVec3f([-4.209,-0.4422,-1.51]),SFVec3f([-1.789,-0.4422,-1.935]),SFVec3f([0,-0.4422,-2.068]),SFVec3f([1.789,-0.4422,-1.935]),SFVec3f([4.209,-0.4422,-1.51]),SFVec3f([5.268,-0.4422,-1.51]),SFVec3f([4.913,-0.4422,1.734]),SFVec3f([3.706,-0.4422,2.653])])),
                                                                                                          texCoord_ : 
                                                                                                            TextureCoordinate(
                                                                                                              point_ : MFVec2f([SFVec2f([0.4416,0.6747]),SFVec2f([0.4535,0.6485]),SFVec2f([0.4483,0.6438]),SFVec2f([0.4499,0.6371]),SFVec2f([0.4594,0.6763]),SFVec2f([0.4399,0.6472]),SFVec2f([0.4645,0.6783]),SFVec2f([0.4385,0.6236]),SFVec2f([0.4279,0.6258]),SFVec2f([0.1412,0.5207]),SFVec2f([0.1108,0.5655]),SFVec2f([0.1073,0.5839]),SFVec2f([0.1708,0.4854]),SFVec2f([0.4376,0.6345]),SFVec2f([0.4528,0.6648]),SFVec2f([0.4548,0.6714]),SFVec2f([0.4459,0.6652]),SFVec2f([0.4669,0.6678]),SFVec2f([0.0786,0.5849]),SFVec2f([0.4476,0.6884]),SFVec2f([0.1474,0.4856]),SFVec2f([0.0865,0.5614]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1227,0.5144]),SFVec2f([0.4539,0.6879]),SFVec2f([0.4621,0.6889]),SFVec2f([0.2661,0.5914]),SFVec2f([0.3505,0.5919]),SFVec2f([0.241,0.592]),SFVec2f([0.1724,0.5255]),SFVec2f([0.2089,0.5196]),SFVec2f([0.2133,0.556]),SFVec2f([0.1645,0.5709]),SFVec2f([0.2067,0.5908]),SFVec2f([0.2708,0.4736]),SFVec2f([0.347,0.4317]),SFVec2f([0.3616,0.5328]),SFVec2f([0.2733,0.5359]),SFVec2f([0.238,0.493]),SFVec2f([0.249,0.5451]),SFVec2f([0.3477,0.431]),SFVec2f([0.3623,0.5333]),SFVec2f([0.3623,0.5333]),SFVec2f([0.3505,0.5919]),SFVec2f([0.3477,0.431]),SFVec2f([0.3511,0.5932]),SFVec2f([0.3206,0.4193]),SFVec2f([0.2505,0.5754]),SFVec2f([0.3554,0.5911]),SFVec2f([0.2112,0.5805]),SFVec2f([0.1632,0.5887]),SFVec2f([0.1073,0.5839]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1108,0.5655]),SFVec2f([0.1412,0.5207]),SFVec2f([0.1708,0.4854]),SFVec2f([0.1963,0.4863]),SFVec2f([0.3223,0.4192]),SFVec2f([0.2638,0.4568]),SFVec2f([0.3206,0.4193]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1963,0.4863]),SFVec2f([0.2252,0.4828]),SFVec2f([0.2252,0.4828]),SFVec2f([0.2252,0.4828]),SFVec2f([0.4337,0.6239]),SFVec2f([0.4689,0.6806]),SFVec2f([0.4689,0.6702]),SFVec2f([0.4627,0.667]),SFVec2f([0.4583,0.6722]),SFVec2f([0.4578,0.6906]),SFVec2f([0.1073,0.5839]),SFVec2f([0.0786,0.5849]),SFVec2f([0.0865,0.5614]),SFVec2f([0.1108,0.5655]),SFVec2f([0.4514,0.6379]),SFVec2f([0.4463,0.6454]),SFVec2f([0.4498,0.6514]),SFVec2f([0.4521,0.6748]),SFVec2f([0.4466,0.6744]),SFVec2f([0.4444,0.685]),SFVec2f([0.4523,0.6875]),SFVec2f([0.4395,0.6457]),SFVec2f([0.4393,0.633]),SFVec2f([0.4295,0.6275]),SFVec2f([0.4284,0.6322]),SFVec2f([0.4488,0.6639]),SFVec2f([0.1708,0.4854]),SFVec2f([0.1412,0.5207]),SFVec2f([0.1227,0.5144]),SFVec2f([0.1963,0.4863]),SFVec2f([0.2661,0.5914]),SFVec2f([0.3505,0.5919]),SFVec2f([0.3554,0.5911]),SFVec2f([0.2505,0.5754]),SFVec2f([0.241,0.592]),SFVec2f([0.2112,0.5805]),SFVec2f([0.1724,0.5255]),SFVec2f([0.2089,0.5196]),SFVec2f([0.2133,0.556]),SFVec2f([0.1645,0.5709]),SFVec2f([0.1412,0.5207]),SFVec2f([0.1108,0.5655]),SFVec2f([0.2067,0.5908]),SFVec2f([0.1632,0.5887]),SFVec2f([0.1073,0.5839]),SFVec2f([0.1708,0.4854]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1474,0.4856]),SFVec2f([0.3477,0.431]),SFVec2f([0.347,0.4317]),SFVec2f([0.3616,0.5328]),SFVec2f([0.3623,0.5333]),SFVec2f([0.238,0.493]),SFVec2f([0.2708,0.4736]),SFVec2f([0.2733,0.5359]),SFVec2f([0.249,0.5451]),SFVec2f([0.3505,0.5919]),SFVec2f([0.3511,0.5932]),SFVec2f([0.3623,0.5333]),SFVec2f([0.3223,0.4192]),SFVec2f([0.3206,0.4193]),SFVec2f([0.3477,0.431]),SFVec2f([0.2252,0.4828]),SFVec2f([0.2638,0.4568]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1963,0.4863]),SFVec2f([0.2252,0.4828]),SFVec2f([0.2252,0.4828]),SFVec2f([0.1963,0.4863]),SFVec2f([0.3206,0.4193]),SFVec2f([0.1474,0.4856]),SFVec2f([0.4323,0.622]),SFVec2f([0.0865,0.5614]),SFVec2f([0.0786,0.5849]),SFVec2f([0.4539,0.6879]),SFVec2f([0.4621,0.6889]),SFVec2f([0.4523,0.6875]),SFVec2f([0.4578,0.6906]),SFVec2f([0.0865,0.5614]),SFVec2f([0.1227,0.5144]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1227,0.5144]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1999,0.4849]),SFVec2f([0.1421,0.507]),SFVec2f([0.1227,0.5144])])))))]),

                                                                                            HAnimJoint(
                                                                                              name_ : SFString('vc7'),
                                                                                              DEF_ : SFString('hanim_vc7'),
                                                                                              center_ : SFVec3f([SFDouble(0), SFDouble(55.349998), SFDouble(-0.6695)]),
                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                              children_ : [
                                                                                                HAnimSegment(
                                                                                                  name_ : SFString('c7'),
                                                                                                  DEF_ : SFString('hanim_c7'),
                                                                                                  children_ : [
                                                                                                    Transform(
                                                                                                      translation_ : SFVec3f([SFDouble(0), SFDouble(55.349998), SFDouble(-0.6695)]),
                                                                                                      child_ : 
                                                                                                        Shape(
                                                                                                          appearance_ : 
                                                                                                            Appearance(
                                                                                                              material_ : 
                                                                                                                Material(
                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                              texture_ : 
                                                                                                                ImageTexture(
                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                          geometry_ : 
                                                                                                            IndexedFaceSet(
                                                                                                              coordIndex_ : MFInt32([SFInt32(5), SFInt32(6), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(28), SFInt32(5), SFInt32(-1), SFInt32(34), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(34), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(30), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(35), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(31), SFInt32(9), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(34), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(31), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(35), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(33), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(28), SFInt32(-1), SFInt32(33), SFInt32(27), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(33), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(25), SFInt32(-1)]),
                                                                                                              creaseAngle_ : 3.14159,
                                                                                                              texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(6), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(28), SFInt32(5), SFInt32(-1), SFInt32(34), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(34), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(30), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(35), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(31), SFInt32(9), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(34), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(31), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(35), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(33), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(28), SFInt32(-1), SFInt32(33), SFInt32(27), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(33), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(26), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(25), SFInt32(-1)]),
                                                                                                              coord_ : 
                                                                                                                Coordinate(
                                                                                                                  point_ : MFVec3f([SFVec3f([0.5369,0.1071,-1.124]),SFVec3f([0,0.1694,-1.195]),SFVec3f([1.139,0.1756,-0.8504]),SFVec3f([1.562,0.1474,0.0729]),SFVec3f([1.219,-0.0249,0.7152]),SFVec3f([0,-0.3558,1.195]),SFVec3f([0.605,-0.345,1.101]),SFVec3f([-0.5369,0.1071,-1.124]),SFVec3f([-1.139,0.1755,-0.8504]),SFVec3f([-1.562,0.1474,0.0729]),SFVec3f([-1.219,-0.0249,0.7153]),SFVec3f([-0.605,-0.345,1.101]),SFVec3f([0,-0.711,-1.028]),SFVec3f([0.4943,-0.7203,-0.9649]),SFVec3f([0.999,-0.7546,-0.733]),SFVec3f([1.342,-0.8648,0.0135]),SFVec3f([1.076,-0.9372,0.5038]),SFVec3f([0.5328,-0.9856,0.832]),SFVec3f([0,-0.9977,0.9139]),SFVec3f([-0.5328,-0.9856,0.832]),SFVec3f([-1.076,-0.9372,0.5038]),SFVec3f([-1.342,-0.8648,0.0136]),SFVec3f([-0.999,-0.7546,-0.733]),SFVec3f([-0.4943,-0.7203,-0.9649]),SFVec3f([0.5369,0.5357,-1.124]),SFVec3f([1.139,0.5357,-0.8504]),SFVec3f([1.562,0.5357,0.0729]),SFVec3f([1.219,0.5357,0.7153]),SFVec3f([0,0.5357,1.195]),SFVec3f([-0.605,0.5357,1.101]),SFVec3f([-1.139,0.5357,-0.8504]),SFVec3f([-1.562,0.5357,0.0729]),SFVec3f([0,0.5357,-1.195]),SFVec3f([0.605,0.5357,1.101]),SFVec3f([-0.5369,0.5357,-1.124]),SFVec3f([-1.219,0.5357,0.7153]),SFVec3f([0.4947,0.7335,-0.9348]),SFVec3f([0,0.7335,-1]),SFVec3f([-0.4947,0.7335,-0.9348]),SFVec3f([-1.008,0.7335,-0.7016]),SFVec3f([-1.361,0.7335,0.069]),SFVec3f([-1.091,0.7335,0.5735]),SFVec3f([-0.5462,0.7335,0.9162]),SFVec3f([0,0.7335,1.001]),SFVec3f([0.5462,0.7335,0.9162]),SFVec3f([1.091,0.7335,0.5735]),SFVec3f([1.361,0.7335,0.0689]),SFVec3f([1.008,0.7335,-0.7016])])),
                                                                                                              texCoord_ : 
                                                                                                                TextureCoordinate(
                                                                                                                  point_ : MFVec2f([SFVec2f([0.3995,0.6285]),SFVec2f([0.3906,0.6293]),SFVec2f([0.4094,0.632]),SFVec2f([0.4164,0.6316]),SFVec2f([0.4107,0.6267]),SFVec2f([0.3906,0.6224]),SFVec2f([0.4006,0.6225]),SFVec2f([0.3818,0.6285]),SFVec2f([0.3719,0.632]),SFVec2f([0.3649,0.6316]),SFVec2f([0.3706,0.6267]),SFVec2f([0.3807,0.6225]),SFVec2f([0.3906,0.6293]),SFVec2f([0.3995,0.6285]),SFVec2f([0.4094,0.632]),SFVec2f([0.4164,0.6316]),SFVec2f([0.4107,0.6267]),SFVec2f([0.4006,0.6225]),SFVec2f([0.3906,0.6224]),SFVec2f([0.3807,0.6225]),SFVec2f([0.3706,0.6267]),SFVec2f([0.3649,0.6316]),SFVec2f([0.3719,0.632]),SFVec2f([0.3818,0.6285]),SFVec2f([0.3995,0.6534]),SFVec2f([0.4094,0.6549]),SFVec2f([0.4164,0.6547]),SFVec2f([0.4107,0.6527]),SFVec2f([0.3906,0.6475]),SFVec2f([0.3807,0.6518]),SFVec2f([0.3719,0.6549]),SFVec2f([0.3649,0.6547]),SFVec2f([0.3906,0.6538]),SFVec2f([0.4006,0.6518]),SFVec2f([0.3818,0.6534]),SFVec2f([0.3706,0.6527]),SFVec2f([0.3995,0.6534]),SFVec2f([0.3906,0.6538]),SFVec2f([0.3818,0.6534]),SFVec2f([0.3719,0.6549]),SFVec2f([0.3649,0.6547]),SFVec2f([0.3706,0.6527]),SFVec2f([0.3807,0.6518]),SFVec2f([0.3906,0.6475]),SFVec2f([0.4006,0.6518]),SFVec2f([0.4107,0.6527]),SFVec2f([0.4164,0.6547]),SFVec2f([0.4094,0.6549])])))))]),

                                                                                                HAnimJoint(
                                                                                                  name_ : SFString('vc6'),
                                                                                                  DEF_ : SFString('hanim_vc6'),
                                                                                                  center_ : SFVec3f([SFDouble(0), SFDouble(55.889999), SFDouble(-0.6695)]),
                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                  children_ : [
                                                                                                    HAnimSegment(
                                                                                                      name_ : SFString('c6'),
                                                                                                      DEF_ : SFString('hanim_c6'),
                                                                                                      children_ : [
                                                                                                        Transform(
                                                                                                          translation_ : SFVec3f([SFDouble(0), SFDouble(55.889999), SFDouble(-0.6695)]),
                                                                                                          child_ : 
                                                                                                            Shape(
                                                                                                              appearance_ : 
                                                                                                                Appearance(
                                                                                                                  material_ : 
                                                                                                                    Material(
                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                  texture_ : 
                                                                                                                    ImageTexture(
                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                              geometry_ : 
                                                                                                                IndexedFaceSet(
                                                                                                                  coordIndex_ : MFInt32([SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                  coord_ : 
                                                                                                                    Coordinate(
                                                                                                                      point_ : MFVec3f([SFVec3f([0.5369,0.5581,-1.124]),SFVec3f([1.139,0.5581,-0.8504]),SFVec3f([1.562,0.5581,0.0729]),SFVec3f([1.219,0.5581,0.7153]),SFVec3f([0,0.5581,1.195]),SFVec3f([-0.605,0.5581,1.101]),SFVec3f([-1.139,0.5581,-0.8504]),SFVec3f([-1.562,0.5581,0.0729]),SFVec3f([0,0.5581,-1.195]),SFVec3f([0.605,0.5581,1.101]),SFVec3f([-0.5369,0.5581,-1.124]),SFVec3f([-1.219,0.5581,0.7153]),SFVec3f([0.5369,0.0038,-1.124]),SFVec3f([1.139,0.0038,-0.8504]),SFVec3f([1.562,0.0038,0.0729]),SFVec3f([1.219,0.0038,0.7153]),SFVec3f([0,0.0038,1.195]),SFVec3f([-0.605,0.0038,1.101]),SFVec3f([-1.139,0.0038,-0.8504]),SFVec3f([-1.562,0.0038,0.0729]),SFVec3f([0,0.0038,-1.195]),SFVec3f([0.605,0.0038,1.101]),SFVec3f([-0.5369,0.0038,-1.124]),SFVec3f([-1.219,0.0038,0.7153]),SFVec3f([0.4947,0.756,-0.9348]),SFVec3f([0,0.756,-1]),SFVec3f([-0.4947,0.756,-0.9348]),SFVec3f([-1.008,0.756,-0.7016]),SFVec3f([-1.361,0.756,0.069]),SFVec3f([-1.091,0.756,0.5735]),SFVec3f([-0.5462,0.756,0.9162]),SFVec3f([0,0.756,1.001]),SFVec3f([0.5462,0.756,0.9162]),SFVec3f([1.091,0.756,0.5735]),SFVec3f([1.361,0.756,0.069]),SFVec3f([1.008,0.756,-0.7016]),SFVec3f([0,-0.2355,-1]),SFVec3f([0.4947,-0.2355,-0.9348]),SFVec3f([1.008,-0.2355,-0.7016]),SFVec3f([1.361,-0.2355,0.0689]),SFVec3f([1.091,-0.2355,0.5735]),SFVec3f([0.5462,-0.2355,0.9162]),SFVec3f([0,-0.2355,1.001]),SFVec3f([-0.5462,-0.2355,0.9162]),SFVec3f([-1.091,-0.2355,0.5735]),SFVec3f([-1.361,-0.2355,0.069]),SFVec3f([-1.008,-0.2355,-0.7016]),SFVec3f([-0.4947,-0.2355,-0.9348])])),
                                                                                                                  texCoord_ : 
                                                                                                                    TextureCoordinate(
                                                                                                                      point_ : MFVec2f([SFVec2f([0.3995,0.6565]),SFVec2f([0.4094,0.6578]),SFVec2f([0.4164,0.6576]),SFVec2f([0.4107,0.6559]),SFVec2f([0.3906,0.6507]),SFVec2f([0.3807,0.6555]),SFVec2f([0.3719,0.6578]),SFVec2f([0.3649,0.6576]),SFVec2f([0.3906,0.6568]),SFVec2f([0.4006,0.6555]),SFVec2f([0.3818,0.6565]),SFVec2f([0.3706,0.6559]),SFVec2f([0.3995,0.6534]),SFVec2f([0.4094,0.6549]),SFVec2f([0.4164,0.6547]),SFVec2f([0.4107,0.6527]),SFVec2f([0.3906,0.6475]),SFVec2f([0.3807,0.6518]),SFVec2f([0.3719,0.6549]),SFVec2f([0.3649,0.6547]),SFVec2f([0.3906,0.6538]),SFVec2f([0.4006,0.6518]),SFVec2f([0.3818,0.6534]),SFVec2f([0.3706,0.6527]),SFVec2f([0.3995,0.6565]),SFVec2f([0.3906,0.6568]),SFVec2f([0.3818,0.6565]),SFVec2f([0.3719,0.6578]),SFVec2f([0.3649,0.6576]),SFVec2f([0.3706,0.6559]),SFVec2f([0.3807,0.6555]),SFVec2f([0.3906,0.6507]),SFVec2f([0.4006,0.6555]),SFVec2f([0.4107,0.6559]),SFVec2f([0.4164,0.6576]),SFVec2f([0.4094,0.6578]),SFVec2f([0.3906,0.6538]),SFVec2f([0.3995,0.6534]),SFVec2f([0.4094,0.6549]),SFVec2f([0.4164,0.6547]),SFVec2f([0.4107,0.6527]),SFVec2f([0.4006,0.6518]),SFVec2f([0.3906,0.6475]),SFVec2f([0.3807,0.6518]),SFVec2f([0.3706,0.6527]),SFVec2f([0.3649,0.6547]),SFVec2f([0.3719,0.6549]),SFVec2f([0.3818,0.6534])])))))]),

                                                                                                    HAnimJoint(
                                                                                                      name_ : SFString('vc5'),
                                                                                                      DEF_ : SFString('hanim_vc5'),
                                                                                                      center_ : SFVec3f([SFDouble(0), SFDouble(56.439999), SFDouble(-0.6695)]),
                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                      children_ : [
                                                                                                        HAnimSegment(
                                                                                                          name_ : SFString('c5'),
                                                                                                          DEF_ : SFString('hanim_c5'),
                                                                                                          children_ : [
                                                                                                            Transform(
                                                                                                              translation_ : SFVec3f([SFDouble(0), SFDouble(56.439999), SFDouble(-0.6695)]),
                                                                                                              child_ : 
                                                                                                                Shape(
                                                                                                                  appearance_ : 
                                                                                                                    Appearance(
                                                                                                                      material_ : 
                                                                                                                        Material(
                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                      texture_ : 
                                                                                                                        ImageTexture(
                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                  geometry_ : 
                                                                                                                    IndexedFaceSet(
                                                                                                                      coordIndex_ : MFInt32([SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                      coord_ : 
                                                                                                                        Coordinate(
                                                                                                                          point_ : MFVec3f([SFVec3f([0.5369,0.5456,-1.124]),SFVec3f([1.139,0.5456,-0.8504]),SFVec3f([1.562,0.5456,0.0729]),SFVec3f([1.219,0.5456,0.7153]),SFVec3f([0,0.5456,1.195]),SFVec3f([-0.605,0.5456,1.101]),SFVec3f([-1.139,0.5456,-0.8504]),SFVec3f([-1.562,0.5456,0.0729]),SFVec3f([0,0.5456,-1.195]),SFVec3f([0.605,0.5456,1.101]),SFVec3f([-0.5369,0.5456,-1.124]),SFVec3f([-1.219,0.5456,0.7153]),SFVec3f([0.5369,0.0012,-1.124]),SFVec3f([1.139,0.0012,-0.8504]),SFVec3f([1.562,0.0012,0.0729]),SFVec3f([1.219,0.0012,0.7153]),SFVec3f([0,0.0012,1.195]),SFVec3f([-0.605,0.0012,1.101]),SFVec3f([-1.139,0.0012,-0.8504]),SFVec3f([-1.562,0.0012,0.0729]),SFVec3f([0,0.0012,-1.195]),SFVec3f([0.605,0.0012,1.101]),SFVec3f([-0.5369,0.0012,-1.124]),SFVec3f([-1.219,0.0012,0.7153]),SFVec3f([0.4947,0.7434,-0.9348]),SFVec3f([0,0.7434,-1]),SFVec3f([-0.4947,0.7434,-0.9348]),SFVec3f([-1.008,0.7434,-0.7016]),SFVec3f([-1.361,0.7434,0.069]),SFVec3f([-1.091,0.7434,0.5735]),SFVec3f([-0.5462,0.7434,0.9162]),SFVec3f([0,0.7434,1.001]),SFVec3f([0.5462,0.7434,0.9162]),SFVec3f([1.091,0.7434,0.5735]),SFVec3f([1.361,0.7434,0.069]),SFVec3f([1.008,0.7434,-0.7016]),SFVec3f([0,-0.2282,-1]),SFVec3f([0.4947,-0.2282,-0.9348]),SFVec3f([1.008,-0.2282,-0.7016]),SFVec3f([1.361,-0.2282,0.069]),SFVec3f([1.091,-0.2282,0.5735]),SFVec3f([0.5462,-0.2282,0.9162]),SFVec3f([0,-0.2282,1.001]),SFVec3f([-0.5462,-0.2282,0.9162]),SFVec3f([-1.091,-0.2282,0.5735]),SFVec3f([-1.361,-0.2282,0.069]),SFVec3f([-1.008,-0.2282,-0.7016]),SFVec3f([-0.4947,-0.2282,-0.9348])])),
                                                                                                                      texCoord_ : 
                                                                                                                        TextureCoordinate(
                                                                                                                          point_ : MFVec2f([SFVec2f([0.3995,0.6596]),SFVec2f([0.4094,0.6606]),SFVec2f([0.4164,0.6605]),SFVec2f([0.4107,0.6591]),SFVec2f([0.3906,0.6538]),SFVec2f([0.3807,0.6592]),SFVec2f([0.3719,0.6606]),SFVec2f([0.3649,0.6605]),SFVec2f([0.3906,0.6599]),SFVec2f([0.4006,0.6592]),SFVec2f([0.3818,0.6596]),SFVec2f([0.3706,0.6591]),SFVec2f([0.3995,0.6565]),SFVec2f([0.4094,0.6578]),SFVec2f([0.4164,0.6576]),SFVec2f([0.4107,0.6559]),SFVec2f([0.3906,0.6507]),SFVec2f([0.3807,0.6555]),SFVec2f([0.3719,0.6578]),SFVec2f([0.3649,0.6576]),SFVec2f([0.3906,0.6568]),SFVec2f([0.4006,0.6555]),SFVec2f([0.3818,0.6565]),SFVec2f([0.3706,0.6559]),SFVec2f([0.3995,0.6596]),SFVec2f([0.3906,0.6599]),SFVec2f([0.3818,0.6596]),SFVec2f([0.3719,0.6606]),SFVec2f([0.3649,0.6605]),SFVec2f([0.3706,0.6591]),SFVec2f([0.3807,0.6592]),SFVec2f([0.3906,0.6538]),SFVec2f([0.4006,0.6592]),SFVec2f([0.4107,0.6591]),SFVec2f([0.4164,0.6605]),SFVec2f([0.4094,0.6606]),SFVec2f([0.3906,0.6568]),SFVec2f([0.3995,0.6565]),SFVec2f([0.4094,0.6578]),SFVec2f([0.4164,0.6576]),SFVec2f([0.4107,0.6559]),SFVec2f([0.4006,0.6555]),SFVec2f([0.3906,0.6507]),SFVec2f([0.3807,0.6555]),SFVec2f([0.3706,0.6559]),SFVec2f([0.3649,0.6576]),SFVec2f([0.3719,0.6578]),SFVec2f([0.3818,0.6565])])))))]),

                                                                                                        HAnimJoint(
                                                                                                          name_ : SFString('vc4'),
                                                                                                          DEF_ : SFString('hanim_vc4'),
                                                                                                          center_ : SFVec3f([SFDouble(0), SFDouble(56.990002), SFDouble(-0.6695)]),
                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                          children_ : [
                                                                                                            HAnimSegment(
                                                                                                              name_ : SFString('c4'),
                                                                                                              DEF_ : SFString('hanim_c4'),
                                                                                                              children_ : [
                                                                                                                Transform(
                                                                                                                  translation_ : SFVec3f([SFDouble(0), SFDouble(56.990002), SFDouble(-0.6695)]),
                                                                                                                  child_ : 
                                                                                                                    Shape(
                                                                                                                      appearance_ : 
                                                                                                                        Appearance(
                                                                                                                          material_ : 
                                                                                                                            Material(
                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                          texture_ : 
                                                                                                                            ImageTexture(
                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                      geometry_ : 
                                                                                                                        IndexedFaceSet(
                                                                                                                          coordIndex_ : MFInt32([SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                          coord_ : 
                                                                                                                            Coordinate(
                                                                                                                              point_ : MFVec3f([SFVec3f([0.5369,0.5776,-1.124]),SFVec3f([1.139,0.5776,-0.8504]),SFVec3f([1.562,0.5776,0.0729]),SFVec3f([1.219,0.5776,0.7153]),SFVec3f([0,0.5776,1.195]),SFVec3f([-0.605,0.5776,1.101]),SFVec3f([-1.139,0.5776,-0.8504]),SFVec3f([-1.562,0.5776,0.0729]),SFVec3f([0,0.5776,-1.195]),SFVec3f([0.605,0.5776,1.101]),SFVec3f([-0.5369,0.5776,-1.124]),SFVec3f([-1.219,0.5776,0.7153]),SFVec3f([0.5369,0.0017,-1.124]),SFVec3f([1.139,0.0017,-0.8504]),SFVec3f([1.562,0.0017,0.0729]),SFVec3f([1.219,0.0017,0.7153]),SFVec3f([0,0.0017,1.195]),SFVec3f([-0.605,0.0017,1.101]),SFVec3f([-1.139,0.0017,-0.8504]),SFVec3f([-1.562,0.0017,0.0729]),SFVec3f([0,0.0017,-1.195]),SFVec3f([0.605,0.0017,1.101]),SFVec3f([-0.5369,0.0017,-1.124]),SFVec3f([-1.219,0.0017,0.7153]),SFVec3f([0.4947,0.7754,-0.9348]),SFVec3f([0,0.7754,-1]),SFVec3f([-0.4947,0.7754,-0.9348]),SFVec3f([-1.008,0.7754,-0.7016]),SFVec3f([-1.361,0.7754,0.069]),SFVec3f([-1.091,0.7754,0.5735]),SFVec3f([-0.5462,0.7754,0.9162]),SFVec3f([0,0.7754,1.001]),SFVec3f([0.5462,0.7754,0.9162]),SFVec3f([1.091,0.7754,0.5735]),SFVec3f([1.361,0.7754,0.069]),SFVec3f([1.008,0.7754,-0.7016]),SFVec3f([0,-0.2388,-1]),SFVec3f([0.4947,-0.2388,-0.9348]),SFVec3f([1.008,-0.2388,-0.7016]),SFVec3f([1.361,-0.2388,0.069]),SFVec3f([1.091,-0.2388,0.5735]),SFVec3f([0.5462,-0.2388,0.9162]),SFVec3f([0,-0.2388,1.001]),SFVec3f([-0.5462,-0.2388,0.9162]),SFVec3f([-1.091,-0.2388,0.5735]),SFVec3f([-1.361,-0.2388,0.069]),SFVec3f([-1.008,-0.2388,-0.7016]),SFVec3f([-0.4947,-0.2388,-0.9348])])),
                                                                                                                          texCoord_ : 
                                                                                                                            TextureCoordinate(
                                                                                                                              point_ : MFVec2f([SFVec2f([0.3995,0.6628]),SFVec2f([0.4094,0.6635]),SFVec2f([0.4164,0.6634]),SFVec2f([0.4107,0.6624]),SFVec2f([0.3906,0.657]),SFVec2f([0.3807,0.6628]),SFVec2f([0.3719,0.6635]),SFVec2f([0.3649,0.6634]),SFVec2f([0.3906,0.6629]),SFVec2f([0.4006,0.6628]),SFVec2f([0.3818,0.6628]),SFVec2f([0.3706,0.6624]),SFVec2f([0.3995,0.6596]),SFVec2f([0.4094,0.6606]),SFVec2f([0.4164,0.6605]),SFVec2f([0.4107,0.6591]),SFVec2f([0.3906,0.6538]),SFVec2f([0.3807,0.6592]),SFVec2f([0.3719,0.6606]),SFVec2f([0.3649,0.6605]),SFVec2f([0.3906,0.6599]),SFVec2f([0.4006,0.6592]),SFVec2f([0.3818,0.6596]),SFVec2f([0.3706,0.6591]),SFVec2f([0.3995,0.6628]),SFVec2f([0.3906,0.6629]),SFVec2f([0.3818,0.6628]),SFVec2f([0.3719,0.6635]),SFVec2f([0.3649,0.6634]),SFVec2f([0.3706,0.6624]),SFVec2f([0.3807,0.6628]),SFVec2f([0.3906,0.657]),SFVec2f([0.4006,0.6628]),SFVec2f([0.4107,0.6624]),SFVec2f([0.4164,0.6634]),SFVec2f([0.4094,0.6635]),SFVec2f([0.3906,0.6599]),SFVec2f([0.3995,0.6596]),SFVec2f([0.4094,0.6606]),SFVec2f([0.4164,0.6605]),SFVec2f([0.4107,0.6591]),SFVec2f([0.4006,0.6592]),SFVec2f([0.3906,0.6538]),SFVec2f([0.3807,0.6592]),SFVec2f([0.3706,0.6591]),SFVec2f([0.3649,0.6605]),SFVec2f([0.3719,0.6606]),SFVec2f([0.3818,0.6596])])))))]),

                                                                                                            HAnimJoint(
                                                                                                              name_ : SFString('vc3'),
                                                                                                              DEF_ : SFString('hanim_vc3'),
                                                                                                              center_ : SFVec3f([SFDouble(0), SFDouble(57.560001), SFDouble(-0.6695)]),
                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                              children_ : [
                                                                                                                HAnimSegment(
                                                                                                                  name_ : SFString('c3'),
                                                                                                                  DEF_ : SFString('hanim_c3'),
                                                                                                                  children_ : [
                                                                                                                    Transform(
                                                                                                                      translation_ : SFVec3f([SFDouble(0), SFDouble(57.560001), SFDouble(-0.6695)]),
                                                                                                                      child_ : 
                                                                                                                        Shape(
                                                                                                                          appearance_ : 
                                                                                                                            Appearance(
                                                                                                                              material_ : 
                                                                                                                                Material(
                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                              texture_ : 
                                                                                                                                ImageTexture(
                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                          geometry_ : 
                                                                                                                            IndexedFaceSet(
                                                                                                                              coordIndex_ : MFInt32([SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                              coord_ : 
                                                                                                                                Coordinate(
                                                                                                                                  point_ : MFVec3f([SFVec3f([0.5369,0.5152,-1.124]),SFVec3f([1.139,0.5152,-0.8504]),SFVec3f([1.562,0.5152,0.0729]),SFVec3f([1.219,0.5152,0.7153]),SFVec3f([0,0.5152,1.195]),SFVec3f([-0.605,0.5152,1.101]),SFVec3f([-1.139,0.5152,-0.8504]),SFVec3f([-1.562,0.5152,0.0729]),SFVec3f([0,0.5152,-1.195]),SFVec3f([0.605,0.5152,1.101]),SFVec3f([-0.5369,0.5152,-1.124]),SFVec3f([-1.219,0.5152,0.7153]),SFVec3f([0.5369,0.0015,-1.124]),SFVec3f([1.139,0.0015,-0.8504]),SFVec3f([1.562,0.0015,0.0729]),SFVec3f([1.219,0.0015,0.7153]),SFVec3f([0,0.0015,1.195]),SFVec3f([-0.605,0.0015,1.101]),SFVec3f([-1.139,0.0015,-0.8504]),SFVec3f([-1.562,0.0015,0.0729]),SFVec3f([0,0.0015,-1.195]),SFVec3f([0.605,0.0015,1.101]),SFVec3f([-0.5369,0.0015,-1.124]),SFVec3f([-1.219,0.0015,0.7153]),SFVec3f([0.4947,0.7138,-0.9348]),SFVec3f([0,0.7138,-1]),SFVec3f([-0.4947,0.7138,-0.9348]),SFVec3f([-1.008,0.7138,-0.7016]),SFVec3f([-1.361,0.7138,0.069]),SFVec3f([-1.091,0.7138,0.5735]),SFVec3f([-0.5462,0.7138,0.9162]),SFVec3f([0,0.7138,1.001]),SFVec3f([0.5462,0.7138,0.9162]),SFVec3f([1.091,0.7138,0.5735]),SFVec3f([1.361,0.7138,0.069]),SFVec3f([1.008,0.7138,-0.7016]),SFVec3f([0,-0.2398,-1]),SFVec3f([0.4947,-0.2398,-0.9348]),SFVec3f([1.008,-0.2398,-0.7016]),SFVec3f([1.361,-0.2398,0.069]),SFVec3f([1.091,-0.2398,0.5735]),SFVec3f([0.5462,-0.2398,0.9162]),SFVec3f([0,-0.2398,1.001]),SFVec3f([-0.5462,-0.2398,0.9162]),SFVec3f([-1.091,-0.2398,0.5735]),SFVec3f([-1.361,-0.2398,0.069]),SFVec3f([-1.008,-0.2398,-0.7016]),SFVec3f([-0.4947,-0.2398,-0.9348])])),
                                                                                                                              texCoord_ : 
                                                                                                                                TextureCoordinate(
                                                                                                                                  point_ : MFVec2f([SFVec2f([0.3995,0.6659]),SFVec2f([0.4094,0.6664]),SFVec2f([0.4164,0.6663]),SFVec2f([0.4107,0.6656]),SFVec2f([0.3906,0.6601]),SFVec2f([0.3807,0.6665]),SFVec2f([0.3719,0.6664]),SFVec2f([0.3649,0.6663]),SFVec2f([0.3906,0.666]),SFVec2f([0.4006,0.6665]),SFVec2f([0.3818,0.6659]),SFVec2f([0.3706,0.6656]),SFVec2f([0.3995,0.6628]),SFVec2f([0.4094,0.6635]),SFVec2f([0.4164,0.6634]),SFVec2f([0.4107,0.6624]),SFVec2f([0.3906,0.657]),SFVec2f([0.3807,0.6628]),SFVec2f([0.3719,0.6635]),SFVec2f([0.3649,0.6634]),SFVec2f([0.3906,0.6629]),SFVec2f([0.4006,0.6628]),SFVec2f([0.3818,0.6628]),SFVec2f([0.3706,0.6624]),SFVec2f([0.3995,0.6659]),SFVec2f([0.3906,0.666]),SFVec2f([0.3818,0.6659]),SFVec2f([0.3719,0.6664]),SFVec2f([0.3649,0.6663]),SFVec2f([0.3706,0.6656]),SFVec2f([0.3807,0.6665]),SFVec2f([0.3906,0.6601]),SFVec2f([0.4006,0.6665]),SFVec2f([0.4107,0.6656]),SFVec2f([0.4164,0.6663]),SFVec2f([0.4094,0.6664]),SFVec2f([0.3906,0.6629]),SFVec2f([0.3995,0.6628]),SFVec2f([0.4094,0.6635]),SFVec2f([0.4164,0.6634]),SFVec2f([0.4107,0.6624]),SFVec2f([0.4006,0.6628]),SFVec2f([0.3906,0.657]),SFVec2f([0.3807,0.6628]),SFVec2f([0.3706,0.6624]),SFVec2f([0.3649,0.6634]),SFVec2f([0.3719,0.6635]),SFVec2f([0.3818,0.6628])])))))]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('vc2'),
                                                                                                                  DEF_ : SFString('hanim_vc2'),
                                                                                                                  center_ : SFVec3f([SFDouble(0), SFDouble(58.080002), SFDouble(-0.6695)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('c2'),
                                                                                                                      DEF_ : SFString('hanim_c2'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(0), SFDouble(58.080002), SFDouble(-0.6695)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(27), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(33), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(32), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(27), SFInt32(-1), SFInt32(33), SFInt32(28), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(33), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(35), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(29), SFInt32(-1), SFInt32(35), SFInt32(31), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(30), SFInt32(-1), SFInt32(34), SFInt32(32), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(34), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(27), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(33), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(32), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(27), SFInt32(-1), SFInt32(33), SFInt32(28), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(33), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(35), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(29), SFInt32(-1), SFInt32(35), SFInt32(31), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(30), SFInt32(-1), SFInt32(34), SFInt32(32), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(34), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([0.5369,0.5216,-1.124]),SFVec3f([0,0.5216,-1.195]),SFVec3f([1.139,0.5216,-0.8504]),SFVec3f([1.562,0.5216,0.073]),SFVec3f([1.219,0.5216,0.7153]),SFVec3f([0.605,0.5216,1.101]),SFVec3f([0,0.5216,1.195]),SFVec3f([-0.5369,0.5216,-1.124]),SFVec3f([-1.139,0.5216,-0.8504]),SFVec3f([-1.562,0.5216,0.0729]),SFVec3f([-1.219,0.5216,0.7153]),SFVec3f([-0.605,0.5216,1.101]),SFVec3f([0.4798,0.7591,-0.9247]),SFVec3f([0,0.7591,-0.9883]),SFVec3f([-0.4798,0.7591,-0.9247]),SFVec3f([-0.9844,0.7591,-0.6953]),SFVec3f([-1.333,0.7591,0.066]),SFVec3f([-1.064,0.7591,0.5706]),SFVec3f([-0.5317,0.7591,0.9052]),SFVec3f([0,0.7591,0.9877]),SFVec3f([0.5317,0.7591,0.9052]),SFVec3f([1.064,0.7591,0.5706]),SFVec3f([1.333,0.7591,0.066]),SFVec3f([0.9844,0.7591,-0.6953]),SFVec3f([0.5369,0.0018,-1.124]),SFVec3f([1.139,0.0018,-0.8504]),SFVec3f([1.562,0.0018,0.073]),SFVec3f([1.219,0.0018,0.7153]),SFVec3f([0,0.0018,1.195]),SFVec3f([-0.605,0.0018,1.101]),SFVec3f([-1.139,0.0018,-0.8504]),SFVec3f([-1.562,0.0018,0.0729]),SFVec3f([0,0.0018,-1.195]),SFVec3f([0.605,0.0018,1.101]),SFVec3f([-0.5369,0.0018,-1.124]),SFVec3f([-1.219,0.0018,0.7153]),SFVec3f([0,-0.2146,-1]),SFVec3f([0.4947,-0.2146,-0.9348]),SFVec3f([1.008,-0.2146,-0.7016]),SFVec3f([1.361,-0.2146,0.069]),SFVec3f([1.091,-0.2146,0.5735]),SFVec3f([0.5462,-0.2146,0.9162]),SFVec3f([0,-0.2146,1.001]),SFVec3f([-0.5462,-0.2146,0.9162]),SFVec3f([-1.091,-0.2146,0.5735]),SFVec3f([-1.361,-0.2146,0.069]),SFVec3f([-1.008,-0.2146,-0.7016]),SFVec3f([-0.4947,-0.2146,-0.9348])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.3995,0.6721]),SFVec2f([0.3906,0.6721]),SFVec2f([0.4094,0.6721]),SFVec2f([0.4164,0.6721]),SFVec2f([0.4107,0.6721]),SFVec2f([0.4006,0.6738]),SFVec2f([0.3906,0.6664]),SFVec2f([0.3818,0.6721]),SFVec2f([0.3719,0.6721]),SFVec2f([0.3649,0.6721]),SFVec2f([0.3706,0.6721]),SFVec2f([0.3807,0.6738]),SFVec2f([0.3995,0.6721]),SFVec2f([0.3906,0.6721]),SFVec2f([0.3818,0.6721]),SFVec2f([0.3719,0.6721]),SFVec2f([0.3649,0.6721]),SFVec2f([0.3706,0.6721]),SFVec2f([0.3807,0.6738]),SFVec2f([0.3906,0.6664]),SFVec2f([0.4006,0.6738]),SFVec2f([0.4107,0.6721]),SFVec2f([0.4164,0.6721]),SFVec2f([0.4094,0.6721]),SFVec2f([0.3995,0.669]),SFVec2f([0.4094,0.6692]),SFVec2f([0.4164,0.6692]),SFVec2f([0.4107,0.6689]),SFVec2f([0.3906,0.6632]),SFVec2f([0.3807,0.6702]),SFVec2f([0.3719,0.6692]),SFVec2f([0.3649,0.6692]),SFVec2f([0.3906,0.669]),SFVec2f([0.4006,0.6702]),SFVec2f([0.3818,0.669]),SFVec2f([0.3706,0.6689]),SFVec2f([0.3906,0.669]),SFVec2f([0.3995,0.669]),SFVec2f([0.4094,0.6692]),SFVec2f([0.4164,0.6692]),SFVec2f([0.4107,0.6689]),SFVec2f([0.4006,0.6702]),SFVec2f([0.3906,0.6632]),SFVec2f([0.3807,0.6702]),SFVec2f([0.3706,0.6689]),SFVec2f([0.3649,0.6692]),SFVec2f([0.3719,0.6692]),SFVec2f([0.3818,0.669])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('vc1'),
                                                                                                                      DEF_ : SFString('hanim_vc1'),
                                                                                                                      center_ : SFVec3f([SFDouble(0), SFDouble(58.599998), SFDouble(-0.6695)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('c1'),
                                                                                                                          DEF_ : SFString('hanim_c1'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(0), SFDouble(58.599998), SFDouble(-0.6695)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(8), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(36), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(40), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(35), SFInt32(1), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(15), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(47), SFInt32(22), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([0.5369,0.5724,-1.124]),SFVec3f([1.139,0.5724,-0.8504]),SFVec3f([1.562,0.5724,0.073]),SFVec3f([1.219,0.5724,0.7153]),SFVec3f([0,0.5724,1.195]),SFVec3f([-0.605,0.5724,1.101]),SFVec3f([-1.139,0.5724,-0.8504]),SFVec3f([-1.562,0.5724,0.0729]),SFVec3f([0,0.5724,-1.195]),SFVec3f([0.605,0.5724,1.101]),SFVec3f([-0.5369,0.5724,-1.124]),SFVec3f([-1.219,0.5724,0.7153]),SFVec3f([0.5369,0.0022,-1.124]),SFVec3f([1.139,0.0022,-0.8504]),SFVec3f([1.562,0.0022,0.0729]),SFVec3f([1.219,0.0022,0.7153]),SFVec3f([0,0.0022,1.195]),SFVec3f([-0.605,0.0022,1.101]),SFVec3f([-1.139,0.0022,-0.8504]),SFVec3f([-1.562,0.0022,0.0729]),SFVec3f([0,0.0022,-1.195]),SFVec3f([0.605,0.0022,1.101]),SFVec3f([-0.5369,0.0022,-1.124]),SFVec3f([-1.219,0.0022,0.7153]),SFVec3f([0.4947,0.7703,-0.9348]),SFVec3f([0,0.7703,-1]),SFVec3f([-0.4947,0.7703,-0.9348]),SFVec3f([-1.008,0.7703,-0.7016]),SFVec3f([-1.361,0.7703,0.069]),SFVec3f([-1.091,0.7703,0.5735]),SFVec3f([-0.5462,0.7703,0.9162]),SFVec3f([0,0.7703,1.001]),SFVec3f([0.5462,0.7703,0.9162]),SFVec3f([1.091,0.7703,0.5735]),SFVec3f([1.361,0.7703,0.069]),SFVec3f([1.008,0.7703,-0.7016]),SFVec3f([0,-0.2078,-1]),SFVec3f([0.4947,-0.2078,-0.9348]),SFVec3f([1.008,-0.2078,-0.7016]),SFVec3f([1.361,-0.2078,0.069]),SFVec3f([1.091,-0.2078,0.5735]),SFVec3f([0.5462,-0.2078,0.9162]),SFVec3f([0,-0.2078,1.001]),SFVec3f([-0.5462,-0.2078,0.9162]),SFVec3f([-1.091,-0.2078,0.5735]),SFVec3f([-1.361,-0.2078,0.069]),SFVec3f([-1.008,-0.2078,-0.7016]),SFVec3f([-0.4947,-0.2078,-0.9348])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.3995,0.669]),SFVec2f([0.4094,0.6692]),SFVec2f([0.4164,0.6692]),SFVec2f([0.4107,0.6689]),SFVec2f([0.3906,0.6632]),SFVec2f([0.3807,0.6702]),SFVec2f([0.3719,0.6692]),SFVec2f([0.3649,0.6692]),SFVec2f([0.3906,0.669]),SFVec2f([0.4006,0.6702]),SFVec2f([0.3818,0.669]),SFVec2f([0.3706,0.6689]),SFVec2f([0.3995,0.6659]),SFVec2f([0.4094,0.6664]),SFVec2f([0.4164,0.6663]),SFVec2f([0.4107,0.6656]),SFVec2f([0.3906,0.6601]),SFVec2f([0.3807,0.6665]),SFVec2f([0.3719,0.6664]),SFVec2f([0.3649,0.6663]),SFVec2f([0.3906,0.666]),SFVec2f([0.4006,0.6665]),SFVec2f([0.3818,0.6659]),SFVec2f([0.3706,0.6656]),SFVec2f([0.3995,0.669]),SFVec2f([0.3906,0.669]),SFVec2f([0.3818,0.669]),SFVec2f([0.3719,0.6692]),SFVec2f([0.3649,0.6692]),SFVec2f([0.3706,0.6689]),SFVec2f([0.3807,0.6702]),SFVec2f([0.3906,0.6632]),SFVec2f([0.4006,0.6702]),SFVec2f([0.4107,0.6689]),SFVec2f([0.4164,0.6692]),SFVec2f([0.4094,0.6692]),SFVec2f([0.3906,0.666]),SFVec2f([0.3995,0.6659]),SFVec2f([0.4094,0.6664]),SFVec2f([0.4164,0.6663]),SFVec2f([0.4107,0.6656]),SFVec2f([0.4006,0.6665]),SFVec2f([0.3906,0.6601]),SFVec2f([0.3807,0.6665]),SFVec2f([0.3706,0.6656]),SFVec2f([0.3649,0.6663]),SFVec2f([0.3719,0.6664]),SFVec2f([0.3818,0.6659])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('skullbase'),
                                                                                                                          DEF_ : SFString('hanim_skullbase'),
                                                                                                                          center_ : SFVec3f([SFDouble(0), SFDouble(58.34), SFDouble(-0.6863)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('skull'),
                                                                                                                              DEF_ : SFString('hanim_skull'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(0), SFDouble(58.34), SFDouble(-0.6863)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(51), SFInt32(38), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(43), SFInt32(51), SFInt32(-1), SFInt32(43), SFInt32(52), SFInt32(171), SFInt32(-1), SFInt32(171), SFInt32(151), SFInt32(43), SFInt32(-1), SFInt32(49), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(38), SFInt32(49), SFInt32(-1), SFInt32(44), SFInt32(186), SFInt32(171), SFInt32(-1), SFInt32(171), SFInt32(52), SFInt32(44), SFInt32(-1), SFInt32(78), SFInt32(76), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(43), SFInt32(78), SFInt32(-1), SFInt32(189), SFInt32(78), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(151), SFInt32(189), SFInt32(-1), SFInt32(9), SFInt32(172), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(73), SFInt32(193), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(73), SFInt32(-1), SFInt32(11), SFInt32(50), SFInt32(27), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(172), SFInt32(-1), SFInt32(13), SFInt32(67), SFInt32(14), SFInt32(-1), SFInt32(68), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(67), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(67), SFInt32(-1), SFInt32(7), SFInt32(67), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(172), SFInt32(173), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(136), SFInt32(-1), SFInt32(7), SFInt32(136), SFInt32(130), SFInt32(-1), SFInt32(131), SFInt32(132), SFInt32(173), SFInt32(-1), SFInt32(68), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(68), SFInt32(-1), SFInt32(20), SFInt32(32), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(32), SFInt32(-1), SFInt32(15), SFInt32(66), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(32), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(32), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(17), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(11), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(11), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(17), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(12), SFInt32(26), SFInt32(29), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(29), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(22), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(67), SFInt32(-1), SFInt32(1), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(31), SFInt32(-1), SFInt32(34), SFInt32(1), SFInt32(36), SFInt32(-1), SFInt32(49), SFInt32(37), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(40), SFInt32(49), SFInt32(-1), SFInt32(39), SFInt32(37), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(1), SFInt32(-1), SFInt32(42), SFInt32(49), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(0), SFInt32(42), SFInt32(-1), SFInt32(44), SFInt32(52), SFInt32(0), SFInt32(-1), SFInt32(186), SFInt32(44), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(149), SFInt32(186), SFInt32(-1), SFInt32(51), SFInt32(76), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(76), SFInt32(77), SFInt32(-1), SFInt32(53), SFInt32(45), SFInt32(77), SFInt32(-1), SFInt32(1), SFInt32(39), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(53), SFInt32(1), SFInt32(-1), SFInt32(45), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(51), SFInt32(45), SFInt32(-1), SFInt32(53), SFInt32(77), SFInt32(46), SFInt32(-1), SFInt32(77), SFInt32(74), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(46), SFInt32(77), SFInt32(-1), SFInt32(1), SFInt32(53), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(36), SFInt32(1), SFInt32(-1), SFInt32(46), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(46), SFInt32(-1), SFInt32(74), SFInt32(50), SFInt32(33), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(47), SFInt32(-1), SFInt32(11), SFInt32(31), SFInt32(50), SFInt32(-1), SFInt32(35), SFInt32(33), SFInt32(50), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(74), SFInt32(75), SFInt32(-1), SFInt32(47), SFInt32(75), SFInt32(8), SFInt32(-1), SFInt32(27), SFInt32(50), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(50), SFInt32(47), SFInt32(-1), SFInt32(28), SFInt32(47), SFInt32(17), SFInt32(-1), SFInt32(75), SFInt32(73), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(73), SFInt32(10), SFInt32(-1), SFInt32(66), SFInt32(48), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(66), SFInt32(-1), SFInt32(75), SFInt32(66), SFInt32(8), SFInt32(-1), SFInt32(66), SFInt32(75), SFInt32(48), SFInt32(-1), SFInt32(8), SFInt32(66), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(32), SFInt32(8), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(66), SFInt32(-1), SFInt32(47), SFInt32(50), SFInt32(75), SFInt32(-1), SFInt32(41), SFInt32(52), SFInt32(43), SFInt32(-1), SFInt32(42), SFInt32(0), SFInt32(41), SFInt32(-1), SFInt32(0), SFInt32(52), SFInt32(41), SFInt32(-1), SFInt32(0), SFInt32(54), SFInt32(149), SFInt32(-1), SFInt32(244), SFInt32(245), SFInt32(54), SFInt32(-1), SFInt32(0), SFInt32(56), SFInt32(54), SFInt32(-1), SFInt32(0), SFInt32(40), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(57), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(57), SFInt32(55), SFInt32(-1), SFInt32(0), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(3), SFInt32(62), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(62), SFInt32(58), SFInt32(-1), SFInt32(3), SFInt32(64), SFInt32(62), SFInt32(-1), SFInt32(2), SFInt32(61), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(64), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(60), SFInt32(64), SFInt32(-1), SFInt32(55), SFInt32(40), SFInt32(59), SFInt32(-1), SFInt32(64), SFInt32(60), SFInt32(59), SFInt32(-1), SFInt32(64), SFInt32(59), SFInt32(135), SFInt32(-1), SFInt32(149), SFInt32(54), SFInt32(245), SFInt32(-1), SFInt32(5), SFInt32(57), SFInt32(3), SFInt32(-1), SFInt32(54), SFInt32(5), SFInt32(244), SFInt32(-1), SFInt32(152), SFInt32(63), SFInt32(61), SFInt32(-1), SFInt32(153), SFInt32(63), SFInt32(152), SFInt32(-1), SFInt32(63), SFInt32(5), SFInt32(58), SFInt32(-1), SFInt32(153), SFInt32(244), SFInt32(63), SFInt32(-1), SFInt32(244), SFInt32(5), SFInt32(63), SFInt32(-1), SFInt32(58), SFInt32(61), SFInt32(63), SFInt32(-1), SFInt32(58), SFInt32(62), SFInt32(61), SFInt32(-1), SFInt32(56), SFInt32(5), SFInt32(54), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(5), SFInt32(-1), SFInt32(60), SFInt32(3), SFInt32(55), SFInt32(-1), SFInt32(60), SFInt32(55), SFInt32(59), SFInt32(-1), SFInt32(1), SFInt32(133), SFInt32(135), SFInt32(-1), SFInt32(59), SFInt32(40), SFInt32(1), SFInt32(-1), SFInt32(59), SFInt32(1), SFInt32(135), SFInt32(-1), SFInt32(65), SFInt32(135), SFInt32(133), SFInt32(-1), SFInt32(2), SFInt32(65), SFInt32(133), SFInt32(-1), SFInt32(2), SFInt32(64), SFInt32(65), SFInt32(-1), SFInt32(64), SFInt32(135), SFInt32(65), SFInt32(-1), SFInt32(73), SFInt32(75), SFInt32(69), SFInt32(-1), SFInt32(263), SFInt32(193), SFInt32(73), SFInt32(-1), SFInt32(73), SFInt32(69), SFInt32(263), SFInt32(-1), SFInt32(69), SFInt32(75), SFInt32(74), SFInt32(-1), SFInt32(74), SFInt32(71), SFInt32(69), SFInt32(-1), SFInt32(71), SFInt32(74), SFInt32(77), SFInt32(-1), SFInt32(77), SFInt32(72), SFInt32(71), SFInt32(-1), SFInt32(69), SFInt32(71), SFInt32(266), SFInt32(-1), SFInt32(266), SFInt32(263), SFInt32(69), SFInt32(-1), SFInt32(72), SFInt32(70), SFInt32(266), SFInt32(-1), SFInt32(266), SFInt32(71), SFInt32(72), SFInt32(-1), SFInt32(78), SFInt32(72), SFInt32(77), SFInt32(-1), SFInt32(77), SFInt32(76), SFInt32(78), SFInt32(-1), SFInt32(189), SFInt32(70), SFInt32(72), SFInt32(-1), SFInt32(72), SFInt32(78), SFInt32(189), SFInt32(-1), SFInt32(138), SFInt32(123), SFInt32(113), SFInt32(-1), SFInt32(79), SFInt32(122), SFInt32(123), SFInt32(-1), SFInt32(122), SFInt32(79), SFInt32(80), SFInt32(-1), SFInt32(137), SFInt32(124), SFInt32(81), SFInt32(-1), SFInt32(137), SFInt32(81), SFInt32(82), SFInt32(-1), SFInt32(137), SFInt32(82), SFInt32(83), SFInt32(-1), SFInt32(83), SFInt32(79), SFInt32(137), SFInt32(-1), SFInt32(79), SFInt32(83), SFInt32(80), SFInt32(-1), SFInt32(84), SFInt32(116), SFInt32(122), SFInt32(-1), SFInt32(124), SFInt32(84), SFInt32(122), SFInt32(-1), SFInt32(84), SFInt32(119), SFInt32(116), SFInt32(-1), SFInt32(123), SFInt32(122), SFInt32(113), SFInt32(-1), SFInt32(113), SFInt32(122), SFInt32(109), SFInt32(-1), SFInt32(115), SFInt32(138), SFInt32(113), SFInt32(-1), SFInt32(113), SFInt32(114), SFInt32(115), SFInt32(-1), SFInt32(117), SFInt32(286), SFInt32(158), SFInt32(-1), SFInt32(158), SFInt32(112), SFInt32(117), SFInt32(-1), SFInt32(122), SFInt32(116), SFInt32(109), SFInt32(-1), SFInt32(79), SFInt32(123), SFInt32(133), SFInt32(-1), SFInt32(133), SFInt32(123), SFInt32(138), SFInt32(-1), SFInt32(133), SFInt32(137), SFInt32(79), SFInt32(-1), SFInt32(129), SFInt32(138), SFInt32(115), SFInt32(-1), SFInt32(110), SFInt32(117), SFInt32(112), SFInt32(-1), SFInt32(111), SFInt32(117), SFInt32(110), SFInt32(-1), SFInt32(2), SFInt32(133), SFInt32(138), SFInt32(-1), SFInt32(109), SFInt32(85), SFInt32(113), SFInt32(-1), SFInt32(86), SFInt32(113), SFInt32(85), SFInt32(-1), SFInt32(107), SFInt32(294), SFInt32(160), SFInt32(-1), SFInt32(160), SFInt32(126), SFInt32(107), SFInt32(-1), SFInt32(107), SFInt32(126), SFInt32(125), SFInt32(-1), SFInt32(125), SFInt32(108), SFInt32(107), SFInt32(-1), SFInt32(125), SFInt32(127), SFInt32(87), SFInt32(-1), SFInt32(87), SFInt32(108), SFInt32(125), SFInt32(-1), SFInt32(108), SFInt32(87), SFInt32(103), SFInt32(-1), SFInt32(103), SFInt32(104), SFInt32(108), SFInt32(-1), SFInt32(114), SFInt32(301), SFInt32(154), SFInt32(-1), SFInt32(154), SFInt32(115), SFInt32(114), SFInt32(-1), SFInt32(302), SFInt32(114), SFInt32(86), SFInt32(-1), SFInt32(86), SFInt32(159), SFInt32(302), SFInt32(-1), SFInt32(114), SFInt32(113), SFInt32(86), SFInt32(-1), SFInt32(116), SFInt32(105), SFInt32(109), SFInt32(-1), SFInt32(109), SFInt32(105), SFInt32(87), SFInt32(-1), SFInt32(85), SFInt32(88), SFInt32(86), SFInt32(-1), SFInt32(109), SFInt32(87), SFInt32(85), SFInt32(-1), SFInt32(104), SFInt32(174), SFInt32(305), SFInt32(-1), SFInt32(305), SFInt32(108), SFInt32(104), SFInt32(-1), SFInt32(305), SFInt32(175), SFInt32(108), SFInt32(-1), SFInt32(105), SFInt32(103), SFInt32(87), SFInt32(-1), SFInt32(307), SFInt32(91), SFInt32(170), SFInt32(-1), SFInt32(170), SFInt32(150), SFInt32(307), SFInt32(-1), SFInt32(174), SFInt32(104), SFInt32(95), SFInt32(-1), SFInt32(95), SFInt32(162), SFInt32(174), SFInt32(-1), SFInt32(311), SFInt32(150), SFInt32(170), SFInt32(-1), SFInt32(170), SFInt32(177), SFInt32(311), SFInt32(-1), SFInt32(116), SFInt32(90), SFInt32(105), SFInt32(-1), SFInt32(89), SFInt32(90), SFInt32(116), SFInt32(-1), SFInt32(94), SFInt32(168), SFInt32(167), SFInt32(-1), SFInt32(167), SFInt32(93), SFInt32(94), SFInt32(-1), SFInt32(105), SFInt32(90), SFInt32(96), SFInt32(-1), SFInt32(97), SFInt32(95), SFInt32(104), SFInt32(-1), SFInt32(104), SFInt32(103), SFInt32(97), SFInt32(-1), SFInt32(120), SFInt32(121), SFInt32(95), SFInt32(-1), SFInt32(95), SFInt32(97), SFInt32(120), SFInt32(-1), SFInt32(105), SFInt32(96), SFInt32(97), SFInt32(-1), SFInt32(97), SFInt32(103), SFInt32(105), SFInt32(-1), SFInt32(120), SFInt32(97), SFInt32(96), SFInt32(-1), SFInt32(96), SFInt32(98), SFInt32(120), SFInt32(-1), SFInt32(121), SFInt32(100), SFInt32(95), SFInt32(-1), SFInt32(163), SFInt32(91), SFInt32(162), SFInt32(-1), SFInt32(93), SFInt32(170), SFInt32(99), SFInt32(-1), SFInt32(98), SFInt32(96), SFInt32(90), SFInt32(-1), SFInt32(90), SFInt32(101), SFInt32(98), SFInt32(-1), SFInt32(99), SFInt32(163), SFInt32(100), SFInt32(-1), SFInt32(110), SFInt32(112), SFInt32(92), SFInt32(-1), SFInt32(101), SFInt32(90), SFInt32(89), SFInt32(-1), SFInt32(89), SFInt32(106), SFInt32(101), SFInt32(-1), SFInt32(92), SFInt32(112), SFInt32(165), SFInt32(-1), SFInt32(165), SFInt32(177), SFInt32(170), SFInt32(-1), SFInt32(175), SFInt32(294), SFInt32(107), SFInt32(-1), SFInt32(107), SFInt32(108), SFInt32(175), SFInt32(-1), SFInt32(119), SFInt32(89), SFInt32(116), SFInt32(-1), SFInt32(118), SFInt32(111), SFInt32(119), SFInt32(-1), SFInt32(118), SFInt32(117), SFInt32(111), SFInt32(-1), SFInt32(152), SFInt32(138), SFInt32(129), SFInt32(-1), SFInt32(2), SFInt32(138), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(138), SFInt32(152), SFInt32(-1), SFInt32(87), SFInt32(127), SFInt32(88), SFInt32(-1), SFInt32(88), SFInt32(85), SFInt32(87), SFInt32(-1), SFInt32(124), SFInt32(119), SFInt32(84), SFInt32(-1), SFInt32(119), SFInt32(111), SFInt32(164), SFInt32(-1), SFInt32(111), SFInt32(166), SFInt32(164), SFInt32(-1), SFInt32(111), SFInt32(110), SFInt32(166), SFInt32(-1), SFInt32(92), SFInt32(166), SFInt32(110), SFInt32(-1), SFInt32(133), SFInt32(4), SFInt32(137), SFInt32(-1), SFInt32(133), SFInt32(134), SFInt32(4), SFInt32(-1), SFInt32(160), SFInt32(176), SFInt32(128), SFInt32(-1), SFInt32(128), SFInt32(126), SFInt32(160), SFInt32(-1), SFInt32(126), SFInt32(128), SFInt32(127), SFInt32(-1), SFInt32(127), SFInt32(125), SFInt32(126), SFInt32(-1), SFInt32(80), SFInt32(81), SFInt32(124), SFInt32(-1), SFInt32(124), SFInt32(122), SFInt32(80), SFInt32(-1), SFInt32(82), SFInt32(81), SFInt32(80), SFInt32(-1), SFInt32(80), SFInt32(83), SFInt32(82), SFInt32(-1), SFInt32(129), SFInt32(115), SFInt32(154), SFInt32(-1), SFInt32(154), SFInt32(152), SFInt32(129), SFInt32(-1), SFInt32(94), SFInt32(140), SFInt32(139), SFInt32(-1), SFInt32(139), SFInt32(102), SFInt32(94), SFInt32(-1), SFInt32(93), SFInt32(141), SFInt32(140), SFInt32(-1), SFInt32(140), SFInt32(94), SFInt32(93), SFInt32(-1), SFInt32(99), SFInt32(142), SFInt32(141), SFInt32(-1), SFInt32(141), SFInt32(93), SFInt32(99), SFInt32(-1), SFInt32(100), SFInt32(143), SFInt32(142), SFInt32(-1), SFInt32(142), SFInt32(99), SFInt32(100), SFInt32(-1), SFInt32(121), SFInt32(144), SFInt32(143), SFInt32(-1), SFInt32(143), SFInt32(100), SFInt32(121), SFInt32(-1), SFInt32(120), SFInt32(145), SFInt32(144), SFInt32(-1), SFInt32(144), SFInt32(121), SFInt32(120), SFInt32(-1), SFInt32(98), SFInt32(146), SFInt32(145), SFInt32(-1), SFInt32(145), SFInt32(120), SFInt32(98), SFInt32(-1), SFInt32(101), SFInt32(147), SFInt32(146), SFInt32(-1), SFInt32(146), SFInt32(98), SFInt32(101), SFInt32(-1), SFInt32(106), SFInt32(148), SFInt32(147), SFInt32(-1), SFInt32(147), SFInt32(101), SFInt32(106), SFInt32(-1), SFInt32(106), SFInt32(102), SFInt32(139), SFInt32(-1), SFInt32(139), SFInt32(148), SFInt32(106), SFInt32(-1), SFInt32(114), SFInt32(302), SFInt32(301), SFInt32(-1), SFInt32(88), SFInt32(127), SFInt32(155), SFInt32(-1), SFInt32(155), SFInt32(157), SFInt32(88), SFInt32(-1), SFInt32(127), SFInt32(161), SFInt32(156), SFInt32(-1), SFInt32(156), SFInt32(155), SFInt32(127), SFInt32(-1), SFInt32(352), SFInt32(353), SFInt32(156), SFInt32(-1), SFInt32(156), SFInt32(161), SFInt32(352), SFInt32(-1), SFInt32(156), SFInt32(353), SFInt32(354), SFInt32(-1), SFInt32(155), SFInt32(156), SFInt32(354), SFInt32(-1), SFInt32(155), SFInt32(354), SFInt32(157), SFInt32(-1), SFInt32(127), SFInt32(128), SFInt32(161), SFInt32(-1), SFInt32(161), SFInt32(128), SFInt32(176), SFInt32(-1), SFInt32(176), SFInt32(352), SFInt32(161), SFInt32(-1), SFInt32(168), SFInt32(94), SFInt32(102), SFInt32(-1), SFInt32(102), SFInt32(169), SFInt32(168), SFInt32(-1), SFInt32(170), SFInt32(93), SFInt32(167), SFInt32(-1), SFInt32(169), SFInt32(102), SFInt32(106), SFInt32(-1), SFInt32(106), SFInt32(164), SFInt32(169), SFInt32(-1), SFInt32(170), SFInt32(91), SFInt32(99), SFInt32(-1), SFInt32(99), SFInt32(91), SFInt32(163), SFInt32(-1), SFInt32(100), SFInt32(163), SFInt32(162), SFInt32(-1), SFInt32(162), SFInt32(95), SFInt32(100), SFInt32(-1), SFInt32(91), SFInt32(307), SFInt32(174), SFInt32(-1), SFInt32(174), SFInt32(162), SFInt32(91), SFInt32(-1), SFInt32(164), SFInt32(106), SFInt32(89), SFInt32(-1), SFInt32(164), SFInt32(89), SFInt32(119), SFInt32(-1), SFInt32(165), SFInt32(170), SFInt32(167), SFInt32(-1), SFInt32(92), SFInt32(165), SFInt32(167), SFInt32(-1), SFInt32(167), SFInt32(168), SFInt32(92), SFInt32(-1), SFInt32(166), SFInt32(92), SFInt32(168), SFInt32(-1), SFInt32(168), SFInt32(169), SFInt32(166), SFInt32(-1), SFInt32(164), SFInt32(166), SFInt32(169), SFInt32(-1), SFInt32(165), SFInt32(112), SFInt32(177), SFInt32(-1), SFInt32(177), SFInt32(112), SFInt32(158), SFInt32(-1), SFInt32(158), SFInt32(311), SFInt32(177), SFInt32(-1), SFInt32(180), SFInt32(179), SFInt32(178), SFInt32(-1), SFInt32(178), SFInt32(181), SFInt32(180), SFInt32(-1), SFInt32(179), SFInt32(151), SFInt32(171), SFInt32(-1), SFInt32(171), SFInt32(182), SFInt32(179), SFInt32(-1), SFInt32(183), SFInt32(181), SFInt32(178), SFInt32(-1), SFInt32(178), SFInt32(184), SFInt32(183), SFInt32(-1), SFInt32(185), SFInt32(182), SFInt32(171), SFInt32(-1), SFInt32(171), SFInt32(186), SFInt32(185), SFInt32(-1), SFInt32(187), SFInt32(179), SFInt32(180), SFInt32(-1), SFInt32(180), SFInt32(188), SFInt32(187), SFInt32(-1), SFInt32(189), SFInt32(151), SFInt32(179), SFInt32(-1), SFInt32(179), SFInt32(187), SFInt32(189), SFInt32(-1), SFInt32(9), SFInt32(191), SFInt32(190), SFInt32(-1), SFInt32(190), SFInt32(172), SFInt32(9), SFInt32(-1), SFInt32(192), SFInt32(191), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(193), SFInt32(192), SFInt32(-1), SFInt32(194), SFInt32(196), SFInt32(195), SFInt32(-1), SFInt32(197), SFInt32(172), SFInt32(190), SFInt32(-1), SFInt32(190), SFInt32(199), SFInt32(198), SFInt32(-1), SFInt32(200), SFInt32(199), SFInt32(201), SFInt32(-1), SFInt32(202), SFInt32(198), SFInt32(203), SFInt32(-1), SFInt32(190), SFInt32(198), SFInt32(197), SFInt32(-1), SFInt32(202), SFInt32(197), SFInt32(198), SFInt32(-1), SFInt32(197), SFInt32(173), SFInt32(172), SFInt32(-1), SFInt32(202), SFInt32(204), SFInt32(197), SFInt32(-1), SFInt32(202), SFInt32(205), SFInt32(204), SFInt32(-1), SFInt32(206), SFInt32(173), SFInt32(207), SFInt32(-1), SFInt32(200), SFInt32(201), SFInt32(208), SFInt32(-1), SFInt32(208), SFInt32(209), SFInt32(200), SFInt32(-1), SFInt32(210), SFInt32(208), SFInt32(211), SFInt32(-1), SFInt32(212), SFInt32(211), SFInt32(213), SFInt32(-1), SFInt32(201), SFInt32(199), SFInt32(190), SFInt32(-1), SFInt32(190), SFInt32(214), SFInt32(201), SFInt32(-1), SFInt32(211), SFInt32(212), SFInt32(215), SFInt32(-1), SFInt32(215), SFInt32(216), SFInt32(211), SFInt32(-1), SFInt32(217), SFInt32(216), SFInt32(215), SFInt32(-1), SFInt32(217), SFInt32(215), SFInt32(218), SFInt32(-1), SFInt32(215), SFInt32(212), SFInt32(218), SFInt32(-1), SFInt32(196), SFInt32(194), SFInt32(219), SFInt32(-1), SFInt32(219), SFInt32(194), SFInt32(220), SFInt32(-1), SFInt32(218), SFInt32(212), SFInt32(221), SFInt32(-1), SFInt32(196), SFInt32(223), SFInt32(222), SFInt32(-1), SFInt32(224), SFInt32(223), SFInt32(225), SFInt32(-1), SFInt32(225), SFInt32(223), SFInt32(196), SFInt32(-1), SFInt32(196), SFInt32(222), SFInt32(221), SFInt32(-1), SFInt32(222), SFInt32(218), SFInt32(221), SFInt32(-1), SFInt32(203), SFInt32(198), SFInt32(199), SFInt32(-1), SFInt32(226), SFInt32(220), SFInt32(227), SFInt32(-1), SFInt32(227), SFInt32(229), SFInt32(228), SFInt32(-1), SFInt32(227), SFInt32(220), SFInt32(229), SFInt32(-1), SFInt32(227), SFInt32(228), SFInt32(226), SFInt32(-1), SFInt32(183), SFInt32(230), SFInt32(226), SFInt32(-1), SFInt32(226), SFInt32(231), SFInt32(183), SFInt32(-1), SFInt32(232), SFInt32(181), SFInt32(183), SFInt32(-1), SFInt32(183), SFInt32(231), SFInt32(232), SFInt32(-1), SFInt32(231), SFInt32(226), SFInt32(232), SFInt32(-1), SFInt32(184), SFInt32(233), SFInt32(230), SFInt32(-1), SFInt32(230), SFInt32(183), SFInt32(184), SFInt32(-1), SFInt32(185), SFInt32(233), SFInt32(182), SFInt32(-1), SFInt32(186), SFInt32(149), SFInt32(233), SFInt32(-1), SFInt32(233), SFInt32(185), SFInt32(186), SFInt32(-1), SFInt32(180), SFInt32(234), SFInt32(188), SFInt32(-1), SFInt32(234), SFInt32(235), SFInt32(188), SFInt32(-1), SFInt32(236), SFInt32(235), SFInt32(234), SFInt32(-1), SFInt32(226), SFInt32(236), SFInt32(234), SFInt32(-1), SFInt32(234), SFInt32(232), SFInt32(226), SFInt32(-1), SFInt32(234), SFInt32(180), SFInt32(181), SFInt32(-1), SFInt32(181), SFInt32(232), SFInt32(234), SFInt32(-1), SFInt32(236), SFInt32(237), SFInt32(235), SFInt32(-1), SFInt32(235), SFInt32(237), SFInt32(238), SFInt32(-1), SFInt32(238), SFInt32(239), SFInt32(235), SFInt32(-1), SFInt32(226), SFInt32(228), SFInt32(237), SFInt32(-1), SFInt32(237), SFInt32(236), SFInt32(226), SFInt32(-1), SFInt32(237), SFInt32(228), SFInt32(229), SFInt32(-1), SFInt32(229), SFInt32(238), SFInt32(237), SFInt32(-1), SFInt32(239), SFInt32(238), SFInt32(195), SFInt32(-1), SFInt32(213), SFInt32(240), SFInt32(212), SFInt32(-1), SFInt32(194), SFInt32(195), SFInt32(220), SFInt32(-1), SFInt32(229), SFInt32(195), SFInt32(238), SFInt32(-1), SFInt32(220), SFInt32(195), SFInt32(229), SFInt32(-1), SFInt32(195), SFInt32(241), SFInt32(239), SFInt32(-1), SFInt32(240), SFInt32(213), SFInt32(241), SFInt32(-1), SFInt32(196), SFInt32(221), SFInt32(195), SFInt32(-1), SFInt32(221), SFInt32(240), SFInt32(195), SFInt32(-1), SFInt32(221), SFInt32(212), SFInt32(240), SFInt32(-1), SFInt32(241), SFInt32(242), SFInt32(192), SFInt32(-1), SFInt32(242), SFInt32(191), SFInt32(192), SFInt32(-1), SFInt32(214), SFInt32(190), SFInt32(191), SFInt32(-1), SFInt32(191), SFInt32(242), SFInt32(214), SFInt32(-1), SFInt32(241), SFInt32(213), SFInt32(214), SFInt32(-1), SFInt32(214), SFInt32(242), SFInt32(241), SFInt32(-1), SFInt32(213), SFInt32(211), SFInt32(208), SFInt32(-1), SFInt32(208), SFInt32(214), SFInt32(213), SFInt32(-1), SFInt32(201), SFInt32(214), SFInt32(208), SFInt32(-1), SFInt32(240), SFInt32(241), SFInt32(195), SFInt32(-1), SFInt32(178), SFInt32(179), SFInt32(182), SFInt32(-1), SFInt32(184), SFInt32(178), SFInt32(233), SFInt32(-1), SFInt32(233), SFInt32(178), SFInt32(182), SFInt32(-1), SFInt32(233), SFInt32(149), SFInt32(243), SFInt32(-1), SFInt32(244), SFInt32(243), SFInt32(245), SFInt32(-1), SFInt32(233), SFInt32(243), SFInt32(246), SFInt32(-1), SFInt32(233), SFInt32(248), SFInt32(247), SFInt32(-1), SFInt32(247), SFInt32(230), SFInt32(233), SFInt32(-1), SFInt32(249), SFInt32(247), SFInt32(248), SFInt32(-1), SFInt32(233), SFInt32(246), SFInt32(248), SFInt32(-1), SFInt32(249), SFInt32(251), SFInt32(250), SFInt32(-1), SFInt32(251), SFInt32(252), SFInt32(250), SFInt32(-1), SFInt32(249), SFInt32(250), SFInt32(253), SFInt32(-1), SFInt32(254), SFInt32(253), SFInt32(250), SFInt32(-1), SFInt32(250), SFInt32(255), SFInt32(254), SFInt32(-1), SFInt32(249), SFInt32(253), SFInt32(256), SFInt32(-1), SFInt32(247), SFInt32(257), SFInt32(230), SFInt32(-1), SFInt32(253), SFInt32(257), SFInt32(256), SFInt32(-1), SFInt32(253), SFInt32(258), SFInt32(257), SFInt32(-1), SFInt32(149), SFInt32(245), SFInt32(243), SFInt32(-1), SFInt32(251), SFInt32(249), SFInt32(248), SFInt32(-1), SFInt32(243), SFInt32(244), SFInt32(251), SFInt32(-1), SFInt32(152), SFInt32(255), SFInt32(259), SFInt32(-1), SFInt32(153), SFInt32(152), SFInt32(259), SFInt32(-1), SFInt32(259), SFInt32(252), SFInt32(251), SFInt32(-1), SFInt32(153), SFInt32(259), SFInt32(244), SFInt32(-1), SFInt32(244), SFInt32(259), SFInt32(251), SFInt32(-1), SFInt32(252), SFInt32(259), SFInt32(255), SFInt32(-1), SFInt32(252), SFInt32(255), SFInt32(250), SFInt32(-1), SFInt32(246), SFInt32(243), SFInt32(251), SFInt32(-1), SFInt32(246), SFInt32(251), SFInt32(248), SFInt32(-1), SFInt32(256), SFInt32(247), SFInt32(249), SFInt32(-1), SFInt32(256), SFInt32(257), SFInt32(247), SFInt32(-1), SFInt32(226), SFInt32(258), SFInt32(260), SFInt32(-1), SFInt32(257), SFInt32(226), SFInt32(230), SFInt32(-1), SFInt32(257), SFInt32(258), SFInt32(226), SFInt32(-1), SFInt32(261), SFInt32(260), SFInt32(258), SFInt32(-1), SFInt32(254), SFInt32(260), SFInt32(261), SFInt32(-1), SFInt32(254), SFInt32(261), SFInt32(253), SFInt32(-1), SFInt32(253), SFInt32(261), SFInt32(258), SFInt32(-1), SFInt32(192), SFInt32(262), SFInt32(241), SFInt32(-1), SFInt32(263), SFInt32(262), SFInt32(192), SFInt32(-1), SFInt32(192), SFInt32(193), SFInt32(263), SFInt32(-1), SFInt32(262), SFInt32(264), SFInt32(239), SFInt32(-1), SFInt32(239), SFInt32(241), SFInt32(262), SFInt32(-1), SFInt32(264), SFInt32(265), SFInt32(235), SFInt32(-1), SFInt32(235), SFInt32(239), SFInt32(264), SFInt32(-1), SFInt32(262), SFInt32(263), SFInt32(266), SFInt32(-1), SFInt32(266), SFInt32(264), SFInt32(262), SFInt32(-1), SFInt32(265), SFInt32(264), SFInt32(266), SFInt32(-1), SFInt32(266), SFInt32(70), SFInt32(265), SFInt32(-1), SFInt32(187), SFInt32(188), SFInt32(235), SFInt32(-1), SFInt32(235), SFInt32(265), SFInt32(187), SFInt32(-1), SFInt32(189), SFInt32(187), SFInt32(265), SFInt32(-1), SFInt32(265), SFInt32(70), SFInt32(189), SFInt32(-1), SFInt32(267), SFInt32(269), SFInt32(268), SFInt32(-1), SFInt32(270), SFInt32(268), SFInt32(271), SFInt32(-1), SFInt32(271), SFInt32(272), SFInt32(270), SFInt32(-1), SFInt32(273), SFInt32(275), SFInt32(274), SFInt32(-1), SFInt32(273), SFInt32(276), SFInt32(275), SFInt32(-1), SFInt32(273), SFInt32(270), SFInt32(277), SFInt32(-1), SFInt32(277), SFInt32(276), SFInt32(273), SFInt32(-1), SFInt32(270), SFInt32(272), SFInt32(277), SFInt32(-1), SFInt32(278), SFInt32(271), SFInt32(279), SFInt32(-1), SFInt32(274), SFInt32(271), SFInt32(278), SFInt32(-1), SFInt32(278), SFInt32(279), SFInt32(280), SFInt32(-1), SFInt32(268), SFInt32(269), SFInt32(271), SFInt32(-1), SFInt32(269), SFInt32(281), SFInt32(271), SFInt32(-1), SFInt32(283), SFInt32(282), SFInt32(269), SFInt32(-1), SFInt32(269), SFInt32(267), SFInt32(283), SFInt32(-1), SFInt32(285), SFInt32(284), SFInt32(158), SFInt32(-1), SFInt32(158), SFInt32(286), SFInt32(285), SFInt32(-1), SFInt32(271), SFInt32(281), SFInt32(279), SFInt32(-1), SFInt32(270), SFInt32(260), SFInt32(268), SFInt32(-1), SFInt32(260), SFInt32(267), SFInt32(268), SFInt32(-1), SFInt32(260), SFInt32(270), SFInt32(273), SFInt32(-1), SFInt32(287), SFInt32(283), SFInt32(267), SFInt32(-1), SFInt32(288), SFInt32(284), SFInt32(285), SFInt32(-1), SFInt32(289), SFInt32(288), SFInt32(285), SFInt32(-1), SFInt32(254), SFInt32(267), SFInt32(260), SFInt32(-1), SFInt32(281), SFInt32(269), SFInt32(290), SFInt32(-1), SFInt32(291), SFInt32(290), SFInt32(269), SFInt32(-1), SFInt32(293), SFInt32(292), SFInt32(160), SFInt32(-1), SFInt32(160), SFInt32(294), SFInt32(293), SFInt32(-1), SFInt32(293), SFInt32(296), SFInt32(295), SFInt32(-1), SFInt32(295), SFInt32(292), SFInt32(293), SFInt32(-1), SFInt32(295), SFInt32(296), SFInt32(297), SFInt32(-1), SFInt32(297), SFInt32(298), SFInt32(295), SFInt32(-1), SFInt32(296), SFInt32(300), SFInt32(299), SFInt32(-1), SFInt32(299), SFInt32(297), SFInt32(296), SFInt32(-1), SFInt32(282), SFInt32(283), SFInt32(154), SFInt32(-1), SFInt32(154), SFInt32(301), SFInt32(282), SFInt32(-1), SFInt32(302), SFInt32(159), SFInt32(291), SFInt32(-1), SFInt32(291), SFInt32(282), SFInt32(302), SFInt32(-1), SFInt32(282), SFInt32(291), SFInt32(269), SFInt32(-1), SFInt32(279), SFInt32(281), SFInt32(303), SFInt32(-1), SFInt32(281), SFInt32(297), SFInt32(303), SFInt32(-1), SFInt32(290), SFInt32(291), SFInt32(304), SFInt32(-1), SFInt32(281), SFInt32(290), SFInt32(297), SFInt32(-1), SFInt32(300), SFInt32(296), SFInt32(305), SFInt32(-1), SFInt32(305), SFInt32(174), SFInt32(300), SFInt32(-1), SFInt32(305), SFInt32(296), SFInt32(175), SFInt32(-1), SFInt32(303), SFInt32(297), SFInt32(299), SFInt32(-1), SFInt32(307), SFInt32(150), SFInt32(306), SFInt32(-1), SFInt32(306), SFInt32(308), SFInt32(307), SFInt32(-1), SFInt32(174), SFInt32(310), SFInt32(309), SFInt32(-1), SFInt32(309), SFInt32(300), SFInt32(174), SFInt32(-1), SFInt32(311), SFInt32(312), SFInt32(306), SFInt32(-1), SFInt32(306), SFInt32(150), SFInt32(311), SFInt32(-1), SFInt32(279), SFInt32(303), SFInt32(313), SFInt32(-1), SFInt32(314), SFInt32(279), SFInt32(313), SFInt32(-1), SFInt32(315), SFInt32(318), SFInt32(317), SFInt32(-1), SFInt32(317), SFInt32(316), SFInt32(315), SFInt32(-1), SFInt32(303), SFInt32(319), SFInt32(313), SFInt32(-1), SFInt32(320), SFInt32(299), SFInt32(300), SFInt32(-1), SFInt32(300), SFInt32(309), SFInt32(320), SFInt32(-1), SFInt32(321), SFInt32(320), SFInt32(309), SFInt32(-1), SFInt32(309), SFInt32(322), SFInt32(321), SFInt32(-1), SFInt32(303), SFInt32(299), SFInt32(320), SFInt32(-1), SFInt32(320), SFInt32(319), SFInt32(303), SFInt32(-1), SFInt32(321), SFInt32(323), SFInt32(319), SFInt32(-1), SFInt32(319), SFInt32(320), SFInt32(321), SFInt32(-1), SFInt32(322), SFInt32(309), SFInt32(324), SFInt32(-1), SFInt32(325), SFInt32(310), SFInt32(308), SFInt32(-1), SFInt32(318), SFInt32(326), SFInt32(306), SFInt32(-1), SFInt32(323), SFInt32(327), SFInt32(313), SFInt32(-1), SFInt32(313), SFInt32(319), SFInt32(323), SFInt32(-1), SFInt32(326), SFInt32(324), SFInt32(325), SFInt32(-1), SFInt32(288), SFInt32(328), SFInt32(284), SFInt32(-1), SFInt32(327), SFInt32(329), SFInt32(314), SFInt32(-1), SFInt32(314), SFInt32(313), SFInt32(327), SFInt32(-1), SFInt32(328), SFInt32(330), SFInt32(284), SFInt32(-1), SFInt32(330), SFInt32(306), SFInt32(312), SFInt32(-1), SFInt32(175), SFInt32(293), SFInt32(294), SFInt32(-1), SFInt32(293), SFInt32(175), SFInt32(296), SFInt32(-1), SFInt32(280), SFInt32(279), SFInt32(314), SFInt32(-1), SFInt32(331), SFInt32(280), SFInt32(289), SFInt32(-1), SFInt32(331), SFInt32(289), SFInt32(285), SFInt32(-1), SFInt32(152), SFInt32(287), SFInt32(267), SFInt32(-1), SFInt32(254), SFInt32(255), SFInt32(267), SFInt32(-1), SFInt32(255), SFInt32(152), SFInt32(267), SFInt32(-1), SFInt32(297), SFInt32(290), SFInt32(304), SFInt32(-1), SFInt32(304), SFInt32(298), SFInt32(297), SFInt32(-1), SFInt32(274), SFInt32(278), SFInt32(280), SFInt32(-1), SFInt32(280), SFInt32(332), SFInt32(289), SFInt32(-1), SFInt32(289), SFInt32(332), SFInt32(333), SFInt32(-1), SFInt32(289), SFInt32(333), SFInt32(288), SFInt32(-1), SFInt32(328), SFInt32(288), SFInt32(333), SFInt32(-1), SFInt32(260), SFInt32(273), SFInt32(334), SFInt32(-1), SFInt32(260), SFInt32(334), SFInt32(335), SFInt32(-1), SFInt32(160), SFInt32(292), SFInt32(336), SFInt32(-1), SFInt32(336), SFInt32(176), SFInt32(160), SFInt32(-1), SFInt32(292), SFInt32(295), SFInt32(298), SFInt32(-1), SFInt32(298), SFInt32(336), SFInt32(292), SFInt32(-1), SFInt32(272), SFInt32(271), SFInt32(274), SFInt32(-1), SFInt32(274), SFInt32(275), SFInt32(272), SFInt32(-1), SFInt32(276), SFInt32(277), SFInt32(272), SFInt32(-1), SFInt32(272), SFInt32(275), SFInt32(276), SFInt32(-1), SFInt32(287), SFInt32(152), SFInt32(154), SFInt32(-1), SFInt32(154), SFInt32(283), SFInt32(287), SFInt32(-1), SFInt32(315), SFInt32(337), SFInt32(339), SFInt32(-1), SFInt32(339), SFInt32(338), SFInt32(315), SFInt32(-1), SFInt32(318), SFInt32(315), SFInt32(338), SFInt32(-1), SFInt32(338), SFInt32(340), SFInt32(318), SFInt32(-1), SFInt32(326), SFInt32(318), SFInt32(340), SFInt32(-1), SFInt32(340), SFInt32(341), SFInt32(326), SFInt32(-1), SFInt32(324), SFInt32(326), SFInt32(341), SFInt32(-1), SFInt32(341), SFInt32(342), SFInt32(324), SFInt32(-1), SFInt32(322), SFInt32(324), SFInt32(342), SFInt32(-1), SFInt32(342), SFInt32(343), SFInt32(322), SFInt32(-1), SFInt32(321), SFInt32(322), SFInt32(343), SFInt32(-1), SFInt32(343), SFInt32(344), SFInt32(321), SFInt32(-1), SFInt32(323), SFInt32(321), SFInt32(344), SFInt32(-1), SFInt32(344), SFInt32(345), SFInt32(323), SFInt32(-1), SFInt32(327), SFInt32(323), SFInt32(345), SFInt32(-1), SFInt32(345), SFInt32(346), SFInt32(327), SFInt32(-1), SFInt32(329), SFInt32(327), SFInt32(346), SFInt32(-1), SFInt32(346), SFInt32(347), SFInt32(329), SFInt32(-1), SFInt32(329), SFInt32(347), SFInt32(339), SFInt32(-1), SFInt32(339), SFInt32(337), SFInt32(329), SFInt32(-1), SFInt32(282), SFInt32(301), SFInt32(302), SFInt32(-1), SFInt32(304), SFInt32(349), SFInt32(348), SFInt32(-1), SFInt32(348), SFInt32(298), SFInt32(304), SFInt32(-1), SFInt32(298), SFInt32(348), SFInt32(351), SFInt32(-1), SFInt32(351), SFInt32(350), SFInt32(298), SFInt32(-1), SFInt32(352), SFInt32(350), SFInt32(351), SFInt32(-1), SFInt32(351), SFInt32(353), SFInt32(352), SFInt32(-1), SFInt32(348), SFInt32(349), SFInt32(354), SFInt32(-1), SFInt32(354), SFInt32(353), SFInt32(351), SFInt32(-1), SFInt32(348), SFInt32(354), SFInt32(351), SFInt32(-1), SFInt32(298), SFInt32(350), SFInt32(336), SFInt32(-1), SFInt32(350), SFInt32(352), SFInt32(176), SFInt32(-1), SFInt32(176), SFInt32(336), SFInt32(350), SFInt32(-1), SFInt32(316), SFInt32(355), SFInt32(337), SFInt32(-1), SFInt32(337), SFInt32(315), SFInt32(316), SFInt32(-1), SFInt32(306), SFInt32(317), SFInt32(318), SFInt32(-1), SFInt32(355), SFInt32(332), SFInt32(329), SFInt32(-1), SFInt32(329), SFInt32(337), SFInt32(355), SFInt32(-1), SFInt32(306), SFInt32(326), SFInt32(308), SFInt32(-1), SFInt32(326), SFInt32(325), SFInt32(308), SFInt32(-1), SFInt32(324), SFInt32(309), SFInt32(310), SFInt32(-1), SFInt32(310), SFInt32(325), SFInt32(324), SFInt32(-1), SFInt32(308), SFInt32(310), SFInt32(174), SFInt32(-1), SFInt32(174), SFInt32(307), SFInt32(308), SFInt32(-1), SFInt32(332), SFInt32(314), SFInt32(329), SFInt32(-1), SFInt32(332), SFInt32(280), SFInt32(314), SFInt32(-1), SFInt32(330), SFInt32(317), SFInt32(306), SFInt32(-1), SFInt32(328), SFInt32(316), SFInt32(317), SFInt32(-1), SFInt32(317), SFInt32(330), SFInt32(328), SFInt32(-1), SFInt32(333), SFInt32(355), SFInt32(316), SFInt32(-1), SFInt32(316), SFInt32(328), SFInt32(333), SFInt32(-1), SFInt32(332), SFInt32(355), SFInt32(333), SFInt32(-1), SFInt32(330), SFInt32(312), SFInt32(284), SFInt32(-1), SFInt32(312), SFInt32(311), SFInt32(158), SFInt32(-1), SFInt32(158), SFInt32(284), SFInt32(312), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(16), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(23), SFInt32(-1), SFInt32(31), SFInt32(17), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(23), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(33), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(27), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(34), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(36), SFInt32(-1), SFInt32(26), SFInt32(40), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(24), SFInt32(26), SFInt32(-1), SFInt32(36), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(39), SFInt32(36), SFInt32(-1), SFInt32(43), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(44), SFInt32(39), SFInt32(-1), SFInt32(20), SFInt32(45), SFInt32(22), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(22), SFInt32(-1), SFInt32(44), SFInt32(47), SFInt32(39), SFInt32(-1), SFInt32(20), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(48), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(51), SFInt32(20), SFInt32(50), SFInt32(-1), SFInt32(20), SFInt32(47), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(47), SFInt32(44), SFInt32(-1), SFInt32(28), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(46), SFInt32(-1), SFInt32(52), SFInt32(55), SFInt32(54), SFInt32(-1), SFInt32(52), SFInt32(54), SFInt32(46), SFInt32(-1), SFInt32(52), SFInt32(53), SFInt32(55), SFInt32(-1), SFInt32(7), SFInt32(57), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(56), SFInt32(7), SFInt32(-1), SFInt32(58), SFInt32(57), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(57), SFInt32(58), SFInt32(53), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(60), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(60), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(12), SFInt32(63), SFInt32(-1), SFInt32(64), SFInt32(62), SFInt32(63), SFInt32(-1), SFInt32(53), SFInt32(58), SFInt32(62), SFInt32(-1), SFInt32(62), SFInt32(64), SFInt32(53), SFInt32(-1), SFInt32(62), SFInt32(58), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(0), SFInt32(62), SFInt32(-1), SFInt32(64), SFInt32(63), SFInt32(65), SFInt32(-1), SFInt32(63), SFInt32(67), SFInt32(66), SFInt32(-1), SFInt32(66), SFInt32(65), SFInt32(63), SFInt32(-1), SFInt32(53), SFInt32(64), SFInt32(65), SFInt32(-1), SFInt32(65), SFInt32(55), SFInt32(53), SFInt32(-1), SFInt32(65), SFInt32(66), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(55), SFInt32(65), SFInt32(-1), SFInt32(67), SFInt32(21), SFInt32(66), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(68), SFInt32(-1), SFInt32(22), SFInt32(46), SFInt32(21), SFInt32(-1), SFInt32(54), SFInt32(66), SFInt32(21), SFInt32(-1), SFInt32(46), SFInt32(54), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(67), SFInt32(69), SFInt32(-1), SFInt32(68), SFInt32(69), SFInt32(38), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(21), SFInt32(68), SFInt32(-1), SFInt32(47), SFInt32(68), SFInt32(39), SFInt32(-1), SFInt32(69), SFInt32(18), SFInt32(70), SFInt32(-1), SFInt32(70), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(40), SFInt32(70), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(40), SFInt32(-1), SFInt32(69), SFInt32(71), SFInt32(38), SFInt32(-1), SFInt32(71), SFInt32(69), SFInt32(70), SFInt32(-1), SFInt32(38), SFInt32(71), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(26), SFInt32(34), SFInt32(71), SFInt32(-1), SFInt32(68), SFInt32(21), SFInt32(69), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(60), SFInt32(2), SFInt32(-1), SFInt32(60), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(74), SFInt32(73), SFInt32(72), SFInt32(-1), SFInt32(77), SFInt32(76), SFInt32(75), SFInt32(-1), SFInt32(74), SFInt32(78), SFInt32(73), SFInt32(-1), SFInt32(74), SFInt32(81), SFInt32(80), SFInt32(-1), SFInt32(80), SFInt32(79), SFInt32(74), SFInt32(-1), SFInt32(82), SFInt32(79), SFInt32(80), SFInt32(-1), SFInt32(74), SFInt32(79), SFInt32(78), SFInt32(-1), SFInt32(82), SFInt32(84), SFInt32(83), SFInt32(-1), SFInt32(83), SFInt32(84), SFInt32(85), SFInt32(-1), SFInt32(82), SFInt32(86), SFInt32(84), SFInt32(-1), SFInt32(87), SFInt32(90), SFInt32(89), SFInt32(-1), SFInt32(89), SFInt32(88), SFInt32(87), SFInt32(-1), SFInt32(92), SFInt32(91), SFInt32(88), SFInt32(-1), SFInt32(80), SFInt32(81), SFInt32(93), SFInt32(-1), SFInt32(88), SFInt32(91), SFInt32(94), SFInt32(-1), SFInt32(86), SFInt32(93), SFInt32(95), SFInt32(-1), SFInt32(72), SFInt32(73), SFInt32(96), SFInt32(-1), SFInt32(83), SFInt32(79), SFInt32(82), SFInt32(-1), SFInt32(73), SFInt32(83), SFInt32(97), SFInt32(-1), SFInt32(100), SFInt32(99), SFInt32(98), SFInt32(-1), SFInt32(103), SFInt32(102), SFInt32(101), SFInt32(-1), SFInt32(99), SFInt32(83), SFInt32(85), SFInt32(-1), SFInt32(104), SFInt32(97), SFInt32(99), SFInt32(-1), SFInt32(97), SFInt32(83), SFInt32(99), SFInt32(-1), SFInt32(105), SFInt32(90), SFInt32(102), SFInt32(-1), SFInt32(105), SFInt32(89), SFInt32(90), SFInt32(-1), SFInt32(107), SFInt32(106), SFInt32(75), SFInt32(-1), SFInt32(107), SFInt32(108), SFInt32(106), SFInt32(-1), SFInt32(109), SFInt32(82), SFInt32(80), SFInt32(-1), SFInt32(109), SFInt32(80), SFInt32(93), SFInt32(-1), SFInt32(112), SFInt32(111), SFInt32(110), SFInt32(-1), SFInt32(93), SFInt32(81), SFInt32(113), SFInt32(-1), SFInt32(93), SFInt32(113), SFInt32(95), SFInt32(-1), SFInt32(114), SFInt32(110), SFInt32(111), SFInt32(-1), SFInt32(115), SFInt32(114), SFInt32(111), SFInt32(-1), SFInt32(87), SFInt32(86), SFInt32(116), SFInt32(-1), SFInt32(86), SFInt32(95), SFInt32(116), SFInt32(-1), SFInt32(18), SFInt32(69), SFInt32(117), SFInt32(-1), SFInt32(118), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(117), SFInt32(118), SFInt32(-1), SFInt32(117), SFInt32(69), SFInt32(67), SFInt32(-1), SFInt32(67), SFInt32(119), SFInt32(117), SFInt32(-1), SFInt32(119), SFInt32(67), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(120), SFInt32(119), SFInt32(-1), SFInt32(117), SFInt32(119), SFInt32(121), SFInt32(-1), SFInt32(121), SFInt32(118), SFInt32(117), SFInt32(-1), SFInt32(120), SFInt32(122), SFInt32(121), SFInt32(-1), SFInt32(121), SFInt32(119), SFInt32(120), SFInt32(-1), SFInt32(11), SFInt32(120), SFInt32(63), SFInt32(-1), SFInt32(63), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(122), SFInt32(120), SFInt32(-1), SFInt32(120), SFInt32(11), SFInt32(13), SFInt32(-1), SFInt32(125), SFInt32(124), SFInt32(123), SFInt32(-1), SFInt32(127), SFInt32(126), SFInt32(124), SFInt32(-1), SFInt32(126), SFInt32(127), SFInt32(128), SFInt32(-1), SFInt32(131), SFInt32(130), SFInt32(129), SFInt32(-1), SFInt32(131), SFInt32(129), SFInt32(132), SFInt32(-1), SFInt32(131), SFInt32(132), SFInt32(133), SFInt32(-1), SFInt32(133), SFInt32(127), SFInt32(131), SFInt32(-1), SFInt32(127), SFInt32(133), SFInt32(128), SFInt32(-1), SFInt32(135), SFInt32(134), SFInt32(126), SFInt32(-1), SFInt32(130), SFInt32(135), SFInt32(126), SFInt32(-1), SFInt32(135), SFInt32(136), SFInt32(134), SFInt32(-1), SFInt32(124), SFInt32(126), SFInt32(123), SFInt32(-1), SFInt32(123), SFInt32(126), SFInt32(137), SFInt32(-1), SFInt32(138), SFInt32(125), SFInt32(123), SFInt32(-1), SFInt32(123), SFInt32(139), SFInt32(138), SFInt32(-1), SFInt32(140), SFInt32(143), SFInt32(142), SFInt32(-1), SFInt32(142), SFInt32(141), SFInt32(140), SFInt32(-1), SFInt32(126), SFInt32(134), SFInt32(137), SFInt32(-1), SFInt32(127), SFInt32(124), SFInt32(144), SFInt32(-1), SFInt32(144), SFInt32(124), SFInt32(125), SFInt32(-1), SFInt32(144), SFInt32(131), SFInt32(127), SFInt32(-1), SFInt32(145), SFInt32(125), SFInt32(138), SFInt32(-1), SFInt32(146), SFInt32(140), SFInt32(141), SFInt32(-1), SFInt32(147), SFInt32(140), SFInt32(146), SFInt32(-1), SFInt32(148), SFInt32(144), SFInt32(125), SFInt32(-1), SFInt32(137), SFInt32(149), SFInt32(123), SFInt32(-1), SFInt32(150), SFInt32(123), SFInt32(149), SFInt32(-1), SFInt32(153), SFInt32(156), SFInt32(155), SFInt32(-1), SFInt32(155), SFInt32(154), SFInt32(153), SFInt32(-1), SFInt32(153), SFInt32(154), SFInt32(158), SFInt32(-1), SFInt32(158), SFInt32(157), SFInt32(153), SFInt32(-1), SFInt32(158), SFInt32(160), SFInt32(159), SFInt32(-1), SFInt32(159), SFInt32(157), SFInt32(158), SFInt32(-1), SFInt32(157), SFInt32(159), SFInt32(162), SFInt32(-1), SFInt32(162), SFInt32(161), SFInt32(157), SFInt32(-1), SFInt32(139), SFInt32(215), SFInt32(164), SFInt32(-1), SFInt32(164), SFInt32(138), SFInt32(139), SFInt32(-1), SFInt32(163), SFInt32(139), SFInt32(150), SFInt32(-1), SFInt32(150), SFInt32(165), SFInt32(163), SFInt32(-1), SFInt32(139), SFInt32(123), SFInt32(150), SFInt32(-1), SFInt32(168), SFInt32(167), SFInt32(166), SFInt32(-1), SFInt32(166), SFInt32(167), SFInt32(159), SFInt32(-1), SFInt32(169), SFInt32(151), SFInt32(152), SFInt32(-1), SFInt32(166), SFInt32(159), SFInt32(169), SFInt32(-1), SFInt32(161), SFInt32(172), SFInt32(170), SFInt32(-1), SFInt32(170), SFInt32(157), SFInt32(161), SFInt32(-1), SFInt32(170), SFInt32(171), SFInt32(157), SFInt32(-1), SFInt32(167), SFInt32(162), SFInt32(159), SFInt32(-1), SFInt32(173), SFInt32(176), SFInt32(236), SFInt32(-1), SFInt32(236), SFInt32(174), SFInt32(173), SFInt32(-1), SFInt32(172), SFInt32(161), SFInt32(177), SFInt32(-1), SFInt32(177), SFInt32(233), SFInt32(172), SFInt32(-1), SFInt32(241), SFInt32(174), SFInt32(236), SFInt32(-1), SFInt32(236), SFInt32(240), SFInt32(241), SFInt32(-1), SFInt32(168), SFInt32(180), SFInt32(167), SFInt32(-1), SFInt32(181), SFInt32(180), SFInt32(168), SFInt32(-1), SFInt32(183), SFInt32(238), SFInt32(237), SFInt32(-1), SFInt32(237), SFInt32(231), SFInt32(183), SFInt32(-1), SFInt32(167), SFInt32(180), SFInt32(186), SFInt32(-1), SFInt32(187), SFInt32(177), SFInt32(161), SFInt32(-1), SFInt32(161), SFInt32(162), SFInt32(187), SFInt32(-1), SFInt32(188), SFInt32(189), SFInt32(177), SFInt32(-1), SFInt32(177), SFInt32(187), SFInt32(188), SFInt32(-1), SFInt32(167), SFInt32(186), SFInt32(187), SFInt32(-1), SFInt32(187), SFInt32(162), SFInt32(167), SFInt32(-1), SFInt32(188), SFInt32(187), SFInt32(186), SFInt32(-1), SFInt32(186), SFInt32(190), SFInt32(188), SFInt32(-1), SFInt32(189), SFInt32(192), SFInt32(177), SFInt32(-1), SFInt32(234), SFInt32(176), SFInt32(233), SFInt32(-1), SFInt32(231), SFInt32(175), SFInt32(191), SFInt32(-1), SFInt32(190), SFInt32(186), SFInt32(180), SFInt32(-1), SFInt32(180), SFInt32(193), SFInt32(190), SFInt32(-1), SFInt32(191), SFInt32(234), SFInt32(192), SFInt32(-1), SFInt32(146), SFInt32(141), SFInt32(195), SFInt32(-1), SFInt32(193), SFInt32(180), SFInt32(181), SFInt32(-1), SFInt32(181), SFInt32(194), SFInt32(193), SFInt32(-1), SFInt32(195), SFInt32(141), SFInt32(196), SFInt32(-1), SFInt32(196), SFInt32(240), SFInt32(236), SFInt32(-1), SFInt32(171), SFInt32(156), SFInt32(153), SFInt32(-1), SFInt32(153), SFInt32(157), SFInt32(171), SFInt32(-1), SFInt32(197), SFInt32(181), SFInt32(168), SFInt32(-1), SFInt32(198), SFInt32(147), SFInt32(242), SFInt32(-1), SFInt32(198), SFInt32(140), SFInt32(147), SFInt32(-1), SFInt32(199), SFInt32(125), SFInt32(145), SFInt32(-1), SFInt32(148), SFInt32(125), SFInt32(200), SFInt32(-1), SFInt32(200), SFInt32(125), SFInt32(199), SFInt32(-1), SFInt32(159), SFInt32(160), SFInt32(151), SFInt32(-1), SFInt32(151), SFInt32(169), SFInt32(159), SFInt32(-1), SFInt32(130), SFInt32(136), SFInt32(135), SFInt32(-1), SFInt32(242), SFInt32(147), SFInt32(184), SFInt32(-1), SFInt32(147), SFInt32(201), SFInt32(184), SFInt32(-1), SFInt32(147), SFInt32(146), SFInt32(201), SFInt32(-1), SFInt32(195), SFInt32(201), SFInt32(146), SFInt32(-1), SFInt32(144), SFInt32(202), SFInt32(131), SFInt32(-1), SFInt32(144), SFInt32(148), SFInt32(202), SFInt32(-1), SFInt32(155), SFInt32(204), SFInt32(203), SFInt32(-1), SFInt32(203), SFInt32(154), SFInt32(155), SFInt32(-1), SFInt32(154), SFInt32(203), SFInt32(160), SFInt32(-1), SFInt32(160), SFInt32(158), SFInt32(154), SFInt32(-1), SFInt32(205), SFInt32(208), SFInt32(207), SFInt32(-1), SFInt32(207), SFInt32(206), SFInt32(205), SFInt32(-1), SFInt32(209), SFInt32(208), SFInt32(205), SFInt32(-1), SFInt32(205), SFInt32(210), SFInt32(209), SFInt32(-1), SFInt32(213), SFInt32(214), SFInt32(211), SFInt32(-1), SFInt32(211), SFInt32(212), SFInt32(213), SFInt32(-1), SFInt32(191), SFInt32(191), SFInt32(192), SFInt32(-1), SFInt32(192), SFInt32(192), SFInt32(191), SFInt32(-1), SFInt32(191), SFInt32(191), SFInt32(191), SFInt32(-1), SFInt32(191), SFInt32(191), SFInt32(191), SFInt32(-1), SFInt32(191), SFInt32(191), SFInt32(191), SFInt32(-1), SFInt32(191), SFInt32(191), SFInt32(191), SFInt32(-1), SFInt32(192), SFInt32(192), SFInt32(191), SFInt32(-1), SFInt32(191), SFInt32(191), SFInt32(192), SFInt32(-1), SFInt32(189), SFInt32(189), SFInt32(192), SFInt32(-1), SFInt32(192), SFInt32(192), SFInt32(189), SFInt32(-1), SFInt32(188), SFInt32(188), SFInt32(189), SFInt32(-1), SFInt32(189), SFInt32(189), SFInt32(188), SFInt32(-1), SFInt32(190), SFInt32(190), SFInt32(188), SFInt32(-1), SFInt32(188), SFInt32(188), SFInt32(190), SFInt32(-1), SFInt32(193), SFInt32(193), SFInt32(190), SFInt32(-1), SFInt32(190), SFInt32(190), SFInt32(193), SFInt32(-1), SFInt32(194), SFInt32(194), SFInt32(193), SFInt32(-1), SFInt32(193), SFInt32(193), SFInt32(194), SFInt32(-1), SFInt32(194), SFInt32(232), SFInt32(232), SFInt32(-1), SFInt32(232), SFInt32(194), SFInt32(194), SFInt32(-1), SFInt32(139), SFInt32(163), SFInt32(215), SFInt32(-1), SFInt32(222), SFInt32(223), SFInt32(217), SFInt32(-1), SFInt32(217), SFInt32(216), SFInt32(222), SFInt32(-1), SFInt32(223), SFInt32(229), SFInt32(218), SFInt32(-1), SFInt32(218), SFInt32(217), SFInt32(223), SFInt32(-1), SFInt32(228), SFInt32(219), SFInt32(218), SFInt32(-1), SFInt32(218), SFInt32(229), SFInt32(228), SFInt32(-1), SFInt32(218), SFInt32(219), SFInt32(221), SFInt32(-1), SFInt32(217), SFInt32(218), SFInt32(221), SFInt32(-1), SFInt32(217), SFInt32(221), SFInt32(220), SFInt32(-1), SFInt32(224), SFInt32(225), SFInt32(226), SFInt32(-1), SFInt32(226), SFInt32(225), SFInt32(227), SFInt32(-1), SFInt32(227), SFInt32(230), SFInt32(226), SFInt32(-1), SFInt32(238), SFInt32(183), SFInt32(232), SFInt32(-1), SFInt32(232), SFInt32(239), SFInt32(238), SFInt32(-1), SFInt32(175), SFInt32(231), SFInt32(237), SFInt32(-1), SFInt32(239), SFInt32(232), SFInt32(194), SFInt32(-1), SFInt32(194), SFInt32(178), SFInt32(239), SFInt32(-1), SFInt32(175), SFInt32(176), SFInt32(191), SFInt32(-1), SFInt32(191), SFInt32(176), SFInt32(234), SFInt32(-1), SFInt32(192), SFInt32(234), SFInt32(233), SFInt32(-1), SFInt32(233), SFInt32(177), SFInt32(192), SFInt32(-1), SFInt32(176), SFInt32(173), SFInt32(172), SFInt32(-1), SFInt32(172), SFInt32(233), SFInt32(176), SFInt32(-1), SFInt32(178), SFInt32(194), SFInt32(181), SFInt32(-1), SFInt32(184), SFInt32(235), SFInt32(242), SFInt32(-1), SFInt32(196), SFInt32(236), SFInt32(179), SFInt32(-1), SFInt32(195), SFInt32(196), SFInt32(179), SFInt32(-1), SFInt32(179), SFInt32(182), SFInt32(195), SFInt32(-1), SFInt32(201), SFInt32(195), SFInt32(182), SFInt32(-1), SFInt32(182), SFInt32(185), SFInt32(201), SFInt32(-1), SFInt32(184), SFInt32(201), SFInt32(185), SFInt32(-1), SFInt32(196), SFInt32(141), SFInt32(240), SFInt32(-1), SFInt32(240), SFInt32(141), SFInt32(142), SFInt32(-1), SFInt32(142), SFInt32(241), SFInt32(240), SFInt32(-1), SFInt32(245), SFInt32(244), SFInt32(243), SFInt32(-1), SFInt32(243), SFInt32(246), SFInt32(245), SFInt32(-1), SFInt32(244), SFInt32(248), SFInt32(247), SFInt32(-1), SFInt32(247), SFInt32(249), SFInt32(244), SFInt32(-1), SFInt32(250), SFInt32(246), SFInt32(243), SFInt32(-1), SFInt32(243), SFInt32(251), SFInt32(250), SFInt32(-1), SFInt32(252), SFInt32(249), SFInt32(247), SFInt32(-1), SFInt32(247), SFInt32(253), SFInt32(252), SFInt32(-1), SFInt32(254), SFInt32(244), SFInt32(245), SFInt32(-1), SFInt32(245), SFInt32(255), SFInt32(254), SFInt32(-1), SFInt32(256), SFInt32(248), SFInt32(244), SFInt32(-1), SFInt32(244), SFInt32(254), SFInt32(256), SFInt32(-1), SFInt32(259), SFInt32(258), SFInt32(257), SFInt32(-1), SFInt32(257), SFInt32(260), SFInt32(259), SFInt32(-1), SFInt32(261), SFInt32(258), SFInt32(259), SFInt32(-1), SFInt32(259), SFInt32(262), SFInt32(261), SFInt32(-1), SFInt32(263), SFInt32(265), SFInt32(264), SFInt32(-1), SFInt32(266), SFInt32(260), SFInt32(257), SFInt32(-1), SFInt32(257), SFInt32(268), SFInt32(267), SFInt32(-1), SFInt32(269), SFInt32(268), SFInt32(270), SFInt32(-1), SFInt32(271), SFInt32(267), SFInt32(272), SFInt32(-1), SFInt32(257), SFInt32(267), SFInt32(266), SFInt32(-1), SFInt32(271), SFInt32(266), SFInt32(267), SFInt32(-1), SFInt32(273), SFInt32(274), SFInt32(260), SFInt32(-1), SFInt32(271), SFInt32(275), SFInt32(266), SFInt32(-1), SFInt32(276), SFInt32(273), SFInt32(275), SFInt32(-1), SFInt32(276), SFInt32(274), SFInt32(273), SFInt32(-1), SFInt32(269), SFInt32(270), SFInt32(277), SFInt32(-1), SFInt32(277), SFInt32(278), SFInt32(269), SFInt32(-1), SFInt32(279), SFInt32(277), SFInt32(280), SFInt32(-1), SFInt32(281), SFInt32(280), SFInt32(282), SFInt32(-1), SFInt32(270), SFInt32(268), SFInt32(257), SFInt32(-1), SFInt32(257), SFInt32(283), SFInt32(270), SFInt32(-1), SFInt32(280), SFInt32(281), SFInt32(284), SFInt32(-1), SFInt32(284), SFInt32(285), SFInt32(280), SFInt32(-1), SFInt32(286), SFInt32(285), SFInt32(284), SFInt32(-1), SFInt32(286), SFInt32(284), SFInt32(287), SFInt32(-1), SFInt32(284), SFInt32(281), SFInt32(287), SFInt32(-1), SFInt32(265), SFInt32(263), SFInt32(288), SFInt32(-1), SFInt32(288), SFInt32(263), SFInt32(289), SFInt32(-1), SFInt32(287), SFInt32(281), SFInt32(290), SFInt32(-1), SFInt32(265), SFInt32(292), SFInt32(291), SFInt32(-1), SFInt32(293), SFInt32(292), SFInt32(294), SFInt32(-1), SFInt32(294), SFInt32(292), SFInt32(265), SFInt32(-1), SFInt32(265), SFInt32(291), SFInt32(290), SFInt32(-1), SFInt32(291), SFInt32(287), SFInt32(290), SFInt32(-1), SFInt32(272), SFInt32(267), SFInt32(268), SFInt32(-1), SFInt32(295), SFInt32(289), SFInt32(296), SFInt32(-1), SFInt32(296), SFInt32(298), SFInt32(297), SFInt32(-1), SFInt32(296), SFInt32(289), SFInt32(298), SFInt32(-1), SFInt32(296), SFInt32(297), SFInt32(295), SFInt32(-1), SFInt32(250), SFInt32(299), SFInt32(295), SFInt32(-1), SFInt32(295), SFInt32(300), SFInt32(250), SFInt32(-1), SFInt32(302), SFInt32(301), SFInt32(250), SFInt32(-1), SFInt32(250), SFInt32(300), SFInt32(302), SFInt32(-1), SFInt32(300), SFInt32(295), SFInt32(302), SFInt32(-1), SFInt32(251), SFInt32(303), SFInt32(299), SFInt32(-1), SFInt32(299), SFInt32(250), SFInt32(251), SFInt32(-1), SFInt32(252), SFInt32(303), SFInt32(249), SFInt32(-1), SFInt32(253), SFInt32(304), SFInt32(303), SFInt32(-1), SFInt32(303), SFInt32(252), SFInt32(253), SFInt32(-1), SFInt32(245), SFInt32(305), SFInt32(255), SFInt32(-1), SFInt32(305), SFInt32(306), SFInt32(255), SFInt32(-1), SFInt32(307), SFInt32(306), SFInt32(305), SFInt32(-1), SFInt32(295), SFInt32(307), SFInt32(305), SFInt32(-1), SFInt32(305), SFInt32(302), SFInt32(295), SFInt32(-1), SFInt32(305), SFInt32(245), SFInt32(301), SFInt32(-1), SFInt32(301), SFInt32(302), SFInt32(305), SFInt32(-1), SFInt32(307), SFInt32(308), SFInt32(306), SFInt32(-1), SFInt32(306), SFInt32(308), SFInt32(309), SFInt32(-1), SFInt32(309), SFInt32(310), SFInt32(306), SFInt32(-1), SFInt32(295), SFInt32(297), SFInt32(308), SFInt32(-1), SFInt32(308), SFInt32(307), SFInt32(295), SFInt32(-1), SFInt32(308), SFInt32(297), SFInt32(298), SFInt32(-1), SFInt32(298), SFInt32(309), SFInt32(308), SFInt32(-1), SFInt32(310), SFInt32(309), SFInt32(264), SFInt32(-1), SFInt32(282), SFInt32(311), SFInt32(281), SFInt32(-1), SFInt32(263), SFInt32(264), SFInt32(289), SFInt32(-1), SFInt32(298), SFInt32(264), SFInt32(309), SFInt32(-1), SFInt32(289), SFInt32(264), SFInt32(298), SFInt32(-1), SFInt32(264), SFInt32(312), SFInt32(310), SFInt32(-1), SFInt32(311), SFInt32(282), SFInt32(312), SFInt32(-1), SFInt32(265), SFInt32(290), SFInt32(264), SFInt32(-1), SFInt32(290), SFInt32(311), SFInt32(264), SFInt32(-1), SFInt32(290), SFInt32(281), SFInt32(311), SFInt32(-1), SFInt32(312), SFInt32(313), SFInt32(261), SFInt32(-1), SFInt32(313), SFInt32(258), SFInt32(261), SFInt32(-1), SFInt32(283), SFInt32(257), SFInt32(258), SFInt32(-1), SFInt32(258), SFInt32(313), SFInt32(283), SFInt32(-1), SFInt32(312), SFInt32(282), SFInt32(314), SFInt32(-1), SFInt32(314), SFInt32(313), SFInt32(312), SFInt32(-1), SFInt32(282), SFInt32(280), SFInt32(277), SFInt32(-1), SFInt32(277), SFInt32(314), SFInt32(282), SFInt32(-1), SFInt32(270), SFInt32(314), SFInt32(277), SFInt32(-1), SFInt32(311), SFInt32(312), SFInt32(264), SFInt32(-1), SFInt32(243), SFInt32(244), SFInt32(249), SFInt32(-1), SFInt32(251), SFInt32(243), SFInt32(303), SFInt32(-1), SFInt32(303), SFInt32(243), SFInt32(249), SFInt32(-1), SFInt32(315), SFInt32(317), SFInt32(316), SFInt32(-1), SFInt32(318), SFInt32(320), SFInt32(319), SFInt32(-1), SFInt32(315), SFInt32(316), SFInt32(321), SFInt32(-1), SFInt32(315), SFInt32(323), SFInt32(322), SFInt32(-1), SFInt32(322), SFInt32(324), SFInt32(315), SFInt32(-1), SFInt32(325), SFInt32(322), SFInt32(323), SFInt32(-1), SFInt32(315), SFInt32(321), SFInt32(323), SFInt32(-1), SFInt32(325), SFInt32(327), SFInt32(326), SFInt32(-1), SFInt32(327), SFInt32(328), SFInt32(326), SFInt32(-1), SFInt32(325), SFInt32(326), SFInt32(329), SFInt32(-1), SFInt32(332), SFInt32(331), SFInt32(330), SFInt32(-1), SFInt32(330), SFInt32(333), SFInt32(332), SFInt32(-1), SFInt32(334), SFInt32(331), SFInt32(335), SFInt32(-1), SFInt32(322), SFInt32(336), SFInt32(324), SFInt32(-1), SFInt32(331), SFInt32(337), SFInt32(335), SFInt32(-1), SFInt32(329), SFInt32(338), SFInt32(336), SFInt32(-1), SFInt32(317), SFInt32(339), SFInt32(316), SFInt32(-1), SFInt32(327), SFInt32(325), SFInt32(323), SFInt32(-1), SFInt32(316), SFInt32(340), SFInt32(327), SFInt32(-1), SFInt32(341), SFInt32(343), SFInt32(342), SFInt32(-1), SFInt32(344), SFInt32(346), SFInt32(345), SFInt32(-1), SFInt32(342), SFInt32(328), SFInt32(327), SFInt32(-1), SFInt32(347), SFInt32(342), SFInt32(340), SFInt32(-1), SFInt32(340), SFInt32(342), SFInt32(327), SFInt32(-1), SFInt32(348), SFInt32(345), SFInt32(333), SFInt32(-1), SFInt32(348), SFInt32(333), SFInt32(330), SFInt32(-1), SFInt32(349), SFInt32(320), SFInt32(350), SFInt32(-1), SFInt32(349), SFInt32(350), SFInt32(351), SFInt32(-1), SFInt32(352), SFInt32(322), SFInt32(325), SFInt32(-1), SFInt32(352), SFInt32(336), SFInt32(322), SFInt32(-1), SFInt32(353), SFInt32(355), SFInt32(354), SFInt32(-1), SFInt32(336), SFInt32(356), SFInt32(324), SFInt32(-1), SFInt32(336), SFInt32(338), SFInt32(356), SFInt32(-1), SFInt32(357), SFInt32(354), SFInt32(355), SFInt32(-1), SFInt32(358), SFInt32(354), SFInt32(357), SFInt32(-1), SFInt32(332), SFInt32(359), SFInt32(329), SFInt32(-1), SFInt32(329), SFInt32(359), SFInt32(338), SFInt32(-1), SFInt32(261), SFInt32(360), SFInt32(312), SFInt32(-1), SFInt32(361), SFInt32(360), SFInt32(261), SFInt32(-1), SFInt32(261), SFInt32(262), SFInt32(361), SFInt32(-1), SFInt32(360), SFInt32(362), SFInt32(310), SFInt32(-1), SFInt32(310), SFInt32(312), SFInt32(360), SFInt32(-1), SFInt32(362), SFInt32(363), SFInt32(306), SFInt32(-1), SFInt32(306), SFInt32(310), SFInt32(362), SFInt32(-1), SFInt32(360), SFInt32(361), SFInt32(364), SFInt32(-1), SFInt32(364), SFInt32(362), SFInt32(360), SFInt32(-1), SFInt32(363), SFInt32(362), SFInt32(364), SFInt32(-1), SFInt32(364), SFInt32(365), SFInt32(363), SFInt32(-1), SFInt32(254), SFInt32(255), SFInt32(306), SFInt32(-1), SFInt32(306), SFInt32(363), SFInt32(254), SFInt32(-1), SFInt32(256), SFInt32(254), SFInt32(363), SFInt32(-1), SFInt32(363), SFInt32(365), SFInt32(256), SFInt32(-1), SFInt32(366), SFInt32(368), SFInt32(367), SFInt32(-1), SFInt32(369), SFInt32(367), SFInt32(370), SFInt32(-1), SFInt32(370), SFInt32(371), SFInt32(369), SFInt32(-1), SFInt32(372), SFInt32(374), SFInt32(373), SFInt32(-1), SFInt32(372), SFInt32(375), SFInt32(374), SFInt32(-1), SFInt32(372), SFInt32(369), SFInt32(376), SFInt32(-1), SFInt32(376), SFInt32(375), SFInt32(372), SFInt32(-1), SFInt32(369), SFInt32(371), SFInt32(376), SFInt32(-1), SFInt32(377), SFInt32(370), SFInt32(378), SFInt32(-1), SFInt32(373), SFInt32(370), SFInt32(377), SFInt32(-1), SFInt32(377), SFInt32(378), SFInt32(379), SFInt32(-1), SFInt32(367), SFInt32(368), SFInt32(370), SFInt32(-1), SFInt32(368), SFInt32(380), SFInt32(370), SFInt32(-1), SFInt32(382), SFInt32(381), SFInt32(368), SFInt32(-1), SFInt32(368), SFInt32(366), SFInt32(382), SFInt32(-1), SFInt32(385), SFInt32(384), SFInt32(383), SFInt32(-1), SFInt32(383), SFInt32(386), SFInt32(385), SFInt32(-1), SFInt32(370), SFInt32(380), SFInt32(378), SFInt32(-1), SFInt32(369), SFInt32(387), SFInt32(367), SFInt32(-1), SFInt32(387), SFInt32(366), SFInt32(367), SFInt32(-1), SFInt32(387), SFInt32(369), SFInt32(372), SFInt32(-1), SFInt32(388), SFInt32(382), SFInt32(366), SFInt32(-1), SFInt32(389), SFInt32(384), SFInt32(385), SFInt32(-1), SFInt32(390), SFInt32(389), SFInt32(385), SFInt32(-1), SFInt32(391), SFInt32(366), SFInt32(387), SFInt32(-1), SFInt32(380), SFInt32(368), SFInt32(392), SFInt32(-1), SFInt32(393), SFInt32(392), SFInt32(368), SFInt32(-1), SFInt32(396), SFInt32(395), SFInt32(394), SFInt32(-1), SFInt32(394), SFInt32(397), SFInt32(396), SFInt32(-1), SFInt32(396), SFInt32(399), SFInt32(398), SFInt32(-1), SFInt32(398), SFInt32(395), SFInt32(396), SFInt32(-1), SFInt32(398), SFInt32(399), SFInt32(400), SFInt32(-1), SFInt32(400), SFInt32(401), SFInt32(398), SFInt32(-1), SFInt32(399), SFInt32(403), SFInt32(402), SFInt32(-1), SFInt32(402), SFInt32(400), SFInt32(399), SFInt32(-1), SFInt32(381), SFInt32(382), SFInt32(405), SFInt32(-1), SFInt32(405), SFInt32(404), SFInt32(381), SFInt32(-1), SFInt32(406), SFInt32(407), SFInt32(393), SFInt32(-1), SFInt32(393), SFInt32(381), SFInt32(406), SFInt32(-1), SFInt32(381), SFInt32(393), SFInt32(368), SFInt32(-1), SFInt32(408), SFInt32(410), SFInt32(409), SFInt32(-1), SFInt32(410), SFInt32(400), SFInt32(409), SFInt32(-1), SFInt32(411), SFInt32(413), SFInt32(412), SFInt32(-1), SFInt32(410), SFInt32(411), SFInt32(400), SFInt32(-1), SFInt32(403), SFInt32(399), SFInt32(414), SFInt32(-1), SFInt32(414), SFInt32(415), SFInt32(403), SFInt32(-1), SFInt32(414), SFInt32(399), SFInt32(416), SFInt32(-1), SFInt32(409), SFInt32(400), SFInt32(402), SFInt32(-1), SFInt32(419), SFInt32(418), SFInt32(417), SFInt32(-1), SFInt32(417), SFInt32(420), SFInt32(419), SFInt32(-1), SFInt32(415), SFInt32(422), SFInt32(421), SFInt32(-1), SFInt32(421), SFInt32(403), SFInt32(415), SFInt32(-1), SFInt32(423), SFInt32(424), SFInt32(417), SFInt32(-1), SFInt32(417), SFInt32(418), SFInt32(423), SFInt32(-1), SFInt32(408), SFInt32(409), SFInt32(425), SFInt32(-1), SFInt32(426), SFInt32(408), SFInt32(425), SFInt32(-1), SFInt32(427), SFInt32(430), SFInt32(429), SFInt32(-1), SFInt32(429), SFInt32(428), SFInt32(427), SFInt32(-1), SFInt32(409), SFInt32(431), SFInt32(425), SFInt32(-1), SFInt32(432), SFInt32(402), SFInt32(403), SFInt32(-1), SFInt32(403), SFInt32(421), SFInt32(432), SFInt32(-1), SFInt32(433), SFInt32(432), SFInt32(421), SFInt32(-1), SFInt32(421), SFInt32(434), SFInt32(433), SFInt32(-1), SFInt32(409), SFInt32(402), SFInt32(432), SFInt32(-1), SFInt32(432), SFInt32(431), SFInt32(409), SFInt32(-1), SFInt32(433), SFInt32(435), SFInt32(431), SFInt32(-1), SFInt32(431), SFInt32(432), SFInt32(433), SFInt32(-1), SFInt32(434), SFInt32(421), SFInt32(436), SFInt32(-1), SFInt32(437), SFInt32(422), SFInt32(420), SFInt32(-1), SFInt32(430), SFInt32(439), SFInt32(438), SFInt32(-1), SFInt32(435), SFInt32(440), SFInt32(425), SFInt32(-1), SFInt32(425), SFInt32(431), SFInt32(435), SFInt32(-1), SFInt32(439), SFInt32(436), SFInt32(437), SFInt32(-1), SFInt32(389), SFInt32(441), SFInt32(384), SFInt32(-1), SFInt32(440), SFInt32(442), SFInt32(426), SFInt32(-1), SFInt32(426), SFInt32(425), SFInt32(440), SFInt32(-1), SFInt32(441), SFInt32(443), SFInt32(384), SFInt32(-1), SFInt32(443), SFInt32(417), SFInt32(424), SFInt32(-1), SFInt32(416), SFInt32(396), SFInt32(397), SFInt32(-1), SFInt32(396), SFInt32(416), SFInt32(399), SFInt32(-1), SFInt32(444), SFInt32(408), SFInt32(426), SFInt32(-1), SFInt32(445), SFInt32(446), SFInt32(390), SFInt32(-1), SFInt32(445), SFInt32(390), SFInt32(385), SFInt32(-1), SFInt32(447), SFInt32(388), SFInt32(366), SFInt32(-1), SFInt32(391), SFInt32(448), SFInt32(366), SFInt32(-1), SFInt32(448), SFInt32(447), SFInt32(366), SFInt32(-1), SFInt32(400), SFInt32(411), SFInt32(412), SFInt32(-1), SFInt32(412), SFInt32(401), SFInt32(400), SFInt32(-1), SFInt32(373), SFInt32(377), SFInt32(379), SFInt32(-1), SFInt32(446), SFInt32(449), SFInt32(390), SFInt32(-1), SFInt32(390), SFInt32(449), SFInt32(450), SFInt32(-1), SFInt32(390), SFInt32(450), SFInt32(389), SFInt32(-1), SFInt32(441), SFInt32(389), SFInt32(450), SFInt32(-1), SFInt32(387), SFInt32(372), SFInt32(451), SFInt32(-1), SFInt32(387), SFInt32(451), SFInt32(391), SFInt32(-1), SFInt32(394), SFInt32(395), SFInt32(452), SFInt32(-1), SFInt32(452), SFInt32(453), SFInt32(394), SFInt32(-1), SFInt32(395), SFInt32(398), SFInt32(401), SFInt32(-1), SFInt32(401), SFInt32(452), SFInt32(395), SFInt32(-1), SFInt32(456), SFInt32(455), SFInt32(454), SFInt32(-1), SFInt32(454), SFInt32(457), SFInt32(456), SFInt32(-1), SFInt32(459), SFInt32(458), SFInt32(456), SFInt32(-1), SFInt32(456), SFInt32(457), SFInt32(459), SFInt32(-1), SFInt32(462), SFInt32(461), SFInt32(460), SFInt32(-1), SFInt32(460), SFInt32(463), SFInt32(462), SFInt32(-1), SFInt32(439), SFInt32(436), SFInt32(436), SFInt32(-1), SFInt32(436), SFInt32(439), SFInt32(439), SFInt32(-1), SFInt32(439), SFInt32(439), SFInt32(439), SFInt32(-1), SFInt32(439), SFInt32(439), SFInt32(439), SFInt32(-1), SFInt32(439), SFInt32(439), SFInt32(439), SFInt32(-1), SFInt32(439), SFInt32(439), SFInt32(439), SFInt32(-1), SFInt32(436), SFInt32(439), SFInt32(439), SFInt32(-1), SFInt32(439), SFInt32(436), SFInt32(436), SFInt32(-1), SFInt32(434), SFInt32(436), SFInt32(436), SFInt32(-1), SFInt32(436), SFInt32(434), SFInt32(434), SFInt32(-1), SFInt32(433), SFInt32(434), SFInt32(434), SFInt32(-1), SFInt32(434), SFInt32(433), SFInt32(433), SFInt32(-1), SFInt32(435), SFInt32(433), SFInt32(433), SFInt32(-1), SFInt32(433), SFInt32(435), SFInt32(435), SFInt32(-1), SFInt32(440), SFInt32(435), SFInt32(435), SFInt32(-1), SFInt32(435), SFInt32(440), SFInt32(440), SFInt32(-1), SFInt32(442), SFInt32(440), SFInt32(440), SFInt32(-1), SFInt32(440), SFInt32(442), SFInt32(442), SFInt32(-1), SFInt32(442), SFInt32(442), SFInt32(464), SFInt32(-1), SFInt32(464), SFInt32(464), SFInt32(442), SFInt32(-1), SFInt32(381), SFInt32(404), SFInt32(406), SFInt32(-1), SFInt32(465), SFInt32(468), SFInt32(467), SFInt32(-1), SFInt32(467), SFInt32(466), SFInt32(465), SFInt32(-1), SFInt32(466), SFInt32(467), SFInt32(470), SFInt32(-1), SFInt32(470), SFInt32(469), SFInt32(466), SFInt32(-1), SFInt32(471), SFInt32(469), SFInt32(470), SFInt32(-1), SFInt32(470), SFInt32(472), SFInt32(471), SFInt32(-1), SFInt32(467), SFInt32(474), SFInt32(473), SFInt32(-1), SFInt32(473), SFInt32(472), SFInt32(470), SFInt32(-1), SFInt32(467), SFInt32(473), SFInt32(470), SFInt32(-1), SFInt32(475), SFInt32(477), SFInt32(476), SFInt32(-1), SFInt32(477), SFInt32(479), SFInt32(478), SFInt32(-1), SFInt32(478), SFInt32(476), SFInt32(477), SFInt32(-1), SFInt32(428), SFInt32(480), SFInt32(464), SFInt32(-1), SFInt32(464), SFInt32(427), SFInt32(428), SFInt32(-1), SFInt32(438), SFInt32(429), SFInt32(430), SFInt32(-1), SFInt32(480), SFInt32(481), SFInt32(442), SFInt32(-1), SFInt32(442), SFInt32(464), SFInt32(480), SFInt32(-1), SFInt32(438), SFInt32(439), SFInt32(420), SFInt32(-1), SFInt32(439), SFInt32(437), SFInt32(420), SFInt32(-1), SFInt32(436), SFInt32(421), SFInt32(422), SFInt32(-1), SFInt32(422), SFInt32(437), SFInt32(436), SFInt32(-1), SFInt32(420), SFInt32(422), SFInt32(415), SFInt32(-1), SFInt32(415), SFInt32(419), SFInt32(420), SFInt32(-1), SFInt32(481), SFInt32(426), SFInt32(442), SFInt32(-1), SFInt32(449), SFInt32(446), SFInt32(482), SFInt32(-1), SFInt32(443), SFInt32(483), SFInt32(417), SFInt32(-1), SFInt32(441), SFInt32(484), SFInt32(483), SFInt32(-1), SFInt32(483), SFInt32(443), SFInt32(441), SFInt32(-1), SFInt32(450), SFInt32(485), SFInt32(484), SFInt32(-1), SFInt32(484), SFInt32(441), SFInt32(450), SFInt32(-1), SFInt32(449), SFInt32(485), SFInt32(450), SFInt32(-1), SFInt32(443), SFInt32(424), SFInt32(384), SFInt32(-1), SFInt32(424), SFInt32(423), SFInt32(383), SFInt32(-1), SFInt32(383), SFInt32(384), SFInt32(424), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([2.596,3.055,-7.113]),SFVec3f([5.82,3.915,-2.239]),SFVec3f([3.712,1.225,-2.29]),SFVec3f([3.261,1.453,-4.252]),SFVec3f([5.658,2.599,-1.983]),SFVec3f([1.82,1.289,-5.164]),SFVec3f([2.395,4.95,6.346]),SFVec3f([0.7761,4.912,6.883]),SFVec3f([4.408,9.203,3.673]),SFVec3f([0,11.25,5.65]),SFVec3f([2.225,10.89,5.304]),SFVec3f([5.962,4.414,1.165]),SFVec3f([4.041,0.8383,3.523]),SFVec3f([1.972,9.601,6.357]),SFVec3f([2.537,7.001,6.362]),SFVec3f([3.694,6.649,5.287]),SFVec3f([0.4475,7.341,7.362]),SFVec3f([4.843,6.188,3.431]),SFVec3f([3.886,6.593,4.951]),SFVec3f([3.681,5.194,5.001]),SFVec3f([3.826,5.001,4.664]),SFVec3f([3.284,2.472,4.49]),SFVec3f([4.543,4.124,3.499]),SFVec3f([3.859,3.861,4.364]),SFVec3f([4.575,3.792,4.006]),SFVec3f([5.065,1.183,1.247]),SFVec3f([4.863,1.73,2.37]),SFVec3f([5.256,2.695,2.024]),SFVec3f([5.549,5.532,2.714]),SFVec3f([5.161,2.035,2.722]),SFVec3f([5.442,3.878,2.887]),SFVec3f([6.111,4.389,0.2634]),SFVec3f([4.062,5.868,4.221]),SFVec3f([6.007,7.856,-0.5637]),SFVec3f([7.021,1.661,-0.9157]),SFVec3f([6.568,4.855,-0.7308]),SFVec3f([6.326,4.691,-1.55]),SFVec3f([6.23,0.8303,-3.441]),SFVec3f([4.977,5.364,-5.673]),SFVec3f([6.326,4.656,-2.95]),SFVec3f([4.216,3.427,-5.131]),SFVec3f([3.522,5.818,-7.166]),SFVec3f([3.424,1.86,-7.278]),SFVec3f([2.479,7.925,-6.757]),SFVec3f([1.927,1.981,-8.89]),SFVec3f([5.584,7.691,-2.78]),SFVec3f([5.853,7.683,-1.772]),SFVec3f([5.181,8.476,2.104]),SFVec3f([3.038,10.79,4.444]),SFVec3f([5.123,3.032,-5.304]),SFVec3f([5.664,8.061,0.8754]),SFVec3f([4.721,7.925,-5.258]),SFVec3f([2.479,5.82,-7.483]),SFVec3f([5.595,7.63,-2.141]),SFVec3f([1.173,1.832,-6.114]),SFVec3f([3.978,2.324,-4.64]),SFVec3f([2.917,-0.9285,-7.31]),SFVec3f([3.323,2.08,-5.371]),SFVec3f([1.968,-1.561,-5.013]),SFVec3f([4.713,2.444,-3.477]),SFVec3f([4.42,-0.2924,-4.477]),SFVec3f([1.411,0.5541,-3.484]),SFVec3f([2.275,0.8807,-3.763]),SFVec3f([0.9407,0.7103,-4.537]),SFVec3f([3.818,1.729,-3.139]),SFVec3f([4.664,1.866,-1.436]),SFVec3f([3.657,9.188,4.96]),SFVec3f([1.559,7.266,7.008]),SFVec3f([2.791,5.041,6.017]),SFVec3f([2.479,12.6,2.191]),SFVec3f([0,12.77,-3.073]),SFVec3f([2.479,13.01,-0.5905]),SFVec3f([2.479,12.47,-3.073]),SFVec3f([2.479,11.8,3.665]),SFVec3f([4.738,11.13,-0.5905]),SFVec3f([4.581,10.59,1.893]),SFVec3f([4.776,9.342,-4.254]),SFVec3f([4.651,10.94,-2.696]),SFVec3f([2.479,10.58,-5.873]),SFVec3f([5.038,2.087,0.2634]),SFVec3f([5.351,2.269,0.2568]),SFVec3f([5.575,4.993,0.4877]),SFVec3f([5.759,4.313,-0.6689]),SFVec3f([5.672,3.119,-0.6884]),SFVec3f([4.617,3.919,1.981]),SFVec3f([2.507,0.2122,3.467]),SFVec3f([1.252,-0.7037,3.753]),SFVec3f([2.181,1.29,4.703]),SFVec3f([1.083,-0.2065,4.531]),SFVec3f([4.006,4.226,3.45]),SFVec3f([3.843,3.486,3.474]),SFVec3f([0.2615,3.949,5.823]),SFVec3f([2.043,5.094,5.803]),SFVec3f([1.599,4.225,5.429]),SFVec3f([2.175,4.422,5.292]),SFVec3f([1.061,2.841,5.24]),SFVec3f([3.345,2.806,3.987]),SFVec3f([2.647,2.75,4.481]),SFVec3f([3.082,3.581,4.206]),SFVec3f([1.044,3.885,5.454]),SFVec3f([1.356,3.642,5.241]),SFVec3f([3.227,3.707,4.111]),SFVec3f([3.028,4.567,4.683]),SFVec3f([2.472,2.023,4.722]),SFVec3f([0.9194,2.354,5.382]),SFVec3f([3.515,2.199,3.631]),SFVec3f([3.685,4.225,3.891]),SFVec3f([0.1458,1.141,5.967]),SFVec3f([0.4592,1.442,5.549]),SFVec3f([3.443,1.22,3.201]),SFVec3f([1.972,6.686,5.769]),SFVec3f([3.551,6.468,4.66]),SFVec3f([1.125,6.641,6.224]),SFVec3f([2.799,0.2961,1.981]),SFVec3f([1.438,-0.7799,2.92]),SFVec3f([2.098,-0.0622,0.3894]),SFVec3f([4.342,2.994,2.484]),SFVec3f([1.972,10.18,5.298]),SFVec3f([3.829,8.081,4.078]),SFVec3f([4.754,5.519,2.97]),SFVec3f([2.795,3.568,4.497]),SFVec3f([1.835,3.587,5.011]),SFVec3f([4.074,1.813,1.489]),SFVec3f([4.073,1.537,-0.251]),SFVec3f([4.798,4.414,1.165]),SFVec3f([0.4079,0.7711,5.733]),SFVec3f([0.2244,0.7989,5.843]),SFVec3f([1.184,0.5011,4.895]),SFVec3f([0.2244,0.5907,5.545]),SFVec3f([2.091,-0.0943,-1.629]),SFVec3f([0.4475,7.341,7.362]),SFVec3f([0.7761,4.912,6.883]),SFVec3f([0.4475,7.341,7.362]),SFVec3f([4.734,2.295,-0.478]),SFVec3f([3.712,1.225,-2.29]),SFVec3f([5.658,2.599,-1.983]),SFVec3f([0.513,6.698,7.119]),SFVec3f([5.054,4.389,0.2634]),SFVec3f([3.561,1.081,-1.554]),SFVec3f([2.09,4.432,3.699]),SFVec3f([1.621,4.356,4.123]),SFVec3f([1.332,4.202,4.217]),SFVec3f([1.07,3.93,4.244]),SFVec3f([1.254,3.737,4.129]),SFVec3f([1.514,3.69,3.988]),SFVec3f([2.035,3.658,3.658]),SFVec3f([2.202,3.647,3.455]),SFVec3f([2.276,3.737,3.378]),SFVec3f([2.499,4.118,3.181]),SFVec3f([0,2.738,-7.551]),SFVec3f([0,4.192,6.16]),SFVec3f([0,7.925,-7.347]),SFVec3f([0,0.1375,-3.592]),SFVec3f([0,-0.9435,-6.54]),SFVec3f([0,-0.6349,1.532]),SFVec3f([0.5806,0.4168,3.813]),SFVec3f([0.1288,0.4247,4.012]),SFVec3f([0.5566,-0.2209,3.55]),SFVec3f([0,6.577,6.529]),SFVec3f([0,-1.299,4.283]),SFVec3f([0,0.7989,5.843]),SFVec3f([0.2132,0.5713,5.365]),SFVec3f([0.5926,3.49,5.582]),SFVec3f([0.9241,3.763,5.471]),SFVec3f([3.843,5.112,4.093]),SFVec3f([1.112,4.786,6.09]),SFVec3f([3.261,5.262,4.816]),SFVec3f([1.327,4.522,5.859]),SFVec3f([2.089,4.758,5.599]),SFVec3f([3.171,4.95,4.784]),SFVec3f([0.646,4.262,6.112]),SFVec3f([0,5.519,-7.965]),SFVec3f([0,9.74,6.859]),SFVec3f([0,7.548,7.405]),SFVec3f([0,2.998,5.872]),SFVec3f([0,1.753,6.811]),SFVec3f([0,0.5907,5.545]),SFVec3f([0.7426,4.743,6.135]),SFVec3f([-3.522,5.818,-7.166]),SFVec3f([-2.479,7.925,-6.757]),SFVec3f([-4.721,7.925,-5.258]),SFVec3f([-4.977,5.364,-5.673]),SFVec3f([-2.479,5.82,-7.483]),SFVec3f([-5.123,3.032,-5.304]),SFVec3f([-3.424,1.86,-7.278]),SFVec3f([-1.927,1.981,-8.89]),SFVec3f([0,3.753,-8.454]),SFVec3f([-2.479,10.58,-5.873]),SFVec3f([-4.776,9.342,-4.254]),SFVec3f([0,10.91,-6.064]),SFVec3f([-1.972,9.601,6.357]),SFVec3f([-2.225,10.89,5.304]),SFVec3f([-2.479,11.8,3.665]),SFVec3f([0,12.19,4.069]),SFVec3f([-5.962,4.414,1.165]),SFVec3f([-5.664,8.061,0.8754]),SFVec3f([-5.256,2.695,2.024]),SFVec3f([-0.4475,7.341,7.362]),SFVec3f([-1.559,7.266,7.008]),SFVec3f([-2.537,7.001,6.362]),SFVec3f([-2.791,5.041,6.017]),SFVec3f([-3.694,6.649,5.287]),SFVec3f([-0.7761,4.912,6.883]),SFVec3f([-2.395,4.95,6.346]),SFVec3f([-0.513,6.698,7.119]),SFVec3f([-0.4475,7.341,7.362]),SFVec3f([-0.7761,4.912,6.883]),SFVec3f([-0.4475,7.341,7.362]),SFVec3f([-3.886,6.593,4.951]),SFVec3f([-3.681,5.194,5.001]),SFVec3f([-3.826,5.001,4.664]),SFVec3f([-4.062,5.868,4.221]),SFVec3f([-4.843,6.188,3.431]),SFVec3f([-4.408,9.203,3.673]),SFVec3f([-3.657,9.188,4.96]),SFVec3f([-4.575,3.792,4.006]),SFVec3f([-3.859,3.861,4.364]),SFVec3f([-3.284,2.472,4.49]),SFVec3f([-4.543,4.124,3.499]),SFVec3f([-5.065,1.183,1.247]),SFVec3f([-6.111,4.389,0.2634]),SFVec3f([-5.549,5.532,2.714]),SFVec3f([-5.442,3.878,2.887]),SFVec3f([-5.161,2.035,2.722]),SFVec3f([-4.041,0.8383,3.523]),SFVec3f([-4.863,1.73,2.37]),SFVec3f([-5.82,3.915,-2.239]),SFVec3f([-7.021,1.661,-0.9157]),SFVec3f([-6.326,4.691,-1.55]),SFVec3f([-6.568,4.855,-0.7308]),SFVec3f([-4.216,3.427,-5.131]),SFVec3f([-6.23,0.8303,-3.441]),SFVec3f([-6.326,4.656,-2.95]),SFVec3f([-2.596,3.055,-7.113]),SFVec3f([-5.584,7.691,-2.78]),SFVec3f([-4.651,10.94,-2.696]),SFVec3f([-5.595,7.63,-2.141]),SFVec3f([-5.853,7.683,-1.772]),SFVec3f([-6.007,7.856,-0.5637]),SFVec3f([-4.738,11.13,-0.5905]),SFVec3f([-5.181,8.476,2.104]),SFVec3f([-4.581,10.59,1.893]),SFVec3f([-3.038,10.79,4.444]),SFVec3f([-1.173,1.832,-6.114]),SFVec3f([0,1.035,-6.031]),SFVec3f([0,0.1227,-8.281]),SFVec3f([-2.917,-0.9285,-7.31]),SFVec3f([-3.978,2.324,-4.64]),SFVec3f([-3.323,2.08,-5.371]),SFVec3f([-3.261,1.453,-4.252]),SFVec3f([-2.275,0.8807,-3.763]),SFVec3f([-1.82,1.289,-5.164]),SFVec3f([-1.968,-1.561,-5.013]),SFVec3f([-3.818,1.729,-3.139]),SFVec3f([-3.712,1.225,-2.29]),SFVec3f([-1.411,0.5541,-3.484]),SFVec3f([-4.42,-0.2924,-4.477]),SFVec3f([-4.713,2.444,-3.477]),SFVec3f([-5.658,2.599,-1.983]),SFVec3f([-0.9407,0.7103,-4.537]),SFVec3f([-4.734,2.295,-0.478]),SFVec3f([-4.664,1.866,-1.436]),SFVec3f([-2.479,12.6,2.191]),SFVec3f([0,12.89,2.191]),SFVec3f([-2.479,13.01,-0.5905]),SFVec3f([-2.479,12.47,-3.073]),SFVec3f([0,13.3,-0.5905]),SFVec3f([-3.561,1.081,-1.554]),SFVec3f([-4.073,1.537,-0.251]),SFVec3f([-2.799,0.2961,1.981]),SFVec3f([-5.038,2.087,0.2634]),SFVec3f([-4.074,1.813,1.489]),SFVec3f([-5.351,2.269,0.2568]),SFVec3f([-5.054,4.389,0.2634]),SFVec3f([-4.798,4.414,1.165]),SFVec3f([-5.575,4.993,0.4877]),SFVec3f([-5.759,4.313,-0.6689]),SFVec3f([-5.672,3.119,-0.6884]),SFVec3f([-4.617,3.919,1.981]),SFVec3f([-4.342,2.994,2.484]),SFVec3f([-4.754,5.519,2.97]),SFVec3f([-3.443,1.22,3.201]),SFVec3f([-1.438,-0.7799,2.92]),SFVec3f([-2.098,-0.0622,0.3894]),SFVec3f([-1.125,6.641,6.224]),SFVec3f([-1.972,10.18,5.298]),SFVec3f([0,9.837,5.8]),SFVec3f([-2.091,-0.0943,-1.629]),SFVec3f([-1.972,6.686,5.769]),SFVec3f([-3.551,6.468,4.66]),SFVec3f([-2.507,0.2122,3.467]),SFVec3f([-1.252,-0.7037,3.753]),SFVec3f([-0.2244,0.7989,5.843]),SFVec3f([-0.1458,1.141,5.967]),SFVec3f([0,1.141,5.968]),SFVec3f([-0.4079,0.7711,5.733]),SFVec3f([-0.4592,1.442,5.549]),SFVec3f([-2.181,1.29,4.703]),SFVec3f([-1.184,0.5011,4.895]),SFVec3f([-2.472,2.023,4.722]),SFVec3f([-0.9194,2.354,5.382]),SFVec3f([0,-1.065,3.009]),SFVec3f([0,-1.23,3.575]),SFVec3f([-3.515,2.199,3.631]),SFVec3f([-1.083,-0.2065,4.531]),SFVec3f([0,2.206,6.446]),SFVec3f([-0.646,4.262,6.112]),SFVec3f([0,3.949,5.823]),SFVec3f([-0.2615,3.949,5.823]),SFVec3f([-1.061,2.841,5.24]),SFVec3f([-0.5926,3.49,5.582]),SFVec3f([0,4.73,6.243]),SFVec3f([-0.7426,4.743,6.135]),SFVec3f([-3.843,3.486,3.474]),SFVec3f([-4.006,4.226,3.45]),SFVec3f([-2.175,4.422,5.292]),SFVec3f([-2.089,4.758,5.599]),SFVec3f([-1.327,4.522,5.859]),SFVec3f([-1.599,4.225,5.429]),SFVec3f([-3.345,2.806,3.987]),SFVec3f([-2.647,2.75,4.481]),SFVec3f([-2.795,3.568,4.497]),SFVec3f([-1.835,3.587,5.011]),SFVec3f([-3.082,3.581,4.206]),SFVec3f([-1.356,3.642,5.241]),SFVec3f([-0.9241,3.763,5.471]),SFVec3f([-1.044,3.885,5.454]),SFVec3f([-3.227,3.707,4.111]),SFVec3f([-2.043,5.094,5.803]),SFVec3f([-3.685,4.225,3.891]),SFVec3f([-1.112,4.786,6.09]),SFVec3f([-3.829,8.081,4.078]),SFVec3f([-3.843,5.112,4.093]),SFVec3f([-3.261,5.262,4.816]),SFVec3f([-5.658,2.599,-1.983]),SFVec3f([-3.712,1.225,-2.29]),SFVec3f([-0.2244,0.5907,5.545]),SFVec3f([-3.028,4.567,4.683]),SFVec3f([-1.621,4.356,4.123]),SFVec3f([-2.09,4.432,3.699]),SFVec3f([-1.332,4.202,4.217]),SFVec3f([-1.07,3.93,4.244]),SFVec3f([-1.254,3.737,4.129]),SFVec3f([-1.514,3.69,3.988]),SFVec3f([-2.035,3.658,3.658]),SFVec3f([-2.202,3.647,3.455]),SFVec3f([-2.276,3.737,3.378]),SFVec3f([-2.499,4.118,3.181]),SFVec3f([-0.5806,0.4168,3.813]),SFVec3f([-0.5566,-0.2209,3.55]),SFVec3f([-0.2132,0.5713,5.365]),SFVec3f([-0.1288,0.4247,4.012]),SFVec3f([0,0.5723,5.368]),SFVec3f([0,0.4306,4.006]),SFVec3f([0,-0.2612,3.286]),SFVec3f([-3.171,4.95,4.784])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.9175,0.8974]),SFVec2f([0.9509,0.8981]),SFVec2f([0.9421,0.8701]),SFVec2f([0.924,0.8702]),SFVec2f([0.9824,0.8971]),SFVec2f([0.9824,0.8682]),SFVec2f([0.9541,0.8718]),SFVec2f([0.9147,0.8129]),SFVec2f([0.9437,0.8153]),SFVec2f([0.9638,0.8095]),SFVec2f([0.9824,0.809]),SFVec2f([0.9461,0.923]),SFVec2f([0.9071,0.9135]),SFVec2f([0.9824,0.9287]),SFVec2f([0.7343,0.9169]),SFVec2f([0.7616,0.9147]),SFVec2f([0.7553,0.8982]),SFVec2f([0.7343,0.8968]),SFVec2f([0.7739,0.9327]),SFVec2f([0.7343,0.9365]),SFVec2f([0.8187,0.8433]),SFVec2f([0.8348,0.9045]),SFVec2f([0.8324,0.8647]),SFVec2f([0.74,0.8745]),SFVec2f([0.761,0.8768]),SFVec2f([0.7497,0.8755]),SFVec2f([0.777,0.8787]),SFVec2f([0.7647,0.8593]),SFVec2f([0.7596,0.8565]),SFVec2f([0.7438,0.8546]),SFVec2f([0.7343,0.8756]),SFVec2f([0.7372,0.8736]),SFVec2f([0.7394,0.8706]),SFVec2f([0.7405,0.8536]),SFVec2f([0.7808,0.8802]),SFVec2f([0.7786,0.8666]),SFVec2f([0.7875,0.8787]),SFVec2f([0.7821,0.8667]),SFVec2f([0.7952,0.9076]),SFVec2f([0.8011,0.8823]),SFVec2f([0.7745,0.9003]),SFVec2f([0.7939,0.8518]),SFVec2f([0.7845,0.8549]),SFVec2f([0.7731,0.8049]),SFVec2f([0.7979,0.8609]),SFVec2f([0.8185,0.8054]),SFVec2f([0.8439,0.8655]),SFVec2f([0.8131,0.8741]),SFVec2f([0.786,0.7876]),SFVec2f([0.8107,0.8538]),SFVec2f([0.8058,0.8252]),SFVec2f([0.8096,0.8166]),SFVec2f([0.8589,0.7975]),SFVec2f([0.8767,0.8622]),SFVec2f([0.8568,0.8668]),SFVec2f([0.8669,0.8674]),SFVec2f([0.9208,0.8549]),SFVec2f([0.8792,0.7991]),SFVec2f([0.8835,0.8633]),SFVec2f([0.9139,0.8636]),SFVec2f([0.9513,0.84]),SFVec2f([0.9824,0.8358]),SFVec2f([0.8845,0.9021]),SFVec2f([0.888,0.931]),SFVec2f([0.8761,0.9036]),SFVec2f([0.8705,0.9018]),SFVec2f([0.8544,0.902]),SFVec2f([0.8538,0.9345]),SFVec2f([0.8173,0.9068]),SFVec2f([0.8156,0.9257]),SFVec2f([0.7753,0.9186]),SFVec2f([0.7832,0.9041]),SFVec2f([0.7338,0.8385]),SFVec2f([0.7279,0.8339]),SFVec2f([0.7208,0.8401]),SFVec2f([0.7397,0.7767]),SFVec2f([0.7338,0.7681]),SFVec2f([0.7338,0.7727]),SFVec2f([0.7192,0.8201]),SFVec2f([0.7171,0.8352]),SFVec2f([0.7139,0.8364]),SFVec2f([0.7127,0.8419]),SFVec2f([0.7175,0.832]),SFVec2f([0.7247,0.8312]),SFVec2f([0.7224,0.8292]),SFVec2f([0.7239,0.8169]),SFVec2f([0.7146,0.8334]),SFVec2f([0.7152,0.8309]),SFVec2f([0.753,0.7762]),SFVec2f([0.7452,0.772]),SFVec2f([0.7409,0.7703]),SFVec2f([0.756,0.7661]),SFVec2f([0.7502,0.7748]),SFVec2f([0.7102,0.837]),SFVec2f([0.7574,0.7798]),SFVec2f([0.7054,0.8378]),SFVec2f([0.7338,0.8253]),SFVec2f([0.7338,0.8299]),SFVec2f([0.7267,0.8275]),SFVec2f([0.7291,0.8283]),SFVec2f([0.7338,0.8254]),SFVec2f([0.7338,0.7682]),SFVec2f([0.7385,0.7711]),SFVec2f([0.7338,0.7628]),SFVec2f([0.7338,0.82]),SFVec2f([0.7437,0.7597]),SFVec2f([0.7429,0.774]),SFVec2f([0.7484,0.7629]),SFVec2f([0.7505,0.778]),SFVec2f([0.7116,0.8233]),SFVec2f([0.7622,0.7806]),SFVec2f([0.7576,0.779]),SFVec2f([0.763,0.7872]),SFVec2f([0.7046,0.8444]),SFVec2f([0.7572,0.7769]),SFVec2f([0.7524,0.7737]),SFVec2f([0.7104,0.8341]),SFVec2f([0.7881,0.9479]),SFVec2f([0.7343,0.9577]),SFVec2f([0.8497,0.9637]),SFVec2f([0.9158,0.9539]),SFVec2f([0.7343,0.9872]),SFVec2f([0.9824,0.9663]),SFVec2f([0.4263,0.6263]),SFVec2f([0.4421,0.6351]),SFVec2f([0.4514,0.6319]),SFVec2f([0.4298,0.637]),SFVec2f([0.4385,0.639]),SFVec2f([0.4385,0.6403]),SFVec2f([0.4369,0.6596]),SFVec2f([0.4321,0.6555]),SFVec2f([0.4385,0.6553]),SFVec2f([0.4451,0.6548]),SFVec2f([0.4452,0.6463]),SFVec2f([0.4227,0.6454]),SFVec2f([0.4263,0.652]),SFVec2f([0.4193,0.6633]),SFVec2f([0.4176,0.6328]),SFVec2f([0.4376,0.6237]),SFVec2f([0.4196,0.6187]),SFVec2f([0.3384,0.9887]),SFVec2f([0.2934,0.905]),SFVec2f([0.2441,0.9417]),SFVec2f([0.2441,0.9723]),SFVec2f([0.4437,0.6405]),SFVec2f([0.4519,0.6235]),SFVec2f([0.3367,0.9059]),SFVec2f([0.4034,0.9073]),SFVec2f([0.4566,0.6329]),SFVec2f([0.4157,0.6257]),SFVec2f([0.4137,0.6192]),SFVec2f([0.2959,0.626]),SFVec2f([0.3051,0.6166]),SFVec2f([0.2511,0.6816]),SFVec2f([0.2548,0.6653]),SFVec2f([0.2441,0.6653]),SFVec2f([0.2441,0.6816]),SFVec2f([0.2661,0.696]),SFVec2f([0.2636,0.664]),SFVec2f([0.3484,0.6888]),SFVec2f([0.3007,0.651]),SFVec2f([0.2881,0.7397]),SFVec2f([0.3623,0.7239]),SFVec2f([0.4151,0.6155]),SFVec2f([0.4295,0.6197]),SFVec2f([0.4116,0.6201]),SFVec2f([0.4088,0.6855]),SFVec2f([0.4123,0.7323]),SFVec2f([0.4518,0.7703]),SFVec2f([0.364,0.6372]),SFVec2f([0.2441,0.7326]),SFVec2f([0.2441,0.7109]),SFVec2f([0.2441,0.7705]),SFVec2f([0.2441,0.816]),SFVec2f([0.2466,0.8272]),SFVec2f([0.2826,0.8198]),SFVec2f([0.263,0.8101]),SFVec2f([0.3011,0.7644]),SFVec2f([0.4294,0.848]),SFVec2f([0.295,0.8569]),SFVec2f([0.4229,0.7906]),SFVec2f([0.445,0.8342]),SFVec2f([0.3273,0.8725]),SFVec2f([0.3401,0.8443]),SFVec2f([0.4194,0.891]),SFVec2f([0.3844,0.8819]),SFVec2f([0.3962,0.7639]),SFVec2f([0.3654,0.758]),SFVec2f([0.3664,0.7923]),SFVec2f([0.3312,0.7931]),SFVec2f([0.3858,0.7947]),SFVec2f([0.2864,0.8094]),SFVec2f([0.3065,0.7969]),SFVec2f([0.4051,0.8004]),SFVec2f([0.4267,0.8291]),SFVec2f([0.3243,0.8795]),SFVec2f([0.293,0.8645]),SFVec2f([0.4715,0.8911]),SFVec2f([0.431,0.9594]),SFVec2f([0.4658,0.6252]),SFVec2f([0.465,0.6281]),SFVec2f([0.3862,0.8876]),SFVec2f([0.4544,0.6426]),SFVec2f([0.2548,0.6553]),SFVec2f([0.2441,0.6553]),SFVec2f([0.4156,0.6279]),SFVec2f([0.3783,0.625]),SFVec2f([0.3984,0.649]),SFVec2f([0.4325,0.6718]),SFVec2f([0.4443,0.6446]),SFVec2f([0.428,0.6022]),SFVec2f([0.4445,0.6357]),SFVec2f([0.4021,0.656]),SFVec2f([0.4052,0.6271]),SFVec2f([0.4253,0.6199]),SFVec2f([0.4215,0.6174]),SFVec2f([0.6418,0.6585]),SFVec2f([0.6441,0.671]),SFVec2f([0.6214,0.6731]),SFVec2f([0.616,0.6731]),SFVec2f([0.6418,0.6585]),SFVec2f([0.623,0.6494]),SFVec2f([0.6418,0.6585]),SFVec2f([0.6441,0.671]),SFVec2f([0.3003,0.6509]),SFVec2f([0.2548,0.6558]),SFVec2f([0.2549,0.6531]),SFVec2f([0.2441,0.6558]),SFVec2f([0.616,0.6731]),SFVec2f([0.6214,0.6731]),SFVec2f([0.2441,0.6529]),SFVec2f([0.314,0.8296]),SFVec2f([0.3898,0.85]),SFVec2f([0.2746,0.7881]),SFVec2f([0.2889,0.7981]),SFVec2f([0.4442,0.8857]),SFVec2f([0.2745,0.8415]),SFVec2f([0.3079,0.8417]),SFVec2f([0.3393,0.8544]),SFVec2f([0.3891,0.8542]),SFVec2f([0.2699,0.8521]),SFVec2f([0.246,0.853]),SFVec2f([0.4715,0.8911]),SFVec2f([0.9421,0.8701]),SFVec2f([0.9509,0.8981]),SFVec2f([0.9175,0.8974]),SFVec2f([0.924,0.8702]),SFVec2f([0.9824,0.8682]),SFVec2f([0.9824,0.8971]),SFVec2f([0.9541,0.8718]),SFVec2f([0.9147,0.8129]),SFVec2f([0.9437,0.8153]),SFVec2f([0.9638,0.8095]),SFVec2f([0.9824,0.809]),SFVec2f([0.9461,0.923]),SFVec2f([0.9071,0.9135]),SFVec2f([0.9824,0.9287]),SFVec2f([0.7553,0.8982]),SFVec2f([0.7616,0.9147]),SFVec2f([0.7343,0.9169]),SFVec2f([0.7343,0.8968]),SFVec2f([0.7739,0.9327]),SFVec2f([0.7343,0.9365]),SFVec2f([0.8324,0.8647]),SFVec2f([0.8348,0.9045]),SFVec2f([0.8187,0.8433]),SFVec2f([0.74,0.8745]),SFVec2f([0.7497,0.8755]),SFVec2f([0.761,0.8768]),SFVec2f([0.7647,0.8593]),SFVec2f([0.777,0.8787]),SFVec2f([0.7438,0.8546]),SFVec2f([0.7596,0.8565]),SFVec2f([0.7372,0.8736]),SFVec2f([0.7343,0.8756]),SFVec2f([0.7394,0.8706]),SFVec2f([0.7405,0.8536]),SFVec2f([0.7808,0.8802]),SFVec2f([0.7786,0.8666]),SFVec2f([0.7821,0.8667]),SFVec2f([0.7875,0.8787]),SFVec2f([0.8011,0.8823]),SFVec2f([0.7952,0.9076]),SFVec2f([0.7745,0.9003]),SFVec2f([0.7939,0.8518]),SFVec2f([0.7845,0.8549]),SFVec2f([0.7731,0.8049]),SFVec2f([0.7979,0.8609]),SFVec2f([0.8185,0.8054]),SFVec2f([0.8439,0.8655]),SFVec2f([0.8131,0.8741]),SFVec2f([0.8107,0.8538]),SFVec2f([0.8058,0.8252]),SFVec2f([0.786,0.7876]),SFVec2f([0.8096,0.8166]),SFVec2f([0.8767,0.8622]),SFVec2f([0.8589,0.7975]),SFVec2f([0.8669,0.8674]),SFVec2f([0.8568,0.8668]),SFVec2f([0.9208,0.8549]),SFVec2f([0.8792,0.7991]),SFVec2f([0.9139,0.8636]),SFVec2f([0.8835,0.8633]),SFVec2f([0.9513,0.84]),SFVec2f([0.9824,0.8358]),SFVec2f([0.8845,0.9021]),SFVec2f([0.888,0.931]),SFVec2f([0.8761,0.9036]),SFVec2f([0.8705,0.9018]),SFVec2f([0.8544,0.902]),SFVec2f([0.8538,0.9345]),SFVec2f([0.8173,0.9068]),SFVec2f([0.8156,0.9257]),SFVec2f([0.7753,0.9186]),SFVec2f([0.7832,0.9041]),SFVec2f([0.7208,0.8401]),SFVec2f([0.7279,0.8339]),SFVec2f([0.7338,0.8385]),SFVec2f([0.7338,0.7727]),SFVec2f([0.7338,0.7681]),SFVec2f([0.7397,0.7767]),SFVec2f([0.7192,0.8201]),SFVec2f([0.7139,0.8364]),SFVec2f([0.7171,0.8352]),SFVec2f([0.7127,0.8419]),SFVec2f([0.7175,0.832]),SFVec2f([0.7224,0.8292]),SFVec2f([0.7247,0.8312]),SFVec2f([0.7239,0.8169]),SFVec2f([0.7146,0.8334]),SFVec2f([0.7452,0.772]),SFVec2f([0.753,0.7762]),SFVec2f([0.7152,0.8309]),SFVec2f([0.7409,0.7703]),SFVec2f([0.7502,0.7748]),SFVec2f([0.756,0.7661]),SFVec2f([0.7102,0.837]),SFVec2f([0.7574,0.7798]),SFVec2f([0.7054,0.8378]),SFVec2f([0.7338,0.8253]),SFVec2f([0.7338,0.8299]),SFVec2f([0.7338,0.8254]),SFVec2f([0.7291,0.8283]),SFVec2f([0.7267,0.8275]),SFVec2f([0.7338,0.7628]),SFVec2f([0.7385,0.7711]),SFVec2f([0.7338,0.7682]),SFVec2f([0.7338,0.82]),SFVec2f([0.7437,0.7597]),SFVec2f([0.7484,0.7629]),SFVec2f([0.7429,0.774]),SFVec2f([0.7505,0.778]),SFVec2f([0.7116,0.8233]),SFVec2f([0.763,0.7872]),SFVec2f([0.7576,0.779]),SFVec2f([0.7622,0.7806]),SFVec2f([0.7046,0.8444]),SFVec2f([0.7572,0.7769]),SFVec2f([0.7524,0.7737]),SFVec2f([0.7104,0.8341]),SFVec2f([0.7881,0.9479]),SFVec2f([0.7343,0.9577]),SFVec2f([0.8497,0.9637]),SFVec2f([0.9158,0.9539]),SFVec2f([0.7343,0.9872]),SFVec2f([0.9824,0.9663]),SFVec2f([0.4514,0.6319]),SFVec2f([0.4421,0.6351]),SFVec2f([0.4263,0.6263]),SFVec2f([0.4385,0.639]),SFVec2f([0.4298,0.637]),SFVec2f([0.4385,0.6403]),SFVec2f([0.4385,0.6553]),SFVec2f([0.4321,0.6555]),SFVec2f([0.4369,0.6596]),SFVec2f([0.4451,0.6548]),SFVec2f([0.4452,0.6463]),SFVec2f([0.4263,0.652]),SFVec2f([0.4227,0.6454]),SFVec2f([0.4193,0.6633]),SFVec2f([0.4176,0.6328]),SFVec2f([0.4196,0.6187]),SFVec2f([0.4376,0.6237]),SFVec2f([0.2441,0.9417]),SFVec2f([0.2934,0.905]),SFVec2f([0.3384,0.9887]),SFVec2f([0.2441,0.9723]),SFVec2f([0.4437,0.6405]),SFVec2f([0.4519,0.6235]),SFVec2f([0.3367,0.9059]),SFVec2f([0.4034,0.9073]),SFVec2f([0.4566,0.6329]),SFVec2f([0.4157,0.6257]),SFVec2f([0.4137,0.6192]),SFVec2f([0.2441,0.6653]),SFVec2f([0.2548,0.6653]),SFVec2f([0.2511,0.6816]),SFVec2f([0.2441,0.6816]),SFVec2f([0.2636,0.664]),SFVec2f([0.2661,0.696]),SFVec2f([0.3484,0.6888]),SFVec2f([0.3007,0.651]),SFVec2f([0.3623,0.7239]),SFVec2f([0.2881,0.7397]),SFVec2f([0.4215,0.6174]),SFVec2f([0.4295,0.6197]),SFVec2f([0.4151,0.6155]),SFVec2f([0.4116,0.6201]),SFVec2f([0.4518,0.7703]),SFVec2f([0.4123,0.7323]),SFVec2f([0.4088,0.6855]),SFVec2f([0.364,0.6372]),SFVec2f([0.2959,0.626]),SFVec2f([0.3051,0.6166]),SFVec2f([0.2441,0.7326]),SFVec2f([0.2441,0.7705]),SFVec2f([0.2441,0.7109]),SFVec2f([0.2745,0.8415]),SFVec2f([0.2466,0.8272]),SFVec2f([0.2441,0.816]),SFVec2f([0.263,0.8101]),SFVec2f([0.3011,0.7644]),SFVec2f([0.2746,0.7881]),SFVec2f([0.246,0.853]),SFVec2f([0.2699,0.8521]),SFVec2f([0.4229,0.7906]),SFVec2f([0.445,0.8342]),SFVec2f([0.3401,0.8443]),SFVec2f([0.3393,0.8544]),SFVec2f([0.3079,0.8417]),SFVec2f([0.314,0.8296]),SFVec2f([0.3962,0.7639]),SFVec2f([0.3654,0.758]),SFVec2f([0.3664,0.7923]),SFVec2f([0.3312,0.7931]),SFVec2f([0.3858,0.7947]),SFVec2f([0.3065,0.7969]),SFVec2f([0.2889,0.7981]),SFVec2f([0.2826,0.8198]),SFVec2f([0.2864,0.8094]),SFVec2f([0.4051,0.8004]),SFVec2f([0.3243,0.8795]),SFVec2f([0.4267,0.8291]),SFVec2f([0.293,0.8645]),SFVec2f([0.4715,0.8911]),SFVec2f([0.431,0.9594]),SFVec2f([0.4715,0.8911]),SFVec2f([0.4658,0.6252]),SFVec2f([0.465,0.6281]),SFVec2f([0.4194,0.891]),SFVec2f([0.3862,0.8876]),SFVec2f([0.4544,0.6426]),SFVec2f([0.2548,0.6553]),SFVec2f([0.2441,0.6553]),SFVec2f([0.3984,0.649]),SFVec2f([0.3783,0.625]),SFVec2f([0.4156,0.6279]),SFVec2f([0.4325,0.6718]),SFVec2f([0.428,0.6022]),SFVec2f([0.4443,0.6446]),SFVec2f([0.4445,0.6357]),SFVec2f([0.4021,0.656]),SFVec2f([0.4052,0.6271]),SFVec2f([0.4253,0.6199]),SFVec2f([0.3898,0.85]),SFVec2f([0.6418,0.6585]),SFVec2f([0.6441,0.671]),SFVec2f([0.6441,0.671]),SFVec2f([0.6418,0.6585]),SFVec2f([0.6214,0.6731]),SFVec2f([0.6214,0.6731]),SFVec2f([0.616,0.6731]),SFVec2f([0.616,0.6731]),SFVec2f([0.623,0.6494]),SFVec2f([0.6418,0.6585]),SFVec2f([0.3003,0.6509]),SFVec2f([0.2548,0.6558]),SFVec2f([0.2549,0.6531]),SFVec2f([0.2441,0.6558]),SFVec2f([0.2441,0.6529]),SFVec2f([0.3891,0.8542]),SFVec2f([0.4294,0.848]),SFVec2f([0.4442,0.8857]),SFVec2f([0.295,0.8569]),SFVec2f([0.3273,0.8725]),SFVec2f([0.3844,0.8819])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('l_eyelid_joint'),
                                                                                                                              DEF_ : SFString('hanim_l_eyelid_joint'),
                                                                                                                              center_ : SFVec3f([SFDouble(2.245), SFDouble(63.299999), SFDouble(1.464)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('l_eyelid'),
                                                                                                                                  DEF_ : SFString('hanim_l_eyelid'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(2.245), SFDouble(63.299999), SFDouble(1.464)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(26), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(27), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(5), SFInt32(-1), SFInt32(27), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(26), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(9), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(7), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(11), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(24), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(25), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(25), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(3), SFInt32(18), SFInt32(-1), SFInt32(10), SFInt32(25), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(5), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0.7812,0.9459,2.423]),SFVec3f([-0.0916,1.221,3.035]),SFVec3f([-0.6939,1.091,3.272]),SFVec3f([-1.201,0.7156,3.402]),SFVec3f([1.44,0.2291,1.879]),SFVec3f([0.5651,-0.165,2.791]),SFVec3f([-0.0316,0.0152,3.145]),SFVec3f([-0.5556,0.2361,3.321]),SFVec3f([-0.9123,0.4339,3.372]),SFVec3f([1.238,0.0487,2.08]),SFVec3f([1.125,0.602,2.151]),SFVec3f([0.8496,-0.1779,2.483]),SFVec3f([0.6573,0.8425,2.258]),SFVec3f([-0.1708,0.9799,2.786]),SFVec3f([-0.7043,0.8814,3.009]),SFVec3f([-1.214,0.6498,3.288]),SFVec3f([1.382,0.2083,1.843]),SFVec3f([0.5305,-0.2135,2.728]),SFVec3f([-0.061,-0.0537,3.021]),SFVec3f([-0.5907,0.1786,3.224]),SFVec3f([-0.9336,0.3766,3.273]),SFVec3f([1.226,0.0107,2.001]),SFVec3f([1.011,0.5271,2.053]),SFVec3f([0.8046,-0.2044,2.445]),SFVec3f([0.7041,0.3289,2.599]),SFVec3f([-0.0583,0.6255,3.144]),SFVec3f([-0.5943,0.5965,3.311]),SFVec3f([0.9909,0.1875,2.335])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.3562,0.7836]),SFVec2f([0.3424,0.7815]),SFVec2f([0.3432,0.7614]),SFVec2f([0.3553,0.7628]),SFVec2f([0.3328,0.7723]),SFVec2f([0.3344,0.7557]),SFVec2f([0.3248,0.7567]),SFVec2f([0.3294,0.7475]),SFVec2f([0.3666,0.7703]),SFVec2f([0.3614,0.7771]),SFVec2f([0.3598,0.7618]),SFVec2f([0.364,0.76]),SFVec2f([0.3542,0.784]),SFVec2f([0.3411,0.7782]),SFVec2f([0.3327,0.7703]),SFVec2f([0.3246,0.7567]),SFVec2f([0.3657,0.7703]),SFVec2f([0.3598,0.7771]),SFVec2f([0.3534,0.7431]),SFVec2f([0.3436,0.742]),SFVec2f([0.3428,0.7423]),SFVec2f([0.3522,0.7429]),SFVec2f([0.335,0.743]),SFVec2f([0.3345,0.743]),SFVec2f([0.3291,0.7475]),SFVec2f([0.3576,0.7438]),SFVec2f([0.3566,0.7438]),SFVec2f([0.3632,0.7603])])))))])]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('r_eyelid_joint'),
                                                                                                                              DEF_ : SFString('hanim_r_eyelid_joint'),
                                                                                                                              center_ : SFVec3f([SFDouble(-2.245), SFDouble(63.299999), SFDouble(1.464)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('r_eyelid'),
                                                                                                                                  DEF_ : SFString('hanim_r_eyelid'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(-2.245), SFDouble(63.299999), SFDouble(1.464)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(26), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(27), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(27), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(26), SFInt32(7), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(11), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(24), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(25), SFInt32(-1), SFInt32(19), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(3), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(25), SFInt32(18), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(25), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(22), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.7812,0.9459,2.423]),SFVec3f([0.0916,1.221,3.035]),SFVec3f([0.6939,1.091,3.272]),SFVec3f([1.201,0.7156,3.402]),SFVec3f([-1.44,0.2291,1.879]),SFVec3f([-0.5651,-0.165,2.791]),SFVec3f([0.0316,0.0152,3.145]),SFVec3f([0.5556,0.2361,3.321]),SFVec3f([0.9123,0.4339,3.372]),SFVec3f([-1.238,0.0487,2.08]),SFVec3f([-1.125,0.602,2.151]),SFVec3f([-0.8496,-0.1779,2.483]),SFVec3f([-0.6573,0.8425,2.258]),SFVec3f([0.1708,0.9799,2.786]),SFVec3f([0.7043,0.8814,3.009]),SFVec3f([1.214,0.6498,3.288]),SFVec3f([-1.382,0.2083,1.843]),SFVec3f([-0.5305,-0.2135,2.728]),SFVec3f([0.061,-0.0537,3.021]),SFVec3f([0.5907,0.1786,3.224]),SFVec3f([0.9336,0.3766,3.273]),SFVec3f([-1.226,0.0107,2.001]),SFVec3f([-1.011,0.5271,2.053]),SFVec3f([-0.8046,-0.2044,2.445]),SFVec3f([-0.7041,0.3289,2.599]),SFVec3f([0.0583,0.6255,3.144]),SFVec3f([0.5943,0.5965,3.311]),SFVec3f([-0.9909,0.1875,2.335])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.3562,0.7836]),SFVec2f([0.3424,0.7815]),SFVec2f([0.3432,0.7614]),SFVec2f([0.3553,0.7628]),SFVec2f([0.3328,0.7723]),SFVec2f([0.3344,0.7557]),SFVec2f([0.3248,0.7567]),SFVec2f([0.3294,0.7475]),SFVec2f([0.3666,0.7703]),SFVec2f([0.3614,0.7771]),SFVec2f([0.3598,0.7618]),SFVec2f([0.364,0.76]),SFVec2f([0.3542,0.784]),SFVec2f([0.3411,0.7782]),SFVec2f([0.3327,0.7703]),SFVec2f([0.3246,0.7567]),SFVec2f([0.3657,0.7703]),SFVec2f([0.3598,0.7771]),SFVec2f([0.3534,0.7431]),SFVec2f([0.3436,0.742]),SFVec2f([0.3428,0.7423]),SFVec2f([0.3522,0.7429]),SFVec2f([0.335,0.743]),SFVec2f([0.3345,0.743]),SFVec2f([0.3291,0.7475]),SFVec2f([0.3576,0.7438]),SFVec2f([0.3566,0.7438]),SFVec2f([0.3632,0.7603])])))))])]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('l_eyeball_joint'),
                                                                                                                              DEF_ : SFString('hanim_l_eyeball_joint'),
                                                                                                                              center_ : SFVec3f([SFDouble(2.139), SFDouble(62.439999), SFDouble(3.691)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('l_eyeball'),
                                                                                                                                  DEF_ : SFString('hanim_l_eyeball'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(2.139), SFDouble(62.439999), SFDouble(3.691)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(1), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(17), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(12), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(14), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(19), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(29), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(30), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(30), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(30), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(30), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(30), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(30), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(30), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(30), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(30), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(4), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(6), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(13), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(19), SFInt32(-1), SFInt32(6), SFInt32(15), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(6), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(32), SFInt32(15), SFInt32(-1), SFInt32(36), SFInt32(1), SFInt32(40), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(40), SFInt32(-1), SFInt32(0), SFInt32(33), SFInt32(40), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(40), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(40), SFInt32(-1), SFInt32(38), SFInt32(2), SFInt32(40), SFInt32(-1), SFInt32(2), SFInt32(35), SFInt32(40), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(40), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(40), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.5714,0.1308,1.022]),SFVec3f([0.0065,0.3275,0.8903]),SFVec3f([0.9254,-0.514,-0.1858]),SFVec3f([-1.127,-0.2093,1.04]),SFVec3f([-0.8123,-0.4527,0.8311]),SFVec3f([1.071,-0.3875,-0.2786]),SFVec3f([0.8656,0.4725,0.2913]),SFVec3f([1.531,0.131,-0.4935]),SFVec3f([0.6347,-0.5265,0.1025]),SFVec3f([-0.3305,-0.5079,0.6059]),SFVec3f([-0.9072,0.3038,0.6607]),SFVec3f([-0.2821,0.6036,0.4543]),SFVec3f([0.8055,-0.7341,-0.6018]),SFVec3f([-1.538,-0.196,0.7028]),SFVec3f([-1.179,-0.6703,0.471]),SFVec3f([0.9784,-0.5205,-0.7082]),SFVec3f([0.7686,0.7606,-0.1253]),SFVec3f([1.439,0.2188,-0.9066]),SFVec3f([0.4776,-0.7606,-0.3045]),SFVec3f([-0.6264,-0.7495,0.2298]),SFVec3f([-0.4184,0.4603,0.0509]),SFVec3f([0.5401,0.5849,-0.4428]),SFVec3f([1.071,0.2019,-1.042]),SFVec3f([0.7894,-0.2743,-0.8837]),SFVec3f([0.6127,-0.4156,-0.7848]),SFVec3f([0.3441,-0.4361,-0.5345]),SFVec3f([-0.763,-0.4066,-0.0392]),SFVec3f([-1.24,-0.3287,0.1376]),SFVec3f([-1.414,-0.1566,0.1789]),SFVec3f([-0.9737,0.2094,0.2088]),SFVec3f([0.2912,-0.0892,0.5676])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.3217,0.8278]),SFVec2f([0.3482,0.8386]),SFVec2f([0.3916,0.7984]),SFVec2f([0.3206,0.8292]),SFVec2f([0.3482,0.8386]),SFVec2f([0.3916,0.7984]),SFVec2f([0.2977,0.8092]),SFVec2f([0.309,0.8013]),SFVec2f([0.3985,0.8044]),SFVec2f([0.3868,0.8428]),SFVec2f([0.4182,0.8265]),SFVec2f([0.3778,0.7978]),SFVec2f([0.3319,0.7987]),SFVec2f([0.3868,0.8428]),SFVec2f([0.3482,0.8386]),SFVec2f([0.3206,0.8292]),SFVec2f([0.3319,0.7987]),SFVec2f([0.3778,0.7978]),SFVec2f([0.3916,0.7984]),SFVec2f([0.309,0.8013]),SFVec2f([0.3985,0.8029]),SFVec2f([0.2977,0.8092]),SFVec2f([0.4182,0.8263]),SFVec2f([0.3482,0.8386]),SFVec2f([0.3868,0.8428]),SFVec2f([0.4182,0.8265]),SFVec2f([0.3985,0.8044]),SFVec2f([0.3916,0.7984]),SFVec2f([0.3778,0.7978]),SFVec2f([0.3319,0.7987]),SFVec2f([0.309,0.8013]),SFVec2f([0.2977,0.8092]),SFVec2f([0.3206,0.8292]),SFVec2f([0.2978,0.8092]),SFVec2f([0.309,0.8013]),SFVec2f([0.3985,0.8044]),SFVec2f([0.3868,0.8428]),SFVec2f([0.4182,0.8265]),SFVec2f([0.3778,0.7978]),SFVec2f([0.3319,0.7986]),SFVec2f([0.3567,0.819])])))))])]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('r_eyeball_joint'),
                                                                                                                              DEF_ : SFString('hanim_r_eyeball_joint'),
                                                                                                                              center_ : SFVec3f([SFDouble(-2.139), SFDouble(62.439999), SFDouble(3.691)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('r_eyeball'),
                                                                                                                                  DEF_ : SFString('hanim_r_eyeball'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(-2.139), SFDouble(62.439999), SFDouble(3.691)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(1), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(18), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(14), SFInt32(19), SFInt32(-1), SFInt32(14), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(29), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(30), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(30), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(30), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(30), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(30), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(30), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(30), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(30), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(30), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(30), SFInt32(6), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(4), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(6), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(16), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(6), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(15), SFInt32(6), SFInt32(-1), SFInt32(15), SFInt32(32), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(36), SFInt32(40), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(40), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(40), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(40), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(40), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(40), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(40), SFInt32(36), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0.5714,0.1308,1.022]),SFVec3f([-0.0065,0.3275,0.8903]),SFVec3f([-0.9254,-0.514,-0.1858]),SFVec3f([1.127,-0.2093,1.04]),SFVec3f([0.8123,-0.4527,0.8311]),SFVec3f([-1.071,-0.3875,-0.2786]),SFVec3f([-0.8656,0.4725,0.2913]),SFVec3f([-1.531,0.131,-0.4935]),SFVec3f([-0.6347,-0.5265,0.1025]),SFVec3f([0.3305,-0.5079,0.6059]),SFVec3f([0.9072,0.3038,0.6607]),SFVec3f([0.2821,0.6036,0.4543]),SFVec3f([-0.8055,-0.7341,-0.6018]),SFVec3f([1.538,-0.196,0.7028]),SFVec3f([1.179,-0.6703,0.471]),SFVec3f([-0.9784,-0.5205,-0.7082]),SFVec3f([-0.7686,0.7606,-0.1254]),SFVec3f([-1.439,0.2188,-0.9066]),SFVec3f([-0.4776,-0.7606,-0.3045]),SFVec3f([0.6264,-0.7495,0.2298]),SFVec3f([0.4184,0.4603,0.0509]),SFVec3f([-0.5401,0.5849,-0.4428]),SFVec3f([-1.071,0.2019,-1.042]),SFVec3f([-0.7894,-0.2743,-0.8837]),SFVec3f([-0.6127,-0.4156,-0.7848]),SFVec3f([-0.3441,-0.4361,-0.5345]),SFVec3f([0.763,-0.4066,-0.0392]),SFVec3f([1.24,-0.3287,0.1376]),SFVec3f([1.414,-0.1566,0.1789]),SFVec3f([0.9737,0.2094,0.2088]),SFVec3f([-0.2912,-0.0892,0.5676])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.3217,0.8278]),SFVec2f([0.3482,0.8386]),SFVec2f([0.3916,0.7984]),SFVec2f([0.3206,0.8292]),SFVec2f([0.3482,0.8386]),SFVec2f([0.3916,0.7984]),SFVec2f([0.2977,0.8092]),SFVec2f([0.309,0.8013]),SFVec2f([0.3985,0.8044]),SFVec2f([0.3868,0.8428]),SFVec2f([0.4182,0.8265]),SFVec2f([0.3778,0.7978]),SFVec2f([0.3319,0.7987]),SFVec2f([0.3868,0.8428]),SFVec2f([0.3482,0.8386]),SFVec2f([0.3206,0.8292]),SFVec2f([0.3319,0.7987]),SFVec2f([0.3778,0.7978]),SFVec2f([0.3916,0.7984]),SFVec2f([0.309,0.8013]),SFVec2f([0.3985,0.8029]),SFVec2f([0.2977,0.8092]),SFVec2f([0.4182,0.8263]),SFVec2f([0.3482,0.8386]),SFVec2f([0.3868,0.8428]),SFVec2f([0.4182,0.8265]),SFVec2f([0.3985,0.8044]),SFVec2f([0.3916,0.7984]),SFVec2f([0.3778,0.7978]),SFVec2f([0.3319,0.7987]),SFVec2f([0.309,0.8013]),SFVec2f([0.2977,0.8092]),SFVec2f([0.3206,0.8292]),SFVec2f([0.2978,0.8092]),SFVec2f([0.309,0.8013]),SFVec2f([0.3985,0.8044]),SFVec2f([0.3868,0.8428]),SFVec2f([0.4182,0.8265]),SFVec2f([0.3778,0.7978]),SFVec2f([0.3319,0.7986]),SFVec2f([0.3567,0.819])])))))])]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('l_eyebrow_joint'),
                                                                                                                              DEF_ : SFString('hanim_l_eyebrow_joint'),
                                                                                                                              center_ : SFVec3f([SFDouble(0.9666), SFDouble(62.84), SFDouble(4.753)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('l_eyebrow'),
                                                                                                                                  DEF_ : SFString('hanim_l_eyebrow'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(0.9666), SFDouble(62.84), SFDouble(4.753)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(2), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(7), SFInt32(21), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(21), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(21), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(21), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.3218,-0.2298,0.7043]),SFVec3f([1.083,0.5974,0.3796]),SFVec3f([1.096,0.4225,0.3238]),SFVec3f([2.278,0.6308,-0.5919]),SFVec3f([2.889,0.6602,-1.322]),SFVec3f([0.1489,0.2892,0.6667]),SFVec3f([2.301,0.7666,-0.6065]),SFVec3f([1.117,0.2554,0.2024]),SFVec3f([2.208,0.4503,-0.6419]),SFVec3f([-0.2543,-0.2957,0.5866]),SFVec3f([2.872,0.5692,-1.343]),SFVec3f([-0.2774,-0.216,0.4476]),SFVec3f([1.079,0.5765,0.1724]),SFVec3f([2.807,0.6568,-1.386]),SFVec3f([0.1761,0.2697,0.4332]),SFVec3f([2.269,0.7395,-0.7309]),SFVec3f([1.111,0.2424,0.0098]),SFVec3f([2.17,0.434,-0.7637]),SFVec3f([-0.2034,-0.285,0.3399]),SFVec3f([2.78,0.5442,-1.406]),SFVec3f([0.2769,0.1224,0.5591]),SFVec3f([0.3788,-0.0007,0.4194]),SFVec3f([0.3389,-0.0414,0.2053])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.344,0.8611]),SFVec2f([0.3991,0.8726]),SFVec2f([0.2757,0.8301]),SFVec2f([0.4299,0.8749]),SFVec2f([0.3424,0.8703]),SFVec2f([0.297,0.8558]),SFVec2f([0.4,0.8788]),SFVec2f([0.3445,0.8554]),SFVec2f([0.397,0.8649]),SFVec2f([0.2794,0.8281]),SFVec2f([0.4294,0.8703]),SFVec2f([0.3456,0.8724]),SFVec2f([0.3008,0.857]),SFVec2f([0.3469,0.8565]),SFVec2f([0.2795,0.829]),SFVec2f([0.4293,0.8745]),SFVec2f([0.3996,0.8793]),SFVec2f([0.3963,0.8659]),SFVec2f([0.2847,0.831]),SFVec2f([0.4284,0.8697]),SFVec2f([0.3046,0.8466]),SFVec2f([0.3082,0.8407]),SFVec2f([0.3105,0.8417])])))))])]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('r_eyebrow_joint'),
                                                                                                                              DEF_ : SFString('hanim_r_eyebrow_joint'),
                                                                                                                              center_ : SFVec3f([SFDouble(-0.9666), SFDouble(62.84), SFDouble(4.753)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('r_eyebrow'),
                                                                                                                                  DEF_ : SFString('hanim_r_eyebrow'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(-0.9666), SFDouble(62.84), SFDouble(4.753)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(2), SFInt32(7), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(7), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(20), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(21), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(7), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(10), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(20), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(21), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0.3218,-0.2298,0.7043]),SFVec3f([-1.083,0.5974,0.3796]),SFVec3f([-1.096,0.4225,0.3238]),SFVec3f([-2.278,0.6308,-0.5919]),SFVec3f([-2.889,0.6602,-1.322]),SFVec3f([-0.1489,0.2892,0.6667]),SFVec3f([-2.301,0.7666,-0.6065]),SFVec3f([-1.117,0.2554,0.2024]),SFVec3f([-2.208,0.4503,-0.6419]),SFVec3f([0.2543,-0.2957,0.5866]),SFVec3f([-2.872,0.5692,-1.343]),SFVec3f([0.2774,-0.216,0.4476]),SFVec3f([-1.079,0.5765,0.1724]),SFVec3f([-2.807,0.6568,-1.386]),SFVec3f([-0.1761,0.2697,0.4332]),SFVec3f([-2.269,0.7395,-0.7309]),SFVec3f([-1.111,0.2424,0.0098]),SFVec3f([-2.17,0.434,-0.7637]),SFVec3f([0.2034,-0.285,0.3399]),SFVec3f([-2.78,0.5442,-1.406]),SFVec3f([-0.2769,0.1224,0.5591]),SFVec3f([-0.3788,-0.0007,0.4194]),SFVec3f([-0.3389,-0.0414,0.2053])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.344,0.8611]),SFVec2f([0.3991,0.8726]),SFVec2f([0.2757,0.8301]),SFVec2f([0.4299,0.8749]),SFVec2f([0.3424,0.8703]),SFVec2f([0.297,0.8558]),SFVec2f([0.4,0.8788]),SFVec2f([0.3445,0.8554]),SFVec2f([0.397,0.8649]),SFVec2f([0.2794,0.8281]),SFVec2f([0.4294,0.8703]),SFVec2f([0.3456,0.8724]),SFVec2f([0.3008,0.857]),SFVec2f([0.3469,0.8565]),SFVec2f([0.2795,0.829]),SFVec2f([0.4293,0.8745]),SFVec2f([0.3996,0.8793]),SFVec2f([0.3963,0.8659]),SFVec2f([0.2847,0.831]),SFVec2f([0.4284,0.8697]),SFVec2f([0.3046,0.8466]),SFVec2f([0.3082,0.8407]),SFVec2f([0.3105,0.8417])])))))])]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('temporomandibular'),
                                                                                                                              DEF_ : SFString('hanim_temporomandibular'),
                                                                                                                              center_ : SFVec3f([SFDouble(0), SFDouble(58.349998), SFDouble(0.6835)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('jaw'),
                                                                                                                                  DEF_ : SFString('hanim_jaw'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(0), SFDouble(58.349998), SFDouble(0.6835)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(13), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(0), SFInt32(17), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(11), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(16), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(11), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(11), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(5), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(2), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(22), SFInt32(2), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(2), SFInt32(22), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(0), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(2), SFInt32(-1), SFInt32(26), SFInt32(2), SFInt32(2), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(26), SFInt32(24), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(38), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(40), SFInt32(-1), SFInt32(2), SFInt32(2), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(2), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0,-1.317,2.914]),SFVec3f([1.252,-0.7221,2.383]),SFVec3f([1.083,-0.2249,3.164]),SFVec3f([0.2244,0.5712,4.007]),SFVec3f([1.184,0.4815,3.532]),SFVec3f([0.2244,1.038,1.387]),SFVec3f([1.073,1.14,1.338]),SFVec3f([0.2244,0.6336,3.483]),SFVec3f([1.09,0.6458,3.144]),SFVec3f([1.93,0.1375,0.7069]),SFVec3f([1.991,0.7184,0.9789]),SFVec3f([-1.083,-0.2249,3.164]),SFVec3f([0,-0.2295,3.585]),SFVec3f([0,0.1459,4.012]),SFVec3f([-0.2244,0.5712,4.007]),SFVec3f([0,0.5712,4.007]),SFVec3f([-1.184,0.4815,3.532]),SFVec3f([-1.252,-0.7221,2.383]),SFVec3f([0,-0.2922,0.9103]),SFVec3f([-1.93,0.1375,0.7069]),SFVec3f([-1.991,0.7184,0.9789]),SFVec3f([-1.073,1.14,1.338]),SFVec3f([-1.09,0.6458,3.144]),SFVec3f([-0.2244,0.6336,3.483]),SFVec3f([0,0.6336,3.483]),SFVec3f([-0.2244,1.038,1.387]),SFVec3f([0,0.9359,1.424])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.2448,0.6067]),SFVec2f([0.3051,0.6166]),SFVec2f([0.2959,0.6259]),SFVec2f([0.2442,0.6234]),SFVec2f([0.2438,0.6465]),SFVec2f([0.2546,0.6556]),SFVec2f([0.2439,0.6556]),SFVec2f([0.3007,0.651]),SFVec2f([0.3051,0.6166]),SFVec2f([0.3007,0.651]),SFVec2f([0.6104,0.6278]),SFVec2f([0.6104,0.661]),SFVec2f([0.6021,0.661]),SFVec2f([0.2546,0.6556]),SFVec2f([0.2439,0.6556]),SFVec2f([0.3007,0.651]),SFVec2f([0.3007,0.651]),SFVec2f([0.6021,0.6278]),SFVec2f([0.6425,0.6334]),SFVec2f([0.6294,0.6619]),SFVec2f([0.3051,0.6166]),SFVec2f([0.3051,0.6166]),SFVec2f([0.2442,0.6234]),SFVec2f([0.2438,0.6465]),SFVec2f([0.2546,0.6556]),SFVec2f([0.2439,0.6556]),SFVec2f([0.3007,0.651]),SFVec2f([0.3051,0.6166]),SFVec2f([0.3051,0.6166]),SFVec2f([0.3007,0.651]),SFVec2f([0.3007,0.651]),SFVec2f([0.2546,0.6556]),SFVec2f([0.2439,0.6556]),SFVec2f([0.3007,0.651]),SFVec2f([0.6104,0.6278]),SFVec2f([0.6104,0.661]),SFVec2f([0.6021,0.661]),SFVec2f([0.6021,0.6278]),SFVec2f([0.6425,0.6334]),SFVec2f([0.6294,0.6619]),SFVec2f([0.3051,0.6166]),SFVec2f([0.3051,0.6166])])))))])])])])])])])])])]),

                                                                                            HAnimJoint(
                                                                                              name_ : SFString('l_sternoclavicular'),
                                                                                              DEF_ : SFString('hanim_l_sternoclavicular'),
                                                                                              center_ : SFVec3f([SFDouble(1.71), SFDouble(53.720001), SFDouble(-0.6127)]),
                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                              children_ : [
                                                                                                HAnimSegment(
                                                                                                  name_ : SFString('l_clavicle'),
                                                                                                  DEF_ : SFString('hanim_l_clavicle'),
                                                                                                  children_ : [
                                                                                                    Transform(
                                                                                                      translation_ : SFVec3f([SFDouble(1.71), SFDouble(53.720001), SFDouble(-0.6127)]),
                                                                                                      child_ : 
                                                                                                        Shape(
                                                                                                          appearance_ : 
                                                                                                            Appearance(
                                                                                                              material_ : 
                                                                                                                Material(
                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                              texture_ : 
                                                                                                                ImageTexture(
                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                          geometry_ : 
                                                                                                            IndexedFaceSet(
                                                                                                              coordIndex_ : MFInt32([SFInt32(9), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(5), SFInt32(-1)]),
                                                                                                              creaseAngle_ : 3.14159,
                                                                                                              texCoordIndex_ : MFInt32([SFInt32(9), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(5), SFInt32(-1)]),
                                                                                                              coord_ : 
                                                                                                                Coordinate(
                                                                                                                  point_ : MFVec3f([SFVec3f([4.99,0.104,-0.8644]),SFVec3f([5.073,0.4993,0.047]),SFVec3f([4.706,0.1695,1.198]),SFVec3f([4.631,-1.819,1.104]),SFVec3f([4.586,-1.648,-0.1248]),SFVec3f([3.376,0.3884,1.771]),SFVec3f([3.891,0.989,-0.0537]),SFVec3f([4.193,-2.49,-0.5713]),SFVec3f([4.388,-2.49,1.429]),SFVec3f([3.761,0.3238,-1.692]),SFVec3f([-0.1237,0.6312,-0.1883]),SFVec3f([-0.1237,0.3007,-0.9426]),SFVec3f([-0.1237,-1.418,-0.2577]),SFVec3f([-0.1237,-1.392,0.6264]),SFVec3f([-0.1237,0.2586,0.8179])])),
                                                                                                              texCoord_ : 
                                                                                                                TextureCoordinate(
                                                                                                                  point_ : MFVec2f([SFVec2f([0.1911,0.4797]),SFVec2f([0.171,0.4832]),SFVec2f([0.1497,0.4806]),SFVec2f([0.1519,0.4334]),SFVec2f([0.1831,0.4416]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1708,0.4854]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1963,0.4863]),SFVec2f([0.19,0.5091]),SFVec2f([0.1847,0.499]),SFVec2f([0.172,0.4382]),SFVec2f([0.1568,0.4457]),SFVec2f([0.1409,0.4926])])))))]),

                                                                                                HAnimJoint(
                                                                                                  name_ : SFString('l_acromioclavicular'),
                                                                                                  DEF_ : SFString('hanim_l_acromioclavicular'),
                                                                                                  center_ : SFVec3f([SFDouble(5.464), SFDouble(52.970001), SFDouble(-0.5732)]),
                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                  children_ : [
                                                                                                    HAnimSegment(
                                                                                                      name_ : SFString('l_scapula'),
                                                                                                      DEF_ : SFString('hanim_l_scapula'),
                                                                                                      children_ : [
                                                                                                        Transform(
                                                                                                          translation_ : SFVec3f([SFDouble(5.464), SFDouble(52.970001), SFDouble(-0.5732)]),
                                                                                                          child_ : 
                                                                                                            Shape(
                                                                                                              appearance_ : 
                                                                                                                Appearance(
                                                                                                                  material_ : 
                                                                                                                    Material(
                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                  texture_ : 
                                                                                                                    ImageTexture(
                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                              geometry_ : 
                                                                                                                IndexedFaceSet(
                                                                                                                  coordIndex_ : MFInt32([SFInt32(5), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(15), SFInt32(-1)]),
                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(13), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(14), SFInt32(19), SFInt32(-1)]),
                                                                                                                  coord_ : 
                                                                                                                    Coordinate(
                                                                                                                      point_ : MFVec3f([SFVec3f([1.935,1.466,-0.0932]),SFVec3f([1.515,0.6492,-1.732]),SFVec3f([1.534,0.7105,1.619]),SFVec3f([-0.3782,1.139,1.732]),SFVec3f([0.1374,1.74,-0.0932]),SFVec3f([0.0076,1.074,-1.731]),SFVec3f([0.8341,-1.572,1.39]),SFVec3f([0.4391,-1.74,-0.6109]),SFVec3f([0.8275,-1.58,-0.6098]),SFVec3f([0.6342,-1.74,1.389]),SFVec3f([-1.237,1.407,-0.0712]),SFVec3f([-1.547,0.8515,-1.142]),SFVec3f([-0.7525,-1.603,-0.4744]),SFVec3f([-0.7511,-1.595,1.16]),SFVec3f([-1.51,1.034,1.296]),SFVec3f([-1.59,-0.0185,0.1351])])),
                                                                                                                  texCoord_ : 
                                                                                                                    TextureCoordinate(
                                                                                                                      point_ : MFVec2f([SFVec2f([0.1715,0.4655]),SFVec2f([0.1797,0.4646]),SFVec2f([0.1569,0.4642]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1708,0.4854]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1544,0.4288]),SFVec2f([0.1782,0.4286]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1544,0.4288]),SFVec2f([0.1782,0.4286]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1703,0.4865]),SFVec2f([0.1895,0.487]),SFVec2f([0.1761,0.4271]),SFVec2f([0.1552,0.4287]),SFVec2f([0.1491,0.4835]),SFVec2f([0.1671,0.4618])])))))]),

                                                                                                    HAnimJoint(
                                                                                                      name_ : SFString('l_shoulder'),
                                                                                                      DEF_ : SFString('hanim_l_shoulder'),
                                                                                                      center_ : SFVec3f([SFDouble(7.336), SFDouble(52.380001), SFDouble(-0.1452)]),
                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                      children_ : [
                                                                                                        HAnimSegment(
                                                                                                          name_ : SFString('l_upperarm'),
                                                                                                          DEF_ : SFString('hanim_l_upperarm'),
                                                                                                          children_ : [
                                                                                                            Transform(
                                                                                                              translation_ : SFVec3f([SFDouble(7.336), SFDouble(52.380001), SFDouble(-0.1452)]),
                                                                                                              child_ : 
                                                                                                                Shape(
                                                                                                                  appearance_ : 
                                                                                                                    Appearance(
                                                                                                                      material_ : 
                                                                                                                        Material(
                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                      texture_ : 
                                                                                                                        ImageTexture(
                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                  geometry_ : 
                                                                                                                    IndexedFaceSet(
                                                                                                                      coordIndex_ : MFInt32([SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(35), SFInt32(38), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(20), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(43), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(29), SFInt32(-1), SFInt32(25), SFInt32(29), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(40), SFInt32(25), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(34), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(30), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(39), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(35), SFInt32(-1)]),
                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(55), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(25), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(27), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(14), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(49), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(19), SFInt32(24), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(38), SFInt32(-1), SFInt32(40), SFInt32(50), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(59), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(60), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(61), SFInt32(42), SFInt32(-1), SFInt32(39), SFInt32(42), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(56), SFInt32(39), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(43), SFInt32(-1), SFInt32(45), SFInt32(52), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(40), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(47), SFInt32(-1), SFInt32(44), SFInt32(47), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(39), SFInt32(44), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(54), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(45), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(37), SFInt32(-1), SFInt32(33), SFInt32(37), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(44), SFInt32(33), SFInt32(-1)]),
                                                                                                                      coord_ : 
                                                                                                                        Coordinate(
                                                                                                                          point_ : MFVec3f([SFVec3f([1.164,1.767,-1.68]),SFVec3f([2.32,1.756,0.0337]),SFVec3f([1.047,1.768,1.663]),SFVec3f([-0.895,1.785,0.9556]),SFVec3f([-0.8229,1.784,-1.11]),SFVec3f([1.382,0.4997,-2.31]),SFVec3f([2.978,0.4855,0.057]),SFVec3f([1.221,0.5011,2.307]),SFVec3f([-1.462,0.525,1.33]),SFVec3f([-1.362,0.5241,-1.523]),SFVec3f([1.36,-2.014,-2.31]),SFVec3f([2.956,-2.028,0.057]),SFVec3f([1.198,-2.012,2.307]),SFVec3f([-1.484,-1.988,1.33]),SFVec3f([-1.384,-1.989,-1.523]),SFVec3f([1.398,-3.089,-2.442]),SFVec3f([3.087,-3.104,0.0619]),SFVec3f([1.228,-3.087,2.442]),SFVec3f([-1.61,-3.062,1.409]),SFVec3f([-1.505,-3.063,-1.61]),SFVec3f([0.8845,-1.238,-1.939]),SFVec3f([2.105,-1.248,-0.4543]),SFVec3f([1.473,-1.243,1.629]),SFVec3f([-0.1375,-1.229,1.432]),SFVec3f([-0.5011,-1.225,-0.7734]),SFVec3f([0.9027,-7.045,-1.569]),SFVec3f([2.17,-7.056,-0.378]),SFVec3f([1.514,-7.051,1.293]),SFVec3f([-0.1588,-7.036,1.135]),SFVec3f([-0.5365,-7.032,-0.634]),SFVec3f([0.9066,-11.1,-1.511]),SFVec3f([2.127,-11.11,-0.3651]),SFVec3f([1.495,-11.1,1.243]),SFVec3f([-0.1154,-11.09,1.091]),SFVec3f([-0.4791,-11.08,-0.6115]),SFVec3f([0.852,-11.65,-0.8985]),SFVec3f([1.567,-11.65,-0.2267]),SFVec3f([1.197,-11.65,0.716]),SFVec3f([0.2531,-11.64,0.6268]),SFVec3f([0.0399,-11.64,-0.3711]),SFVec3f([0.8845,-1.238,-1.939]),SFVec3f([2.105,-1.248,-0.4543]),SFVec3f([1.473,-1.243,1.629]),SFVec3f([-0.1375,-1.229,1.432]),SFVec3f([-0.5011,-1.225,-0.7734])])),
                                                                                                                      texCoord_ : 
                                                                                                                        TextureCoordinate(
                                                                                                                          point_ : MFVec2f([SFVec2f([0.2986,0.2114]),SFVec2f([0.2726,0.2114]),SFVec2f([0.3201,0.2114]),SFVec2f([0.3415,0.2114]),SFVec2f([0.2466,0.2114]),SFVec2f([0.2979,0.2417]),SFVec2f([0.2726,0.2417]),SFVec2f([0.3197,0.2417]),SFVec2f([0.3418,0.2417]),SFVec2f([0.2473,0.2417]),SFVec2f([0.2979,0.3018]),SFVec2f([0.2726,0.3018]),SFVec2f([0.3197,0.3018]),SFVec2f([0.3418,0.3018]),SFVec2f([0.2473,0.3018]),SFVec2f([0.2978,0.3276]),SFVec2f([0.2726,0.3276]),SFVec2f([0.3197,0.3276]),SFVec2f([0.3419,0.3276]),SFVec2f([0.2474,0.3276]),SFVec2f([0.2932,0.2834]),SFVec2f([0.2689,0.2834]),SFVec2f([0.316,0.2834]),SFVec2f([0.3322,0.2834]),SFVec2f([0.245,0.2834]),SFVec2f([0.2251,0.2114]),SFVec2f([0.2255,0.2417]),SFVec2f([0.2255,0.2417]),SFVec2f([0.2255,0.3018]),SFVec2f([0.2255,0.3018]),SFVec2f([0.2255,0.3276]),SFVec2f([0.2255,0.3276]),SFVec2f([0.2159,0.2834]),SFVec2f([0.9467,0.4943]),SFVec2f([0.9572,0.4943]),SFVec2f([0.9099,0.4943]),SFVec2f([0.9193,0.4943]),SFVec2f([0.9332,0.4943]),SFVec2f([0.9567,0.4691]),SFVec2f([0.9455,0.4691]),SFVec2f([0.9105,0.4691]),SFVec2f([0.9205,0.4691]),SFVec2f([0.9332,0.4691]),SFVec2f([0.9567,0.4913]),SFVec2f([0.9458,0.4913]),SFVec2f([0.9102,0.4913]),SFVec2f([0.9203,0.4913]),SFVec2f([0.9334,0.4913]),SFVec2f([0.8898,0.4943]),SFVec2f([0.9003,0.4943]),SFVec2f([0.8997,0.4691]),SFVec2f([0.8997,0.4691]),SFVec2f([0.8998,0.4913]),SFVec2f([0.8998,0.4913]),SFVec2f([0.9003,0.4943]),SFVec2f([0.3481,0.2114]),SFVec2f([0.9448,0.4374]),SFVec2f([0.9561,0.4374]),SFVec2f([0.8991,0.4374]),SFVec2f([0.9117,0.4374]),SFVec2f([0.9198,0.4374]),SFVec2f([0.9341,0.4374])])))))]),

                                                                                                        HAnimJoint(
                                                                                                          name_ : SFString('l_elbow'),
                                                                                                          DEF_ : SFString('hanim_l_elbow'),
                                                                                                          center_ : SFVec3f([SFDouble(8.093), SFDouble(41.279999), SFDouble(-0.2502)]),
                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                          children_ : [
                                                                                                            HAnimSegment(
                                                                                                              name_ : SFString('l_forearm'),
                                                                                                              DEF_ : SFString('hanim_l_forearm'),
                                                                                                              children_ : [
                                                                                                                Transform(
                                                                                                                  translation_ : SFVec3f([SFDouble(8.093), SFDouble(41.279999), SFDouble(-0.2502)]),
                                                                                                                  child_ : 
                                                                                                                    Shape(
                                                                                                                      appearance_ : 
                                                                                                                        Appearance(
                                                                                                                          material_ : 
                                                                                                                            Material(
                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                          texture_ : 
                                                                                                                            ImageTexture(
                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                      geometry_ : 
                                                                                                                        IndexedFaceSet(
                                                                                                                          coordIndex_ : MFInt32([SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(20), SFInt32(-1)]),
                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(14), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(21), SFInt32(-1)]),
                                                                                                                          coord_ : 
                                                                                                                            Coordinate(
                                                                                                                              point_ : MFVec3f([SFVec3f([0.215,0.3047,-1.152]),SFVec3f([1.155,0.2966,-0.2588]),SFVec3f([0.6199,0.3013,1.04]),SFVec3f([-0.6505,0.3122,0.9491]),SFVec3f([-0.9008,0.3143,-0.4054]),SFVec3f([0.1442,-0.8448,-1.625]),SFVec3f([1.472,-0.8561,-0.4271]),SFVec3f([0.7164,-0.8496,1.625]),SFVec3f([-1.079,-0.8342,1.482]),SFVec3f([-1.433,-0.8312,-0.6588]),SFVec3f([0.1328,-3.5,-1.607]),SFVec3f([1.551,-3.513,-0.4225]),SFVec3f([0.781,-2.925,1.61]),SFVec3f([-1.136,-2.909,1.468]),SFVec3f([-1.551,-3.486,-0.6519]),SFVec3f([0.0592,-8.713,-1.437]),SFVec3f([1.093,-8.722,-0.1279]),SFVec3f([0.5047,-8.716,1.51]),SFVec3f([-0.8932,-8.704,1.377]),SFVec3f([-1.169,-8.702,-0.3428]),SFVec3f([0.0092,-9.336,-0.8855]),SFVec3f([0.7154,-9.342,0.0084]),SFVec3f([0.3135,-9.339,1.043]),SFVec3f([-0.6412,-9.331,0.9519]),SFVec3f([-0.8292,-9.329,-0.1383])])),
                                                                                                                          texCoord_ : 
                                                                                                                            TextureCoordinate(
                                                                                                                              point_ : MFVec2f([SFVec2f([0.8857,0.572]),SFVec2f([0.9344,0.572]),SFVec2f([0.9377,0.5719]),SFVec2f([0.8909,0.5718]),SFVec2f([0.8588,0.5719]),SFVec2f([0.8849,0.5578]),SFVec2f([0.8418,0.558]),SFVec2f([0.9588,0.5579]),SFVec2f([0.9536,0.5581]),SFVec2f([0.8765,0.5581]),SFVec2f([0.885,0.5257]),SFVec2f([0.8424,0.5258]),SFVec2f([0.9582,0.5328]),SFVec2f([0.9531,0.533]),SFVec2f([0.8768,0.526]),SFVec2f([0.8957,0.4625]),SFVec2f([0.8485,0.4627]),SFVec2f([0.9546,0.4626]),SFVec2f([0.9498,0.4628]),SFVec2f([0.8879,0.4628]),SFVec2f([0.8953,0.4552]),SFVec2f([0.8684,0.4551]),SFVec2f([0.9006,0.455]),SFVec2f([0.9378,0.4551]),SFVec2f([0.9345,0.4552])])))))]),

                                                                                                            HAnimJoint(
                                                                                                              name_ : SFString('l_radiocarpal'),
                                                                                                              DEF_ : SFString('hanim_l_radiocarpal'),
                                                                                                              center_ : SFVec3f([SFDouble(8.086), SFDouble(32.189999), SFDouble(-0.2233)]),
                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                              children_ : [
                                                                                                                HAnimSegment(
                                                                                                                  name_ : SFString('l_carpal'),
                                                                                                                  DEF_ : SFString('hanim_l_carpal'),
                                                                                                                  children_ : [
                                                                                                                    Transform(
                                                                                                                      translation_ : SFVec3f([SFDouble(8.086), SFDouble(32.189999), SFDouble(-0.2233)]),
                                                                                                                      child_ : 
                                                                                                                        Shape(
                                                                                                                          appearance_ : 
                                                                                                                            Appearance(
                                                                                                                              material_ : 
                                                                                                                                Material(
                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                              texture_ : 
                                                                                                                                ImageTexture(
                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                          geometry_ : 
                                                                                                                            IndexedFaceSet(
                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(22), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(22), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(22), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(22), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(22), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(10), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(13), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(21), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(8), SFInt32(21), SFInt32(-1), SFInt32(8), SFInt32(33), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(23), SFInt32(34), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(34), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(34), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(34), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(34), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(34), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(23), SFInt32(-1)]),
                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(22), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(22), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(22), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(37), SFInt32(39), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(39), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(39), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(39), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(39), SFInt32(35), SFInt32(-1), SFInt32(11), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(36), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(16), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(31), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(38), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(33), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(24), SFInt32(34), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(34), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(34), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(42), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(42), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(42), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(32), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(24), SFInt32(-1)]),
                                                                                                                              coord_ : 
                                                                                                                                Coordinate(
                                                                                                                                  point_ : MFVec3f([SFVec3f([0.0718,0.1105,-1.01]),SFVec3f([0.5108,0.0965,-0.79]),SFVec3f([0.6808,0.1049,-0.212]),SFVec3f([0.5475,0.1209,0.7178]),SFVec3f([0.2978,0.1182,1.102]),SFVec3f([-0.5959,0.1061,0.734]),SFVec3f([-0.6714,0.0918,-0.2167]),SFVec3f([-0.4399,0.0876,-0.7804]),SFVec3f([0.3749,-0.7899,1.333]),SFVec3f([-0.4677,-0.8492,-0.9914]),SFVec3f([0.6527,-0.6995,0.3258]),SFVec3f([0.0476,-0.832,-1.286]),SFVec3f([0.5788,-0.8489,-0.9909]),SFVec3f([0.6835,-0.6804,-0.3282]),SFVec3f([-0.6279,-0.6805,-0.3268]),SFVec3f([-0.6351,-0.6994,0.3349]),SFVec3f([0.5385,-0.8096,0.8587]),SFVec3f([0.6721,0.1026,0.2306]),SFVec3f([-0.6716,0.0989,0.2384]),SFVec3f([-0.5705,-0.8097,0.8599]),SFVec3f([-0.3,0.1135,1.081]),SFVec3f([-0.3211,-0.7905,1.299]),SFVec3f([0.0594,0.3233,-0.0086]),SFVec3f([0.4051,-1.1,0.8323]),SFVec3f([0.5152,-0.9892,0.322]),SFVec3f([0.5452,-0.9698,-0.3815]),SFVec3f([0.4503,-1.137,-1.027]),SFVec3f([0.0399,-1.141,-1.188]),SFVec3f([-0.3455,-1.137,-1.033]),SFVec3f([-0.4906,-0.9699,-0.3741]),SFVec3f([-0.4977,-0.989,0.341]),SFVec3f([-0.4908,-1.1,0.8359]),SFVec3f([-0.2387,-1.082,1.197]),SFVec3f([0.1823,-1.082,1.223]),SFVec3f([-0.0391,-1.269,-0.0735])])),
                                                                                                                              texCoord_ : 
                                                                                                                                TextureCoordinate(
                                                                                                                                  point_ : MFVec2f([SFVec2f([0.7729,0.0334]),SFVec2f([0.7695,0.0151]),SFVec2f([0.7598,0.0161]),SFVec2f([0.7624,0.0345]),SFVec2f([0.791,0.0281]),SFVec2f([0.7896,0.0131]),SFVec2f([0.8111,0.0113]),SFVec2f([0.813,0.0266]),SFVec2f([0.8476,0.0256]),SFVec2f([0.8461,0.0079]),SFVec2f([0.8312,0.0091]),SFVec2f([0.8327,0.0273]),SFVec2f([0.9162,0.2899]),SFVec2f([0.8453,0.0081]),SFVec2f([0.8466,0.0257]),SFVec2f([0.9122,0.2724]),SFVec2f([0.9531,0.2644]),SFVec2f([0.9573,0.2786]),SFVec2f([0.936,0.2844]),SFVec2f([0.9315,0.2698]),SFVec2f([0.9706,0.2558]),SFVec2f([0.9766,0.2733]),SFVec2f([0.8032,0.0047]),SFVec2f([0.8134,0.033]),SFVec2f([0.8325,0.0338]),SFVec2f([0.792,0.0345]),SFVec2f([0.7756,0.0396]),SFVec2f([0.7675,0.0404]),SFVec2f([0.9666,0.2503]),SFVec2f([0.9509,0.2584]),SFVec2f([0.9297,0.2636]),SFVec2f([0.9113,0.266]),SFVec2f([0.8439,0.0324]),SFVec2f([0.8447,0.0323]),SFVec2f([0.8081,0.0397]),SFVec2f([0.986,0.2708]),SFVec2f([0.9803,0.2531]),SFVec2f([0.9032,0.2936]),SFVec2f([0.8989,0.2764]),SFVec2f([0.9452,0.2896]),SFVec2f([0.9743,0.2482]),SFVec2f([0.9004,0.2693]),SFVec2f([0.9343,0.2559])])))))]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('l_midcarpal_1'),
                                                                                                                  DEF_ : SFString('hanim_l_midcarpal_1'),
                                                                                                                  center_ : SFVec3f([SFDouble(8.057), SFDouble(31.379999), SFDouble(0.859)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('l_trapezium'),
                                                                                                                      DEF_ : SFString('hanim_l_trapezium'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(8.057), SFDouble(31.379999), SFDouble(0.859)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(6), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(1), SFInt32(-1), SFInt32(7), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(25), SFInt32(14), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(18), SFInt32(-1), SFInt32(21), SFInt32(12), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(7), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(18), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(19), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(1), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(7), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(20), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(21), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(11), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([0.7053,-0.7802,-0.0997]),SFVec3f([-0.6389,-0.7802,-0.0997]),SFVec3f([-0.3989,-0.4974,0.6093]),SFVec3f([0.4483,-0.4983,0.6785]),SFVec3f([-0.509,-0.6051,0.3711]),SFVec3f([0.4043,0.0139,0.2509]),SFVec3f([0.568,-0.0058,-0.2235]),SFVec3f([-0.5411,-0.0059,-0.2224]),SFVec3f([-0.2917,0.0133,0.2166]),SFVec3f([-0.4859,-0.9548,-0.0464]),SFVec3f([-0.5165,-0.9346,0.2403]),SFVec3f([-0.3483,-0.7384,0.5986]),SFVec3f([0.361,-0.6613,0.6657]),SFVec3f([0.567,-0.9676,-0.068]),SFVec3f([0.4266,0.2991,-0.277]),SFVec3f([0.207,0.313,0.1078]),SFVec3f([-0.2037,0.3127,0.0824]),SFVec3f([-0.4523,0.2971,-0.2735]),SFVec3f([0.5103,-0.0352,-0.2979]),SFVec3f([0.6419,-0.7776,-0.1796]),SFVec3f([0.5366,-0.9203,-0.1557]),SFVec3f([-0.4581,-0.908,-0.1342]),SFVec3f([-0.5765,-0.7738,-0.1806]),SFVec3f([-0.4825,-0.0296,-0.298]),SFVec3f([-0.4075,0.2265,-0.341]),SFVec3f([0.3881,0.2283,-0.3443])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.8327,0.0273]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8625,0.0344]),SFVec2f([0.8476,0.0256]),SFVec2f([0.8625,0.0359]),SFVec2f([0.8466,0.0257]),SFVec2f([0.9122,0.2724]),SFVec2f([0.904,0.2568]),SFVec2f([0.8948,0.2599]),SFVec2f([0.8401,0.0478]),SFVec2f([0.8395,0.0482]),SFVec2f([0.8319,0.0206]),SFVec2f([0.9141,0.2788]),SFVec2f([0.844,0.0192]),SFVec2f([0.8432,0.0193]),SFVec2f([0.8491,0.0466]),SFVec2f([0.8611,0.0409]),SFVec2f([0.8611,0.0397]),SFVec2f([0.8814,0.2691]),SFVec2f([0.8989,0.2764]),SFVec2f([0.9014,0.2535]),SFVec2f([0.9142,0.2789]),SFVec2f([0.9026,0.2823]),SFVec2f([0.9033,0.2821]),SFVec2f([0.8928,0.2563]),SFVec2f([0.8819,0.264]),SFVec2f([0.8327,0.0273]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8395,0.0482]),SFVec2f([0.8401,0.0478]),SFVec2f([0.904,0.2568]),SFVec2f([0.9122,0.2724]),SFVec2f([0.9141,0.2788]),SFVec2f([0.9142,0.2789])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('l_carpometacarpal_1'),
                                                                                                                      DEF_ : SFString('hanim_l_carpometacarpal_1'),
                                                                                                                      center_ : SFVec3f([SFDouble(8.022), SFDouble(30.780001), SFDouble(1.155)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('l_metacarpal_1'),
                                                                                                                          DEF_ : SFString('hanim_l_metacarpal_1'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(8.022), SFDouble(30.780001), SFDouble(1.155)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(25), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(10), SFInt32(8), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(27), SFInt32(4), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(28), SFInt32(4), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(21), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(10), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(8), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(30), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(4), SFInt32(27), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([-0.5751,-0.8119,0.3729]),SFVec3f([-0.302,-0.6141,0.6443]),SFVec3f([0.3814,-0.5011,0.7438]),SFVec3f([0.716,-0.9041,0.1581]),SFVec3f([-0.366,-1.245,-0.0839]),SFVec3f([0.8186,-0.9968,-0.0288]),SFVec3f([0.7398,-0.1792,-0.3959]),SFVec3f([-0.6043,-0.1792,-0.3959]),SFVec3f([-0.3644,0.1036,0.3132]),SFVec3f([0.4829,0.1027,0.3823]),SFVec3f([-0.4744,-0.0041,0.0749]),SFVec3f([0.3732,-1.179,0.3002]),SFVec3f([0.3531,-1.244,0.2233]),SFVec3f([-0.2445,-1.314,0.124]),SFVec3f([-0.452,-1.179,0.3706]),SFVec3f([-0.2104,-0.955,0.6578]),SFVec3f([0.2066,-0.8325,0.7941]),SFVec3f([-0.4224,-0.2513,-0.5443]),SFVec3f([-0.2417,-1.271,-0.2781]),SFVec3f([0.6108,-1.052,-0.2554]),SFVec3f([0.5836,-0.2515,-0.5446]),SFVec3f([-0.3922,0.0827,-0.0195]),SFVec3f([-0.505,-0.0166,-0.2776]),SFVec3f([0.5161,-0.0391,-0.2686]),SFVec3f([0.3757,0.1717,0.2582]),SFVec3f([-0.1802,0.1719,0.215])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.8819,0.0483]),SFVec2f([0.8625,0.0359]),SFVec2f([0.8625,0.0344]),SFVec2f([0.8786,0.0507]),SFVec2f([0.8948,0.2599]),SFVec2f([0.867,0.0598]),SFVec2f([0.857,0.0621]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8533,0.0697]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8503,0.0646]),SFVec2f([0.8419,0.0407]),SFVec2f([0.8588,0.0334]),SFVec2f([0.8588,0.0347]),SFVec2f([0.8467,0.0405]),SFVec2f([0.8415,0.0402]),SFVec2f([0.8445,0.0658]),SFVec2f([0.8331,0.0451]),SFVec2f([0.8331,0.0451]),SFVec2f([0.8468,0.0705]),SFVec2f([0.8593,0.0711]),SFVec2f([0.8712,0.0644]),SFVec2f([0.8626,0.068]),SFVec2f([0.8607,0.0696]),SFVec2f([0.877,0.0609]),SFVec2f([0.8798,0.0581]),SFVec2f([0.8632,0.2548]),SFVec2f([0.8814,0.2691]),SFVec2f([0.8729,0.2464]),SFVec2f([0.8847,0.2342]),SFVec2f([0.904,0.2568]),SFVec2f([0.8853,0.2697]),SFVec2f([0.8962,0.2618]),SFVec2f([0.9014,0.2613]),SFVec2f([0.9088,0.2549]),SFVec2f([0.8909,0.2323])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('l_metacarpophalangeal_1'),
                                                                                                                          DEF_ : SFString('hanim_l_metacarpophalangeal_1'),
                                                                                                                          center_ : SFVec3f([SFDouble(8.046), SFDouble(29.9), SFDouble(1.59)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('l_carpal_proximal_phalanx_1'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_proximal_phalanx_1'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(8.046), SFDouble(29.9), SFDouble(1.59)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(5), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(19), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(11), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(7), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(26), SFInt32(21), SFInt32(-1), SFInt32(26), SFInt32(32), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(7), SFInt32(26), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(33), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(14), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(1), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(3), SFInt32(10), SFInt32(-1), SFInt32(33), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(36), SFInt32(33), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(6), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(21), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(26), SFInt32(21), SFInt32(-1), SFInt32(42), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(36), SFInt32(42), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([0.648,-0.1572,-0.1816]),SFVec3f([0.2215,-0.4696,-0.3727]),SFVec3f([0.7293,-0.3514,-0.3769]),SFVec3f([-0.5989,0.0674,-0.062]),SFVec3f([-0.3258,0.2652,0.2094]),SFVec3f([0.3575,0.3782,0.3089]),SFVec3f([0.6921,-0.0248,-0.2768]),SFVec3f([-0.3898,-0.3658,-0.5188]),SFVec3f([0.7948,-0.1175,-0.4637]),SFVec3f([-0.2134,-0.6161,0.8058]),SFVec3f([0.3101,-0.4028,0.7384]),SFVec3f([0.1954,-0.8397,0.9419]),SFVec3f([-0.1104,-0.9591,0.8926]),SFVec3f([-0.2493,-1.151,0.2193]),SFVec3f([-0.5111,-0.832,0.6281]),SFVec3f([-0.3686,-0.981,0.7131]),SFVec3f([-0.1898,-1.227,0.383]),SFVec3f([0.5399,-0.798,0.2786]),SFVec3f([0.4043,-1.127,0.5533]),SFVec3f([0.1346,-1.116,0.1902]),SFVec3f([0.1035,-1.254,0.4943]),SFVec3f([0.437,0.1054,-0.572]),SFVec3f([0.4429,0.1652,-0.5023]),SFVec3f([0.1619,0.4787,-0.0154]),SFVec3f([-0.2164,0.398,-0.0699]),SFVec3f([-0.3666,0.2424,-0.317]),SFVec3f([-0.2404,0.0654,-0.5934]),SFVec3f([-0.2919,-0.3931,-0.7578]),SFVec3f([0.1692,-0.5049,-0.6608]),SFVec3f([0.5909,-0.3962,-0.6566]),SFVec3f([0.6389,-0.2511,-0.7092]),SFVec3f([0.4111,-0.0844,-0.8017]),SFVec3f([-0.1733,-0.1282,-0.8504])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.8786,0.0507]),SFVec2f([0.857,0.0621]),SFVec2f([0.8601,0.0649]),SFVec2f([0.867,0.0598]),SFVec2f([0.8887,0.0786]),SFVec2f([0.8747,0.0865]),SFVec2f([0.8533,0.0697]),SFVec2f([0.876,0.0783]),SFVec2f([0.893,0.0688]),SFVec2f([0.8992,0.0702]),SFVec2f([0.8819,0.0483]),SFVec2f([0.8561,0.0728]),SFVec2f([0.8736,0.0851]),SFVec2f([0.8532,0.0697]),SFVec2f([0.8503,0.0646]),SFVec2f([0.8986,0.0785]),SFVec2f([0.897,0.0809]),SFVec2f([0.8914,0.0813]),SFVec2f([0.8802,0.0861]),SFVec2f([0.8841,0.0856]),SFVec2f([0.8821,0.0883]),SFVec2f([0.8487,0.0595]),SFVec2f([0.8509,0.0581]),SFVec2f([0.8683,0.0489]),SFVec2f([0.868,0.0507]),SFVec2f([0.8608,0.0544]),SFVec2f([0.8505,0.0603]),SFVec2f([0.8455,0.0706]),SFVec2f([0.8468,0.073]),SFVec2f([0.8455,0.0707]),SFVec2f([0.8437,0.0676]),SFVec2f([0.8416,0.0639]),SFVec2f([0.8422,0.0648]),SFVec2f([0.8729,0.2464]),SFVec2f([0.8482,0.2317]),SFVec2f([0.8612,0.2211]),SFVec2f([0.8847,0.2342]),SFVec2f([0.8433,0.2381]),SFVec2f([0.8632,0.2548]),SFVec2f([0.8814,0.2316]),SFVec2f([0.8625,0.2222]),SFVec2f([0.8799,0.2506]),SFVec2f([0.8891,0.243]),SFVec2f([0.8922,0.232]),SFVec2f([0.8964,0.2371])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('l_carpal_interphalangeal_1'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_interphalangeal_1'),
                                                                                                                              center_ : SFVec3f([SFDouble(8.118), SFDouble(29.07), SFDouble(2.207)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('l_carpal_distal_phalanx_1'),
                                                                                                                                  DEF_ : SFString('hanim_l_carpal_distal_phalanx_1'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(8.118), SFDouble(29.07), SFDouble(2.207)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(11), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(0), SFInt32(-1), SFInt32(32), SFInt32(1), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(2), SFInt32(32), SFInt32(-1), SFInt32(4), SFInt32(17), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(11), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(29), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(23), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(3), SFInt32(-1), SFInt32(24), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(6), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(6), SFInt32(-1), SFInt32(22), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(6), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(6), SFInt32(17), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(22), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(6), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(30), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(27), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(2), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(34), SFInt32(2), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(3), SFInt32(33), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(38), SFInt32(2), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(36), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(19), SFInt32(3), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(41), SFInt32(39), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(41), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(2), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(41), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(23), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(43), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(40), SFInt32(43), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(13), SFInt32(-1), SFInt32(1), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(13), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(4), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(32), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(31), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.3337,-0.7896,-0.0218]),SFVec3f([0.4001,-0.2756,-0.0935]),SFVec3f([0.007,-0.7974,-0.0081]),SFVec3f([0.1798,0.0821,0.3404]),SFVec3f([0.0929,-0.4091,0.5794]),SFVec3f([-0.2993,-0.3965,0.5693]),SFVec3f([0.1153,-0.9089,0.6039]),SFVec3f([0.0672,-0.8379,0.6779]),SFVec3f([-0.01,-0.7103,0.7249]),SFVec3f([-0.2924,-0.7333,0.742]),SFVec3f([-0.4924,-0.785,0.5516]),SFVec3f([-0.5321,-0.5261,0.3643]),SFVec3f([-0.3318,-1.035,0.1941]),SFVec3f([-0.4237,-0.9358,0.5457]),SFVec3f([-0.334,-1.054,0.3651]),SFVec3f([-0.0387,-1.061,0.2343]),SFVec3f([0.1633,-0.9486,0.3874]),SFVec3f([0.2892,-0.673,0.1983]),SFVec3f([-0.2076,-0.9481,0.6916]),SFVec3f([-0.1404,-1.048,0.5886]),SFVec3f([0.1515,-0.9429,0.5128]),SFVec3f([-0.0911,-1.101,0.4569]),SFVec3f([-0.3732,-1.009,0.4629]),SFVec3f([0.468,0.0378,-0.3382]),SFVec3f([0.2382,0.433,0.1216]),SFVec3f([-0.0212,0.4536,-0.0258]),SFVec3f([0.2254,0.0652,-0.4619]),SFVec3f([-0.4366,0.3569,-0.1582]),SFVec3f([-0.583,0.0038,0.0113]),SFVec3f([-0.3212,-0.3156,-0.3975]),SFVec3f([-0.19,-0.0315,-0.5942]),SFVec3f([-0.2852,0.2197,0.189]),SFVec3f([0.0627,-0.2806,-0.4266])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.8747,0.0865]),SFVec2f([0.8887,0.0786]),SFVec2f([0.8299,0.2203]),SFVec2f([0.8424,0.2111]),SFVec2f([0.8736,0.0851]),SFVec2f([0.8939,0.0989]),SFVec2f([0.8978,0.0975]),SFVec2f([0.8834,0.0852]),SFVec2f([0.8992,0.0766]),SFVec2f([0.9092,0.0888]),SFVec2f([0.8992,0.0702]),SFVec2f([0.9115,0.0859]),SFVec2f([0.876,0.0783]),SFVec2f([0.893,0.0688]),SFVec2f([0.9109,0.102]),SFVec2f([0.9135,0.0996]),SFVec2f([0.9144,0.0973]),SFVec2f([0.9172,0.0962]),SFVec2f([0.8241,0.2146]),SFVec2f([0.8338,0.2074]),SFVec2f([0.8247,0.2116]),SFVec2f([0.8291,0.2083]),SFVec2f([0.9028,0.1054]),SFVec2f([0.9046,0.1032]),SFVec2f([0.9153,0.1012]),SFVec2f([0.9125,0.1038]),SFVec2f([0.9081,0.1033]),SFVec2f([0.9082,0.1057]),SFVec2f([0.8266,0.2097]),SFVec2f([0.8885,0.0681]),SFVec2f([0.8723,0.0776]),SFVec2f([0.8843,0.0701]),SFVec2f([0.8696,0.0781]),SFVec2f([0.8612,0.2211]),SFVec2f([0.8482,0.2317]),SFVec2f([0.8625,0.2222]),SFVec2f([0.8417,0.2109]),SFVec2f([0.8433,0.2381]),SFVec2f([0.8245,0.2237]),SFVec2f([0.8192,0.2167]),SFVec2f([0.8322,0.2071]),SFVec2f([0.8195,0.2131]),SFVec2f([0.8224,0.2103]),SFVec2f([0.8256,0.2083])])))))])])])])]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('l_midcarpal_2'),
                                                                                                                  DEF_ : SFString('hanim_l_midcarpal_2'),
                                                                                                                  center_ : SFVec3f([SFDouble(8.057), SFDouble(31.42), SFDouble(0.3741)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('l_trapezoid'),
                                                                                                                      DEF_ : SFString('hanim_l_trapezoid'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(8.057), SFDouble(31.42), SFDouble(0.3741)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(14), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(14), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(26), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(13), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(17), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(21), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(8), SFInt32(-1), SFInt32(26), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(19), SFInt32(25), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(21), SFInt32(0), SFInt32(-1), SFInt32(22), SFInt32(28), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(29), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(29), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(29), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(19), SFInt32(-1), SFInt32(21), SFInt32(27), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(21), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(22), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(28), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(19), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(36), SFInt32(25), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([-0.6358,-0.9379,-0.2307]),SFVec3f([0.7821,-0.9379,-0.2307]),SFVec3f([0.6822,0.0629,-0.2716]),SFVec3f([-0.6057,0.0629,-0.2624]),SFVec3f([-0.5204,-1.104,-0.2257]),SFVec3f([0.6304,-1.104,-0.2257]),SFVec3f([0.5127,0.3713,-0.2927]),SFVec3f([-0.4578,0.3716,-0.2865]),SFVec3f([-0.5269,-0.0048,-0.3422]),SFVec3f([-0.5894,-0.8616,-0.3044]),SFVec3f([0.6897,-0.8616,-0.3038]),SFVec3f([0.6041,-0.0048,-0.3509]),SFVec3f([0.7053,-0.8216,0.3852]),SFVec3f([-0.6389,-0.8216,0.3852]),SFVec3f([0.568,-0.0472,0.2614]),SFVec3f([-0.5411,-0.0473,0.2625]),SFVec3f([-0.4859,-0.9962,0.4385]),SFVec3f([0.567,-1.009,0.4169]),SFVec3f([0.4266,0.2577,0.2079]),SFVec3f([-0.4523,0.2557,0.2115]),SFVec3f([0.6134,-0.7544,0.4412]),SFVec3f([0.4945,-0.0839,0.334]),SFVec3f([0.3721,0.1802,0.2877]),SFVec3f([-0.3891,0.1785,0.2907]),SFVec3f([-0.4659,-0.0839,0.335]),SFVec3f([-0.5506,-0.7544,0.4412]),SFVec3f([-0.4182,-0.9056,0.4873]),SFVec3f([0.4937,-0.9167,0.4687])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.813,0.0266]),SFVec2f([0.8136,0.0488]),SFVec2f([0.8136,0.0488]),SFVec2f([0.8133,0.0266]),SFVec2f([0.8111,0.0474]),SFVec2f([0.8105,0.0283]),SFVec2f([0.8108,0.0283]),SFVec2f([0.8111,0.0474]),SFVec2f([0.8141,0.0525]),SFVec2f([0.8141,0.0525]),SFVec2f([0.8123,0.0198]),SFVec2f([0.8125,0.0198]),SFVec2f([0.9273,0.2479]),SFVec2f([0.9315,0.2698]),SFVec2f([0.9337,0.2676]),SFVec2f([0.9301,0.2489]),SFVec2f([0.9262,0.2444]),SFVec2f([0.9337,0.2762]),SFVec2f([0.9335,0.2763]),SFVec2f([0.8381,0.0441]),SFVec2f([0.904,0.2568]),SFVec2f([0.8327,0.0273]),SFVec2f([0.9122,0.2724]),SFVec2f([0.8401,0.0478]),SFVec2f([0.9014,0.2535]),SFVec2f([0.8395,0.0482]),SFVec2f([0.9142,0.2789]),SFVec2f([0.8319,0.0206]),SFVec2f([0.9141,0.2788]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8327,0.0273]),SFVec2f([0.8319,0.0206]),SFVec2f([0.9141,0.2788]),SFVec2f([0.9122,0.2724]),SFVec2f([0.904,0.2568]),SFVec2f([0.9014,0.2535]),SFVec2f([0.8395,0.0482])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('l_carpometacarpal_2'),
                                                                                                                      DEF_ : SFString('hanim_l_carpometacarpal_2'),
                                                                                                                      center_ : SFVec3f([SFDouble(8.057), SFDouble(30.559999), SFDouble(0.4324)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('l_metacarpal_2'),
                                                                                                                          DEF_ : SFString('hanim_l_metacarpal_2'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(8.057), SFDouble(30.559999), SFDouble(0.4324)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(15), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(25), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(41), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(36), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(6), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(6), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(5), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(24), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(1), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(5), SFInt32(-1), SFInt32(21), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(10), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(16), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(15), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(18), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(11), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(41), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(7), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(44), SFInt32(46), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(46), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(8), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(8), SFInt32(47), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(50), SFInt32(8), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(47), SFInt32(8), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(18), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(33), SFInt32(-1), SFInt32(38), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(7), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(21), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(5), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(25), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(15), SFInt32(4), SFInt32(-1), SFInt32(15), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(48), SFInt32(56), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(45), SFInt32(48), SFInt32(-1), SFInt32(0), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(24), SFInt32(5), SFInt32(-1), SFInt32(24), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(50), SFInt32(54), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(47), SFInt32(50), SFInt32(-1), SFInt32(10), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(18), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(47), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(11), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(15), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(2), SFInt32(4), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([0.5385,-2.162,0.5011]),SFVec3f([0.0659,-2.156,0.6401]),SFVec3f([-0.3587,-2.162,0.5027]),SFVec3f([0.6132,-1.327,0.533]),SFVec3f([-0.4742,-1.326,0.5432]),SFVec3f([0.6023,-2.207,-0.1881]),SFVec3f([-0.5344,-1.295,-0.2212]),SFVec3f([0.7168,-1.295,-0.2212]),SFVec3f([0.0891,-1.429,0.7147]),SFVec3f([0.8645,-0.8313,0.4987]),SFVec3f([-0.3914,-2.207,-0.1881]),SFVec3f([-0.6358,-0.0769,-0.289]),SFVec3f([0.7821,-0.0769,-0.289]),SFVec3f([0.7053,0.0393,0.3269]),SFVec3f([-0.6389,0.0393,0.3269]),SFVec3f([-0.4005,-1.027,0.6389]),SFVec3f([0.2108,-1.13,0.785]),SFVec3f([0.7186,-1.012,0.7808]),SFVec3f([0.7841,-0.7783,0.694]),SFVec3f([-0.4207,-1.297,-0.341]),SFVec3f([-0.2918,-2.186,-0.2634]),SFVec3f([0.5068,-2.186,-0.2634]),SFVec3f([0.6022,-1.304,-0.3405]),SFVec3f([0.6628,-0.0829,-0.4027]),SFVec3f([-0.5467,-0.0829,-0.4027]),SFVec3f([0.0673,-2.335,0.5792]),SFVec3f([0.3957,-2.338,0.4716]),SFVec3f([0.4585,-2.364,-0.1616]),SFVec3f([0.4618,-2.271,-0.2352]),SFVec3f([-0.2461,-2.271,-0.2352]),SFVec3f([-0.3144,-2.364,-0.1611]),SFVec3f([-0.2879,-2.338,0.4752]),SFVec3f([0.1576,-0.941,0.901]),SFVec3f([-0.2884,-0.8565,0.7851]),SFVec3f([-0.469,0.0593,0.5095]),SFVec3f([0.5883,0.0595,0.5091]),SFVec3f([0.5527,-0.689,0.8149]),SFVec3f([0.541,-0.8603,0.8815]),SFVec3f([-0.506,0.13,0.2038]),SFVec3f([-0.5335,0.0511,-0.194]),SFVec3f([0.6336,0.0511,-0.194]),SFVec3f([0.5814,0.13,0.2038])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.8514,0.0953]),SFVec2f([0.8526,0.0788]),SFVec2f([0.846,0.0768]),SFVec2f([0.8466,0.0958]),SFVec2f([0.8195,0.0808]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8195,0.0808]),SFVec2f([0.8903,0.2261]),SFVec2f([0.8467,0.0958]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8136,0.0488]),SFVec2f([0.8561,0.0728]),SFVec2f([0.8532,0.0697]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8136,0.0488]),SFVec2f([0.8436,0.0662]),SFVec2f([0.8533,0.0697]),SFVec2f([0.8503,0.0646]),SFVec2f([0.8461,0.0998]),SFVec2f([0.8248,0.1027]),SFVec2f([0.8248,0.1027]),SFVec2f([0.8462,0.0997]),SFVec2f([0.8498,0.0994]),SFVec2f([0.8184,0.0977]),SFVec2f([0.8157,0.0811]),SFVec2f([0.8157,0.0809]),SFVec2f([0.8184,0.0977]),SFVec2f([0.8165,0.0457]),SFVec2f([0.8341,0.0424]),SFVec2f([0.8341,0.0424]),SFVec2f([0.8165,0.0457]),SFVec2f([0.844,0.0417]),SFVec2f([0.8554,0.0622]),SFVec2f([0.8575,0.0659]),SFVec2f([0.8594,0.0677]),SFVec2f([0.8574,0.0658]),SFVec2f([0.844,0.0417]),SFVec2f([0.8099,0.0493]),SFVec2f([0.8099,0.0493]),SFVec2f([0.82,0.101]),SFVec2f([0.82,0.101]),SFVec2f([0.8821,0.2087]),SFVec2f([0.8838,0.2252]),SFVec2f([0.9098,0.1997]),SFVec2f([0.916,0.2175]),SFVec2f([0.8866,0.2074]),SFVec2f([0.904,0.2568]),SFVec2f([0.9273,0.2479]),SFVec2f([0.8814,0.2316]),SFVec2f([0.8847,0.2342]),SFVec2f([0.9197,0.2166]),SFVec2f([0.9083,0.2577]),SFVec2f([0.925,0.2515]),SFVec2f([0.8813,0.2388]),SFVec2f([0.8986,0.2602]),SFVec2f([0.931,0.2468])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('l_metacarpophalangeal_2'),
                                                                                                                          DEF_ : SFString('hanim_l_metacarpophalangeal_2'),
                                                                                                                          center_ : SFVec3f([SFDouble(8.166), SFDouble(28.32), SFDouble(0.67)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('l_carpal_proximal_phalanx_2'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_proximal_phalanx_2'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(8.166), SFDouble(28.32), SFDouble(0.67)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(4), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(25), SFInt32(-1), SFInt32(0), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(26), SFInt32(-1), SFInt32(18), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(33), SFInt32(31), SFInt32(37), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(37), SFInt32(-1), SFInt32(21), SFInt32(30), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(21), SFInt32(-1), SFInt32(30), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(25), SFInt32(29), SFInt32(-1), SFInt32(25), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(37), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(24), SFInt32(23), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(38), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(42), SFInt32(38), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(11), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(44), SFInt32(6), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(46), SFInt32(6), SFInt32(40), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(43), SFInt32(48), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(11), SFInt32(43), SFInt32(-1), SFInt32(13), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(16), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(22), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(42), SFInt32(12), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(47), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(2), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(31), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(31), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(35), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(4), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(18), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(10), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(26), SFInt32(4), SFInt32(-1), SFInt32(26), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(37), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(7), SFInt32(30), SFInt32(-1), SFInt32(7), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(19), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(18), SFInt32(19), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([-0.1159,-1.372,0.3131]),SFVec3f([-0.5161,-1.341,-0.3172]),SFVec3f([0.3299,-1.236,-0.3162]),SFVec3f([-0.1159,-1.364,-0.424]),SFVec3f([-0.0588,-0.15,0.3785]),SFVec3f([0.3848,-0.1567,0.2488]),SFVec3f([0.4338,-0.1885,-0.322]),SFVec3f([-0.4674,-0.1885,-0.3215]),SFVec3f([-0.4674,-0.1567,0.2488]),SFVec3f([-0.0588,-0.3302,-0.406]),SFVec3f([-0.5161,-1.346,0.1932]),SFVec3f([0.3299,-1.242,0.1943]),SFVec3f([-0.4415,-1.509,-0.285]),SFVec3f([0.1699,-1.592,-0.3152]),SFVec3f([-0.4415,-1.514,0.1582]),SFVec3f([0.1699,-1.597,0.188]),SFVec3f([-0.117,-1.623,-0.3164]),SFVec3f([-0.117,-1.628,0.1968]),SFVec3f([0.4291,0.0832,0.2635]),SFVec3f([-0.0434,0.0888,0.4025]),SFVec3f([-0.4681,0.0832,0.2651]),SFVec3f([0.493,0.0378,-0.4257]),SFVec3f([0.4088,-0.1918,-0.4243]),SFVec3f([-0.4674,-0.1918,-0.4243]),SFVec3f([-0.0588,-0.3316,-0.4184]),SFVec3f([-0.5007,0.0378,-0.4257]),SFVec3f([0.2815,0.3454,0.172]),SFVec3f([-0.0577,0.3598,0.3191]),SFVec3f([-0.3828,0.3458,0.1744]),SFVec3f([-0.3964,0.327,-0.4021]),SFVec3f([0.3405,0.3271,-0.4009]),SFVec3f([-0.0578,-0.2883,-0.4475]),SFVec3f([0.3757,-0.1509,-0.4548]),SFVec3f([0.4553,0.0544,-0.4548]),SFVec3f([0.3138,0.3194,-0.4725]),SFVec3f([-0.365,0.3193,-0.4736]),SFVec3f([-0.4578,0.0532,-0.4547]),SFVec3f([-0.4287,-0.1537,-0.4547])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.8511,0.1006]),SFVec2f([0.8514,0.0953]),SFVec2f([0.8466,0.0958]),SFVec2f([0.8466,0.1011]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8283,0.1035]),SFVec2f([0.9023,0.1969]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8467,0.0958]),SFVec2f([0.8857,0.2021]),SFVec2f([0.8231,0.1042]),SFVec2f([0.8931,0.1724]),SFVec2f([0.8782,0.1769]),SFVec2f([0.8338,0.1268]),SFVec2f([0.8493,0.125]),SFVec2f([0.8543,0.1273]),SFVec2f([0.8302,0.1302]),SFVec2f([0.8258,0.1072]),SFVec2f([0.8236,0.1075]),SFVec2f([0.8231,0.1042]),SFVec2f([0.8504,0.1328]),SFVec2f([0.8508,0.1334]),SFVec2f([0.8781,0.1731]),SFVec2f([0.8909,0.1692]),SFVec2f([0.8352,0.1346]),SFVec2f([0.8353,0.1353]),SFVec2f([0.8228,0.0929]),SFVec2f([0.844,0.0896]),SFVec2f([0.8482,0.0889]),SFVec2f([0.8441,0.0896]),SFVec2f([0.8228,0.0929]),SFVec2f([0.8203,0.0995]),SFVec2f([0.8207,0.1038]),SFVec2f([0.8212,0.1068]),SFVec2f([0.8207,0.1037]),SFVec2f([0.8203,0.0995]),SFVec2f([0.8206,0.0933]),SFVec2f([0.8205,0.0933]),SFVec2f([0.8815,0.2034]),SFVec2f([0.8821,0.2087]),SFVec2f([0.9098,0.1997]),SFVec2f([0.8866,0.2074]),SFVec2f([0.8737,0.1777]),SFVec2f([0.8969,0.1707]),SFVec2f([0.9052,0.1925]),SFVec2f([0.9074,0.1918]),SFVec2f([0.9084,0.195]),SFVec2f([0.876,0.171]),SFVec2f([0.891,0.1665])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('l_carpal_proximal_interphalangeal_2'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_proximal_interphalangeal_2'),
                                                                                                                              center_ : SFVec3f([SFDouble(8.076), SFDouble(26.969999), SFDouble(0.6304)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('l_carpal_middle_phalanx_2'),
                                                                                                                                  DEF_ : SFString('hanim_l_carpal_middle_phalanx_2'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(8.076), SFDouble(26.969999), SFDouble(0.6304)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(1), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(2), SFInt32(15), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(16), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(28), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(20), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(18), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.0842,-1.127,-0.361]),SFVec3f([-0.4247,-1.116,0.201]),SFVec3f([0.2936,-1.004,0.2104]),SFVec3f([0.3843,-0.1994,0.2307]),SFVec3f([0.3843,-0.1941,-0.2798]),SFVec3f([-0.4256,0.0112,-0.2777]),SFVec3f([0.4203,0.1156,-0.2766]),SFVec3f([-0.4256,0.0059,0.2328]),SFVec3f([0.4203,0.1104,0.2338]),SFVec3f([-0.2414,0.2045,-0.2757]),SFVec3f([-0.2414,0.1992,0.2347]),SFVec3f([0.1761,0.1887,0.2346]),SFVec3f([0.1761,0.194,-0.2758]),SFVec3f([-0.0255,-0.0122,-0.3845]),SFVec3f([-0.0255,-0.0204,0.3527]),SFVec3f([-0.0839,-1.135,0.3208]),SFVec3f([0.1687,-1.353,0.1876]),SFVec3f([-0.075,-1.39,0.1958]),SFVec3f([-0.4249,-1.111,-0.2542]),SFVec3f([-0.3563,-1.282,0.16]),SFVec3f([-0.3564,-1.278,-0.2161]),SFVec3f([0.2934,-0.9988,-0.2626]),SFVec3f([0.1685,-1.348,-0.2441]),SFVec3f([-0.0752,-1.386,-0.2452])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.8782,0.1769]),SFVec2f([0.8543,0.1273]),SFVec2f([0.8574,0.1518]),SFVec2f([0.8703,0.1535]),SFVec2f([0.8493,0.125]),SFVec2f([0.8504,0.1318]),SFVec2f([0.8846,0.1491]),SFVec2f([0.8931,0.1724]),SFVec2f([0.8349,0.1336]),SFVec2f([0.8379,0.1515]),SFVec2f([0.8533,0.1496]),SFVec2f([0.8338,0.1268]),SFVec2f([0.8302,0.1302]),SFVec2f([0.8351,0.1545]),SFVec2f([0.849,0.1233]),SFVec2f([0.8336,0.1251]),SFVec2f([0.849,0.123]),SFVec2f([0.8335,0.1249]),SFVec2f([0.8539,0.1573]),SFVec2f([0.8543,0.1579]),SFVec2f([0.8703,0.1496]),SFVec2f([0.8822,0.146]),SFVec2f([0.8398,0.159]),SFVec2f([0.8399,0.1597]),SFVec2f([0.8737,0.1777]),SFVec2f([0.8664,0.1541]),SFVec2f([0.8969,0.1707]),SFVec2f([0.8878,0.1476]),SFVec2f([0.8796,0.181]),SFVec2f([0.8945,0.1764]),SFVec2f([0.8684,0.1475]),SFVec2f([0.8822,0.1433])])))))]),

                                                                                                                                HAnimJoint(
                                                                                                                                  name_ : SFString('l_carpal_distal_interphalangeal_2'),
                                                                                                                                  DEF_ : SFString('hanim_l_carpal_distal_interphalangeal_2'),
                                                                                                                                  center_ : SFVec3f([SFDouble(8.03), SFDouble(25.85), SFDouble(0.5949)]),
                                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  children_ : [
                                                                                                                                    HAnimSegment(
                                                                                                                                      name_ : SFString('l_carpal_distal_phalanx_2'),
                                                                                                                                      DEF_ : SFString('hanim_l_carpal_distal_phalanx_2'),
                                                                                                                                      children_ : [
                                                                                                                                        Transform(
                                                                                                                                          translation_ : SFVec3f([SFDouble(8.03), SFDouble(25.85), SFDouble(0.5949)]),
                                                                                                                                          child_ : 
                                                                                                                                            Shape(
                                                                                                                                              appearance_ : 
                                                                                                                                                Appearance(
                                                                                                                                                  material_ : 
                                                                                                                                                    Material(
                                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                                  texture_ : 
                                                                                                                                                    ImageTexture(
                                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                              geometry_ : 
                                                                                                                                                IndexedFaceSet(
                                                                                                                                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(25), SFInt32(31), SFInt32(-1), SFInt32(24), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(23), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(31), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(23), SFInt32(-1), SFInt32(32), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(32), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(23), SFInt32(31), SFInt32(28), SFInt32(-1)]),
                                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(33), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(35), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(39), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(23), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(41), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(38), SFInt32(41), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(43), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(33), SFInt32(42), SFInt32(-1)]),
                                                                                                                                                  coord_ : 
                                                                                                                                                    Coordinate(
                                                                                                                                                      point_ : MFVec3f([SFVec3f([0.3152,-0.145,0.2433]),SFVec3f([0.315,-0.1398,-0.2298]),SFVec3f([0.2422,-0.5055,0.2184]),SFVec3f([0.242,-0.5007,-0.2162]),SFVec3f([-0.3547,-0.4741,0.238]),SFVec3f([-0.0817,-0.4944,0.3202]),SFVec3f([-0.3549,-0.4688,-0.2341]),SFVec3f([-0.082,-0.4873,-0.3192]),SFVec3f([0.1332,-0.7789,0.1945]),SFVec3f([0.1331,-0.7746,-0.1993]),SFVec3f([-0.3575,-0.7605,0.19]),SFVec3f([-0.1196,-0.7912,0.2759]),SFVec3f([-0.3577,-0.7563,-0.187]),SFVec3f([-0.1199,-0.785,-0.2787]),SFVec3f([0.1657,-0.8631,-0.0043]),SFVec3f([-0.3212,-0.8627,-0.0041]),SFVec3f([-0.1205,-0.9246,-0.0048]),SFVec3f([0.1615,-0.846,0.1047]),SFVec3f([-0.3253,-0.8401,-0.0952]),SFVec3f([-0.1076,-0.8953,0.1399]),SFVec3f([0.1615,-0.845,-0.1068]),SFVec3f([-0.3253,-0.8413,0.0926]),SFVec3f([-0.1075,-0.8974,-0.1391]),SFVec3f([-0.3791,0.003,0.2365]),SFVec3f([0.339,0.1201,-0.2271]),SFVec3f([0.3392,0.1148,0.2459]),SFVec3f([0.1312,0.198,0.2297]),SFVec3f([0.131,0.2029,-0.2085]),SFVec3f([-0.2273,0.2003,0.2299]),SFVec3f([-0.3793,0.008,-0.2188]),SFVec3f([-0.2274,0.2051,-0.2084]),SFVec3f([-0.0363,-0.0157,0.3561]),SFVec3f([-0.0366,-0.0081,-0.3256])])),
                                                                                                                                                  texCoord_ : 
                                                                                                                                                    TextureCoordinate(
                                                                                                                                                      point_ : MFVec2f([SFVec2f([0.8542,0.1553]),SFVec2f([0.8574,0.1518]),SFVec2f([0.8533,0.1496]),SFVec2f([0.8379,0.1515]),SFVec2f([0.8351,0.1545]),SFVec2f([0.8388,0.1572]),SFVec2f([0.8414,0.1663]),SFVec2f([0.8547,0.1647]),SFVec2f([0.8578,0.1639]),SFVec2f([0.8665,0.142]),SFVec2f([0.8703,0.1535]),SFVec2f([0.8804,0.1378]),SFVec2f([0.8846,0.1491]),SFVec2f([0.8382,0.1663]),SFVec2f([0.8495,0.1759]),SFVec2f([0.8523,0.1752]),SFVec2f([0.8544,0.1737]),SFVec2f([0.8566,0.1736]),SFVec2f([0.8658,0.1324]),SFVec2f([0.8753,0.1296]),SFVec2f([0.8677,0.1303]),SFVec2f([0.8725,0.1289]),SFVec2f([0.842,0.1753]),SFVec2f([0.8441,0.175]),SFVec2f([0.8533,0.1759]),SFVec2f([0.8496,0.1769]),SFVec2f([0.8467,0.1759]),SFVec2f([0.846,0.1768]),SFVec2f([0.87,0.1292]),SFVec2f([0.8525,0.1477]),SFVec2f([0.8382,0.1495]),SFVec2f([0.8525,0.1475]),SFVec2f([0.8381,0.1492]),SFVec2f([0.8664,0.1541]),SFVec2f([0.8878,0.1476]),SFVec2f([0.8639,0.1422]),SFVec2f([0.8827,0.1365]),SFVec2f([0.8634,0.1325]),SFVec2f([0.8774,0.1283]),SFVec2f([0.8662,0.1297]),SFVec2f([0.8697,0.1281]),SFVec2f([0.8732,0.1275]),SFVec2f([0.872,0.1575]),SFVec2f([0.8858,0.1533])])))))])])])])])]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('l_midcarpal_3'),
                                                                                                                  DEF_ : SFString('hanim_l_midcarpal_3'),
                                                                                                                  center_ : SFVec3f([SFDouble(8.048), SFDouble(31.49), SFDouble(-0.2132)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('l_capitate'),
                                                                                                                      DEF_ : SFString('hanim_l_capitate'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(8.048), SFDouble(31.49), SFDouble(-0.2132)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(5), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(5), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(0), SFInt32(1), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(24), SFInt32(0), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(12), SFInt32(-1), SFInt32(25), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(26), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(27), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(35), SFInt32(20), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(24), SFInt32(37), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(0), SFInt32(20), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(27), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(2), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(7), SFInt32(2), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([0.7943,-1.006,-0.3306]),SFVec3f([-0.648,-1.004,-0.3307]),SFVec3f([0.6905,-0.0005,0.3157]),SFVec3f([0.7213,0.0186,-0.3382]),SFVec3f([-0.5902,0.0185,-0.3369]),SFVec3f([-0.6274,-1.001,0.3565]),SFVec3f([-0.5973,-0.0004,0.3249]),SFVec3f([0.7905,-1.001,0.3565]),SFVec3f([-0.5435,-1.162,-0.3389]),SFVec3f([-0.5303,-1.172,0.3664]),SFVec3f([0.6431,-1.172,0.3664]),SFVec3f([0.6456,-1.164,-0.3388]),SFVec3f([-0.4499,0.3085,0.3015]),SFVec3f([-0.4451,0.3167,-0.2743]),SFVec3f([0.5697,0.3168,-0.2752]),SFVec3f([0.5495,0.3084,0.2952]),SFVec3f([-0.5852,-0.9387,0.4693]),SFVec3f([-0.5221,-0.0738,0.4318]),SFVec3f([0.6176,-0.0739,0.4231]),SFVec3f([0.704,-0.9387,0.4698]),SFVec3f([0.7043,-0.9311,-0.4245]),SFVec3f([0.6416,-0.0507,-0.4488]),SFVec3f([-0.5127,-0.0508,-0.4475]),SFVec3f([-0.5993,-0.929,-0.4247])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.9315,0.2698]),SFVec2f([0.8136,0.0488]),SFVec2f([0.7924,0.0507]),SFVec2f([0.7911,0.0281]),SFVec2f([0.8136,0.0488]),SFVec2f([0.813,0.0266]),SFVec2f([0.791,0.0281]),SFVec2f([0.7924,0.0508]),SFVec2f([0.7924,0.0543]),SFVec2f([0.8143,0.0526]),SFVec2f([0.8143,0.0526]),SFVec2f([0.7924,0.0543]),SFVec2f([0.9335,0.2763]),SFVec2f([0.7903,0.0215]),SFVec2f([0.7903,0.0215]),SFVec2f([0.8123,0.0198]),SFVec2f([0.7875,0.03]),SFVec2f([0.7875,0.03]),SFVec2f([0.7887,0.0494]),SFVec2f([0.7887,0.0495]),SFVec2f([0.9277,0.2691]),SFVec2f([0.8167,0.0279]),SFVec2f([0.8173,0.0471]),SFVec2f([0.8173,0.0471]),SFVec2f([0.9273,0.2479]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9531,0.2644]),SFVec2f([0.9318,0.2697]),SFVec2f([0.9473,0.2389]),SFVec2f([0.926,0.2443]),SFVec2f([0.955,0.2707]),SFVec2f([0.9551,0.2707]),SFVec2f([0.9337,0.2763]),SFVec2f([0.9563,0.262]),SFVec2f([0.9518,0.243]),SFVec2f([0.928,0.269]),SFVec2f([0.924,0.2502]),SFVec2f([0.9241,0.2502])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('l_carpometacarpal_3'),
                                                                                                                      DEF_ : SFString('hanim_l_carpometacarpal_3'),
                                                                                                                      center_ : SFVec3f([SFDouble(8.048), SFDouble(30.48), SFDouble(-0.2779)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('l_metacarpal_3'),
                                                                                                                          DEF_ : SFString('hanim_l_metacarpal_3'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(8.048), SFDouble(30.48), SFDouble(-0.2779)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(25), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(20), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(16), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(23), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(10), SFInt32(11), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(40), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(43), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(48), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(20), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(8), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(9), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(36), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(39), SFInt32(36), SFInt32(-1), SFInt32(7), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(30), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(35), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(3), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(42), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(38), SFInt32(42), SFInt32(-1), SFInt32(38), SFInt32(53), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(5), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(22), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(33), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(6), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(7), SFInt32(10), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([0.7345,-1.173,-0.2591]),SFVec3f([-0.52,-1.173,-0.2591]),SFVec3f([-0.3873,-2.115,-0.2835]),SFVec3f([0.6104,-2.115,-0.2835]),SFVec3f([0.7943,-0.0032,-0.2659]),SFVec3f([-0.648,-0.0008,-0.266]),SFVec3f([0.6106,-2.129,0.5221]),SFVec3f([-0.5261,-1.217,0.489]),SFVec3f([0.7252,-1.217,0.489]),SFVec3f([-0.3831,-2.129,0.5221]),SFVec3f([-0.6274,0.0017,0.4213]),SFVec3f([0.7905,0.0017,0.4213]),SFVec3f([0.5317,-2.284,0.4916]),SFVec3f([0.5316,-2.289,-0.2329]),SFVec3f([-0.3003,-2.289,-0.2329]),SFVec3f([-0.2967,-2.284,0.4916]),SFVec3f([-0.2822,-2.101,0.59]),SFVec3f([-0.4237,-1.207,0.6426]),SFVec3f([-0.5516,0.0221,0.5729]),SFVec3f([0.683,0.0221,0.5729]),SFVec3f([0.6219,-1.213,0.6429]),SFVec3f([0.5169,-2.102,0.59]),SFVec3f([0.4634,-2.2,0.572]),SFVec3f([-0.2282,-2.2,0.572]),SFVec3f([0.5108,-2.08,-0.3752]),SFVec3f([0.622,-1.178,-0.3875]),SFVec3f([0.6765,0.0078,-0.3867]),SFVec3f([-0.5551,0.0098,-0.3868]),SFVec3f([-0.4091,-1.172,-0.3877]),SFVec3f([-0.2813,-2.079,-0.3753]),SFVec3f([-0.2267,-2.197,-0.3441]),SFVec3f([0.4567,-2.197,-0.3441]),SFVec3f([-0.5375,0.1089,0.2867]),SFVec3f([-0.55,0.1079,-0.1665]),SFVec3f([0.661,0.1057,-0.1664]),SFVec3f([0.6586,0.1092,0.2867])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.8225,0.0994]),SFVec2f([0.8195,0.0808]),SFVec2f([0.7938,0.0824]),SFVec2f([0.7939,0.1016]),SFVec2f([0.8195,0.0808]),SFVec2f([0.7938,0.0824]),SFVec2f([0.7924,0.0507]),SFVec2f([0.8136,0.0488]),SFVec2f([0.7939,0.1016]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8136,0.0488]),SFVec2f([0.7924,0.0508]),SFVec2f([0.7964,0.1053]),SFVec2f([0.8205,0.103]),SFVec2f([0.8205,0.103]),SFVec2f([0.7964,0.1053]),SFVec2f([0.796,0.0481]),SFVec2f([0.809,0.0468]),SFVec2f([0.809,0.0469]),SFVec2f([0.796,0.048]),SFVec2f([0.7888,0.0827]),SFVec2f([0.7888,0.0826]),SFVec2f([0.7886,0.1011]),SFVec2f([0.7887,0.1011]),SFVec2f([0.8243,0.0799]),SFVec2f([0.8186,0.0479]),SFVec2f([0.8186,0.0479]),SFVec2f([0.8243,0.0801]),SFVec2f([0.7878,0.051]),SFVec2f([0.7878,0.0509]),SFVec2f([0.8275,0.0984]),SFVec2f([0.8275,0.0983]),SFVec2f([0.7902,0.1036]),SFVec2f([0.7902,0.1036]),SFVec2f([0.8264,0.1006]),SFVec2f([0.8264,0.1006]),SFVec2f([0.916,0.2175]),SFVec2f([0.941,0.2114]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9273,0.2479]),SFVec2f([0.9376,0.1925]),SFVec2f([0.9098,0.1997]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9448,0.2456]),SFVec2f([0.9323,0.249]),SFVec2f([0.9323,0.249]),SFVec2f([0.9448,0.2456]),SFVec2f([0.9459,0.2103]),SFVec2f([0.9115,0.2191]),SFVec2f([0.9226,0.2496]),SFVec2f([0.9226,0.2496]),SFVec2f([0.9114,0.219]),SFVec2f([0.9524,0.2413]),SFVec2f([0.9524,0.2414])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('l_metacarpophalangeal_3'),
                                                                                                                          DEF_ : SFString('hanim_l_metacarpophalangeal_3'),
                                                                                                                          center_ : SFVec3f([SFDouble(8.164), SFDouble(28.219999), SFDouble(-0.1741)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('l_carpal_proximal_phalanx_3'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_proximal_phalanx_3'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(8.164), SFDouble(28.219999), SFDouble(-0.1741)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(3), SFInt32(4), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(21), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(5), SFInt32(25), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(17), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(19), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(21), SFInt32(26), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(35), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(38), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(44), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(44), SFInt32(41), SFInt32(39), SFInt32(-1), SFInt32(44), SFInt32(39), SFInt32(45), SFInt32(-1), SFInt32(18), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(27), SFInt32(19), SFInt32(-1), SFInt32(27), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(21), SFInt32(29), SFInt32(-1), SFInt32(21), SFInt32(38), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(26), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(25), SFInt32(31), SFInt32(-1), SFInt32(25), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(22), SFInt32(24), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(49), SFInt32(4), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(51), SFInt32(4), SFInt32(46), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(48), SFInt32(54), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(48), SFInt32(-1), SFInt32(11), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(20), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(24), SFInt32(-1), SFInt32(10), SFInt32(52), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(25), SFInt32(-1), SFInt32(55), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(7), SFInt32(55), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(0), SFInt32(-1), SFInt32(56), SFInt32(47), SFInt32(7), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(33), SFInt32(-1), SFInt32(6), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(39), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(41), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(24), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(6), SFInt32(26), SFInt32(-1), SFInt32(6), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(6), SFInt32(-1), SFInt32(30), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(38), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(1), SFInt32(29), SFInt32(-1), SFInt32(1), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(28), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(5), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(16), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(15), SFInt32(16), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([-0.5139,-1.411,-0.2221]),SFVec3f([0.332,-1.294,-0.2251]),SFVec3f([-0.1138,-1.44,-0.347]),SFVec3f([0.4109,-0.0964,0.3132]),SFVec3f([0.4109,-0.0905,-0.2649]),SFVec3f([-0.4653,-0.0905,-0.2649]),SFVec3f([-0.4653,-0.0964,0.3132]),SFVec3f([-0.0567,-0.238,-0.3659]),SFVec3f([-0.4394,-1.599,-0.1832]),SFVec3f([0.172,-1.692,-0.2102]),SFVec3f([-0.4394,-1.593,0.2229]),SFVec3f([0.172,-1.686,0.2561]),SFVec3f([-0.1148,-1.727,-0.2101]),SFVec3f([-0.1148,-1.721,0.2661]),SFVec3f([-0.5139,-1.404,0.2513]),SFVec3f([-0.1138,-1.43,0.3905]),SFVec3f([-0.0567,-0.2387,0.4126]),SFVec3f([0.332,-1.287,0.2483]),SFVec3f([0.4109,-0.0974,0.4198]),SFVec3f([-0.4653,-0.0974,0.4198]),SFVec3f([-0.0567,-0.2372,0.4256]),SFVec3f([0.4951,0.1322,0.4183]),SFVec3f([-0.0567,-0.2357,-0.3789]),SFVec3f([0.4109,-0.0983,-0.3758]),SFVec3f([-0.4653,-0.0983,-0.3758]),SFVec3f([-0.5029,0.1462,-0.3874]),SFVec3f([0.4949,0.1462,-0.3874]),SFVec3f([-0.4986,0.1322,0.4183]),SFVec3f([0.3331,0.4155,-0.3612]),SFVec3f([0.3333,0.417,0.3717]),SFVec3f([-0.3998,0.417,0.3717]),SFVec3f([-0.4035,0.4155,-0.3612]),SFVec3f([0.3889,-0.0506,0.451]),SFVec3f([-0.0558,-0.1916,0.4554]),SFVec3f([-0.4401,-0.052,0.451]),SFVec3f([-0.4709,0.1519,0.4501]),SFVec3f([-0.3792,0.4207,0.4493]),SFVec3f([0.3158,0.4207,0.4493]),SFVec3f([0.4731,0.1521,0.4501]),SFVec3f([-0.0556,-0.1849,-0.4078]),SFVec3f([0.3711,-0.0605,-0.4181]),SFVec3f([0.4488,0.1472,-0.4248]),SFVec3f([0.3032,0.412,-0.4254]),SFVec3f([-0.367,0.412,-0.4254]),SFVec3f([-0.4521,0.1476,-0.4248]),SFVec3f([-0.4197,-0.0633,-0.4181])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.8168,0.105]),SFVec2f([0.8225,0.0994]),SFVec2f([0.7939,0.1016]),SFVec2f([0.7996,0.1065]),SFVec2f([0.9311,0.1887]),SFVec2f([0.7939,0.1016]),SFVec2f([0.8225,0.0994]),SFVec2f([0.9145,0.1932]),SFVec2f([0.794,0.107]),SFVec2f([0.9232,0.1611]),SFVec2f([0.908,0.1649]),SFVec2f([0.8025,0.1324]),SFVec2f([0.818,0.1313]),SFVec2f([0.7986,0.1359]),SFVec2f([0.7957,0.11]),SFVec2f([0.7939,0.1101]),SFVec2f([0.794,0.107]),SFVec2f([0.8228,0.1342]),SFVec2f([0.8186,0.1401]),SFVec2f([0.819,0.1409]),SFVec2f([0.9081,0.1606]),SFVec2f([0.921,0.1574]),SFVec2f([0.8033,0.1412]),SFVec2f([0.8033,0.142]),SFVec2f([0.8231,0.1042]),SFVec2f([0.8212,0.1078]),SFVec2f([0.8231,0.1042]),SFVec2f([0.8236,0.1075]),SFVec2f([0.7948,0.0956]),SFVec2f([0.8206,0.0932]),SFVec2f([0.8206,0.0932]),SFVec2f([0.7948,0.0956]),SFVec2f([0.8249,0.0987]),SFVec2f([0.8253,0.1032]),SFVec2f([0.8258,0.1063]),SFVec2f([0.8253,0.1032]),SFVec2f([0.8249,0.0987]),SFVec2f([0.823,0.0929]),SFVec2f([0.823,0.0929]),SFVec2f([0.7917,0.1017]),SFVec2f([0.7916,0.1064]),SFVec2f([0.7918,0.1091]),SFVec2f([0.7916,0.1063]),SFVec2f([0.7917,0.1017]),SFVec2f([0.7927,0.0957]),SFVec2f([0.7927,0.0957]),SFVec2f([0.9376,0.1925]),SFVec2f([0.9098,0.1997]),SFVec2f([0.927,0.1595]),SFVec2f([0.9344,0.1846]),SFVec2f([0.9361,0.1842]),SFVec2f([0.9366,0.1872]),SFVec2f([0.9035,0.1654]),SFVec2f([0.9061,0.1582]),SFVec2f([0.9213,0.1544]),SFVec2f([0.9096,0.1911]),SFVec2f([0.9084,0.195]),SFVec2f([0.9074,0.1918])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('l_carpal_proximal_interphalangeal_3'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_proximal_interphalangeal_3'),
                                                                                                                              center_ : SFVec3f([SFDouble(8.076), SFDouble(26.809999), SFDouble(-0.1572)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('l_carpal_middle_phalanx_3'),
                                                                                                                                  DEF_ : SFString('hanim_l_carpal_middle_phalanx_3'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(8.076), SFDouble(26.809999), SFDouble(-0.1572)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(1), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(2), SFInt32(15), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(16), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(28), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(20), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(18), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.0742,-1.244,-0.3277]),SFVec3f([-0.4153,-1.216,0.2336]),SFVec3f([0.3026,-1.092,0.2392]),SFVec3f([0.3843,-0.2231,0.2405]),SFVec3f([0.3843,-0.2294,-0.2329]),SFVec3f([-0.4256,0.0008,-0.2389]),SFVec3f([0.4203,0.1179,-0.242]),SFVec3f([-0.4256,0.0071,0.2345]),SFVec3f([0.4203,0.1243,0.2314]),SFVec3f([-0.2414,0.2175,-0.2446]),SFVec3f([-0.2414,0.2239,0.2288]),SFVec3f([0.1761,0.2121,0.2291]),SFVec3f([0.1761,0.2057,-0.2443]),SFVec3f([-0.0255,-0.0287,-0.3639]),SFVec3f([-0.0255,-0.0188,0.3737]),SFVec3f([-0.0745,-1.235,0.3544]),SFVec3f([0.1793,-1.484,0.2301]),SFVec3f([-0.0653,-1.497,0.2372]),SFVec3f([-0.4151,-1.222,-0.2219]),SFVec3f([-0.3461,-1.403,0.1992]),SFVec3f([-0.3459,-1.408,-0.177]),SFVec3f([0.3028,-1.098,-0.234]),SFVec3f([0.1795,-1.49,-0.2018]),SFVec3f([-0.0641,-1.531,-0.2017])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.908,0.1649]),SFVec2f([0.8228,0.1342]),SFVec2f([0.8238,0.1612]),SFVec2f([0.9018,0.1387]),SFVec2f([0.818,0.1313]),SFVec2f([0.8186,0.139]),SFVec2f([0.9163,0.135]),SFVec2f([0.9232,0.1611]),SFVec2f([0.8031,0.1401]),SFVec2f([0.8044,0.1596]),SFVec2f([0.8199,0.1584]),SFVec2f([0.8025,0.1324]),SFVec2f([0.7986,0.1359]),SFVec2f([0.8014,0.1628]),SFVec2f([0.8179,0.1294]),SFVec2f([0.8023,0.1305]),SFVec2f([0.8179,0.1291]),SFVec2f([0.8023,0.1302]),SFVec2f([0.8199,0.1671]),SFVec2f([0.8202,0.1672]),SFVec2f([0.902,0.1343]),SFVec2f([0.914,0.1313]),SFVec2f([0.8058,0.1681]),SFVec2f([0.8058,0.1689]),SFVec2f([0.9035,0.1654]),SFVec2f([0.8978,0.139]),SFVec2f([0.927,0.1595]),SFVec2f([0.9196,0.1336]),SFVec2f([0.9092,0.1696]),SFVec2f([0.9243,0.1658]),SFVec2f([0.9003,0.1324]),SFVec2f([0.9142,0.1283])])))))]),

                                                                                                                                HAnimJoint(
                                                                                                                                  name_ : SFString('l_carpal_distal_interphalangeal_3'),
                                                                                                                                  DEF_ : SFString('hanim_l_carpal_distal_interphalangeal_3'),
                                                                                                                                  center_ : SFVec3f([SFDouble(8.03), SFDouble(25.57), SFDouble(-0.1671)]),
                                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  children_ : [
                                                                                                                                    HAnimSegment(
                                                                                                                                      name_ : SFString('l_carpal_distal_phalanx_3'),
                                                                                                                                      DEF_ : SFString('hanim_l_carpal_distal_phalanx_3'),
                                                                                                                                      children_ : [
                                                                                                                                        Transform(
                                                                                                                                          translation_ : SFVec3f([SFDouble(8.03), SFDouble(25.57), SFDouble(-0.1671)]),
                                                                                                                                          child_ : 
                                                                                                                                            Shape(
                                                                                                                                              appearance_ : 
                                                                                                                                                Appearance(
                                                                                                                                                  material_ : 
                                                                                                                                                    Material(
                                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                                  texture_ : 
                                                                                                                                                    ImageTexture(
                                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                              geometry_ : 
                                                                                                                                                IndexedFaceSet(
                                                                                                                                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(25), SFInt32(31), SFInt32(-1), SFInt32(24), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(23), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(31), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(23), SFInt32(-1), SFInt32(32), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(32), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(23), SFInt32(31), SFInt32(28), SFInt32(-1)]),
                                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(33), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(35), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(39), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(23), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(41), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(38), SFInt32(41), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(43), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(33), SFInt32(42), SFInt32(-1)]),
                                                                                                                                                  coord_ : 
                                                                                                                                                    Coordinate(
                                                                                                                                                      point_ : MFVec3f([SFVec3f([0.3088,-0.1396,0.2568]),SFVec3f([0.309,-0.146,-0.2166]),SFVec3f([0.2521,-0.4949,0.2523]),SFVec3f([0.2525,-0.5053,-0.1929]),SFVec3f([-0.3444,-0.4714,0.2712]),SFVec3f([-0.0718,-0.4844,0.3472]),SFVec3f([-0.344,-0.4826,-0.2124]),SFVec3f([-0.0712,-0.4992,-0.2979]),SFVec3f([0.1267,-0.8325,0.2296]),SFVec3f([0.1271,-0.8423,-0.17]),SFVec3f([-0.3449,-0.8222,0.2244]),SFVec3f([-0.1082,-0.8209,0.3006]),SFVec3f([-0.3446,-0.8316,-0.1582]),SFVec3f([-0.1077,-0.8339,-0.24]),SFVec3f([0.1586,-0.9,0.0299]),SFVec3f([-0.3093,-0.9026,0.0297]),SFVec3f([-0.1093,-0.9463,0.0305]),SFVec3f([0.1544,-0.884,0.14]),SFVec3f([-0.3132,-0.8892,-0.0631]),SFVec3f([-0.0963,-0.9202,0.1766]),SFVec3f([0.1546,-0.8902,-0.0746]),SFVec3f([-0.3134,-0.8839,0.1274]),SFVec3f([-0.0959,-0.9309,-0.1063]),SFVec3f([-0.3697,0.028,0.2435]),SFVec3f([0.3484,0.1453,-0.2241]),SFVec3f([0.3482,0.1516,0.2492]),SFVec3f([0.1398,0.245,0.2295]),SFVec3f([0.14,0.2392,-0.2089]),SFVec3f([-0.2187,0.2486,0.2292]),SFVec3f([-0.3695,0.022,-0.212]),SFVec3f([-0.2185,0.2427,-0.2093]),SFVec3f([-0.0269,0.0093,0.3642]),SFVec3f([-0.0266,0.0001,-0.3179])])),
                                                                                                                                                  texCoord_ : 
                                                                                                                                                    TextureCoordinate(
                                                                                                                                                      point_ : MFVec2f([SFVec2f([0.8204,0.1649]),SFVec2f([0.8238,0.1612]),SFVec2f([0.8199,0.1584]),SFVec2f([0.8044,0.1596]),SFVec2f([0.8014,0.1628]),SFVec2f([0.8049,0.166]),SFVec2f([0.807,0.1802]),SFVec2f([0.8204,0.1792]),SFVec2f([0.8232,0.1783]),SFVec2f([0.8982,0.1238]),SFVec2f([0.9018,0.1387]),SFVec2f([0.9123,0.1202]),SFVec2f([0.9163,0.135]),SFVec2f([0.8038,0.18]),SFVec2f([0.8141,0.1881]),SFVec2f([0.8169,0.1876]),SFVec2f([0.8192,0.1861]),SFVec2f([0.8213,0.1861]),SFVec2f([0.8983,0.1142]),SFVec2f([0.9079,0.1117]),SFVec2f([0.9004,0.112]),SFVec2f([0.9052,0.1108]),SFVec2f([0.8067,0.1872]),SFVec2f([0.8088,0.1869]),SFVec2f([0.8179,0.1883]),SFVec2f([0.8142,0.1891]),SFVec2f([0.8114,0.188]),SFVec2f([0.8106,0.1889]),SFVec2f([0.9027,0.111]),SFVec2f([0.8192,0.1563]),SFVec2f([0.8048,0.1573]),SFVec2f([0.8192,0.156]),SFVec2f([0.8048,0.1571]),SFVec2f([0.8978,0.139]),SFVec2f([0.9196,0.1336]),SFVec2f([0.8956,0.1239]),SFVec2f([0.9147,0.119]),SFVec2f([0.8959,0.1141]),SFVec2f([0.9101,0.1105]),SFVec2f([0.8989,0.1113]),SFVec2f([0.9025,0.1098]),SFVec2f([0.906,0.1094]),SFVec2f([0.9033,0.1433]),SFVec2f([0.9173,0.1398])])))))])])])])])]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('l_midcarpal_4_5'),
                                                                                                                  DEF_ : SFString('hanim_l_midcarpal_4_5'),
                                                                                                                  center_ : SFVec3f([SFDouble(8.048), SFDouble(31.370001), SFDouble(-1.144)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('l_hamate'),
                                                                                                                      DEF_ : SFString('hanim_l_hamate'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(8.048), SFDouble(31.370001), SFDouble(-1.144)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(6), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(8), SFInt32(11), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(13), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(23), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(16), SFInt32(-1), SFInt32(26), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(5), SFInt32(25), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(9), SFInt32(29), SFInt32(-1), SFInt32(9), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(34), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(30), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(43), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(28), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(19), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(31), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(7), SFInt32(31), SFInt32(-1), SFInt32(6), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(30), SFInt32(39), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(11), SFInt32(30), SFInt32(-1), SFInt32(11), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(31), SFInt32(7), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([0.7573,-0.8348,-0.0837]),SFVec3f([-0.4564,-0.7476,-0.5366]),SFVec3f([-0.6059,-0.8342,-0.0839]),SFVec3f([0.0802,-0.7042,-0.6722]),SFVec3f([0.5794,-0.751,-0.5355]),SFVec3f([-0.4299,-0.0336,-0.0706]),SFVec3f([0.0854,-0.0164,-0.3649]),SFVec3f([0.6165,-0.0333,-0.0701]),SFVec3f([0.7213,0.1352,0.5926]),SFVec3f([0.7943,-0.8895,0.6002]),SFVec3f([-0.648,-0.8871,0.6001]),SFVec3f([-0.5902,0.1351,0.5939]),SFVec3f([0.6385,-1.05,0.5965]),SFVec3f([0.6101,-1.017,-0.0884]),SFVec3f([0.4568,-0.9463,-0.4747]),SFVec3f([0.0724,-0.9059,-0.5792]),SFVec3f([-0.3357,-0.9442,-0.4714]),SFVec3f([-0.4637,-1.017,-0.0877]),SFVec3f([-0.5294,-1.048,0.5964]),SFVec3f([-0.4096,0.4323,0.6564]),SFVec3f([-0.2986,0.2698,-0.012]),SFVec3f([0.0779,0.2847,-0.2247]),SFVec3f([0.4802,0.269,-0.0066]),SFVec3f([0.5535,0.4329,0.6554]),SFVec3f([0.6285,0.0491,0.6714]),SFVec3f([0.6895,-0.8073,0.6712]),SFVec3f([-0.5838,-0.8052,0.6711]),SFVec3f([-0.4997,0.049,0.6726])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.7624,0.0345]),SFVec2f([0.7525,0.0502]),SFVec2f([0.7571,0.0508]),SFVec2f([0.7729,0.0334]),SFVec2f([0.7734,0.0512]),SFVec2f([0.7924,0.0508]),SFVec2f([0.791,0.0281]),SFVec2f([0.9531,0.2644]),SFVec2f([0.9665,0.2386]),SFVec2f([0.9827,0.2362]),SFVec2f([0.9706,0.2558]),SFVec2f([0.9479,0.2423]),SFVec2f([0.7736,0.0553]),SFVec2f([0.7595,0.0549]),SFVec2f([0.7559,0.0544]),SFVec2f([0.7596,0.0549]),SFVec2f([0.7736,0.0553]),SFVec2f([0.7721,0.0268]),SFVec2f([0.7644,0.0276]),SFVec2f([0.7723,0.0268]),SFVec2f([0.7938,0.0298]),SFVec2f([0.795,0.0487]),SFVec2f([0.9457,0.2448]),SFVec2f([0.9501,0.2632]),SFVec2f([0.7926,0.0543]),SFVec2f([0.7926,0.0544]),SFVec2f([0.7903,0.0215]),SFVec2f([0.7903,0.0215]),SFVec2f([0.9803,0.2531]),SFVec2f([0.9874,0.236]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9532,0.2644]),SFVec2f([0.9832,0.2324]),SFVec2f([0.9795,0.2325]),SFVec2f([0.9656,0.2346]),SFVec2f([0.9721,0.2624]),SFVec2f([0.9795,0.2602]),SFVec2f([0.9719,0.2625]),SFVec2f([0.9502,0.2632]),SFVec2f([0.9457,0.2447]),SFVec2f([0.9471,0.2389]),SFVec2f([0.9471,0.2388]),SFVec2f([0.9551,0.2707]),SFVec2f([0.955,0.2707])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('l_carpometacarpal_4'),
                                                                                                                      DEF_ : SFString('hanim_l_carpometacarpal_4'),
                                                                                                                      center_ : SFVec3f([SFDouble(8.048), SFDouble(30.5), SFDouble(-0.8853)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('l_metacarpal_4'),
                                                                                                                          DEF_ : SFString('hanim_l_metacarpal_4'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(8.048), SFDouble(30.5), SFDouble(-0.8853)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(9), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(29), SFInt32(24), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(2), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(23), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(6), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(6), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(4), SFInt32(5), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(38), SFInt32(9), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(9), SFInt32(38), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(48), SFInt32(51), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(20), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(3), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(37), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(41), SFInt32(37), SFInt32(-1), SFInt32(41), SFInt32(53), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(9), SFInt32(41), SFInt32(-1), SFInt32(9), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(40), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(22), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(33), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(1), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(30), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(35), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(7), SFInt32(15), SFInt32(-1), SFInt32(7), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(38), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(42), SFInt32(38), SFInt32(-1), SFInt32(11), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(36), SFInt32(45), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(42), SFInt32(36), SFInt32(-1), SFInt32(42), SFInt32(16), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(5), SFInt32(10), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([0.6701,-1.109,-0.381]),SFVec3f([-0.5002,-1.109,-0.381]),SFVec3f([0.5854,-2.053,-0.382]),SFVec3f([-0.3852,-2.055,-0.3819]),SFVec3f([0.7573,0.0375,-0.3424]),SFVec3f([-0.6059,0.038,-0.3427]),SFVec3f([0.7345,-1.187,0.3483]),SFVec3f([-0.52,-1.187,0.3483]),SFVec3f([-0.3873,-2.129,0.3239]),SFVec3f([0.6104,-2.129,0.3239]),SFVec3f([0.7943,-0.0173,0.3415]),SFVec3f([-0.648,-0.0149,0.3414]),SFVec3f([0.5243,-2.308,0.28]),SFVec3f([0.497,-2.261,-0.3321]),SFVec3f([-0.2939,-2.263,-0.3318]),SFVec3f([-0.2957,-2.308,0.28]),SFVec3f([0.4894,-2.031,-0.4703]),SFVec3f([0.5729,-1.093,-0.5036]),SFVec3f([0.6547,0.0614,-0.4454]),SFVec3f([-0.4956,0.0619,-0.4456]),SFVec3f([-0.4036,-1.089,-0.5034]),SFVec3f([-0.2898,-2.031,-0.4702]),SFVec3f([-0.2275,-2.181,-0.4572]),SFVec3f([0.4297,-2.18,-0.4575]),SFVec3f([0.6305,-1.198,0.4843]),SFVec3f([0.5217,-2.087,0.416]),SFVec3f([0.4533,-2.218,0.3849]),SFVec3f([-0.2266,-2.218,0.3849]),SFVec3f([-0.2933,-2.087,0.416]),SFVec3f([-0.4181,-1.194,0.4842]),SFVec3f([-0.5616,-0.0205,0.464]),SFVec3f([0.6844,-0.0225,0.4641]),SFVec3f([0.6316,0.1344,-0.2698]),SFVec3f([0.6522,0.1035,0.257]),SFVec3f([-0.5315,0.1057,0.257]),SFVec3f([-0.4839,0.1347,-0.27])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.7939,0.1016]),SFVec2f([0.7938,0.0824]),SFVec2f([0.7694,0.0827]),SFVec2f([0.766,0.1014]),SFVec2f([0.7924,0.0508]),SFVec2f([0.7734,0.0512]),SFVec2f([0.7938,0.0824]),SFVec2f([0.7939,0.1016]),SFVec2f([0.766,0.1015]),SFVec2f([0.965,0.2069]),SFVec2f([0.7734,0.0512]),SFVec2f([0.7924,0.0507]),SFVec2f([0.7909,0.1057]),SFVec2f([0.7677,0.1056]),SFVec2f([0.7677,0.1057]),SFVec2f([0.7909,0.1057]),SFVec2f([0.9517,0.2441]),SFVec2f([0.7765,0.0488]),SFVec2f([0.7765,0.0488]),SFVec2f([0.789,0.0484]),SFVec2f([0.7643,0.0825]),SFVec2f([0.7643,0.0824]),SFVec2f([0.7614,0.1009]),SFVec2f([0.7614,0.1009]),SFVec2f([0.7991,0.0823]),SFVec2f([0.7971,0.0505]),SFVec2f([0.7971,0.0505]),SFVec2f([0.7991,0.0824]),SFVec2f([0.7688,0.0511]),SFVec2f([0.7688,0.0511]),SFVec2f([0.7994,0.1003]),SFVec2f([0.7994,0.1003]),SFVec2f([0.7625,0.1038]),SFVec2f([0.7625,0.1038]),SFVec2f([0.7972,0.1034]),SFVec2f([0.7972,0.1034]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9665,0.2385]),SFVec2f([0.941,0.2114]),SFVec2f([0.9376,0.1925]),SFVec2f([0.9651,0.1878]),SFVec2f([0.9665,0.2386]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9639,0.2415]),SFVec2f([0.9639,0.2415]),SFVec2f([0.9517,0.244]),SFVec2f([0.9701,0.2063]),SFVec2f([0.9698,0.1875]),SFVec2f([0.9358,0.2124]),SFVec2f([0.9433,0.2434]),SFVec2f([0.9433,0.2434]),SFVec2f([0.9358,0.2123]),SFVec2f([0.9711,0.2379]),SFVec2f([0.9711,0.2379])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('l_metacarpophalangeal_4'),
                                                                                                                          DEF_ : SFString('hanim_l_metacarpophalangeal_4'),
                                                                                                                          center_ : SFVec3f([SFDouble(8.164), SFDouble(28.18), SFDouble(-0.9529)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('l_carpal_proximal_phalanx_4'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_proximal_phalanx_4'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(8.164), SFDouble(28.18), SFDouble(-0.9529)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(3), SFInt32(4), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(44), SFInt32(22), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(43), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(4), SFInt32(-1), SFInt32(45), SFInt32(5), SFInt32(32), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(1), SFInt32(17), SFInt32(-1), SFInt32(2), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(23), SFInt32(40), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(42), SFInt32(31), SFInt32(6), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(31), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(33), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(33), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(40), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(42), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(20), SFInt32(31), SFInt32(-1), SFInt32(20), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(30), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(40), SFInt32(23), SFInt32(-1), SFInt32(43), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(22), SFInt32(44), SFInt32(-1), SFInt32(22), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(21), SFInt32(39), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(21), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(45), SFInt32(32), SFInt32(-1), SFInt32(45), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(43), SFInt32(45), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(49), SFInt32(4), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(50), SFInt32(49), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(51), SFInt32(4), SFInt32(46), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(12), SFInt32(17), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(48), SFInt32(54), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(48), SFInt32(-1), SFInt32(11), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(20), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(53), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(24), SFInt32(-1), SFInt32(10), SFInt32(52), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(25), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(25), SFInt32(-1), SFInt32(55), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(7), SFInt32(55), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(0), SFInt32(-1), SFInt32(56), SFInt32(47), SFInt32(7), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(33), SFInt32(-1), SFInt32(6), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(44), SFInt32(-1), SFInt32(39), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(41), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(24), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(27), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(6), SFInt32(26), SFInt32(-1), SFInt32(6), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(30), SFInt32(6), SFInt32(-1), SFInt32(30), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(38), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(1), SFInt32(29), SFInt32(-1), SFInt32(1), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(28), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(5), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(16), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(15), SFInt32(16), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([-0.5138,-1.2,-0.1973]),SFVec3f([0.3321,-1.094,-0.2008]),SFVec3f([-0.1137,-1.228,-0.3178]),SFVec3f([0.411,-0.0395,0.2967]),SFVec3f([0.4111,0.0046,-0.2029]),SFVec3f([-0.4652,0.0046,-0.2029]),SFVec3f([-0.4652,-0.0395,0.2967]),SFVec3f([-0.0566,-0.1,-0.3284]),SFVec3f([-0.4393,-1.371,-0.1653]),SFVec3f([0.1722,-1.457,-0.1917]),SFVec3f([-0.4393,-1.361,0.2347]),SFVec3f([0.1722,-1.444,0.2676]),SFVec3f([-0.1147,-1.489,-0.1915]),SFVec3f([-0.1147,-1.476,0.2775]),SFVec3f([-0.5138,-1.189,0.26]),SFVec3f([-0.1137,-1.211,0.3945]),SFVec3f([-0.0566,-0.1878,0.3836]),SFVec3f([0.3321,-1.083,0.2565]),SFVec3f([0.3332,0.5222,-0.2966]),SFVec3f([0.3334,0.4616,0.3736]),SFVec3f([-0.3997,0.4616,0.3736]),SFVec3f([-0.4034,0.5222,-0.2966]),SFVec3f([0.47,0.2688,-0.3145]),SFVec3f([0.495,0.1933,0.3915]),SFVec3f([0.4732,0.206,0.4381]),SFVec3f([0.389,0.0041,0.442]),SFVec3f([-0.0557,-0.1381,0.4291]),SFVec3f([-0.44,0.0026,0.4421]),SFVec3f([-0.4708,0.2058,0.4382]),SFVec3f([-0.3791,0.4624,0.4513]),SFVec3f([0.3159,0.4624,0.4513]),SFVec3f([-0.5028,0.1933,0.3915]),SFVec3f([-0.5007,0.2672,-0.3143]),SFVec3f([-0.452,0.2987,-0.3662]),SFVec3f([-0.4196,0.0626,-0.374]),SFVec3f([-0.0554,-0.0537,-0.3484]),SFVec3f([0.3712,0.0655,-0.3743]),SFVec3f([0.4489,0.2983,-0.3662]),SFVec3f([0.3034,0.5285,-0.3426]),SFVec3f([-0.3668,0.5285,-0.3426]),SFVec3f([0.411,-0.0513,0.403]),SFVec3f([-0.0566,-0.1886,0.3999]),SFVec3f([-0.4652,-0.0513,0.403]),SFVec3f([-0.0596,-0.0984,-0.3396]),SFVec3f([0.3993,0.0128,-0.3296]),SFVec3f([-0.4652,0.0128,-0.3296])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.7878,0.1071]),SFVec2f([0.7939,0.1016]),SFVec2f([0.766,0.1014]),SFVec2f([0.7709,0.1068]),SFVec2f([0.9594,0.1833]),SFVec2f([0.766,0.1015]),SFVec2f([0.7939,0.1016]),SFVec2f([0.9426,0.186]),SFVec2f([0.7648,0.1066]),SFVec2f([0.9545,0.1568]),SFVec2f([0.9398,0.1599]),SFVec2f([0.771,0.1315]),SFVec2f([0.7861,0.131]),SFVec2f([0.767,0.1345]),SFVec2f([0.7667,0.1094]),SFVec2f([0.7644,0.1092]),SFVec2f([0.7648,0.1066]),SFVec2f([0.7904,0.1338]),SFVec2f([0.786,0.139]),SFVec2f([0.7863,0.1397]),SFVec2f([0.9402,0.1559]),SFVec2f([0.9531,0.1532]),SFVec2f([0.7709,0.1396]),SFVec2f([0.7709,0.1403]),SFVec2f([0.794,0.107]),SFVec2f([0.7917,0.1102]),SFVec2f([0.794,0.107]),SFVec2f([0.7939,0.1101]),SFVec2f([0.7675,0.0958]),SFVec2f([0.7934,0.0956]),SFVec2f([0.7934,0.0956]),SFVec2f([0.7675,0.0958]),SFVec2f([0.7967,0.1011]),SFVec2f([0.7964,0.1056]),SFVec2f([0.7964,0.1088]),SFVec2f([0.7964,0.1057]),SFVec2f([0.7967,0.1011]),SFVec2f([0.7958,0.0955]),SFVec2f([0.7958,0.0955]),SFVec2f([0.7633,0.1008]),SFVec2f([0.7625,0.1056]),SFVec2f([0.7622,0.1084]),SFVec2f([0.7625,0.1055]),SFVec2f([0.7633,0.1008]),SFVec2f([0.765,0.0957]),SFVec2f([0.765,0.0957]),SFVec2f([0.9651,0.1878]),SFVec2f([0.9376,0.1925]),SFVec2f([0.9583,0.1554]),SFVec2f([0.963,0.1801]),SFVec2f([0.9654,0.1799]),SFVec2f([0.9654,0.1826]),SFVec2f([0.9354,0.1602]),SFVec2f([0.9385,0.1536]),SFVec2f([0.9536,0.1504]),SFVec2f([0.9383,0.1837]),SFVec2f([0.9366,0.1872]),SFVec2f([0.9361,0.1842])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('l_carpal_proximal_interphalangeal_4'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_proximal_interphalangeal_4'),
                                                                                                                              center_ : SFVec3f([SFDouble(8.076), SFDouble(26.959999), SFDouble(-0.9176)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('l_carpal_middle_phalanx_4'),
                                                                                                                                  DEF_ : SFString('hanim_l_carpal_middle_phalanx_4'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(8.076), SFDouble(26.959999), SFDouble(-0.9176)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(1), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(2), SFInt32(15), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(16), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(28), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(20), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(18), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.0823,-1.173,-0.2984]),SFVec3f([-0.4234,-1.145,0.233]),SFVec3f([0.2949,-1.031,0.2378]),SFVec3f([0.3843,-0.1818,0.2296]),SFVec3f([0.3843,-0.1915,-0.2186]),SFVec3f([-0.4256,0.0168,-0.2326]),SFVec3f([0.4203,0.1233,-0.236]),SFVec3f([-0.4256,0.0279,0.2247]),SFVec3f([0.4203,0.1344,0.2212]),SFVec3f([-0.2414,0.2148,-0.2328]),SFVec3f([-0.2414,0.2245,0.2154]),SFVec3f([0.1761,0.2138,0.2158]),SFVec3f([0.1761,0.2041,-0.2324]),SFVec3f([-0.0255,-0.0114,-0.3531]),SFVec3f([-0.0255,0.0059,0.3593]),SFVec3f([-0.0827,-1.161,0.3475]),SFVec3f([0.1702,-1.388,0.2311]),SFVec3f([-0.0744,-1.4,0.2378]),SFVec3f([-0.4231,-1.153,-0.1983]),SFVec3f([-0.3548,-1.316,0.2013]),SFVec3f([-0.3546,-1.322,-0.1549]),SFVec3f([0.2952,-1.04,-0.2103]),SFVec3f([0.1705,-1.395,-0.1779]),SFVec3f([-0.0732,-1.433,-0.1776])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.9398,0.1599]),SFVec2f([0.7904,0.1338]),SFVec2f([0.7888,0.1598]),SFVec2f([0.9363,0.1341]),SFVec2f([0.7861,0.131]),SFVec2f([0.7859,0.138]),SFVec2f([0.9502,0.1313]),SFVec2f([0.9545,0.1568]),SFVec2f([0.7712,0.1385]),SFVec2f([0.7707,0.1575]),SFVec2f([0.7854,0.1571]),SFVec2f([0.771,0.1315]),SFVec2f([0.767,0.1345]),SFVec2f([0.7676,0.1604]),SFVec2f([0.786,0.1292]),SFVec2f([0.7713,0.1297]),SFVec2f([0.786,0.129]),SFVec2f([0.7713,0.1294]),SFVec2f([0.7847,0.165]),SFVec2f([0.7849,0.1652]),SFVec2f([0.9369,0.1301]),SFVec2f([0.9483,0.1278]),SFVec2f([0.7712,0.1654]),SFVec2f([0.7712,0.1661]),SFVec2f([0.9354,0.1602]),SFVec2f([0.9325,0.1343]),SFVec2f([0.9583,0.1554]),SFVec2f([0.9533,0.1301]),SFVec2f([0.9406,0.1642]),SFVec2f([0.9551,0.1612]),SFVec2f([0.9355,0.1283]),SFVec2f([0.9488,0.1251])])))))]),

                                                                                                                                HAnimJoint(
                                                                                                                                  name_ : SFString('l_carpal_distal_interphalangeal_4'),
                                                                                                                                  DEF_ : SFString('hanim_l_carpal_distal_interphalangeal_4'),
                                                                                                                                  center_ : SFVec3f([SFDouble(8.03), SFDouble(25.809999), SFDouble(-0.879)]),
                                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  children_ : [
                                                                                                                                    HAnimSegment(
                                                                                                                                      name_ : SFString('l_carpal_distal_phalanx_4'),
                                                                                                                                      DEF_ : SFString('hanim_l_carpal_distal_phalanx_4'),
                                                                                                                                      children_ : [
                                                                                                                                        Transform(
                                                                                                                                          translation_ : SFVec3f([SFDouble(8.03), SFDouble(25.809999), SFDouble(-0.879)]),
                                                                                                                                          child_ : 
                                                                                                                                            Shape(
                                                                                                                                              appearance_ : 
                                                                                                                                                Appearance(
                                                                                                                                                  material_ : 
                                                                                                                                                    Material(
                                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                                  texture_ : 
                                                                                                                                                    ImageTexture(
                                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                              geometry_ : 
                                                                                                                                                IndexedFaceSet(
                                                                                                                                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(25), SFInt32(31), SFInt32(-1), SFInt32(24), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(23), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(31), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(23), SFInt32(-1), SFInt32(32), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(32), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(23), SFInt32(31), SFInt32(28), SFInt32(-1)]),
                                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(33), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(35), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(39), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(23), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(41), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(38), SFInt32(41), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(43), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(33), SFInt32(42), SFInt32(-1)]),
                                                                                                                                                  coord_ : 
                                                                                                                                                    Coordinate(
                                                                                                                                                      point_ : MFVec3f([SFVec3f([0.3166,-0.1433,0.2079]),SFVec3f([0.3169,-0.1519,-0.2403]),SFVec3f([0.2442,-0.5193,0.1944]),SFVec3f([0.2444,-0.5269,-0.2171]),SFVec3f([-0.3527,-0.4861,0.211]),SFVec3f([-0.0799,-0.5048,0.29]),SFVec3f([-0.3524,-0.4944,-0.236]),SFVec3f([-0.0795,-0.516,-0.3155]),SFVec3f([0.1361,-0.8158,0.1702]),SFVec3f([0.1363,-0.8223,-0.1824]),SFVec3f([-0.3546,-0.7984,0.165]),SFVec3f([-0.1169,-0.8256,0.2434]),SFVec3f([-0.3544,-0.8046,-0.1727]),SFVec3f([-0.1165,-0.8348,-0.2533]),SFVec3f([0.1687,-0.903,-0.0042]),SFVec3f([-0.3182,-0.9029,-0.0045]),SFVec3f([-0.1176,-0.9628,-0.0024]),SFVec3f([0.1644,-0.8834,0.0927]),SFVec3f([-0.3222,-0.8834,-0.0869]),SFVec3f([-0.1048,-0.9305,0.1259]),SFVec3f([0.1646,-0.8882,-0.0967]),SFVec3f([-0.3224,-0.8794,0.0812]),SFVec3f([-0.1044,-0.9401,-0.1237]),SFVec3f([-0.3778,0.0076,0.1944]),SFVec3f([0.3408,0.113,-0.2488]),SFVec3f([0.3405,0.1215,0.1993]),SFVec3f([0.1324,0.2059,0.1802]),SFVec3f([0.1327,0.198,-0.2349]),SFVec3f([-0.2261,0.2084,0.1799]),SFVec3f([-0.3775,-0.0006,-0.2368]),SFVec3f([-0.2258,0.2005,-0.2353]),SFVec3f([-0.0351,-0.0081,0.3088]),SFVec3f([-0.0347,-0.0204,-0.3369])])),
                                                                                                                                                  texCoord_ : 
                                                                                                                                                    TextureCoordinate(
                                                                                                                                                      point_ : MFVec2f([SFVec2f([0.7853,0.163]),SFVec2f([0.7888,0.1598]),SFVec2f([0.7854,0.1571]),SFVec2f([0.7707,0.1575]),SFVec2f([0.7676,0.1604]),SFVec2f([0.7706,0.1634]),SFVec2f([0.7714,0.1739]),SFVec2f([0.7841,0.1736]),SFVec2f([0.787,0.1731]),SFVec2f([0.9344,0.121]),SFVec2f([0.9363,0.1341]),SFVec2f([0.9479,0.1182]),SFVec2f([0.9502,0.1313]),SFVec2f([0.7684,0.1736]),SFVec2f([0.7774,0.1846]),SFVec2f([0.7801,0.1842]),SFVec2f([0.7824,0.1828]),SFVec2f([0.7844,0.1829]),SFVec2f([0.9351,0.111]),SFVec2f([0.9443,0.1091]),SFVec2f([0.9372,0.109]),SFVec2f([0.9418,0.1081]),SFVec2f([0.7705,0.1833]),SFVec2f([0.7725,0.1831]),SFVec2f([0.781,0.1849]),SFVec2f([0.7774,0.1856]),SFVec2f([0.7748,0.1843]),SFVec2f([0.774,0.1852]),SFVec2f([0.9395,0.1081]),SFVec2f([0.7849,0.1552]),SFVec2f([0.7712,0.1555]),SFVec2f([0.7849,0.1549]),SFVec2f([0.7712,0.1553]),SFVec2f([0.9325,0.1343]),SFVec2f([0.9533,0.1301]),SFVec2f([0.9319,0.1209]),SFVec2f([0.9502,0.1172]),SFVec2f([0.9329,0.1108]),SFVec2f([0.9464,0.108]),SFVec2f([0.9358,0.1082]),SFVec2f([0.9393,0.1069]),SFVec2f([0.9427,0.1067]),SFVec2f([0.9372,0.1384]),SFVec2f([0.9506,0.1357])])))))])])])])])]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('l_carpometacarpal_5'),
                                                                                                                  DEF_ : SFString('hanim_l_carpometacarpal_5'),
                                                                                                                  center_ : SFVec3f([SFDouble(8.073), SFDouble(30.59), SFDouble(-1.457)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('l_metacarpal_5'),
                                                                                                                      DEF_ : SFString('hanim_l_metacarpal_5'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(8.073), SFDouble(30.59), SFDouble(-1.457)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(11), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(25), SFInt32(20), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(32), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(15), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(12), SFInt32(19), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(32), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(14), SFInt32(13), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(34), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(37), SFInt32(34), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(35), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(16), SFInt32(40), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(45), SFInt32(43), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(45), SFInt32(25), SFInt32(-1), SFInt32(0), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(18), SFInt32(15), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(18), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(19), SFInt32(0), SFInt32(-1), SFInt32(19), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(14), SFInt32(23), SFInt32(-1), SFInt32(14), SFInt32(29), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(38), SFInt32(40), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(38), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(36), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(25), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(37), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(36), SFInt32(45), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(12), SFInt32(36), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([0.5437,-1.115,-0.3876]),SFVec3f([-0.4574,-1.115,-0.3875]),SFVec3f([0.0391,-1.055,-0.5375]),SFVec3f([0.5003,-2.035,-0.4225]),SFVec3f([-0.3976,-2.035,-0.4225]),SFVec3f([0.0194,-2.01,-0.5522]),SFVec3f([-0.4806,0.0289,-0.2234]),SFVec3f([0.0559,0.0724,-0.359]),SFVec3f([0.5551,0.0256,-0.2224]),SFVec3f([0.6458,-1.204,0.1909]),SFVec3f([-0.5245,-1.204,0.1909]),SFVec3f([0.5611,-2.149,0.1899]),SFVec3f([-0.4095,-2.15,0.19]),SFVec3f([0.733,-0.0582,0.2295]),SFVec3f([-0.6302,-0.0576,0.2292]),SFVec3f([0.4048,-2.339,0.1195]),SFVec3f([0.3316,-2.225,-0.3174]),SFVec3f([0.0208,-2.205,-0.4092]),SFVec3f([-0.2611,-2.224,-0.3218]),SFVec3f([-0.2696,-2.34,0.1198]),SFVec3f([0.5486,-1.22,0.3281]),SFVec3f([0.4658,-2.148,0.2836]),SFVec3f([0.3509,-2.289,0.2567]),SFVec3f([-0.2127,-2.29,0.257]),SFVec3f([-0.3146,-2.15,0.283]),SFVec3f([-0.4279,-1.216,0.3283]),SFVec3f([-0.5199,-0.0723,0.3338]),SFVec3f([0.6304,-0.0728,0.334]),SFVec3f([-0.4381,0.0771,0.139]),SFVec3f([-0.358,0.1199,-0.1192]),SFVec3f([0.0563,0.1597,-0.2281]),SFVec3f([0.4414,0.1179,-0.1236]),SFVec3f([0.5384,0.0772,0.1392])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.766,0.1014]),SFVec2f([0.7694,0.0827]),SFVec2f([0.748,0.0813]),SFVec2f([0.7455,0.0995]),SFVec2f([0.7415,0.0989]),SFVec2f([0.7435,0.0798]),SFVec2f([0.9864,0.2045]),SFVec2f([0.7455,0.0995]),SFVec2f([0.7734,0.0512]),SFVec2f([0.7571,0.0508]),SFVec2f([0.7525,0.0502]),SFVec2f([0.9827,0.2362]),SFVec2f([0.9665,0.2386]),SFVec2f([0.7694,0.0827]),SFVec2f([0.766,0.1015]),SFVec2f([0.774,0.0829]),SFVec2f([0.9619,0.2395]),SFVec2f([0.7782,0.0512]),SFVec2f([0.774,0.083]),SFVec2f([0.7619,0.1052]),SFVec2f([0.7474,0.1039]),SFVec2f([0.7446,0.1034]),SFVec2f([0.7473,0.1038]),SFVec2f([0.7619,0.1052]),SFVec2f([0.9712,0.2404]),SFVec2f([0.9799,0.239]),SFVec2f([0.7566,0.0479]),SFVec2f([0.7602,0.0485]),SFVec2f([0.7691,0.0486]),SFVec2f([0.771,0.1015]),SFVec2f([0.771,0.1014]),SFVec2f([0.768,0.1042]),SFVec2f([0.768,0.1042]),SFVec2f([0.9897,0.1861]),SFVec2f([0.991,0.2053]),SFVec2f([0.9856,0.1862]),SFVec2f([0.9665,0.2385]),SFVec2f([0.9874,0.236]),SFVec2f([0.965,0.2069]),SFVec2f([0.9651,0.1878]),SFVec2f([0.9604,0.2075]),SFVec2f([0.9619,0.2395]),SFVec2f([0.9604,0.2074]),SFVec2f([0.9836,0.239]),SFVec2f([0.98,0.239]),SFVec2f([0.9712,0.2404])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('l_metacarpophalangeal_5'),
                                                                                                                      DEF_ : SFString('hanim_l_metacarpophalangeal_5'),
                                                                                                                      center_ : SFVec3f([SFDouble(8.148), SFDouble(28.360001), SFDouble(-1.647)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('l_carpal_proximal_phalanx_5'),
                                                                                                                          DEF_ : SFString('hanim_l_carpal_proximal_phalanx_5'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(8.148), SFDouble(28.360001), SFDouble(-1.647)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(10), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(11), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(17), SFInt32(13), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(2), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(35), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(37), SFInt32(26), SFInt32(15), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(17), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(25), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(36), SFInt32(-1), SFInt32(34), SFInt32(18), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(34), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(37), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(37), SFInt32(35), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(37), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(40), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(39), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(14), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(40), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(42), SFInt32(40), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(5), SFInt32(38), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(45), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(17), SFInt32(45), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(46), SFInt32(44), SFInt32(17), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(13), SFInt32(-1), SFInt32(42), SFInt32(14), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(48), SFInt32(42), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(15), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(25), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(15), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(34), SFInt32(-1), SFInt32(31), SFInt32(37), SFInt32(34), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(26), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(26), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(20), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(16), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(27), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(31), SFInt32(16), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(22), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([-0.4642,-0.7495,-0.198]),SFVec3f([0.3252,-0.6614,-0.2139]),SFVec3f([-0.1225,-0.7652,-0.3144]),SFVec3f([-0.3819,-0.8842,-0.1714]),SFVec3f([0.1725,-0.9506,-0.2008]),SFVec3f([-0.3815,-0.8908,0.17]),SFVec3f([0.1732,-0.9591,0.196]),SFVec3f([-0.1212,-0.9744,-0.2024]),SFVec3f([-0.1212,-0.9799,0.1724]),SFVec3f([-0.4638,-0.7583,0.2054]),SFVec3f([-0.0985,-0.7824,0.3322]),SFVec3f([0.3257,-0.6667,0.2084]),SFVec3f([0.3886,-0.1527,0.2568]),SFVec3f([0.3804,-0.0337,-0.2228]),SFVec3f([-0.4441,-0.0337,-0.2228]),SFVec3f([-0.4467,-0.1527,0.2568]),SFVec3f([-0.0472,-0.285,0.3442]),SFVec3f([-0.0564,-0.0045,-0.3471]),SFVec3f([0.3248,0.3476,0.3745]),SFVec3f([0.2574,0.4555,-0.1484]),SFVec3f([-0.0759,0.4741,-0.2587]),SFVec3f([-0.3915,0.4551,-0.1427]),SFVec3f([-0.395,0.3464,0.3802]),SFVec3f([0.4245,0.194,-0.2327]),SFVec3f([-0.0564,0.2188,-0.3624]),SFVec3f([-0.4734,0.194,-0.2327]),SFVec3f([-0.4853,0.0785,0.3798]),SFVec3f([-0.4534,0.1007,0.43]),SFVec3f([-0.4249,-0.1391,0.4083]),SFVec3f([-0.0362,-0.2455,0.3725]),SFVec3f([0.3609,-0.1363,0.4097]),SFVec3f([0.4385,0.1031,0.4238]),SFVec3f([0.2998,0.3409,0.4133]),SFVec3f([-0.3633,0.3398,0.4186]),SFVec3f([0.4853,0.08,0.3796]),SFVec3f([-0.0442,-0.2871,0.3545]),SFVec3f([0.4146,-0.1759,0.3644]),SFVec3f([-0.4498,-0.1759,0.3644])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.7578,0.1276]),SFVec2f([0.7543,0.1247]),SFVec2f([0.753,0.131]),SFVec2f([0.7531,0.1316]),SFVec2f([0.9854,0.1598]),SFVec2f([0.9725,0.1615]),SFVec2f([0.9734,0.1584]),SFVec2f([0.9844,0.1569]),SFVec2f([0.7413,0.123]),SFVec2f([0.7403,0.1293]),SFVec2f([0.7378,0.1249]),SFVec2f([0.7401,0.1299]),SFVec2f([0.7405,0.104]),SFVec2f([0.7443,0.1047]),SFVec2f([0.9859,0.1809]),SFVec2f([0.7455,0.0995]),SFVec2f([0.766,0.1015]),SFVec2f([0.9713,0.1822]),SFVec2f([0.7589,0.1059]),SFVec2f([0.7648,0.1066]),SFVec2f([0.766,0.1014]),SFVec2f([0.7622,0.1091]),SFVec2f([0.7648,0.1066]),SFVec2f([0.7644,0.1092]),SFVec2f([0.7455,0.0995]),SFVec2f([0.7415,0.0989]),SFVec2f([0.7664,0.0954]),SFVec2f([0.7667,0.0954]),SFVec2f([0.7485,0.0932]),SFVec2f([0.7449,0.0928]),SFVec2f([0.7484,0.0932]),SFVec2f([0.7683,0.1016]),SFVec2f([0.7686,0.0957]),SFVec2f([0.7683,0.0956]),SFVec2f([0.7679,0.1015]),SFVec2f([0.7671,0.1055]),SFVec2f([0.7666,0.1084]),SFVec2f([0.7674,0.1056]),SFVec2f([0.9687,0.1615]),SFVec2f([0.9723,0.1564]),SFVec2f([0.9888,0.1589]),SFVec2f([0.9852,0.1547]),SFVec2f([0.9898,0.1809]),SFVec2f([0.9856,0.1862]),SFVec2f([0.9651,0.1878]),SFVec2f([0.9675,0.1796]),SFVec2f([0.9654,0.1826]),SFVec2f([0.9654,0.1799]),SFVec2f([0.9897,0.1861])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('l_carpal_proximal_interphalangeal_5'),
                                                                                                                          DEF_ : SFString('hanim_l_carpal_proximal_interphalangeal_5'),
                                                                                                                          center_ : SFVec3f([SFDouble(8.074), SFDouble(27.6), SFDouble(-1.651)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('l_carpal_middle_phalanx_5'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_middle_phalanx_5'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(8.074), SFDouble(27.6), SFDouble(-1.651)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(2), SFInt32(15), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(16), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(28), SFInt32(-1), SFInt32(2), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(20), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(18), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([-0.0741,-0.8302,-0.2909]),SFVec3f([-0.4065,-0.7938,0.2106]),SFVec3f([0.2852,-0.7166,0.2155]),SFVec3f([0.3712,-0.1511,0.2041]),SFVec3f([0.3704,-0.1424,-0.1993]),SFVec3f([-0.39,0.0139,-0.1936]),SFVec3f([0.3995,0.102,-0.2097]),SFVec3f([-0.3896,0.0051,0.2098]),SFVec3f([0.3999,0.0967,0.2127]),SFVec3f([-0.2215,0.1643,-0.2071]),SFVec3f([-0.2211,0.159,0.2152]),SFVec3f([0.1513,0.144,0.2149]),SFVec3f([0.1509,0.1492,-0.2074]),SFVec3f([-0.0482,-0.0018,-0.31]),SFVec3f([-0.0243,-0.0191,0.3367]),SFVec3f([-0.0741,-0.8107,0.3219]),SFVec3f([0.1923,-0.9968,0.2082]),SFVec3f([0.0494,-1.016,0.2148]),SFVec3f([-0.4065,-0.8068,-0.1935]),SFVec3f([-0.3533,-0.9288,0.1795]),SFVec3f([-0.3325,-0.9376,-0.1473]),SFVec3f([0.2865,-0.7301,-0.2049]),SFVec3f([0.1934,-1.008,-0.1699]),SFVec3f([0.0523,-1.023,-0.1696])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.9725,0.1615]),SFVec2f([0.7578,0.1276]),SFVec2f([0.7541,0.1444]),SFVec2f([0.9727,0.1441]),SFVec2f([0.7543,0.1247]),SFVec2f([0.7533,0.1302]),SFVec2f([0.9851,0.1424]),SFVec2f([0.9854,0.1598]),SFVec2f([0.7404,0.1285]),SFVec2f([0.7384,0.1404]),SFVec2f([0.7513,0.1418]),SFVec2f([0.7413,0.123]),SFVec2f([0.7378,0.1249]),SFVec2f([0.7355,0.1424]),SFVec2f([0.7545,0.1231]),SFVec2f([0.7416,0.1216]),SFVec2f([0.7546,0.1229]),SFVec2f([0.7417,0.1214]),SFVec2f([0.7496,0.1479]),SFVec2f([0.7498,0.1481]),SFVec2f([0.9738,0.1409]),SFVec2f([0.9839,0.1396]),SFVec2f([0.738,0.1467]),SFVec2f([0.7381,0.1469]),SFVec2f([0.9687,0.1616]),SFVec2f([0.9694,0.1441]),SFVec2f([0.9888,0.1589]),SFVec2f([0.988,0.1416]),SFVec2f([0.9725,0.165]),SFVec2f([0.9854,0.1633]),SFVec2f([0.9728,0.1395]),SFVec2f([0.9846,0.1375])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('l_carpal_distal_interphalangeal_5'),
                                                                                                                              DEF_ : SFString('hanim_l_carpal_distal_interphalangeal_5'),
                                                                                                                              center_ : SFVec3f([SFDouble(8.036), SFDouble(26.77), SFDouble(-1.643)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('l_carpal_distal_phalanx_5'),
                                                                                                                                  DEF_ : SFString('hanim_l_carpal_distal_phalanx_5'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(8.036), SFDouble(26.77), SFDouble(-1.643)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(25), SFInt32(31), SFInt32(-1), SFInt32(24), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(23), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(31), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(23), SFInt32(-1), SFInt32(32), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(32), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(23), SFInt32(31), SFInt32(28), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(33), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(7), SFInt32(-1), SFInt32(35), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(37), SFInt32(35), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(36), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(39), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(23), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(41), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(38), SFInt32(41), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(43), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(33), SFInt32(42), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0.3162,-0.096,0.2149]),SFVec3f([0.3173,-0.1084,-0.2014]),SFVec3f([0.2869,-0.4777,0.206]),SFVec3f([0.2893,-0.4895,-0.1842]),SFVec3f([-0.356,-0.4937,0.2218]),SFVec3f([-0.0434,-0.4877,0.2966]),SFVec3f([-0.3534,-0.5065,-0.2021]),SFVec3f([-0.0399,-0.5052,-0.2775]),SFVec3f([0.2353,-0.7717,0.1879]),SFVec3f([0.2379,-0.7821,-0.1539]),SFVec3f([-0.3642,-0.8042,0.183]),SFVec3f([-0.07,-0.801,0.2589]),SFVec3f([-0.3616,-0.8141,-0.1443]),SFVec3f([-0.0662,-0.8155,-0.2226]),SFVec3f([0.2582,-0.8386,0.0187]),SFVec3f([-0.3003,-0.8841,0.0184]),SFVec3f([-0.0496,-0.9109,0.0203]),SFVec3f([0.2493,-0.8224,0.1126]),SFVec3f([-0.3082,-0.8707,-0.0614]),SFVec3f([-0.0381,-0.8827,0.1448]),SFVec3f([0.251,-0.829,-0.0709]),SFVec3f([-0.3096,-0.8651,0.1015]),SFVec3f([-0.0353,-0.8939,-0.0972]),SFVec3f([-0.366,0.0343,0.2021]),SFVec3f([0.3269,0.0982,-0.2135]),SFVec3f([0.3256,0.1116,0.207]),SFVec3f([0.1179,0.1798,0.1886]),SFVec3f([0.1179,0.1673,-0.1998]),SFVec3f([-0.2301,0.1882,0.1883]),SFVec3f([-0.366,0.0213,-0.202]),SFVec3f([-0.2301,0.1757,-0.2001]),SFVec3f([-0.032,0.0176,0.3133]),SFVec3f([-0.032,-0.0019,-0.2994])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.7505,0.1465]),SFVec2f([0.7541,0.1444]),SFVec2f([0.7513,0.1418]),SFVec2f([0.7384,0.1404]),SFVec2f([0.7355,0.1424]),SFVec2f([0.7377,0.1451]),SFVec2f([0.7372,0.1554]),SFVec2f([0.7483,0.1563]),SFVec2f([0.7507,0.1564]),SFVec2f([0.9726,0.1318]),SFVec2f([0.9727,0.1441]),SFVec2f([0.9847,0.1302]),SFVec2f([0.9851,0.1424]),SFVec2f([0.7347,0.1548]),SFVec2f([0.7409,0.1641]),SFVec2f([0.7434,0.1641]),SFVec2f([0.7455,0.1632]),SFVec2f([0.7469,0.164]),SFVec2f([0.9746,0.124]),SFVec2f([0.9828,0.1229]),SFVec2f([0.9766,0.1225]),SFVec2f([0.9807,0.1219]),SFVec2f([0.7351,0.1625]),SFVec2f([0.7369,0.1626]),SFVec2f([0.7443,0.165]),SFVec2f([0.7408,0.1649]),SFVec2f([0.7387,0.1637]),SFVec2f([0.7379,0.1643]),SFVec2f([0.9788,0.1219]),SFVec2f([0.7512,0.1402]),SFVec2f([0.7392,0.1389]),SFVec2f([0.7512,0.14]),SFVec2f([0.7393,0.1388]),SFVec2f([0.9694,0.1441]),SFVec2f([0.988,0.1416]),SFVec2f([0.9705,0.1317]),SFVec2f([0.9868,0.1295]),SFVec2f([0.9727,0.1237]),SFVec2f([0.9848,0.1221]),SFVec2f([0.9756,0.1218]),SFVec2f([0.9787,0.1209]),SFVec2f([0.9817,0.1209]),SFVec2f([0.973,0.1475]),SFVec2f([0.9849,0.146])])))))])])])])])])])])])]),

                                                                                            HAnimJoint(
                                                                                              name_ : SFString('r_sternoclavicular'),
                                                                                              DEF_ : SFString('hanim_r_sternoclavicular'),
                                                                                              center_ : SFVec3f([SFDouble(-1.71), SFDouble(53.720001), SFDouble(-0.6127)]),
                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                              children_ : [
                                                                                                HAnimSegment(
                                                                                                  name_ : SFString('r_clavicle'),
                                                                                                  DEF_ : SFString('hanim_r_clavicle'),
                                                                                                  children_ : [
                                                                                                    Transform(
                                                                                                      translation_ : SFVec3f([SFDouble(-1.71), SFDouble(53.720001), SFDouble(-0.6127)]),
                                                                                                      child_ : 
                                                                                                        Shape(
                                                                                                          appearance_ : 
                                                                                                            Appearance(
                                                                                                              material_ : 
                                                                                                                Material(
                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                              texture_ : 
                                                                                                                ImageTexture(
                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                          geometry_ : 
                                                                                                            IndexedFaceSet(
                                                                                                              coordIndex_ : MFInt32([SFInt32(9), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(5), SFInt32(-1)]),
                                                                                                              creaseAngle_ : 3.14159,
                                                                                                              texCoordIndex_ : MFInt32([SFInt32(9), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(5), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(5), SFInt32(-1)]),
                                                                                                              coord_ : 
                                                                                                                Coordinate(
                                                                                                                  point_ : MFVec3f([SFVec3f([-4.99,0.104,-0.8644]),SFVec3f([-5.073,0.4993,0.047]),SFVec3f([-4.706,0.1695,1.198]),SFVec3f([-4.631,-1.819,1.104]),SFVec3f([-4.586,-1.648,-0.1248]),SFVec3f([-3.376,0.3884,1.771]),SFVec3f([-3.891,0.989,-0.0537]),SFVec3f([-4.193,-2.49,-0.5713]),SFVec3f([-4.388,-2.49,1.429]),SFVec3f([-3.761,0.3238,-1.692]),SFVec3f([0.1237,0.6312,-0.1883]),SFVec3f([0.1237,0.3007,-0.9426]),SFVec3f([0.1237,-1.418,-0.2577]),SFVec3f([0.1237,-1.392,0.6264]),SFVec3f([0.1237,0.2586,0.8179])])),
                                                                                                              texCoord_ : 
                                                                                                                TextureCoordinate(
                                                                                                                  point_ : MFVec2f([SFVec2f([0.1911,0.4797]),SFVec2f([0.171,0.4832]),SFVec2f([0.1497,0.4806]),SFVec2f([0.1519,0.4334]),SFVec2f([0.1831,0.4416]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1708,0.4854]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1963,0.4863]),SFVec2f([0.19,0.5091]),SFVec2f([0.1847,0.499]),SFVec2f([0.172,0.4382]),SFVec2f([0.1568,0.4457]),SFVec2f([0.1409,0.4926])])))))]),

                                                                                                HAnimJoint(
                                                                                                  name_ : SFString('r_acromioclavicular'),
                                                                                                  DEF_ : SFString('hanim_r_acromioclavicular'),
                                                                                                  center_ : SFVec3f([SFDouble(-5.464), SFDouble(52.970001), SFDouble(-0.5732)]),
                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                  children_ : [
                                                                                                    HAnimSegment(
                                                                                                      name_ : SFString('r_scapula'),
                                                                                                      DEF_ : SFString('hanim_r_scapula'),
                                                                                                      children_ : [
                                                                                                        Transform(
                                                                                                          translation_ : SFVec3f([SFDouble(-5.464), SFDouble(52.970001), SFDouble(-0.5732)]),
                                                                                                          child_ : 
                                                                                                            Shape(
                                                                                                              appearance_ : 
                                                                                                                Appearance(
                                                                                                                  material_ : 
                                                                                                                    Material(
                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                  texture_ : 
                                                                                                                    ImageTexture(
                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                              geometry_ : 
                                                                                                                IndexedFaceSet(
                                                                                                                  coordIndex_ : MFInt32([SFInt32(5), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(10), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(10), SFInt32(-1)]),
                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(5), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(14), SFInt32(-1)]),
                                                                                                                  coord_ : 
                                                                                                                    Coordinate(
                                                                                                                      point_ : MFVec3f([SFVec3f([-1.935,1.466,-0.0932]),SFVec3f([-1.515,0.6492,-1.732]),SFVec3f([-1.534,0.7105,1.619]),SFVec3f([0.3782,1.139,1.732]),SFVec3f([-0.1374,1.74,-0.0932]),SFVec3f([-0.0076,1.074,-1.731]),SFVec3f([-0.8341,-1.572,1.39]),SFVec3f([-0.4391,-1.74,-0.6109]),SFVec3f([-0.8275,-1.58,-0.6098]),SFVec3f([-0.6342,-1.74,1.389]),SFVec3f([1.237,1.407,-0.0712]),SFVec3f([1.547,0.8515,-1.142]),SFVec3f([0.7525,-1.603,-0.4744]),SFVec3f([0.7511,-1.595,1.16]),SFVec3f([1.51,1.034,1.296]),SFVec3f([1.59,-0.0185,0.1351])])),
                                                                                                                  texCoord_ : 
                                                                                                                    TextureCoordinate(
                                                                                                                      point_ : MFVec2f([SFVec2f([0.1715,0.4655]),SFVec2f([0.1797,0.4646]),SFVec2f([0.1569,0.4642]),SFVec2f([0.1474,0.4856]),SFVec2f([0.1708,0.4854]),SFVec2f([0.1963,0.4863]),SFVec2f([0.1544,0.4288]),SFVec2f([0.1782,0.4286]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1544,0.4288]),SFVec2f([0.1782,0.4286]),SFVec2f([0.1538,0.4251]),SFVec2f([0.1784,0.4249]),SFVec2f([0.1703,0.4865]),SFVec2f([0.1895,0.487]),SFVec2f([0.1761,0.4271]),SFVec2f([0.1552,0.4287]),SFVec2f([0.1491,0.4835]),SFVec2f([0.1671,0.4618])])))))]),

                                                                                                    HAnimJoint(
                                                                                                      name_ : SFString('r_shoulder'),
                                                                                                      DEF_ : SFString('hanim_r_shoulder'),
                                                                                                      center_ : SFVec3f([SFDouble(-7.32), SFDouble(52.380001), SFDouble(-0.1452)]),
                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                      children_ : [
                                                                                                        HAnimSegment(
                                                                                                          name_ : SFString('r_upperarm'),
                                                                                                          DEF_ : SFString('hanim_r_upperarm'),
                                                                                                          children_ : [
                                                                                                            Transform(
                                                                                                              translation_ : SFVec3f([SFDouble(-7.32), SFDouble(52.380001), SFDouble(-0.1452)]),
                                                                                                              child_ : 
                                                                                                                Shape(
                                                                                                                  appearance_ : 
                                                                                                                    Appearance(
                                                                                                                      material_ : 
                                                                                                                        Material(
                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                      texture_ : 
                                                                                                                        ImageTexture(
                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                  geometry_ : 
                                                                                                                    IndexedFaceSet(
                                                                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(35), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(26), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(28), SFInt32(43), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(29), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(25), SFInt32(40), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(29), SFInt32(25), SFInt32(-1), SFInt32(31), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(32), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(33), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(34), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(30), SFInt32(25), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(34), SFInt32(30), SFInt32(-1), SFInt32(36), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(39), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(35), SFInt32(30), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(39), SFInt32(35), SFInt32(-1)]),
                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(55), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(25), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(14), SFInt32(29), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(49), SFInt32(-1), SFInt32(36), SFInt32(49), SFInt32(48), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(48), SFInt32(-1), SFInt32(20), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(22), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(19), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(24), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(21), SFInt32(-1), SFInt32(38), SFInt32(57), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(39), SFInt32(38), SFInt32(-1), SFInt32(40), SFInt32(59), SFInt32(58), SFInt32(-1), SFInt32(58), SFInt32(50), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(60), SFInt32(59), SFInt32(-1), SFInt32(59), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(61), SFInt32(60), SFInt32(-1), SFInt32(60), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(39), SFInt32(56), SFInt32(61), SFInt32(-1), SFInt32(61), SFInt32(42), SFInt32(39), SFInt32(-1), SFInt32(43), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(45), SFInt32(40), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(52), SFInt32(45), SFInt32(-1), SFInt32(46), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(42), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(44), SFInt32(39), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(47), SFInt32(44), SFInt32(-1), SFInt32(34), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(45), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(54), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(46), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(37), SFInt32(47), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(33), SFInt32(44), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(37), SFInt32(33), SFInt32(-1)]),
                                                                                                                      coord_ : 
                                                                                                                        Coordinate(
                                                                                                                          point_ : MFVec3f([SFVec3f([-1.164,1.767,-1.68]),SFVec3f([-2.32,1.756,0.0337]),SFVec3f([-1.047,1.768,1.663]),SFVec3f([0.895,1.785,0.9556]),SFVec3f([0.8229,1.784,-1.11]),SFVec3f([-1.382,0.4997,-2.31]),SFVec3f([-2.978,0.4855,0.057]),SFVec3f([-1.221,0.5011,2.307]),SFVec3f([1.462,0.525,1.33]),SFVec3f([1.362,0.5241,-1.523]),SFVec3f([-1.36,-2.014,-2.31]),SFVec3f([-2.956,-2.028,0.057]),SFVec3f([-1.198,-2.012,2.307]),SFVec3f([1.484,-1.988,1.33]),SFVec3f([1.384,-1.989,-1.523]),SFVec3f([-1.398,-3.089,-2.442]),SFVec3f([-3.087,-3.104,0.0619]),SFVec3f([-1.228,-3.087,2.442]),SFVec3f([1.61,-3.062,1.409]),SFVec3f([1.505,-3.063,-1.61]),SFVec3f([-0.8845,-1.238,-1.939]),SFVec3f([-2.105,-1.248,-0.4543]),SFVec3f([-1.473,-1.243,1.629]),SFVec3f([0.1375,-1.229,1.432]),SFVec3f([0.5011,-1.225,-0.7734]),SFVec3f([-0.9027,-7.045,-1.569]),SFVec3f([-2.17,-7.056,-0.378]),SFVec3f([-1.514,-7.051,1.293]),SFVec3f([0.1588,-7.036,1.135]),SFVec3f([0.5365,-7.032,-0.634]),SFVec3f([-0.9066,-11.1,-1.511]),SFVec3f([-2.127,-11.11,-0.3651]),SFVec3f([-1.495,-11.1,1.243]),SFVec3f([0.1154,-11.09,1.091]),SFVec3f([0.4791,-11.08,-0.6115]),SFVec3f([-0.852,-11.65,-0.8985]),SFVec3f([-1.567,-11.65,-0.2267]),SFVec3f([-1.197,-11.65,0.716]),SFVec3f([-0.2531,-11.64,0.6268]),SFVec3f([-0.0399,-11.64,-0.3711]),SFVec3f([-0.8845,-1.238,-1.939]),SFVec3f([-2.105,-1.248,-0.4543]),SFVec3f([-1.473,-1.243,1.629]),SFVec3f([0.1375,-1.229,1.432]),SFVec3f([0.5011,-1.225,-0.7734])])),
                                                                                                                      texCoord_ : 
                                                                                                                        TextureCoordinate(
                                                                                                                          point_ : MFVec2f([SFVec2f([0.2986,0.2114]),SFVec2f([0.2726,0.2114]),SFVec2f([0.3201,0.2114]),SFVec2f([0.3415,0.2114]),SFVec2f([0.2466,0.2114]),SFVec2f([0.2979,0.2417]),SFVec2f([0.2726,0.2417]),SFVec2f([0.3197,0.2417]),SFVec2f([0.3418,0.2417]),SFVec2f([0.2473,0.2417]),SFVec2f([0.2979,0.3018]),SFVec2f([0.2726,0.3018]),SFVec2f([0.3197,0.3018]),SFVec2f([0.3418,0.3018]),SFVec2f([0.2473,0.3018]),SFVec2f([0.2978,0.3276]),SFVec2f([0.2726,0.3276]),SFVec2f([0.3197,0.3276]),SFVec2f([0.3419,0.3276]),SFVec2f([0.2474,0.3276]),SFVec2f([0.2932,0.2834]),SFVec2f([0.2689,0.2834]),SFVec2f([0.316,0.2834]),SFVec2f([0.3322,0.2834]),SFVec2f([0.245,0.2834]),SFVec2f([0.2251,0.2114]),SFVec2f([0.2255,0.2417]),SFVec2f([0.2255,0.2417]),SFVec2f([0.2255,0.3018]),SFVec2f([0.2255,0.3018]),SFVec2f([0.2255,0.3276]),SFVec2f([0.2255,0.3276]),SFVec2f([0.2159,0.2834]),SFVec2f([0.9467,0.4943]),SFVec2f([0.9572,0.4943]),SFVec2f([0.9099,0.4943]),SFVec2f([0.9193,0.4943]),SFVec2f([0.9332,0.4943]),SFVec2f([0.9567,0.4691]),SFVec2f([0.9455,0.4691]),SFVec2f([0.9105,0.4691]),SFVec2f([0.9205,0.4691]),SFVec2f([0.9332,0.4691]),SFVec2f([0.9567,0.4913]),SFVec2f([0.9458,0.4913]),SFVec2f([0.9102,0.4913]),SFVec2f([0.9203,0.4913]),SFVec2f([0.9334,0.4913]),SFVec2f([0.8898,0.4943]),SFVec2f([0.9003,0.4943]),SFVec2f([0.8997,0.4691]),SFVec2f([0.8997,0.4691]),SFVec2f([0.8998,0.4913]),SFVec2f([0.8998,0.4913]),SFVec2f([0.9003,0.4943]),SFVec2f([0.3481,0.2114]),SFVec2f([0.9448,0.4374]),SFVec2f([0.9561,0.4374]),SFVec2f([0.8991,0.4374]),SFVec2f([0.9117,0.4374]),SFVec2f([0.9198,0.4374]),SFVec2f([0.9341,0.4374])])))))]),

                                                                                                        HAnimJoint(
                                                                                                          name_ : SFString('r_elbow'),
                                                                                                          DEF_ : SFString('hanim_r_elbow'),
                                                                                                          center_ : SFVec3f([SFDouble(-8.077), SFDouble(41.279999), SFDouble(-0.2502)]),
                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                          children_ : [
                                                                                                            HAnimSegment(
                                                                                                              name_ : SFString('r_forearm'),
                                                                                                              DEF_ : SFString('hanim_r_forearm'),
                                                                                                              children_ : [
                                                                                                                Transform(
                                                                                                                  translation_ : SFVec3f([SFDouble(-8.077), SFDouble(41.279999), SFDouble(-0.2502)]),
                                                                                                                  child_ : 
                                                                                                                    Shape(
                                                                                                                      appearance_ : 
                                                                                                                        Appearance(
                                                                                                                          material_ : 
                                                                                                                            Material(
                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                          texture_ : 
                                                                                                                            ImageTexture(
                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                      geometry_ : 
                                                                                                                        IndexedFaceSet(
                                                                                                                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(23), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(20), SFInt32(-1)]),
                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(4), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(21), SFInt32(-1)]),
                                                                                                                          coord_ : 
                                                                                                                            Coordinate(
                                                                                                                              point_ : MFVec3f([SFVec3f([-0.215,0.3047,-1.152]),SFVec3f([-1.155,0.2966,-0.2588]),SFVec3f([-0.6199,0.3013,1.04]),SFVec3f([0.6505,0.3122,0.9491]),SFVec3f([0.9008,0.3143,-0.4054]),SFVec3f([-0.1442,-0.8448,-1.625]),SFVec3f([-1.472,-0.8561,-0.4271]),SFVec3f([-0.7164,-0.8496,1.625]),SFVec3f([1.079,-0.8342,1.482]),SFVec3f([1.433,-0.8312,-0.6588]),SFVec3f([-0.1328,-3.5,-1.607]),SFVec3f([-1.551,-3.513,-0.4225]),SFVec3f([-0.781,-2.925,1.61]),SFVec3f([1.136,-2.909,1.468]),SFVec3f([1.551,-3.486,-0.6519]),SFVec3f([-0.0592,-8.713,-1.437]),SFVec3f([-1.093,-8.722,-0.1279]),SFVec3f([-0.5047,-8.716,1.51]),SFVec3f([0.8932,-8.704,1.377]),SFVec3f([1.169,-8.702,-0.3428]),SFVec3f([-0.0092,-9.336,-0.8855]),SFVec3f([-0.7154,-9.342,0.0084]),SFVec3f([-0.3135,-9.339,1.043]),SFVec3f([0.6412,-9.331,0.9519]),SFVec3f([0.8292,-9.329,-0.1383])])),
                                                                                                                          texCoord_ : 
                                                                                                                            TextureCoordinate(
                                                                                                                              point_ : MFVec2f([SFVec2f([0.8857,0.572]),SFVec2f([0.9344,0.572]),SFVec2f([0.9377,0.5719]),SFVec2f([0.8909,0.5718]),SFVec2f([0.8588,0.5719]),SFVec2f([0.8849,0.5578]),SFVec2f([0.8418,0.558]),SFVec2f([0.9588,0.5579]),SFVec2f([0.9536,0.5581]),SFVec2f([0.8765,0.5581]),SFVec2f([0.885,0.5257]),SFVec2f([0.8424,0.5258]),SFVec2f([0.9582,0.5328]),SFVec2f([0.9531,0.533]),SFVec2f([0.8768,0.526]),SFVec2f([0.8957,0.4625]),SFVec2f([0.8485,0.4627]),SFVec2f([0.9546,0.4626]),SFVec2f([0.9498,0.4628]),SFVec2f([0.8879,0.4628]),SFVec2f([0.8953,0.4552]),SFVec2f([0.8684,0.4551]),SFVec2f([0.9006,0.455]),SFVec2f([0.9378,0.4551]),SFVec2f([0.9345,0.4552])])))))]),

                                                                                                            HAnimJoint(
                                                                                                              name_ : SFString('r_radiocarpal'),
                                                                                                              DEF_ : SFString('hanim_r_radiocarpal'),
                                                                                                              center_ : SFVec3f([SFDouble(-8.07), SFDouble(32.189999), SFDouble(-0.2232)]),
                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                              children_ : [
                                                                                                                HAnimSegment(
                                                                                                                  name_ : SFString('r_carpal'),
                                                                                                                  DEF_ : SFString('hanim_r_carpal'),
                                                                                                                  children_ : [
                                                                                                                    Transform(
                                                                                                                      translation_ : SFVec3f([SFDouble(-8.07), SFDouble(32.189999), SFDouble(-0.2232)]),
                                                                                                                      child_ : 
                                                                                                                        Shape(
                                                                                                                          appearance_ : 
                                                                                                                            Appearance(
                                                                                                                              material_ : 
                                                                                                                                Material(
                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                              texture_ : 
                                                                                                                                ImageTexture(
                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                          geometry_ : 
                                                                                                                            IndexedFaceSet(
                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(15), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(10), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(17), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(22), SFInt32(-1), SFInt32(2), SFInt32(17), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(22), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(22), SFInt32(-1), SFInt32(4), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(5), SFInt32(22), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(22), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(16), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(10), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(11), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(19), SFInt32(-1), SFInt32(21), SFInt32(8), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(21), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(33), SFInt32(8), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(34), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(34), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(34), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(34), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(34), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(34), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(34), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(34), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(33), SFInt32(23), SFInt32(34), SFInt32(-1)]),
                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(12), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(21), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(22), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(22), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(22), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(37), SFInt32(12), SFInt32(39), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(39), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(39), SFInt32(-1), SFInt32(17), SFInt32(21), SFInt32(39), SFInt32(-1), SFInt32(21), SFInt32(35), SFInt32(39), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(0), SFInt32(-1), SFInt32(36), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(36), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(20), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(16), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(38), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(31), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(8), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(33), SFInt32(8), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(34), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(34), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(34), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(40), SFInt32(28), SFInt32(42), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(42), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(42), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(42), SFInt32(-1), SFInt32(31), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(33), SFInt32(24), SFInt32(34), SFInt32(-1)]),
                                                                                                                              coord_ : 
                                                                                                                                Coordinate(
                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.0718,0.1105,-1.01]),SFVec3f([-0.5108,0.0965,-0.79]),SFVec3f([-0.6808,0.1049,-0.212]),SFVec3f([-0.5475,0.1209,0.7178]),SFVec3f([-0.2978,0.1182,1.102]),SFVec3f([0.5959,0.1061,0.734]),SFVec3f([0.6714,0.0918,-0.2167]),SFVec3f([0.4399,0.0876,-0.7804]),SFVec3f([-0.3749,-0.7899,1.333]),SFVec3f([0.4677,-0.8492,-0.9914]),SFVec3f([-0.6527,-0.6995,0.3258]),SFVec3f([-0.0476,-0.832,-1.286]),SFVec3f([-0.5788,-0.8489,-0.9909]),SFVec3f([-0.6835,-0.6804,-0.3282]),SFVec3f([0.6279,-0.6805,-0.3268]),SFVec3f([0.6351,-0.6994,0.3349]),SFVec3f([-0.5385,-0.8096,0.8587]),SFVec3f([-0.6721,0.1026,0.2306]),SFVec3f([0.6716,0.0989,0.2384]),SFVec3f([0.5705,-0.8097,0.8599]),SFVec3f([0.3,0.1135,1.081]),SFVec3f([0.3211,-0.7905,1.299]),SFVec3f([-0.0594,0.3233,-0.0086]),SFVec3f([-0.4051,-1.1,0.8323]),SFVec3f([-0.5152,-0.9892,0.322]),SFVec3f([-0.5452,-0.9698,-0.3815]),SFVec3f([-0.4503,-1.137,-1.027]),SFVec3f([-0.0399,-1.141,-1.188]),SFVec3f([0.3455,-1.137,-1.033]),SFVec3f([0.4906,-0.9699,-0.3741]),SFVec3f([0.4977,-0.989,0.341]),SFVec3f([0.4908,-1.1,0.8359]),SFVec3f([0.2387,-1.082,1.197]),SFVec3f([-0.1823,-1.082,1.223]),SFVec3f([0.0391,-1.269,-0.0735])])),
                                                                                                                              texCoord_ : 
                                                                                                                                TextureCoordinate(
                                                                                                                                  point_ : MFVec2f([SFVec2f([0.7729,0.0334]),SFVec2f([0.7695,0.0151]),SFVec2f([0.7598,0.0161]),SFVec2f([0.7624,0.0345]),SFVec2f([0.791,0.0281]),SFVec2f([0.7896,0.0131]),SFVec2f([0.8111,0.0113]),SFVec2f([0.813,0.0266]),SFVec2f([0.8476,0.0256]),SFVec2f([0.8461,0.0079]),SFVec2f([0.8312,0.0091]),SFVec2f([0.8327,0.0273]),SFVec2f([0.9162,0.2899]),SFVec2f([0.8453,0.0081]),SFVec2f([0.8466,0.0257]),SFVec2f([0.9122,0.2724]),SFVec2f([0.9531,0.2644]),SFVec2f([0.9573,0.2786]),SFVec2f([0.936,0.2844]),SFVec2f([0.9315,0.2698]),SFVec2f([0.9706,0.2558]),SFVec2f([0.9766,0.2733]),SFVec2f([0.8032,0.0047]),SFVec2f([0.8134,0.033]),SFVec2f([0.8325,0.0338]),SFVec2f([0.792,0.0345]),SFVec2f([0.7756,0.0396]),SFVec2f([0.7675,0.0404]),SFVec2f([0.9666,0.2503]),SFVec2f([0.9509,0.2584]),SFVec2f([0.9297,0.2636]),SFVec2f([0.9113,0.266]),SFVec2f([0.8439,0.0324]),SFVec2f([0.8447,0.0323]),SFVec2f([0.8081,0.0397]),SFVec2f([0.986,0.2708]),SFVec2f([0.9803,0.2531]),SFVec2f([0.9032,0.2936]),SFVec2f([0.8989,0.2764]),SFVec2f([0.9452,0.2896]),SFVec2f([0.9743,0.2482]),SFVec2f([0.9004,0.2693]),SFVec2f([0.9343,0.2559])])))))]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('r_midcarpal_1'),
                                                                                                                  DEF_ : SFString('hanim_r_midcarpal_1'),
                                                                                                                  center_ : SFVec3f([SFDouble(-8.043), SFDouble(31.379999), SFDouble(0.859)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('r_trapezium'),
                                                                                                                      DEF_ : SFString('hanim_r_trapezium'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(-8.043), SFDouble(31.379999), SFDouble(0.859)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(6), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(18), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(0), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(1), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(7), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(17), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(14), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(19), SFInt32(-1), SFInt32(6), SFInt32(18), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(12), SFInt32(21), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(10), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(15), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(18), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(8), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(3), SFInt32(-1), SFInt32(19), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(30), SFInt32(-1), SFInt32(26), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(28), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(0), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(10), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(7), SFInt32(20), SFInt32(-1), SFInt32(7), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(21), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(0), SFInt32(11), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([-0.7053,-0.7802,-0.0997]),SFVec3f([0.6389,-0.7802,-0.0997]),SFVec3f([0.3989,-0.4974,0.6093]),SFVec3f([-0.4483,-0.4983,0.6785]),SFVec3f([0.509,-0.6051,0.3711]),SFVec3f([-0.4043,0.0139,0.2509]),SFVec3f([-0.568,-0.0058,-0.2235]),SFVec3f([0.5411,-0.0059,-0.2224]),SFVec3f([0.2917,0.0133,0.2166]),SFVec3f([0.4859,-0.9548,-0.0464]),SFVec3f([0.5165,-0.9346,0.2403]),SFVec3f([0.3483,-0.7384,0.5986]),SFVec3f([-0.361,-0.6613,0.6657]),SFVec3f([-0.567,-0.9676,-0.068]),SFVec3f([-0.4266,0.2991,-0.277]),SFVec3f([-0.207,0.313,0.1078]),SFVec3f([0.2037,0.3127,0.0824]),SFVec3f([0.4523,0.2971,-0.2735]),SFVec3f([-0.5103,-0.0352,-0.2979]),SFVec3f([-0.6419,-0.7776,-0.1796]),SFVec3f([-0.5366,-0.9203,-0.1557]),SFVec3f([0.4581,-0.908,-0.1342]),SFVec3f([0.5765,-0.7738,-0.1806]),SFVec3f([0.4825,-0.0296,-0.298]),SFVec3f([0.4075,0.2265,-0.341]),SFVec3f([-0.3881,0.2283,-0.3443])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.8327,0.0273]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8625,0.0344]),SFVec2f([0.8476,0.0256]),SFVec2f([0.8625,0.0359]),SFVec2f([0.8466,0.0257]),SFVec2f([0.9122,0.2724]),SFVec2f([0.904,0.2568]),SFVec2f([0.8948,0.2599]),SFVec2f([0.8401,0.0478]),SFVec2f([0.8395,0.0482]),SFVec2f([0.8319,0.0206]),SFVec2f([0.9141,0.2788]),SFVec2f([0.844,0.0192]),SFVec2f([0.8432,0.0193]),SFVec2f([0.8491,0.0466]),SFVec2f([0.8611,0.0409]),SFVec2f([0.8611,0.0397]),SFVec2f([0.8814,0.2691]),SFVec2f([0.8989,0.2764]),SFVec2f([0.9014,0.2535]),SFVec2f([0.9142,0.2789]),SFVec2f([0.9026,0.2823]),SFVec2f([0.9033,0.2821]),SFVec2f([0.8928,0.2563]),SFVec2f([0.8819,0.264]),SFVec2f([0.8327,0.0273]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8395,0.0482]),SFVec2f([0.8401,0.0478]),SFVec2f([0.904,0.2568]),SFVec2f([0.9122,0.2724]),SFVec2f([0.9141,0.2788]),SFVec2f([0.9142,0.2789])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('r_carpometacarpal_1'),
                                                                                                                      DEF_ : SFString('hanim_r_carpometacarpal_1'),
                                                                                                                      center_ : SFVec3f([SFDouble(-8.006), SFDouble(30.780001), SFDouble(1.155)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('r_metacarpal_1'),
                                                                                                                          DEF_ : SFString('hanim_r_metacarpal_1'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(-8.006), SFDouble(30.780001), SFDouble(1.155)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(1), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(16), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(25), SFInt32(8), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(4), SFInt32(27), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(4), SFInt32(28), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(21), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(5), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(30), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(8), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(30), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(27), SFInt32(4), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(27), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([0.5751,-0.8119,0.3729]),SFVec3f([0.302,-0.6141,0.6443]),SFVec3f([-0.3814,-0.5011,0.7438]),SFVec3f([-0.716,-0.9041,0.1581]),SFVec3f([0.366,-1.245,-0.0839]),SFVec3f([-0.8186,-0.9968,-0.0288]),SFVec3f([-0.7398,-0.1792,-0.3959]),SFVec3f([0.6043,-0.1792,-0.3959]),SFVec3f([0.3644,0.1036,0.3132]),SFVec3f([-0.4829,0.1027,0.3823]),SFVec3f([0.4744,-0.0041,0.0749]),SFVec3f([-0.3732,-1.179,0.3002]),SFVec3f([-0.3531,-1.244,0.2233]),SFVec3f([0.2445,-1.314,0.124]),SFVec3f([0.452,-1.179,0.3706]),SFVec3f([0.2104,-0.955,0.6578]),SFVec3f([-0.2066,-0.8325,0.7941]),SFVec3f([0.4224,-0.2513,-0.5443]),SFVec3f([0.2417,-1.271,-0.2781]),SFVec3f([-0.6108,-1.052,-0.2554]),SFVec3f([-0.5836,-0.2515,-0.5446]),SFVec3f([0.3922,0.0827,-0.0195]),SFVec3f([0.505,-0.0166,-0.2776]),SFVec3f([-0.5161,-0.0391,-0.2686]),SFVec3f([-0.3757,0.1717,0.2582]),SFVec3f([0.1802,0.1719,0.215])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.8819,0.0483]),SFVec2f([0.8625,0.0359]),SFVec2f([0.8625,0.0344]),SFVec2f([0.8786,0.0507]),SFVec2f([0.8948,0.2599]),SFVec2f([0.867,0.0598]),SFVec2f([0.857,0.0621]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8533,0.0697]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8503,0.0646]),SFVec2f([0.8419,0.0407]),SFVec2f([0.8588,0.0334]),SFVec2f([0.8588,0.0347]),SFVec2f([0.8467,0.0405]),SFVec2f([0.8415,0.0402]),SFVec2f([0.8445,0.0658]),SFVec2f([0.8331,0.0451]),SFVec2f([0.8331,0.0451]),SFVec2f([0.8468,0.0705]),SFVec2f([0.8593,0.0711]),SFVec2f([0.8712,0.0644]),SFVec2f([0.8626,0.068]),SFVec2f([0.8607,0.0696]),SFVec2f([0.877,0.0609]),SFVec2f([0.8798,0.0581]),SFVec2f([0.8632,0.2548]),SFVec2f([0.8814,0.2691]),SFVec2f([0.8729,0.2464]),SFVec2f([0.8847,0.2342]),SFVec2f([0.904,0.2568]),SFVec2f([0.8853,0.2697]),SFVec2f([0.8962,0.2618]),SFVec2f([0.9014,0.2613]),SFVec2f([0.9088,0.2549]),SFVec2f([0.8909,0.2323])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('r_metacarpophalangeal_1'),
                                                                                                                          DEF_ : SFString('hanim_r_metacarpophalangeal_1'),
                                                                                                                          center_ : SFVec3f([SFDouble(-8.029), SFDouble(29.9), SFDouble(1.59)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('r_carpal_proximal_phalanx_1'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_proximal_phalanx_1'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(-8.029), SFDouble(29.9), SFDouble(1.59)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(5), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(7), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(19), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(26), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(27), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(7), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(21), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(8), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(21), SFInt32(-1), SFInt32(26), SFInt32(7), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(26), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(33), SFInt32(38), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(40), SFInt32(39), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(2), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(15), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(4), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(17), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(22), SFInt32(24), SFInt32(26), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(14), SFInt32(1), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(14), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(10), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(3), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(10), SFInt32(-1), SFInt32(33), SFInt32(36), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(33), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(27), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(21), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(26), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(21), SFInt32(-1), SFInt32(42), SFInt32(36), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(42), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([-0.648,-0.1572,-0.1816]),SFVec3f([-0.2215,-0.4696,-0.3727]),SFVec3f([-0.7293,-0.3514,-0.3769]),SFVec3f([0.5989,0.0674,-0.062]),SFVec3f([0.3258,0.2652,0.2094]),SFVec3f([-0.3575,0.3782,0.3089]),SFVec3f([-0.6921,-0.0248,-0.2768]),SFVec3f([0.3898,-0.3658,-0.5188]),SFVec3f([-0.7948,-0.1175,-0.4637]),SFVec3f([0.2134,-0.6161,0.8058]),SFVec3f([-0.3101,-0.4028,0.7384]),SFVec3f([-0.1954,-0.8397,0.9419]),SFVec3f([0.1104,-0.9591,0.8926]),SFVec3f([0.2493,-1.151,0.2193]),SFVec3f([0.5111,-0.832,0.6281]),SFVec3f([0.3686,-0.981,0.7131]),SFVec3f([0.1898,-1.227,0.383]),SFVec3f([-0.5399,-0.798,0.2786]),SFVec3f([-0.4043,-1.127,0.5533]),SFVec3f([-0.1346,-1.116,0.1902]),SFVec3f([-0.1035,-1.254,0.4943]),SFVec3f([-0.437,0.1054,-0.572]),SFVec3f([-0.4429,0.1652,-0.5023]),SFVec3f([-0.1619,0.4787,-0.0154]),SFVec3f([0.2164,0.398,-0.0699]),SFVec3f([0.3666,0.2424,-0.317]),SFVec3f([0.2404,0.0654,-0.5934]),SFVec3f([0.2919,-0.3931,-0.7578]),SFVec3f([-0.1692,-0.5049,-0.6608]),SFVec3f([-0.5909,-0.3962,-0.6566]),SFVec3f([-0.6389,-0.2511,-0.7092]),SFVec3f([-0.4111,-0.0844,-0.8017]),SFVec3f([0.1733,-0.1282,-0.8504])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.8786,0.0507]),SFVec2f([0.857,0.0621]),SFVec2f([0.8601,0.0649]),SFVec2f([0.867,0.0598]),SFVec2f([0.8887,0.0786]),SFVec2f([0.8747,0.0865]),SFVec2f([0.8533,0.0697]),SFVec2f([0.876,0.0783]),SFVec2f([0.893,0.0688]),SFVec2f([0.8992,0.0702]),SFVec2f([0.8819,0.0483]),SFVec2f([0.8561,0.0728]),SFVec2f([0.8736,0.0851]),SFVec2f([0.8532,0.0697]),SFVec2f([0.8503,0.0646]),SFVec2f([0.8986,0.0785]),SFVec2f([0.897,0.0809]),SFVec2f([0.8914,0.0813]),SFVec2f([0.8802,0.0861]),SFVec2f([0.8841,0.0856]),SFVec2f([0.8821,0.0883]),SFVec2f([0.8487,0.0595]),SFVec2f([0.8509,0.0581]),SFVec2f([0.8683,0.0489]),SFVec2f([0.868,0.0507]),SFVec2f([0.8608,0.0544]),SFVec2f([0.8505,0.0603]),SFVec2f([0.8455,0.0706]),SFVec2f([0.8468,0.073]),SFVec2f([0.8455,0.0707]),SFVec2f([0.8437,0.0676]),SFVec2f([0.8416,0.0639]),SFVec2f([0.8422,0.0648]),SFVec2f([0.8729,0.2464]),SFVec2f([0.8482,0.2317]),SFVec2f([0.8612,0.2211]),SFVec2f([0.8847,0.2342]),SFVec2f([0.8433,0.2381]),SFVec2f([0.8632,0.2548]),SFVec2f([0.8814,0.2316]),SFVec2f([0.8625,0.2222]),SFVec2f([0.8799,0.2506]),SFVec2f([0.8891,0.243]),SFVec2f([0.8922,0.232])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('r_carpal_interphalangeal_1'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_interphalangeal_1'),
                                                                                                                              center_ : SFVec3f([SFDouble(-8.101), SFDouble(29.07), SFDouble(2.207)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('r_carpal_distal_phalanx_1'),
                                                                                                                                  DEF_ : SFString('hanim_r_carpal_distal_phalanx_1'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(-8.101), SFDouble(29.07), SFDouble(2.207)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(32), SFInt32(2), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(17), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(29), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(23), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(24), SFInt32(3), SFInt32(31), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(24), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(18), SFInt32(-1), SFInt32(6), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(6), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(22), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(6), SFInt32(17), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(17), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(11), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(14), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(32), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(31), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(34), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(2), SFInt32(-1), SFInt32(33), SFInt32(3), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(2), SFInt32(38), SFInt32(-1), SFInt32(9), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(5), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(19), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(36), SFInt32(3), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(41), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(21), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(41), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(23), SFInt32(-1), SFInt32(43), SFInt32(40), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(43), SFInt32(-1), SFInt32(13), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(13), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(32), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(31), SFInt32(10), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0.3337,-0.7896,-0.0218]),SFVec3f([-0.4001,-0.2756,-0.0935]),SFVec3f([-0.007,-0.7974,-0.0081]),SFVec3f([-0.1798,0.0821,0.3404]),SFVec3f([-0.0929,-0.4091,0.5794]),SFVec3f([0.2993,-0.3965,0.5693]),SFVec3f([-0.1153,-0.9089,0.6039]),SFVec3f([-0.0672,-0.8379,0.6779]),SFVec3f([0.01,-0.7103,0.7249]),SFVec3f([0.2924,-0.7333,0.742]),SFVec3f([0.4924,-0.785,0.5516]),SFVec3f([0.5321,-0.5261,0.3643]),SFVec3f([0.3318,-1.035,0.1941]),SFVec3f([0.4237,-0.9358,0.5457]),SFVec3f([0.334,-1.054,0.3651]),SFVec3f([0.0387,-1.061,0.2343]),SFVec3f([-0.1633,-0.9486,0.3874]),SFVec3f([-0.2892,-0.673,0.1983]),SFVec3f([0.2076,-0.9481,0.6916]),SFVec3f([0.1404,-1.048,0.5886]),SFVec3f([-0.1515,-0.9429,0.5128]),SFVec3f([0.0911,-1.101,0.4569]),SFVec3f([0.3732,-1.009,0.4629]),SFVec3f([-0.468,0.0378,-0.3382]),SFVec3f([-0.2382,0.433,0.1216]),SFVec3f([0.0212,0.4536,-0.0258]),SFVec3f([-0.2254,0.0652,-0.4619]),SFVec3f([0.4366,0.3569,-0.1582]),SFVec3f([0.583,0.0038,0.0113]),SFVec3f([0.3212,-0.3156,-0.3975]),SFVec3f([0.19,-0.0315,-0.5942]),SFVec3f([0.2852,0.2197,0.189]),SFVec3f([-0.0627,-0.2806,-0.4266])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.8747,0.0865]),SFVec2f([0.8887,0.0786]),SFVec2f([0.8299,0.2203]),SFVec2f([0.8424,0.2111]),SFVec2f([0.8736,0.0851]),SFVec2f([0.8939,0.0989]),SFVec2f([0.8978,0.0975]),SFVec2f([0.8834,0.0852]),SFVec2f([0.8992,0.0766]),SFVec2f([0.9092,0.0888]),SFVec2f([0.8992,0.0702]),SFVec2f([0.9115,0.0859]),SFVec2f([0.876,0.0783]),SFVec2f([0.893,0.0688]),SFVec2f([0.9109,0.102]),SFVec2f([0.9135,0.0996]),SFVec2f([0.9144,0.0973]),SFVec2f([0.9172,0.0962]),SFVec2f([0.8241,0.2146]),SFVec2f([0.8338,0.2074]),SFVec2f([0.8247,0.2116]),SFVec2f([0.8291,0.2083]),SFVec2f([0.9028,0.1054]),SFVec2f([0.9046,0.1032]),SFVec2f([0.9153,0.1012]),SFVec2f([0.9125,0.1038]),SFVec2f([0.9081,0.1033]),SFVec2f([0.9082,0.1057]),SFVec2f([0.8266,0.2097]),SFVec2f([0.8885,0.0681]),SFVec2f([0.8723,0.0776]),SFVec2f([0.8843,0.0701]),SFVec2f([0.8696,0.0781]),SFVec2f([0.8612,0.2211]),SFVec2f([0.8482,0.2317]),SFVec2f([0.8625,0.2222]),SFVec2f([0.8417,0.2109]),SFVec2f([0.8433,0.2381]),SFVec2f([0.8245,0.2237]),SFVec2f([0.8192,0.2167]),SFVec2f([0.8322,0.2071]),SFVec2f([0.8195,0.2131]),SFVec2f([0.8224,0.2103]),SFVec2f([0.8256,0.2083])])))))])])])])]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('r_midcarpal_2'),
                                                                                                                  DEF_ : SFString('hanim_r_midcarpal_2'),
                                                                                                                  center_ : SFVec3f([SFDouble(-8.043), SFDouble(31.42), SFDouble(0.3741)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('r_trapezoid'),
                                                                                                                      DEF_ : SFString('hanim_r_trapezoid'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(-8.043), SFDouble(31.42), SFDouble(0.3741)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(14), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(6), SFInt32(2), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(2), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(26), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(14), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(13), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(16), SFInt32(13), SFInt32(-1), SFInt32(16), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(17), SFInt32(27), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(12), SFInt32(17), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(21), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(19), SFInt32(21), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(12), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(23), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(26), SFInt32(-1), SFInt32(12), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(19), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(25), SFInt32(19), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(21), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(10), SFInt32(0), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(28), SFInt32(22), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(3), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(29), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(29), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(29), SFInt32(33), SFInt32(31), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(19), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(21), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(27), SFInt32(21), SFInt32(-1), SFInt32(26), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(22), SFInt32(28), SFInt32(-1), SFInt32(22), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(25), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(36), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(19), SFInt32(25), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([0.6358,-0.9379,-0.2307]),SFVec3f([-0.7821,-0.9379,-0.2307]),SFVec3f([-0.6822,0.0629,-0.2716]),SFVec3f([0.6057,0.0629,-0.2624]),SFVec3f([0.5204,-1.104,-0.2257]),SFVec3f([-0.6304,-1.104,-0.2257]),SFVec3f([-0.5127,0.3713,-0.2927]),SFVec3f([0.4578,0.3716,-0.2865]),SFVec3f([0.5269,-0.0048,-0.3422]),SFVec3f([0.5894,-0.8616,-0.3044]),SFVec3f([-0.6897,-0.8616,-0.3038]),SFVec3f([-0.6041,-0.0048,-0.3509]),SFVec3f([-0.7053,-0.8216,0.3852]),SFVec3f([0.6389,-0.8216,0.3852]),SFVec3f([-0.568,-0.0472,0.2614]),SFVec3f([0.5411,-0.0473,0.2625]),SFVec3f([0.4859,-0.9962,0.4385]),SFVec3f([-0.567,-1.009,0.4169]),SFVec3f([-0.4266,0.2577,0.2079]),SFVec3f([0.4523,0.2557,0.2115]),SFVec3f([-0.6134,-0.7544,0.4412]),SFVec3f([-0.4945,-0.0839,0.334]),SFVec3f([-0.3721,0.1802,0.2877]),SFVec3f([0.3891,0.1785,0.2907]),SFVec3f([0.4659,-0.0839,0.335]),SFVec3f([0.5506,-0.7544,0.4412]),SFVec3f([0.4182,-0.9056,0.4873]),SFVec3f([-0.4937,-0.9167,0.4687])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.813,0.0266]),SFVec2f([0.8136,0.0488]),SFVec2f([0.8136,0.0488]),SFVec2f([0.8133,0.0266]),SFVec2f([0.8111,0.0474]),SFVec2f([0.8105,0.0283]),SFVec2f([0.8108,0.0283]),SFVec2f([0.8111,0.0474]),SFVec2f([0.8141,0.0525]),SFVec2f([0.8141,0.0525]),SFVec2f([0.8123,0.0198]),SFVec2f([0.8125,0.0198]),SFVec2f([0.9273,0.2479]),SFVec2f([0.9315,0.2698]),SFVec2f([0.9337,0.2676]),SFVec2f([0.9301,0.2489]),SFVec2f([0.9262,0.2444]),SFVec2f([0.9337,0.2762]),SFVec2f([0.9335,0.2763]),SFVec2f([0.8381,0.0441]),SFVec2f([0.904,0.2568]),SFVec2f([0.8327,0.0273]),SFVec2f([0.9122,0.2724]),SFVec2f([0.8401,0.0478]),SFVec2f([0.9014,0.2535]),SFVec2f([0.8395,0.0482]),SFVec2f([0.9142,0.2789]),SFVec2f([0.8319,0.0206]),SFVec2f([0.9141,0.2788]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8327,0.0273]),SFVec2f([0.8319,0.0206]),SFVec2f([0.9141,0.2788]),SFVec2f([0.9122,0.2724]),SFVec2f([0.904,0.2568]),SFVec2f([0.9014,0.2535]),SFVec2f([0.8395,0.0482])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('r_carpometacarpal_2'),
                                                                                                                      DEF_ : SFString('hanim_r_carpometacarpal_2'),
                                                                                                                      center_ : SFVec3f([SFDouble(-8.04), SFDouble(30.559999), SFDouble(0.4324)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('r_metacarpal_2'),
                                                                                                                          DEF_ : SFString('hanim_r_metacarpal_2'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(-8.04), SFDouble(30.559999), SFDouble(0.4324)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(5), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(14), SFInt32(-1), SFInt32(8), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(4), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(25), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(25), SFInt32(-1), SFInt32(22), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(41), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(32), SFInt32(-1), SFInt32(36), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(34), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(6), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(12), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(24), SFInt32(11), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(5), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(21), SFInt32(-1), SFInt32(20), SFInt32(10), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(20), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(2), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(16), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(13), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(18), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(11), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(14), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(11), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(41), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(3), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(46), SFInt32(44), SFInt32(-1), SFInt32(46), SFInt32(8), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(46), SFInt32(-1), SFInt32(47), SFInt32(8), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(48), SFInt32(47), SFInt32(-1), SFInt32(1), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(4), SFInt32(16), SFInt32(-1), SFInt32(50), SFInt32(49), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(8), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(8), SFInt32(47), SFInt32(-1), SFInt32(16), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(18), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(14), SFInt32(-1), SFInt32(21), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(37), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(38), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(21), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(15), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(25), SFInt32(4), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(15), SFInt32(-1), SFInt32(48), SFInt32(45), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(56), SFInt32(48), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(24), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(41), SFInt32(27), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(12), SFInt32(-1), SFInt32(50), SFInt32(47), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(54), SFInt32(50), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(18), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(14), SFInt32(-1), SFInt32(18), SFInt32(13), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(13), SFInt32(-1), SFInt32(47), SFInt32(48), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(47), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(11), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(15), SFInt32(-1), SFInt32(14), SFInt32(10), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(4), SFInt32(2), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([-0.5385,-2.162,0.5011]),SFVec3f([-0.0659,-2.156,0.6401]),SFVec3f([0.3587,-2.162,0.5027]),SFVec3f([-0.6132,-1.327,0.533]),SFVec3f([0.4742,-1.326,0.5432]),SFVec3f([-0.6023,-2.207,-0.1881]),SFVec3f([0.5344,-1.295,-0.2212]),SFVec3f([-0.7168,-1.295,-0.2212]),SFVec3f([-0.0891,-1.429,0.7147]),SFVec3f([-0.8645,-0.8313,0.4987]),SFVec3f([0.3914,-2.207,-0.1881]),SFVec3f([0.6358,-0.0769,-0.289]),SFVec3f([-0.7821,-0.0769,-0.289]),SFVec3f([-0.7053,0.0393,0.3269]),SFVec3f([0.6389,0.0393,0.3269]),SFVec3f([0.4005,-1.027,0.6389]),SFVec3f([-0.2108,-1.13,0.785]),SFVec3f([-0.7186,-1.012,0.7808]),SFVec3f([-0.7841,-0.7783,0.694]),SFVec3f([0.4207,-1.297,-0.341]),SFVec3f([0.2918,-2.186,-0.2634]),SFVec3f([-0.5068,-2.186,-0.2634]),SFVec3f([-0.6022,-1.304,-0.3405]),SFVec3f([-0.6628,-0.0829,-0.4027]),SFVec3f([0.5467,-0.0829,-0.4027]),SFVec3f([-0.0673,-2.335,0.5792]),SFVec3f([-0.3957,-2.338,0.4716]),SFVec3f([-0.4585,-2.364,-0.1616]),SFVec3f([-0.4618,-2.271,-0.2352]),SFVec3f([0.2461,-2.271,-0.2352]),SFVec3f([0.3144,-2.364,-0.1611]),SFVec3f([0.2879,-2.338,0.4752]),SFVec3f([-0.1576,-0.941,0.901]),SFVec3f([0.2884,-0.8565,0.7851]),SFVec3f([0.469,0.0593,0.5095]),SFVec3f([-0.5883,0.0595,0.5091]),SFVec3f([-0.5527,-0.689,0.8149]),SFVec3f([-0.541,-0.8603,0.8815]),SFVec3f([0.506,0.13,0.2038]),SFVec3f([0.5335,0.0511,-0.194]),SFVec3f([-0.6336,0.0511,-0.194]),SFVec3f([-0.5814,0.13,0.2038])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.8514,0.0953]),SFVec2f([0.8526,0.0788]),SFVec2f([0.846,0.0768]),SFVec2f([0.8466,0.0958]),SFVec2f([0.8195,0.0808]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8195,0.0808]),SFVec2f([0.8903,0.2261]),SFVec2f([0.8467,0.0958]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8136,0.0488]),SFVec2f([0.8561,0.0728]),SFVec2f([0.8532,0.0697]),SFVec2f([0.8381,0.0441]),SFVec2f([0.8136,0.0488]),SFVec2f([0.8436,0.0662]),SFVec2f([0.8533,0.0697]),SFVec2f([0.8503,0.0646]),SFVec2f([0.8461,0.0998]),SFVec2f([0.8248,0.1027]),SFVec2f([0.8248,0.1027]),SFVec2f([0.8462,0.0997]),SFVec2f([0.8498,0.0994]),SFVec2f([0.8184,0.0977]),SFVec2f([0.8157,0.0811]),SFVec2f([0.8157,0.0809]),SFVec2f([0.8184,0.0977]),SFVec2f([0.8165,0.0457]),SFVec2f([0.8341,0.0424]),SFVec2f([0.8341,0.0424]),SFVec2f([0.8165,0.0457]),SFVec2f([0.844,0.0417]),SFVec2f([0.8554,0.0622]),SFVec2f([0.8575,0.0659]),SFVec2f([0.8594,0.0677]),SFVec2f([0.8574,0.0658]),SFVec2f([0.844,0.0417]),SFVec2f([0.8099,0.0493]),SFVec2f([0.8099,0.0493]),SFVec2f([0.82,0.101]),SFVec2f([0.82,0.101]),SFVec2f([0.8821,0.2087]),SFVec2f([0.8838,0.2252]),SFVec2f([0.9098,0.1997]),SFVec2f([0.916,0.2175]),SFVec2f([0.8866,0.2074]),SFVec2f([0.904,0.2568]),SFVec2f([0.9273,0.2479]),SFVec2f([0.8814,0.2316]),SFVec2f([0.8847,0.2342]),SFVec2f([0.9197,0.2166]),SFVec2f([0.9083,0.2577]),SFVec2f([0.925,0.2515]),SFVec2f([0.8813,0.2388]),SFVec2f([0.8986,0.2602]),SFVec2f([0.931,0.2468])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('r_metacarpophalangeal_2'),
                                                                                                                          DEF_ : SFString('hanim_r_metacarpophalangeal_2'),
                                                                                                                          center_ : SFVec3f([SFDouble(-8.149), SFDouble(28.32), SFDouble(0.67)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('r_carpal_proximal_phalanx_2'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_proximal_phalanx_2'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(-8.149), SFDouble(28.32), SFDouble(0.67)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(4), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(4), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(1), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(1), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(7), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(23), SFInt32(25), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(12), SFInt32(1), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(13), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(0), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(30), SFInt32(26), SFInt32(29), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(18), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(25), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(20), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(37), SFInt32(31), SFInt32(33), SFInt32(-1), SFInt32(36), SFInt32(37), SFInt32(33), SFInt32(-1), SFInt32(36), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(21), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(22), SFInt32(-1), SFInt32(21), SFInt32(30), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(21), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(29), SFInt32(-1), SFInt32(25), SFInt32(23), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(24), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(37), SFInt32(23), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(9), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(41), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(38), SFInt32(42), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(38), SFInt32(-1), SFInt32(11), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(6), SFInt32(44), SFInt32(-1), SFInt32(5), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(46), SFInt32(40), SFInt32(6), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(15), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(11), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(14), SFInt32(-1), SFInt32(43), SFInt32(11), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(48), SFInt32(43), SFInt32(-1), SFInt32(13), SFInt32(16), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(13), SFInt32(-1), SFInt32(12), SFInt32(42), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(22), SFInt32(12), SFInt32(-1), SFInt32(22), SFInt32(47), SFInt32(48), SFInt32(-1), SFInt32(48), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(27), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(8), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(35), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(31), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(4), SFInt32(-1), SFInt32(18), SFInt32(10), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(18), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(26), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(4), SFInt32(-1), SFInt32(26), SFInt32(30), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(26), SFInt32(-1), SFInt32(30), SFInt32(7), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(37), SFInt32(30), SFInt32(-1), SFInt32(7), SFInt32(19), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(7), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(19), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([0.1159,-1.372,0.3131]),SFVec3f([0.5161,-1.341,-0.3172]),SFVec3f([-0.3299,-1.236,-0.3162]),SFVec3f([0.1159,-1.364,-0.424]),SFVec3f([0.0588,-0.15,0.3785]),SFVec3f([-0.3848,-0.1567,0.2488]),SFVec3f([-0.4338,-0.1885,-0.322]),SFVec3f([0.4674,-0.1885,-0.3215]),SFVec3f([0.4674,-0.1567,0.2488]),SFVec3f([0.0588,-0.3302,-0.406]),SFVec3f([0.5161,-1.346,0.1932]),SFVec3f([-0.3299,-1.242,0.1943]),SFVec3f([0.4415,-1.509,-0.285]),SFVec3f([-0.1699,-1.592,-0.3152]),SFVec3f([0.4415,-1.514,0.1582]),SFVec3f([-0.1699,-1.597,0.188]),SFVec3f([0.117,-1.623,-0.3164]),SFVec3f([0.117,-1.628,0.1968]),SFVec3f([-0.4291,0.0832,0.2635]),SFVec3f([0.0434,0.0888,0.4025]),SFVec3f([0.4681,0.0832,0.2651]),SFVec3f([-0.493,0.0378,-0.4257]),SFVec3f([-0.4088,-0.1918,-0.4243]),SFVec3f([0.4674,-0.1918,-0.4243]),SFVec3f([0.0588,-0.3316,-0.4184]),SFVec3f([0.5007,0.0378,-0.4257]),SFVec3f([-0.2815,0.3454,0.172]),SFVec3f([0.0577,0.3598,0.3191]),SFVec3f([0.3828,0.3458,0.1744]),SFVec3f([0.3964,0.327,-0.4021]),SFVec3f([-0.3405,0.3271,-0.4009]),SFVec3f([0.0578,-0.2883,-0.4475]),SFVec3f([-0.3757,-0.1509,-0.4548]),SFVec3f([-0.4553,0.0544,-0.4548]),SFVec3f([-0.3138,0.3194,-0.4725]),SFVec3f([0.365,0.3193,-0.4736]),SFVec3f([0.4578,0.0532,-0.4547]),SFVec3f([0.4287,-0.1537,-0.4547])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.8511,0.1006]),SFVec2f([0.8514,0.0953]),SFVec2f([0.8466,0.0958]),SFVec2f([0.8466,0.1011]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8283,0.1035]),SFVec2f([0.9023,0.1969]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8467,0.0958]),SFVec2f([0.8857,0.2021]),SFVec2f([0.8231,0.1042]),SFVec2f([0.8931,0.1724]),SFVec2f([0.8782,0.1769]),SFVec2f([0.8338,0.1268]),SFVec2f([0.8493,0.125]),SFVec2f([0.8543,0.1273]),SFVec2f([0.8302,0.1302]),SFVec2f([0.8258,0.1072]),SFVec2f([0.8236,0.1075]),SFVec2f([0.8231,0.1042]),SFVec2f([0.8504,0.1328]),SFVec2f([0.8508,0.1334]),SFVec2f([0.8781,0.1731]),SFVec2f([0.8909,0.1692]),SFVec2f([0.8352,0.1346]),SFVec2f([0.8353,0.1353]),SFVec2f([0.8228,0.0929]),SFVec2f([0.844,0.0896]),SFVec2f([0.8482,0.0889]),SFVec2f([0.8441,0.0896]),SFVec2f([0.8228,0.0929]),SFVec2f([0.8203,0.0995]),SFVec2f([0.8207,0.1038]),SFVec2f([0.8212,0.1068]),SFVec2f([0.8207,0.1037]),SFVec2f([0.8203,0.0995]),SFVec2f([0.8206,0.0933]),SFVec2f([0.8205,0.0933]),SFVec2f([0.8815,0.2034]),SFVec2f([0.8821,0.2087]),SFVec2f([0.9098,0.1997]),SFVec2f([0.8866,0.2074]),SFVec2f([0.8737,0.1777]),SFVec2f([0.8969,0.1707]),SFVec2f([0.9052,0.1925]),SFVec2f([0.9074,0.1918]),SFVec2f([0.9084,0.195]),SFVec2f([0.876,0.171]),SFVec2f([0.891,0.1665])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('r_carpal_proximal_interphalangeal_2'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_proximal_interphalangeal_2'),
                                                                                                                              center_ : SFVec3f([SFDouble(-8.059), SFDouble(26.969999), SFDouble(0.6304)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('r_carpal_middle_phalanx_2'),
                                                                                                                                  DEF_ : SFString('hanim_r_carpal_middle_phalanx_2'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(-8.059), SFDouble(26.969999), SFDouble(0.6304)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(1), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(16), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(26), SFInt32(-1), SFInt32(0), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(20), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(18), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0.0842,-1.127,-0.3611]),SFVec3f([0.4247,-1.116,0.201]),SFVec3f([-0.2936,-1.004,0.2104]),SFVec3f([-0.3843,-0.1994,0.2307]),SFVec3f([-0.3843,-0.1941,-0.2798]),SFVec3f([0.4256,0.0112,-0.2777]),SFVec3f([-0.4203,0.1156,-0.2766]),SFVec3f([0.4256,0.0059,0.2328]),SFVec3f([-0.4203,0.1104,0.2338]),SFVec3f([0.2414,0.2045,-0.2757]),SFVec3f([0.2414,0.1992,0.2347]),SFVec3f([-0.1761,0.1887,0.2346]),SFVec3f([-0.1761,0.194,-0.2758]),SFVec3f([0.0255,-0.0122,-0.3845]),SFVec3f([0.0255,-0.0204,0.3527]),SFVec3f([0.0839,-1.135,0.3208]),SFVec3f([-0.1687,-1.353,0.1876]),SFVec3f([0.075,-1.39,0.1958]),SFVec3f([0.4249,-1.111,-0.2542]),SFVec3f([0.3563,-1.282,0.16]),SFVec3f([0.3564,-1.278,-0.2161]),SFVec3f([-0.2934,-0.9988,-0.2626]),SFVec3f([-0.1685,-1.348,-0.2441]),SFVec3f([0.0752,-1.386,-0.2452])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.8782,0.1769]),SFVec2f([0.8543,0.1273]),SFVec2f([0.8574,0.1518]),SFVec2f([0.8703,0.1535]),SFVec2f([0.8493,0.125]),SFVec2f([0.8504,0.1318]),SFVec2f([0.8846,0.1491]),SFVec2f([0.8931,0.1724]),SFVec2f([0.8349,0.1336]),SFVec2f([0.8379,0.1515]),SFVec2f([0.8533,0.1496]),SFVec2f([0.8338,0.1268]),SFVec2f([0.8302,0.1302]),SFVec2f([0.8351,0.1545]),SFVec2f([0.849,0.1233]),SFVec2f([0.8336,0.1251]),SFVec2f([0.849,0.123]),SFVec2f([0.8335,0.1249]),SFVec2f([0.8539,0.1573]),SFVec2f([0.8543,0.1579]),SFVec2f([0.8703,0.1496]),SFVec2f([0.8822,0.146]),SFVec2f([0.8398,0.159]),SFVec2f([0.8399,0.1597]),SFVec2f([0.8737,0.1777]),SFVec2f([0.8664,0.1541]),SFVec2f([0.8969,0.1707]),SFVec2f([0.8878,0.1476]),SFVec2f([0.8796,0.181]),SFVec2f([0.8945,0.1764]),SFVec2f([0.8684,0.1475]),SFVec2f([0.8822,0.1433])])))))]),

                                                                                                                                HAnimJoint(
                                                                                                                                  name_ : SFString('r_carpal_distal_interphalangeal_2'),
                                                                                                                                  DEF_ : SFString('hanim_r_carpal_distal_interphalangeal_2'),
                                                                                                                                  center_ : SFVec3f([SFDouble(-8.013), SFDouble(25.85), SFDouble(0.5949)]),
                                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  children_ : [
                                                                                                                                    HAnimSegment(
                                                                                                                                      name_ : SFString('r_carpal_distal_phalanx_2'),
                                                                                                                                      DEF_ : SFString('hanim_r_carpal_distal_phalanx_2'),
                                                                                                                                      children_ : [
                                                                                                                                        Transform(
                                                                                                                                          translation_ : SFVec3f([SFDouble(-8.013), SFDouble(25.85), SFDouble(0.5949)]),
                                                                                                                                          child_ : 
                                                                                                                                            Shape(
                                                                                                                                              appearance_ : 
                                                                                                                                                Appearance(
                                                                                                                                                  material_ : 
                                                                                                                                                    Material(
                                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                                  texture_ : 
                                                                                                                                                    ImageTexture(
                                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                              geometry_ : 
                                                                                                                                                IndexedFaceSet(
                                                                                                                                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(23), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(31), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(32), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(32), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(31), SFInt32(-1)]),
                                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(33), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(35), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(21), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(23), SFInt32(-1), SFInt32(41), SFInt32(38), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(34), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(33), SFInt32(-1)]),
                                                                                                                                                  coord_ : 
                                                                                                                                                    Coordinate(
                                                                                                                                                      point_ : MFVec3f([SFVec3f([-0.3152,-0.145,0.2433]),SFVec3f([-0.315,-0.1398,-0.2298]),SFVec3f([-0.2422,-0.5055,0.2184]),SFVec3f([-0.242,-0.5007,-0.2162]),SFVec3f([0.3547,-0.4741,0.238]),SFVec3f([0.0817,-0.4944,0.3202]),SFVec3f([0.3549,-0.4688,-0.2341]),SFVec3f([0.082,-0.4873,-0.3192]),SFVec3f([-0.1332,-0.7789,0.1945]),SFVec3f([-0.1331,-0.7746,-0.1993]),SFVec3f([0.3575,-0.7605,0.19]),SFVec3f([0.1196,-0.7912,0.2759]),SFVec3f([0.3577,-0.7563,-0.187]),SFVec3f([0.1199,-0.785,-0.2787]),SFVec3f([-0.1657,-0.8631,-0.0043]),SFVec3f([0.3212,-0.8627,-0.0041]),SFVec3f([0.1205,-0.9246,-0.0048]),SFVec3f([-0.1615,-0.846,0.1047]),SFVec3f([0.3253,-0.8401,-0.0952]),SFVec3f([0.1076,-0.8953,0.1399]),SFVec3f([-0.1615,-0.845,-0.1068]),SFVec3f([0.3253,-0.8413,0.0926]),SFVec3f([0.1075,-0.8974,-0.1391]),SFVec3f([0.3791,0.003,0.2365]),SFVec3f([-0.339,0.1201,-0.2271]),SFVec3f([-0.3392,0.1148,0.2459]),SFVec3f([-0.1312,0.198,0.2297]),SFVec3f([-0.131,0.2029,-0.2085]),SFVec3f([0.2273,0.2003,0.2299]),SFVec3f([0.3793,0.008,-0.2188]),SFVec3f([0.2274,0.2051,-0.2084]),SFVec3f([0.0363,-0.0157,0.3561]),SFVec3f([0.0366,-0.0081,-0.3256])])),
                                                                                                                                                  texCoord_ : 
                                                                                                                                                    TextureCoordinate(
                                                                                                                                                      point_ : MFVec2f([SFVec2f([0.8542,0.1553]),SFVec2f([0.8574,0.1518]),SFVec2f([0.8533,0.1496]),SFVec2f([0.8379,0.1515]),SFVec2f([0.8351,0.1545]),SFVec2f([0.8388,0.1572]),SFVec2f([0.8414,0.1663]),SFVec2f([0.8547,0.1647]),SFVec2f([0.8578,0.1639]),SFVec2f([0.8665,0.142]),SFVec2f([0.8703,0.1535]),SFVec2f([0.8804,0.1378]),SFVec2f([0.8846,0.1491]),SFVec2f([0.8382,0.1663]),SFVec2f([0.8495,0.1759]),SFVec2f([0.8523,0.1752]),SFVec2f([0.8544,0.1737]),SFVec2f([0.8566,0.1736]),SFVec2f([0.8658,0.1324]),SFVec2f([0.8753,0.1296]),SFVec2f([0.8677,0.1303]),SFVec2f([0.8725,0.1289]),SFVec2f([0.842,0.1753]),SFVec2f([0.8441,0.175]),SFVec2f([0.8533,0.1759]),SFVec2f([0.8496,0.1769]),SFVec2f([0.8467,0.1759]),SFVec2f([0.846,0.1768]),SFVec2f([0.87,0.1292]),SFVec2f([0.8525,0.1477]),SFVec2f([0.8382,0.1495]),SFVec2f([0.8525,0.1475]),SFVec2f([0.8381,0.1492]),SFVec2f([0.8664,0.1541]),SFVec2f([0.8878,0.1476]),SFVec2f([0.8639,0.1422]),SFVec2f([0.8827,0.1365]),SFVec2f([0.8634,0.1325]),SFVec2f([0.8774,0.1283]),SFVec2f([0.8662,0.1297]),SFVec2f([0.8697,0.1281]),SFVec2f([0.8732,0.1275]),SFVec2f([0.872,0.1575]),SFVec2f([0.8858,0.1533])])))))])])])])])]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('r_midcarpal_3'),
                                                                                                                  DEF_ : SFString('hanim_r_midcarpal_3'),
                                                                                                                  center_ : SFVec3f([SFDouble(-8.032), SFDouble(31.49), SFDouble(-0.2132)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('r_capitate'),
                                                                                                                      DEF_ : SFString('hanim_r_capitate'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(-8.032), SFDouble(31.49), SFDouble(-0.2132)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(5), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(0), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(2), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(2), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(2), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(1), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(24), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(12), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(0), SFInt32(26), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(27), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(32), SFInt32(27), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(20), SFInt32(35), SFInt32(-1), SFInt32(24), SFInt32(0), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(37), SFInt32(24), SFInt32(-1), SFInt32(0), SFInt32(27), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(20), SFInt32(0), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(6), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(26), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(2), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([-0.7943,-1.006,-0.3306]),SFVec3f([0.648,-1.004,-0.3307]),SFVec3f([-0.6905,-0.0005,0.3157]),SFVec3f([-0.7213,0.0186,-0.3382]),SFVec3f([0.5902,0.0185,-0.3369]),SFVec3f([0.6274,-1.001,0.3565]),SFVec3f([0.5973,-0.0004,0.3249]),SFVec3f([-0.7905,-1.001,0.3565]),SFVec3f([0.5435,-1.162,-0.3389]),SFVec3f([0.5303,-1.172,0.3664]),SFVec3f([-0.6431,-1.172,0.3664]),SFVec3f([-0.6456,-1.164,-0.3388]),SFVec3f([0.4499,0.3085,0.3015]),SFVec3f([0.4451,0.3167,-0.2743]),SFVec3f([-0.5697,0.3168,-0.2752]),SFVec3f([-0.5495,0.3084,0.2952]),SFVec3f([0.5852,-0.9387,0.4693]),SFVec3f([0.5221,-0.0739,0.4318]),SFVec3f([-0.6176,-0.0739,0.4231]),SFVec3f([-0.704,-0.9387,0.4698]),SFVec3f([-0.7043,-0.9311,-0.4245]),SFVec3f([-0.6416,-0.0507,-0.4488]),SFVec3f([0.5127,-0.0508,-0.4475]),SFVec3f([0.5993,-0.929,-0.4247])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.9315,0.2698]),SFVec2f([0.8136,0.0488]),SFVec2f([0.7924,0.0507]),SFVec2f([0.7911,0.0281]),SFVec2f([0.8136,0.0488]),SFVec2f([0.813,0.0266]),SFVec2f([0.791,0.0281]),SFVec2f([0.7924,0.0508]),SFVec2f([0.7924,0.0543]),SFVec2f([0.8143,0.0526]),SFVec2f([0.8143,0.0526]),SFVec2f([0.7924,0.0543]),SFVec2f([0.9335,0.2763]),SFVec2f([0.7903,0.0215]),SFVec2f([0.7903,0.0215]),SFVec2f([0.8123,0.0198]),SFVec2f([0.7875,0.03]),SFVec2f([0.7875,0.03]),SFVec2f([0.7887,0.0494]),SFVec2f([0.7887,0.0495]),SFVec2f([0.9277,0.2691]),SFVec2f([0.8167,0.0279]),SFVec2f([0.8173,0.0471]),SFVec2f([0.8173,0.0471]),SFVec2f([0.9273,0.2479]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9531,0.2644]),SFVec2f([0.9318,0.2697]),SFVec2f([0.9473,0.2389]),SFVec2f([0.926,0.2443]),SFVec2f([0.955,0.2707]),SFVec2f([0.9551,0.2707]),SFVec2f([0.9337,0.2763]),SFVec2f([0.9563,0.262]),SFVec2f([0.9518,0.243]),SFVec2f([0.928,0.269]),SFVec2f([0.924,0.2502]),SFVec2f([0.9241,0.2502])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('r_carpometacarpal_3'),
                                                                                                                      DEF_ : SFString('hanim_r_carpometacarpal_3'),
                                                                                                                      center_ : SFVec3f([SFDouble(-8.032), SFDouble(30.48), SFDouble(-0.2779)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('r_metacarpal_3'),
                                                                                                                          DEF_ : SFString('hanim_r_metacarpal_3'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(-8.032), SFDouble(30.48), SFDouble(-0.2779)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(0), SFInt32(3), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(9), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(25), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(25), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(20), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(6), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(24), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(2), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(16), SFInt32(-1), SFInt32(9), SFInt32(7), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(9), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(8), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(8), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(23), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(3), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(13), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(10), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(11), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(4), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(35), SFInt32(11), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(39), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(46), SFInt32(43), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(48), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(23), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(31), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(9), SFInt32(-1), SFInt32(36), SFInt32(39), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(36), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(0), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(13), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(42), SFInt32(38), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(42), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(53), SFInt32(38), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(5), SFInt32(-1), SFInt32(8), SFInt32(12), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(3), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(33), SFInt32(15), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(6), SFInt32(11), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(19), SFInt32(6), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(10), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([-0.7345,-1.173,-0.2591]),SFVec3f([0.52,-1.173,-0.2591]),SFVec3f([0.3873,-2.115,-0.2835]),SFVec3f([-0.6104,-2.115,-0.2835]),SFVec3f([-0.7943,-0.0032,-0.2659]),SFVec3f([0.648,-0.0008,-0.266]),SFVec3f([-0.6106,-2.129,0.5221]),SFVec3f([0.5261,-1.217,0.489]),SFVec3f([-0.7252,-1.217,0.489]),SFVec3f([0.3831,-2.129,0.5221]),SFVec3f([0.6274,0.0017,0.4213]),SFVec3f([-0.7905,0.0017,0.4213]),SFVec3f([-0.5317,-2.284,0.4916]),SFVec3f([-0.5316,-2.289,-0.2329]),SFVec3f([0.3003,-2.289,-0.2329]),SFVec3f([0.2967,-2.284,0.4916]),SFVec3f([0.2822,-2.101,0.59]),SFVec3f([0.4237,-1.207,0.6426]),SFVec3f([0.5516,0.0221,0.5729]),SFVec3f([-0.683,0.0221,0.5729]),SFVec3f([-0.6219,-1.213,0.6429]),SFVec3f([-0.5169,-2.102,0.59]),SFVec3f([-0.4634,-2.2,0.572]),SFVec3f([0.2282,-2.2,0.572]),SFVec3f([-0.5108,-2.08,-0.3752]),SFVec3f([-0.622,-1.178,-0.3875]),SFVec3f([-0.6765,0.0078,-0.3867]),SFVec3f([0.5551,0.0098,-0.3868]),SFVec3f([0.4091,-1.172,-0.3877]),SFVec3f([0.2813,-2.079,-0.3753]),SFVec3f([0.2267,-2.197,-0.3441]),SFVec3f([-0.4567,-2.197,-0.3441]),SFVec3f([0.5375,0.1089,0.2867]),SFVec3f([0.55,0.1079,-0.1665]),SFVec3f([-0.661,0.1057,-0.1664]),SFVec3f([-0.6586,0.1092,0.2867])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.8225,0.0994]),SFVec2f([0.8195,0.0808]),SFVec2f([0.7938,0.0824]),SFVec2f([0.7939,0.1016]),SFVec2f([0.8195,0.0808]),SFVec2f([0.7938,0.0824]),SFVec2f([0.7924,0.0507]),SFVec2f([0.8136,0.0488]),SFVec2f([0.7939,0.1016]),SFVec2f([0.8225,0.0994]),SFVec2f([0.8136,0.0488]),SFVec2f([0.7924,0.0508]),SFVec2f([0.7964,0.1053]),SFVec2f([0.8205,0.103]),SFVec2f([0.8205,0.103]),SFVec2f([0.7964,0.1053]),SFVec2f([0.796,0.0481]),SFVec2f([0.809,0.0468]),SFVec2f([0.809,0.0469]),SFVec2f([0.796,0.048]),SFVec2f([0.7888,0.0827]),SFVec2f([0.7888,0.0826]),SFVec2f([0.7886,0.1011]),SFVec2f([0.7887,0.1011]),SFVec2f([0.8243,0.0799]),SFVec2f([0.8186,0.0479]),SFVec2f([0.8186,0.0479]),SFVec2f([0.8243,0.0801]),SFVec2f([0.7878,0.051]),SFVec2f([0.7878,0.0509]),SFVec2f([0.8275,0.0984]),SFVec2f([0.8275,0.0983]),SFVec2f([0.7902,0.1036]),SFVec2f([0.7902,0.1036]),SFVec2f([0.8264,0.1006]),SFVec2f([0.8264,0.1006]),SFVec2f([0.916,0.2175]),SFVec2f([0.941,0.2114]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9273,0.2479]),SFVec2f([0.9376,0.1925]),SFVec2f([0.9098,0.1997]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9448,0.2456]),SFVec2f([0.9323,0.249]),SFVec2f([0.9323,0.249]),SFVec2f([0.9448,0.2456]),SFVec2f([0.9459,0.2103]),SFVec2f([0.9115,0.2191]),SFVec2f([0.9226,0.2496]),SFVec2f([0.9226,0.2496]),SFVec2f([0.9114,0.219]),SFVec2f([0.9524,0.2413]),SFVec2f([0.9524,0.2414])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('r_metacarpophalangeal_3'),
                                                                                                                          DEF_ : SFString('hanim_r_metacarpophalangeal_3'),
                                                                                                                          center_ : SFVec3f([SFDouble(-8.147), SFDouble(28.219999), SFDouble(-0.1741)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('r_carpal_proximal_phalanx_3'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_proximal_phalanx_3'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(-8.147), SFDouble(28.219999), SFDouble(-0.1741)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(3), SFInt32(21), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(26), SFInt32(23), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(22), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(5), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(17), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(18), SFInt32(21), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(18), SFInt32(3), SFInt32(-1), SFInt32(19), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(26), SFInt32(21), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(26), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(35), SFInt32(-1), SFInt32(38), SFInt32(32), SFInt32(35), SFInt32(-1), SFInt32(38), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(44), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(44), SFInt32(41), SFInt32(42), SFInt32(-1), SFInt32(44), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(18), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(27), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(19), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(27), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(21), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(29), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(22), SFInt32(-1), SFInt32(23), SFInt32(26), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(23), SFInt32(-1), SFInt32(26), SFInt32(28), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(26), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(25), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(31), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(22), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(24), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(4), SFInt32(49), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(51), SFInt32(46), SFInt32(4), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(48), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(54), SFInt32(48), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(52), SFInt32(10), SFInt32(-1), SFInt32(25), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(25), SFInt32(-1), SFInt32(55), SFInt32(7), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(55), SFInt32(-1), SFInt32(0), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(56), SFInt32(7), SFInt32(47), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(6), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(39), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(6), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(26), SFInt32(-1), SFInt32(6), SFInt32(30), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(6), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(29), SFInt32(-1), SFInt32(1), SFInt32(24), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(28), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(2), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(31), SFInt32(-1), SFInt32(5), SFInt32(16), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(5), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(16), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([0.5139,-1.411,-0.2221]),SFVec3f([-0.332,-1.294,-0.2251]),SFVec3f([0.1138,-1.44,-0.347]),SFVec3f([-0.4109,-0.0964,0.3132]),SFVec3f([-0.4109,-0.0905,-0.2649]),SFVec3f([0.4653,-0.0905,-0.2649]),SFVec3f([0.4653,-0.0964,0.3132]),SFVec3f([0.0567,-0.238,-0.3659]),SFVec3f([0.4394,-1.599,-0.1832]),SFVec3f([-0.172,-1.692,-0.2102]),SFVec3f([0.4394,-1.593,0.2229]),SFVec3f([-0.172,-1.686,0.2561]),SFVec3f([0.1148,-1.727,-0.2101]),SFVec3f([0.1148,-1.721,0.2661]),SFVec3f([0.5139,-1.404,0.2513]),SFVec3f([0.1138,-1.43,0.3905]),SFVec3f([0.0567,-0.2387,0.4126]),SFVec3f([-0.332,-1.287,0.2483]),SFVec3f([-0.4109,-0.0974,0.4198]),SFVec3f([0.4653,-0.0974,0.4198]),SFVec3f([0.0567,-0.2372,0.4256]),SFVec3f([-0.4951,0.1322,0.4183]),SFVec3f([0.0567,-0.2357,-0.3789]),SFVec3f([-0.4109,-0.0983,-0.3758]),SFVec3f([0.4653,-0.0983,-0.3758]),SFVec3f([0.5029,0.1462,-0.3874]),SFVec3f([-0.4949,0.1462,-0.3874]),SFVec3f([0.4986,0.1322,0.4183]),SFVec3f([-0.3331,0.4155,-0.3612]),SFVec3f([-0.3333,0.417,0.3717]),SFVec3f([0.3998,0.417,0.3717]),SFVec3f([0.4035,0.4155,-0.3612]),SFVec3f([-0.3889,-0.0506,0.451]),SFVec3f([0.0558,-0.1916,0.4554]),SFVec3f([0.4401,-0.052,0.451]),SFVec3f([0.4709,0.1519,0.4501]),SFVec3f([0.3792,0.4207,0.4493]),SFVec3f([-0.3158,0.4207,0.4493]),SFVec3f([-0.4731,0.1521,0.4501]),SFVec3f([0.0556,-0.1849,-0.4078]),SFVec3f([-0.3711,-0.0605,-0.4181]),SFVec3f([-0.4488,0.1472,-0.4248]),SFVec3f([-0.3032,0.412,-0.4254]),SFVec3f([0.367,0.412,-0.4254]),SFVec3f([0.4521,0.1476,-0.4248]),SFVec3f([0.4197,-0.0633,-0.4181])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.8168,0.105]),SFVec2f([0.8225,0.0994]),SFVec2f([0.7939,0.1016]),SFVec2f([0.7996,0.1065]),SFVec2f([0.9311,0.1887]),SFVec2f([0.7939,0.1016]),SFVec2f([0.8225,0.0994]),SFVec2f([0.9145,0.1932]),SFVec2f([0.794,0.107]),SFVec2f([0.9232,0.1611]),SFVec2f([0.908,0.1649]),SFVec2f([0.8025,0.1324]),SFVec2f([0.818,0.1313]),SFVec2f([0.7986,0.1359]),SFVec2f([0.7957,0.11]),SFVec2f([0.7939,0.1101]),SFVec2f([0.794,0.107]),SFVec2f([0.8228,0.1342]),SFVec2f([0.8186,0.1401]),SFVec2f([0.819,0.1409]),SFVec2f([0.9081,0.1606]),SFVec2f([0.921,0.1574]),SFVec2f([0.8033,0.1412]),SFVec2f([0.8033,0.142]),SFVec2f([0.8231,0.1042]),SFVec2f([0.8212,0.1078]),SFVec2f([0.8231,0.1042]),SFVec2f([0.8236,0.1075]),SFVec2f([0.7948,0.0956]),SFVec2f([0.8206,0.0932]),SFVec2f([0.8206,0.0932]),SFVec2f([0.7948,0.0956]),SFVec2f([0.8249,0.0987]),SFVec2f([0.8253,0.1032]),SFVec2f([0.8258,0.1063]),SFVec2f([0.8253,0.1032]),SFVec2f([0.8249,0.0987]),SFVec2f([0.823,0.0929]),SFVec2f([0.823,0.0929]),SFVec2f([0.7917,0.1017]),SFVec2f([0.7916,0.1064]),SFVec2f([0.7918,0.1091]),SFVec2f([0.7916,0.1063]),SFVec2f([0.7917,0.1017]),SFVec2f([0.7927,0.0957]),SFVec2f([0.7927,0.0957]),SFVec2f([0.9376,0.1925]),SFVec2f([0.9098,0.1997]),SFVec2f([0.927,0.1595]),SFVec2f([0.9344,0.1846]),SFVec2f([0.9361,0.1842]),SFVec2f([0.9366,0.1872]),SFVec2f([0.9035,0.1654]),SFVec2f([0.9061,0.1582]),SFVec2f([0.9213,0.1544]),SFVec2f([0.9096,0.1911]),SFVec2f([0.9084,0.195]),SFVec2f([0.9074,0.1918])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('r_carpal_proximal_interphalangeal_3'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_proximal_interphalangeal_3'),
                                                                                                                              center_ : SFVec3f([SFDouble(-8.059), SFDouble(26.809999), SFDouble(-0.1572)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('r_carpal_middle_phalanx_3'),
                                                                                                                                  DEF_ : SFString('hanim_r_carpal_middle_phalanx_3'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(-8.059), SFDouble(26.809999), SFDouble(-0.1572)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(1), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(16), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(26), SFInt32(-1), SFInt32(0), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(20), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(18), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0.0742,-1.244,-0.3277]),SFVec3f([0.4153,-1.216,0.2336]),SFVec3f([-0.3026,-1.092,0.2392]),SFVec3f([-0.3843,-0.2231,0.2405]),SFVec3f([-0.3843,-0.2294,-0.2329]),SFVec3f([0.4256,0.0008,-0.2389]),SFVec3f([-0.4203,0.1179,-0.242]),SFVec3f([0.4256,0.0071,0.2345]),SFVec3f([-0.4203,0.1243,0.2314]),SFVec3f([0.2414,0.2175,-0.2446]),SFVec3f([0.2414,0.2239,0.2288]),SFVec3f([-0.1761,0.2121,0.2291]),SFVec3f([-0.1761,0.2057,-0.2443]),SFVec3f([0.0255,-0.0287,-0.3639]),SFVec3f([0.0255,-0.0188,0.3737]),SFVec3f([0.0745,-1.235,0.3544]),SFVec3f([-0.1793,-1.484,0.2301]),SFVec3f([0.0653,-1.497,0.2372]),SFVec3f([0.4151,-1.222,-0.2219]),SFVec3f([0.3461,-1.403,0.1992]),SFVec3f([0.3459,-1.408,-0.177]),SFVec3f([-0.3028,-1.098,-0.234]),SFVec3f([-0.1795,-1.49,-0.2018]),SFVec3f([0.0641,-1.531,-0.2017])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.908,0.1649]),SFVec2f([0.8228,0.1342]),SFVec2f([0.8238,0.1612]),SFVec2f([0.9018,0.1387]),SFVec2f([0.818,0.1313]),SFVec2f([0.8186,0.139]),SFVec2f([0.9163,0.135]),SFVec2f([0.9232,0.1611]),SFVec2f([0.8031,0.1401]),SFVec2f([0.8044,0.1596]),SFVec2f([0.8199,0.1584]),SFVec2f([0.8025,0.1324]),SFVec2f([0.7986,0.1359]),SFVec2f([0.8014,0.1628]),SFVec2f([0.8179,0.1294]),SFVec2f([0.8023,0.1305]),SFVec2f([0.8179,0.1291]),SFVec2f([0.8023,0.1302]),SFVec2f([0.8199,0.1671]),SFVec2f([0.8202,0.1672]),SFVec2f([0.902,0.1343]),SFVec2f([0.914,0.1313]),SFVec2f([0.8058,0.1681]),SFVec2f([0.8058,0.1689]),SFVec2f([0.9035,0.1654]),SFVec2f([0.8978,0.139]),SFVec2f([0.927,0.1595]),SFVec2f([0.9196,0.1336]),SFVec2f([0.9092,0.1696]),SFVec2f([0.9243,0.1658]),SFVec2f([0.9003,0.1324]),SFVec2f([0.9142,0.1283])])))))]),

                                                                                                                                HAnimJoint(
                                                                                                                                  name_ : SFString('r_carpal_distal_interphalangeal_3'),
                                                                                                                                  DEF_ : SFString('hanim_r_carpal_distal_interphalangeal_3'),
                                                                                                                                  center_ : SFVec3f([SFDouble(-8.013), SFDouble(25.57), SFDouble(-0.1671)]),
                                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  children_ : [
                                                                                                                                    HAnimSegment(
                                                                                                                                      name_ : SFString('r_carpal_distal_phalanx_3'),
                                                                                                                                      DEF_ : SFString('hanim_r_carpal_distal_phalanx_3'),
                                                                                                                                      children_ : [
                                                                                                                                        Transform(
                                                                                                                                          translation_ : SFVec3f([SFDouble(-8.013), SFDouble(25.57), SFDouble(-0.1671)]),
                                                                                                                                          child_ : 
                                                                                                                                            Shape(
                                                                                                                                              appearance_ : 
                                                                                                                                                Appearance(
                                                                                                                                                  material_ : 
                                                                                                                                                    Material(
                                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                                  texture_ : 
                                                                                                                                                    ImageTexture(
                                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                              geometry_ : 
                                                                                                                                                IndexedFaceSet(
                                                                                                                                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(23), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(31), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(32), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(32), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(31), SFInt32(-1)]),
                                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(33), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(35), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(21), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(23), SFInt32(-1), SFInt32(41), SFInt32(38), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(34), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(33), SFInt32(-1)]),
                                                                                                                                                  coord_ : 
                                                                                                                                                    Coordinate(
                                                                                                                                                      point_ : MFVec3f([SFVec3f([-0.3088,-0.1396,0.2568]),SFVec3f([-0.309,-0.146,-0.2166]),SFVec3f([-0.2521,-0.4949,0.2523]),SFVec3f([-0.2525,-0.5053,-0.1929]),SFVec3f([0.3444,-0.4714,0.2712]),SFVec3f([0.0718,-0.4844,0.3472]),SFVec3f([0.344,-0.4826,-0.2124]),SFVec3f([0.0712,-0.4992,-0.2979]),SFVec3f([-0.1267,-0.8325,0.2296]),SFVec3f([-0.1271,-0.8423,-0.17]),SFVec3f([0.3449,-0.8222,0.2244]),SFVec3f([0.1082,-0.8209,0.3006]),SFVec3f([0.3446,-0.8316,-0.1582]),SFVec3f([0.1077,-0.8339,-0.24]),SFVec3f([-0.1586,-0.9,0.0299]),SFVec3f([0.3093,-0.9026,0.0297]),SFVec3f([0.1093,-0.9463,0.0305]),SFVec3f([-0.1544,-0.884,0.14]),SFVec3f([0.3132,-0.8892,-0.0631]),SFVec3f([0.0963,-0.9202,0.1766]),SFVec3f([-0.1546,-0.8902,-0.0746]),SFVec3f([0.3134,-0.8839,0.1274]),SFVec3f([0.0959,-0.9309,-0.1063]),SFVec3f([0.3697,0.028,0.2435]),SFVec3f([-0.3484,0.1453,-0.2241]),SFVec3f([-0.3482,0.1516,0.2492]),SFVec3f([-0.1398,0.245,0.2295]),SFVec3f([-0.14,0.2392,-0.2089]),SFVec3f([0.2187,0.2486,0.2292]),SFVec3f([0.3695,0.022,-0.212]),SFVec3f([0.2185,0.2427,-0.2093]),SFVec3f([0.0269,0.0093,0.3642]),SFVec3f([0.0266,0.0001,-0.3179])])),
                                                                                                                                                  texCoord_ : 
                                                                                                                                                    TextureCoordinate(
                                                                                                                                                      point_ : MFVec2f([SFVec2f([0.8204,0.1649]),SFVec2f([0.8238,0.1612]),SFVec2f([0.8199,0.1584]),SFVec2f([0.8044,0.1596]),SFVec2f([0.8014,0.1628]),SFVec2f([0.8049,0.166]),SFVec2f([0.807,0.1802]),SFVec2f([0.8204,0.1792]),SFVec2f([0.8232,0.1783]),SFVec2f([0.8982,0.1238]),SFVec2f([0.9018,0.1387]),SFVec2f([0.9123,0.1202]),SFVec2f([0.9163,0.135]),SFVec2f([0.8038,0.18]),SFVec2f([0.8141,0.1881]),SFVec2f([0.8169,0.1876]),SFVec2f([0.8192,0.1861]),SFVec2f([0.8213,0.1861]),SFVec2f([0.8983,0.1142]),SFVec2f([0.9079,0.1117]),SFVec2f([0.9004,0.112]),SFVec2f([0.9052,0.1108]),SFVec2f([0.8067,0.1872]),SFVec2f([0.8088,0.1869]),SFVec2f([0.8179,0.1883]),SFVec2f([0.8142,0.1891]),SFVec2f([0.8114,0.188]),SFVec2f([0.8106,0.1889]),SFVec2f([0.9027,0.111]),SFVec2f([0.8192,0.1563]),SFVec2f([0.8048,0.1573]),SFVec2f([0.8192,0.156]),SFVec2f([0.8048,0.1571]),SFVec2f([0.8978,0.139]),SFVec2f([0.9196,0.1336]),SFVec2f([0.8956,0.1239]),SFVec2f([0.9147,0.119]),SFVec2f([0.8959,0.1141]),SFVec2f([0.9101,0.1105]),SFVec2f([0.8989,0.1113]),SFVec2f([0.9025,0.1098]),SFVec2f([0.906,0.1094]),SFVec2f([0.9033,0.1433]),SFVec2f([0.9173,0.1398])])))))])])])])])]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('r_midcarpal_4_5'),
                                                                                                                  DEF_ : SFString('hanim_r_midcarpal_4_5'),
                                                                                                                  center_ : SFVec3f([SFDouble(-8.032), SFDouble(31.370001), SFDouble(-1.144)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('r_hamate'),
                                                                                                                      DEF_ : SFString('hanim_r_hamate'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(-8.032), SFDouble(31.370001), SFDouble(-1.144)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(6), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(7), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(17), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(9), SFInt32(0), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(1), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(9), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(11), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(3), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(11), SFInt32(-1), SFInt32(2), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(16), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(23), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(16), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(26), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(25), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(4), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(2), SFInt32(-1), SFInt32(29), SFInt32(9), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(34), SFInt32(8), SFInt32(-1), SFInt32(11), SFInt32(30), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(43), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(28), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(19), SFInt32(3), SFInt32(-1), SFInt32(31), SFInt32(7), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(31), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(6), SFInt32(-1), SFInt32(30), SFInt32(11), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(39), SFInt32(30), SFInt32(-1), SFInt32(11), SFInt32(7), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(11), SFInt32(-1), SFInt32(7), SFInt32(31), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(23), SFInt32(7), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([-0.7573,-0.8348,-0.0837]),SFVec3f([0.4564,-0.7476,-0.5366]),SFVec3f([0.6059,-0.8342,-0.0839]),SFVec3f([-0.0802,-0.7042,-0.6722]),SFVec3f([-0.5794,-0.751,-0.5355]),SFVec3f([0.4299,-0.0336,-0.0706]),SFVec3f([-0.0854,-0.0164,-0.3649]),SFVec3f([-0.6165,-0.0333,-0.0701]),SFVec3f([-0.7213,0.1352,0.5926]),SFVec3f([-0.7943,-0.8895,0.6002]),SFVec3f([0.648,-0.8871,0.6001]),SFVec3f([0.5902,0.1351,0.5939]),SFVec3f([-0.6385,-1.05,0.5965]),SFVec3f([-0.6101,-1.017,-0.0884]),SFVec3f([-0.4568,-0.9463,-0.4747]),SFVec3f([-0.0724,-0.9059,-0.5792]),SFVec3f([0.3357,-0.9442,-0.4714]),SFVec3f([0.4637,-1.017,-0.0877]),SFVec3f([0.5294,-1.048,0.5964]),SFVec3f([0.4096,0.4323,0.6564]),SFVec3f([0.2986,0.2698,-0.012]),SFVec3f([-0.0779,0.2847,-0.2247]),SFVec3f([-0.4802,0.269,-0.0066]),SFVec3f([-0.5535,0.4329,0.6554]),SFVec3f([-0.6285,0.0491,0.6714]),SFVec3f([-0.6895,-0.8073,0.6712]),SFVec3f([0.5838,-0.8052,0.6711]),SFVec3f([0.4997,0.049,0.6726])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.7624,0.0345]),SFVec2f([0.7525,0.0502]),SFVec2f([0.7571,0.0508]),SFVec2f([0.7729,0.0334]),SFVec2f([0.7734,0.0512]),SFVec2f([0.7924,0.0508]),SFVec2f([0.791,0.0281]),SFVec2f([0.9531,0.2644]),SFVec2f([0.9665,0.2386]),SFVec2f([0.9827,0.2362]),SFVec2f([0.9706,0.2558]),SFVec2f([0.9479,0.2423]),SFVec2f([0.7736,0.0553]),SFVec2f([0.7595,0.0549]),SFVec2f([0.7559,0.0544]),SFVec2f([0.7596,0.0549]),SFVec2f([0.7736,0.0553]),SFVec2f([0.7721,0.0268]),SFVec2f([0.7644,0.0276]),SFVec2f([0.7723,0.0268]),SFVec2f([0.7938,0.0298]),SFVec2f([0.795,0.0487]),SFVec2f([0.9457,0.2448]),SFVec2f([0.9501,0.2632]),SFVec2f([0.7926,0.0543]),SFVec2f([0.7926,0.0544]),SFVec2f([0.7903,0.0215]),SFVec2f([0.7903,0.0215]),SFVec2f([0.9803,0.2531]),SFVec2f([0.9874,0.236]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9532,0.2644]),SFVec2f([0.9832,0.2324]),SFVec2f([0.9795,0.2325]),SFVec2f([0.9656,0.2346]),SFVec2f([0.9721,0.2624]),SFVec2f([0.9795,0.2602]),SFVec2f([0.9719,0.2625]),SFVec2f([0.9502,0.2632]),SFVec2f([0.9457,0.2447]),SFVec2f([0.9471,0.2389]),SFVec2f([0.9471,0.2388]),SFVec2f([0.9551,0.2707]),SFVec2f([0.955,0.2707])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('r_carpometacarpal_4'),
                                                                                                                      DEF_ : SFString('hanim_r_carpometacarpal_4'),
                                                                                                                      center_ : SFVec3f([SFDouble(-8.032), SFDouble(30.5), SFDouble(-0.8853)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('r_metacarpal_4'),
                                                                                                                          DEF_ : SFString('hanim_r_metacarpal_4'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(-8.032), SFDouble(30.5), SFDouble(-0.8853)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(9), SFInt32(6), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(9), SFInt32(-1), SFInt32(6), SFInt32(10), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(0), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(1), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(7), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(17), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(24), SFInt32(29), SFInt32(-1), SFInt32(17), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(17), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(24), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(28), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(4), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(1), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(5), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(14), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(23), SFInt32(13), SFInt32(-1), SFInt32(6), SFInt32(9), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(12), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(11), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(7), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(6), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(35), SFInt32(5), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(38), SFInt32(39), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(9), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(9), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(38), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(12), SFInt32(-1), SFInt32(16), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(45), SFInt32(16), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(20), SFInt32(-1), SFInt32(48), SFInt32(49), SFInt32(50), SFInt32(-1), SFInt32(50), SFInt32(51), SFInt32(48), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(12), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(23), SFInt32(-1), SFInt32(8), SFInt32(7), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(8), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(31), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(3), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(2), SFInt32(-1), SFInt32(37), SFInt32(41), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(52), SFInt32(37), SFInt32(-1), SFInt32(41), SFInt32(9), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(53), SFInt32(41), SFInt32(-1), SFInt32(9), SFInt32(40), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(46), SFInt32(9), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(22), SFInt32(8), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(3), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(33), SFInt32(13), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(27), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(12), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(30), SFInt32(0), SFInt32(-1), SFInt32(12), SFInt32(15), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(15), SFInt32(7), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(35), SFInt32(15), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(31), SFInt32(7), SFInt32(-1), SFInt32(38), SFInt32(42), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(48), SFInt32(38), SFInt32(-1), SFInt32(11), SFInt32(4), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(11), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(4), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(36), SFInt32(42), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(45), SFInt32(36), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(16), SFInt32(42), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(10), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([-0.6701,-1.109,-0.381]),SFVec3f([0.5002,-1.109,-0.381]),SFVec3f([-0.5854,-2.053,-0.382]),SFVec3f([0.3852,-2.055,-0.3819]),SFVec3f([-0.7573,0.0375,-0.3424]),SFVec3f([0.6059,0.038,-0.3427]),SFVec3f([-0.7345,-1.187,0.3483]),SFVec3f([0.52,-1.187,0.3483]),SFVec3f([0.3873,-2.129,0.3239]),SFVec3f([-0.6104,-2.129,0.3239]),SFVec3f([-0.7943,-0.0173,0.3415]),SFVec3f([0.648,-0.0149,0.3414]),SFVec3f([-0.5243,-2.308,0.28]),SFVec3f([-0.497,-2.261,-0.3321]),SFVec3f([0.2939,-2.263,-0.3318]),SFVec3f([0.2957,-2.308,0.28]),SFVec3f([-0.4894,-2.031,-0.4703]),SFVec3f([-0.5729,-1.093,-0.5036]),SFVec3f([-0.6547,0.0614,-0.4454]),SFVec3f([0.4956,0.0619,-0.4456]),SFVec3f([0.4036,-1.089,-0.5034]),SFVec3f([0.2898,-2.031,-0.4702]),SFVec3f([0.2275,-2.181,-0.4572]),SFVec3f([-0.4297,-2.18,-0.4575]),SFVec3f([-0.6305,-1.198,0.4843]),SFVec3f([-0.5217,-2.087,0.416]),SFVec3f([-0.4533,-2.218,0.3849]),SFVec3f([0.2266,-2.218,0.3849]),SFVec3f([0.2933,-2.087,0.416]),SFVec3f([0.4181,-1.194,0.4842]),SFVec3f([0.5616,-0.0205,0.464]),SFVec3f([-0.6844,-0.0225,0.4641]),SFVec3f([-0.6316,0.1344,-0.2698]),SFVec3f([-0.6522,0.1035,0.257]),SFVec3f([0.5315,0.1057,0.257]),SFVec3f([0.4839,0.1347,-0.27])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.7939,0.1016]),SFVec2f([0.7938,0.0824]),SFVec2f([0.7694,0.0827]),SFVec2f([0.766,0.1014]),SFVec2f([0.7924,0.0508]),SFVec2f([0.7734,0.0512]),SFVec2f([0.7938,0.0824]),SFVec2f([0.7939,0.1016]),SFVec2f([0.766,0.1015]),SFVec2f([0.965,0.2069]),SFVec2f([0.7734,0.0512]),SFVec2f([0.7924,0.0507]),SFVec2f([0.7909,0.1057]),SFVec2f([0.7677,0.1056]),SFVec2f([0.7677,0.1057]),SFVec2f([0.7909,0.1057]),SFVec2f([0.9517,0.2441]),SFVec2f([0.7765,0.0488]),SFVec2f([0.7765,0.0488]),SFVec2f([0.789,0.0484]),SFVec2f([0.7643,0.0825]),SFVec2f([0.7643,0.0824]),SFVec2f([0.7614,0.1009]),SFVec2f([0.7614,0.1009]),SFVec2f([0.7991,0.0823]),SFVec2f([0.7971,0.0505]),SFVec2f([0.7971,0.0505]),SFVec2f([0.7991,0.0824]),SFVec2f([0.7688,0.0511]),SFVec2f([0.7688,0.0511]),SFVec2f([0.7994,0.1003]),SFVec2f([0.7994,0.1003]),SFVec2f([0.7625,0.1038]),SFVec2f([0.7625,0.1038]),SFVec2f([0.7972,0.1034]),SFVec2f([0.7972,0.1034]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9665,0.2385]),SFVec2f([0.941,0.2114]),SFVec2f([0.9376,0.1925]),SFVec2f([0.9651,0.1878]),SFVec2f([0.9665,0.2386]),SFVec2f([0.9479,0.2423]),SFVec2f([0.9639,0.2415]),SFVec2f([0.9639,0.2415]),SFVec2f([0.9517,0.244]),SFVec2f([0.9701,0.2063]),SFVec2f([0.9698,0.1875]),SFVec2f([0.9358,0.2124]),SFVec2f([0.9433,0.2434]),SFVec2f([0.9433,0.2434]),SFVec2f([0.9358,0.2123]),SFVec2f([0.9711,0.2379]),SFVec2f([0.9711,0.2379])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('r_metacarpophalangeal_4'),
                                                                                                                          DEF_ : SFString('hanim_r_metacarpophalangeal_4'),
                                                                                                                          center_ : SFVec3f([SFDouble(-8.147), SFDouble(28.18), SFDouble(-0.9529)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('r_carpal_proximal_phalanx_4'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_proximal_phalanx_4'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(-8.147), SFDouble(28.18), SFDouble(-0.9529)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(3), SFInt32(23), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(22), SFInt32(44), SFInt32(-1), SFInt32(0), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(3), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(0), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(43), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(5), SFInt32(7), SFInt32(-1), SFInt32(4), SFInt32(44), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(45), SFInt32(32), SFInt32(5), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(8), SFInt32(0), SFInt32(-1), SFInt32(17), SFInt32(1), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(17), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(12), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(1), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(10), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(40), SFInt32(23), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(16), SFInt32(3), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(6), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(16), SFInt32(-1), SFInt32(3), SFInt32(16), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(3), SFInt32(-1), SFInt32(42), SFInt32(6), SFInt32(31), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(28), SFInt32(-1), SFInt32(24), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(24), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(31), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(37), SFInt32(-1), SFInt32(33), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(33), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(40), SFInt32(41), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(40), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(41), SFInt32(-1), SFInt32(42), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(42), SFInt32(-1), SFInt32(31), SFInt32(20), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(31), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(20), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(30), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(40), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(43), SFInt32(-1), SFInt32(44), SFInt32(22), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(44), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(22), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(38), SFInt32(18), SFInt32(-1), SFInt32(21), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(39), SFInt32(21), SFInt32(-1), SFInt32(32), SFInt32(45), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(45), SFInt32(43), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(45), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(46), SFInt32(47), SFInt32(-1), SFInt32(47), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(8), SFInt32(-1), SFInt32(9), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(48), SFInt32(49), SFInt32(-1), SFInt32(49), SFInt32(4), SFInt32(9), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(49), SFInt32(50), SFInt32(51), SFInt32(-1), SFInt32(51), SFInt32(4), SFInt32(49), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(51), SFInt32(46), SFInt32(4), SFInt32(-1), SFInt32(17), SFInt32(12), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(17), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(9), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(12), SFInt32(-1), SFInt32(48), SFInt32(9), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(54), SFInt32(48), SFInt32(-1), SFInt32(11), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(52), SFInt32(53), SFInt32(-1), SFInt32(53), SFInt32(20), SFInt32(10), SFInt32(-1), SFInt32(20), SFInt32(53), SFInt32(54), SFInt32(-1), SFInt32(54), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(0), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(10), SFInt32(7), SFInt32(55), SFInt32(-1), SFInt32(55), SFInt32(52), SFInt32(10), SFInt32(-1), SFInt32(25), SFInt32(0), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(17), SFInt32(25), SFInt32(-1), SFInt32(55), SFInt32(7), SFInt32(56), SFInt32(-1), SFInt32(56), SFInt32(57), SFInt32(55), SFInt32(-1), SFInt32(0), SFInt32(25), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(0), SFInt32(-1), SFInt32(56), SFInt32(7), SFInt32(47), SFInt32(-1), SFInt32(31), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(2), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(33), SFInt32(36), SFInt32(-1), SFInt32(32), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(32), SFInt32(37), SFInt32(38), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(6), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(41), SFInt32(43), SFInt32(-1), SFInt32(39), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(39), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(24), SFInt32(27), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(33), SFInt32(24), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(34), SFInt32(27), SFInt32(-1), SFInt32(26), SFInt32(6), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(35), SFInt32(26), SFInt32(-1), SFInt32(6), SFInt32(30), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(36), SFInt32(6), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(37), SFInt32(30), SFInt32(-1), SFInt32(29), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(38), SFInt32(29), SFInt32(-1), SFInt32(1), SFInt32(24), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(15), SFInt32(8), SFInt32(42), SFInt32(-1), SFInt32(42), SFInt32(41), SFInt32(15), SFInt32(-1), SFInt32(8), SFInt32(2), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(8), SFInt32(-1), SFInt32(2), SFInt32(28), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(43), SFInt32(2), SFInt32(-1), SFInt32(28), SFInt32(31), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(44), SFInt32(28), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(45), SFInt32(31), SFInt32(-1), SFInt32(5), SFInt32(16), SFInt32(40), SFInt32(-1), SFInt32(40), SFInt32(39), SFInt32(5), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(40), SFInt32(16), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([0.5138,-1.2,-0.1973]),SFVec3f([-0.3321,-1.094,-0.2008]),SFVec3f([0.1137,-1.228,-0.3178]),SFVec3f([-0.411,-0.0395,0.2967]),SFVec3f([-0.4111,0.0046,-0.2029]),SFVec3f([0.4652,0.0046,-0.2029]),SFVec3f([0.4652,-0.0395,0.2967]),SFVec3f([0.0566,-0.1,-0.3284]),SFVec3f([0.4393,-1.371,-0.1653]),SFVec3f([-0.1722,-1.457,-0.1917]),SFVec3f([0.4393,-1.361,0.2347]),SFVec3f([-0.1722,-1.444,0.2676]),SFVec3f([0.1147,-1.489,-0.1915]),SFVec3f([0.1147,-1.476,0.2775]),SFVec3f([0.5138,-1.189,0.26]),SFVec3f([0.1137,-1.211,0.3945]),SFVec3f([0.0566,-0.1878,0.3836]),SFVec3f([-0.3321,-1.083,0.2565]),SFVec3f([-0.3332,0.5222,-0.2966]),SFVec3f([-0.3334,0.4616,0.3736]),SFVec3f([0.3997,0.4616,0.3736]),SFVec3f([0.4034,0.5222,-0.2966]),SFVec3f([-0.47,0.2688,-0.3145]),SFVec3f([-0.495,0.1933,0.3915]),SFVec3f([-0.4732,0.206,0.4381]),SFVec3f([-0.389,0.0041,0.442]),SFVec3f([0.0557,-0.1381,0.4291]),SFVec3f([0.44,0.0026,0.4421]),SFVec3f([0.4708,0.2058,0.4382]),SFVec3f([0.3791,0.4624,0.4513]),SFVec3f([-0.3159,0.4624,0.4513]),SFVec3f([0.5028,0.1933,0.3915]),SFVec3f([0.5007,0.2672,-0.3143]),SFVec3f([0.452,0.2987,-0.3662]),SFVec3f([0.4196,0.0626,-0.374]),SFVec3f([0.0554,-0.0537,-0.3484]),SFVec3f([-0.3712,0.0655,-0.3743]),SFVec3f([-0.4489,0.2983,-0.3662]),SFVec3f([-0.3034,0.5285,-0.3426]),SFVec3f([0.3668,0.5285,-0.3426]),SFVec3f([-0.411,-0.0513,0.403]),SFVec3f([0.0566,-0.1886,0.3999]),SFVec3f([0.4652,-0.0513,0.403]),SFVec3f([0.0596,-0.0984,-0.3396]),SFVec3f([-0.3993,0.0128,-0.3296]),SFVec3f([0.4652,0.0128,-0.3296])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.7878,0.1071]),SFVec2f([0.7939,0.1016]),SFVec2f([0.766,0.1014]),SFVec2f([0.7709,0.1068]),SFVec2f([0.9594,0.1833]),SFVec2f([0.766,0.1015]),SFVec2f([0.7939,0.1016]),SFVec2f([0.9426,0.186]),SFVec2f([0.7648,0.1066]),SFVec2f([0.9545,0.1568]),SFVec2f([0.9398,0.1599]),SFVec2f([0.771,0.1315]),SFVec2f([0.7861,0.131]),SFVec2f([0.767,0.1345]),SFVec2f([0.7667,0.1094]),SFVec2f([0.7644,0.1092]),SFVec2f([0.7648,0.1066]),SFVec2f([0.7904,0.1338]),SFVec2f([0.786,0.139]),SFVec2f([0.7863,0.1397]),SFVec2f([0.9402,0.1559]),SFVec2f([0.9531,0.1532]),SFVec2f([0.7709,0.1396]),SFVec2f([0.7709,0.1403]),SFVec2f([0.794,0.107]),SFVec2f([0.7917,0.1102]),SFVec2f([0.794,0.107]),SFVec2f([0.7939,0.1101]),SFVec2f([0.7675,0.0958]),SFVec2f([0.7934,0.0956]),SFVec2f([0.7934,0.0956]),SFVec2f([0.7675,0.0958]),SFVec2f([0.7967,0.1011]),SFVec2f([0.7964,0.1056]),SFVec2f([0.7964,0.1088]),SFVec2f([0.7964,0.1057]),SFVec2f([0.7967,0.1011]),SFVec2f([0.7958,0.0955]),SFVec2f([0.7958,0.0955]),SFVec2f([0.7633,0.1008]),SFVec2f([0.7625,0.1056]),SFVec2f([0.7622,0.1084]),SFVec2f([0.7625,0.1055]),SFVec2f([0.7633,0.1008]),SFVec2f([0.765,0.0957]),SFVec2f([0.765,0.0957]),SFVec2f([0.9651,0.1878]),SFVec2f([0.9376,0.1925]),SFVec2f([0.9583,0.1554]),SFVec2f([0.963,0.1801]),SFVec2f([0.9654,0.1799]),SFVec2f([0.9654,0.1826]),SFVec2f([0.9354,0.1602]),SFVec2f([0.9385,0.1536]),SFVec2f([0.9536,0.1504]),SFVec2f([0.9383,0.1837]),SFVec2f([0.9366,0.1872]),SFVec2f([0.9361,0.1842])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('r_carpal_proximal_interphalangeal_4'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_proximal_interphalangeal_4'),
                                                                                                                              center_ : SFVec3f([SFDouble(-8.059), SFDouble(26.959999), SFDouble(-0.9176)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('r_carpal_middle_phalanx_4'),
                                                                                                                                  DEF_ : SFString('hanim_r_carpal_middle_phalanx_4'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(-8.059), SFDouble(26.959999), SFDouble(-0.9176)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(1), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(16), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(26), SFInt32(-1), SFInt32(0), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(20), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(18), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([0.0823,-1.173,-0.2984]),SFVec3f([0.4234,-1.145,0.233]),SFVec3f([-0.2949,-1.031,0.2378]),SFVec3f([-0.3843,-0.1818,0.2296]),SFVec3f([-0.3843,-0.1915,-0.2186]),SFVec3f([0.4256,0.0168,-0.2326]),SFVec3f([-0.4203,0.1233,-0.236]),SFVec3f([0.4256,0.0279,0.2247]),SFVec3f([-0.4203,0.1344,0.2212]),SFVec3f([0.2414,0.2148,-0.2328]),SFVec3f([0.2414,0.2245,0.2154]),SFVec3f([-0.1761,0.2138,0.2158]),SFVec3f([-0.1761,0.2041,-0.2324]),SFVec3f([0.0255,-0.0114,-0.3531]),SFVec3f([0.0255,0.0059,0.3593]),SFVec3f([0.0827,-1.161,0.3475]),SFVec3f([-0.1702,-1.388,0.2311]),SFVec3f([0.0744,-1.4,0.2378]),SFVec3f([0.4231,-1.153,-0.1983]),SFVec3f([0.3548,-1.316,0.2013]),SFVec3f([0.3546,-1.322,-0.1549]),SFVec3f([-0.2952,-1.04,-0.2103]),SFVec3f([-0.1705,-1.395,-0.1779]),SFVec3f([0.0732,-1.433,-0.1776])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.9398,0.1599]),SFVec2f([0.7904,0.1338]),SFVec2f([0.7888,0.1598]),SFVec2f([0.9363,0.1341]),SFVec2f([0.7861,0.131]),SFVec2f([0.7859,0.138]),SFVec2f([0.9502,0.1313]),SFVec2f([0.9545,0.1568]),SFVec2f([0.7712,0.1385]),SFVec2f([0.7707,0.1575]),SFVec2f([0.7854,0.1571]),SFVec2f([0.771,0.1315]),SFVec2f([0.767,0.1345]),SFVec2f([0.7676,0.1604]),SFVec2f([0.786,0.1292]),SFVec2f([0.7713,0.1297]),SFVec2f([0.786,0.129]),SFVec2f([0.7713,0.1294]),SFVec2f([0.7847,0.165]),SFVec2f([0.7849,0.1652]),SFVec2f([0.9369,0.1301]),SFVec2f([0.9483,0.1278]),SFVec2f([0.7712,0.1654]),SFVec2f([0.7712,0.1661]),SFVec2f([0.9354,0.1602]),SFVec2f([0.9325,0.1343]),SFVec2f([0.9583,0.1554]),SFVec2f([0.9533,0.1301]),SFVec2f([0.9406,0.1642]),SFVec2f([0.9551,0.1612]),SFVec2f([0.9355,0.1283]),SFVec2f([0.9488,0.1251])])))))]),

                                                                                                                                HAnimJoint(
                                                                                                                                  name_ : SFString('r_carpal_distal_interphalangeal_4'),
                                                                                                                                  DEF_ : SFString('hanim_r_carpal_distal_interphalangeal_4'),
                                                                                                                                  center_ : SFVec3f([SFDouble(-8.013), SFDouble(25.809999), SFDouble(-0.879)]),
                                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                                  children_ : [
                                                                                                                                    HAnimSegment(
                                                                                                                                      name_ : SFString('r_carpal_distal_phalanx_4'),
                                                                                                                                      DEF_ : SFString('hanim_r_carpal_distal_phalanx_4'),
                                                                                                                                      children_ : [
                                                                                                                                        Transform(
                                                                                                                                          translation_ : SFVec3f([SFDouble(-8.013), SFDouble(25.809999), SFDouble(-0.879)]),
                                                                                                                                          child_ : 
                                                                                                                                            Shape(
                                                                                                                                              appearance_ : 
                                                                                                                                                Appearance(
                                                                                                                                                  material_ : 
                                                                                                                                                    Material(
                                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                                  texture_ : 
                                                                                                                                                    ImageTexture(
                                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                              geometry_ : 
                                                                                                                                                IndexedFaceSet(
                                                                                                                                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(23), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(31), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(32), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(32), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(31), SFInt32(-1)]),
                                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(33), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(35), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(21), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(23), SFInt32(-1), SFInt32(41), SFInt32(38), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(34), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(33), SFInt32(-1)]),
                                                                                                                                                  coord_ : 
                                                                                                                                                    Coordinate(
                                                                                                                                                      point_ : MFVec3f([SFVec3f([-0.3166,-0.1433,0.2079]),SFVec3f([-0.3169,-0.1519,-0.2403]),SFVec3f([-0.2442,-0.5193,0.1944]),SFVec3f([-0.2444,-0.5269,-0.2171]),SFVec3f([0.3527,-0.4861,0.211]),SFVec3f([0.0799,-0.5048,0.29]),SFVec3f([0.3524,-0.4944,-0.236]),SFVec3f([0.0795,-0.516,-0.3155]),SFVec3f([-0.1361,-0.8158,0.1702]),SFVec3f([-0.1363,-0.8223,-0.1824]),SFVec3f([0.3546,-0.7984,0.165]),SFVec3f([0.1169,-0.8256,0.2434]),SFVec3f([0.3544,-0.8046,-0.1727]),SFVec3f([0.1165,-0.8348,-0.2533]),SFVec3f([-0.1687,-0.903,-0.0042]),SFVec3f([0.3182,-0.9029,-0.0045]),SFVec3f([0.1176,-0.9628,-0.0024]),SFVec3f([-0.1644,-0.8834,0.0927]),SFVec3f([0.3222,-0.8834,-0.0869]),SFVec3f([0.1048,-0.9305,0.1259]),SFVec3f([-0.1646,-0.8882,-0.0967]),SFVec3f([0.3224,-0.8794,0.0812]),SFVec3f([0.1044,-0.9401,-0.1237]),SFVec3f([0.3778,0.0076,0.1944]),SFVec3f([-0.3408,0.113,-0.2488]),SFVec3f([-0.3405,0.1215,0.1993]),SFVec3f([-0.1324,0.2059,0.1802]),SFVec3f([-0.1327,0.198,-0.2349]),SFVec3f([0.2261,0.2084,0.1799]),SFVec3f([0.3775,-0.0006,-0.2368]),SFVec3f([0.2258,0.2005,-0.2353]),SFVec3f([0.0351,-0.0081,0.3088]),SFVec3f([0.0347,-0.0204,-0.3369])])),
                                                                                                                                                  texCoord_ : 
                                                                                                                                                    TextureCoordinate(
                                                                                                                                                      point_ : MFVec2f([SFVec2f([0.7853,0.163]),SFVec2f([0.7888,0.1598]),SFVec2f([0.7854,0.1571]),SFVec2f([0.7707,0.1575]),SFVec2f([0.7676,0.1604]),SFVec2f([0.7706,0.1634]),SFVec2f([0.7714,0.1739]),SFVec2f([0.7841,0.1736]),SFVec2f([0.787,0.1731]),SFVec2f([0.9344,0.121]),SFVec2f([0.9363,0.1341]),SFVec2f([0.9479,0.1182]),SFVec2f([0.9502,0.1313]),SFVec2f([0.7684,0.1736]),SFVec2f([0.7774,0.1846]),SFVec2f([0.7801,0.1842]),SFVec2f([0.7824,0.1828]),SFVec2f([0.7844,0.1829]),SFVec2f([0.9351,0.111]),SFVec2f([0.9443,0.1091]),SFVec2f([0.9372,0.109]),SFVec2f([0.9418,0.1081]),SFVec2f([0.7705,0.1833]),SFVec2f([0.7725,0.1831]),SFVec2f([0.781,0.1849]),SFVec2f([0.7774,0.1856]),SFVec2f([0.7748,0.1843]),SFVec2f([0.774,0.1852]),SFVec2f([0.9395,0.1081]),SFVec2f([0.7849,0.1552]),SFVec2f([0.7712,0.1555]),SFVec2f([0.7849,0.1549]),SFVec2f([0.7712,0.1553]),SFVec2f([0.9325,0.1343]),SFVec2f([0.9533,0.1301]),SFVec2f([0.9319,0.1209]),SFVec2f([0.9502,0.1172]),SFVec2f([0.9329,0.1108]),SFVec2f([0.9464,0.108]),SFVec2f([0.9358,0.1082]),SFVec2f([0.9393,0.1069]),SFVec2f([0.9427,0.1067]),SFVec2f([0.9372,0.1384]),SFVec2f([0.9506,0.1357])])))))])])])])])]),

                                                                                                                HAnimJoint(
                                                                                                                  name_ : SFString('r_carpometacarpal_5'),
                                                                                                                  DEF_ : SFString('hanim_r_carpometacarpal_5'),
                                                                                                                  center_ : SFVec3f([SFDouble(-8.056), SFDouble(30.59), SFDouble(-1.457)]),
                                                                                                                  ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                  children_ : [
                                                                                                                    HAnimSegment(
                                                                                                                      name_ : SFString('r_metacarpal_5'),
                                                                                                                      DEF_ : SFString('hanim_r_metacarpal_5'),
                                                                                                                      children_ : [
                                                                                                                        Transform(
                                                                                                                          translation_ : SFVec3f([SFDouble(-8.056), SFDouble(30.59), SFDouble(-1.457)]),
                                                                                                                          child_ : 
                                                                                                                            Shape(
                                                                                                                              appearance_ : 
                                                                                                                                Appearance(
                                                                                                                                  material_ : 
                                                                                                                                    Material(
                                                                                                                                      diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                  texture_ : 
                                                                                                                                    ImageTexture(
                                                                                                                                      USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                              geometry_ : 
                                                                                                                                IndexedFaceSet(
                                                                                                                                  coordIndex_ : MFInt32([SFInt32(11), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(11), SFInt32(-1), SFInt32(5), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(3), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(5), SFInt32(3), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(0), SFInt32(9), SFInt32(-1), SFInt32(2), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(1), SFInt32(6), SFInt32(-1), SFInt32(1), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(2), SFInt32(0), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(20), SFInt32(25), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(18), SFInt32(-1), SFInt32(16), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(30), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(32), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(11), SFInt32(-1), SFInt32(3), SFInt32(5), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(16), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(5), SFInt32(-1), SFInt32(4), SFInt32(12), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(18), SFInt32(4), SFInt32(-1), SFInt32(24), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(20), SFInt32(-1), SFInt32(9), SFInt32(11), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(9), SFInt32(-1), SFInt32(11), SFInt32(15), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(11), SFInt32(-1), SFInt32(15), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(15), SFInt32(-1), SFInt32(19), SFInt32(12), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(23), SFInt32(19), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(14), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(25), SFInt32(10), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(14), SFInt32(-1), SFInt32(13), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(27), SFInt32(13), SFInt32(-1), SFInt32(14), SFInt32(6), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(14), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(6), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(7), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(14), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(32), SFInt32(13), SFInt32(-1)]),
                                                                                                                                  creaseAngle_ : 3.14159,
                                                                                                                                  texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(33), SFInt32(34), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(35), SFInt32(33), SFInt32(-1), SFInt32(3), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(34), SFInt32(37), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(6), SFInt32(34), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(6), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(35), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(40), SFInt32(16), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(42), SFInt32(40), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(20), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(23), SFInt32(-1), SFInt32(43), SFInt32(44), SFInt32(45), SFInt32(-1), SFInt32(25), SFInt32(43), SFInt32(45), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(45), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(19), SFInt32(0), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(7), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(4), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(7), SFInt32(-1), SFInt32(29), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(18), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(19), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(0), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(31), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(14), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(32), SFInt32(23), SFInt32(-1), SFInt32(14), SFInt32(13), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(29), SFInt32(14), SFInt32(-1), SFInt32(38), SFInt32(12), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(40), SFInt32(38), SFInt32(-1), SFInt32(12), SFInt32(36), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(16), SFInt32(12), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(17), SFInt32(8), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(12), SFInt32(-1), SFInt32(11), SFInt32(37), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(25), SFInt32(11), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(10), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(27), SFInt32(9), SFInt32(-1), SFInt32(36), SFInt32(12), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(45), SFInt32(36), SFInt32(-1)]),
                                                                                                                                  coord_ : 
                                                                                                                                    Coordinate(
                                                                                                                                      point_ : MFVec3f([SFVec3f([-0.5437,-1.115,-0.3876]),SFVec3f([0.4574,-1.115,-0.3875]),SFVec3f([-0.0391,-1.055,-0.5375]),SFVec3f([-0.5003,-2.035,-0.4225]),SFVec3f([0.3976,-2.035,-0.4225]),SFVec3f([-0.0194,-2.01,-0.5522]),SFVec3f([0.4806,0.0289,-0.2234]),SFVec3f([-0.0559,0.0724,-0.359]),SFVec3f([-0.5551,0.0256,-0.2224]),SFVec3f([-0.6458,-1.204,0.1909]),SFVec3f([0.5245,-1.204,0.1909]),SFVec3f([-0.5611,-2.149,0.1899]),SFVec3f([0.4095,-2.15,0.19]),SFVec3f([-0.733,-0.0582,0.2295]),SFVec3f([0.6302,-0.0576,0.2292]),SFVec3f([-0.4048,-2.339,0.1195]),SFVec3f([-0.3316,-2.225,-0.3174]),SFVec3f([-0.0208,-2.205,-0.4092]),SFVec3f([0.2611,-2.224,-0.3218]),SFVec3f([0.2696,-2.34,0.1198]),SFVec3f([-0.5486,-1.22,0.3281]),SFVec3f([-0.4658,-2.148,0.2836]),SFVec3f([-0.3509,-2.289,0.2567]),SFVec3f([0.2127,-2.29,0.257]),SFVec3f([0.3146,-2.15,0.283]),SFVec3f([0.4279,-1.216,0.3283]),SFVec3f([0.5199,-0.0723,0.3338]),SFVec3f([-0.6304,-0.0728,0.334]),SFVec3f([0.4381,0.0771,0.139]),SFVec3f([0.358,0.1199,-0.1192]),SFVec3f([-0.0563,0.1597,-0.2281]),SFVec3f([-0.4414,0.1179,-0.1236]),SFVec3f([-0.5384,0.0772,0.1392])])),
                                                                                                                                  texCoord_ : 
                                                                                                                                    TextureCoordinate(
                                                                                                                                      point_ : MFVec2f([SFVec2f([0.766,0.1014]),SFVec2f([0.7694,0.0827]),SFVec2f([0.748,0.0813]),SFVec2f([0.7455,0.0995]),SFVec2f([0.7415,0.0989]),SFVec2f([0.7435,0.0798]),SFVec2f([0.9864,0.2045]),SFVec2f([0.7455,0.0995]),SFVec2f([0.7734,0.0512]),SFVec2f([0.7571,0.0508]),SFVec2f([0.7525,0.0502]),SFVec2f([0.9827,0.2362]),SFVec2f([0.9665,0.2386]),SFVec2f([0.7694,0.0827]),SFVec2f([0.766,0.1015]),SFVec2f([0.774,0.0829]),SFVec2f([0.9619,0.2395]),SFVec2f([0.7782,0.0512]),SFVec2f([0.774,0.083]),SFVec2f([0.7619,0.1052]),SFVec2f([0.7474,0.1039]),SFVec2f([0.7446,0.1034]),SFVec2f([0.7473,0.1038]),SFVec2f([0.7619,0.1052]),SFVec2f([0.9712,0.2404]),SFVec2f([0.9799,0.239]),SFVec2f([0.7566,0.0479]),SFVec2f([0.7602,0.0485]),SFVec2f([0.7691,0.0486]),SFVec2f([0.771,0.1015]),SFVec2f([0.771,0.1014]),SFVec2f([0.768,0.1042]),SFVec2f([0.768,0.1042]),SFVec2f([0.9897,0.1861]),SFVec2f([0.991,0.2053]),SFVec2f([0.9856,0.1862]),SFVec2f([0.9665,0.2385]),SFVec2f([0.9874,0.236]),SFVec2f([0.965,0.2069]),SFVec2f([0.9651,0.1878]),SFVec2f([0.9604,0.2075]),SFVec2f([0.9619,0.2395]),SFVec2f([0.9604,0.2074]),SFVec2f([0.9836,0.239]),SFVec2f([0.98,0.239]),SFVec2f([0.9712,0.2404])])))))]),

                                                                                                                    HAnimJoint(
                                                                                                                      name_ : SFString('r_metacarpophalangeal_5'),
                                                                                                                      DEF_ : SFString('hanim_r_metacarpophalangeal_5'),
                                                                                                                      center_ : SFVec3f([SFDouble(-8.132), SFDouble(28.360001), SFDouble(-1.647)]),
                                                                                                                      ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                      children_ : [
                                                                                                                        HAnimSegment(
                                                                                                                          name_ : SFString('r_carpal_proximal_phalanx_5'),
                                                                                                                          DEF_ : SFString('hanim_r_carpal_proximal_phalanx_5'),
                                                                                                                          children_ : [
                                                                                                                            Transform(
                                                                                                                              translation_ : SFVec3f([SFDouble(-8.132), SFDouble(28.360001), SFDouble(-1.647)]),
                                                                                                                              child_ : 
                                                                                                                                Shape(
                                                                                                                                  appearance_ : 
                                                                                                                                    Appearance(
                                                                                                                                      material_ : 
                                                                                                                                        Material(
                                                                                                                                          diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                      texture_ : 
                                                                                                                                        ImageTexture(
                                                                                                                                          USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                  geometry_ : 
                                                                                                                                    IndexedFaceSet(
                                                                                                                                      coordIndex_ : MFInt32([SFInt32(10), SFInt32(11), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(8), SFInt32(10), SFInt32(-1), SFInt32(0), SFInt32(9), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(11), SFInt32(1), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(6), SFInt32(11), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(7), SFInt32(2), SFInt32(-1), SFInt32(1), SFInt32(2), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(4), SFInt32(1), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(17), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(13), SFInt32(17), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(0), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(9), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(1), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(12), SFInt32(36), SFInt32(34), SFInt32(-1), SFInt32(9), SFInt32(15), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(10), SFInt32(9), SFInt32(-1), SFInt32(16), SFInt32(12), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(10), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(35), SFInt32(16), SFInt32(-1), SFInt32(12), SFInt32(16), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(36), SFInt32(12), SFInt32(-1), SFInt32(37), SFInt32(15), SFInt32(26), SFInt32(-1), SFInt32(12), SFInt32(34), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(13), SFInt32(23), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(13), SFInt32(-1), SFInt32(17), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(21), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(22), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(19), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(24), SFInt32(23), SFInt32(-1), SFInt32(24), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(27), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(27), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(34), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(23), SFInt32(34), SFInt32(-1), SFInt32(35), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(36), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(36), SFInt32(-1), SFInt32(34), SFInt32(31), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(18), SFInt32(34), SFInt32(-1), SFInt32(18), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(22), SFInt32(18), SFInt32(-1), SFInt32(22), SFInt32(33), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(22), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(37), SFInt32(26), SFInt32(-1), SFInt32(37), SFInt32(28), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(35), SFInt32(37), SFInt32(-1)]),
                                                                                                                                      creaseAngle_ : 3.14159,
                                                                                                                                      texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(0), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(7), SFInt32(4), SFInt32(-1), SFInt32(1), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(40), SFInt32(4), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(41), SFInt32(40), SFInt32(-1), SFInt32(8), SFInt32(10), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(9), SFInt32(8), SFInt32(-1), SFInt32(5), SFInt32(38), SFInt32(39), SFInt32(-1), SFInt32(39), SFInt32(6), SFInt32(5), SFInt32(-1), SFInt32(6), SFInt32(39), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(2), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(12), SFInt32(10), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(14), SFInt32(43), SFInt32(44), SFInt32(-1), SFInt32(44), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(13), SFInt32(8), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(13), SFInt32(-1), SFInt32(40), SFInt32(42), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(4), SFInt32(40), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(20), SFInt32(-1), SFInt32(5), SFInt32(17), SFInt32(45), SFInt32(-1), SFInt32(45), SFInt32(38), SFInt32(5), SFInt32(-1), SFInt32(21), SFInt32(18), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(45), SFInt32(17), SFInt32(46), SFInt32(-1), SFInt32(46), SFInt32(47), SFInt32(45), SFInt32(-1), SFInt32(18), SFInt32(21), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(46), SFInt32(17), SFInt32(44), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(13), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(25), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(42), SFInt32(48), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(14), SFInt32(42), SFInt32(-1), SFInt32(28), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(27), SFInt32(28), SFInt32(30), SFInt32(-1), SFInt32(26), SFInt32(27), SFInt32(30), SFInt32(-1), SFInt32(24), SFInt32(30), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(25), SFInt32(29), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(15), SFInt32(25), SFInt32(-1), SFInt32(15), SFInt32(28), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(33), SFInt32(-1), SFInt32(31), SFInt32(33), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(35), SFInt32(36), SFInt32(-1), SFInt32(34), SFInt32(36), SFInt32(37), SFInt32(-1), SFInt32(31), SFInt32(34), SFInt32(37), SFInt32(-1), SFInt32(20), SFInt32(26), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(24), SFInt32(20), SFInt32(-1), SFInt32(23), SFInt32(36), SFInt32(35), SFInt32(-1), SFInt32(35), SFInt32(19), SFInt32(23), SFInt32(-1), SFInt32(19), SFInt32(35), SFInt32(34), SFInt32(-1), SFInt32(34), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(20), SFInt32(34), SFInt32(33), SFInt32(-1), SFInt32(33), SFInt32(26), SFInt32(20), SFInt32(-1), SFInt32(26), SFInt32(33), SFInt32(32), SFInt32(-1), SFInt32(32), SFInt32(27), SFInt32(26), SFInt32(-1), SFInt32(27), SFInt32(32), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(16), SFInt32(27), SFInt32(-1), SFInt32(16), SFInt32(31), SFInt32(37), SFInt32(-1), SFInt32(37), SFInt32(22), SFInt32(16), SFInt32(-1), SFInt32(22), SFInt32(37), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(23), SFInt32(22), SFInt32(-1)]),
                                                                                                                                      coord_ : 
                                                                                                                                        Coordinate(
                                                                                                                                          point_ : MFVec3f([SFVec3f([0.4642,-0.7495,-0.198]),SFVec3f([-0.3252,-0.6614,-0.2139]),SFVec3f([0.1225,-0.7652,-0.3144]),SFVec3f([0.3819,-0.8842,-0.1714]),SFVec3f([-0.1725,-0.9506,-0.2008]),SFVec3f([0.3815,-0.8908,0.17]),SFVec3f([-0.1732,-0.9591,0.196]),SFVec3f([0.1212,-0.9744,-0.2024]),SFVec3f([0.1212,-0.9799,0.1724]),SFVec3f([0.4638,-0.7583,0.2054]),SFVec3f([0.0985,-0.7824,0.3322]),SFVec3f([-0.3257,-0.6667,0.2084]),SFVec3f([-0.3886,-0.1527,0.2568]),SFVec3f([-0.3804,-0.0337,-0.2228]),SFVec3f([0.4441,-0.0337,-0.2228]),SFVec3f([0.4467,-0.1527,0.2568]),SFVec3f([0.0472,-0.285,0.3442]),SFVec3f([0.0564,-0.0045,-0.3471]),SFVec3f([-0.3248,0.3476,0.3745]),SFVec3f([-0.2574,0.4555,-0.1484]),SFVec3f([0.0759,0.4741,-0.2587]),SFVec3f([0.3915,0.4551,-0.1427]),SFVec3f([0.395,0.3464,0.3802]),SFVec3f([-0.4245,0.194,-0.2327]),SFVec3f([0.0564,0.2188,-0.3624]),SFVec3f([0.4734,0.194,-0.2327]),SFVec3f([0.4853,0.0785,0.3798]),SFVec3f([0.4534,0.1007,0.43]),SFVec3f([0.4249,-0.1391,0.4083]),SFVec3f([0.0362,-0.2455,0.3725]),SFVec3f([-0.3609,-0.1363,0.4097]),SFVec3f([-0.4385,0.1031,0.4238]),SFVec3f([-0.2998,0.3409,0.4133]),SFVec3f([0.3633,0.3398,0.4186]),SFVec3f([-0.4853,0.08,0.3796]),SFVec3f([0.0442,-0.2871,0.3545]),SFVec3f([-0.4146,-0.1759,0.3644]),SFVec3f([0.4498,-0.1759,0.3644])])),
                                                                                                                                      texCoord_ : 
                                                                                                                                        TextureCoordinate(
                                                                                                                                          point_ : MFVec2f([SFVec2f([0.7578,0.1276]),SFVec2f([0.7543,0.1247]),SFVec2f([0.753,0.131]),SFVec2f([0.7531,0.1316]),SFVec2f([0.9854,0.1598]),SFVec2f([0.9725,0.1615]),SFVec2f([0.9734,0.1584]),SFVec2f([0.9844,0.1569]),SFVec2f([0.7413,0.123]),SFVec2f([0.7403,0.1293]),SFVec2f([0.7378,0.1249]),SFVec2f([0.7401,0.1299]),SFVec2f([0.7405,0.104]),SFVec2f([0.7443,0.1047]),SFVec2f([0.9859,0.1809]),SFVec2f([0.7455,0.0995]),SFVec2f([0.766,0.1015]),SFVec2f([0.9713,0.1822]),SFVec2f([0.7589,0.1059]),SFVec2f([0.7648,0.1066]),SFVec2f([0.766,0.1014]),SFVec2f([0.7622,0.1091]),SFVec2f([0.7648,0.1066]),SFVec2f([0.7644,0.1092]),SFVec2f([0.7455,0.0995]),SFVec2f([0.7415,0.0989]),SFVec2f([0.7664,0.0954]),SFVec2f([0.7667,0.0954]),SFVec2f([0.7485,0.0932]),SFVec2f([0.7449,0.0928]),SFVec2f([0.7484,0.0932]),SFVec2f([0.7683,0.1016]),SFVec2f([0.7686,0.0957]),SFVec2f([0.7683,0.0956]),SFVec2f([0.7679,0.1015]),SFVec2f([0.7671,0.1055]),SFVec2f([0.7666,0.1084]),SFVec2f([0.7674,0.1056]),SFVec2f([0.9687,0.1615]),SFVec2f([0.9723,0.1564]),SFVec2f([0.9888,0.1589]),SFVec2f([0.9852,0.1547]),SFVec2f([0.9898,0.1809]),SFVec2f([0.9856,0.1862]),SFVec2f([0.9651,0.1878]),SFVec2f([0.9675,0.1796]),SFVec2f([0.9654,0.1826]),SFVec2f([0.9654,0.1799]),SFVec2f([0.9897,0.1861])])))))]),

                                                                                                                        HAnimJoint(
                                                                                                                          name_ : SFString('r_carpal_proximal_interphalangeal_5'),
                                                                                                                          DEF_ : SFString('hanim_r_carpal_proximal_interphalangeal_5'),
                                                                                                                          center_ : SFVec3f([SFDouble(-8.058), SFDouble(27.6), SFDouble(-1.651)]),
                                                                                                                          ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                          children_ : [
                                                                                                                            HAnimSegment(
                                                                                                                              name_ : SFString('r_carpal_middle_phalanx_5'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_middle_phalanx_5'),
                                                                                                                              children_ : [
                                                                                                                                Transform(
                                                                                                                                  translation_ : SFVec3f([SFDouble(-8.058), SFDouble(27.6), SFDouble(-1.651)]),
                                                                                                                                  child_ : 
                                                                                                                                    Shape(
                                                                                                                                      appearance_ : 
                                                                                                                                        Appearance(
                                                                                                                                          material_ : 
                                                                                                                                            Material(
                                                                                                                                              diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                          texture_ : 
                                                                                                                                            ImageTexture(
                                                                                                                                              USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                      geometry_ : 
                                                                                                                                        IndexedFaceSet(
                                                                                                                                          coordIndex_ : MFInt32([SFInt32(1), SFInt32(7), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(15), SFInt32(1), SFInt32(-1), SFInt32(8), SFInt32(3), SFInt32(14), SFInt32(-1), SFInt32(1), SFInt32(18), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(7), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(6), SFInt32(4), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(8), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(13), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(13), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(18), SFInt32(0), SFInt32(-1), SFInt32(13), SFInt32(0), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(4), SFInt32(13), SFInt32(-1), SFInt32(2), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(14), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(8), SFInt32(11), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(8), SFInt32(-1), SFInt32(7), SFInt32(5), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(7), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(8), SFInt32(14), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(13), SFInt32(6), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(9), SFInt32(13), SFInt32(-1), SFInt32(9), SFInt32(5), SFInt32(13), SFInt32(-1), SFInt32(7), SFInt32(10), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(2), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(18), SFInt32(1), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(2), SFInt32(21), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(18), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(23), SFInt32(0), SFInt32(-1), SFInt32(21), SFInt32(0), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(21), SFInt32(-1), SFInt32(1), SFInt32(15), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(19), SFInt32(1), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(20), SFInt32(19), SFInt32(-1), SFInt32(16), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(17), SFInt32(16), SFInt32(-1)]),
                                                                                                                                          creaseAngle_ : 3.14159,
                                                                                                                                          texCoordIndex_ : MFInt32([SFInt32(3), SFInt32(0), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(25), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(5), SFInt32(1), SFInt32(-1), SFInt32(3), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(3), SFInt32(-1), SFInt32(5), SFInt32(8), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(5), SFInt32(-1), SFInt32(11), SFInt32(8), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(4), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(8), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(6), SFInt32(27), SFInt32(-1), SFInt32(12), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(8), SFInt32(12), SFInt32(-1), SFInt32(10), SFInt32(2), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(5), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(11), SFInt32(4), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(29), SFInt32(-1), SFInt32(29), SFInt32(28), SFInt32(0), SFInt32(-1), SFInt32(16), SFInt32(17), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(14), SFInt32(16), SFInt32(-1), SFInt32(4), SFInt32(1), SFInt32(16), SFInt32(-1), SFInt32(16), SFInt32(14), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(17), SFInt32(12), SFInt32(-1), SFInt32(29), SFInt32(7), SFInt32(26), SFInt32(-1), SFInt32(0), SFInt32(28), SFInt32(24), SFInt32(-1), SFInt32(2), SFInt32(10), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(19), SFInt32(2), SFInt32(-1), SFInt32(6), SFInt32(3), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(21), SFInt32(6), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(10), SFInt32(-1), SFInt32(27), SFInt32(6), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(31), SFInt32(27), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(9), SFInt32(-1), SFInt32(3), SFInt32(25), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(20), SFInt32(3), SFInt32(-1), SFInt32(20), SFInt32(30), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(21), SFInt32(20), SFInt32(-1), SFInt32(18), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(19), SFInt32(18), SFInt32(-1)]),
                                                                                                                                          coord_ : 
                                                                                                                                            Coordinate(
                                                                                                                                              point_ : MFVec3f([SFVec3f([0.0741,-0.8302,-0.2909]),SFVec3f([0.4065,-0.7938,0.2106]),SFVec3f([-0.2852,-0.7166,0.2155]),SFVec3f([-0.3712,-0.1511,0.2041]),SFVec3f([-0.3704,-0.1424,-0.1993]),SFVec3f([0.39,0.0139,-0.1936]),SFVec3f([-0.3995,0.102,-0.2097]),SFVec3f([0.3896,0.0051,0.2098]),SFVec3f([-0.3999,0.0967,0.2127]),SFVec3f([0.2215,0.1643,-0.2071]),SFVec3f([0.2211,0.159,0.2152]),SFVec3f([-0.1513,0.144,0.2149]),SFVec3f([-0.1509,0.1492,-0.2074]),SFVec3f([0.0482,-0.0018,-0.31]),SFVec3f([0.0243,-0.0191,0.3367]),SFVec3f([0.0741,-0.8107,0.3219]),SFVec3f([-0.1923,-0.9968,0.2082]),SFVec3f([-0.0494,-1.016,0.2148]),SFVec3f([0.4065,-0.8068,-0.1935]),SFVec3f([0.3533,-0.9288,0.1795]),SFVec3f([0.3325,-0.9376,-0.1473]),SFVec3f([-0.2865,-0.7301,-0.2049]),SFVec3f([-0.1934,-1.008,-0.1699]),SFVec3f([-0.0523,-1.023,-0.1696])])),
                                                                                                                                          texCoord_ : 
                                                                                                                                            TextureCoordinate(
                                                                                                                                              point_ : MFVec2f([SFVec2f([0.9725,0.1615]),SFVec2f([0.7578,0.1276]),SFVec2f([0.7541,0.1444]),SFVec2f([0.9727,0.1441]),SFVec2f([0.7543,0.1247]),SFVec2f([0.7533,0.1302]),SFVec2f([0.9851,0.1424]),SFVec2f([0.9854,0.1598]),SFVec2f([0.7404,0.1285]),SFVec2f([0.7384,0.1404]),SFVec2f([0.7513,0.1418]),SFVec2f([0.7413,0.123]),SFVec2f([0.7378,0.1249]),SFVec2f([0.7355,0.1424]),SFVec2f([0.7545,0.1231]),SFVec2f([0.7416,0.1216]),SFVec2f([0.7546,0.1229]),SFVec2f([0.7417,0.1214]),SFVec2f([0.7496,0.1479]),SFVec2f([0.7498,0.1481]),SFVec2f([0.9738,0.1409]),SFVec2f([0.9839,0.1396]),SFVec2f([0.738,0.1467]),SFVec2f([0.7381,0.1469]),SFVec2f([0.9687,0.1616]),SFVec2f([0.9694,0.1441]),SFVec2f([0.9888,0.1589]),SFVec2f([0.988,0.1416]),SFVec2f([0.9725,0.165]),SFVec2f([0.9854,0.1633]),SFVec2f([0.9728,0.1395]),SFVec2f([0.9846,0.1375])])))))]),

                                                                                                                            HAnimJoint(
                                                                                                                              name_ : SFString('r_carpal_distal_interphalangeal_5'),
                                                                                                                              DEF_ : SFString('hanim_r_carpal_distal_interphalangeal_5'),
                                                                                                                              center_ : SFVec3f([SFDouble(-8.02), SFDouble(26.77), SFDouble(-1.643)]),
                                                                                                                              ulimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              llimit_ : MFFloat([SFFloat(0), SFFloat(0), SFFloat(0)]),
                                                                                                                              children_ : [
                                                                                                                                HAnimSegment(
                                                                                                                                  name_ : SFString('r_carpal_distal_phalanx_5'),
                                                                                                                                  DEF_ : SFString('hanim_r_carpal_distal_phalanx_5'),
                                                                                                                                  children_ : [
                                                                                                                                    Transform(
                                                                                                                                      translation_ : SFVec3f([SFDouble(-8.02), SFDouble(26.77), SFDouble(-1.643)]),
                                                                                                                                      child_ : 
                                                                                                                                        Shape(
                                                                                                                                          appearance_ : 
                                                                                                                                            Appearance(
                                                                                                                                              material_ : 
                                                                                                                                                Material(
                                                                                                                                                  diffuseColor_ : SFColor([SFDouble(0.588), SFDouble(0.588), SFDouble(0.588)])),
                                                                                                                                              texture_ : 
                                                                                                                                                ImageTexture(
                                                                                                                                                  USE_ : SFString('JinLOA4TextureAtlas'))),
                                                                                                                                          geometry_ : 
                                                                                                                                            IndexedFaceSet(
                                                                                                                                              coordIndex_ : MFInt32([SFInt32(0), SFInt32(31), SFInt32(25), SFInt32(-1), SFInt32(24), SFInt32(32), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(2), SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(31), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(4), SFInt32(23), SFInt32(31), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(31), SFInt32(0), SFInt32(-1), SFInt32(23), SFInt32(4), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(29), SFInt32(23), SFInt32(-1), SFInt32(32), SFInt32(7), SFInt32(3), SFInt32(-1), SFInt32(3), SFInt32(1), SFInt32(32), SFInt32(-1), SFInt32(29), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(32), SFInt32(29), SFInt32(-1), SFInt32(2), SFInt32(14), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(2), SFInt32(-1), SFInt32(5), SFInt32(11), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(2), SFInt32(8), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(5), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(21), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(7), SFInt32(13), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(3), SFInt32(7), SFInt32(-1), SFInt32(6), SFInt32(12), SFInt32(13), SFInt32(-1), SFInt32(13), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(8), SFInt32(17), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(8), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(10), SFInt32(-1), SFInt32(10), SFInt32(11), SFInt32(19), SFInt32(-1), SFInt32(25), SFInt32(24), SFInt32(1), SFInt32(-1), SFInt32(1), SFInt32(0), SFInt32(25), SFInt32(-1), SFInt32(14), SFInt32(20), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(16), SFInt32(14), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(18), SFInt32(15), SFInt32(-1), SFInt32(3), SFInt32(9), SFInt32(20), SFInt32(-1), SFInt32(20), SFInt32(14), SFInt32(3), SFInt32(-1), SFInt32(14), SFInt32(2), SFInt32(3), SFInt32(-1), SFInt32(4), SFInt32(10), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(6), SFInt32(4), SFInt32(-1), SFInt32(21), SFInt32(15), SFInt32(18), SFInt32(-1), SFInt32(14), SFInt32(16), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(17), SFInt32(14), SFInt32(-1), SFInt32(19), SFInt32(16), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(21), SFInt32(19), SFInt32(-1), SFInt32(9), SFInt32(13), SFInt32(22), SFInt32(-1), SFInt32(22), SFInt32(20), SFInt32(9), SFInt32(-1), SFInt32(22), SFInt32(13), SFInt32(12), SFInt32(-1), SFInt32(12), SFInt32(18), SFInt32(22), SFInt32(-1), SFInt32(25), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(24), SFInt32(25), SFInt32(-1), SFInt32(23), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(28), SFInt32(23), SFInt32(-1), SFInt32(28), SFInt32(30), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(28), SFInt32(-1), SFInt32(25), SFInt32(31), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(26), SFInt32(25), SFInt32(-1), SFInt32(32), SFInt32(24), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(30), SFInt32(32), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(32), SFInt32(-1), SFInt32(23), SFInt32(28), SFInt32(31), SFInt32(-1)]),
                                                                                                                                              creaseAngle_ : 3.14159,
                                                                                                                                              texCoordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(-1), SFInt32(3), SFInt32(4), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(6), SFInt32(7), SFInt32(-1), SFInt32(7), SFInt32(0), SFInt32(5), SFInt32(-1), SFInt32(33), SFInt32(35), SFInt32(9), SFInt32(-1), SFInt32(9), SFInt32(10), SFInt32(33), SFInt32(-1), SFInt32(0), SFInt32(7), SFInt32(8), SFInt32(-1), SFInt32(8), SFInt32(1), SFInt32(0), SFInt32(-1), SFInt32(10), SFInt32(9), SFInt32(11), SFInt32(-1), SFInt32(11), SFInt32(12), SFInt32(10), SFInt32(-1), SFInt32(4), SFInt32(13), SFInt32(6), SFInt32(-1), SFInt32(6), SFInt32(5), SFInt32(4), SFInt32(-1), SFInt32(12), SFInt32(11), SFInt32(36), SFInt32(-1), SFInt32(36), SFInt32(34), SFInt32(12), SFInt32(-1), SFInt32(7), SFInt32(14), SFInt32(15), SFInt32(-1), SFInt32(15), SFInt32(16), SFInt32(7), SFInt32(-1), SFInt32(35), SFInt32(37), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(9), SFInt32(35), SFInt32(-1), SFInt32(7), SFInt32(16), SFInt32(17), SFInt32(-1), SFInt32(17), SFInt32(8), SFInt32(7), SFInt32(-1), SFInt32(18), SFInt32(20), SFInt32(21), SFInt32(-1), SFInt32(21), SFInt32(19), SFInt32(18), SFInt32(-1), SFInt32(13), SFInt32(22), SFInt32(23), SFInt32(-1), SFInt32(23), SFInt32(6), SFInt32(13), SFInt32(-1), SFInt32(11), SFInt32(19), SFInt32(38), SFInt32(-1), SFInt32(38), SFInt32(36), SFInt32(11), SFInt32(-1), SFInt32(16), SFInt32(15), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(17), SFInt32(16), SFInt32(-1), SFInt32(39), SFInt32(20), SFInt32(18), SFInt32(-1), SFInt32(18), SFInt32(37), SFInt32(39), SFInt32(-1), SFInt32(2), SFInt32(3), SFInt32(5), SFInt32(-1), SFInt32(5), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(14), SFInt32(26), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(25), SFInt32(14), SFInt32(-1), SFInt32(28), SFInt32(40), SFInt32(41), SFInt32(-1), SFInt32(41), SFInt32(21), SFInt32(28), SFInt32(-1), SFInt32(6), SFInt32(23), SFInt32(26), SFInt32(-1), SFInt32(26), SFInt32(14), SFInt32(6), SFInt32(-1), SFInt32(14), SFInt32(7), SFInt32(6), SFInt32(-1), SFInt32(9), SFInt32(18), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(11), SFInt32(9), SFInt32(-1), SFInt32(20), SFInt32(28), SFInt32(21), SFInt32(-1), SFInt32(14), SFInt32(25), SFInt32(24), SFInt32(-1), SFInt32(24), SFInt32(15), SFInt32(14), SFInt32(-1), SFInt32(39), SFInt32(40), SFInt32(28), SFInt32(-1), SFInt32(28), SFInt32(20), SFInt32(39), SFInt32(-1), SFInt32(23), SFInt32(22), SFInt32(27), SFInt32(-1), SFInt32(27), SFInt32(26), SFInt32(23), SFInt32(-1), SFInt32(41), SFInt32(38), SFInt32(19), SFInt32(-1), SFInt32(19), SFInt32(21), SFInt32(41), SFInt32(-1), SFInt32(2), SFInt32(29), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(3), SFInt32(2), SFInt32(-1), SFInt32(10), SFInt32(12), SFInt32(43), SFInt32(-1), SFInt32(43), SFInt32(42), SFInt32(10), SFInt32(-1), SFInt32(31), SFInt32(32), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(29), SFInt32(31), SFInt32(-1), SFInt32(2), SFInt32(1), SFInt32(31), SFInt32(-1), SFInt32(31), SFInt32(29), SFInt32(2), SFInt32(-1), SFInt32(4), SFInt32(3), SFInt32(30), SFInt32(-1), SFInt32(30), SFInt32(32), SFInt32(4), SFInt32(-1), SFInt32(43), SFInt32(12), SFInt32(34), SFInt32(-1), SFInt32(10), SFInt32(42), SFInt32(33), SFInt32(-1)]),
                                                                                                                                              coord_ : 
                                                                                                                                                Coordinate(
                                                                                                                                                  point_ : MFVec3f([SFVec3f([-0.3162,-0.096,0.2149]),SFVec3f([-0.3173,-0.1084,-0.2014]),SFVec3f([-0.2869,-0.4777,0.206]),SFVec3f([-0.2893,-0.4895,-0.1842]),SFVec3f([0.356,-0.4937,0.2218]),SFVec3f([0.0434,-0.4877,0.2966]),SFVec3f([0.3534,-0.5065,-0.2021]),SFVec3f([0.0399,-0.5052,-0.2775]),SFVec3f([-0.2353,-0.7717,0.1879]),SFVec3f([-0.2379,-0.7821,-0.1539]),SFVec3f([0.3642,-0.8042,0.183]),SFVec3f([0.07,-0.801,0.2589]),SFVec3f([0.3616,-0.8141,-0.1443]),SFVec3f([0.0662,-0.8155,-0.2226]),SFVec3f([-0.2582,-0.8386,0.0187]),SFVec3f([0.3003,-0.8841,0.0184]),SFVec3f([0.0496,-0.9109,0.0203]),SFVec3f([-0.2493,-0.8224,0.1126]),SFVec3f([0.3082,-0.8707,-0.0614]),SFVec3f([0.0381,-0.8827,0.1448]),SFVec3f([-0.251,-0.829,-0.0709]),SFVec3f([0.3096,-0.8651,0.1015]),SFVec3f([0.0353,-0.8939,-0.0972]),SFVec3f([0.366,0.0343,0.2021]),SFVec3f([-0.3269,0.0982,-0.2135]),SFVec3f([-0.3256,0.1116,0.207]),SFVec3f([-0.1179,0.1798,0.1886]),SFVec3f([-0.1179,0.1673,-0.1998]),SFVec3f([0.2301,0.1882,0.1883]),SFVec3f([0.366,0.0213,-0.202]),SFVec3f([0.2301,0.1757,-0.2001]),SFVec3f([0.032,0.0176,0.3133]),SFVec3f([0.032,-0.0019,-0.2994])])),
                                                                                                                                              texCoord_ : 
                                                                                                                                                TextureCoordinate(
                                                                                                                                                  point_ : MFVec2f([SFVec2f([0.7505,0.1465]),SFVec2f([0.7541,0.1444]),SFVec2f([0.7513,0.1418]),SFVec2f([0.7384,0.1404]),SFVec2f([0.7355,0.1424]),SFVec2f([0.7377,0.1451]),SFVec2f([0.7372,0.1554]),SFVec2f([0.7483,0.1563]),SFVec2f([0.7507,0.1564]),SFVec2f([0.9726,0.1318]),SFVec2f([0.9727,0.1441]),SFVec2f([0.9847,0.1302]),SFVec2f([0.9851,0.1424]),SFVec2f([0.7347,0.1548]),SFVec2f([0.7409,0.1641]),SFVec2f([0.7434,0.1641]),SFVec2f([0.7455,0.1632]),SFVec2f([0.7469,0.164]),SFVec2f([0.9746,0.124]),SFVec2f([0.9828,0.1229]),SFVec2f([0.9766,0.1225]),SFVec2f([0.9807,0.1219]),SFVec2f([0.7351,0.1625]),SFVec2f([0.7369,0.1626]),SFVec2f([0.7443,0.165]),SFVec2f([0.7408,0.1649]),SFVec2f([0.7387,0.1637]),SFVec2f([0.7379,0.1643]),SFVec2f([0.9788,0.1219]),SFVec2f([0.7512,0.1402]),SFVec2f([0.7392,0.1389]),SFVec2f([0.7512,0.14]),SFVec2f([0.7393,0.1388]),SFVec2f([0.9694,0.1441]),SFVec2f([0.988,0.1416]),SFVec2f([0.9705,0.1317]),SFVec2f([0.9868,0.1295]),SFVec2f([0.9727,0.1237]),SFVec2f([0.9848,0.1221]),SFVec2f([0.9756,0.1218]),SFVec2f([0.9787,0.1209]),SFVec2f([0.9817,0.1209]),SFVec2f([0.973,0.1475]),SFVec2f([0.9849,0.146])])))))])])])])])])])])])])])])])])])])])])])])])])])])])])])])]),

                HAnimJoint(
                  USE_ : SFString('hanim_humanoid_root')),

                HAnimJoint(
                  USE_ : SFString('hanim_sacroiliac')),

                HAnimJoint(
                  USE_ : SFString('hanim_vl5')),

                HAnimJoint(
                  USE_ : SFString('hanim_vl4')),

                HAnimJoint(
                  USE_ : SFString('hanim_vl3')),

                HAnimJoint(
                  USE_ : SFString('hanim_vl2')),

                HAnimJoint(
                  USE_ : SFString('hanim_vl1')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt12')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt11')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt10')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt9')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt8')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt7')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt6')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt5')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt4')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt3')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt2')),

                HAnimJoint(
                  USE_ : SFString('hanim_vt1')),

                HAnimJoint(
                  USE_ : SFString('hanim_vc7')),

                HAnimJoint(
                  USE_ : SFString('hanim_vc6')),

                HAnimJoint(
                  USE_ : SFString('hanim_vc5')),

                HAnimJoint(
                  USE_ : SFString('hanim_vc4')),

                HAnimJoint(
                  USE_ : SFString('hanim_vc3')),

                HAnimJoint(
                  USE_ : SFString('hanim_vc2')),

                HAnimJoint(
                  USE_ : SFString('hanim_vc1')),

                HAnimJoint(
                  USE_ : SFString('hanim_skullbase')),

                HAnimJoint(
                  USE_ : SFString('hanim_temporomandibular')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_acromioclavicular')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_acromioclavicular')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_calcaneocuboid')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_calcaneocuboid')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_distal_interphalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_distal_interphalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_distal_interphalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_distal_interphalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_distal_interphalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_distal_interphalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_distal_interphalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_distal_interphalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_interphalangeal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_interphalangeal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_proximal_interphalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_proximal_interphalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_proximal_interphalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_proximal_interphalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_proximal_interphalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_proximal_interphalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpal_proximal_interphalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpal_proximal_interphalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpometacarpal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpometacarpal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpometacarpal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpometacarpal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpometacarpal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpometacarpal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpometacarpal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpometacarpal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_carpometacarpal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_carpometacarpal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_cuneonavicular_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_cuneonavicular_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_cuneonavicular_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_cuneonavicular_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_cuneonavicular_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_cuneonavicular_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_elbow')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_elbow')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_eyeball_joint')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_eyeball_joint')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_eyebrow_joint')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_eyebrow_joint')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_eyelid_joint')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_eyelid_joint')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_hip')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_hip')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_knee')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_knee')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metacarpophalangeal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metacarpophalangeal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metacarpophalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metacarpophalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metacarpophalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metacarpophalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metacarpophalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metacarpophalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metacarpophalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metacarpophalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metatarsophalangeal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metatarsophalangeal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metatarsophalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metatarsophalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metatarsophalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metatarsophalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metatarsophalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metatarsophalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_metatarsophalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_metatarsophalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_midcarpal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_midcarpal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_midcarpal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_midcarpal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_midcarpal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_midcarpal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_midcarpal_4_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_midcarpal_4_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_radiocarpal')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_radiocarpal')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_shoulder')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_shoulder')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_sternoclavicular')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_sternoclavicular')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_talocalcaneonavicular')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_talocalcaneonavicular')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_talocrural')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_talocrural')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_distal_interphalangeal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_distal_interphalangeal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_distal_interphalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_distal_interphalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_distal_interphalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_distal_interphalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_distal_interphalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_distal_interphalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_distal_interphalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_distal_interphalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_proximal_interphalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_proximal_interphalangeal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_proximal_interphalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_proximal_interphalangeal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_proximal_interphalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_proximal_interphalangeal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsal_proximal_interphalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsal_proximal_interphalangeal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsometatarsal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsometatarsal_1')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsometatarsal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsometatarsal_2')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsometatarsal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsometatarsal_3')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsometatarsal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsometatarsal_4')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_tarsometatarsal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_tarsometatarsal_5')),

                HAnimJoint(
                  USE_ : SFString('hanim_l_transversetarsal')),

                HAnimJoint(
                  USE_ : SFString('hanim_r_transversetarsal')),
              segments_ : [
                HAnimSegment(
                  USE_ : SFString('hanim_sacrum')),

                HAnimSegment(
                  USE_ : SFString('hanim_pelvis')),

                HAnimSegment(
                  USE_ : SFString('hanim_l5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l1')),

                HAnimSegment(
                  USE_ : SFString('hanim_t12')),

                HAnimSegment(
                  USE_ : SFString('hanim_t11')),

                HAnimSegment(
                  USE_ : SFString('hanim_t10')),

                HAnimSegment(
                  USE_ : SFString('hanim_t9')),

                HAnimSegment(
                  USE_ : SFString('hanim_t8')),

                HAnimSegment(
                  USE_ : SFString('hanim_t7')),

                HAnimSegment(
                  USE_ : SFString('hanim_t6')),

                HAnimSegment(
                  USE_ : SFString('hanim_t5')),

                HAnimSegment(
                  USE_ : SFString('hanim_t4')),

                HAnimSegment(
                  USE_ : SFString('hanim_t3')),

                HAnimSegment(
                  USE_ : SFString('hanim_t2')),

                HAnimSegment(
                  USE_ : SFString('hanim_t1')),

                HAnimSegment(
                  USE_ : SFString('hanim_c7')),

                HAnimSegment(
                  USE_ : SFString('hanim_c6')),

                HAnimSegment(
                  USE_ : SFString('hanim_c5')),

                HAnimSegment(
                  USE_ : SFString('hanim_c4')),

                HAnimSegment(
                  USE_ : SFString('hanim_c3')),

                HAnimSegment(
                  USE_ : SFString('hanim_c2')),

                HAnimSegment(
                  USE_ : SFString('hanim_c1')),

                HAnimSegment(
                  USE_ : SFString('hanim_skull')),

                HAnimSegment(
                  USE_ : SFString('hanim_jaw')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_calcaneus')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_calcaneus')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_calf')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_calf')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_capitate')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_capitate')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_distal_phalanx_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_distal_phalanx_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_distal_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_distal_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_distal_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_distal_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_distal_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_distal_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_distal_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_distal_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_middle_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_middle_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_middle_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_middle_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_middle_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_middle_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_middle_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_middle_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_proximal_phalanx_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_proximal_phalanx_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_proximal_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_proximal_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_proximal_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_proximal_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_proximal_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_proximal_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_carpal_proximal_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_carpal_proximal_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_clavicle')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_clavicle')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_cuboid')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_cuboid')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_cuneiform_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_cuneiform_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_cuneiform_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_cuneiform_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_cuneiform_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_cuneiform_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_eyeball')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_eyeball')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_eyebrow')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_eyebrow')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_eyelid')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_eyelid')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_forearm')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_forearm')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_hamate')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_hamate')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metacarpal_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metacarpal_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metacarpal_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metacarpal_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metacarpal_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metacarpal_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metacarpal_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metacarpal_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metacarpal_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metacarpal_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metatarsal_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metatarsal_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metatarsal_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metatarsal_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metatarsal_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metatarsal_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metatarsal_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metatarsal_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_metatarsal_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_metatarsal_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_navicular')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_navicular')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_scapula')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_scapula')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_talus')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_talus')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_distal_phalanx_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_distal_phalanx_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_distal_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_distal_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_distal_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_distal_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_distal_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_distal_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_distal_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_distal_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_middle_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_middle_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_middle_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_middle_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_middle_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_middle_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_middle_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_middle_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_proximal_phalanx_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_proximal_phalanx_1')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_proximal_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_proximal_phalanx_2')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_proximal_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_proximal_phalanx_3')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_proximal_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_proximal_phalanx_4')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_tarsal_proximal_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_tarsal_proximal_phalanx_5')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_thigh')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_thigh')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_trapezium')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_trapezium')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_trapezoid')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_trapezoid')),

                HAnimSegment(
                  USE_ : SFString('hanim_l_upperarm')),

                HAnimSegment(
                  USE_ : SFString('hanim_r_upperarm'))]),

            Group(
              DEF_ : SFString('StopAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('StopTimer'),
                  cycleInterval_ : 5.73,
                  loop_ : true),

                PositionInterpolator(
                  DEF_ : SFString('Stop_humanoid_root_TranslationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,0,0]),SFVec3f([0,0,0]),SFVec3f([0,0,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_humanoid_root_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_sacroiliac_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_subtalar_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_midtarsal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_metatarsal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_subtalar_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_midtarsal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_metatarsal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vl5_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vl4_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vl3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vl2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vl1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt12_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt11_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt10_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt9_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt8_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt7_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt6_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt5_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt4_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vt1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vc7_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vc6_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vc5_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vc4_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vc3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vc2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_vc1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_skullbase_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_eyeball_joint_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_eyeball_joint_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_sternoclavicular_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_acromioclavicular_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_thumb1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_thumb2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_thumb3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_index0_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_index1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_index2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_index3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_middle0_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_middle1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_middle2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_middle3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_ring0_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_ring1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_ring2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_ring3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_pinky0_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_pinky1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_pinky2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_l_pinky3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_sternoclavicular_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_acromioclavicular_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_thumb1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_thumb2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_thumb3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_index0_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_index1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_index2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_index3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_middle0_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_middle1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_middle2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_middle3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_ring0_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_ring1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_ring2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_ring3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_pinky0_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_pinky1_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_pinky2_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stop_r_pinky3_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('StandAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('StandTimer'),
                  cycleInterval_ : 5.73,
                  loop_ : true),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_metatarsal_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.015), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.17), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.025), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.01), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0.25), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_head_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_neck_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_eyeball_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.4), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.45), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_eyeball_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.4), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.45), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_lower_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_upper_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_whole_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                PositionInterpolator(
                  DEF_ : SFString('Stand_whole_body_TranslationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,0,0]),SFVec3f([0,0,0]),SFVec3f([0,0,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_sacroiliac_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_vl5_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_vc6_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_l_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.27), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_index1_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.3), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_index2_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.4), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.32), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.25), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Stand_r_index3_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.3), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.35), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('PitchesAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('PitchTimer'),
                  cycleInterval_ : 5.73,
                  loop_ : true),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_r_metatarsal_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.75), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_r_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_r_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_r_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_l_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_l_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_l_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_r_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_r_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_r_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_l_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_l_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_l_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_head_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_neck_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.55), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.55), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_lower_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_upper_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitches_whole_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                PositionInterpolator(
                  DEF_ : SFString('Pitches_whole_body_TranslationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.125), SFFloat(0.25), SFFloat(0.375), SFFloat(0.5), SFFloat(0.625), SFFloat(0.75), SFFloat(0.875), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,0,0]),SFVec3f([0,-0.15,0]),SFVec3f([0,-0.7,0]),SFVec3f([0,-0.15,0]),SFVec3f([0,0,0]),SFVec3f([0,-0.15,0]),SFVec3f([0,-0.7,0]),SFVec3f([0,-0.15,0]),SFVec3f([0,0,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_l_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_l_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_r_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_r_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_sacroiliac_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_vl5_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_vc6_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_l_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.25), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.27), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Pitch_r_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.25), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.27), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('YawsAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('YawTimer'),
                  cycleInterval_ : 5.73,
                  loop_ : true),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_r_metatarsal_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_r_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_r_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_r_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_l_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_l_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_l_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_r_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_r_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_r_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_l_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_l_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_l_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_head_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_neck_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_upper_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_lower_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaws_whole_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                PositionInterpolator(
                  DEF_ : SFString('Yaws_whole_body_TranslationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,0,0]),SFVec3f([0,0,0]),SFVec3f([0,0,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_l_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_l_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_r_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_r_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_sacroiliac_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.24), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.4), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_vl5_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_vc6_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_l_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Yaw_r_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('RollsAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('RollTimer'),
                  cycleInterval_ : 5.73,
                  loop_ : true),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_r_metatarsal_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_r_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_r_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_r_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_l_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_l_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_l_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_r_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_r_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_r_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(3), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_l_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_l_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_l_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(3), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_head_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_neck_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.25), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(1.25), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_lower_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_upper_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Rolls_whole_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                PositionInterpolator(
                  DEF_ : SFString('Rolls_whole_body_TranslationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.125), SFFloat(0.25), SFFloat(0.375), SFFloat(0.5), SFFloat(0.625), SFFloat(0.75), SFFloat(0.875), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,0,0]),SFVec3f([0,-0.25,0]),SFVec3f([0,-0.8,0]),SFVec3f([0,-0.25,0]),SFVec3f([0,0,0]),SFVec3f([0,-0.25,0]),SFVec3f([0,-0.8,0]),SFVec3f([0,-0.25,0]),SFVec3f([0,0,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_l_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.22), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_l_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_r_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.22), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_r_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_sacroiliac_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_vl5_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_vc6_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_l_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Roll_r_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('WalkAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('WalkTimer'),
                  cycleInterval_ : 1.73,
                  loop_ : true),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_metatarsal_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.125), SFFloat(0.2083), SFFloat(0.375), SFFloat(0.4583), SFFloat(0.5), SFFloat(0.6667), SFFloat(0.75), SFFloat(0.7917), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3533), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.1072), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2612), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1268), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.01793), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.05824), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.2398), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.35), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3322), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.125), SFFloat(0.2083), SFFloat(0.2917), SFFloat(0.375), SFFloat(0.5), SFFloat(0.6667), SFFloat(0.7917), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.8573), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.8926), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5351), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1756), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1194), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3153), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.09354), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.08558), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2475), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.8573)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.125), SFFloat(0.2083), SFFloat(0.2917), SFFloat(0.375), SFFloat(0.5), SFFloat(0.6667), SFFloat(0.7917), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-0.5831), SFRotation(0.03511), SFRotation(0.8116), SFRotation(0.1481), SFRotation(-0.995), SFRotation(0.02296), SFRotation(0.09674), SFRotation(0.4683), SFRotation(-1), SFRotation(0.00192), SFRotation(0.007964), SFRotation(0.4732), SFRotation(-0.998), SFRotation(-0.0158), SFRotation(-0.06102), SFRotation(0.5079), SFRotation(-0.9911), SFRotation(-0.03541), SFRotation(-0.1286), SFRotation(0.5419), SFRotation(-0.9131), SFRotation(-0.06243), SFRotation(-0.403), SFRotation(0.3361), SFRotation(-0.4306), SFRotation(-0.07962), SFRotation(-0.899), SFRotation(0.07038), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2571), SFRotation(0.9891), SFRotation(-0.02805), SFRotation(0.1444), SFRotation(0.3879), SFRotation(-0.5831), SFRotation(0.03511), SFRotation(0.8116), SFRotation(0.1481)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.125), SFFloat(0.2083), SFFloat(0.375), SFFloat(0.6667), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.06714), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.2152), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3184), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.4717), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.2912), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1222), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.06714)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2083), SFFloat(0.375), SFFloat(0.5), SFFloat(0.6667), SFFloat(0.7917), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3226), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1556), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.08678), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.8751), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.131), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.09961), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3942), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3226)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.375), SFFloat(0.5), SFFloat(0.6667), SFFloat(0.7917), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-0.873), SFRotation(0.06094), SFRotation(0.484), SFRotation(0.2865), SFRotation(0.9963), SFRotation(-0.01057), SFRotation(0.08481), SFRotation(0.2488), SFRotation(0.9965), SFRotation(0.01591), SFRotation(-0.08222), SFRotation(0.3836), SFRotation(-0.7018), SFRotation(-0.03223), SFRotation(-0.7117), SFRotation(0.1289), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5518), SFRotation(-0.9964), SFRotation(0.02231), SFRotation(0.0817), SFRotation(0.5351), SFRotation(-0.9809), SFRotation(0.04912), SFRotation(0.1881), SFRotation(0.5204), SFRotation(-0.873), SFRotation(0.06094), SFRotation(0.484), SFRotation(0.2865)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_lower_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0.1056), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.09018), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0.1056)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.375), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-0.8129), SFRotation(0.4759), SFRotation(-0.3357), SFRotation(0.1346), SFRotation(0.1533), SFRotation(-0.9878), SFRotation(0.02582), SFRotation(0.3902), SFRotation(-0.5701), SFRotation(0.7604), SFRotation(-0.311), SFRotation(0.366), SFRotation(-0.8129), SFRotation(0.4759), SFRotation(-0.3357), SFRotation(0.1346)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.375), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.411508), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.0925011), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.572568), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.411508)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.375), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.09346), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3197), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.1564), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.09346)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.375), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.461076), SFRotation(-0.330195), SFRotation(-0.927451), SFRotation(0.175516), SFRotation(0.538852), SFRotation(0.0327774), SFRotation(-0.999314), SFRotation(-0.0172185), SFRotation(0.492033), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.461076)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.375), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.0659878), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.488383), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.0177536), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.0659878)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.375), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1189), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.1861), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3357), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1189)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_head_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.375), SFFloat(0.4167), SFFloat(0.5), SFFloat(0.5833), SFFloat(0.6667), SFFloat(0.75), SFFloat(0.8333), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.08642), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.1825), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.1505), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.1053), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.04391), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.03119), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.07936), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.1616), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.155), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.08642)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_neck_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_upper_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2083), SFFloat(0.375), SFFloat(0.75), SFFloat(0.8333), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.0826), SFRotation(-0.01972), SFRotation(-0.5974), SFRotation(0.8017), SFRotation(0.08231), SFRotation(0.009296), SFRotation(-0.9648), SFRotation(0.2627), SFRotation(0.1734), SFRotation(-0.01238), SFRotation(0.9549), SFRotation(-0.2968), SFRotation(0.08732), SFRotation(-0.008125), SFRotation(0.9691), SFRotation(-0.2463), SFRotation(0.158), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.0826)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_whole_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                PositionInterpolator(
                  DEF_ : SFString('Walk_whole_body_TranslationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.04167), SFFloat(0.125), SFFloat(0.1667), SFFloat(0.2083), SFFloat(0.25), SFFloat(0.2917), SFFloat(0.375), SFFloat(0.4583), SFFloat(0.5), SFFloat(0.5417), SFFloat(0.5833), SFFloat(0.625), SFFloat(0.7083), SFFloat(0.75), SFFloat(0.7917), SFFloat(0.875), SFFloat(0.9167), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,-0.00928,0]),SFVec3f([0,-0.003858,0]),SFVec3f([0,-0.008847,0]),SFVec3f([0,-0.01486,0]),SFVec3f([0,-0.02641,0]),SFVec3f([0,-0.03934,0]),SFVec3f([0,-0.0502,0]),SFVec3f([0,-0.07469,0]),SFVec3f([0,-0.02732,0]),SFVec3f([0,-0.01608,0]),SFVec3f([0,-0.01129,0]),SFVec3f([0,-0.005819,0]),SFVec3f([0,-0.002004,0]),SFVec3f([0,-0.002579,0]),SFVec3f([0,-0.0143,0]),SFVec3f([0,-0.03799,0]),SFVec3f([0,-0.05648,0]),SFVec3f([0,-0.045,0]),SFVec3f([0,-0.00928,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_sacroiliac_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_vl5_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_vc6_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_l_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.25), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Walk_r_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.25), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('RunAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('RunTimer'),
                  cycleInterval_ : 0.9,
                  loop_ : true),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_metatarsal_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_hip_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2182), SFFloat(0.4909), SFFloat(0.7455), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-0.99), SFRotation(0.033), SFRotation(0.04), SFRotation(1.42), SFRotation(-0.99), SFRotation(0.1328), SFRotation(0.067), SFRotation(0.42), SFRotation(0.99), SFRotation(0.014), SFRotation(0.009), SFRotation(0.9), SFRotation(-0.99), SFRotation(0.0703), SFRotation(0.05), SFRotation(0.7), SFRotation(-0.99), SFRotation(0.033), SFRotation(0.04), SFRotation(1.42)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_knee_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2182), SFFloat(0.4909), SFFloat(0.7455), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.01), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.426), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.705), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(2.179), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.01)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_talocrural_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.22), SFFloat(0.3), SFFloat(0.4), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.0374), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.1037), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.4328), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1929), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.03574)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_hip_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2545), SFFloat(0.4909), SFFloat(0.7091), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0.99), SFRotation(-0.014), SFRotation(0.009), SFRotation(0.9), SFRotation(-0.99), SFRotation(-0.0703), SFRotation(-0.05), SFRotation(0.7), SFRotation(-0.99), SFRotation(-0.033), SFRotation(0.04), SFRotation(1.42), SFRotation(-0.99), SFRotation(-0.1328), SFRotation(-0.067), SFRotation(0.42), SFRotation(0.99), SFRotation(-0.014), SFRotation(0.009), SFRotation(0.9)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_knee_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2545), SFFloat(0.4909), SFFloat(0.7091), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.705), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(2.179), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.01), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.426), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.705)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_talocrural_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.4), SFFloat(0.71), SFFloat(0.8), SFFloat(0.82), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2323), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.07843), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.32), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.374), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3478), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2323)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_shoulder_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2182), SFFloat(0.4909), SFFloat(0.7455), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0.99), SFRotation(-0.074), SFRotation(0.25), SFRotation(1.5), SFRotation(0.99), SFRotation(-0.092), SFRotation(0.44), SFRotation(0.3), SFRotation(-0.99), SFRotation(0.136), SFRotation(0.25), SFRotation(0.85), SFRotation(0.99), SFRotation(-0.081), SFRotation(0.38), SFRotation(0.4), SFRotation(0.99), SFRotation(-0.074), SFRotation(0.25), SFRotation(1.5)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_elbow_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2182), SFFloat(0.4909), SFFloat(0.7455), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.85), SFRotation(-0.99), SFRotation(-0.19), SFRotation(0.18), SFRotation(1.35), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.975), SFRotation(-0.99), SFRotation(-0.09), SFRotation(-0.02), SFRotation(1.55), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.85)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_radiocarpal_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-0.25), SFRotation(-1), SFRotation(0.08), SFRotation(0.14), SFRotation(0.25), SFRotation(1), SFRotation(0.08), SFRotation(0.14), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-0.25), SFRotation(1), SFRotation(0.08), SFRotation(-0.14), SFRotation(-0.25), SFRotation(1), SFRotation(0.08), SFRotation(0.14)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_shoulder_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2545), SFFloat(0.4909), SFFloat(0.7091), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-0.99), SFRotation(-0.136), SFRotation(-0.25), SFRotation(0.85), SFRotation(0.99), SFRotation(0.081), SFRotation(-0.38), SFRotation(0.4), SFRotation(0.99), SFRotation(0.074), SFRotation(-0.25), SFRotation(1.5), SFRotation(0.99), SFRotation(0.081), SFRotation(-0.38), SFRotation(0.4), SFRotation(-0.99), SFRotation(-0.136), SFRotation(-0.25), SFRotation(0.85)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_elbow_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2545), SFFloat(0.4909), SFFloat(0.7091), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.975), SFRotation(-0.99), SFRotation(0.09), SFRotation(0.02), SFRotation(1.55), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.85), SFRotation(-0.99), SFRotation(0.19), SFRotation(-0.18), SFRotation(1.35), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.975)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_radiocarpal_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(-0.917742), SFRotation(-0.237244), SFRotation(-0.318536), SFRotation(0.214273), SFRotation(-0.917742), SFRotation(-0.237244), SFRotation(-0.318536), SFRotation(0.214273)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_lower_body_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2182), SFFloat(0.4909), SFFloat(0.7455), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.125), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.125), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.125)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_head_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2545), SFFloat(0.4909), SFFloat(0.7091), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.08), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.12), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.08)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_neck_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2545), SFFloat(0.4909), SFFloat(0.7091), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0.7), SFRotation(0), SFRotation(0), SFRotation(0.4), SFRotation(-0.7), SFRotation(-0.7), SFRotation(0), SFRotation(0.4), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(0.4), SFRotation(-0.7), SFRotation(0.7), SFRotation(0), SFRotation(0.4), SFRotation(0.7), SFRotation(0), SFRotation(0), SFRotation(0.4)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_upper_body_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2545), SFFloat(0.4909), SFFloat(0.7636), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0.97), SFRotation(0.65), SFRotation(0.086), SFRotation(0.5), SFRotation(0.9), SFRotation(0.003), SFRotation(-0.02), SFRotation(0.38), SFRotation(0.95), SFRotation(-0.68), SFRotation(-0.086), SFRotation(0.5), SFRotation(0.9), SFRotation(0.004), SFRotation(-0.025), SFRotation(0.4), SFRotation(0.97), SFRotation(0.65), SFRotation(0.086), SFRotation(0.5)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_whole_body_RotationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.5), SFFloat(0.75), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.06), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.167), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.06), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.168), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.06)])),

                PositionInterpolator(
                  DEF_ : SFString('Run_whole_body_TranslationInterpolator_Run'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.22), SFFloat(0.3), SFFloat(0.31), SFFloat(0.5), SFFloat(0.69), SFFloat(0.7), SFFloat(0.78), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,-0.01,0]),SFVec3f([0,-0.037,0]),SFVec3f([0,-0.049,0]),SFVec3f([0,-0.037,0]),SFVec3f([0,-0.01,0]),SFVec3f([0,-0.037,0]),SFVec3f([0,-0.049,0]),SFVec3f([0,-0.037,0]),SFVec3f([0,-0.01,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_sacroiliac_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_vl5_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_vc6_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_l_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.25), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.27), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Run_r_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.25), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.27), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('JumpAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('JumpTimer'),
                  cycleInterval_ : 3.73,
                  loop_ : true),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_metatarsal_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.1), SFFloat(0.15), SFFloat(0.25), SFFloat(0.28), SFFloat(0.32), SFFloat(0.35), SFFloat(0.64), SFFloat(0.76), SFFloat(0.84), SFFloat(0.88), SFFloat(0.92), SFFloat(0.96), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.6735), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.6735), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3527), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3038), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.07964), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.3), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.6509), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3001), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.2087), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3756), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3279), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.1193), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.25), SFFloat(0.3), SFFloat(0.64), SFFloat(0.76), SFFloat(0.88), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(2.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.7), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.9507), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5845), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.9054), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.18), SFFloat(0.24), SFFloat(0.26), SFFloat(0.28), SFFloat(0.32), SFFloat(0.48), SFFloat(0.64), SFFloat(0.76), SFFloat(0.88), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.63), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.7), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.55), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.8943), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3698), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.4963), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3829), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5169), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_talocrural_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.36), SFFloat(0.4), SFFloat(0.44), SFFloat(0.48), SFFloat(0.64), SFFloat(0.76), SFFloat(0.84), SFFloat(0.88), SFFloat(0.92), SFFloat(0.96), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.625), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.625), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3364), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.2742), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.05078), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2833), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.6667), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2833), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.2108), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.375), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3146), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.1174), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_knee_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.48), SFFloat(0.64), SFFloat(0.76), SFFloat(0.88), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(2.047), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(2.047), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.566), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5913), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.9235), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_hip_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.36), SFFloat(0.4), SFFloat(0.44), SFFloat(0.48), SFFloat(0.64), SFFloat(0.76), SFFloat(0.88), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(4.349), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(4.349), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(4.615), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.9136), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3614), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.7869), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3918), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5433), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_lower_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.48), SFFloat(0.76), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1892), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.1892), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.64), SFFloat(0.76), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-0.0585279), SFRotation(0.983903), SFRotation(-0.168849), SFRotation(1.85956), SFRotation(-0.0585279), SFRotation(0.983903), SFRotation(-0.168849), SFRotation(1.85956), SFRotation(-0.00222418), SFRotation(0.99801), SFRotation(-0.0630095), SFRotation(1.46072), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.497349), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.64), SFFloat(0.76), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.04151), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.04151), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5855), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5852), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.64), SFFloat(0.76), SFFloat(0.88), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.9992), SFRotation(0.02042), SFRotation(0.03558), SFRotation(4.688), SFRotation(0.9992), SFRotation(0.02042), SFRotation(0.03558), SFRotation(4.688), SFRotation(0.9989), SFRotation(-0.04623), SFRotation(0.005159), SFRotation(4.079), SFRotation(-0.8687), SFRotation(-0.2525), SFRotation(-0.4261), SFRotation(1.501), SFRotation(-0.941), SFRotation(-0.2893), SFRotation(-0.1754), SFRotation(0.4788), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_radiocarpal_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.48), SFFloat(0.52), SFFloat(0.64), SFFloat(0.76), SFFloat(0.88), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.0672928), SFRotation(0.989475), SFRotation(-0.128107), SFRotation(4.15574), SFRotation(0.0672928), SFRotation(0.989475), SFRotation(-0.128107), SFRotation(4.15574), SFRotation(0.00364942), SFRotation(0.999901), SFRotation(0.0135896), SFRotation(4.5822), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.655922), SFRotation(-0.00050618), SFRotation(-0.999999), SFRotation(0.0012782), SFRotation(1.28397), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_elbow_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.58), SFFloat(0.72), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.13), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.7), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.7), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.4), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_shoulder_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.64), SFFloat(0.76), SFFloat(0.88), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-0.9987), SFRotation(0.02554), SFRotation(0.04498), SFRotation(1.57), SFRotation(-0.9987), SFRotation(0.02554), SFRotation(0.04498), SFRotation(1.57), SFRotation(1), SFRotation(0.0004113), SFRotation(0.003055), SFRotation(4.114), SFRotation(-0.8413), SFRotation(0.3238), SFRotation(0.4329), SFRotation(1.453), SFRotation(-0.877), SFRotation(0.4198), SFRotation(0.2337), SFRotation(0.6009), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_head_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.48), SFFloat(0.76), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5989), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5989), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.3216), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.06503), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_neck_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.48), SFFloat(0.76), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.1942), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.1942), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2284), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_upper_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.22), SFFloat(0.28), SFFloat(0.34), SFFloat(0.71), SFFloat(0.88), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.05), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.051), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.257), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2171), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3465), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_whole_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.28), SFFloat(0.32), SFFloat(0.48), SFFloat(0.64), SFFloat(0.76), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3273), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.3273), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                PositionInterpolator(
                  DEF_ : SFString('Jump_whole_body_TranslationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.04), SFFloat(0.07), SFFloat(0.11), SFFloat(0.15), SFFloat(0.19), SFFloat(0.22), SFFloat(0.25), SFFloat(0.27), SFFloat(0.31), SFFloat(0.33), SFFloat(0.35), SFFloat(0.38), SFFloat(0.53), SFFloat(0.544), SFFloat(0.76), SFFloat(0.8), SFFloat(0.84), SFFloat(0.88), SFFloat(0.92), SFFloat(0.96), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,0,0]),SFVec3f([0,-0.01264,-0.01289]),SFVec3f([0,-0.04712,-0.03738]),SFVec3f([-0.0003345,-0.1049,-0.05353]),SFVec3f([-0.0005712,-0.1892,-0.06561]),SFVec3f([-0.0008233,-0.286,-0.06276]),SFVec3f([-0.0009591,-0.3795,-0.05148]),SFVec3f([-0.00106,-0.4484,-0.03656]),SFVec3f([-0.00106,-0.4484,-0.03656]),SFVec3f([-0.001122,-0.25,-0.1499]),SFVec3f([-0.0008616,-0.05,-0.06358]),SFVec3f([-0.0005128,0.15,-0.05488]),SFVec3f([0.0004779,0.55,0.02732]),SFVec3f([0.0001728,1.385,0.006873]),SFVec3f([0.00017,1.395,0.0069]),SFVec3f([0,0.35,0.02148]),SFVec3f([0,-0.01299,-0.01057]),SFVec3f([0,-0.06932,-0.01064]),SFVec3f([0.0001365,-0.1037,-0.005059]),SFVec3f([0.0001279,-0.07198,-0.007596]),SFVec3f([0.000141,-0.01626,-0.004935]),SFVec3f([0,0,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.22), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.22), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_sacroiliac_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-1), SFRotation(0.24), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.4), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_vl5_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-0.1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.6), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_vc6_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.8), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.6), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.8), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_l_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.1), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Jump_r_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.1), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('KickAnimation'),
              children_ : [
                TimeSensor(
                  DEF_ : SFString('KickTimer'),
                  cycleInterval_ : 3.73,
                  loop_ : true),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_l_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.22), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_l_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_l_shoulder_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.76), SFRotation(-0.25), SFRotation(0), SFRotation(1), SFRotation(1.76), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(1.256), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_l_ForeArm_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-0.55), SFRotation(-1), SFRotation(0.25), SFRotation(0), SFRotation(2.55), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_l_radiocarpal_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0.55), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_l_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.1), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_sternoclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.22), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.2), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_acromioclavicular_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_shoulder_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-1.76), SFRotation(0.25), SFRotation(0), SFRotation(1), SFRotation(-1.76), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-1.256), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-0.05), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_ForeArm_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(-0.55), SFRotation(1), SFRotation(0.25), SFRotation(0), SFRotation(-2.55), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_radiocarpal_RollInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-0.55), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_thumb1_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.1), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_hip_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.3), SFFloat(0.5), SFFloat(0.6), SFFloat(0.9), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.9), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(1.75), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(2.25), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_knee_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.95), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(1.75), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.28), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_l_hip_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.3), SFFloat(0.5), SFFloat(0.6), SFFloat(0.9), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_l_knee_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_talocrural_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.9), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.95), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.75), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.05), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_r_metatarsal_PitchInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.7), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.75), SFRotation(-1), SFRotation(0), SFRotation(0), SFRotation(0.2), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_sacroiliac_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(-1), SFRotation(0.24), SFRotation(0), SFRotation(-1), SFRotation(0), SFRotation(0.4), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_vl5_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_vc6_YawInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.2), SFFloat(0.4), SFFloat(0.5), SFFloat(0.6), SFFloat(0.8), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_lower_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_upper_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_whole_body_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)])),

                PositionInterpolator(
                  DEF_ : SFString('Kick_whole_body_TranslationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.5), SFFloat(1)]),
                  keyValue_ : MFVec3f([SFVec3f([0,0,0]),SFVec3f([0,0,0]),SFVec3f([0,0,0])])),

                OrientationInterpolator(
                  DEF_ : SFString('Kick_neck_RotationInterpolator'),
                  key_ : MFFloat([SFFloat(0), SFFloat(0.25), SFFloat(0.55), SFFloat(1)]),
                  keyValue_ : MFRotation([SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.7), SFRotation(1), SFRotation(0), SFRotation(0), SFRotation(0.5), SFRotation(0), SFRotation(0), SFRotation(1), SFRotation(0)]))]),

            Group(
              DEF_ : SFString('Interface'),
              children_ : [
                Transform(
                  DEF_ : SFString('CoordinateSystemFloor'),
                  scale_ : SFVec3f([SFDouble(0.1), SFDouble(0.1), SFDouble(0.1)]),
                  child_ : 
                    Shape(
                      DEF_ : SFString('AxisLinesShape'),
                      geometry_ : 
                        IndexedLineSet(
                          colorIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2)]),
                          colorPerVertex_ : false,
                          coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(-1), SFInt32(0), SFInt32(2), SFInt32(-1), SFInt32(0), SFInt32(3), SFInt32(-1)]),
                          coord_ : 
                            Coordinate(
                              point_ : MFVec3f([SFVec3f([0,0,0]),SFVec3f([1,0,0]),SFVec3f([0,1,0]),SFVec3f([0,0,1])])),
                          color_ : 
                            Color(
                              color_ : MFColor([SFColor(1), SFColor(0), SFColor(0), SFColor(0), SFColor(0.6), SFColor(0), SFColor(0), SFColor(0), SFColor(1)]))))),

                ProximitySensor(
                  DEF_ : SFString('HudProx'),
                  size_ : SFVec3f([SFDouble(50), SFDouble(50), SFDouble(50)])),

                Transform(
                  DEF_ : SFString('HudXform'),
                  rotation_ : SFRotation([SFDouble(0), SFDouble(1), SFDouble(0), SFDouble(0.78)]),
                  translation_ : SFVec3f([SFDouble(2), SFDouble(1), SFDouble(2)]),
                  children_ : [
                    Transform(
                      scale_ : SFVec3f([SFDouble(0.02), SFDouble(0.02), SFDouble(0.02)]),
                      translation_ : SFVec3f([SFDouble(-0.4), SFDouble(-0.01), SFDouble(-0.75)]),
                      children_ : [
                        Transform(
                          DEF_ : SFString('Stand_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(-0.9), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Stand_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('StandText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      DEF_ : SFString('text_color'),
                                      ambientIntensity_ : 1,
                                      diffuseColor_ : SFColor([SFDouble(0.819), SFDouble(0.521), SFDouble(0.169)]),
                                      emissiveColor_ : SFColor([SFDouble(0.819), SFDouble(0.521), SFDouble(0.169)]),
                                      specularColor_ : SFColor([SFDouble(0.819), SFDouble(0.521), SFDouble(0.169)]))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Stand")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Stand_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      DEF_ : SFString('Clear'),
                                      ambientIntensity_ : 1,
                                      diffuseColor_ : SFColor([SFDouble(0), SFDouble(0.5), SFDouble(0)]),
                                      emissiveColor_ : SFColor([SFDouble(0), SFDouble(0.5), SFDouble(0)]),
                                      transparency_ : 0.8)),
                              geometry_ : 
                                IndexedFaceSet(
                                  DEF_ : SFString('Backing'),
                                  coordIndex_ : MFInt32([SFInt32(0), SFInt32(1), SFInt32(2), SFInt32(3), SFInt32(-1)]),
                                  coord_ : 
                                    Coordinate(
                                      point_ : MFVec3f([SFVec3f([-0.2,-0.25,-0.01]),SFVec3f([3,-0.25,-0.01]),SFVec3f([3,1,-0.01]),SFVec3f([-0.2,1,-0.01])]))))),

                        Transform(
                          DEF_ : SFString('Pitch_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(-2.4), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Pitch_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('PitchText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Pitch")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Pitch_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('Clear'))),
                              geometry_ : 
                                IndexedFaceSet(
                                  USE_ : SFString('Backing')))),

                        Transform(
                          DEF_ : SFString('Yaw_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(-3.8), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Yaw_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('YawText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Yaw")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Yaw_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('Clear'))),
                              geometry_ : 
                                IndexedFaceSet(
                                  USE_ : SFString('Backing')))),

                        Transform(
                          DEF_ : SFString('Roll_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(-5.2), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Roll_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('RollText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Roll")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Roll_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('Clear'))),
                              geometry_ : 
                                IndexedFaceSet(
                                  USE_ : SFString('Backing')))),

                        Transform(
                          DEF_ : SFString('Walk_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(-6.6), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Walk_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('WalkText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Walk")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Walk_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('Clear'))),
                              geometry_ : 
                                IndexedFaceSet(
                                  USE_ : SFString('Backing')))),

                        Transform(
                          DEF_ : SFString('Run_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(-8), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Run_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('RunText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Run")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Run_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('Clear'))),
                              geometry_ : 
                                IndexedFaceSet(
                                  USE_ : SFString('Backing')))),

                        Transform(
                          DEF_ : SFString('Jump_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(-9.4), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Jump_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('JumpText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Jump")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Jump_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('Clear'))),
                              geometry_ : 
                                IndexedFaceSet(
                                  USE_ : SFString('Backing')))),

                        Transform(
                          DEF_ : SFString('Kick_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(-10.8), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Kick_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('KickText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Kick")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Kick_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('Clear'))),
                              geometry_ : 
                                IndexedFaceSet(
                                  USE_ : SFString('Backing')))),

                        Transform(
                          DEF_ : SFString('Stop_Text'),
                          translation_ : SFVec3f([SFDouble(0), SFDouble(0.4), SFDouble(0)]),
                          children_ : [
                            TouchSensor(
                              DEF_ : SFString('Stop_Touch')),
                          child_ : 
                            Shape(
                              DEF_ : SFString('StopText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("Default")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]))))],
                          child_ : 
                            Shape(
                              DEF_ : SFString('Stop_Back'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('Clear'))),
                              geometry_ : 
                                IndexedFaceSet(
                                  USE_ : SFString('Backing')))),

                        Transform(
                          DEF_ : SFString('SceneLabel'),
                          translation_ : SFVec3f([SFDouble(1.3), SFDouble(3), SFDouble(0)]),
                          child_ : 
                            Shape(
                              DEF_ : SFString('SceneLabelText'),
                              appearance_ : 
                                Appearance(
                                  material_ : 
                                    Material(
                                      USE_ : SFString('text_color'))),
                              geometry_ : 
                                Text(
                                  string_ : MFString([SFString("BoxMan4"), SFString("Animation")]),
                                  fontStyle_ : 
                                    FontStyle(
                                      family_ : MFString([SFString("SANS")]),
                                      justify_ : MFString([SFString("MIDDLE"), SFString("MIDDLE")])))))])])]),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_humanoid_root_TranslationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_humanoid_root_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_sacroiliac_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_subtalar_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_midtarsal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_metatarsal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_subtalar_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_midtarsal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_metatarsal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vl5_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vl4_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vl3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vl2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vl1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt12_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt11_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt10_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt9_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt8_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt7_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt6_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt5_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt4_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vt1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vc7_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vc6_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vc5_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vc4_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vc3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vc2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_vc1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_skullbase_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_eyeball_joint_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_eyeball_joint_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_sternoclavicular_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_acromioclavicular_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_thumb1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_thumb2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_thumb3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_index0_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_index1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_index2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_index3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_middle0_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_middle1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_middle2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_middle3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_ring0_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_ring1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_ring2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_ring3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_pinky0_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_pinky1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_pinky2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_l_pinky3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_sternoclavicular_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_acromioclavicular_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_thumb1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_thumb2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_thumb3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_index0_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_index1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_index2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_index3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_middle0_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_middle1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_middle2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_middle3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_ring0_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_ring1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_ring2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_ring3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_pinky0_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_pinky1_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_pinky2_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StopTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stop_r_pinky3_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_humanoid_root_TranslationInterpolator'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_humanoid_root_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_l_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_l_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_l_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_l_midtarsal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_midtarsal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_r_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_r_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_r_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_r_midtarsal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_midtarsal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_vl5_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_skullbase_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_skullbase')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_l_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_l_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_l_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_r_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_r_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stop_r_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_lower_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_head_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_neck_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_eyeball_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_eyeball_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_upper_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_whole_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_whole_body_TranslationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_metatarsal_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_sacroiliac_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_vl5_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_vc6_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_l_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_index1_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_index2_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('StandTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Stand_r_index3_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_r_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_r_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_r_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_l_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_l_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_l_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_r_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_r_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_r_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_l_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_l_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_l_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_head_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_skullbase')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_whole_body_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_whole_body_TranslationInterpolator'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Stand_vl5_YawInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_r_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_r_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_r_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_l_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_l_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_l_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_lower_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_r_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_r_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_r_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_l_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_l_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_l_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_head_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_neck_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_upper_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_whole_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitches_whole_body_TranslationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_l_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_l_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_r_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_r_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_r_metatarsal_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_sacroiliac_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_vl5_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_vc6_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_l_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('PitchTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Pitch_r_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_r_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_r_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_r_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_l_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_l_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_l_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_r_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_r_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_r_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_l_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_l_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_l_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_head_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_skullbase')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_whole_body_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitches_whole_body_TranslationInterpolator'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Pitch_vl5_YawInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_r_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_r_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_r_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_l_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_l_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_l_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_lower_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_r_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_r_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_r_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_l_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_l_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_l_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_head_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_neck_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_upper_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_whole_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaws_whole_body_TranslationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_l_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_l_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_r_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_r_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_r_metatarsal_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_sacroiliac_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_vl5_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_vc6_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_l_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('YawTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Yaw_r_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_r_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_r_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_r_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_l_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_l_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_l_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_r_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_r_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_r_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_l_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_l_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_l_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_head_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_skullbase')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_whole_body_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaws_whole_body_TranslationInterpolator'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Yaw_vl5_YawInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_r_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_r_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_r_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_l_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_l_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_l_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_lower_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_r_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_r_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_r_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_l_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_l_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_l_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_head_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_neck_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_upper_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_whole_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Rolls_whole_body_TranslationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_l_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_l_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_r_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_r_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_r_metatarsal_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_sacroiliac_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_vl5_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_vc6_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_l_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RollTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Roll_r_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_r_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_r_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_r_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_l_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_l_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_l_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_r_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_r_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_r_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_l_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_l_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_l_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_head_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_skullbase')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_whole_body_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Rolls_whole_body_TranslationInterpolator'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Roll_vl5_YawInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_lower_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_head_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_neck_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_upper_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_whole_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_whole_body_TranslationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_metatarsal_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_sacroiliac_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_vl5_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_vc6_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_l_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('WalkTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Walk_r_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_r_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_r_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_r_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_l_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_l_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_l_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_r_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_r_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_r_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_l_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_l_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_l_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_head_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_skullbase')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_whole_body_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_whole_body_TranslationInterpolator'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Walk_vl5_YawInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_talocrural_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_knee_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_hip_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_talocrural_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_knee_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_hip_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_lower_body_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_radiocarpal_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_elbow_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_shoulder_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_radiocarpal_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_elbow_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_shoulder_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_head_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_neck_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_upper_body_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_whole_body_RotationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_whole_body_TranslationInterpolator_Run')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_metatarsal_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_sacroiliac_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_vl5_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_vc6_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_l_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('RunTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Run_r_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_r_talocrural_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_r_knee_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_r_hip_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_l_talocrural_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_l_knee_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_l_hip_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_r_radiocarpal_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_r_elbow_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_r_shoulder_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_l_radiocarpal_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_l_elbow_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_l_shoulder_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_head_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_skullbase')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_whole_body_RotationInterpolator_Run'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_whole_body_TranslationInterpolator_Run'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Run_vl5_YawInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_talocrural_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_knee_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_hip_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_lower_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_radiocarpal_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_elbow_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_shoulder_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_head_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_neck_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_upper_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_whole_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_whole_body_TranslationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_metatarsal_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_sacroiliac_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_vl5_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_vc6_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_l_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('JumpTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Jump_r_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_r_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_r_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_r_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_l_talocrural_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_l_knee_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_l_hip_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_r_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_r_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_r_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_l_radiocarpal_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_l_elbow_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_l_shoulder_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_head_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_skullbase')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_whole_body_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_whole_body_TranslationInterpolator'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Jump_vl5_YawInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_l_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_l_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_l_shoulder_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_l_ForeArm_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_l_radiocarpal_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_l_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_sternoclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_acromioclavicular_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_shoulder_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_ForeArm_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_radiocarpal_RollInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_thumb1_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_hip_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_knee_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_l_hip_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_l_knee_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_talocrural_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_r_metatarsal_PitchInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_sacroiliac_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_vl5_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_vc6_YawInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_lower_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_upper_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_whole_body_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_whole_body_TranslationInterpolator')),

            ROUTE(
              fromField_ : SFString('fraction_changed'),
              fromNode_ : SFString('KickTimer'),
              toField_ : SFString('set_fraction'),
              toNode_ : SFString('Kick_neck_RotationInterpolator')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_l_shoulder_RollInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_l_ForeArm_PitchInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_l_radiocarpal_RollInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_r_shoulder_RollInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_shoulder')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_r_ForeArm_PitchInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_elbow')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_r_radiocarpal_RollInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_radiocarpal')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_r_hip_PitchInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_r_knee_PitchInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_r_talocrural_PitchInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_r_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_l_hip_PitchInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_hip')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_l_knee_PitchInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_knee')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_r_talocrural_PitchInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_l_talocrural')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_vl5_YawInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_vl5')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_whole_body_RotationInterpolator'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('value_changed'),
              fromNode_ : SFString('Kick_whole_body_TranslationInterpolator'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('hanim_humanoid_root')),

            ROUTE(
              fromField_ : SFString('position_changed'),
              fromNode_ : SFString('HudProx'),
              toField_ : SFString('set_translation'),
              toNode_ : SFString('HudXform')),

            ROUTE(
              fromField_ : SFString('orientation_changed'),
              fromNode_ : SFString('HudProx'),
              toField_ : SFString('set_rotation'),
              toNode_ : SFString('HudXform')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StopTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stand_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StopTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Pitch_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StopTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Yaw_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StopTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Walk_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StopTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Roll_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StopTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Run_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StopTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Jump_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StopTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Kick_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('StandTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('PitchTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('YawTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RollTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('WalkTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('RunTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('JumpTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_stopTime'),
              toNode_ : SFString('KickTimer')),

            ROUTE(
              fromField_ : SFString('touchTime'),
              fromNode_ : SFString('Stop_Touch'),
              toField_ : SFString('set_startTime'),
              toNode_ : SFString('StopTimer')),
          /*<Script url='../node/jinloa4.js'></Script>*/]));
void main() { exit(0); }
