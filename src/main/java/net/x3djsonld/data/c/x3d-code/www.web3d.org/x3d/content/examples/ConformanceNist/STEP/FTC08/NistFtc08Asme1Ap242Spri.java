package net.x3djsonld.data;

import org.web3d.x3d.jsail.Core.*;
import org.web3d.x3d.jsail.CADGeometry.*;
import org.web3d.x3d.jsail.EnvironmentalEffects.*;
import org.web3d.x3d.jsail.fields.*;
import org.web3d.x3d.jsail.Lighting.*;
import org.web3d.x3d.jsail.Navigation.*;
import org.web3d.x3d.jsail.Rendering.*;
import org.web3d.x3d.jsail.Shape.*;

// Javadoc annotations follow, see below for source.
/**
 * <p> NIST Product and Manufacturing Information (PMI) Complex Test Case 8. </p>
 <p> Related links: <a href="../../../../STEP/FTC09/NistFtc08Asme1Ap242Spri.java">NistFtc08Asme1Ap242Spri.java</a> source, <a href="../../../../STEP/FTC09/NistFtc08Asme1Ap242SpriIndex.html" target="_top">NistFtc08Asme1Ap242Spri catalog page</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a>, and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;">
        <caption>Scene Meta Information</caption>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="../../../../STEP/FTC09/NistFtc08Asme1Ap242Spri.x3d">NistFtc08Asme1Ap242Spri.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 24 February 2018 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 11 October 2019 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translator </i> </td>
			<td> Vince Marchetti </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Robert Lipman </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> NIST Product and Manufacturing Information (PMI) Complex Test Case 8. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://pages.nist.gov/CAD-PMI-Testing/models.html" target="_blank">https://pages.nist.gov/CAD-PMI-Testing/models.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://en.wikipedia.org/wiki/Product_and_manufacturing_information" target="_blank">https://en.wikipedia.org/wiki/Product_and_manufacturing_information</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project/download" target="_blank">https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project/download</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://s3.amazonaws.com/nist-el/mfg_digitalthread/nist_ftc_09_asme1_rd.pdf" target="_blank">https://s3.amazonaws.com/nist-el/mfg_digitalthread/nist_ftc_09_asme1_rd.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://pages.nist.gov/CAD-PMI-Testing/tessellated-part-geometry.html" target="_blank">https://pages.nist.gov/CAD-PMI-Testing/tessellated-part-geometry.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://pages.nist.gov/CAD-PMI-Testing/graphical-pmi-viewer.html" target="_blank">https://pages.nist.gov/CAD-PMI-Testing/graphical-pmi-viewer.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://pages.nist.gov/CAD-PMI-Testing/ap209-viewer.html" target="_blank">https://pages.nist.gov/CAD-PMI-Testing/ap209-viewer.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.nist.gov/services-resources/software/step-file-analyzer" target="_blank">https://www.nist.gov/services-resources/software/step-file-analyzer</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.nist.gov/publications/guide-nist-pmi-cad-models-and-cad-system-pmi-modeling-capability-verification-testing" target="_blank">https://www.nist.gov/publications/guide-nist-pmi-cad-models-and-cad-system-pmi-modeling-capability-verification-testing</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project" target="_blank">https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> STEP AP242 Project, <a href="http://www.ap242.org" target="_blank">http://www.ap242.org</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> ASME standard Y14.46-2017: Product Definition for Additive Manufacturing </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.asme.org/products/codes-standards/y1446-2017-product-definition-additive" target="_blank">https://www.asme.org/products/codes-standards/y1446-2017-product-definition-additive</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> STEP to X3D conversion code: kshell/step_x3d/branches/basic_cad </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> info </i> </td>
			<td> Correct definition and compliance of this conformance scene is maintained by the Web3D Design Printing and Scanning Working Group, <a href="https://www.web3d.org/working-groups/cad" target="_blank">https://www.web3d.org/working-groups/cad</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/ConformanceNist/STEP/FTC09/NistFtc08Asme1Ap242Spri.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/ConformanceNist/STEP/FTC09/NistFtc08Asme1Ap242Spri.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="../../../../STEP/FTC09/../../license.html">../../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToJava.xslt" target="_blank">X3dToJava.xslt</a>
		stylesheet to create Java source code from an <code>.x3d</code> model.
	</p>

	* @author Robert Lipman
 */

public class NistFtc08Asme1Ap242Spri
{
	/** Default constructor to create this object. */
	public NistFtc08Asme1Ap242Spri ()
	{
	  initialize();
	}

	/** Create and initialize the X3D model for this object. */
	public final void initialize()
	{
  x3dModel = new X3D().setProfile(X3D.PROFILE_CADINTERCHANGE).setVersion(X3D.VERSION_3_3)
  .setHead(new head()
    .addComponent(new component().setName("EnvironmentalEffects").setLevel(1))
    .addComponent(new component().setName("Navigation").setLevel(1))
    .addUnit(new unit().setName("INCH").setCategory("length").setConversionFactor(0.0254))
    .addMeta(new meta().setName(meta.NAME_TITLE      ).setContent("NistFtc08Asme1Ap242Spri.x3d"))
    .addMeta(new meta().setName(meta.NAME_CREATED    ).setContent("24 February 2018"))
    .addMeta(new meta().setName(meta.NAME_CREATED    ).setContent("11 October 2019"))
    .addMeta(new meta().setName(meta.NAME_TRANSLATOR ).setContent("Vince Marchetti"))
    .addMeta(new meta().setName(meta.NAME_CREATOR    ).setContent("Robert Lipman"))
    .addMeta(new meta().setName(meta.NAME_DESCRIPTION).setContent("NIST Product and Manufacturing Information (PMI) Complex Test Case 8."))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://pages.nist.gov/CAD-PMI-Testing/models.html"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://en.wikipedia.org/wiki/Product_and_manufacturing_information"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project/download"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://s3.amazonaws.com/nist-el/mfg_digitalthread/nist_ftc_09_asme1_rd.pdf"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://pages.nist.gov/CAD-PMI-Testing/tessellated-part-geometry.html"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://pages.nist.gov/CAD-PMI-Testing/graphical-pmi-viewer.html"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://pages.nist.gov/CAD-PMI-Testing/ap209-viewer.html"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.nist.gov/services-resources/software/step-file-analyzer"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.nist.gov/publications/guide-nist-pmi-cad-models-and-cad-system-pmi-modeling-capability-verification-testing"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("STEP AP242 Project, http://www.ap242.org"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("ASME standard Y14.46-2017: Product Definition for Additive Manufacturing"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.asme.org/products/codes-standards/y1446-2017-product-definition-additive"))
    .addMeta(new meta().setName(meta.NAME_GENERATOR  ).setContent("STEP to X3D conversion code: kshell/step_x3d/branches/basic_cad"))
    .addMeta(new meta().setName(meta.NAME_GENERATOR  ).setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName(meta.NAME_INFO       ).setContent("Correct definition and compliance of this conformance scene is maintained by the Web3D Design Printing and Scanning Working Group, https://www.web3d.org/working-groups/cad"))
    .addMeta(new meta().setName(meta.NAME_IDENTIFIER ).setContent("https://www.web3d.org/x3d/content/examples/ConformanceNist/STEP/FTC09/NistFtc08Asme1Ap242Spri.x3d"))
    .addMeta(new meta().setName(meta.NAME_LICENSE    ).setContent("../../license.html")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setTitle("NistFtc08Asme1Ap242Spri.x3d"))
    .addChild(new Background().setSkyColor(new MFColor(new double[] {0.094100,0.137300,0.498000}))
      .setMetadata(new MetadataString().setName("color").setReference("http://www.colourlovers.com/color/18237F/tienen_miedo").setValue(new String[] {"tienen miedo"})))
    .addChild(new DirectionalLight().setColor(1.000000,1.000000,1.000000).setDirection(-3.5355e-01,-3.5355e-01,-8.6603e-01))
    .addChild(new Viewpoint().setDescription("Oblique view").setCenterOfRotation(0.0000e+00,0.0000e+00,9.5000e-01).setFieldOfView(1.6628e-01).setOrientation(0.901,0.241,0.361,1.277).setPosition(7.0207e+01,-1.2160e+02,5.9112e+01))
    .addChild(new Viewpoint().setDescription("Top").setCenterOfRotation(0.0000e+00,0.0000e+00,9.5000e-01).setFieldOfView(1.6628e-01).setOrientation(1.000,0.000,0.000,0.000).setPosition(0.0000e+00,0.0000e+00,1.5293e+02))
    .addChild(new Viewpoint().setDescription("Bottom").setCenterOfRotation(0.0000e+00,0.0000e+00,9.5000e-01).setFieldOfView(1.6628e-01).setOrientation(1.000,0.000,0.000,3.142).setPosition(0.0000e+00,-1.8613e-14,-1.5103e+02))
    .addChild(new Viewpoint().setDescription("Right side").setCenterOfRotation(0.0000e+00,0.0000e+00,9.5000e-01).setFieldOfView(1.6628e-01).setOrientation(0.577,0.577,0.577,2.094).setPosition(1.5198e+02,-9.3063e-15,9.5000e-01))
    .addChild(new CADPart().setName("None").setBboxCenter(0.000000,0.000000,0.950000).setBboxSize(12.268000,8.768000,1.900000)
      .setMetadata(new MetadataSet().setName("_collection")
        .setMetadata(new MetadataString().setName("version").setValue(new String[] {"#12"}))
        .setMetadata(new MetadataSet().setName("STEP:length_unit")
          .setMetadata(new MetadataString().setName("name").setValue(new String[] {"INCH"}))
          .setMetadata(new MetadataFloat().setName("conversionFactor").setValue(new double[] {0.0254}))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#328"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_43_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_43_point())))
          .setAppearance(new Appearance("partcolor")
            .setMaterial(new Material().setAmbientIntensity(0.5).setDiffuseColor(0.651000,0.654900,0.721600)
              .setMetadata(new MetadataString().setName("color").setReference("http://www.colourlovers.com/color/A6A7B8/cool_silver").setValue(new String[] {"cool silver"}))))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#1312"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_51_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_51_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2226"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_57_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_57_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2484"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_63_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_63_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2706"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_69_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_69_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2737"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-6.1340e+00,-4.2640e+00,2.8000e-01,-6.1340e+00,4.2640e+00,2.8000e-01,-6.1340e+00,4.2640e+00,0.0000e+00,-6.1340e+00,-4.2640e+00,2.8000e-01,-6.1340e+00,4.2640e+00,0.0000e+00,-6.1340e+00,-4.2640e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2768"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-6.0140e+00,-4.3840e+00,0.0000e+00,6.0140e+00,-4.3840e+00,0.0000e+00,6.0140e+00,-4.3840e+00,2.8000e-01,-6.0140e+00,-4.3840e+00,0.0000e+00,6.0140e+00,-4.3840e+00,2.8000e-01,-6.0140e+00,-4.3840e+00,2.8000e-01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2799"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {6.1340e+00,-4.2640e+00,0.0000e+00,6.1340e+00,4.2640e+00,0.0000e+00,6.1340e+00,4.2640e+00,2.8000e-01,6.1340e+00,-4.2640e+00,0.0000e+00,6.1340e+00,4.2640e+00,2.8000e-01,6.1340e+00,-4.2640e+00,2.8000e-01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2830"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-6.0140e+00,4.3840e+00,2.8000e-01,6.0140e+00,4.3840e+00,2.8000e-01,6.0140e+00,4.3840e+00,0.0000e+00,-6.0140e+00,4.3840e+00,2.8000e-01,6.0140e+00,4.3840e+00,0.0000e+00,-6.0140e+00,4.3840e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2870"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.7490e+00,3.0843e+00,1.7800e+00,-5.7490e+00,3.0843e+00,4.6000e-01,-5.7490e+00,-3.0843e+00,4.6000e-01,-5.7490e+00,3.0843e+00,1.7800e+00,-5.7490e+00,-3.0843e+00,4.6000e-01,-5.7490e+00,-3.0843e+00,1.7800e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2910"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.8841e+00,3.9989e+00,1.7800e+00,-4.8841e+00,3.9989e+00,4.6000e-01,-5.7139e+00,3.1691e+00,4.6000e-01,-4.8841e+00,3.9989e+00,1.7800e+00,-5.7139e+00,3.1691e+00,4.6000e-01,-5.7139e+00,3.1691e+00,1.7800e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2950"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.7993e+00,4.0340e+00,1.7800e+00,4.7993e+00,4.0340e+00,4.6000e-01,-4.7993e+00,4.0340e+00,4.6000e-01,4.7993e+00,4.0340e+00,1.7800e+00,-4.7993e+00,4.0340e+00,4.6000e-01,-4.7993e+00,4.0340e+00,1.7800e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#2990"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7139e+00,3.1691e+00,1.7800e+00,5.7139e+00,3.1691e+00,4.6000e-01,4.8841e+00,3.9989e+00,4.6000e-01,5.7139e+00,3.1691e+00,1.7800e+00,4.8841e+00,3.9989e+00,4.6000e-01,4.8841e+00,3.9989e+00,1.7800e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3030"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.8841e+00,-3.9989e+00,1.7800e+00,4.8841e+00,-3.9989e+00,4.6000e-01,5.7139e+00,-3.1691e+00,4.6000e-01,4.8841e+00,-3.9989e+00,1.7800e+00,5.7139e+00,-3.1691e+00,4.6000e-01,5.7139e+00,-3.1691e+00,1.7800e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3070"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7993e+00,-4.0340e+00,1.7800e+00,-4.7993e+00,-4.0340e+00,4.6000e-01,4.7993e+00,-4.0340e+00,4.6000e-01,-4.7993e+00,-4.0340e+00,1.7800e+00,4.7993e+00,-4.0340e+00,4.6000e-01,4.7993e+00,-4.0340e+00,1.7800e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3110"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.7139e+00,-3.1691e+00,1.7800e+00,-5.7139e+00,-3.1691e+00,4.6000e-01,-4.8841e+00,-3.9989e+00,4.6000e-01,-5.7139e+00,-3.1691e+00,1.7800e+00,-4.8841e+00,-3.9989e+00,4.6000e-01,-4.8841e+00,-3.9989e+00,1.7800e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3122"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_141_point()))
            .setNormal(new Normal().setVector(getNormal_7_142_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3134"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_148_point()))
            .setNormal(new Normal().setVector(getNormal_7_149_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3146"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_155_point()))
            .setNormal(new Normal().setVector(getNormal_7_156_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3158"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_162_point()))
            .setNormal(new Normal().setVector(getNormal_7_163_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3189"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.4990e+00,2.9807e+00,1.6450e+00,-5.4990e+00,-2.9807e+00,1.6450e+00,-5.4990e+00,-2.9807e+00,0.0000e+00,-5.4990e+00,2.9807e+00,1.6450e+00,-5.4990e+00,-2.9807e+00,0.0000e+00,-5.4990e+00,2.9807e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3220"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7806e+00,3.7489e+00,1.6450e+00,-5.4639e+00,3.0656e+00,1.6450e+00,-5.4639e+00,3.0656e+00,-2.2204e-16,-4.7806e+00,3.7489e+00,1.6450e+00,-5.4639e+00,3.0656e+00,-2.2204e-16,-4.7806e+00,3.7489e+00,-2.2204e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3251"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.6957e+00,3.7840e+00,1.6450e+00,-4.6957e+00,3.7840e+00,1.6450e+00,-4.6957e+00,3.7840e+00,0.0000e+00,4.6957e+00,3.7840e+00,1.6450e+00,-4.6957e+00,3.7840e+00,0.0000e+00,4.6957e+00,3.7840e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3282"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.4639e+00,3.0656e+00,1.6450e+00,4.7806e+00,3.7489e+00,1.6450e+00,4.7806e+00,3.7489e+00,-2.2204e-16,5.4639e+00,3.0656e+00,1.6450e+00,4.7806e+00,3.7489e+00,-2.2204e-16,5.4639e+00,3.0656e+00,-2.2204e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3313"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.4990e+00,-2.9807e+00,1.6450e+00,5.4990e+00,2.9807e+00,1.6450e+00,5.4990e+00,2.9807e+00,0.0000e+00,5.4990e+00,-2.9807e+00,1.6450e+00,5.4990e+00,2.9807e+00,0.0000e+00,5.4990e+00,-2.9807e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3344"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.4639e+00,-3.0656e+00,-2.2204e-16,4.7806e+00,-3.7489e+00,-2.2204e-16,4.7806e+00,-3.7489e+00,1.6450e+00,5.4639e+00,-3.0656e+00,-2.2204e-16,4.7806e+00,-3.7489e+00,1.6450e+00,5.4639e+00,-3.0656e+00,1.6450e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3375"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.6957e+00,-3.7840e+00,0.0000e+00,-4.6957e+00,-3.7840e+00,0.0000e+00,-4.6957e+00,-3.7840e+00,1.6450e+00,4.6957e+00,-3.7840e+00,0.0000e+00,-4.6957e+00,-3.7840e+00,1.6450e+00,4.6957e+00,-3.7840e+00,1.6450e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3406"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.4639e+00,-3.0656e+00,1.6450e+00,-4.7806e+00,-3.7489e+00,1.6450e+00,-4.7806e+00,-3.7489e+00,-2.2204e-16,-5.4639e+00,-3.0656e+00,1.6450e+00,-4.7806e+00,-3.7489e+00,-2.2204e-16,-5.4639e+00,-3.0656e+00,-2.2204e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3428"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_217_point()))
            .setNormal(new Normal().setVector(getNormal_7_218_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3450"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.9200e+00,-2.2500e+00,1.7650e+00,-2.8300e+00,-2.2500e+00,1.7650e+00,-2.8300e+00,-2.2500e+00,1.9000e+00,-1.9200e+00,-2.2500e+00,1.7650e+00,-2.8300e+00,-2.2500e+00,1.9000e+00,-1.9200e+00,-2.2500e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3472"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_230_point()))
            .setNormal(new Normal().setVector(getNormal_7_231_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3494"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.7000e-01,-2.2500e+00,1.7650e+00,-1.0800e+00,-2.2500e+00,1.7650e+00,-1.0800e+00,-2.2500e+00,1.9000e+00,-1.7000e-01,-2.2500e+00,1.7650e+00,-1.0800e+00,-2.2500e+00,1.9000e+00,-1.7000e-01,-2.2500e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3516"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_243_point()))
            .setNormal(new Normal().setVector(getNormal_7_244_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3538"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.1250e+00,-2.2500e+00,1.7650e+00,6.7000e-01,-2.2500e+00,1.7650e+00,6.7000e-01,-2.2500e+00,1.9000e+00,1.1250e+00,-2.2500e+00,1.7650e+00,6.7000e-01,-2.2500e+00,1.9000e+00,1.1250e+00,-2.2500e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3560"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.2500e+00,-1.4200e+00,1.7650e+00,1.2500e+00,-2.1250e+00,1.7650e+00,1.2500e+00,-2.1250e+00,1.9000e+00,1.2500e+00,-1.4200e+00,1.7650e+00,1.2500e+00,-2.1250e+00,1.9000e+00,1.2500e+00,-1.4200e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3582"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_262_point()))
            .setNormal(new Normal().setVector(getNormal_7_263_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3604"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.2500e+00,5.8000e-01,1.7650e+00,1.2500e+00,-5.8000e-01,1.7650e+00,1.2500e+00,-5.8000e-01,1.9000e+00,1.2500e+00,5.8000e-01,1.7650e+00,1.2500e+00,-5.8000e-01,1.9000e+00,1.2500e+00,5.8000e-01,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3626"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_275_point()))
            .setNormal(new Normal().setVector(getNormal_7_276_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3648"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.2500e+00,2.1250e+00,1.7650e+00,1.2500e+00,1.4200e+00,1.7650e+00,1.2500e+00,1.4200e+00,1.9000e+00,1.2500e+00,2.1250e+00,1.7650e+00,1.2500e+00,1.4200e+00,1.9000e+00,1.2500e+00,2.1250e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3670"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {6.7000e-01,2.2500e+00,1.7650e+00,1.1250e+00,2.2500e+00,1.7650e+00,1.1250e+00,2.2500e+00,1.9000e+00,6.7000e-01,2.2500e+00,1.7650e+00,1.1250e+00,2.2500e+00,1.9000e+00,6.7000e-01,2.2500e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3692"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_294_point()))
            .setNormal(new Normal().setVector(getNormal_7_295_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3714"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.0800e+00,2.2500e+00,1.7650e+00,-1.7000e-01,2.2500e+00,1.7650e+00,-1.7000e-01,2.2500e+00,1.9000e+00,-1.0800e+00,2.2500e+00,1.7650e+00,-1.7000e-01,2.2500e+00,1.9000e+00,-1.0800e+00,2.2500e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3736"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_307_point()))
            .setNormal(new Normal().setVector(getNormal_7_308_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3758"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-2.8300e+00,2.2500e+00,1.7650e+00,-1.9200e+00,2.2500e+00,1.7650e+00,-1.9200e+00,2.2500e+00,1.9000e+00,-2.8300e+00,2.2500e+00,1.7650e+00,-1.9200e+00,2.2500e+00,1.9000e+00,-2.8300e+00,2.2500e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3780"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_320_point()))
            .setNormal(new Normal().setVector(getNormal_7_321_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3802"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.1250e+00,2.2500e+00,1.7650e+00,-3.6700e+00,2.2500e+00,1.7650e+00,-3.6700e+00,2.2500e+00,1.9000e+00,-4.1250e+00,2.2500e+00,1.7650e+00,-3.6700e+00,2.2500e+00,1.9000e+00,-4.1250e+00,2.2500e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3824"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.2500e+00,2.1250e+00,1.9000e+00,-4.2500e+00,1.4200e+00,1.9000e+00,-4.2500e+00,1.4200e+00,1.7650e+00,-4.2500e+00,2.1250e+00,1.9000e+00,-4.2500e+00,1.4200e+00,1.7650e+00,-4.2500e+00,2.1250e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3846"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_339_point()))
            .setNormal(new Normal().setVector(getNormal_7_340_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3868"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.2500e+00,-5.8000e-01,1.7650e+00,-4.2500e+00,5.8000e-01,1.7650e+00,-4.2500e+00,5.8000e-01,1.9000e+00,-4.2500e+00,-5.8000e-01,1.7650e+00,-4.2500e+00,5.8000e-01,1.9000e+00,-4.2500e+00,-5.8000e-01,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3890"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-3.6700e+00,-2.2500e+00,1.7650e+00,-4.1250e+00,-2.2500e+00,1.7650e+00,-4.1250e+00,-2.2500e+00,1.9000e+00,-3.6700e+00,-2.2500e+00,1.7650e+00,-4.1250e+00,-2.2500e+00,1.9000e+00,-3.6700e+00,-2.2500e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3912"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.2500e+00,-2.1250e+00,1.7650e+00,-4.2500e+00,-1.4200e+00,1.7650e+00,-4.2500e+00,-1.4200e+00,1.9000e+00,-4.2500e+00,-2.1250e+00,1.7650e+00,-4.2500e+00,-1.4200e+00,1.9000e+00,-4.2500e+00,-2.1250e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3934"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_364_point()))
            .setNormal(new Normal().setVector(getNormal_7_365_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3946"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_371_point()))
            .setNormal(new Normal().setVector(getNormal_7_372_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3958"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_378_point()))
            .setNormal(new Normal().setVector(getNormal_7_379_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3970"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_385_point()))
            .setNormal(new Normal().setVector(getNormal_7_386_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3982"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_392_point()))
            .setNormal(new Normal().setVector(getNormal_7_393_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#3994"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_399_point()))
            .setNormal(new Normal().setVector(getNormal_7_400_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4006"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_406_point()))
            .setNormal(new Normal().setVector(getNormal_7_407_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4018"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_413_point()))
            .setNormal(new Normal().setVector(getNormal_7_414_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4030"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_420_point()))
            .setNormal(new Normal().setVector(getNormal_7_421_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4042"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_427_point()))
            .setNormal(new Normal().setVector(getNormal_7_428_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4054"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_434_point()))
            .setNormal(new Normal().setVector(getNormal_7_435_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4076"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {3.7500e+00,-1.4625e+00,1.9000e+00,3.7500e+00,-2.4375e+00,1.9000e+00,3.7500e+00,-2.4375e+00,1.7650e+00,3.7500e+00,-1.4625e+00,1.9000e+00,3.7500e+00,-2.4375e+00,1.7650e+00,3.7500e+00,-1.4625e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4098"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.7875e+00,-2.5000e+00,1.7650e+00,3.8125e+00,-2.5000e+00,1.7650e+00,3.8125e+00,-2.5000e+00,1.9000e+00,4.7875e+00,-2.5000e+00,1.7650e+00,3.8125e+00,-2.5000e+00,1.9000e+00,4.7875e+00,-2.5000e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4120"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.8500e+00,-1.4625e+00,1.7650e+00,4.8500e+00,-2.4375e+00,1.7650e+00,4.8500e+00,-2.4375e+00,1.9000e+00,4.8500e+00,-1.4625e+00,1.7650e+00,4.8500e+00,-2.4375e+00,1.9000e+00,4.8500e+00,-1.4625e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4142"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {3.8125e+00,-1.4000e+00,1.7650e+00,4.7875e+00,-1.4000e+00,1.7650e+00,4.7875e+00,-1.4000e+00,1.9000e+00,3.8125e+00,-1.4000e+00,1.7650e+00,4.7875e+00,-1.4000e+00,1.9000e+00,3.8125e+00,-1.4000e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4154"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_465_point()))
            .setNormal(new Normal().setVector(getNormal_7_466_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4166"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_472_point()))
            .setNormal(new Normal().setVector(getNormal_7_473_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4188"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_479_point()))
            .setNormal(new Normal().setVector(getNormal_7_480_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4200"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_486_point()))
            .setNormal(new Normal().setVector(getNormal_7_487_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4212"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_493_point()))
            .setNormal(new Normal().setVector(getNormal_7_494_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4224"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_500_point()))
            .setNormal(new Normal().setVector(getNormal_7_501_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4236"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_507_point()))
            .setNormal(new Normal().setVector(getNormal_7_508_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4248"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_514_point()))
            .setNormal(new Normal().setVector(getNormal_7_515_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4270"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.0500e+00,-1.5000e+00,1.9000e+00,2.0500e+00,-2.1500e+00,1.9000e+00,2.0500e+00,-2.1500e+00,1.7650e+00,2.0500e+00,-1.5000e+00,1.9000e+00,2.0500e+00,-2.1500e+00,1.7650e+00,2.0500e+00,-1.5000e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4287"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_527_point()))
            .setNormal(new Normal().setVector(getNormal_7_528_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4304"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.6500e+00,-2.1500e+00,1.9000e+00,2.6500e+00,-2.0250e+00,1.9000e+00,2.6500e+00,-2.0250e+00,1.7650e+00,2.6500e+00,-2.1500e+00,1.9000e+00,2.6500e+00,-2.0250e+00,1.7650e+00,2.6500e+00,-2.1500e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4321"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_540_point()))
            .setNormal(new Normal().setVector(getNormal_7_541_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4338"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.6500e+00,-1.6250e+00,1.9000e+00,2.6500e+00,-1.5000e+00,1.9000e+00,2.6500e+00,-1.5000e+00,1.7650e+00,2.6500e+00,-1.6250e+00,1.9000e+00,2.6500e+00,-1.5000e+00,1.7650e+00,2.6500e+00,-1.6250e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4350"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_553_point()))
            .setNormal(new Normal().setVector(getNormal_7_554_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4372"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.8500e+00,2.0125e+00,1.9000e+00,1.8500e+00,1.6375e+00,1.9000e+00,1.8500e+00,1.6375e+00,1.7650e+00,1.8500e+00,2.0125e+00,1.9000e+00,1.8500e+00,1.6375e+00,1.7650e+00,1.8500e+00,2.0125e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4394"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.0500e+00,1.5750e+00,1.7650e+00,1.9125e+00,1.5750e+00,1.7650e+00,1.9125e+00,1.5750e+00,1.9000e+00,2.0500e+00,1.5750e+00,1.7650e+00,1.9125e+00,1.5750e+00,1.9000e+00,2.0500e+00,1.5750e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4411"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.0500e+00,1.5750e+00,1.9000e+00,2.0500e+00,1.5000e+00,1.9000e+00,2.0500e+00,1.5000e+00,1.7650e+00,2.0500e+00,1.5750e+00,1.9000e+00,2.0500e+00,1.5000e+00,1.7650e+00,2.0500e+00,1.5750e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4428"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_578_point()))
            .setNormal(new Normal().setVector(getNormal_7_579_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4445"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.6500e+00,1.5000e+00,1.9000e+00,2.6500e+00,1.6250e+00,1.9000e+00,2.6500e+00,1.6250e+00,1.7650e+00,2.6500e+00,1.5000e+00,1.9000e+00,2.6500e+00,1.6250e+00,1.7650e+00,2.6500e+00,1.5000e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4462"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_591_point()))
            .setNormal(new Normal().setVector(getNormal_7_592_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4479"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.6500e+00,2.0250e+00,1.9000e+00,2.6500e+00,2.1500e+00,1.9000e+00,2.6500e+00,2.1500e+00,1.7650e+00,2.6500e+00,2.0250e+00,1.9000e+00,2.6500e+00,2.1500e+00,1.7650e+00,2.6500e+00,2.0250e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4496"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_604_point()))
            .setNormal(new Normal().setVector(getNormal_7_605_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4513"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.0500e+00,2.1500e+00,1.9000e+00,2.0500e+00,2.0750e+00,1.9000e+00,2.0500e+00,2.0750e+00,1.7650e+00,2.0500e+00,2.1500e+00,1.9000e+00,2.0500e+00,2.0750e+00,1.7650e+00,2.0500e+00,2.1500e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4530"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.0500e+00,2.0750e+00,1.9000e+00,1.9125e+00,2.0750e+00,1.9000e+00,1.9125e+00,2.0750e+00,1.7650e+00,2.0500e+00,2.0750e+00,1.9000e+00,1.9125e+00,2.0750e+00,1.7650e+00,2.0500e+00,2.0750e+00,1.7650e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4561"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.1500e+00,-3.0000e+00,1.9000e+00,-5.1500e+00,-3.0000e+00,1.8800e+00,-5.1500e+00,3.0000e+00,1.8800e+00,-5.1500e+00,-3.0000e+00,1.9000e+00,-5.1500e+00,3.0000e+00,1.8800e+00,-5.1500e+00,3.0000e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4592"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7750e+00,-3.1250e+00,1.9000e+00,-4.7750e+00,-3.1250e+00,1.8800e+00,-5.0250e+00,-3.1250e+00,1.8800e+00,-4.7750e+00,-3.1250e+00,1.9000e+00,-5.0250e+00,-3.1250e+00,1.8800e+00,-5.0250e+00,-3.1250e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4623"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.6500e+00,3.0000e+00,1.9000e+00,-4.6500e+00,3.0000e+00,1.8800e+00,-4.6500e+00,-3.0000e+00,1.8800e+00,-4.6500e+00,3.0000e+00,1.9000e+00,-4.6500e+00,-3.0000e+00,1.8800e+00,-4.6500e+00,-3.0000e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4654"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.0250e+00,3.1250e+00,1.9000e+00,-5.0250e+00,3.1250e+00,1.8800e+00,-4.7750e+00,3.1250e+00,1.8800e+00,-5.0250e+00,3.1250e+00,1.9000e+00,-4.7750e+00,3.1250e+00,1.8800e+00,-4.7750e+00,3.1250e+00,1.9000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4730"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {35,0,1,35,1,2,35,2,3,35,3,4,35,4,5,35,5,6,35,6,7,35,7,8,35,8,9,35,9,10,35,10,11,35,11,12,35,12,13,35,13,14,35,14,15,35,15,16,35,16,17,35,17,18,35,18,19,35,19,20,35,20,21,35,21,22,35,22,23,35,23,24,35,24,25,35,25,26,35,26,27,35,27,28,35,28,29,35,29,30,35,30,31,35,31,32,35,32,33,35,33,34}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_647_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4742"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.2500e+00,1.4200e+00,1.9000e+00,-4.2500e+00,1.4200e+00,1.7650e+00,-4.2490e+00,1.4039e+00,1.9000e+00,-4.2490e+00,1.4039e+00,1.7650e+00,-4.2459e+00,1.3881e+00,1.9000e+00,-4.2459e+00,1.3881e+00,1.7650e+00,-4.2408e+00,1.3729e+00,1.9000e+00,-4.2408e+00,1.3729e+00,1.7650e+00,-4.2338e+00,1.3584e+00,1.9000e+00,-4.2338e+00,1.3584e+00,1.7650e+00,-4.2249e+00,1.3449e+00,1.9000e+00,-4.2249e+00,1.3449e+00,1.7650e+00,-4.2145e+00,1.3327e+00,1.9000e+00,-4.2145e+00,1.3327e+00,1.7650e+00,-4.2025e+00,1.3219e+00,1.9000e+00,-4.2025e+00,1.3219e+00,1.7650e+00,-4.1893e+00,1.3128e+00,1.9000e+00,-4.1893e+00,1.3128e+00,1.7650e+00,-4.1750e+00,1.3054e+00,1.9000e+00,-4.1750e+00,1.3054e+00,1.7650e+00,-4.1598e+00,1.3000e+00,1.9000e+00,-4.1598e+00,1.3000e+00,1.7650e+00,-4.1441e+00,1.2965e+00,1.9000e+00,-4.1441e+00,1.2965e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9171e-01,1.2848e-01,-0.0000e+00,9.9171e-01,1.2848e-01,-0.0000e+00,9.6698e-01,2.5484e-01,-0.0000e+00,9.6698e-01,2.5484e-01,-0.0000e+00,9.2623e-01,3.7697e-01,-0.0000e+00,9.2623e-01,3.7697e-01,-0.0000e+00,8.7011e-01,4.9285e-01,-0.0000e+00,8.7011e-01,4.9285e-01,-0.0000e+00,7.9958e-01,6.0056e-01,-0.0000e+00,7.9958e-01,6.0056e-01,-0.0000e+00,7.1579e-01,6.9832e-01,-0.0000e+00,7.1579e-01,6.9832e-01,-0.0000e+00,6.2013e-01,7.8450e-01,-0.0000e+00,6.2013e-01,7.8450e-01,-0.0000e+00,5.1419e-01,8.5767e-01,-0.0000e+00,5.1419e-01,8.5767e-01,-0.0000e+00,3.9973e-01,9.1663e-01,-0.0000e+00,3.9973e-01,9.1663e-01,-0.0000e+00,2.7865e-01,9.6039e-01,-0.0000e+00,2.7865e-01,9.6039e-01,-0.0000e+00,1.5294e-01,9.8824e-01,-0.0000e+00,1.5294e-01,9.8824e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4754"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.1441e+00,7.0353e-01,1.9000e+00,-4.1441e+00,7.0353e-01,1.7650e+00,-4.1598e+00,7.0005e-01,1.9000e+00,-4.1598e+00,7.0005e-01,1.7650e+00,-4.1750e+00,6.9458e-01,1.9000e+00,-4.1750e+00,6.9458e-01,1.7650e+00,-4.1893e+00,6.8721e-01,1.9000e+00,-4.1893e+00,6.8721e-01,1.7650e+00,-4.2025e+00,6.7806e-01,1.9000e+00,-4.2025e+00,6.7806e-01,1.7650e+00,-4.2145e+00,6.6729e-01,1.9000e+00,-4.2145e+00,6.6729e-01,1.7650e+00,-4.2249e+00,6.5507e-01,1.9000e+00,-4.2249e+00,6.5507e-01,1.7650e+00,-4.2338e+00,6.4161e-01,1.9000e+00,-4.2338e+00,6.4161e-01,1.7650e+00,-4.2408e+00,6.2712e-01,1.9000e+00,-4.2408e+00,6.2712e-01,1.7650e+00,-4.2459e+00,6.1186e-01,1.9000e+00,-4.2459e+00,6.1186e-01,1.7650e+00,-4.2490e+00,5.9606e-01,1.9000e+00,-4.2490e+00,5.9606e-01,1.7650e+00,-4.2500e+00,5.8000e-01,1.9000e+00,-4.2500e+00,5.8000e-01,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.5294e-01,-9.8824e-01,-0.0000e+00,1.5294e-01,-9.8824e-01,-0.0000e+00,2.7865e-01,-9.6039e-01,-0.0000e+00,2.7865e-01,-9.6039e-01,-0.0000e+00,3.9973e-01,-9.1663e-01,-0.0000e+00,3.9973e-01,-9.1663e-01,-0.0000e+00,5.1419e-01,-8.5767e-01,-0.0000e+00,5.1419e-01,-8.5767e-01,-0.0000e+00,6.2013e-01,-7.8450e-01,-0.0000e+00,6.2013e-01,-7.8450e-01,-0.0000e+00,7.1579e-01,-6.9832e-01,-0.0000e+00,7.1579e-01,-6.9832e-01,-0.0000e+00,7.9958e-01,-6.0056e-01,-0.0000e+00,7.9958e-01,-6.0056e-01,-0.0000e+00,8.7011e-01,-4.9285e-01,-0.0000e+00,8.7011e-01,-4.9285e-01,-0.0000e+00,9.2623e-01,-3.7697e-01,-0.0000e+00,9.2623e-01,-3.7697e-01,-0.0000e+00,9.6698e-01,-2.5484e-01,-0.0000e+00,9.6698e-01,-2.5484e-01,-0.0000e+00,9.9171e-01,-1.2848e-01,-0.0000e+00,9.9171e-01,-1.2848e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4766"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.2500e+00,-5.8000e-01,1.9000e+00,-4.2500e+00,-5.8000e-01,1.7650e+00,-4.2490e+00,-5.9606e-01,1.9000e+00,-4.2490e+00,-5.9606e-01,1.7650e+00,-4.2459e+00,-6.1186e-01,1.9000e+00,-4.2459e+00,-6.1186e-01,1.7650e+00,-4.2408e+00,-6.2712e-01,1.9000e+00,-4.2408e+00,-6.2712e-01,1.7650e+00,-4.2338e+00,-6.4161e-01,1.9000e+00,-4.2338e+00,-6.4161e-01,1.7650e+00,-4.2249e+00,-6.5507e-01,1.9000e+00,-4.2249e+00,-6.5507e-01,1.7650e+00,-4.2145e+00,-6.6729e-01,1.9000e+00,-4.2145e+00,-6.6729e-01,1.7650e+00,-4.2025e+00,-6.7806e-01,1.9000e+00,-4.2025e+00,-6.7806e-01,1.7650e+00,-4.1893e+00,-6.8721e-01,1.9000e+00,-4.1893e+00,-6.8721e-01,1.7650e+00,-4.1750e+00,-6.9458e-01,1.9000e+00,-4.1750e+00,-6.9458e-01,1.7650e+00,-4.1598e+00,-7.0005e-01,1.9000e+00,-4.1598e+00,-7.0005e-01,1.7650e+00,-4.1441e+00,-7.0353e-01,1.9000e+00,-4.1441e+00,-7.0353e-01,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9171e-01,1.2848e-01,-0.0000e+00,9.9171e-01,1.2848e-01,-0.0000e+00,9.6698e-01,2.5484e-01,-0.0000e+00,9.6698e-01,2.5484e-01,-0.0000e+00,9.2623e-01,3.7697e-01,-0.0000e+00,9.2623e-01,3.7697e-01,-0.0000e+00,8.7011e-01,4.9285e-01,-0.0000e+00,8.7011e-01,4.9285e-01,-0.0000e+00,7.9958e-01,6.0056e-01,-0.0000e+00,7.9958e-01,6.0056e-01,-0.0000e+00,7.1579e-01,6.9832e-01,-0.0000e+00,7.1579e-01,6.9832e-01,-0.0000e+00,6.2013e-01,7.8450e-01,-0.0000e+00,6.2013e-01,7.8450e-01,-0.0000e+00,5.1419e-01,8.5767e-01,-0.0000e+00,5.1419e-01,8.5767e-01,-0.0000e+00,3.9973e-01,9.1663e-01,-0.0000e+00,3.9973e-01,9.1663e-01,-0.0000e+00,2.7865e-01,9.6039e-01,-0.0000e+00,2.7865e-01,9.6039e-01,-0.0000e+00,1.5294e-01,9.8824e-01,-0.0000e+00,1.5294e-01,9.8824e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4778"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.1441e+00,-1.2965e+00,1.9000e+00,-4.1441e+00,-1.2965e+00,1.7650e+00,-4.1598e+00,-1.3000e+00,1.9000e+00,-4.1598e+00,-1.3000e+00,1.7650e+00,-4.1750e+00,-1.3054e+00,1.9000e+00,-4.1750e+00,-1.3054e+00,1.7650e+00,-4.1893e+00,-1.3128e+00,1.9000e+00,-4.1893e+00,-1.3128e+00,1.7650e+00,-4.2025e+00,-1.3219e+00,1.9000e+00,-4.2025e+00,-1.3219e+00,1.7650e+00,-4.2145e+00,-1.3327e+00,1.9000e+00,-4.2145e+00,-1.3327e+00,1.7650e+00,-4.2249e+00,-1.3449e+00,1.9000e+00,-4.2249e+00,-1.3449e+00,1.7650e+00,-4.2338e+00,-1.3584e+00,1.9000e+00,-4.2338e+00,-1.3584e+00,1.7650e+00,-4.2408e+00,-1.3729e+00,1.9000e+00,-4.2408e+00,-1.3729e+00,1.7650e+00,-4.2459e+00,-1.3881e+00,1.9000e+00,-4.2459e+00,-1.3881e+00,1.7650e+00,-4.2490e+00,-1.4039e+00,1.9000e+00,-4.2490e+00,-1.4039e+00,1.7650e+00,-4.2500e+00,-1.4200e+00,1.9000e+00,-4.2500e+00,-1.4200e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.5294e-01,-9.8824e-01,-0.0000e+00,1.5294e-01,-9.8824e-01,-0.0000e+00,2.7865e-01,-9.6039e-01,-0.0000e+00,2.7865e-01,-9.6039e-01,-0.0000e+00,3.9973e-01,-9.1663e-01,-0.0000e+00,3.9973e-01,-9.1663e-01,-0.0000e+00,5.1419e-01,-8.5767e-01,-0.0000e+00,5.1419e-01,-8.5767e-01,-0.0000e+00,6.2013e-01,-7.8450e-01,-0.0000e+00,6.2013e-01,-7.8450e-01,-0.0000e+00,7.1579e-01,-6.9832e-01,-0.0000e+00,7.1579e-01,-6.9832e-01,-0.0000e+00,7.9958e-01,-6.0056e-01,-0.0000e+00,7.9958e-01,-6.0056e-01,-0.0000e+00,8.7011e-01,-4.9285e-01,-0.0000e+00,8.7011e-01,-4.9285e-01,-0.0000e+00,9.2623e-01,-3.7697e-01,-0.0000e+00,9.2623e-01,-3.7697e-01,-0.0000e+00,9.6698e-01,-2.5484e-01,-0.0000e+00,9.6698e-01,-2.5484e-01,-0.0000e+00,9.9171e-01,-1.2848e-01,-0.0000e+00,9.9171e-01,-1.2848e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4790"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.2500e+00,-2.1250e+00,1.9000e+00,-4.2500e+00,-2.1250e+00,1.7650e+00,-4.2489e+00,-2.1413e+00,1.9000e+00,-4.2489e+00,-2.1413e+00,1.7650e+00,-4.2457e+00,-2.1574e+00,1.9000e+00,-4.2457e+00,-2.1574e+00,1.7650e+00,-4.2405e+00,-2.1728e+00,1.9000e+00,-4.2405e+00,-2.1728e+00,1.7650e+00,-4.2333e+00,-2.1875e+00,1.9000e+00,-4.2333e+00,-2.1875e+00,1.7650e+00,-4.2242e+00,-2.2011e+00,1.9000e+00,-4.2242e+00,-2.2011e+00,1.7650e+00,-4.2134e+00,-2.2134e+00,1.9000e+00,-4.2134e+00,-2.2134e+00,1.7650e+00,-4.2011e+00,-2.2242e+00,1.9000e+00,-4.2011e+00,-2.2242e+00,1.7650e+00,-4.1875e+00,-2.2333e+00,1.9000e+00,-4.1875e+00,-2.2333e+00,1.7650e+00,-4.1728e+00,-2.2405e+00,1.9000e+00,-4.1728e+00,-2.2405e+00,1.7650e+00,-4.1574e+00,-2.2457e+00,1.9000e+00,-4.1574e+00,-2.2457e+00,1.7650e+00,-4.1413e+00,-2.2489e+00,1.9000e+00,-4.1413e+00,-2.2489e+00,1.7650e+00,-4.1250e+00,-2.2500e+00,1.9000e+00,-4.1250e+00,-2.2500e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4802"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-3.6700e+00,-2.2500e+00,1.9000e+00,-3.6700e+00,-2.2500e+00,1.7650e+00,-3.6539e+00,-2.2490e+00,1.9000e+00,-3.6539e+00,-2.2490e+00,1.7650e+00,-3.6381e+00,-2.2459e+00,1.9000e+00,-3.6381e+00,-2.2459e+00,1.7650e+00,-3.6229e+00,-2.2408e+00,1.9000e+00,-3.6229e+00,-2.2408e+00,1.7650e+00,-3.6084e+00,-2.2338e+00,1.9000e+00,-3.6084e+00,-2.2338e+00,1.7650e+00,-3.5949e+00,-2.2249e+00,1.9000e+00,-3.5949e+00,-2.2249e+00,1.7650e+00,-3.5827e+00,-2.2145e+00,1.9000e+00,-3.5827e+00,-2.2145e+00,1.7650e+00,-3.5719e+00,-2.2025e+00,1.9000e+00,-3.5719e+00,-2.2025e+00,1.7650e+00,-3.5628e+00,-2.1893e+00,1.9000e+00,-3.5628e+00,-2.1893e+00,1.7650e+00,-3.5554e+00,-2.1750e+00,1.9000e+00,-3.5554e+00,-2.1750e+00,1.7650e+00,-3.5500e+00,-2.1598e+00,1.9000e+00,-3.5500e+00,-2.1598e+00,1.7650e+00,-3.5465e+00,-2.1441e+00,1.9000e+00,-3.5465e+00,-2.1441e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2848e-01,9.9171e-01,-0.0000e+00,-1.2848e-01,9.9171e-01,-0.0000e+00,-2.5484e-01,9.6698e-01,-0.0000e+00,-2.5484e-01,9.6698e-01,-0.0000e+00,-3.7697e-01,9.2623e-01,-0.0000e+00,-3.7697e-01,9.2623e-01,-0.0000e+00,-4.9285e-01,8.7011e-01,-0.0000e+00,-4.9285e-01,8.7011e-01,-0.0000e+00,-6.0056e-01,7.9958e-01,-0.0000e+00,-6.0056e-01,7.9958e-01,-0.0000e+00,-6.9832e-01,7.1579e-01,-0.0000e+00,-6.9832e-01,7.1579e-01,-0.0000e+00,-7.8450e-01,6.2013e-01,-0.0000e+00,-7.8450e-01,6.2013e-01,-0.0000e+00,-8.5767e-01,5.1419e-01,-0.0000e+00,-8.5767e-01,5.1419e-01,-0.0000e+00,-9.1663e-01,3.9973e-01,-0.0000e+00,-9.1663e-01,3.9973e-01,-0.0000e+00,-9.6039e-01,2.7865e-01,-0.0000e+00,-9.6039e-01,2.7865e-01,-0.0000e+00,-9.8824e-01,1.5294e-01,-0.0000e+00,-9.8824e-01,1.5294e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4814"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-2.9535e+00,-2.1441e+00,1.9000e+00,-2.9535e+00,-2.1441e+00,1.7650e+00,-2.9500e+00,-2.1598e+00,1.9000e+00,-2.9500e+00,-2.1598e+00,1.7650e+00,-2.9446e+00,-2.1750e+00,1.9000e+00,-2.9446e+00,-2.1750e+00,1.7650e+00,-2.9372e+00,-2.1893e+00,1.9000e+00,-2.9372e+00,-2.1893e+00,1.7650e+00,-2.9281e+00,-2.2025e+00,1.9000e+00,-2.9281e+00,-2.2025e+00,1.7650e+00,-2.9173e+00,-2.2145e+00,1.9000e+00,-2.9173e+00,-2.2145e+00,1.7650e+00,-2.9051e+00,-2.2249e+00,1.9000e+00,-2.9051e+00,-2.2249e+00,1.7650e+00,-2.8916e+00,-2.2338e+00,1.9000e+00,-2.8916e+00,-2.2338e+00,1.7650e+00,-2.8771e+00,-2.2408e+00,1.9000e+00,-2.8771e+00,-2.2408e+00,1.7650e+00,-2.8619e+00,-2.2459e+00,1.9000e+00,-2.8619e+00,-2.2459e+00,1.7650e+00,-2.8461e+00,-2.2490e+00,1.9000e+00,-2.8461e+00,-2.2490e+00,1.7650e+00,-2.8300e+00,-2.2500e+00,1.9000e+00,-2.8300e+00,-2.2500e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {9.8824e-01,1.5294e-01,-0.0000e+00,9.8824e-01,1.5294e-01,-0.0000e+00,9.6039e-01,2.7865e-01,-0.0000e+00,9.6039e-01,2.7865e-01,-0.0000e+00,9.1663e-01,3.9973e-01,-0.0000e+00,9.1663e-01,3.9973e-01,-0.0000e+00,8.5767e-01,5.1419e-01,-0.0000e+00,8.5767e-01,5.1419e-01,-0.0000e+00,7.8450e-01,6.2013e-01,-0.0000e+00,7.8450e-01,6.2013e-01,-0.0000e+00,6.9832e-01,7.1579e-01,-0.0000e+00,6.9832e-01,7.1579e-01,-0.0000e+00,6.0056e-01,7.9958e-01,-0.0000e+00,6.0056e-01,7.9958e-01,-0.0000e+00,4.9285e-01,8.7011e-01,-0.0000e+00,4.9285e-01,8.7011e-01,-0.0000e+00,3.7697e-01,9.2623e-01,-0.0000e+00,3.7697e-01,9.2623e-01,-0.0000e+00,2.5484e-01,9.6698e-01,-0.0000e+00,2.5484e-01,9.6698e-01,-0.0000e+00,1.2848e-01,9.9171e-01,-0.0000e+00,1.2848e-01,9.9171e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4826"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.9200e+00,-2.2500e+00,1.9000e+00,-1.9200e+00,-2.2500e+00,1.7650e+00,-1.9039e+00,-2.2490e+00,1.9000e+00,-1.9039e+00,-2.2490e+00,1.7650e+00,-1.8881e+00,-2.2459e+00,1.9000e+00,-1.8881e+00,-2.2459e+00,1.7650e+00,-1.8729e+00,-2.2408e+00,1.9000e+00,-1.8729e+00,-2.2408e+00,1.7650e+00,-1.8584e+00,-2.2338e+00,1.9000e+00,-1.8584e+00,-2.2338e+00,1.7650e+00,-1.8449e+00,-2.2249e+00,1.9000e+00,-1.8449e+00,-2.2249e+00,1.7650e+00,-1.8327e+00,-2.2145e+00,1.9000e+00,-1.8327e+00,-2.2145e+00,1.7650e+00,-1.8219e+00,-2.2025e+00,1.9000e+00,-1.8219e+00,-2.2025e+00,1.7650e+00,-1.8128e+00,-2.1893e+00,1.9000e+00,-1.8128e+00,-2.1893e+00,1.7650e+00,-1.8054e+00,-2.1750e+00,1.9000e+00,-1.8054e+00,-2.1750e+00,1.7650e+00,-1.8000e+00,-2.1598e+00,1.9000e+00,-1.8000e+00,-2.1598e+00,1.7650e+00,-1.7965e+00,-2.1441e+00,1.9000e+00,-1.7965e+00,-2.1441e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2848e-01,9.9171e-01,-0.0000e+00,-1.2848e-01,9.9171e-01,-0.0000e+00,-2.5484e-01,9.6698e-01,-0.0000e+00,-2.5484e-01,9.6698e-01,-0.0000e+00,-3.7697e-01,9.2623e-01,-0.0000e+00,-3.7697e-01,9.2623e-01,-0.0000e+00,-4.9285e-01,8.7011e-01,-0.0000e+00,-4.9285e-01,8.7011e-01,-0.0000e+00,-6.0056e-01,7.9958e-01,-0.0000e+00,-6.0056e-01,7.9958e-01,-0.0000e+00,-6.9832e-01,7.1579e-01,-0.0000e+00,-6.9832e-01,7.1579e-01,-0.0000e+00,-7.8450e-01,6.2013e-01,-0.0000e+00,-7.8450e-01,6.2013e-01,-0.0000e+00,-8.5767e-01,5.1419e-01,-0.0000e+00,-8.5767e-01,5.1419e-01,-0.0000e+00,-9.1663e-01,3.9973e-01,-0.0000e+00,-9.1663e-01,3.9973e-01,-0.0000e+00,-9.6039e-01,2.7865e-01,-0.0000e+00,-9.6039e-01,2.7865e-01,-0.0000e+00,-9.8824e-01,1.5294e-01,-0.0000e+00,-9.8824e-01,1.5294e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4838"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.2035e+00,-2.1441e+00,1.9000e+00,-1.2035e+00,-2.1441e+00,1.7650e+00,-1.2000e+00,-2.1598e+00,1.9000e+00,-1.2000e+00,-2.1598e+00,1.7650e+00,-1.1946e+00,-2.1750e+00,1.9000e+00,-1.1946e+00,-2.1750e+00,1.7650e+00,-1.1872e+00,-2.1893e+00,1.9000e+00,-1.1872e+00,-2.1893e+00,1.7650e+00,-1.1781e+00,-2.2025e+00,1.9000e+00,-1.1781e+00,-2.2025e+00,1.7650e+00,-1.1673e+00,-2.2145e+00,1.9000e+00,-1.1673e+00,-2.2145e+00,1.7650e+00,-1.1551e+00,-2.2249e+00,1.9000e+00,-1.1551e+00,-2.2249e+00,1.7650e+00,-1.1416e+00,-2.2338e+00,1.9000e+00,-1.1416e+00,-2.2338e+00,1.7650e+00,-1.1271e+00,-2.2408e+00,1.9000e+00,-1.1271e+00,-2.2408e+00,1.7650e+00,-1.1119e+00,-2.2459e+00,1.9000e+00,-1.1119e+00,-2.2459e+00,1.7650e+00,-1.0961e+00,-2.2490e+00,1.9000e+00,-1.0961e+00,-2.2490e+00,1.7650e+00,-1.0800e+00,-2.2500e+00,1.9000e+00,-1.0800e+00,-2.2500e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {9.8824e-01,1.5294e-01,-0.0000e+00,9.8824e-01,1.5294e-01,-0.0000e+00,9.6039e-01,2.7865e-01,-0.0000e+00,9.6039e-01,2.7865e-01,-0.0000e+00,9.1663e-01,3.9973e-01,-0.0000e+00,9.1663e-01,3.9973e-01,-0.0000e+00,8.5767e-01,5.1419e-01,-0.0000e+00,8.5767e-01,5.1419e-01,-0.0000e+00,7.8450e-01,6.2013e-01,-0.0000e+00,7.8450e-01,6.2013e-01,-0.0000e+00,6.9832e-01,7.1579e-01,-0.0000e+00,6.9832e-01,7.1579e-01,-0.0000e+00,6.0056e-01,7.9958e-01,-0.0000e+00,6.0056e-01,7.9958e-01,-0.0000e+00,4.9285e-01,8.7011e-01,-0.0000e+00,4.9285e-01,8.7011e-01,-0.0000e+00,3.7697e-01,9.2623e-01,-0.0000e+00,3.7697e-01,9.2623e-01,-0.0000e+00,2.5484e-01,9.6698e-01,-0.0000e+00,2.5484e-01,9.6698e-01,-0.0000e+00,1.2848e-01,9.9171e-01,-0.0000e+00,1.2848e-01,9.9171e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4850"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.7000e-01,-2.2500e+00,1.9000e+00,-1.7000e-01,-2.2500e+00,1.7650e+00,-1.5394e-01,-2.2490e+00,1.9000e+00,-1.5394e-01,-2.2490e+00,1.7650e+00,-1.3814e-01,-2.2459e+00,1.9000e+00,-1.3814e-01,-2.2459e+00,1.7650e+00,-1.2288e-01,-2.2408e+00,1.9000e+00,-1.2288e-01,-2.2408e+00,1.7650e+00,-1.0839e-01,-2.2338e+00,1.9000e+00,-1.0839e-01,-2.2338e+00,1.7650e+00,-9.4930e-02,-2.2249e+00,1.9000e+00,-9.4930e-02,-2.2249e+00,1.7650e+00,-8.2710e-02,-2.2145e+00,1.9000e+00,-8.2710e-02,-2.2145e+00,1.7650e+00,-7.1938e-02,-2.2025e+00,1.9000e+00,-7.1938e-02,-2.2025e+00,1.7650e+00,-6.2791e-02,-2.1893e+00,1.9000e+00,-6.2791e-02,-2.1893e+00,1.7650e+00,-5.5421e-02,-2.1750e+00,1.9000e+00,-5.5421e-02,-2.1750e+00,1.7650e+00,-4.9951e-02,-2.1598e+00,1.9000e+00,-4.9951e-02,-2.1598e+00,1.7650e+00,-4.6471e-02,-2.1441e+00,1.9000e+00,-4.6471e-02,-2.1441e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2848e-01,9.9171e-01,-0.0000e+00,-1.2848e-01,9.9171e-01,-0.0000e+00,-2.5484e-01,9.6698e-01,-0.0000e+00,-2.5484e-01,9.6698e-01,-0.0000e+00,-3.7697e-01,9.2623e-01,-0.0000e+00,-3.7697e-01,9.2623e-01,-0.0000e+00,-4.9285e-01,8.7011e-01,-0.0000e+00,-4.9285e-01,8.7011e-01,-0.0000e+00,-6.0056e-01,7.9958e-01,-0.0000e+00,-6.0056e-01,7.9958e-01,-0.0000e+00,-6.9832e-01,7.1579e-01,-0.0000e+00,-6.9832e-01,7.1579e-01,-0.0000e+00,-7.8450e-01,6.2013e-01,-0.0000e+00,-7.8450e-01,6.2013e-01,-0.0000e+00,-8.5767e-01,5.1419e-01,-0.0000e+00,-8.5767e-01,5.1419e-01,-0.0000e+00,-9.1663e-01,3.9973e-01,-0.0000e+00,-9.1663e-01,3.9973e-01,-0.0000e+00,-9.6039e-01,2.7865e-01,-0.0000e+00,-9.6039e-01,2.7865e-01,-0.0000e+00,-9.8824e-01,1.5294e-01,-0.0000e+00,-9.8824e-01,1.5294e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4862"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.4647e-01,-2.1441e+00,1.9000e+00,5.4647e-01,-2.1441e+00,1.7650e+00,5.4995e-01,-2.1598e+00,1.9000e+00,5.4995e-01,-2.1598e+00,1.7650e+00,5.5542e-01,-2.1750e+00,1.9000e+00,5.5542e-01,-2.1750e+00,1.7650e+00,5.6279e-01,-2.1893e+00,1.9000e+00,5.6279e-01,-2.1893e+00,1.7650e+00,5.7194e-01,-2.2025e+00,1.9000e+00,5.7194e-01,-2.2025e+00,1.7650e+00,5.8271e-01,-2.2145e+00,1.9000e+00,5.8271e-01,-2.2145e+00,1.7650e+00,5.9493e-01,-2.2249e+00,1.9000e+00,5.9493e-01,-2.2249e+00,1.7650e+00,6.0839e-01,-2.2338e+00,1.9000e+00,6.0839e-01,-2.2338e+00,1.7650e+00,6.2288e-01,-2.2408e+00,1.9000e+00,6.2288e-01,-2.2408e+00,1.7650e+00,6.3814e-01,-2.2459e+00,1.9000e+00,6.3814e-01,-2.2459e+00,1.7650e+00,6.5394e-01,-2.2490e+00,1.9000e+00,6.5394e-01,-2.2490e+00,1.7650e+00,6.7000e-01,-2.2500e+00,1.9000e+00,6.7000e-01,-2.2500e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {9.8824e-01,1.5294e-01,-0.0000e+00,9.8824e-01,1.5294e-01,-0.0000e+00,9.6039e-01,2.7865e-01,-0.0000e+00,9.6039e-01,2.7865e-01,-0.0000e+00,9.1663e-01,3.9973e-01,-0.0000e+00,9.1663e-01,3.9973e-01,-0.0000e+00,8.5767e-01,5.1419e-01,-0.0000e+00,8.5767e-01,5.1419e-01,-0.0000e+00,7.8450e-01,6.2013e-01,-0.0000e+00,7.8450e-01,6.2013e-01,-0.0000e+00,6.9832e-01,7.1579e-01,-0.0000e+00,6.9832e-01,7.1579e-01,-0.0000e+00,6.0056e-01,7.9958e-01,-0.0000e+00,6.0056e-01,7.9958e-01,-0.0000e+00,4.9285e-01,8.7011e-01,-0.0000e+00,4.9285e-01,8.7011e-01,-0.0000e+00,3.7697e-01,9.2623e-01,-0.0000e+00,3.7697e-01,9.2623e-01,-0.0000e+00,2.5484e-01,9.6698e-01,-0.0000e+00,2.5484e-01,9.6698e-01,-0.0000e+00,1.2848e-01,9.9171e-01,-0.0000e+00,1.2848e-01,9.9171e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4874"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.1250e+00,-2.2500e+00,1.9000e+00,1.1250e+00,-2.2500e+00,1.7650e+00,1.1413e+00,-2.2489e+00,1.9000e+00,1.1413e+00,-2.2489e+00,1.7650e+00,1.1574e+00,-2.2457e+00,1.9000e+00,1.1574e+00,-2.2457e+00,1.7650e+00,1.1728e+00,-2.2405e+00,1.9000e+00,1.1728e+00,-2.2405e+00,1.7650e+00,1.1875e+00,-2.2333e+00,1.9000e+00,1.1875e+00,-2.2333e+00,1.7650e+00,1.2011e+00,-2.2242e+00,1.9000e+00,1.2011e+00,-2.2242e+00,1.7650e+00,1.2134e+00,-2.2134e+00,1.9000e+00,1.2134e+00,-2.2134e+00,1.7650e+00,1.2242e+00,-2.2011e+00,1.9000e+00,1.2242e+00,-2.2011e+00,1.7650e+00,1.2333e+00,-2.1875e+00,1.9000e+00,1.2333e+00,-2.1875e+00,1.7650e+00,1.2405e+00,-2.1728e+00,1.9000e+00,1.2405e+00,-2.1728e+00,1.7650e+00,1.2457e+00,-2.1574e+00,1.9000e+00,1.2457e+00,-2.1574e+00,1.7650e+00,1.2489e+00,-2.1413e+00,1.9000e+00,1.2489e+00,-2.1413e+00,1.7650e+00,1.2500e+00,-2.1250e+00,1.9000e+00,1.2500e+00,-2.1250e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4886"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.2500e+00,-1.4200e+00,1.9000e+00,1.2500e+00,-1.4200e+00,1.7650e+00,1.2490e+00,-1.4039e+00,1.9000e+00,1.2490e+00,-1.4039e+00,1.7650e+00,1.2459e+00,-1.3881e+00,1.9000e+00,1.2459e+00,-1.3881e+00,1.7650e+00,1.2408e+00,-1.3729e+00,1.9000e+00,1.2408e+00,-1.3729e+00,1.7650e+00,1.2338e+00,-1.3584e+00,1.9000e+00,1.2338e+00,-1.3584e+00,1.7650e+00,1.2249e+00,-1.3449e+00,1.9000e+00,1.2249e+00,-1.3449e+00,1.7650e+00,1.2145e+00,-1.3327e+00,1.9000e+00,1.2145e+00,-1.3327e+00,1.7650e+00,1.2025e+00,-1.3219e+00,1.9000e+00,1.2025e+00,-1.3219e+00,1.7650e+00,1.1893e+00,-1.3128e+00,1.9000e+00,1.1893e+00,-1.3128e+00,1.7650e+00,1.1750e+00,-1.3054e+00,1.9000e+00,1.1750e+00,-1.3054e+00,1.7650e+00,1.1598e+00,-1.3000e+00,1.9000e+00,1.1598e+00,-1.3000e+00,1.7650e+00,1.1441e+00,-1.2965e+00,1.9000e+00,1.1441e+00,-1.2965e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-9.9171e-01,-1.2848e-01,-0.0000e+00,-9.9171e-01,-1.2848e-01,-0.0000e+00,-9.6698e-01,-2.5484e-01,-0.0000e+00,-9.6698e-01,-2.5484e-01,-0.0000e+00,-9.2623e-01,-3.7697e-01,-0.0000e+00,-9.2623e-01,-3.7697e-01,-0.0000e+00,-8.7011e-01,-4.9285e-01,-0.0000e+00,-8.7011e-01,-4.9285e-01,-0.0000e+00,-7.9958e-01,-6.0056e-01,-0.0000e+00,-7.9958e-01,-6.0056e-01,-0.0000e+00,-7.1579e-01,-6.9832e-01,-0.0000e+00,-7.1579e-01,-6.9832e-01,-0.0000e+00,-6.2013e-01,-7.8450e-01,-0.0000e+00,-6.2013e-01,-7.8450e-01,-0.0000e+00,-5.1419e-01,-8.5767e-01,-0.0000e+00,-5.1419e-01,-8.5767e-01,-0.0000e+00,-3.9973e-01,-9.1663e-01,-0.0000e+00,-3.9973e-01,-9.1663e-01,-0.0000e+00,-2.7865e-01,-9.6039e-01,-0.0000e+00,-2.7865e-01,-9.6039e-01,-0.0000e+00,-1.5294e-01,-9.8824e-01,-0.0000e+00,-1.5294e-01,-9.8824e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4898"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.1441e+00,-7.0353e-01,1.9000e+00,1.1441e+00,-7.0353e-01,1.7650e+00,1.1598e+00,-7.0005e-01,1.9000e+00,1.1598e+00,-7.0005e-01,1.7650e+00,1.1750e+00,-6.9458e-01,1.9000e+00,1.1750e+00,-6.9458e-01,1.7650e+00,1.1893e+00,-6.8721e-01,1.9000e+00,1.1893e+00,-6.8721e-01,1.7650e+00,1.2025e+00,-6.7806e-01,1.9000e+00,1.2025e+00,-6.7806e-01,1.7650e+00,1.2145e+00,-6.6729e-01,1.9000e+00,1.2145e+00,-6.6729e-01,1.7650e+00,1.2249e+00,-6.5507e-01,1.9000e+00,1.2249e+00,-6.5507e-01,1.7650e+00,1.2338e+00,-6.4161e-01,1.9000e+00,1.2338e+00,-6.4161e-01,1.7650e+00,1.2408e+00,-6.2712e-01,1.9000e+00,1.2408e+00,-6.2712e-01,1.7650e+00,1.2459e+00,-6.1186e-01,1.9000e+00,1.2459e+00,-6.1186e-01,1.7650e+00,1.2490e+00,-5.9606e-01,1.9000e+00,1.2490e+00,-5.9606e-01,1.7650e+00,1.2500e+00,-5.8000e-01,1.9000e+00,1.2500e+00,-5.8000e-01,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.5294e-01,9.8824e-01,-0.0000e+00,-1.5294e-01,9.8824e-01,-0.0000e+00,-2.7865e-01,9.6039e-01,-0.0000e+00,-2.7865e-01,9.6039e-01,-0.0000e+00,-3.9973e-01,9.1663e-01,-0.0000e+00,-3.9973e-01,9.1663e-01,-0.0000e+00,-5.1419e-01,8.5767e-01,-0.0000e+00,-5.1419e-01,8.5767e-01,-0.0000e+00,-6.2013e-01,7.8450e-01,-0.0000e+00,-6.2013e-01,7.8450e-01,-0.0000e+00,-7.1579e-01,6.9832e-01,-0.0000e+00,-7.1579e-01,6.9832e-01,-0.0000e+00,-7.9958e-01,6.0056e-01,-0.0000e+00,-7.9958e-01,6.0056e-01,-0.0000e+00,-8.7011e-01,4.9285e-01,-0.0000e+00,-8.7011e-01,4.9285e-01,-0.0000e+00,-9.2623e-01,3.7697e-01,-0.0000e+00,-9.2623e-01,3.7697e-01,-0.0000e+00,-9.6698e-01,2.5484e-01,-0.0000e+00,-9.6698e-01,2.5484e-01,-0.0000e+00,-9.9171e-01,1.2848e-01,-0.0000e+00,-9.9171e-01,1.2848e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4910"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.2500e+00,5.8000e-01,1.9000e+00,1.2500e+00,5.8000e-01,1.7650e+00,1.2490e+00,5.9606e-01,1.9000e+00,1.2490e+00,5.9606e-01,1.7650e+00,1.2459e+00,6.1186e-01,1.9000e+00,1.2459e+00,6.1186e-01,1.7650e+00,1.2408e+00,6.2712e-01,1.9000e+00,1.2408e+00,6.2712e-01,1.7650e+00,1.2338e+00,6.4161e-01,1.9000e+00,1.2338e+00,6.4161e-01,1.7650e+00,1.2249e+00,6.5507e-01,1.9000e+00,1.2249e+00,6.5507e-01,1.7650e+00,1.2145e+00,6.6729e-01,1.9000e+00,1.2145e+00,6.6729e-01,1.7650e+00,1.2025e+00,6.7806e-01,1.9000e+00,1.2025e+00,6.7806e-01,1.7650e+00,1.1893e+00,6.8721e-01,1.9000e+00,1.1893e+00,6.8721e-01,1.7650e+00,1.1750e+00,6.9458e-01,1.9000e+00,1.1750e+00,6.9458e-01,1.7650e+00,1.1598e+00,7.0005e-01,1.9000e+00,1.1598e+00,7.0005e-01,1.7650e+00,1.1441e+00,7.0353e-01,1.9000e+00,1.1441e+00,7.0353e-01,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-9.9171e-01,-1.2848e-01,-0.0000e+00,-9.9171e-01,-1.2848e-01,-0.0000e+00,-9.6698e-01,-2.5484e-01,-0.0000e+00,-9.6698e-01,-2.5484e-01,-0.0000e+00,-9.2623e-01,-3.7697e-01,-0.0000e+00,-9.2623e-01,-3.7697e-01,-0.0000e+00,-8.7011e-01,-4.9285e-01,-0.0000e+00,-8.7011e-01,-4.9285e-01,-0.0000e+00,-7.9958e-01,-6.0056e-01,-0.0000e+00,-7.9958e-01,-6.0056e-01,-0.0000e+00,-7.1579e-01,-6.9832e-01,-0.0000e+00,-7.1579e-01,-6.9832e-01,-0.0000e+00,-6.2013e-01,-7.8450e-01,-0.0000e+00,-6.2013e-01,-7.8450e-01,-0.0000e+00,-5.1419e-01,-8.5767e-01,-0.0000e+00,-5.1419e-01,-8.5767e-01,-0.0000e+00,-3.9973e-01,-9.1663e-01,-0.0000e+00,-3.9973e-01,-9.1663e-01,-0.0000e+00,-2.7865e-01,-9.6039e-01,-0.0000e+00,-2.7865e-01,-9.6039e-01,-0.0000e+00,-1.5294e-01,-9.8824e-01,-0.0000e+00,-1.5294e-01,-9.8824e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4922"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.1441e+00,1.2965e+00,1.9000e+00,1.1441e+00,1.2965e+00,1.7650e+00,1.1598e+00,1.3000e+00,1.9000e+00,1.1598e+00,1.3000e+00,1.7650e+00,1.1750e+00,1.3054e+00,1.9000e+00,1.1750e+00,1.3054e+00,1.7650e+00,1.1893e+00,1.3128e+00,1.9000e+00,1.1893e+00,1.3128e+00,1.7650e+00,1.2025e+00,1.3219e+00,1.9000e+00,1.2025e+00,1.3219e+00,1.7650e+00,1.2145e+00,1.3327e+00,1.9000e+00,1.2145e+00,1.3327e+00,1.7650e+00,1.2249e+00,1.3449e+00,1.9000e+00,1.2249e+00,1.3449e+00,1.7650e+00,1.2338e+00,1.3584e+00,1.9000e+00,1.2338e+00,1.3584e+00,1.7650e+00,1.2408e+00,1.3729e+00,1.9000e+00,1.2408e+00,1.3729e+00,1.7650e+00,1.2459e+00,1.3881e+00,1.9000e+00,1.2459e+00,1.3881e+00,1.7650e+00,1.2490e+00,1.4039e+00,1.9000e+00,1.2490e+00,1.4039e+00,1.7650e+00,1.2500e+00,1.4200e+00,1.9000e+00,1.2500e+00,1.4200e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.5294e-01,9.8824e-01,-0.0000e+00,-1.5294e-01,9.8824e-01,-0.0000e+00,-2.7865e-01,9.6039e-01,-0.0000e+00,-2.7865e-01,9.6039e-01,-0.0000e+00,-3.9973e-01,9.1663e-01,-0.0000e+00,-3.9973e-01,9.1663e-01,-0.0000e+00,-5.1419e-01,8.5767e-01,-0.0000e+00,-5.1419e-01,8.5767e-01,-0.0000e+00,-6.2013e-01,7.8450e-01,-0.0000e+00,-6.2013e-01,7.8450e-01,-0.0000e+00,-7.1579e-01,6.9832e-01,-0.0000e+00,-7.1579e-01,6.9832e-01,-0.0000e+00,-7.9958e-01,6.0056e-01,-0.0000e+00,-7.9958e-01,6.0056e-01,-0.0000e+00,-8.7011e-01,4.9285e-01,-0.0000e+00,-8.7011e-01,4.9285e-01,-0.0000e+00,-9.2623e-01,3.7697e-01,-0.0000e+00,-9.2623e-01,3.7697e-01,-0.0000e+00,-9.6698e-01,2.5484e-01,-0.0000e+00,-9.6698e-01,2.5484e-01,-0.0000e+00,-9.9171e-01,1.2848e-01,-0.0000e+00,-9.9171e-01,1.2848e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4934"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.2500e+00,2.1250e+00,1.9000e+00,1.2500e+00,2.1250e+00,1.7650e+00,1.2489e+00,2.1413e+00,1.9000e+00,1.2489e+00,2.1413e+00,1.7650e+00,1.2457e+00,2.1574e+00,1.9000e+00,1.2457e+00,2.1574e+00,1.7650e+00,1.2405e+00,2.1728e+00,1.9000e+00,1.2405e+00,2.1728e+00,1.7650e+00,1.2333e+00,2.1875e+00,1.9000e+00,1.2333e+00,2.1875e+00,1.7650e+00,1.2242e+00,2.2011e+00,1.9000e+00,1.2242e+00,2.2011e+00,1.7650e+00,1.2134e+00,2.2134e+00,1.9000e+00,1.2134e+00,2.2134e+00,1.7650e+00,1.2011e+00,2.2242e+00,1.9000e+00,1.2011e+00,2.2242e+00,1.7650e+00,1.1875e+00,2.2333e+00,1.9000e+00,1.1875e+00,2.2333e+00,1.7650e+00,1.1728e+00,2.2405e+00,1.9000e+00,1.1728e+00,2.2405e+00,1.7650e+00,1.1574e+00,2.2457e+00,1.9000e+00,1.1574e+00,2.2457e+00,1.7650e+00,1.1413e+00,2.2489e+00,1.9000e+00,1.1413e+00,2.2489e+00,1.7650e+00,1.1250e+00,2.2500e+00,1.9000e+00,1.1250e+00,2.2500e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4946"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {6.7000e-01,2.2500e+00,1.9000e+00,6.7000e-01,2.2500e+00,1.7650e+00,6.5394e-01,2.2490e+00,1.9000e+00,6.5394e-01,2.2490e+00,1.7650e+00,6.3814e-01,2.2459e+00,1.9000e+00,6.3814e-01,2.2459e+00,1.7650e+00,6.2288e-01,2.2408e+00,1.9000e+00,6.2288e-01,2.2408e+00,1.7650e+00,6.0839e-01,2.2338e+00,1.9000e+00,6.0839e-01,2.2338e+00,1.7650e+00,5.9493e-01,2.2249e+00,1.9000e+00,5.9493e-01,2.2249e+00,1.7650e+00,5.8271e-01,2.2145e+00,1.9000e+00,5.8271e-01,2.2145e+00,1.7650e+00,5.7194e-01,2.2025e+00,1.9000e+00,5.7194e-01,2.2025e+00,1.7650e+00,5.6279e-01,2.1893e+00,1.9000e+00,5.6279e-01,2.1893e+00,1.7650e+00,5.5542e-01,2.1750e+00,1.9000e+00,5.5542e-01,2.1750e+00,1.7650e+00,5.4995e-01,2.1598e+00,1.9000e+00,5.4995e-01,2.1598e+00,1.7650e+00,5.4647e-01,2.1441e+00,1.9000e+00,5.4647e-01,2.1441e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.2848e-01,-9.9171e-01,-0.0000e+00,1.2848e-01,-9.9171e-01,-0.0000e+00,2.5484e-01,-9.6698e-01,-0.0000e+00,2.5484e-01,-9.6698e-01,-0.0000e+00,3.7697e-01,-9.2623e-01,-0.0000e+00,3.7697e-01,-9.2623e-01,-0.0000e+00,4.9285e-01,-8.7011e-01,-0.0000e+00,4.9285e-01,-8.7011e-01,-0.0000e+00,6.0056e-01,-7.9958e-01,-0.0000e+00,6.0056e-01,-7.9958e-01,-0.0000e+00,6.9832e-01,-7.1579e-01,-0.0000e+00,6.9832e-01,-7.1579e-01,-0.0000e+00,7.8450e-01,-6.2013e-01,-0.0000e+00,7.8450e-01,-6.2013e-01,-0.0000e+00,8.5767e-01,-5.1419e-01,-0.0000e+00,8.5767e-01,-5.1419e-01,-0.0000e+00,9.1663e-01,-3.9973e-01,-0.0000e+00,9.1663e-01,-3.9973e-01,-0.0000e+00,9.6039e-01,-2.7865e-01,-0.0000e+00,9.6039e-01,-2.7865e-01,-0.0000e+00,9.8824e-01,-1.5294e-01,-0.0000e+00,9.8824e-01,-1.5294e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4958"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.6471e-02,2.1441e+00,1.9000e+00,-4.6471e-02,2.1441e+00,1.7650e+00,-4.9951e-02,2.1598e+00,1.9000e+00,-4.9951e-02,2.1598e+00,1.7650e+00,-5.5421e-02,2.1750e+00,1.9000e+00,-5.5421e-02,2.1750e+00,1.7650e+00,-6.2791e-02,2.1893e+00,1.9000e+00,-6.2791e-02,2.1893e+00,1.7650e+00,-7.1938e-02,2.2025e+00,1.9000e+00,-7.1938e-02,2.2025e+00,1.7650e+00,-8.2710e-02,2.2145e+00,1.9000e+00,-8.2710e-02,2.2145e+00,1.7650e+00,-9.4930e-02,2.2249e+00,1.9000e+00,-9.4930e-02,2.2249e+00,1.7650e+00,-1.0839e-01,2.2338e+00,1.9000e+00,-1.0839e-01,2.2338e+00,1.7650e+00,-1.2288e-01,2.2408e+00,1.9000e+00,-1.2288e-01,2.2408e+00,1.7650e+00,-1.3814e-01,2.2459e+00,1.9000e+00,-1.3814e-01,2.2459e+00,1.7650e+00,-1.5394e-01,2.2490e+00,1.9000e+00,-1.5394e-01,2.2490e+00,1.7650e+00,-1.7000e-01,2.2500e+00,1.9000e+00,-1.7000e-01,2.2500e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-9.8824e-01,-1.5294e-01,-0.0000e+00,-9.8824e-01,-1.5294e-01,-0.0000e+00,-9.6039e-01,-2.7865e-01,-0.0000e+00,-9.6039e-01,-2.7865e-01,-0.0000e+00,-9.1663e-01,-3.9973e-01,-0.0000e+00,-9.1663e-01,-3.9973e-01,-0.0000e+00,-8.5767e-01,-5.1419e-01,-0.0000e+00,-8.5767e-01,-5.1419e-01,-0.0000e+00,-7.8450e-01,-6.2013e-01,-0.0000e+00,-7.8450e-01,-6.2013e-01,-0.0000e+00,-6.9832e-01,-7.1579e-01,-0.0000e+00,-6.9832e-01,-7.1579e-01,-0.0000e+00,-6.0056e-01,-7.9958e-01,-0.0000e+00,-6.0056e-01,-7.9958e-01,-0.0000e+00,-4.9285e-01,-8.7011e-01,-0.0000e+00,-4.9285e-01,-8.7011e-01,-0.0000e+00,-3.7697e-01,-9.2623e-01,-0.0000e+00,-3.7697e-01,-9.2623e-01,-0.0000e+00,-2.5484e-01,-9.6698e-01,-0.0000e+00,-2.5484e-01,-9.6698e-01,-0.0000e+00,-1.2848e-01,-9.9171e-01,-0.0000e+00,-1.2848e-01,-9.9171e-01,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4970"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.0800e+00,2.2500e+00,1.9000e+00,-1.0800e+00,2.2500e+00,1.7650e+00,-1.0961e+00,2.2490e+00,1.9000e+00,-1.0961e+00,2.2490e+00,1.7650e+00,-1.1119e+00,2.2459e+00,1.9000e+00,-1.1119e+00,2.2459e+00,1.7650e+00,-1.1271e+00,2.2408e+00,1.9000e+00,-1.1271e+00,2.2408e+00,1.7650e+00,-1.1416e+00,2.2338e+00,1.9000e+00,-1.1416e+00,2.2338e+00,1.7650e+00,-1.1551e+00,2.2249e+00,1.9000e+00,-1.1551e+00,2.2249e+00,1.7650e+00,-1.1673e+00,2.2145e+00,1.9000e+00,-1.1673e+00,2.2145e+00,1.7650e+00,-1.1781e+00,2.2025e+00,1.9000e+00,-1.1781e+00,2.2025e+00,1.7650e+00,-1.1872e+00,2.1893e+00,1.9000e+00,-1.1872e+00,2.1893e+00,1.7650e+00,-1.1946e+00,2.1750e+00,1.9000e+00,-1.1946e+00,2.1750e+00,1.7650e+00,-1.2000e+00,2.1598e+00,1.9000e+00,-1.2000e+00,2.1598e+00,1.7650e+00,-1.2035e+00,2.1441e+00,1.9000e+00,-1.2035e+00,2.1441e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.2848e-01,-9.9171e-01,-0.0000e+00,1.2848e-01,-9.9171e-01,-0.0000e+00,2.5484e-01,-9.6698e-01,-0.0000e+00,2.5484e-01,-9.6698e-01,-0.0000e+00,3.7697e-01,-9.2623e-01,-0.0000e+00,3.7697e-01,-9.2623e-01,-0.0000e+00,4.9285e-01,-8.7011e-01,-0.0000e+00,4.9285e-01,-8.7011e-01,-0.0000e+00,6.0056e-01,-7.9958e-01,-0.0000e+00,6.0056e-01,-7.9958e-01,-0.0000e+00,6.9832e-01,-7.1579e-01,-0.0000e+00,6.9832e-01,-7.1579e-01,-0.0000e+00,7.8450e-01,-6.2013e-01,-0.0000e+00,7.8450e-01,-6.2013e-01,-0.0000e+00,8.5767e-01,-5.1419e-01,-0.0000e+00,8.5767e-01,-5.1419e-01,-0.0000e+00,9.1663e-01,-3.9973e-01,-0.0000e+00,9.1663e-01,-3.9973e-01,-0.0000e+00,9.6039e-01,-2.7865e-01,-0.0000e+00,9.6039e-01,-2.7865e-01,-0.0000e+00,9.8824e-01,-1.5294e-01,-0.0000e+00,9.8824e-01,-1.5294e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4982"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.7965e+00,2.1441e+00,1.9000e+00,-1.7965e+00,2.1441e+00,1.7650e+00,-1.8000e+00,2.1598e+00,1.9000e+00,-1.8000e+00,2.1598e+00,1.7650e+00,-1.8054e+00,2.1750e+00,1.9000e+00,-1.8054e+00,2.1750e+00,1.7650e+00,-1.8128e+00,2.1893e+00,1.9000e+00,-1.8128e+00,2.1893e+00,1.7650e+00,-1.8219e+00,2.2025e+00,1.9000e+00,-1.8219e+00,2.2025e+00,1.7650e+00,-1.8327e+00,2.2145e+00,1.9000e+00,-1.8327e+00,2.2145e+00,1.7650e+00,-1.8449e+00,2.2249e+00,1.9000e+00,-1.8449e+00,2.2249e+00,1.7650e+00,-1.8584e+00,2.2338e+00,1.9000e+00,-1.8584e+00,2.2338e+00,1.7650e+00,-1.8729e+00,2.2408e+00,1.9000e+00,-1.8729e+00,2.2408e+00,1.7650e+00,-1.8881e+00,2.2459e+00,1.9000e+00,-1.8881e+00,2.2459e+00,1.7650e+00,-1.9039e+00,2.2490e+00,1.9000e+00,-1.9039e+00,2.2490e+00,1.7650e+00,-1.9200e+00,2.2500e+00,1.9000e+00,-1.9200e+00,2.2500e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-9.8824e-01,-1.5294e-01,-0.0000e+00,-9.8824e-01,-1.5294e-01,-0.0000e+00,-9.6039e-01,-2.7865e-01,-0.0000e+00,-9.6039e-01,-2.7865e-01,-0.0000e+00,-9.1663e-01,-3.9973e-01,-0.0000e+00,-9.1663e-01,-3.9973e-01,-0.0000e+00,-8.5767e-01,-5.1419e-01,-0.0000e+00,-8.5767e-01,-5.1419e-01,-0.0000e+00,-7.8450e-01,-6.2013e-01,-0.0000e+00,-7.8450e-01,-6.2013e-01,-0.0000e+00,-6.9832e-01,-7.1579e-01,-0.0000e+00,-6.9832e-01,-7.1579e-01,-0.0000e+00,-6.0056e-01,-7.9958e-01,-0.0000e+00,-6.0056e-01,-7.9958e-01,-0.0000e+00,-4.9285e-01,-8.7011e-01,-0.0000e+00,-4.9285e-01,-8.7011e-01,-0.0000e+00,-3.7697e-01,-9.2623e-01,-0.0000e+00,-3.7697e-01,-9.2623e-01,-0.0000e+00,-2.5484e-01,-9.6698e-01,-0.0000e+00,-2.5484e-01,-9.6698e-01,-0.0000e+00,-1.2848e-01,-9.9171e-01,-0.0000e+00,-1.2848e-01,-9.9171e-01,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#4994"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-2.8300e+00,2.2500e+00,1.9000e+00,-2.8300e+00,2.2500e+00,1.7650e+00,-2.8461e+00,2.2490e+00,1.9000e+00,-2.8461e+00,2.2490e+00,1.7650e+00,-2.8619e+00,2.2459e+00,1.9000e+00,-2.8619e+00,2.2459e+00,1.7650e+00,-2.8771e+00,2.2408e+00,1.9000e+00,-2.8771e+00,2.2408e+00,1.7650e+00,-2.8916e+00,2.2338e+00,1.9000e+00,-2.8916e+00,2.2338e+00,1.7650e+00,-2.9051e+00,2.2249e+00,1.9000e+00,-2.9051e+00,2.2249e+00,1.7650e+00,-2.9173e+00,2.2145e+00,1.9000e+00,-2.9173e+00,2.2145e+00,1.7650e+00,-2.9281e+00,2.2025e+00,1.9000e+00,-2.9281e+00,2.2025e+00,1.7650e+00,-2.9372e+00,2.1893e+00,1.9000e+00,-2.9372e+00,2.1893e+00,1.7650e+00,-2.9446e+00,2.1750e+00,1.9000e+00,-2.9446e+00,2.1750e+00,1.7650e+00,-2.9500e+00,2.1598e+00,1.9000e+00,-2.9500e+00,2.1598e+00,1.7650e+00,-2.9535e+00,2.1441e+00,1.9000e+00,-2.9535e+00,2.1441e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.2848e-01,-9.9171e-01,-0.0000e+00,1.2848e-01,-9.9171e-01,-0.0000e+00,2.5484e-01,-9.6698e-01,-0.0000e+00,2.5484e-01,-9.6698e-01,-0.0000e+00,3.7697e-01,-9.2623e-01,-0.0000e+00,3.7697e-01,-9.2623e-01,-0.0000e+00,4.9285e-01,-8.7011e-01,-0.0000e+00,4.9285e-01,-8.7011e-01,-0.0000e+00,6.0056e-01,-7.9958e-01,-0.0000e+00,6.0056e-01,-7.9958e-01,-0.0000e+00,6.9832e-01,-7.1579e-01,-0.0000e+00,6.9832e-01,-7.1579e-01,-0.0000e+00,7.8450e-01,-6.2013e-01,-0.0000e+00,7.8450e-01,-6.2013e-01,-0.0000e+00,8.5767e-01,-5.1419e-01,-0.0000e+00,8.5767e-01,-5.1419e-01,-0.0000e+00,9.1663e-01,-3.9973e-01,-0.0000e+00,9.1663e-01,-3.9973e-01,-0.0000e+00,9.6039e-01,-2.7865e-01,-0.0000e+00,9.6039e-01,-2.7865e-01,-0.0000e+00,9.8824e-01,-1.5294e-01,-0.0000e+00,9.8824e-01,-1.5294e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5006"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-3.5465e+00,2.1441e+00,1.9000e+00,-3.5465e+00,2.1441e+00,1.7650e+00,-3.5500e+00,2.1598e+00,1.9000e+00,-3.5500e+00,2.1598e+00,1.7650e+00,-3.5554e+00,2.1750e+00,1.9000e+00,-3.5554e+00,2.1750e+00,1.7650e+00,-3.5628e+00,2.1893e+00,1.9000e+00,-3.5628e+00,2.1893e+00,1.7650e+00,-3.5719e+00,2.2025e+00,1.9000e+00,-3.5719e+00,2.2025e+00,1.7650e+00,-3.5827e+00,2.2145e+00,1.9000e+00,-3.5827e+00,2.2145e+00,1.7650e+00,-3.5949e+00,2.2249e+00,1.9000e+00,-3.5949e+00,2.2249e+00,1.7650e+00,-3.6084e+00,2.2338e+00,1.9000e+00,-3.6084e+00,2.2338e+00,1.7650e+00,-3.6229e+00,2.2408e+00,1.9000e+00,-3.6229e+00,2.2408e+00,1.7650e+00,-3.6381e+00,2.2459e+00,1.9000e+00,-3.6381e+00,2.2459e+00,1.7650e+00,-3.6539e+00,2.2490e+00,1.9000e+00,-3.6539e+00,2.2490e+00,1.7650e+00,-3.6700e+00,2.2500e+00,1.9000e+00,-3.6700e+00,2.2500e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-9.8824e-01,-1.5294e-01,-0.0000e+00,-9.8824e-01,-1.5294e-01,-0.0000e+00,-9.6039e-01,-2.7865e-01,-0.0000e+00,-9.6039e-01,-2.7865e-01,-0.0000e+00,-9.1663e-01,-3.9973e-01,-0.0000e+00,-9.1663e-01,-3.9973e-01,-0.0000e+00,-8.5767e-01,-5.1419e-01,-0.0000e+00,-8.5767e-01,-5.1419e-01,-0.0000e+00,-7.8450e-01,-6.2013e-01,-0.0000e+00,-7.8450e-01,-6.2013e-01,-0.0000e+00,-6.9832e-01,-7.1579e-01,-0.0000e+00,-6.9832e-01,-7.1579e-01,-0.0000e+00,-6.0056e-01,-7.9958e-01,-0.0000e+00,-6.0056e-01,-7.9958e-01,-0.0000e+00,-4.9285e-01,-8.7011e-01,-0.0000e+00,-4.9285e-01,-8.7011e-01,-0.0000e+00,-3.7697e-01,-9.2623e-01,-0.0000e+00,-3.7697e-01,-9.2623e-01,-0.0000e+00,-2.5484e-01,-9.6698e-01,-0.0000e+00,-2.5484e-01,-9.6698e-01,-0.0000e+00,-1.2848e-01,-9.9171e-01,-0.0000e+00,-1.2848e-01,-9.9171e-01,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5018"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.1250e+00,2.2500e+00,1.9000e+00,-4.1250e+00,2.2500e+00,1.7650e+00,-4.1413e+00,2.2489e+00,1.9000e+00,-4.1413e+00,2.2489e+00,1.7650e+00,-4.1574e+00,2.2457e+00,1.9000e+00,-4.1574e+00,2.2457e+00,1.7650e+00,-4.1728e+00,2.2405e+00,1.9000e+00,-4.1728e+00,2.2405e+00,1.7650e+00,-4.1875e+00,2.2333e+00,1.9000e+00,-4.1875e+00,2.2333e+00,1.7650e+00,-4.2011e+00,2.2242e+00,1.9000e+00,-4.2011e+00,2.2242e+00,1.7650e+00,-4.2134e+00,2.2134e+00,1.9000e+00,-4.2134e+00,2.2134e+00,1.7650e+00,-4.2242e+00,2.2011e+00,1.9000e+00,-4.2242e+00,2.2011e+00,1.7650e+00,-4.2333e+00,2.1875e+00,1.9000e+00,-4.2333e+00,2.1875e+00,1.7650e+00,-4.2405e+00,2.1728e+00,1.9000e+00,-4.2405e+00,2.1728e+00,1.7650e+00,-4.2457e+00,2.1574e+00,1.9000e+00,-4.2457e+00,2.1574e+00,1.7650e+00,-4.2489e+00,2.1413e+00,1.9000e+00,-4.2489e+00,2.1413e+00,1.7650e+00,-4.2500e+00,2.1250e+00,1.9000e+00,-4.2500e+00,2.1250e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5036"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7750e+00,-3.1250e+00,1.9000e+00,-4.7750e+00,-3.1250e+00,1.8800e+00,-4.7587e+00,-3.1239e+00,1.9000e+00,-4.7587e+00,-3.1239e+00,1.8800e+00,-4.7426e+00,-3.1207e+00,1.9000e+00,-4.7426e+00,-3.1207e+00,1.8800e+00,-4.7272e+00,-3.1155e+00,1.9000e+00,-4.7272e+00,-3.1155e+00,1.8800e+00,-4.7125e+00,-3.1083e+00,1.9000e+00,-4.7125e+00,-3.1083e+00,1.8800e+00,-4.6989e+00,-3.0992e+00,1.9000e+00,-4.6989e+00,-3.0992e+00,1.8800e+00,-4.6866e+00,-3.0884e+00,1.9000e+00,-4.6866e+00,-3.0884e+00,1.8800e+00,-4.6758e+00,-3.0761e+00,1.9000e+00,-4.6758e+00,-3.0761e+00,1.8800e+00,-4.6667e+00,-3.0625e+00,1.9000e+00,-4.6667e+00,-3.0625e+00,1.8800e+00,-4.6595e+00,-3.0478e+00,1.9000e+00,-4.6595e+00,-3.0478e+00,1.8800e+00,-4.6543e+00,-3.0324e+00,1.9000e+00,-4.6543e+00,-3.0324e+00,1.8800e+00,-4.6511e+00,-3.0163e+00,1.9000e+00,-4.6511e+00,-3.0163e+00,1.8800e+00,-4.6500e+00,-3.0000e+00,1.9000e+00,-4.6500e+00,-3.0000e+00,1.8800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-1.0000e+00,1.8370e-16,-0.0000e+00,-1.0000e+00,1.8370e-16,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5054"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.1500e+00,-3.0000e+00,1.9000e+00,-5.1500e+00,-3.0000e+00,1.8800e+00,-5.1489e+00,-3.0163e+00,1.9000e+00,-5.1489e+00,-3.0163e+00,1.8800e+00,-5.1457e+00,-3.0324e+00,1.9000e+00,-5.1457e+00,-3.0324e+00,1.8800e+00,-5.1405e+00,-3.0478e+00,1.9000e+00,-5.1405e+00,-3.0478e+00,1.8800e+00,-5.1333e+00,-3.0625e+00,1.9000e+00,-5.1333e+00,-3.0625e+00,1.8800e+00,-5.1242e+00,-3.0761e+00,1.9000e+00,-5.1242e+00,-3.0761e+00,1.8800e+00,-5.1134e+00,-3.0884e+00,1.9000e+00,-5.1134e+00,-3.0884e+00,1.8800e+00,-5.1011e+00,-3.0992e+00,1.9000e+00,-5.1011e+00,-3.0992e+00,1.8800e+00,-5.0875e+00,-3.1083e+00,1.9000e+00,-5.0875e+00,-3.1083e+00,1.8800e+00,-5.0728e+00,-3.1155e+00,1.9000e+00,-5.0728e+00,-3.1155e+00,1.8800e+00,-5.0574e+00,-3.1207e+00,1.9000e+00,-5.0574e+00,-3.1207e+00,1.8800e+00,-5.0413e+00,-3.1239e+00,1.9000e+00,-5.0413e+00,-3.1239e+00,1.8800e+00,-5.0250e+00,-3.1250e+00,1.9000e+00,-5.0250e+00,-3.1250e+00,1.8800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5072"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.6500e+00,3.0000e+00,1.9000e+00,-4.6500e+00,3.0000e+00,1.8800e+00,-4.6511e+00,3.0163e+00,1.9000e+00,-4.6511e+00,3.0163e+00,1.8800e+00,-4.6543e+00,3.0324e+00,1.9000e+00,-4.6543e+00,3.0324e+00,1.8800e+00,-4.6595e+00,3.0478e+00,1.9000e+00,-4.6595e+00,3.0478e+00,1.8800e+00,-4.6667e+00,3.0625e+00,1.9000e+00,-4.6667e+00,3.0625e+00,1.8800e+00,-4.6758e+00,3.0761e+00,1.9000e+00,-4.6758e+00,3.0761e+00,1.8800e+00,-4.6866e+00,3.0884e+00,1.9000e+00,-4.6866e+00,3.0884e+00,1.8800e+00,-4.6989e+00,3.0992e+00,1.9000e+00,-4.6989e+00,3.0992e+00,1.8800e+00,-4.7125e+00,3.1083e+00,1.9000e+00,-4.7125e+00,3.1083e+00,1.8800e+00,-4.7272e+00,3.1155e+00,1.9000e+00,-4.7272e+00,3.1155e+00,1.8800e+00,-4.7426e+00,3.1207e+00,1.9000e+00,-4.7426e+00,3.1207e+00,1.8800e+00,-4.7587e+00,3.1239e+00,1.9000e+00,-4.7587e+00,3.1239e+00,1.8800e+00,-4.7750e+00,3.1250e+00,1.9000e+00,-4.7750e+00,3.1250e+00,1.8800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5090"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.0250e+00,3.1250e+00,1.9000e+00,-5.0250e+00,3.1250e+00,1.8800e+00,-5.0413e+00,3.1239e+00,1.9000e+00,-5.0413e+00,3.1239e+00,1.8800e+00,-5.0574e+00,3.1207e+00,1.9000e+00,-5.0574e+00,3.1207e+00,1.8800e+00,-5.0728e+00,3.1155e+00,1.9000e+00,-5.0728e+00,3.1155e+00,1.8800e+00,-5.0875e+00,3.1083e+00,1.9000e+00,-5.0875e+00,3.1083e+00,1.8800e+00,-5.1011e+00,3.0992e+00,1.9000e+00,-5.1011e+00,3.0992e+00,1.8800e+00,-5.1134e+00,3.0884e+00,1.9000e+00,-5.1134e+00,3.0884e+00,1.8800e+00,-5.1242e+00,3.0761e+00,1.9000e+00,-5.1242e+00,3.0761e+00,1.8800e+00,-5.1333e+00,3.0625e+00,1.9000e+00,-5.1333e+00,3.0625e+00,1.8800e+00,-5.1405e+00,3.0478e+00,1.9000e+00,-5.1405e+00,3.0478e+00,1.8800e+00,-5.1457e+00,3.0324e+00,1.9000e+00,-5.1457e+00,3.0324e+00,1.8800e+00,-5.1489e+00,3.0163e+00,1.9000e+00,-5.1489e+00,3.0163e+00,1.8800e+00,-5.1500e+00,3.0000e+00,1.9000e+00,-5.1500e+00,3.0000e+00,1.8800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5114"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.0250e+00,-3.0950e+00,1.8500e+00,-4.7750e+00,-3.0950e+00,1.8500e+00,-5.0250e+00,-3.0989e+00,1.8503e+00,-4.7750e+00,-3.0989e+00,1.8503e+00,-5.0250e+00,-3.1028e+00,1.8510e+00,-4.7750e+00,-3.1028e+00,1.8510e+00,-5.0250e+00,-3.1065e+00,1.8523e+00,-4.7750e+00,-3.1065e+00,1.8523e+00,-5.0250e+00,-3.1100e+00,1.8540e+00,-4.7750e+00,-3.1100e+00,1.8540e+00,-5.0250e+00,-3.1133e+00,1.8562e+00,-4.7750e+00,-3.1133e+00,1.8562e+00,-5.0250e+00,-3.1162e+00,1.8588e+00,-4.7750e+00,-3.1162e+00,1.8588e+00,-5.0250e+00,-3.1188e+00,1.8617e+00,-4.7750e+00,-3.1188e+00,1.8617e+00,-5.0250e+00,-3.1210e+00,1.8650e+00,-4.7750e+00,-3.1210e+00,1.8650e+00,-5.0250e+00,-3.1227e+00,1.8685e+00,-4.7750e+00,-3.1227e+00,1.8685e+00,-5.0250e+00,-3.1240e+00,1.8722e+00,-4.7750e+00,-3.1240e+00,1.8722e+00,-5.0250e+00,-3.1247e+00,1.8761e+00,-4.7750e+00,-3.1247e+00,1.8761e+00,-5.0250e+00,-3.1250e+00,1.8800e+00,-4.7750e+00,-3.1250e+00,1.8800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5132"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_856_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_856_point()))
            .setNormal(new Normal().setVector(getNormal_7_857_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5150"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_863_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_863_point()))
            .setNormal(new Normal().setVector(getNormal_7_864_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5168"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.6800e+00,-3.0000e+00,1.8500e+00,-4.6800e+00,3.0000e+00,1.8500e+00,-4.6761e+00,-3.0000e+00,1.8503e+00,-4.6761e+00,3.0000e+00,1.8503e+00,-4.6722e+00,-3.0000e+00,1.8510e+00,-4.6722e+00,3.0000e+00,1.8510e+00,-4.6685e+00,-3.0000e+00,1.8523e+00,-4.6685e+00,3.0000e+00,1.8523e+00,-4.6650e+00,-3.0000e+00,1.8540e+00,-4.6650e+00,3.0000e+00,1.8540e+00,-4.6617e+00,-3.0000e+00,1.8562e+00,-4.6617e+00,3.0000e+00,1.8562e+00,-4.6588e+00,-3.0000e+00,1.8588e+00,-4.6588e+00,3.0000e+00,1.8588e+00,-4.6562e+00,-3.0000e+00,1.8617e+00,-4.6562e+00,3.0000e+00,1.8617e+00,-4.6540e+00,-3.0000e+00,1.8650e+00,-4.6540e+00,3.0000e+00,1.8650e+00,-4.6523e+00,-3.0000e+00,1.8685e+00,-4.6523e+00,3.0000e+00,1.8685e+00,-4.6510e+00,-3.0000e+00,1.8722e+00,-4.6510e+00,3.0000e+00,1.8722e+00,-4.6503e+00,-3.0000e+00,1.8761e+00,-4.6503e+00,3.0000e+00,1.8761e+00,-4.6500e+00,-3.0000e+00,1.8800e+00,-4.6500e+00,3.0000e+00,1.8800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,-0.0000e+00,1.0000e+00,-1.2246e-16,-0.0000e+00,1.0000e+00,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-1.0000e+00,-0.0000e+00,-6.1232e-17,-1.0000e+00,-0.0000e+00,-6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5186"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.1200e+00,3.0000e+00,1.8500e+00,-5.1200e+00,-3.0000e+00,1.8500e+00,-5.1239e+00,3.0000e+00,1.8503e+00,-5.1239e+00,-3.0000e+00,1.8503e+00,-5.1278e+00,3.0000e+00,1.8510e+00,-5.1278e+00,-3.0000e+00,1.8510e+00,-5.1315e+00,3.0000e+00,1.8523e+00,-5.1315e+00,-3.0000e+00,1.8523e+00,-5.1350e+00,3.0000e+00,1.8540e+00,-5.1350e+00,-3.0000e+00,1.8540e+00,-5.1383e+00,3.0000e+00,1.8562e+00,-5.1383e+00,-3.0000e+00,1.8562e+00,-5.1412e+00,3.0000e+00,1.8588e+00,-5.1412e+00,-3.0000e+00,1.8588e+00,-5.1438e+00,3.0000e+00,1.8617e+00,-5.1438e+00,-3.0000e+00,1.8617e+00,-5.1460e+00,3.0000e+00,1.8650e+00,-5.1460e+00,-3.0000e+00,1.8650e+00,-5.1477e+00,3.0000e+00,1.8685e+00,-5.1477e+00,-3.0000e+00,1.8685e+00,-5.1490e+00,3.0000e+00,1.8722e+00,-5.1490e+00,-3.0000e+00,1.8722e+00,-5.1497e+00,3.0000e+00,1.8761e+00,-5.1497e+00,-3.0000e+00,1.8761e+00,-5.1500e+00,3.0000e+00,1.8800e+00,-5.1500e+00,-3.0000e+00,1.8800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,1.0000e+00,-0.0000e+00,6.1232e-17,1.0000e+00,-0.0000e+00,6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5204"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_884_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_884_point()))
            .setNormal(new Normal().setVector(getNormal_7_885_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5222"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_891_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_891_point()))
            .setNormal(new Normal().setVector(getNormal_7_892_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5234"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7750e+00,3.0950e+00,1.8500e+00,-5.0250e+00,3.0950e+00,1.8500e+00,-4.7750e+00,3.0989e+00,1.8503e+00,-5.0250e+00,3.0989e+00,1.8503e+00,-4.7750e+00,3.1028e+00,1.8510e+00,-5.0250e+00,3.1028e+00,1.8510e+00,-4.7750e+00,3.1065e+00,1.8523e+00,-5.0250e+00,3.1065e+00,1.8523e+00,-4.7750e+00,3.1100e+00,1.8540e+00,-5.0250e+00,3.1100e+00,1.8540e+00,-4.7750e+00,3.1133e+00,1.8562e+00,-5.0250e+00,3.1133e+00,1.8562e+00,-4.7750e+00,3.1162e+00,1.8588e+00,-5.0250e+00,3.1162e+00,1.8588e+00,-4.7750e+00,3.1188e+00,1.8617e+00,-5.0250e+00,3.1188e+00,1.8617e+00,-4.7750e+00,3.1210e+00,1.8650e+00,-5.0250e+00,3.1210e+00,1.8650e+00,-4.7750e+00,3.1227e+00,1.8685e+00,-5.0250e+00,3.1227e+00,1.8685e+00,-4.7750e+00,3.1240e+00,1.8722e+00,-5.0250e+00,3.1240e+00,1.8722e+00,-4.7750e+00,3.1247e+00,1.8761e+00,-5.0250e+00,3.1247e+00,1.8761e+00,-4.7750e+00,3.1250e+00,1.8800e+00,-5.0250e+00,3.1250e+00,1.8800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5246"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.9125e+00,1.5750e+00,1.7650e+00,1.9125e+00,1.5750e+00,1.9000e+00,1.9043e+00,1.5755e+00,1.7650e+00,1.9043e+00,1.5755e+00,1.9000e+00,1.8963e+00,1.5771e+00,1.7650e+00,1.8963e+00,1.5771e+00,1.9000e+00,1.8886e+00,1.5798e+00,1.7650e+00,1.8886e+00,1.5798e+00,1.9000e+00,1.8813e+00,1.5834e+00,1.7650e+00,1.8813e+00,1.5834e+00,1.9000e+00,1.8745e+00,1.5879e+00,1.7650e+00,1.8745e+00,1.5879e+00,1.9000e+00,1.8683e+00,1.5933e+00,1.7650e+00,1.8683e+00,1.5933e+00,1.9000e+00,1.8629e+00,1.5995e+00,1.7650e+00,1.8629e+00,1.5995e+00,1.9000e+00,1.8584e+00,1.6062e+00,1.7650e+00,1.8584e+00,1.6062e+00,1.9000e+00,1.8548e+00,1.6136e+00,1.7650e+00,1.8548e+00,1.6136e+00,1.9000e+00,1.8521e+00,1.6213e+00,1.7650e+00,1.8521e+00,1.6213e+00,1.9000e+00,1.8505e+00,1.6293e+00,1.7650e+00,1.8505e+00,1.6293e+00,1.9000e+00,1.8500e+00,1.6375e+00,1.7650e+00,1.8500e+00,1.6375e+00,1.9000e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5258"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.8500e+00,2.0125e+00,1.7650e+00,1.8500e+00,2.0125e+00,1.9000e+00,1.8505e+00,2.0207e+00,1.7650e+00,1.8505e+00,2.0207e+00,1.9000e+00,1.8521e+00,2.0287e+00,1.7650e+00,1.8521e+00,2.0287e+00,1.9000e+00,1.8548e+00,2.0364e+00,1.7650e+00,1.8548e+00,2.0364e+00,1.9000e+00,1.8584e+00,2.0438e+00,1.7650e+00,1.8584e+00,2.0438e+00,1.9000e+00,1.8629e+00,2.0505e+00,1.7650e+00,1.8629e+00,2.0505e+00,1.9000e+00,1.8683e+00,2.0567e+00,1.7650e+00,1.8683e+00,2.0567e+00,1.9000e+00,1.8745e+00,2.0621e+00,1.7650e+00,1.8745e+00,2.0621e+00,1.9000e+00,1.8813e+00,2.0666e+00,1.7650e+00,1.8813e+00,2.0666e+00,1.9000e+00,1.8886e+00,2.0702e+00,1.7650e+00,1.8886e+00,2.0702e+00,1.9000e+00,1.8963e+00,2.0729e+00,1.7650e+00,1.8963e+00,2.0729e+00,1.9000e+00,1.9043e+00,2.0745e+00,1.7650e+00,1.9043e+00,2.0745e+00,1.9000e+00,1.9125e+00,2.0750e+00,1.7650e+00,1.9125e+00,2.0750e+00,1.9000e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5270"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {3.7500e+00,-2.4375e+00,1.9000e+00,3.7500e+00,-2.4375e+00,1.7650e+00,3.7505e+00,-2.4457e+00,1.9000e+00,3.7505e+00,-2.4457e+00,1.7650e+00,3.7521e+00,-2.4537e+00,1.9000e+00,3.7521e+00,-2.4537e+00,1.7650e+00,3.7548e+00,-2.4614e+00,1.9000e+00,3.7548e+00,-2.4614e+00,1.7650e+00,3.7584e+00,-2.4688e+00,1.9000e+00,3.7584e+00,-2.4688e+00,1.7650e+00,3.7629e+00,-2.4755e+00,1.9000e+00,3.7629e+00,-2.4755e+00,1.7650e+00,3.7683e+00,-2.4817e+00,1.9000e+00,3.7683e+00,-2.4817e+00,1.7650e+00,3.7745e+00,-2.4871e+00,1.9000e+00,3.7745e+00,-2.4871e+00,1.7650e+00,3.7812e+00,-2.4916e+00,1.9000e+00,3.7812e+00,-2.4916e+00,1.7650e+00,3.7886e+00,-2.4952e+00,1.9000e+00,3.7886e+00,-2.4952e+00,1.7650e+00,3.7963e+00,-2.4979e+00,1.9000e+00,3.7963e+00,-2.4979e+00,1.7650e+00,3.8043e+00,-2.4995e+00,1.9000e+00,3.8043e+00,-2.4995e+00,1.7650e+00,3.8125e+00,-2.5000e+00,1.9000e+00,3.8125e+00,-2.5000e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5282"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.7875e+00,-2.5000e+00,1.9000e+00,4.7875e+00,-2.5000e+00,1.7650e+00,4.7957e+00,-2.4995e+00,1.9000e+00,4.7957e+00,-2.4995e+00,1.7650e+00,4.8037e+00,-2.4979e+00,1.9000e+00,4.8037e+00,-2.4979e+00,1.7650e+00,4.8114e+00,-2.4952e+00,1.9000e+00,4.8114e+00,-2.4952e+00,1.7650e+00,4.8187e+00,-2.4916e+00,1.9000e+00,4.8187e+00,-2.4916e+00,1.7650e+00,4.8255e+00,-2.4871e+00,1.9000e+00,4.8255e+00,-2.4871e+00,1.7650e+00,4.8317e+00,-2.4817e+00,1.9000e+00,4.8317e+00,-2.4817e+00,1.7650e+00,4.8371e+00,-2.4755e+00,1.9000e+00,4.8371e+00,-2.4755e+00,1.7650e+00,4.8416e+00,-2.4688e+00,1.9000e+00,4.8416e+00,-2.4688e+00,1.7650e+00,4.8452e+00,-2.4614e+00,1.9000e+00,4.8452e+00,-2.4614e+00,1.7650e+00,4.8479e+00,-2.4537e+00,1.9000e+00,4.8479e+00,-2.4537e+00,1.7650e+00,4.8495e+00,-2.4457e+00,1.9000e+00,4.8495e+00,-2.4457e+00,1.7650e+00,4.8500e+00,-2.4375e+00,1.9000e+00,4.8500e+00,-2.4375e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5294"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.8500e+00,-1.4625e+00,1.9000e+00,4.8500e+00,-1.4625e+00,1.7650e+00,4.8495e+00,-1.4543e+00,1.9000e+00,4.8495e+00,-1.4543e+00,1.7650e+00,4.8479e+00,-1.4463e+00,1.9000e+00,4.8479e+00,-1.4463e+00,1.7650e+00,4.8452e+00,-1.4386e+00,1.9000e+00,4.8452e+00,-1.4386e+00,1.7650e+00,4.8416e+00,-1.4312e+00,1.9000e+00,4.8416e+00,-1.4312e+00,1.7650e+00,4.8371e+00,-1.4245e+00,1.9000e+00,4.8371e+00,-1.4245e+00,1.7650e+00,4.8317e+00,-1.4183e+00,1.9000e+00,4.8317e+00,-1.4183e+00,1.7650e+00,4.8255e+00,-1.4129e+00,1.9000e+00,4.8255e+00,-1.4129e+00,1.7650e+00,4.8187e+00,-1.4084e+00,1.9000e+00,4.8187e+00,-1.4084e+00,1.7650e+00,4.8114e+00,-1.4048e+00,1.9000e+00,4.8114e+00,-1.4048e+00,1.7650e+00,4.8037e+00,-1.4021e+00,1.9000e+00,4.8037e+00,-1.4021e+00,1.7650e+00,4.7957e+00,-1.4005e+00,1.9000e+00,4.7957e+00,-1.4005e+00,1.7650e+00,4.7875e+00,-1.4000e+00,1.9000e+00,4.7875e+00,-1.4000e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5306"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {3.8125e+00,-1.4000e+00,1.9000e+00,3.8125e+00,-1.4000e+00,1.7650e+00,3.8043e+00,-1.4005e+00,1.9000e+00,3.8043e+00,-1.4005e+00,1.7650e+00,3.7963e+00,-1.4021e+00,1.9000e+00,3.7963e+00,-1.4021e+00,1.7650e+00,3.7886e+00,-1.4048e+00,1.9000e+00,3.7886e+00,-1.4048e+00,1.7650e+00,3.7812e+00,-1.4084e+00,1.9000e+00,3.7812e+00,-1.4084e+00,1.7650e+00,3.7745e+00,-1.4129e+00,1.9000e+00,3.7745e+00,-1.4129e+00,1.7650e+00,3.7683e+00,-1.4183e+00,1.9000e+00,3.7683e+00,-1.4183e+00,1.7650e+00,3.7629e+00,-1.4245e+00,1.9000e+00,3.7629e+00,-1.4245e+00,1.7650e+00,3.7584e+00,-1.4312e+00,1.9000e+00,3.7584e+00,-1.4312e+00,1.7650e+00,3.7548e+00,-1.4386e+00,1.9000e+00,3.7548e+00,-1.4386e+00,1.7650e+00,3.7521e+00,-1.4463e+00,1.9000e+00,3.7521e+00,-1.4463e+00,1.7650e+00,3.7505e+00,-1.4543e+00,1.9000e+00,3.7505e+00,-1.4543e+00,1.7650e+00,3.7500e+00,-1.4625e+00,1.9000e+00,3.7500e+00,-1.4625e+00,1.7650e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5324"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-6.0140e+00,-4.3840e+00,0.0000e+00,-6.0140e+00,-4.3840e+00,2.8000e-01,-6.0297e+00,-4.3830e+00,0.0000e+00,-6.0297e+00,-4.3830e+00,2.8000e-01,-6.0451e+00,-4.3799e+00,0.0000e+00,-6.0451e+00,-4.3799e+00,2.8000e-01,-6.0599e+00,-4.3749e+00,0.0000e+00,-6.0599e+00,-4.3749e+00,2.8000e-01,-6.0740e+00,-4.3679e+00,0.0000e+00,-6.0740e+00,-4.3679e+00,2.8000e-01,-6.0871e+00,-4.3592e+00,0.0000e+00,-6.0871e+00,-4.3592e+00,2.8000e-01,-6.0989e+00,-4.3489e+00,0.0000e+00,-6.0989e+00,-4.3489e+00,2.8000e-01,-6.1092e+00,-4.3371e+00,0.0000e+00,-6.1092e+00,-4.3371e+00,2.8000e-01,-6.1179e+00,-4.3240e+00,0.0000e+00,-6.1179e+00,-4.3240e+00,2.8000e-01,-6.1249e+00,-4.3099e+00,0.0000e+00,-6.1249e+00,-4.3099e+00,2.8000e-01,-6.1299e+00,-4.2951e+00,0.0000e+00,-6.1299e+00,-4.2951e+00,2.8000e-01,-6.1330e+00,-4.2797e+00,0.0000e+00,-6.1330e+00,-4.2797e+00,2.8000e-01,-6.1340e+00,-4.2640e+00,0.0000e+00,-6.1340e+00,-4.2640e+00,2.8000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,-1.0000e+00,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5348"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-6.1340e+00,4.2640e+00,2.8000e-01,-6.1340e+00,-4.2640e+00,2.8000e-01,-6.1330e+00,4.2640e+00,2.9566e-01,-6.1330e+00,-4.2640e+00,2.9566e-01,-6.1299e+00,4.2640e+00,3.1106e-01,-6.1299e+00,-4.2640e+00,3.1106e-01,-6.1249e+00,4.2640e+00,3.2592e-01,-6.1249e+00,-4.2640e+00,3.2592e-01,-6.1179e+00,4.2640e+00,3.4000e-01,-6.1179e+00,-4.2640e+00,3.4000e-01,-6.1092e+00,4.2640e+00,3.5305e-01,-6.1092e+00,-4.2640e+00,3.5305e-01,-6.0989e+00,4.2640e+00,3.6485e-01,-6.0989e+00,-4.2640e+00,3.6485e-01,-6.0871e+00,4.2640e+00,3.7520e-01,-6.0871e+00,-4.2640e+00,3.7520e-01,-6.0740e+00,4.2640e+00,3.8392e-01,-6.0740e+00,-4.2640e+00,3.8392e-01,-6.0599e+00,4.2640e+00,3.9087e-01,-6.0599e+00,-4.2640e+00,3.9087e-01,-6.0451e+00,4.2640e+00,3.9591e-01,-6.0451e+00,-4.2640e+00,3.9591e-01,-6.0297e+00,4.2640e+00,3.9897e-01,-6.0297e+00,-4.2640e+00,3.9897e-01,-6.0140e+00,4.2640e+00,4.0000e-01,-6.0140e+00,-4.2640e+00,4.0000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,0.0000e+00,-6.1232e-17,-1.0000e+00,0.0000e+00,-6.1232e-17,-9.9144e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,1.3053e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-5.0000e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,8.6603e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-1.3053e-01,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.9144e-01,-1.2246e-16,0.0000e+00,1.0000e+00,-1.2246e-16,0.0000e+00,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5366"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-6.1340e+00,4.2640e+00,0.0000e+00,-6.1340e+00,4.2640e+00,2.8000e-01,-6.1330e+00,4.2797e+00,0.0000e+00,-6.1330e+00,4.2797e+00,2.8000e-01,-6.1299e+00,4.2951e+00,0.0000e+00,-6.1299e+00,4.2951e+00,2.8000e-01,-6.1249e+00,4.3099e+00,0.0000e+00,-6.1249e+00,4.3099e+00,2.8000e-01,-6.1179e+00,4.3240e+00,0.0000e+00,-6.1179e+00,4.3240e+00,2.8000e-01,-6.1092e+00,4.3371e+00,0.0000e+00,-6.1092e+00,4.3371e+00,2.8000e-01,-6.0989e+00,4.3489e+00,0.0000e+00,-6.0989e+00,4.3489e+00,2.8000e-01,-6.0871e+00,4.3592e+00,0.0000e+00,-6.0871e+00,4.3592e+00,2.8000e-01,-6.0740e+00,4.3679e+00,0.0000e+00,-6.0740e+00,4.3679e+00,2.8000e-01,-6.0599e+00,4.3749e+00,0.0000e+00,-6.0599e+00,4.3749e+00,2.8000e-01,-6.0451e+00,4.3799e+00,0.0000e+00,-6.0451e+00,4.3799e+00,2.8000e-01,-6.0297e+00,4.3830e+00,0.0000e+00,-6.0297e+00,4.3830e+00,2.8000e-01,-6.0140e+00,4.3840e+00,0.0000e+00,-6.0140e+00,4.3840e+00,2.8000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5383"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_968_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_968_point()))
            .setNormal(new Normal().setVector(getNormal_7_969_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5400"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_975_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_975_point()))
            .setNormal(new Normal().setVector(getNormal_7_976_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5418"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {6.1340e+00,-4.2640e+00,0.0000e+00,6.1340e+00,-4.2640e+00,2.8000e-01,6.1330e+00,-4.2797e+00,0.0000e+00,6.1330e+00,-4.2797e+00,2.8000e-01,6.1299e+00,-4.2951e+00,0.0000e+00,6.1299e+00,-4.2951e+00,2.8000e-01,6.1249e+00,-4.3099e+00,0.0000e+00,6.1249e+00,-4.3099e+00,2.8000e-01,6.1179e+00,-4.3240e+00,0.0000e+00,6.1179e+00,-4.3240e+00,2.8000e-01,6.1092e+00,-4.3371e+00,0.0000e+00,6.1092e+00,-4.3371e+00,2.8000e-01,6.0989e+00,-4.3489e+00,0.0000e+00,6.0989e+00,-4.3489e+00,2.8000e-01,6.0871e+00,-4.3592e+00,0.0000e+00,6.0871e+00,-4.3592e+00,2.8000e-01,6.0740e+00,-4.3679e+00,0.0000e+00,6.0740e+00,-4.3679e+00,2.8000e-01,6.0599e+00,-4.3749e+00,0.0000e+00,6.0599e+00,-4.3749e+00,2.8000e-01,6.0451e+00,-4.3799e+00,0.0000e+00,6.0451e+00,-4.3799e+00,2.8000e-01,6.0297e+00,-4.3830e+00,0.0000e+00,6.0297e+00,-4.3830e+00,2.8000e-01,6.0140e+00,-4.3840e+00,0.0000e+00,6.0140e+00,-4.3840e+00,2.8000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,-6.1232e-17,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5436"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-6.0140e+00,-4.3840e+00,2.8000e-01,6.0140e+00,-4.3840e+00,2.8000e-01,-6.0140e+00,-4.3830e+00,2.9566e-01,6.0140e+00,-4.3830e+00,2.9566e-01,-6.0140e+00,-4.3799e+00,3.1106e-01,6.0140e+00,-4.3799e+00,3.1106e-01,-6.0140e+00,-4.3749e+00,3.2592e-01,6.0140e+00,-4.3749e+00,3.2592e-01,-6.0140e+00,-4.3679e+00,3.4000e-01,6.0140e+00,-4.3679e+00,3.4000e-01,-6.0140e+00,-4.3592e+00,3.5305e-01,6.0140e+00,-4.3592e+00,3.5305e-01,-6.0140e+00,-4.3489e+00,3.6485e-01,6.0140e+00,-4.3489e+00,3.6485e-01,-6.0140e+00,-4.3371e+00,3.7520e-01,6.0140e+00,-4.3371e+00,3.7520e-01,-6.0140e+00,-4.3240e+00,3.8392e-01,6.0140e+00,-4.3240e+00,3.8392e-01,-6.0140e+00,-4.3099e+00,3.9087e-01,6.0140e+00,-4.3099e+00,3.9087e-01,-6.0140e+00,-4.2951e+00,3.9591e-01,6.0140e+00,-4.2951e+00,3.9591e-01,-6.0140e+00,-4.2797e+00,3.9897e-01,6.0140e+00,-4.2797e+00,3.9897e-01,-6.0140e+00,-4.2640e+00,4.0000e-01,6.0140e+00,-4.2640e+00,4.0000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5454"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {6.0140e+00,4.3840e+00,2.8000e-01,-6.0140e+00,4.3840e+00,2.8000e-01,6.0140e+00,4.3830e+00,2.9566e-01,-6.0140e+00,4.3830e+00,2.9566e-01,6.0140e+00,4.3799e+00,3.1106e-01,-6.0140e+00,4.3799e+00,3.1106e-01,6.0140e+00,4.3749e+00,3.2592e-01,-6.0140e+00,4.3749e+00,3.2592e-01,6.0140e+00,4.3679e+00,3.4000e-01,-6.0140e+00,4.3679e+00,3.4000e-01,6.0140e+00,4.3592e+00,3.5305e-01,-6.0140e+00,4.3592e+00,3.5305e-01,6.0140e+00,4.3489e+00,3.6485e-01,-6.0140e+00,4.3489e+00,3.6485e-01,6.0140e+00,4.3371e+00,3.7520e-01,-6.0140e+00,4.3371e+00,3.7520e-01,6.0140e+00,4.3240e+00,3.8392e-01,-6.0140e+00,4.3240e+00,3.8392e-01,6.0140e+00,4.3099e+00,3.9087e-01,-6.0140e+00,4.3099e+00,3.9087e-01,6.0140e+00,4.2951e+00,3.9591e-01,-6.0140e+00,4.2951e+00,3.9591e-01,6.0140e+00,4.2797e+00,3.9897e-01,-6.0140e+00,4.2797e+00,3.9897e-01,6.0140e+00,4.2640e+00,4.0000e-01,-6.0140e+00,4.2640e+00,4.0000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,1.0000e+00,6.1232e-17,0.0000e+00,1.0000e+00,6.1232e-17,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5472"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {6.0140e+00,4.3840e+00,0.0000e+00,6.0140e+00,4.3840e+00,2.8000e-01,6.0297e+00,4.3830e+00,0.0000e+00,6.0297e+00,4.3830e+00,2.8000e-01,6.0451e+00,4.3799e+00,0.0000e+00,6.0451e+00,4.3799e+00,2.8000e-01,6.0599e+00,4.3749e+00,0.0000e+00,6.0599e+00,4.3749e+00,2.8000e-01,6.0740e+00,4.3679e+00,0.0000e+00,6.0740e+00,4.3679e+00,2.8000e-01,6.0871e+00,4.3592e+00,0.0000e+00,6.0871e+00,4.3592e+00,2.8000e-01,6.0989e+00,4.3489e+00,0.0000e+00,6.0989e+00,4.3489e+00,2.8000e-01,6.1092e+00,4.3371e+00,0.0000e+00,6.1092e+00,4.3371e+00,2.8000e-01,6.1179e+00,4.3240e+00,0.0000e+00,6.1179e+00,4.3240e+00,2.8000e-01,6.1249e+00,4.3099e+00,0.0000e+00,6.1249e+00,4.3099e+00,2.8000e-01,6.1299e+00,4.2951e+00,0.0000e+00,6.1299e+00,4.2951e+00,2.8000e-01,6.1330e+00,4.2797e+00,0.0000e+00,6.1330e+00,4.2797e+00,2.8000e-01,6.1340e+00,4.2640e+00,0.0000e+00,6.1340e+00,4.2640e+00,2.8000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,1.0000e+00,1.8370e-16,0.0000e+00,1.0000e+00,1.8370e-16,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5489"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_1010_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1010_point()))
            .setNormal(new Normal().setVector(getNormal_7_1011_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5506"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_1017_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1017_point()))
            .setNormal(new Normal().setVector(getNormal_7_1018_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5518"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {6.1340e+00,-4.2640e+00,2.8000e-01,6.1340e+00,4.2640e+00,2.8000e-01,6.1330e+00,-4.2640e+00,2.9566e-01,6.1330e+00,4.2640e+00,2.9566e-01,6.1299e+00,-4.2640e+00,3.1106e-01,6.1299e+00,4.2640e+00,3.1106e-01,6.1249e+00,-4.2640e+00,3.2592e-01,6.1249e+00,4.2640e+00,3.2592e-01,6.1179e+00,-4.2640e+00,3.4000e-01,6.1179e+00,4.2640e+00,3.4000e-01,6.1092e+00,-4.2640e+00,3.5305e-01,6.1092e+00,4.2640e+00,3.5305e-01,6.0989e+00,-4.2640e+00,3.6485e-01,6.0989e+00,4.2640e+00,3.6485e-01,6.0871e+00,-4.2640e+00,3.7520e-01,6.0871e+00,4.2640e+00,3.7520e-01,6.0740e+00,-4.2640e+00,3.8392e-01,6.0740e+00,4.2640e+00,3.8392e-01,6.0599e+00,-4.2640e+00,3.9087e-01,6.0599e+00,4.2640e+00,3.9087e-01,6.0451e+00,-4.2640e+00,3.9591e-01,6.0451e+00,4.2640e+00,3.9591e-01,6.0297e+00,-4.2640e+00,3.9897e-01,6.0297e+00,4.2640e+00,3.9897e-01,6.0140e+00,-4.2640e+00,4.0000e-01,6.0140e+00,4.2640e+00,4.0000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,0.0000e+00,6.1232e-17,1.0000e+00,0.0000e+00,6.1232e-17,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5536"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.4639e+00,3.0656e+00,0.0000e+00,5.4639e+00,3.0656e+00,1.6450e+00,5.4728e+00,3.0556e+00,0.0000e+00,5.4728e+00,3.0556e+00,1.6450e+00,5.4806e+00,3.0446e+00,0.0000e+00,5.4806e+00,3.0446e+00,1.6450e+00,5.4871e+00,3.0328e+00,0.0000e+00,5.4871e+00,3.0328e+00,1.6450e+00,5.4923e+00,3.0204e+00,0.0000e+00,5.4923e+00,3.0204e+00,1.6450e+00,5.4960e+00,3.0074e+00,0.0000e+00,5.4960e+00,3.0074e+00,1.6450e+00,5.4982e+00,2.9942e+00,0.0000e+00,5.4982e+00,2.9942e+00,1.6450e+00,5.4990e+00,2.9807e+00,0.0000e+00,5.4990e+00,2.9807e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.8183e-01,-6.2349e-01,-0.0000e+00,-7.8183e-01,-6.2349e-01,-0.0000e+00,-8.4672e-01,-5.3203e-01,-0.0000e+00,-8.4672e-01,-5.3203e-01,-0.0000e+00,-9.0097e-01,-4.3388e-01,-0.0000e+00,-9.0097e-01,-4.3388e-01,-0.0000e+00,-9.4388e-01,-3.3028e-01,-0.0000e+00,-9.4388e-01,-3.3028e-01,-0.0000e+00,-9.7493e-01,-2.2252e-01,-0.0000e+00,-9.7493e-01,-2.2252e-01,-0.0000e+00,-9.9371e-01,-1.1196e-01,-0.0000e+00,-9.9371e-01,-1.1196e-01,-0.0000e+00,-1.0000e+00,6.1232e-17,-0.0000e+00,-1.0000e+00,6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5554"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.4990e+00,-2.9807e+00,0.0000e+00,5.4990e+00,-2.9807e+00,1.6450e+00,5.4982e+00,-2.9942e+00,0.0000e+00,5.4982e+00,-2.9942e+00,1.6450e+00,5.4960e+00,-3.0074e+00,0.0000e+00,5.4960e+00,-3.0074e+00,1.6450e+00,5.4923e+00,-3.0204e+00,0.0000e+00,5.4923e+00,-3.0204e+00,1.6450e+00,5.4871e+00,-3.0328e+00,0.0000e+00,5.4871e+00,-3.0328e+00,1.6450e+00,5.4806e+00,-3.0446e+00,0.0000e+00,5.4806e+00,-3.0446e+00,1.6450e+00,5.4728e+00,-3.0556e+00,0.0000e+00,5.4728e+00,-3.0556e+00,1.6450e+00,5.4639e+00,-3.0656e+00,0.0000e+00,5.4639e+00,-3.0656e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,6.1232e-17,-0.0000e+00,-1.0000e+00,6.1232e-17,-0.0000e+00,-9.9371e-01,1.1196e-01,-0.0000e+00,-9.9371e-01,1.1196e-01,-0.0000e+00,-9.7493e-01,2.2252e-01,-0.0000e+00,-9.7493e-01,2.2252e-01,-0.0000e+00,-9.4388e-01,3.3028e-01,-0.0000e+00,-9.4388e-01,3.3028e-01,-0.0000e+00,-9.0097e-01,4.3388e-01,-0.0000e+00,-9.0097e-01,4.3388e-01,-0.0000e+00,-8.4672e-01,5.3203e-01,-0.0000e+00,-8.4672e-01,5.3203e-01,-0.0000e+00,-7.8183e-01,6.2349e-01,-0.0000e+00,-7.8183e-01,6.2349e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5578"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.3790e+00,2.9807e+00,1.7650e+00,5.3790e+00,-2.9807e+00,1.7650e+00,5.3947e+00,2.9807e+00,1.7640e+00,5.3947e+00,-2.9807e+00,1.7640e+00,5.4101e+00,2.9807e+00,1.7609e+00,5.4101e+00,-2.9807e+00,1.7609e+00,5.4249e+00,2.9807e+00,1.7559e+00,5.4249e+00,-2.9807e+00,1.7559e+00,5.4390e+00,2.9807e+00,1.7489e+00,5.4390e+00,-2.9807e+00,1.7489e+00,5.4521e+00,2.9807e+00,1.7402e+00,5.4521e+00,-2.9807e+00,1.7402e+00,5.4639e+00,2.9807e+00,1.7299e+00,5.4639e+00,-2.9807e+00,1.7299e+00,5.4742e+00,2.9807e+00,1.7181e+00,5.4742e+00,-2.9807e+00,1.7181e+00,5.4829e+00,2.9807e+00,1.7050e+00,5.4829e+00,-2.9807e+00,1.7050e+00,5.4899e+00,2.9807e+00,1.6909e+00,5.4899e+00,-2.9807e+00,1.6909e+00,5.4949e+00,2.9807e+00,1.6761e+00,5.4949e+00,-2.9807e+00,1.6761e+00,5.4980e+00,2.9807e+00,1.6607e+00,5.4980e+00,-2.9807e+00,1.6607e+00,5.4990e+00,2.9807e+00,1.6450e+00,5.4990e+00,-2.9807e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,-0.0000e+00,-1.0000e+00,-1.2246e-16,-0.0000e+00,-1.0000e+00,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-1.0000e+00,-0.0000e+00,6.1232e-17,-1.0000e+00,-0.0000e+00,6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5595"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,40,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,40,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,40,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,40,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1052_point()))
            .setNormal(new Normal().setVector(getNormal_7_1053_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5612"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,40,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,40,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,40,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,40,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1059_point()))
            .setNormal(new Normal().setVector(getNormal_7_1060_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5630"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.6957e+00,3.6640e+00,1.7650e+00,5.3790e+00,2.9807e+00,1.7650e+00,4.7060e+00,3.6742e+00,1.7641e+00,5.3892e+00,2.9910e+00,1.7641e+00,4.7160e+00,3.6843e+00,1.7615e+00,5.3993e+00,3.0010e+00,1.7615e+00,4.7258e+00,3.6941e+00,1.7572e+00,5.4091e+00,3.0108e+00,1.7572e+00,4.7352e+00,3.7034e+00,1.7513e+00,5.4184e+00,3.0202e+00,1.7513e+00,4.7439e+00,3.7122e+00,1.7438e+00,5.4272e+00,3.0289e+00,1.7438e+00,4.7520e+00,3.7203e+00,1.7348e+00,5.4353e+00,3.0370e+00,1.7348e+00,4.7593e+00,3.7275e+00,1.7246e+00,5.4425e+00,3.0443e+00,1.7246e+00,4.7656e+00,3.7338e+00,1.7132e+00,5.4488e+00,3.0506e+00,1.7132e+00,4.7709e+00,3.7391e+00,1.7008e+00,5.4541e+00,3.0559e+00,1.7008e+00,4.7751e+00,3.7433e+00,1.6876e+00,5.4583e+00,3.0601e+00,1.6876e+00,4.7781e+00,3.7464e+00,1.6737e+00,5.4614e+00,3.0631e+00,1.6737e+00,4.7800e+00,3.7482e+00,1.6595e+00,5.4632e+00,3.0650e+00,1.6595e+00,4.7806e+00,3.7489e+00,1.6450e+00,5.4639e+00,3.0656e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(getNormal_7_1067_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5648"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.6957e+00,3.7840e+00,0.0000e+00,4.6957e+00,3.7840e+00,1.6450e+00,4.7092e+00,3.7832e+00,0.0000e+00,4.7092e+00,3.7832e+00,1.6450e+00,4.7224e+00,3.7810e+00,0.0000e+00,4.7224e+00,3.7810e+00,1.6450e+00,4.7354e+00,3.7773e+00,0.0000e+00,4.7354e+00,3.7773e+00,1.6450e+00,4.7478e+00,3.7721e+00,0.0000e+00,4.7478e+00,3.7721e+00,1.6450e+00,4.7596e+00,3.7656e+00,0.0000e+00,4.7596e+00,3.7656e+00,1.6450e+00,4.7706e+00,3.7578e+00,0.0000e+00,4.7706e+00,3.7578e+00,1.6450e+00,4.7806e+00,3.7489e+00,0.0000e+00,4.7806e+00,3.7489e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,-1.0000e+00,-0.0000e+00,-1.2246e-16,-1.0000e+00,-0.0000e+00,-1.1196e-01,-9.9371e-01,-0.0000e+00,-1.1196e-01,-9.9371e-01,-0.0000e+00,-2.2252e-01,-9.7493e-01,-0.0000e+00,-2.2252e-01,-9.7493e-01,-0.0000e+00,-3.3028e-01,-9.4388e-01,-0.0000e+00,-3.3028e-01,-9.4388e-01,-0.0000e+00,-4.3388e-01,-9.0097e-01,-0.0000e+00,-4.3388e-01,-9.0097e-01,-0.0000e+00,-5.3203e-01,-8.4672e-01,-0.0000e+00,-5.3203e-01,-8.4672e-01,-0.0000e+00,-6.2349e-01,-7.8183e-01,-0.0000e+00,-6.2349e-01,-7.8183e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5666"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.7806e+00,-3.7489e+00,0.0000e+00,4.7806e+00,-3.7489e+00,1.6450e+00,4.7706e+00,-3.7578e+00,0.0000e+00,4.7706e+00,-3.7578e+00,1.6450e+00,4.7596e+00,-3.7656e+00,0.0000e+00,4.7596e+00,-3.7656e+00,1.6450e+00,4.7478e+00,-3.7721e+00,0.0000e+00,4.7478e+00,-3.7721e+00,1.6450e+00,4.7354e+00,-3.7773e+00,0.0000e+00,4.7354e+00,-3.7773e+00,1.6450e+00,4.7224e+00,-3.7810e+00,0.0000e+00,4.7224e+00,-3.7810e+00,1.6450e+00,4.7092e+00,-3.7832e+00,0.0000e+00,4.7092e+00,-3.7832e+00,1.6450e+00,4.6957e+00,-3.7840e+00,0.0000e+00,4.6957e+00,-3.7840e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.2349e-01,7.8183e-01,-0.0000e+00,-6.2349e-01,7.8183e-01,-0.0000e+00,-5.3203e-01,8.4672e-01,-0.0000e+00,-5.3203e-01,8.4672e-01,-0.0000e+00,-4.3388e-01,9.0097e-01,-0.0000e+00,-4.3388e-01,9.0097e-01,-0.0000e+00,-3.3028e-01,9.4388e-01,-0.0000e+00,-3.3028e-01,9.4388e-01,-0.0000e+00,-2.2252e-01,9.7493e-01,-0.0000e+00,-2.2252e-01,9.7493e-01,-0.0000e+00,-1.1196e-01,9.9371e-01,-0.0000e+00,-1.1196e-01,9.9371e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5684"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.3790e+00,-2.9807e+00,1.7650e+00,4.6957e+00,-3.6640e+00,1.7650e+00,5.3892e+00,-2.9910e+00,1.7641e+00,4.7060e+00,-3.6742e+00,1.7641e+00,5.3993e+00,-3.0010e+00,1.7615e+00,4.7160e+00,-3.6843e+00,1.7615e+00,5.4091e+00,-3.0108e+00,1.7572e+00,4.7258e+00,-3.6941e+00,1.7572e+00,5.4184e+00,-3.0202e+00,1.7513e+00,4.7352e+00,-3.7034e+00,1.7513e+00,5.4272e+00,-3.0289e+00,1.7438e+00,4.7439e+00,-3.7122e+00,1.7438e+00,5.4353e+00,-3.0370e+00,1.7348e+00,4.7520e+00,-3.7203e+00,1.7348e+00,5.4425e+00,-3.0443e+00,1.7246e+00,4.7593e+00,-3.7275e+00,1.7246e+00,5.4488e+00,-3.0506e+00,1.7132e+00,4.7656e+00,-3.7338e+00,1.7132e+00,5.4541e+00,-3.0559e+00,1.7008e+00,4.7709e+00,-3.7391e+00,1.7008e+00,5.4583e+00,-3.0601e+00,1.6876e+00,4.7751e+00,-3.7433e+00,1.6876e+00,5.4614e+00,-3.0631e+00,1.6737e+00,4.7781e+00,-3.7464e+00,1.6737e+00,5.4632e+00,-3.0650e+00,1.6595e+00,4.7800e+00,-3.7482e+00,1.6595e+00,5.4639e+00,-3.0656e+00,1.6450e+00,4.7806e+00,-3.7489e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {4.1667e-08,-4.1667e-08,-1.0000e+00,4.1667e-08,-4.1667e-08,-1.0000e+00,-8.5232e-02,8.5232e-02,-9.9271e-01,-8.5232e-02,8.5232e-02,-9.9271e-01,-1.6922e-01,1.6922e-01,-9.7094e-01,-1.6922e-01,1.6922e-01,-9.7094e-01,-2.5074e-01,2.5074e-01,-9.3502e-01,-2.5074e-01,2.5074e-01,-9.3502e-01,-3.2861e-01,3.2861e-01,-8.8546e-01,-3.2861e-01,3.2861e-01,-8.8546e-01,-4.0168e-01,4.0168e-01,-8.2298e-01,-4.0168e-01,4.0168e-01,-8.2298e-01,-4.6890e-01,4.6890e-01,-7.4851e-01,-4.6890e-01,4.6890e-01,-7.4851e-01,-5.2928e-01,5.2928e-01,-6.6312e-01,-5.2928e-01,5.2928e-01,-6.6312e-01,-5.8194e-01,5.8194e-01,-5.6806e-01,-5.8194e-01,5.8194e-01,-5.6806e-01,-6.2611e-01,6.2611e-01,-4.6472e-01,-6.2611e-01,6.2611e-01,-4.6472e-01,-6.6116e-01,6.6116e-01,-3.5460e-01,-6.6116e-01,6.6116e-01,-3.5460e-01,-6.8656e-01,6.8656e-01,-2.3932e-01,-6.8656e-01,6.8656e-01,-2.3932e-01,-7.0195e-01,7.0195e-01,-1.2054e-01,-7.0195e-01,7.0195e-01,-1.2054e-01,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5701"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,40,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,40,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,40,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,40,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1094_point()))
            .setNormal(new Normal().setVector(getNormal_7_1095_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5718"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,40,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,40,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,40,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,40,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1101_point()))
            .setNormal(new Normal().setVector(getNormal_7_1102_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5736"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.6957e+00,3.6640e+00,1.7650e+00,4.6957e+00,3.6640e+00,1.7650e+00,-4.6957e+00,3.6797e+00,1.7640e+00,4.6957e+00,3.6797e+00,1.7640e+00,-4.6957e+00,3.6951e+00,1.7609e+00,4.6957e+00,3.6951e+00,1.7609e+00,-4.6957e+00,3.7099e+00,1.7559e+00,4.6957e+00,3.7099e+00,1.7559e+00,-4.6957e+00,3.7240e+00,1.7489e+00,4.6957e+00,3.7240e+00,1.7489e+00,-4.6957e+00,3.7371e+00,1.7402e+00,4.6957e+00,3.7371e+00,1.7402e+00,-4.6957e+00,3.7489e+00,1.7299e+00,4.6957e+00,3.7489e+00,1.7299e+00,-4.6957e+00,3.7592e+00,1.7181e+00,4.6957e+00,3.7592e+00,1.7181e+00,-4.6957e+00,3.7679e+00,1.7050e+00,4.6957e+00,3.7679e+00,1.7050e+00,-4.6957e+00,3.7749e+00,1.6909e+00,4.6957e+00,3.7749e+00,1.6909e+00,-4.6957e+00,3.7799e+00,1.6761e+00,4.6957e+00,3.7799e+00,1.6761e+00,-4.6957e+00,3.7830e+00,1.6607e+00,4.6957e+00,3.7830e+00,1.6607e+00,-4.6957e+00,3.7840e+00,1.6450e+00,4.6957e+00,3.7840e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5754"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7806e+00,3.7489e+00,0.0000e+00,-4.7806e+00,3.7489e+00,1.6450e+00,-4.7706e+00,3.7578e+00,0.0000e+00,-4.7706e+00,3.7578e+00,1.6450e+00,-4.7596e+00,3.7656e+00,0.0000e+00,-4.7596e+00,3.7656e+00,1.6450e+00,-4.7478e+00,3.7721e+00,0.0000e+00,-4.7478e+00,3.7721e+00,1.6450e+00,-4.7354e+00,3.7773e+00,0.0000e+00,-4.7354e+00,3.7773e+00,1.6450e+00,-4.7224e+00,3.7810e+00,0.0000e+00,-4.7224e+00,3.7810e+00,1.6450e+00,-4.7092e+00,3.7832e+00,0.0000e+00,-4.7092e+00,3.7832e+00,1.6450e+00,-4.6957e+00,3.7840e+00,0.0000e+00,-4.6957e+00,3.7840e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.2349e-01,-7.8183e-01,-0.0000e+00,6.2349e-01,-7.8183e-01,-0.0000e+00,5.3203e-01,-8.4672e-01,-0.0000e+00,5.3203e-01,-8.4672e-01,-0.0000e+00,4.3388e-01,-9.0097e-01,-0.0000e+00,4.3388e-01,-9.0097e-01,-0.0000e+00,3.3028e-01,-9.4388e-01,-0.0000e+00,3.3028e-01,-9.4388e-01,-0.0000e+00,2.2252e-01,-9.7493e-01,-0.0000e+00,2.2252e-01,-9.7493e-01,-0.0000e+00,1.1196e-01,-9.9371e-01,-0.0000e+00,1.1196e-01,-9.9371e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5772"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.6957e+00,-3.7840e+00,0.0000e+00,-4.6957e+00,-3.7840e+00,1.6450e+00,-4.7092e+00,-3.7832e+00,0.0000e+00,-4.7092e+00,-3.7832e+00,1.6450e+00,-4.7224e+00,-3.7810e+00,0.0000e+00,-4.7224e+00,-3.7810e+00,1.6450e+00,-4.7354e+00,-3.7773e+00,0.0000e+00,-4.7354e+00,-3.7773e+00,1.6450e+00,-4.7478e+00,-3.7721e+00,0.0000e+00,-4.7478e+00,-3.7721e+00,1.6450e+00,-4.7596e+00,-3.7656e+00,0.0000e+00,-4.7596e+00,-3.7656e+00,1.6450e+00,-4.7706e+00,-3.7578e+00,0.0000e+00,-4.7706e+00,-3.7578e+00,1.6450e+00,-4.7806e+00,-3.7489e+00,0.0000e+00,-4.7806e+00,-3.7489e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.1196e-01,9.9371e-01,-0.0000e+00,1.1196e-01,9.9371e-01,-0.0000e+00,2.2252e-01,9.7493e-01,-0.0000e+00,2.2252e-01,9.7493e-01,-0.0000e+00,3.3028e-01,9.4388e-01,-0.0000e+00,3.3028e-01,9.4388e-01,-0.0000e+00,4.3388e-01,9.0097e-01,-0.0000e+00,4.3388e-01,9.0097e-01,-0.0000e+00,5.3203e-01,8.4672e-01,-0.0000e+00,5.3203e-01,8.4672e-01,-0.0000e+00,6.2349e-01,7.8183e-01,-0.0000e+00,6.2349e-01,7.8183e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5790"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.6957e+00,-3.6640e+00,1.7650e+00,-4.6957e+00,-3.6640e+00,1.7650e+00,4.6957e+00,-3.6797e+00,1.7640e+00,-4.6957e+00,-3.6797e+00,1.7640e+00,4.6957e+00,-3.6951e+00,1.7609e+00,-4.6957e+00,-3.6951e+00,1.7609e+00,4.6957e+00,-3.7099e+00,1.7559e+00,-4.6957e+00,-3.7099e+00,1.7559e+00,4.6957e+00,-3.7240e+00,1.7489e+00,-4.6957e+00,-3.7240e+00,1.7489e+00,4.6957e+00,-3.7371e+00,1.7402e+00,-4.6957e+00,-3.7371e+00,1.7402e+00,4.6957e+00,-3.7489e+00,1.7299e+00,-4.6957e+00,-3.7489e+00,1.7299e+00,4.6957e+00,-3.7592e+00,1.7181e+00,-4.6957e+00,-3.7592e+00,1.7181e+00,4.6957e+00,-3.7679e+00,1.7050e+00,-4.6957e+00,-3.7679e+00,1.7050e+00,4.6957e+00,-3.7749e+00,1.6909e+00,-4.6957e+00,-3.7749e+00,1.6909e+00,4.6957e+00,-3.7799e+00,1.6761e+00,-4.6957e+00,-3.7799e+00,1.6761e+00,4.6957e+00,-3.7830e+00,1.6607e+00,-4.6957e+00,-3.7830e+00,1.6607e+00,4.6957e+00,-3.7840e+00,1.6450e+00,-4.6957e+00,-3.7840e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5807"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,40,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,40,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,40,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,40,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1136_point()))
            .setNormal(new Normal().setVector(getNormal_7_1137_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5824"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,40,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,40,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,40,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,40,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1143_point()))
            .setNormal(new Normal().setVector(getNormal_7_1144_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5842"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.3790e+00,2.9807e+00,1.7650e+00,-4.6957e+00,3.6640e+00,1.7650e+00,-5.3892e+00,2.9910e+00,1.7641e+00,-4.7060e+00,3.6742e+00,1.7641e+00,-5.3993e+00,3.0010e+00,1.7615e+00,-4.7160e+00,3.6843e+00,1.7615e+00,-5.4091e+00,3.0108e+00,1.7572e+00,-4.7258e+00,3.6941e+00,1.7572e+00,-5.4184e+00,3.0202e+00,1.7513e+00,-4.7352e+00,3.7034e+00,1.7513e+00,-5.4272e+00,3.0289e+00,1.7438e+00,-4.7439e+00,3.7122e+00,1.7438e+00,-5.4353e+00,3.0370e+00,1.7348e+00,-4.7520e+00,3.7203e+00,1.7348e+00,-5.4425e+00,3.0443e+00,1.7246e+00,-4.7593e+00,3.7275e+00,1.7246e+00,-5.4488e+00,3.0506e+00,1.7132e+00,-4.7656e+00,3.7338e+00,1.7132e+00,-5.4541e+00,3.0559e+00,1.7008e+00,-4.7709e+00,3.7391e+00,1.7008e+00,-5.4583e+00,3.0601e+00,1.6876e+00,-4.7751e+00,3.7433e+00,1.6876e+00,-5.4614e+00,3.0631e+00,1.6737e+00,-4.7781e+00,3.7464e+00,1.6737e+00,-5.4632e+00,3.0650e+00,1.6595e+00,-4.7800e+00,3.7482e+00,1.6595e+00,-5.4639e+00,3.0656e+00,1.6450e+00,-4.7806e+00,3.7489e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-4.1667e-08,4.1667e-08,-1.0000e+00,-4.1667e-08,4.1667e-08,-1.0000e+00,8.5232e-02,-8.5232e-02,-9.9271e-01,8.5232e-02,-8.5232e-02,-9.9271e-01,1.6922e-01,-1.6922e-01,-9.7094e-01,1.6922e-01,-1.6922e-01,-9.7094e-01,2.5074e-01,-2.5074e-01,-9.3502e-01,2.5074e-01,-2.5074e-01,-9.3502e-01,3.2861e-01,-3.2861e-01,-8.8546e-01,3.2861e-01,-3.2861e-01,-8.8546e-01,4.0168e-01,-4.0168e-01,-8.2298e-01,4.0168e-01,-4.0168e-01,-8.2298e-01,4.6890e-01,-4.6890e-01,-7.4851e-01,4.6890e-01,-4.6890e-01,-7.4851e-01,5.2928e-01,-5.2928e-01,-6.6312e-01,5.2928e-01,-5.2928e-01,-6.6312e-01,5.8194e-01,-5.8194e-01,-5.6806e-01,5.8194e-01,-5.8194e-01,-5.6806e-01,6.2611e-01,-6.2611e-01,-4.6472e-01,6.2611e-01,-6.2611e-01,-4.6472e-01,6.6116e-01,-6.6116e-01,-3.5460e-01,6.6116e-01,-6.6116e-01,-3.5460e-01,6.8656e-01,-6.8656e-01,-2.3932e-01,6.8656e-01,-6.8656e-01,-2.3932e-01,7.0195e-01,-7.0195e-01,-1.2054e-01,7.0195e-01,-7.0195e-01,-1.2054e-01,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5860"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.4990e+00,2.9807e+00,0.0000e+00,-5.4990e+00,2.9807e+00,1.6450e+00,-5.4982e+00,2.9942e+00,0.0000e+00,-5.4982e+00,2.9942e+00,1.6450e+00,-5.4960e+00,3.0074e+00,0.0000e+00,-5.4960e+00,3.0074e+00,1.6450e+00,-5.4923e+00,3.0204e+00,0.0000e+00,-5.4923e+00,3.0204e+00,1.6450e+00,-5.4871e+00,3.0328e+00,0.0000e+00,-5.4871e+00,3.0328e+00,1.6450e+00,-5.4806e+00,3.0446e+00,0.0000e+00,-5.4806e+00,3.0446e+00,1.6450e+00,-5.4728e+00,3.0556e+00,0.0000e+00,-5.4728e+00,3.0556e+00,1.6450e+00,-5.4639e+00,3.0656e+00,0.0000e+00,-5.4639e+00,3.0656e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9371e-01,-1.1196e-01,-0.0000e+00,9.9371e-01,-1.1196e-01,-0.0000e+00,9.7493e-01,-2.2252e-01,-0.0000e+00,9.7493e-01,-2.2252e-01,-0.0000e+00,9.4388e-01,-3.3028e-01,-0.0000e+00,9.4388e-01,-3.3028e-01,-0.0000e+00,9.0097e-01,-4.3388e-01,-0.0000e+00,9.0097e-01,-4.3388e-01,-0.0000e+00,8.4672e-01,-5.3203e-01,-0.0000e+00,8.4672e-01,-5.3203e-01,-0.0000e+00,7.8183e-01,-6.2349e-01,-0.0000e+00,7.8183e-01,-6.2349e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5878"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.4639e+00,-3.0656e+00,0.0000e+00,-5.4639e+00,-3.0656e+00,1.6450e+00,-5.4728e+00,-3.0556e+00,0.0000e+00,-5.4728e+00,-3.0556e+00,1.6450e+00,-5.4806e+00,-3.0446e+00,0.0000e+00,-5.4806e+00,-3.0446e+00,1.6450e+00,-5.4871e+00,-3.0328e+00,0.0000e+00,-5.4871e+00,-3.0328e+00,1.6450e+00,-5.4923e+00,-3.0204e+00,0.0000e+00,-5.4923e+00,-3.0204e+00,1.6450e+00,-5.4960e+00,-3.0074e+00,0.0000e+00,-5.4960e+00,-3.0074e+00,1.6450e+00,-5.4982e+00,-2.9942e+00,0.0000e+00,-5.4982e+00,-2.9942e+00,1.6450e+00,-5.4990e+00,-2.9807e+00,0.0000e+00,-5.4990e+00,-2.9807e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.8183e-01,6.2349e-01,-0.0000e+00,7.8183e-01,6.2349e-01,-0.0000e+00,8.4672e-01,5.3203e-01,-0.0000e+00,8.4672e-01,5.3203e-01,-0.0000e+00,9.0097e-01,4.3388e-01,-0.0000e+00,9.0097e-01,4.3388e-01,-0.0000e+00,9.4388e-01,3.3028e-01,-0.0000e+00,9.4388e-01,3.3028e-01,-0.0000e+00,9.7493e-01,2.2252e-01,-0.0000e+00,9.7493e-01,2.2252e-01,-0.0000e+00,9.9371e-01,1.1196e-01,-0.0000e+00,9.9371e-01,1.1196e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5896"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.6957e+00,-3.6640e+00,1.7650e+00,-5.3790e+00,-2.9807e+00,1.7650e+00,-4.7060e+00,-3.6742e+00,1.7641e+00,-5.3892e+00,-2.9910e+00,1.7641e+00,-4.7160e+00,-3.6843e+00,1.7615e+00,-5.3993e+00,-3.0010e+00,1.7615e+00,-4.7258e+00,-3.6941e+00,1.7572e+00,-5.4091e+00,-3.0108e+00,1.7572e+00,-4.7352e+00,-3.7034e+00,1.7513e+00,-5.4184e+00,-3.0202e+00,1.7513e+00,-4.7439e+00,-3.7122e+00,1.7438e+00,-5.4272e+00,-3.0289e+00,1.7438e+00,-4.7520e+00,-3.7203e+00,1.7348e+00,-5.4353e+00,-3.0370e+00,1.7348e+00,-4.7593e+00,-3.7275e+00,1.7246e+00,-5.4425e+00,-3.0443e+00,1.7246e+00,-4.7656e+00,-3.7338e+00,1.7132e+00,-5.4488e+00,-3.0506e+00,1.7132e+00,-4.7709e+00,-3.7391e+00,1.7008e+00,-5.4541e+00,-3.0559e+00,1.7008e+00,-4.7751e+00,-3.7433e+00,1.6876e+00,-5.4583e+00,-3.0601e+00,1.6876e+00,-4.7781e+00,-3.7464e+00,1.6737e+00,-5.4614e+00,-3.0631e+00,1.6737e+00,-4.7800e+00,-3.7482e+00,1.6595e+00,-5.4632e+00,-3.0650e+00,1.6595e+00,-4.7806e+00,-3.7489e+00,1.6450e+00,-5.4639e+00,-3.0656e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-4.1667e-08,-4.1667e-08,-1.0000e+00,-4.1667e-08,-4.1667e-08,-1.0000e+00,8.5232e-02,8.5232e-02,-9.9271e-01,8.5232e-02,8.5232e-02,-9.9271e-01,1.6922e-01,1.6922e-01,-9.7094e-01,1.6922e-01,1.6922e-01,-9.7094e-01,2.5074e-01,2.5074e-01,-9.3502e-01,2.5074e-01,2.5074e-01,-9.3502e-01,3.2861e-01,3.2861e-01,-8.8546e-01,3.2861e-01,3.2861e-01,-8.8546e-01,4.0168e-01,4.0168e-01,-8.2298e-01,4.0168e-01,4.0168e-01,-8.2298e-01,4.6890e-01,4.6890e-01,-7.4851e-01,4.6890e-01,4.6890e-01,-7.4851e-01,5.2928e-01,5.2928e-01,-6.6312e-01,5.2928e-01,5.2928e-01,-6.6312e-01,5.8194e-01,5.8194e-01,-5.6806e-01,5.8194e-01,5.8194e-01,-5.6806e-01,6.2611e-01,6.2611e-01,-4.6472e-01,6.2611e-01,6.2611e-01,-4.6472e-01,6.6116e-01,6.6116e-01,-3.5460e-01,6.6116e-01,6.6116e-01,-3.5460e-01,6.8656e-01,6.8656e-01,-2.3932e-01,6.8656e-01,6.8656e-01,-2.3932e-01,7.0195e-01,7.0195e-01,-1.2054e-01,7.0195e-01,7.0195e-01,-1.2054e-01,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5913"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,40,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,40,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,40,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,40,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1178_point()))
            .setNormal(new Normal().setVector(getNormal_7_1179_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5930"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,40,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,40,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,40,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,40,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1185_point()))
            .setNormal(new Normal().setVector(getNormal_7_1186_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5942"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.3790e+00,-2.9807e+00,1.7650e+00,-5.3790e+00,2.9807e+00,1.7650e+00,-5.3947e+00,-2.9807e+00,1.7640e+00,-5.3947e+00,2.9807e+00,1.7640e+00,-5.4101e+00,-2.9807e+00,1.7609e+00,-5.4101e+00,2.9807e+00,1.7609e+00,-5.4249e+00,-2.9807e+00,1.7559e+00,-5.4249e+00,2.9807e+00,1.7559e+00,-5.4390e+00,-2.9807e+00,1.7489e+00,-5.4390e+00,2.9807e+00,1.7489e+00,-5.4521e+00,-2.9807e+00,1.7402e+00,-5.4521e+00,2.9807e+00,1.7402e+00,-5.4639e+00,-2.9807e+00,1.7299e+00,-5.4639e+00,2.9807e+00,1.7299e+00,-5.4742e+00,-2.9807e+00,1.7181e+00,-5.4742e+00,2.9807e+00,1.7181e+00,-5.4829e+00,-2.9807e+00,1.7050e+00,-5.4829e+00,2.9807e+00,1.7050e+00,-5.4899e+00,-2.9807e+00,1.6909e+00,-5.4899e+00,2.9807e+00,1.6909e+00,-5.4949e+00,-2.9807e+00,1.6761e+00,-5.4949e+00,2.9807e+00,1.6761e+00,-5.4980e+00,-2.9807e+00,1.6607e+00,-5.4980e+00,2.9807e+00,1.6607e+00,-5.4990e+00,-2.9807e+00,1.6450e+00,-5.4990e+00,2.9807e+00,1.6450e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,1.0000e+00,-0.0000e+00,-6.1232e-17,1.0000e+00,-0.0000e+00,-6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5966"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7139e+00,3.1691e+00,4.6000e-01,5.7139e+00,3.1691e+00,1.7800e+00,5.7228e+00,3.1591e+00,4.6000e-01,5.7228e+00,3.1591e+00,1.7800e+00,5.7306e+00,3.1481e+00,4.6000e-01,5.7306e+00,3.1481e+00,1.7800e+00,5.7371e+00,3.1364e+00,4.6000e-01,5.7371e+00,3.1364e+00,1.7800e+00,5.7423e+00,3.1239e+00,4.6000e-01,5.7423e+00,3.1239e+00,1.7800e+00,5.7460e+00,3.1110e+00,4.6000e-01,5.7460e+00,3.1110e+00,1.7800e+00,5.7482e+00,3.0977e+00,4.6000e-01,5.7482e+00,3.0977e+00,1.7800e+00,5.7490e+00,3.0843e+00,4.6000e-01,5.7490e+00,3.0843e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.8183e-01,6.2349e-01,0.0000e+00,7.8183e-01,6.2349e-01,0.0000e+00,8.4672e-01,5.3203e-01,0.0000e+00,8.4672e-01,5.3203e-01,0.0000e+00,9.0097e-01,4.3388e-01,0.0000e+00,9.0097e-01,4.3388e-01,0.0000e+00,9.4388e-01,3.3028e-01,0.0000e+00,9.4388e-01,3.3028e-01,0.0000e+00,9.7493e-01,2.2252e-01,0.0000e+00,9.7493e-01,2.2252e-01,0.0000e+00,9.9371e-01,1.1196e-01,0.0000e+00,9.9371e-01,1.1196e-01,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#5990"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.7993e+00,4.0340e+00,4.6000e-01,4.7993e+00,4.0340e+00,1.7800e+00,4.8127e+00,4.0332e+00,4.6000e-01,4.8127e+00,4.0332e+00,1.7800e+00,4.8260e+00,4.0310e+00,4.6000e-01,4.8260e+00,4.0310e+00,1.7800e+00,4.8389e+00,4.0273e+00,4.6000e-01,4.8389e+00,4.0273e+00,1.7800e+00,4.8514e+00,4.0221e+00,4.6000e-01,4.8514e+00,4.0221e+00,1.7800e+00,4.8631e+00,4.0156e+00,4.6000e-01,4.8631e+00,4.0156e+00,1.7800e+00,4.8741e+00,4.0078e+00,4.6000e-01,4.8741e+00,4.0078e+00,1.7800e+00,4.8841e+00,3.9989e+00,4.6000e-01,4.8841e+00,3.9989e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,1.1196e-01,9.9371e-01,0.0000e+00,1.1196e-01,9.9371e-01,0.0000e+00,2.2252e-01,9.7493e-01,0.0000e+00,2.2252e-01,9.7493e-01,0.0000e+00,3.3028e-01,9.4388e-01,0.0000e+00,3.3028e-01,9.4388e-01,0.0000e+00,4.3388e-01,9.0097e-01,0.0000e+00,4.3388e-01,9.0097e-01,0.0000e+00,5.3203e-01,8.4672e-01,0.0000e+00,5.3203e-01,8.4672e-01,0.0000e+00,6.2349e-01,7.8183e-01,0.0000e+00,6.2349e-01,7.8183e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6014"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.7993e+00,3.9140e+00,1.9000e+00,5.6290e+00,3.0843e+00,1.9000e+00,4.8095e+00,3.9242e+00,1.8991e+00,5.6392e+00,3.0945e+00,1.8991e+00,4.8196e+00,3.9343e+00,1.8965e+00,5.6493e+00,3.1046e+00,1.8965e+00,4.8294e+00,3.9441e+00,1.8922e+00,5.6591e+00,3.1144e+00,1.8922e+00,4.8387e+00,3.9534e+00,1.8863e+00,5.6684e+00,3.1237e+00,1.8863e+00,4.8475e+00,3.9622e+00,1.8788e+00,5.6772e+00,3.1325e+00,1.8788e+00,4.8556e+00,3.9703e+00,1.8698e+00,5.6853e+00,3.1406e+00,1.8698e+00,4.8628e+00,3.9775e+00,1.8596e+00,5.6925e+00,3.1478e+00,1.8596e+00,4.8691e+00,3.9838e+00,1.8482e+00,5.6988e+00,3.1541e+00,1.8482e+00,4.8744e+00,3.9891e+00,1.8358e+00,5.7041e+00,3.1594e+00,1.8358e+00,4.8786e+00,3.9933e+00,1.8226e+00,5.7083e+00,3.1636e+00,1.8226e+00,4.8817e+00,3.9964e+00,1.8087e+00,5.7114e+00,3.1667e+00,1.8087e+00,4.8835e+00,3.9982e+00,1.7945e+00,5.7132e+00,3.1685e+00,1.7945e+00,4.8841e+00,3.9989e+00,1.7800e+00,5.7139e+00,3.1691e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-4.1667e-08,-4.1667e-08,1.0000e+00,-4.1667e-08,-4.1667e-08,1.0000e+00,8.5232e-02,8.5232e-02,9.9271e-01,8.5232e-02,8.5232e-02,9.9271e-01,1.6922e-01,1.6922e-01,9.7094e-01,1.6922e-01,1.6922e-01,9.7094e-01,2.5074e-01,2.5074e-01,9.3502e-01,2.5074e-01,2.5074e-01,9.3502e-01,3.2861e-01,3.2861e-01,8.8546e-01,3.2861e-01,3.2861e-01,8.8546e-01,4.0168e-01,4.0168e-01,8.2298e-01,4.0168e-01,4.0168e-01,8.2298e-01,4.6890e-01,4.6890e-01,7.4851e-01,4.6890e-01,4.6890e-01,7.4851e-01,5.2928e-01,5.2928e-01,6.6312e-01,5.2928e-01,5.2928e-01,6.6312e-01,5.8194e-01,5.8194e-01,5.6806e-01,5.8194e-01,5.8194e-01,5.6806e-01,6.2611e-01,6.2611e-01,4.6472e-01,6.2611e-01,6.2611e-01,4.6472e-01,6.6116e-01,6.6116e-01,3.5460e-01,6.6116e-01,6.6116e-01,3.5460e-01,6.8656e-01,6.8656e-01,2.3932e-01,6.8656e-01,6.8656e-01,2.3932e-01,7.0195e-01,7.0195e-01,1.2054e-01,7.0195e-01,7.0195e-01,1.2054e-01,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6031"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {40,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,40,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,40,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,40,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1220_point()))
            .setNormal(new Normal().setVector(getNormal_7_1221_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6048"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {40,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,40,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,40,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,40,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1227_point()))
            .setNormal(new Normal().setVector(getNormal_7_1228_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6066"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.6290e+00,3.0843e+00,1.9000e+00,5.6290e+00,-3.0843e+00,1.9000e+00,5.6447e+00,3.0843e+00,1.8990e+00,5.6447e+00,-3.0843e+00,1.8990e+00,5.6601e+00,3.0843e+00,1.8959e+00,5.6601e+00,-3.0843e+00,1.8959e+00,5.6749e+00,3.0843e+00,1.8909e+00,5.6749e+00,-3.0843e+00,1.8909e+00,5.6890e+00,3.0843e+00,1.8839e+00,5.6890e+00,-3.0843e+00,1.8839e+00,5.7021e+00,3.0843e+00,1.8752e+00,5.7021e+00,-3.0843e+00,1.8752e+00,5.7139e+00,3.0843e+00,1.8649e+00,5.7139e+00,-3.0843e+00,1.8649e+00,5.7242e+00,3.0843e+00,1.8531e+00,5.7242e+00,-3.0843e+00,1.8531e+00,5.7329e+00,3.0843e+00,1.8400e+00,5.7329e+00,-3.0843e+00,1.8400e+00,5.7399e+00,3.0843e+00,1.8259e+00,5.7399e+00,-3.0843e+00,1.8259e+00,5.7449e+00,3.0843e+00,1.8111e+00,5.7449e+00,-3.0843e+00,1.8111e+00,5.7480e+00,3.0843e+00,1.7957e+00,5.7480e+00,-3.0843e+00,1.7957e+00,5.7490e+00,3.0843e+00,1.7800e+00,5.7490e+00,-3.0843e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.2246e-16,0.0000e+00,1.0000e+00,-1.2246e-16,0.0000e+00,1.0000e+00,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,1.0000e+00,0.0000e+00,1.8370e-16,1.0000e+00,0.0000e+00,1.8370e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6090"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-3.0843e+00,4.6000e-01,5.7490e+00,-3.0843e+00,1.7800e+00,5.7482e+00,-3.0977e+00,4.6000e-01,5.7482e+00,-3.0977e+00,1.7800e+00,5.7460e+00,-3.1110e+00,4.6000e-01,5.7460e+00,-3.1110e+00,1.7800e+00,5.7423e+00,-3.1239e+00,4.6000e-01,5.7423e+00,-3.1239e+00,1.7800e+00,5.7371e+00,-3.1364e+00,4.6000e-01,5.7371e+00,-3.1364e+00,1.7800e+00,5.7306e+00,-3.1481e+00,4.6000e-01,5.7306e+00,-3.1481e+00,1.7800e+00,5.7228e+00,-3.1591e+00,4.6000e-01,5.7228e+00,-3.1591e+00,1.7800e+00,5.7139e+00,-3.1691e+00,4.6000e-01,5.7139e+00,-3.1691e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.0000e+00,-6.1232e-17,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,9.9371e-01,-1.1196e-01,0.0000e+00,9.9371e-01,-1.1196e-01,0.0000e+00,9.7493e-01,-2.2252e-01,0.0000e+00,9.7493e-01,-2.2252e-01,0.0000e+00,9.4388e-01,-3.3028e-01,0.0000e+00,9.4388e-01,-3.3028e-01,0.0000e+00,9.0097e-01,-4.3388e-01,0.0000e+00,9.0097e-01,-4.3388e-01,0.0000e+00,8.4672e-01,-5.3203e-01,0.0000e+00,8.4672e-01,-5.3203e-01,0.0000e+00,7.8183e-01,-6.2349e-01,0.0000e+00,7.8183e-01,-6.2349e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6114"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.8841e+00,3.9989e+00,4.6000e-01,-4.8841e+00,3.9989e+00,1.7800e+00,-4.8741e+00,4.0078e+00,4.6000e-01,-4.8741e+00,4.0078e+00,1.7800e+00,-4.8631e+00,4.0156e+00,4.6000e-01,-4.8631e+00,4.0156e+00,1.7800e+00,-4.8514e+00,4.0221e+00,4.6000e-01,-4.8514e+00,4.0221e+00,1.7800e+00,-4.8389e+00,4.0273e+00,4.6000e-01,-4.8389e+00,4.0273e+00,1.7800e+00,-4.8260e+00,4.0310e+00,4.6000e-01,-4.8260e+00,4.0310e+00,1.7800e+00,-4.8127e+00,4.0332e+00,4.6000e-01,-4.8127e+00,4.0332e+00,1.7800e+00,-4.7993e+00,4.0340e+00,4.6000e-01,-4.7993e+00,4.0340e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-6.2349e-01,7.8183e-01,0.0000e+00,-6.2349e-01,7.8183e-01,0.0000e+00,-5.3203e-01,8.4672e-01,0.0000e+00,-5.3203e-01,8.4672e-01,0.0000e+00,-4.3388e-01,9.0097e-01,0.0000e+00,-4.3388e-01,9.0097e-01,0.0000e+00,-3.3028e-01,9.4388e-01,0.0000e+00,-3.3028e-01,9.4388e-01,0.0000e+00,-2.2252e-01,9.7493e-01,0.0000e+00,-2.2252e-01,9.7493e-01,0.0000e+00,-1.1196e-01,9.9371e-01,0.0000e+00,-1.1196e-01,9.9371e-01,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6132"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7993e+00,3.9140e+00,1.9000e+00,4.7993e+00,3.9140e+00,1.9000e+00,-4.7993e+00,3.9297e+00,1.8990e+00,4.7993e+00,3.9297e+00,1.8990e+00,-4.7993e+00,3.9451e+00,1.8959e+00,4.7993e+00,3.9451e+00,1.8959e+00,-4.7993e+00,3.9599e+00,1.8909e+00,4.7993e+00,3.9599e+00,1.8909e+00,-4.7993e+00,3.9740e+00,1.8839e+00,4.7993e+00,3.9740e+00,1.8839e+00,-4.7993e+00,3.9871e+00,1.8752e+00,4.7993e+00,3.9871e+00,1.8752e+00,-4.7993e+00,3.9989e+00,1.8649e+00,4.7993e+00,3.9989e+00,1.8649e+00,-4.7993e+00,4.0092e+00,1.8531e+00,4.7993e+00,4.0092e+00,1.8531e+00,-4.7993e+00,4.0179e+00,1.8400e+00,4.7993e+00,4.0179e+00,1.8400e+00,-4.7993e+00,4.0249e+00,1.8259e+00,4.7993e+00,4.0249e+00,1.8259e+00,-4.7993e+00,4.0299e+00,1.8111e+00,4.7993e+00,4.0299e+00,1.8111e+00,-4.7993e+00,4.0330e+00,1.7957e+00,4.7993e+00,4.0330e+00,1.7957e+00,-4.7993e+00,4.0340e+00,1.7800e+00,4.7993e+00,4.0340e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,1.2246e-16,1.0000e+00,0.0000e+00,1.2246e-16,1.0000e+00,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,1.0000e+00,-6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6149"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {40,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,40,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,40,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,40,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1262_point()))
            .setNormal(new Normal().setVector(getNormal_7_1263_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6166"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {40,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,40,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,40,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,40,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1269_point()))
            .setNormal(new Normal().setVector(getNormal_7_1270_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6184"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.6290e+00,-3.0843e+00,1.9000e+00,4.7993e+00,-3.9140e+00,1.9000e+00,5.6392e+00,-3.0945e+00,1.8991e+00,4.8095e+00,-3.9242e+00,1.8991e+00,5.6493e+00,-3.1046e+00,1.8965e+00,4.8196e+00,-3.9343e+00,1.8965e+00,5.6591e+00,-3.1144e+00,1.8922e+00,4.8294e+00,-3.9441e+00,1.8922e+00,5.6684e+00,-3.1237e+00,1.8863e+00,4.8387e+00,-3.9534e+00,1.8863e+00,5.6772e+00,-3.1325e+00,1.8788e+00,4.8475e+00,-3.9622e+00,1.8788e+00,5.6853e+00,-3.1406e+00,1.8698e+00,4.8556e+00,-3.9703e+00,1.8698e+00,5.6925e+00,-3.1478e+00,1.8596e+00,4.8628e+00,-3.9775e+00,1.8596e+00,5.6988e+00,-3.1541e+00,1.8482e+00,4.8691e+00,-3.9838e+00,1.8482e+00,5.7041e+00,-3.1594e+00,1.8358e+00,4.8744e+00,-3.9891e+00,1.8358e+00,5.7083e+00,-3.1636e+00,1.8226e+00,4.8786e+00,-3.9933e+00,1.8226e+00,5.7114e+00,-3.1667e+00,1.8087e+00,4.8817e+00,-3.9964e+00,1.8087e+00,5.7132e+00,-3.1685e+00,1.7945e+00,4.8835e+00,-3.9982e+00,1.7945e+00,5.7139e+00,-3.1691e+00,1.7800e+00,4.8841e+00,-3.9989e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-4.1667e-08,4.1667e-08,1.0000e+00,-4.1667e-08,4.1667e-08,1.0000e+00,8.5232e-02,-8.5232e-02,9.9271e-01,8.5232e-02,-8.5232e-02,9.9271e-01,1.6922e-01,-1.6922e-01,9.7094e-01,1.6922e-01,-1.6922e-01,9.7094e-01,2.5074e-01,-2.5074e-01,9.3502e-01,2.5074e-01,-2.5074e-01,9.3502e-01,3.2861e-01,-3.2861e-01,8.8546e-01,3.2861e-01,-3.2861e-01,8.8546e-01,4.0168e-01,-4.0168e-01,8.2298e-01,4.0168e-01,-4.0168e-01,8.2298e-01,4.6890e-01,-4.6890e-01,7.4851e-01,4.6890e-01,-4.6890e-01,7.4851e-01,5.2928e-01,-5.2928e-01,6.6312e-01,5.2928e-01,-5.2928e-01,6.6312e-01,5.8194e-01,-5.8194e-01,5.6806e-01,5.8194e-01,-5.8194e-01,5.6806e-01,6.2611e-01,-6.2611e-01,4.6472e-01,6.2611e-01,-6.2611e-01,4.6472e-01,6.6116e-01,-6.6116e-01,3.5460e-01,6.6116e-01,-6.6116e-01,3.5460e-01,6.8656e-01,-6.8656e-01,2.3932e-01,6.8656e-01,-6.8656e-01,2.3932e-01,7.0195e-01,-7.0195e-01,1.2054e-01,7.0195e-01,-7.0195e-01,1.2054e-01,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6208"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.8841e+00,-3.9989e+00,4.6000e-01,4.8841e+00,-3.9989e+00,1.7800e+00,4.8741e+00,-4.0078e+00,4.6000e-01,4.8741e+00,-4.0078e+00,1.7800e+00,4.8631e+00,-4.0156e+00,4.6000e-01,4.8631e+00,-4.0156e+00,1.7800e+00,4.8514e+00,-4.0221e+00,4.6000e-01,4.8514e+00,-4.0221e+00,1.7800e+00,4.8389e+00,-4.0273e+00,4.6000e-01,4.8389e+00,-4.0273e+00,1.7800e+00,4.8260e+00,-4.0310e+00,4.6000e-01,4.8260e+00,-4.0310e+00,1.7800e+00,4.8127e+00,-4.0332e+00,4.6000e-01,4.8127e+00,-4.0332e+00,1.7800e+00,4.7993e+00,-4.0340e+00,4.6000e-01,4.7993e+00,-4.0340e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,6.2349e-01,-7.8183e-01,0.0000e+00,6.2349e-01,-7.8183e-01,0.0000e+00,5.3203e-01,-8.4672e-01,0.0000e+00,5.3203e-01,-8.4672e-01,0.0000e+00,4.3388e-01,-9.0097e-01,0.0000e+00,4.3388e-01,-9.0097e-01,0.0000e+00,3.3028e-01,-9.4388e-01,0.0000e+00,3.3028e-01,-9.4388e-01,0.0000e+00,2.2252e-01,-9.7493e-01,0.0000e+00,2.2252e-01,-9.7493e-01,0.0000e+00,1.1196e-01,-9.9371e-01,0.0000e+00,1.1196e-01,-9.9371e-01,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6232"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.7490e+00,3.0843e+00,4.6000e-01,-5.7490e+00,3.0843e+00,1.7800e+00,-5.7482e+00,3.0977e+00,4.6000e-01,-5.7482e+00,3.0977e+00,1.7800e+00,-5.7460e+00,3.1110e+00,4.6000e-01,-5.7460e+00,3.1110e+00,1.7800e+00,-5.7423e+00,3.1239e+00,4.6000e-01,-5.7423e+00,3.1239e+00,1.7800e+00,-5.7371e+00,3.1364e+00,4.6000e-01,-5.7371e+00,3.1364e+00,1.7800e+00,-5.7306e+00,3.1481e+00,4.6000e-01,-5.7306e+00,3.1481e+00,1.7800e+00,-5.7228e+00,3.1591e+00,4.6000e-01,-5.7228e+00,3.1591e+00,1.7800e+00,-5.7139e+00,3.1691e+00,4.6000e-01,-5.7139e+00,3.1691e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-9.9371e-01,1.1196e-01,0.0000e+00,-9.9371e-01,1.1196e-01,0.0000e+00,-9.7493e-01,2.2252e-01,0.0000e+00,-9.7493e-01,2.2252e-01,0.0000e+00,-9.4388e-01,3.3028e-01,0.0000e+00,-9.4388e-01,3.3028e-01,0.0000e+00,-9.0097e-01,4.3388e-01,0.0000e+00,-9.0097e-01,4.3388e-01,0.0000e+00,-8.4672e-01,5.3203e-01,0.0000e+00,-8.4672e-01,5.3203e-01,0.0000e+00,-7.8183e-01,6.2349e-01,0.0000e+00,-7.8183e-01,6.2349e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6250"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.6290e+00,3.0843e+00,1.9000e+00,-4.7993e+00,3.9140e+00,1.9000e+00,-5.6392e+00,3.0945e+00,1.8991e+00,-4.8095e+00,3.9242e+00,1.8991e+00,-5.6493e+00,3.1046e+00,1.8965e+00,-4.8196e+00,3.9343e+00,1.8965e+00,-5.6591e+00,3.1144e+00,1.8922e+00,-4.8294e+00,3.9441e+00,1.8922e+00,-5.6684e+00,3.1237e+00,1.8863e+00,-4.8387e+00,3.9534e+00,1.8863e+00,-5.6772e+00,3.1325e+00,1.8788e+00,-4.8475e+00,3.9622e+00,1.8788e+00,-5.6853e+00,3.1406e+00,1.8698e+00,-4.8556e+00,3.9703e+00,1.8698e+00,-5.6925e+00,3.1478e+00,1.8596e+00,-4.8628e+00,3.9775e+00,1.8596e+00,-5.6988e+00,3.1541e+00,1.8482e+00,-4.8691e+00,3.9838e+00,1.8482e+00,-5.7041e+00,3.1594e+00,1.8358e+00,-4.8744e+00,3.9891e+00,1.8358e+00,-5.7083e+00,3.1636e+00,1.8226e+00,-4.8786e+00,3.9933e+00,1.8226e+00,-5.7114e+00,3.1667e+00,1.8087e+00,-4.8817e+00,3.9964e+00,1.8087e+00,-5.7132e+00,3.1685e+00,1.7945e+00,-4.8835e+00,3.9982e+00,1.7945e+00,-5.7139e+00,3.1691e+00,1.7800e+00,-4.8841e+00,3.9989e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {4.1667e-08,-4.1667e-08,1.0000e+00,4.1667e-08,-4.1667e-08,1.0000e+00,-8.5232e-02,8.5232e-02,9.9271e-01,-8.5232e-02,8.5232e-02,9.9271e-01,-1.6922e-01,1.6922e-01,9.7094e-01,-1.6922e-01,1.6922e-01,9.7094e-01,-2.5074e-01,2.5074e-01,9.3502e-01,-2.5074e-01,2.5074e-01,9.3502e-01,-3.2861e-01,3.2861e-01,8.8546e-01,-3.2861e-01,3.2861e-01,8.8546e-01,-4.0168e-01,4.0168e-01,8.2298e-01,-4.0168e-01,4.0168e-01,8.2298e-01,-4.6890e-01,4.6890e-01,7.4851e-01,-4.6890e-01,4.6890e-01,7.4851e-01,-5.2928e-01,5.2928e-01,6.6312e-01,-5.2928e-01,5.2928e-01,6.6312e-01,-5.8194e-01,5.8194e-01,5.6806e-01,-5.8194e-01,5.8194e-01,5.6806e-01,-6.2611e-01,6.2611e-01,4.6472e-01,-6.2611e-01,6.2611e-01,4.6472e-01,-6.6116e-01,6.6116e-01,3.5460e-01,-6.6116e-01,6.6116e-01,3.5460e-01,-6.8656e-01,6.8656e-01,2.3932e-01,-6.8656e-01,6.8656e-01,2.3932e-01,-7.0195e-01,7.0195e-01,1.2054e-01,-7.0195e-01,7.0195e-01,1.2054e-01,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6267"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {40,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,40,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,40,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,40,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1304_point()))
            .setNormal(new Normal().setVector(getNormal_7_1305_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6284"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {40,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,40,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,40,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,40,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1311_point()))
            .setNormal(new Normal().setVector(getNormal_7_1312_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6302"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.7993e+00,-3.9140e+00,1.9000e+00,-4.7993e+00,-3.9140e+00,1.9000e+00,4.7993e+00,-3.9297e+00,1.8990e+00,-4.7993e+00,-3.9297e+00,1.8990e+00,4.7993e+00,-3.9451e+00,1.8959e+00,-4.7993e+00,-3.9451e+00,1.8959e+00,4.7993e+00,-3.9599e+00,1.8909e+00,-4.7993e+00,-3.9599e+00,1.8909e+00,4.7993e+00,-3.9740e+00,1.8839e+00,-4.7993e+00,-3.9740e+00,1.8839e+00,4.7993e+00,-3.9871e+00,1.8752e+00,-4.7993e+00,-3.9871e+00,1.8752e+00,4.7993e+00,-3.9989e+00,1.8649e+00,-4.7993e+00,-3.9989e+00,1.8649e+00,4.7993e+00,-4.0092e+00,1.8531e+00,-4.7993e+00,-4.0092e+00,1.8531e+00,4.7993e+00,-4.0179e+00,1.8400e+00,-4.7993e+00,-4.0179e+00,1.8400e+00,4.7993e+00,-4.0249e+00,1.8259e+00,-4.7993e+00,-4.0249e+00,1.8259e+00,4.7993e+00,-4.0299e+00,1.8111e+00,-4.7993e+00,-4.0299e+00,1.8111e+00,4.7993e+00,-4.0330e+00,1.7957e+00,-4.7993e+00,-4.0330e+00,1.7957e+00,4.7993e+00,-4.0340e+00,1.7800e+00,-4.7993e+00,-4.0340e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-1.0000e+00,6.1232e-17,0.0000e+00,-1.0000e+00,6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6326"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7993e+00,-4.0340e+00,4.6000e-01,-4.7993e+00,-4.0340e+00,1.7800e+00,-4.8127e+00,-4.0332e+00,4.6000e-01,-4.8127e+00,-4.0332e+00,1.7800e+00,-4.8260e+00,-4.0310e+00,4.6000e-01,-4.8260e+00,-4.0310e+00,1.7800e+00,-4.8389e+00,-4.0273e+00,4.6000e-01,-4.8389e+00,-4.0273e+00,1.7800e+00,-4.8514e+00,-4.0221e+00,4.6000e-01,-4.8514e+00,-4.0221e+00,1.7800e+00,-4.8631e+00,-4.0156e+00,4.6000e-01,-4.8631e+00,-4.0156e+00,1.7800e+00,-4.8741e+00,-4.0078e+00,4.6000e-01,-4.8741e+00,-4.0078e+00,1.7800e+00,-4.8841e+00,-3.9989e+00,4.6000e-01,-4.8841e+00,-3.9989e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,-1.0000e+00,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,-1.1196e-01,-9.9371e-01,0.0000e+00,-1.1196e-01,-9.9371e-01,0.0000e+00,-2.2252e-01,-9.7493e-01,0.0000e+00,-2.2252e-01,-9.7493e-01,0.0000e+00,-3.3028e-01,-9.4388e-01,0.0000e+00,-3.3028e-01,-9.4388e-01,0.0000e+00,-4.3388e-01,-9.0097e-01,0.0000e+00,-4.3388e-01,-9.0097e-01,0.0000e+00,-5.3203e-01,-8.4672e-01,0.0000e+00,-5.3203e-01,-8.4672e-01,0.0000e+00,-6.2349e-01,-7.8183e-01,0.0000e+00,-6.2349e-01,-7.8183e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6350"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.7139e+00,-3.1691e+00,4.6000e-01,-5.7139e+00,-3.1691e+00,1.7800e+00,-5.7228e+00,-3.1591e+00,4.6000e-01,-5.7228e+00,-3.1591e+00,1.7800e+00,-5.7306e+00,-3.1481e+00,4.6000e-01,-5.7306e+00,-3.1481e+00,1.7800e+00,-5.7371e+00,-3.1364e+00,4.6000e-01,-5.7371e+00,-3.1364e+00,1.7800e+00,-5.7423e+00,-3.1239e+00,4.6000e-01,-5.7423e+00,-3.1239e+00,1.7800e+00,-5.7460e+00,-3.1110e+00,4.6000e-01,-5.7460e+00,-3.1110e+00,1.7800e+00,-5.7482e+00,-3.0977e+00,4.6000e-01,-5.7482e+00,-3.0977e+00,1.7800e+00,-5.7490e+00,-3.0843e+00,4.6000e-01,-5.7490e+00,-3.0843e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.8183e-01,-6.2349e-01,0.0000e+00,-7.8183e-01,-6.2349e-01,0.0000e+00,-8.4672e-01,-5.3203e-01,0.0000e+00,-8.4672e-01,-5.3203e-01,0.0000e+00,-9.0097e-01,-4.3388e-01,0.0000e+00,-9.0097e-01,-4.3388e-01,0.0000e+00,-9.4388e-01,-3.3028e-01,0.0000e+00,-9.4388e-01,-3.3028e-01,0.0000e+00,-9.7493e-01,-2.2252e-01,0.0000e+00,-9.7493e-01,-2.2252e-01,0.0000e+00,-9.9371e-01,-1.1196e-01,0.0000e+00,-9.9371e-01,-1.1196e-01,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6368"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.6290e+00,-3.0843e+00,1.9000e+00,-5.6290e+00,3.0843e+00,1.9000e+00,-5.6447e+00,-3.0843e+00,1.8990e+00,-5.6447e+00,3.0843e+00,1.8990e+00,-5.6601e+00,-3.0843e+00,1.8959e+00,-5.6601e+00,3.0843e+00,1.8959e+00,-5.6749e+00,-3.0843e+00,1.8909e+00,-5.6749e+00,3.0843e+00,1.8909e+00,-5.6890e+00,-3.0843e+00,1.8839e+00,-5.6890e+00,3.0843e+00,1.8839e+00,-5.7021e+00,-3.0843e+00,1.8752e+00,-5.7021e+00,3.0843e+00,1.8752e+00,-5.7139e+00,-3.0843e+00,1.8649e+00,-5.7139e+00,3.0843e+00,1.8649e+00,-5.7242e+00,-3.0843e+00,1.8531e+00,-5.7242e+00,3.0843e+00,1.8531e+00,-5.7329e+00,-3.0843e+00,1.8400e+00,-5.7329e+00,3.0843e+00,1.8400e+00,-5.7399e+00,-3.0843e+00,1.8259e+00,-5.7399e+00,3.0843e+00,1.8259e+00,-5.7449e+00,-3.0843e+00,1.8111e+00,-5.7449e+00,3.0843e+00,1.8111e+00,-5.7480e+00,-3.0843e+00,1.7957e+00,-5.7480e+00,3.0843e+00,1.7957e+00,-5.7490e+00,-3.0843e+00,1.7800e+00,-5.7490e+00,3.0843e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00,1.0000e+00,-1.3053e-01,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.9144e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-5.0000e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,8.6603e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.9144e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,1.3053e-01,-1.0000e+00,0.0000e+00,6.1232e-17,-1.0000e+00,0.0000e+00,6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6385"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {40,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,40,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,40,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,40,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1346_point()))
            .setNormal(new Normal().setVector(getNormal_7_1347_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6402"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {40,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,40,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,40,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,40,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1353_point()))
            .setNormal(new Normal().setVector(getNormal_7_1354_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6414"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7993e+00,-3.9140e+00,1.9000e+00,-5.6290e+00,-3.0843e+00,1.9000e+00,-4.8095e+00,-3.9242e+00,1.8991e+00,-5.6392e+00,-3.0945e+00,1.8991e+00,-4.8196e+00,-3.9343e+00,1.8965e+00,-5.6493e+00,-3.1046e+00,1.8965e+00,-4.8294e+00,-3.9441e+00,1.8922e+00,-5.6591e+00,-3.1144e+00,1.8922e+00,-4.8387e+00,-3.9534e+00,1.8863e+00,-5.6684e+00,-3.1237e+00,1.8863e+00,-4.8475e+00,-3.9622e+00,1.8788e+00,-5.6772e+00,-3.1325e+00,1.8788e+00,-4.8556e+00,-3.9703e+00,1.8698e+00,-5.6853e+00,-3.1406e+00,1.8698e+00,-4.8628e+00,-3.9775e+00,1.8596e+00,-5.6925e+00,-3.1478e+00,1.8596e+00,-4.8691e+00,-3.9838e+00,1.8482e+00,-5.6988e+00,-3.1541e+00,1.8482e+00,-4.8744e+00,-3.9891e+00,1.8358e+00,-5.7041e+00,-3.1594e+00,1.8358e+00,-4.8786e+00,-3.9933e+00,1.8226e+00,-5.7083e+00,-3.1636e+00,1.8226e+00,-4.8817e+00,-3.9964e+00,1.8087e+00,-5.7114e+00,-3.1667e+00,1.8087e+00,-4.8835e+00,-3.9982e+00,1.7945e+00,-5.7132e+00,-3.1685e+00,1.7945e+00,-4.8841e+00,-3.9989e+00,1.7800e+00,-5.7139e+00,-3.1691e+00,1.7800e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {4.1667e-08,4.1667e-08,1.0000e+00,4.1667e-08,4.1667e-08,1.0000e+00,-8.5232e-02,-8.5232e-02,9.9271e-01,-8.5232e-02,-8.5232e-02,9.9271e-01,-1.6922e-01,-1.6922e-01,9.7094e-01,-1.6922e-01,-1.6922e-01,9.7094e-01,-2.5074e-01,-2.5074e-01,9.3502e-01,-2.5074e-01,-2.5074e-01,9.3502e-01,-3.2861e-01,-3.2861e-01,8.8546e-01,-3.2861e-01,-3.2861e-01,8.8546e-01,-4.0168e-01,-4.0168e-01,8.2298e-01,-4.0168e-01,-4.0168e-01,8.2298e-01,-4.6890e-01,-4.6890e-01,7.4851e-01,-4.6890e-01,-4.6890e-01,7.4851e-01,-5.2928e-01,-5.2928e-01,6.6312e-01,-5.2928e-01,-5.2928e-01,6.6312e-01,-5.8194e-01,-5.8194e-01,5.6806e-01,-5.8194e-01,-5.8194e-01,5.6806e-01,-6.2611e-01,-6.2611e-01,4.6472e-01,-6.2611e-01,-6.2611e-01,4.6472e-01,-6.6116e-01,-6.6116e-01,3.5460e-01,-6.6116e-01,-6.6116e-01,3.5460e-01,-6.8656e-01,-6.8656e-01,2.3932e-01,-6.8656e-01,-6.8656e-01,2.3932e-01,-7.0195e-01,-7.0195e-01,1.2054e-01,-7.0195e-01,-7.0195e-01,1.2054e-01,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6438"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {9,1,0,10,1,9,10,2,1,11,2,10,11,3,2,12,3,11,12,4,3,13,4,12,13,5,4,14,5,13,14,6,5,15,6,14,15,7,6,16,7,15,16,8,7,17,8,16,18,10,9,19,10,18,19,11,10,20,11,19,20,12,11,21,12,20,21,13,12,22,13,21,22,14,13,23,14,22,23,15,14,24,15,23,24,16,15,25,16,24,25,17,16,26,17,25,27,19,18,28,19,27,28,20,19,29,20,28,29,21,20,30,21,29,30,22,21,31,22,30,31,23,22,32,23,31,32,24,23,33,24,32,33,25,24,34,25,33,34,26,25,35,26,34,36,28,27,37,28,36,37,29,28,38,29,37,38,30,29,39,30,38,39,31,30,40,31,39,40,32,31,41,32,40,41,33,32,42,33,41,42,34,33,43,34,42,43,35,34,44,35,43,45,37,36,46,37,45,46,38,37,47,38,46,47,39,38,48,39,47,48,40,39,49,40,48,49,41,40,50,41,49,50,42,41,51,42,50,51,43,42,52,43,51,52,44,43,53,44,52}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1367_point()))
            .setNormal(new Normal().setVector(getNormal_7_1368_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6456"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.9266e+00,4.0413e+00,4.0000e-01,5.7563e+00,3.2116e+00,4.0000e-01,4.9210e+00,4.0357e+00,4.0051e-01,5.7507e+00,3.2060e+00,4.0051e-01,4.9156e+00,4.0303e+00,4.0204e-01,5.7453e+00,3.2006e+00,4.0204e-01,4.9103e+00,4.0250e+00,4.0457e-01,5.7400e+00,3.1953e+00,4.0457e-01,4.9054e+00,4.0201e+00,4.0804e-01,5.7351e+00,3.1904e+00,4.0804e-01,4.9007e+00,4.0155e+00,4.1240e-01,5.7305e+00,3.1857e+00,4.1240e-01,4.8966e+00,4.0113e+00,4.1757e-01,5.7263e+00,3.1816e+00,4.1757e-01,4.8929e+00,4.0076e+00,4.2347e-01,5.7226e+00,3.1779e+00,4.2347e-01,4.8898e+00,4.0045e+00,4.3000e-01,5.7195e+00,3.1748e+00,4.3000e-01,4.8874e+00,4.0021e+00,4.3704e-01,5.7171e+00,3.1724e+00,4.3704e-01,4.8856e+00,4.0003e+00,4.4447e-01,5.7153e+00,3.1706e+00,4.4447e-01,4.8845e+00,3.9992e+00,4.5217e-01,5.7142e+00,3.1695e+00,4.5217e-01,4.8841e+00,3.9989e+00,4.6000e-01,5.7139e+00,3.1691e+00,4.6000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {8.3333e-08,8.3333e-08,1.0000e+00,8.3333e-08,8.3333e-08,1.0000e+00,9.2296e-02,9.2296e-02,9.9144e-01,9.2296e-02,9.2296e-02,9.9144e-01,1.8301e-01,1.8301e-01,9.6593e-01,1.8301e-01,1.8301e-01,9.6593e-01,2.7060e-01,2.7060e-01,9.2388e-01,2.7060e-01,2.7060e-01,9.2388e-01,3.5355e-01,3.5355e-01,8.6603e-01,3.5355e-01,3.5355e-01,8.6603e-01,4.3046e-01,4.3046e-01,7.9335e-01,4.3046e-01,4.3046e-01,7.9335e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.6099e-01,5.6099e-01,6.0876e-01,5.6099e-01,5.6099e-01,6.0876e-01,6.1237e-01,6.1237e-01,5.0000e-01,6.1237e-01,6.1237e-01,5.0000e-01,6.5328e-01,6.5328e-01,3.8268e-01,6.5328e-01,6.5328e-01,3.8268e-01,6.8301e-01,6.8301e-01,2.5882e-01,6.8301e-01,6.8301e-01,2.5882e-01,7.0106e-01,7.0106e-01,1.3053e-01,7.0106e-01,7.0106e-01,1.3053e-01,7.0711e-01,7.0711e-01,1.2246e-16,7.0711e-01,7.0711e-01,1.2246e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6474"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.7993e+00,4.0940e+00,4.0000e-01,4.7993e+00,4.0940e+00,4.0000e-01,-4.7993e+00,4.0862e+00,4.0051e-01,4.7993e+00,4.0862e+00,4.0051e-01,-4.7993e+00,4.0785e+00,4.0204e-01,4.7993e+00,4.0785e+00,4.0204e-01,-4.7993e+00,4.0710e+00,4.0457e-01,4.7993e+00,4.0710e+00,4.0457e-01,-4.7993e+00,4.0640e+00,4.0804e-01,4.7993e+00,4.0640e+00,4.0804e-01,-4.7993e+00,4.0575e+00,4.1240e-01,4.7993e+00,4.0575e+00,4.1240e-01,-4.7993e+00,4.0516e+00,4.1757e-01,4.7993e+00,4.0516e+00,4.1757e-01,-4.7993e+00,4.0464e+00,4.2347e-01,4.7993e+00,4.0464e+00,4.2347e-01,-4.7993e+00,4.0420e+00,4.3000e-01,4.7993e+00,4.0420e+00,4.3000e-01,-4.7993e+00,4.0386e+00,4.3704e-01,4.7993e+00,4.0386e+00,4.3704e-01,-4.7993e+00,4.0360e+00,4.4447e-01,4.7993e+00,4.0360e+00,4.4447e-01,-4.7993e+00,4.0345e+00,4.5217e-01,4.7993e+00,4.0345e+00,4.5217e-01,-4.7993e+00,4.0340e+00,4.6000e-01,4.7993e+00,4.0340e+00,4.6000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6492"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {10,1,0,11,1,10,11,2,1,12,2,11,12,3,2,13,3,12,13,4,3,14,4,13,14,5,4,15,5,14,15,6,5,16,6,15,16,7,6,17,7,16,17,8,7,18,8,17,18,9,8,19,9,18,20,11,10,21,11,20,21,12,11,22,12,21,22,13,12,23,13,22,23,14,13,24,14,23,24,15,14,25,15,24,25,16,15,26,16,25,26,17,16,27,17,26,27,18,17,28,18,27,28,19,18,29,19,28,30,21,20,31,21,30,31,22,21,32,22,31,32,23,22,33,23,32,33,24,23,34,24,33,34,25,24,35,25,34,35,26,25,36,26,35,36,27,26,37,27,36,37,28,27,38,28,37,38,29,28,39,29,38,40,31,30,41,31,40,41,32,31,42,32,41,42,33,32,43,33,42,43,34,33,44,34,43,44,35,34,45,35,44,45,36,35,46,36,45,46,37,36,47,37,46,47,38,37,48,38,47,48,39,38,49,39,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1388_point()))
            .setNormal(new Normal().setVector(getNormal_7_1389_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6510"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {10,1,0,11,1,10,11,2,1,12,2,11,12,3,2,13,3,12,13,4,3,14,4,13,14,5,4,15,5,14,15,6,5,16,6,15,16,7,6,17,7,16,17,8,7,18,8,17,18,9,8,19,9,18,20,11,10,21,11,20,21,12,11,22,12,21,22,13,12,23,13,22,23,14,13,24,14,23,24,15,14,25,15,24,25,16,15,26,16,25,26,17,16,27,17,26,27,18,17,28,18,27,28,19,18,29,19,28,30,21,20,31,21,30,31,22,21,32,22,31,32,23,22,33,23,32,33,24,23,34,24,33,34,25,24,35,25,34,35,26,25,36,26,35,36,27,26,37,27,36,37,28,27,38,28,37,38,29,28,39,29,38,40,31,30,41,31,40,41,32,31,42,32,41,42,33,32,43,33,42,43,34,33,44,34,43,44,35,34,45,35,44,45,36,35,46,36,45,46,37,36,47,37,46,47,38,37,48,38,47,48,39,38,49,39,48,50,41,40,51,41,50,51,42,41,52,42,51,52,43,42,53,43,52,53,44,43,54,44,53,54,45,44,55,45,54,55,46,45,56,46,55,56,47,46,57,47,56,57,48,47,58,48,57,58,49,48,59,49,58}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1395_point()))
            .setNormal(new Normal().setVector(getNormal_7_1396_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6528"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.8090e+00,3.0843e+00,4.0000e-01,5.8090e+00,-3.0843e+00,4.0000e-01,5.8012e+00,3.0843e+00,4.0051e-01,5.8012e+00,-3.0843e+00,4.0051e-01,5.7935e+00,3.0843e+00,4.0204e-01,5.7935e+00,-3.0843e+00,4.0204e-01,5.7860e+00,3.0843e+00,4.0457e-01,5.7860e+00,-3.0843e+00,4.0457e-01,5.7790e+00,3.0843e+00,4.0804e-01,5.7790e+00,-3.0843e+00,4.0804e-01,5.7725e+00,3.0843e+00,4.1240e-01,5.7725e+00,-3.0843e+00,4.1240e-01,5.7666e+00,3.0843e+00,4.1757e-01,5.7666e+00,-3.0843e+00,4.1757e-01,5.7614e+00,3.0843e+00,4.2347e-01,5.7614e+00,-3.0843e+00,4.2347e-01,5.7570e+00,3.0843e+00,4.3000e-01,5.7570e+00,-3.0843e+00,4.3000e-01,5.7536e+00,3.0843e+00,4.3704e-01,5.7536e+00,-3.0843e+00,4.3704e-01,5.7510e+00,3.0843e+00,4.4447e-01,5.7510e+00,-3.0843e+00,4.4447e-01,5.7495e+00,3.0843e+00,4.5217e-01,5.7495e+00,-3.0843e+00,4.5217e-01,5.7490e+00,3.0843e+00,4.6000e-01,5.7490e+00,-3.0843e+00,4.6000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,1.0000e+00,-0.0000e+00,6.1232e-17,1.0000e+00,-0.0000e+00,6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6546"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.7563e+00,3.2116e+00,4.0000e-01,-4.9266e+00,4.0413e+00,4.0000e-01,-5.7507e+00,3.2060e+00,4.0051e-01,-4.9210e+00,4.0357e+00,4.0051e-01,-5.7453e+00,3.2006e+00,4.0204e-01,-4.9156e+00,4.0303e+00,4.0204e-01,-5.7400e+00,3.1953e+00,4.0457e-01,-4.9103e+00,4.0250e+00,4.0457e-01,-5.7351e+00,3.1904e+00,4.0804e-01,-4.9054e+00,4.0201e+00,4.0804e-01,-5.7305e+00,3.1857e+00,4.1240e-01,-4.9007e+00,4.0155e+00,4.1240e-01,-5.7263e+00,3.1816e+00,4.1757e-01,-4.8966e+00,4.0113e+00,4.1757e-01,-5.7226e+00,3.1779e+00,4.2347e-01,-4.8929e+00,4.0076e+00,4.2347e-01,-5.7195e+00,3.1748e+00,4.3000e-01,-4.8898e+00,4.0045e+00,4.3000e-01,-5.7171e+00,3.1724e+00,4.3704e-01,-4.8874e+00,4.0021e+00,4.3704e-01,-5.7153e+00,3.1706e+00,4.4447e-01,-4.8856e+00,4.0003e+00,4.4447e-01,-5.7142e+00,3.1695e+00,4.5217e-01,-4.8845e+00,3.9992e+00,4.5217e-01,-5.7139e+00,3.1691e+00,4.6000e-01,-4.8841e+00,3.9989e+00,4.6000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-8.3333e-08,8.3333e-08,1.0000e+00,-8.3333e-08,8.3333e-08,1.0000e+00,-9.2296e-02,9.2296e-02,9.9144e-01,-9.2296e-02,9.2296e-02,9.9144e-01,-1.8301e-01,1.8301e-01,9.6593e-01,-1.8301e-01,1.8301e-01,9.6593e-01,-2.7060e-01,2.7060e-01,9.2388e-01,-2.7060e-01,2.7060e-01,9.2388e-01,-3.5355e-01,3.5355e-01,8.6603e-01,-3.5355e-01,3.5355e-01,8.6603e-01,-4.3046e-01,4.3046e-01,7.9335e-01,-4.3046e-01,4.3046e-01,7.9335e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-5.6099e-01,5.6099e-01,6.0876e-01,-5.6099e-01,5.6099e-01,6.0876e-01,-6.1237e-01,6.1237e-01,5.0000e-01,-6.1237e-01,6.1237e-01,5.0000e-01,-6.5328e-01,6.5328e-01,3.8268e-01,-6.5328e-01,6.5328e-01,3.8268e-01,-6.8301e-01,6.8301e-01,2.5882e-01,-6.8301e-01,6.8301e-01,2.5882e-01,-7.0106e-01,7.0106e-01,1.3053e-01,-7.0106e-01,7.0106e-01,1.3053e-01,-7.0711e-01,7.0711e-01,1.2246e-16,-7.0711e-01,7.0711e-01,1.2246e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6564"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {9,1,0,10,1,9,10,2,1,11,2,10,11,3,2,12,3,11,12,4,3,13,4,12,13,5,4,14,5,13,14,6,5,15,6,14,15,7,6,16,7,15,16,8,7,17,8,16,18,10,9,19,10,18,19,11,10,20,11,19,20,12,11,21,12,20,21,13,12,22,13,21,22,14,13,23,14,22,23,15,14,24,15,23,24,16,15,25,16,24,25,17,16,26,17,25,27,19,18,28,19,27,28,20,19,29,20,28,29,21,20,30,21,29,30,22,21,31,22,30,31,23,22,32,23,31,32,24,23,33,24,32,33,25,24,34,25,33,34,26,25,35,26,34,36,28,27,37,28,36,37,29,28,38,29,37,38,30,29,39,30,38,39,31,30,40,31,39,40,32,31,41,32,40,41,33,32,42,33,41,42,34,33,43,34,42,43,35,34,44,35,43}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1416_point()))
            .setNormal(new Normal().setVector(getNormal_7_1417_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6582"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {9,1,0,10,1,9,10,2,1,11,2,10,11,3,2,12,3,11,12,4,3,13,4,12,13,5,4,14,5,13,14,6,5,15,6,14,15,7,6,16,7,15,16,8,7,17,8,16,18,10,9,19,10,18,19,11,10,20,11,19,20,12,11,21,12,20,21,13,12,22,13,21,22,14,13,23,14,22,23,15,14,24,15,23,24,16,15,25,16,24,25,17,16,26,17,25,27,19,18,28,19,27,28,20,19,29,20,28,29,21,20,30,21,29,30,22,21,31,22,30,31,23,22,32,23,31,32,24,23,33,24,32,33,25,24,34,25,33,34,26,25,35,26,34,36,28,27,37,28,36,37,29,28,38,29,37,38,30,29,39,30,38,39,31,30,40,31,39,40,32,31,41,32,40,41,33,32,42,33,41,42,34,33,43,34,42,43,35,34,44,35,43}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1423_point()))
            .setNormal(new Normal().setVector(getNormal_7_1424_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6600"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7563e+00,-3.2116e+00,4.0000e-01,4.9266e+00,-4.0413e+00,4.0000e-01,5.7507e+00,-3.2060e+00,4.0051e-01,4.9210e+00,-4.0357e+00,4.0051e-01,5.7453e+00,-3.2006e+00,4.0204e-01,4.9156e+00,-4.0303e+00,4.0204e-01,5.7400e+00,-3.1953e+00,4.0457e-01,4.9103e+00,-4.0250e+00,4.0457e-01,5.7351e+00,-3.1904e+00,4.0804e-01,4.9054e+00,-4.0201e+00,4.0804e-01,5.7305e+00,-3.1857e+00,4.1240e-01,4.9007e+00,-4.0155e+00,4.1240e-01,5.7263e+00,-3.1816e+00,4.1757e-01,4.8966e+00,-4.0113e+00,4.1757e-01,5.7226e+00,-3.1779e+00,4.2347e-01,4.8929e+00,-4.0076e+00,4.2347e-01,5.7195e+00,-3.1748e+00,4.3000e-01,4.8898e+00,-4.0045e+00,4.3000e-01,5.7171e+00,-3.1724e+00,4.3704e-01,4.8874e+00,-4.0021e+00,4.3704e-01,5.7153e+00,-3.1706e+00,4.4447e-01,4.8856e+00,-4.0003e+00,4.4447e-01,5.7142e+00,-3.1695e+00,4.5217e-01,4.8845e+00,-3.9992e+00,4.5217e-01,5.7139e+00,-3.1691e+00,4.6000e-01,4.8841e+00,-3.9989e+00,4.6000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {8.3333e-08,-8.3333e-08,1.0000e+00,8.3333e-08,-8.3333e-08,1.0000e+00,9.2296e-02,-9.2296e-02,9.9144e-01,9.2296e-02,-9.2296e-02,9.9144e-01,1.8301e-01,-1.8301e-01,9.6593e-01,1.8301e-01,-1.8301e-01,9.6593e-01,2.7060e-01,-2.7060e-01,9.2388e-01,2.7060e-01,-2.7060e-01,9.2388e-01,3.5355e-01,-3.5355e-01,8.6603e-01,3.5355e-01,-3.5355e-01,8.6603e-01,4.3046e-01,-4.3046e-01,7.9335e-01,4.3046e-01,-4.3046e-01,7.9335e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.6099e-01,-5.6099e-01,6.0876e-01,5.6099e-01,-5.6099e-01,6.0876e-01,6.1237e-01,-6.1237e-01,5.0000e-01,6.1237e-01,-6.1237e-01,5.0000e-01,6.5328e-01,-6.5328e-01,3.8268e-01,6.5328e-01,-6.5328e-01,3.8268e-01,6.8301e-01,-6.8301e-01,2.5882e-01,6.8301e-01,-6.8301e-01,2.5882e-01,7.0106e-01,-7.0106e-01,1.3053e-01,7.0106e-01,-7.0106e-01,1.3053e-01,7.0711e-01,-7.0711e-01,1.2246e-16,7.0711e-01,-7.0711e-01,1.2246e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6618"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.8090e+00,-3.0843e+00,4.0000e-01,-5.8090e+00,3.0843e+00,4.0000e-01,-5.8012e+00,-3.0843e+00,4.0051e-01,-5.8012e+00,3.0843e+00,4.0051e-01,-5.7935e+00,-3.0843e+00,4.0204e-01,-5.7935e+00,3.0843e+00,4.0204e-01,-5.7860e+00,-3.0843e+00,4.0457e-01,-5.7860e+00,3.0843e+00,4.0457e-01,-5.7790e+00,-3.0843e+00,4.0804e-01,-5.7790e+00,3.0843e+00,4.0804e-01,-5.7725e+00,-3.0843e+00,4.1240e-01,-5.7725e+00,3.0843e+00,4.1240e-01,-5.7666e+00,-3.0843e+00,4.1757e-01,-5.7666e+00,3.0843e+00,4.1757e-01,-5.7614e+00,-3.0843e+00,4.2347e-01,-5.7614e+00,3.0843e+00,4.2347e-01,-5.7570e+00,-3.0843e+00,4.3000e-01,-5.7570e+00,3.0843e+00,4.3000e-01,-5.7536e+00,-3.0843e+00,4.3704e-01,-5.7536e+00,3.0843e+00,4.3704e-01,-5.7510e+00,-3.0843e+00,4.4447e-01,-5.7510e+00,3.0843e+00,4.4447e-01,-5.7495e+00,-3.0843e+00,4.5217e-01,-5.7495e+00,3.0843e+00,4.5217e-01,-5.7490e+00,-3.0843e+00,4.6000e-01,-5.7490e+00,3.0843e+00,4.6000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {1.2246e-16,-0.0000e+00,1.0000e+00,1.2246e-16,-0.0000e+00,1.0000e+00,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-1.0000e+00,-0.0000e+00,1.8370e-16,-1.0000e+00,-0.0000e+00,1.8370e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6636"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {10,1,0,11,1,10,11,2,1,12,2,11,12,3,2,13,3,12,13,4,3,14,4,13,14,5,4,15,5,14,15,6,5,16,6,15,16,7,6,17,7,16,17,8,7,18,8,17,18,9,8,19,9,18,20,11,10,21,11,20,21,12,11,22,12,21,22,13,12,23,13,22,23,14,13,24,14,23,24,15,14,25,15,24,25,16,15,26,16,25,26,17,16,27,17,26,27,18,17,28,18,27,28,19,18,29,19,28,30,21,20,31,21,30,31,22,21,32,22,31,32,23,22,33,23,32,33,24,23,34,24,33,34,25,24,35,25,34,35,26,25,36,26,35,36,27,26,37,27,36,37,28,27,38,28,37,38,29,28,39,29,38,40,31,30,41,31,40,41,32,31,42,32,41,42,33,32,43,33,42,43,34,33,44,34,43,44,35,34,45,35,44,45,36,35,46,36,45,46,37,36,47,37,46,47,38,37,48,38,47,48,39,38,49,39,48,50,41,40,51,41,50,51,42,41,52,42,51,52,43,42,53,43,52,53,44,43,54,44,53,54,45,44,55,45,54,55,46,45,56,46,55,56,47,46,57,47,56,57,48,47,58,48,57,58,49,48,59,49,58}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1444_point()))
            .setNormal(new Normal().setVector(getNormal_7_1445_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6654"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {10,1,0,11,1,10,11,2,1,12,2,11,12,3,2,13,3,12,13,4,3,14,4,13,14,5,4,15,5,14,15,6,5,16,6,15,16,7,6,17,7,16,17,8,7,18,8,17,18,9,8,19,9,18,20,11,10,21,11,20,21,12,11,22,12,21,22,13,12,23,13,22,23,14,13,24,14,23,24,15,14,25,15,24,25,16,15,26,16,25,26,17,16,27,17,26,27,18,17,28,18,27,28,19,18,29,19,28,30,21,20,31,21,30,31,22,21,32,22,31,32,23,22,33,23,32,33,24,23,34,24,33,34,25,24,35,25,34,35,26,25,36,26,35,36,27,26,37,27,36,37,28,27,38,28,37,38,29,28,39,29,38,40,31,30,41,31,40,41,32,31,42,32,41,42,33,32,43,33,42,43,34,33,44,34,43,44,35,34,45,35,44,45,36,35,46,36,45,46,37,36,47,37,46,47,38,37,48,38,47,48,39,38,49,39,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1451_point()))
            .setNormal(new Normal().setVector(getNormal_7_1452_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6672"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {4.7993e+00,-4.0940e+00,4.0000e-01,-4.7993e+00,-4.0940e+00,4.0000e-01,4.7993e+00,-4.0862e+00,4.0051e-01,-4.7993e+00,-4.0862e+00,4.0051e-01,4.7993e+00,-4.0785e+00,4.0204e-01,-4.7993e+00,-4.0785e+00,4.0204e-01,4.7993e+00,-4.0710e+00,4.0457e-01,-4.7993e+00,-4.0710e+00,4.0457e-01,4.7993e+00,-4.0640e+00,4.0804e-01,-4.7993e+00,-4.0640e+00,4.0804e-01,4.7993e+00,-4.0575e+00,4.1240e-01,-4.7993e+00,-4.0575e+00,4.1240e-01,4.7993e+00,-4.0516e+00,4.1757e-01,-4.7993e+00,-4.0516e+00,4.1757e-01,4.7993e+00,-4.0464e+00,4.2347e-01,-4.7993e+00,-4.0464e+00,4.2347e-01,4.7993e+00,-4.0420e+00,4.3000e-01,-4.7993e+00,-4.0420e+00,4.3000e-01,4.7993e+00,-4.0386e+00,4.3704e-01,-4.7993e+00,-4.0386e+00,4.3704e-01,4.7993e+00,-4.0360e+00,4.4447e-01,-4.7993e+00,-4.0360e+00,4.4447e-01,4.7993e+00,-4.0345e+00,4.5217e-01,-4.7993e+00,-4.0345e+00,4.5217e-01,4.7993e+00,-4.0340e+00,4.6000e-01,-4.7993e+00,-4.0340e+00,4.6000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6690"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-4.9266e+00,-4.0413e+00,4.0000e-01,-5.7563e+00,-3.2116e+00,4.0000e-01,-4.9210e+00,-4.0357e+00,4.0051e-01,-5.7507e+00,-3.2060e+00,4.0051e-01,-4.9156e+00,-4.0303e+00,4.0204e-01,-5.7453e+00,-3.2006e+00,4.0204e-01,-4.9103e+00,-4.0250e+00,4.0457e-01,-5.7400e+00,-3.1953e+00,4.0457e-01,-4.9054e+00,-4.0201e+00,4.0804e-01,-5.7351e+00,-3.1904e+00,4.0804e-01,-4.9007e+00,-4.0155e+00,4.1240e-01,-5.7305e+00,-3.1857e+00,4.1240e-01,-4.8966e+00,-4.0113e+00,4.1757e-01,-5.7263e+00,-3.1816e+00,4.1757e-01,-4.8929e+00,-4.0076e+00,4.2347e-01,-5.7226e+00,-3.1779e+00,4.2347e-01,-4.8898e+00,-4.0045e+00,4.3000e-01,-5.7195e+00,-3.1748e+00,4.3000e-01,-4.8874e+00,-4.0021e+00,4.3704e-01,-5.7171e+00,-3.1724e+00,4.3704e-01,-4.8856e+00,-4.0003e+00,4.4447e-01,-5.7153e+00,-3.1706e+00,4.4447e-01,-4.8845e+00,-3.9992e+00,4.5217e-01,-5.7142e+00,-3.1695e+00,4.5217e-01,-4.8841e+00,-3.9989e+00,4.6000e-01,-5.7139e+00,-3.1691e+00,4.6000e-01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-8.3333e-08,-8.3333e-08,1.0000e+00,-8.3333e-08,-8.3333e-08,1.0000e+00,-9.2296e-02,-9.2296e-02,9.9144e-01,-9.2296e-02,-9.2296e-02,9.9144e-01,-1.8301e-01,-1.8301e-01,9.6593e-01,-1.8301e-01,-1.8301e-01,9.6593e-01,-2.7060e-01,-2.7060e-01,9.2388e-01,-2.7060e-01,-2.7060e-01,9.2388e-01,-3.5355e-01,-3.5355e-01,8.6603e-01,-3.5355e-01,-3.5355e-01,8.6603e-01,-4.3046e-01,-4.3046e-01,7.9335e-01,-4.3046e-01,-4.3046e-01,7.9335e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.6099e-01,-5.6099e-01,6.0876e-01,-5.6099e-01,-5.6099e-01,6.0876e-01,-6.1237e-01,-6.1237e-01,5.0000e-01,-6.1237e-01,-6.1237e-01,5.0000e-01,-6.5328e-01,-6.5328e-01,3.8268e-01,-6.5328e-01,-6.5328e-01,3.8268e-01,-6.8301e-01,-6.8301e-01,2.5882e-01,-6.8301e-01,-6.8301e-01,2.5882e-01,-7.0106e-01,-7.0106e-01,1.3053e-01,-7.0106e-01,-7.0106e-01,1.3053e-01,-7.0711e-01,-7.0711e-01,1.2246e-16,-7.0711e-01,-7.0711e-01,1.2246e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6702"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {9,1,0,10,1,9,10,2,1,11,2,10,11,3,2,12,3,11,12,4,3,13,4,12,13,5,4,14,5,13,14,6,5,15,6,14,15,7,6,16,7,15,16,8,7,17,8,16,18,10,9,19,10,18,19,11,10,20,11,19,20,12,11,21,12,20,21,13,12,22,13,21,22,14,13,23,14,22,23,15,14,24,15,23,24,16,15,25,16,24,25,17,16,26,17,25,27,19,18,28,19,27,28,20,19,29,20,28,29,21,20,30,21,29,30,22,21,31,22,30,31,23,22,32,23,31,32,24,23,33,24,32,33,25,24,34,25,33,34,26,25,35,26,34,36,28,27,37,28,36,37,29,28,38,29,37,38,30,29,39,30,38,39,31,30,40,31,39,40,32,31,41,32,40,41,33,32,42,33,41,42,34,33,43,34,42,43,35,34,44,35,43,45,37,36,46,37,45,46,38,37,47,38,46,47,39,38,48,39,47,48,40,39,49,40,48,49,41,40,50,41,49,50,42,41,51,42,50,51,43,42,52,43,51,52,44,43,53,44,52}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1472_point()))
            .setNormal(new Normal().setVector(getNormal_7_1473_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6734"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-2.4248e-01,1.1652e+00,5.6490e+00,-2.4248e-01,1.1652e+00,5.7490e+00,-2.4106e-01,1.1436e+00,5.6490e+00,-2.4106e-01,1.1436e+00,5.7490e+00,-2.3685e-01,1.1224e+00,5.6490e+00,-2.3685e-01,1.1224e+00,5.7490e+00,-2.2990e-01,1.1020e+00,5.6490e+00,-2.2990e-01,1.1020e+00,5.7490e+00,-2.2035e-01,1.0826e+00,5.6490e+00,-2.2035e-01,1.0826e+00,5.7490e+00,-2.0834e-01,1.0646e+00,5.6490e+00,-2.0834e-01,1.0646e+00,5.7490e+00,-1.9409e-01,1.0484e+00,5.6490e+00,-1.9409e-01,1.0484e+00,5.7490e+00,-1.7785e-01,1.0341e+00,5.6490e+00,-1.7785e-01,1.0341e+00,5.7490e+00,-1.5988e-01,1.0221e+00,5.6490e+00,-1.5988e-01,1.0221e+00,5.7490e+00,-1.4050e-01,1.0126e+00,5.6490e+00,-1.4050e-01,1.0126e+00,5.7490e+00,-1.2004e-01,1.0056e+00,5.6490e+00,-1.2004e-01,1.0056e+00,5.7490e+00,-9.8851e-02,1.0014e+00,5.6490e+00,-9.8851e-02,1.0014e+00,5.7490e+00,-7.7290e-02,1.0000e+00,5.6490e+00,-7.7290e-02,1.0000e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6758"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-7.7290e-02,1.0000e+00,5.7490e+00,5.2115e-01,1.0000e+00,5.6490e+00,5.2115e-01,1.0000e+00,5.7490e+00,-7.7290e-02,1.0000e+00,5.6490e+00,5.2115e-01,1.0000e+00,5.6490e+00,-7.7290e-02,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6783"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1492_point()))
            .setNormal(new Normal().setVector(getNormal_7_1493_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6807"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,5.2115e-01,1.3552e+00,5.7490e+00,1.4215e-01,1.3552e+00,5.6490e+00,1.4215e-01,1.3552e+00,5.7490e+00,5.2115e-01,1.3552e+00,5.6490e+00,1.4215e-01,1.3552e+00,5.6490e+00,5.2115e-01,1.3552e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6832"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45,46,44,45,46,45,47,48,46,47,48,47,49,50,48,49,50,49,51}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1505_point()))
            .setNormal(new Normal().setVector(getNormal_7_1506_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6856"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,1.4667e-01,1.4661e+00,5.7490e+00,7.6439e-01,1.4661e+00,5.6490e+00,7.6439e-01,1.4661e+00,5.7490e+00,1.4667e-01,1.4661e+00,5.6490e+00,7.6439e-01,1.4661e+00,5.6490e+00,1.4667e-01,1.4661e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6880"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,7.6439e-01,1.4661e+00,5.7490e+00,7.6439e-01,1.0000e+00,5.6490e+00,7.6439e-01,1.0000e+00,5.7490e+00,7.6439e-01,1.4661e+00,5.6490e+00,7.6439e-01,1.0000e+00,5.6490e+00,7.6439e-01,1.4661e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6904"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,7.6439e-01,1.0000e+00,5.7490e+00,8.8654e-01,1.0000e+00,5.6490e+00,8.8654e-01,1.0000e+00,5.7490e+00,7.6439e-01,1.0000e+00,5.6490e+00,8.8654e-01,1.0000e+00,5.6490e+00,7.6439e-01,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6928"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,8.8654e-01,1.0000e+00,5.7490e+00,8.8654e-01,1.4661e+00,5.6490e+00,8.8654e-01,1.4661e+00,5.7490e+00,8.8654e-01,1.0000e+00,5.6490e+00,8.8654e-01,1.4661e+00,5.6490e+00,8.8654e-01,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6952"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,8.8654e-01,1.4661e+00,5.7490e+00,1.1389e+00,1.4661e+00,5.6490e+00,1.1389e+00,1.4661e+00,5.7490e+00,8.8654e-01,1.4661e+00,5.6490e+00,1.1389e+00,1.4661e+00,5.6490e+00,8.8654e-01,1.4661e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#6976"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,1.1389e+00,1.4661e+00,5.7490e+00,1.1389e+00,1.5906e+00,5.6490e+00,1.1389e+00,1.5906e+00,5.7490e+00,1.1389e+00,1.4661e+00,5.6490e+00,1.1389e+00,1.5906e+00,5.6490e+00,1.1389e+00,1.4661e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7000"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,1.1389e+00,1.5906e+00,5.7490e+00,1.3087e-01,1.5906e+00,5.6490e+00,1.3087e-01,1.5906e+00,5.7490e+00,1.1389e+00,1.5906e+00,5.6490e+00,1.3087e-01,1.5906e+00,5.6490e+00,1.1389e+00,1.5906e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7025"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1554_point()))
            .setNormal(new Normal().setVector(getNormal_7_1555_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7049"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,1.4441e-01,1.2331e+00,5.7490e+00,5.0078e-01,1.2331e+00,5.6490e+00,5.0078e-01,1.2331e+00,5.7490e+00,1.4441e-01,1.2331e+00,5.6490e+00,5.0078e-01,1.2331e+00,5.6490e+00,1.4441e-01,1.2331e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7074"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45,46,44,45,46,45,47}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1567_point()))
            .setNormal(new Normal().setVector(getNormal_7_1568_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7098"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,5.0305e-01,1.1222e+00,5.7490e+00,-7.6145e-02,1.1222e+00,5.6490e+00,-7.6145e-02,1.1222e+00,5.7490e+00,5.0305e-01,1.1222e+00,5.6490e+00,-7.6145e-02,1.1222e+00,5.6490e+00,5.0305e-01,1.1222e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7123"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-1.1916e-01,1.1652e+00,5.6490e+00,-1.1916e-01,1.1652e+00,5.7490e+00,-1.1879e-01,1.1596e+00,5.6490e+00,-1.1879e-01,1.1596e+00,5.7490e+00,-1.1769e-01,1.1541e+00,5.6490e+00,-1.1769e-01,1.1541e+00,5.7490e+00,-1.1588e-01,1.1487e+00,5.6490e+00,-1.1588e-01,1.1487e+00,5.7490e+00,-1.1340e-01,1.1437e+00,5.6490e+00,-1.1340e-01,1.1437e+00,5.7490e+00,-1.1027e-01,1.1390e+00,5.6490e+00,-1.1027e-01,1.1390e+00,5.7490e+00,-1.0656e-01,1.1348e+00,5.6490e+00,-1.0656e-01,1.1348e+00,5.7490e+00,-1.0233e-01,1.1311e+00,5.6490e+00,-1.0233e-01,1.1311e+00,5.7490e+00,-9.7652e-02,1.1279e+00,5.6490e+00,-9.7652e-02,1.1279e+00,5.7490e+00,-9.2606e-02,1.1254e+00,5.6490e+00,-9.2606e-02,1.1254e+00,5.7490e+00,-8.7278e-02,1.1236e+00,5.6490e+00,-8.7278e-02,1.1236e+00,5.7490e+00,-8.1759e-02,1.1225e+00,5.6490e+00,-8.1759e-02,1.1225e+00,5.7490e+00,-7.6145e-02,1.1222e+00,5.6490e+00,-7.6145e-02,1.1222e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,-1.0000e+00,6.1232e-17,0.0000e+00,-1.0000e+00,6.1232e-17,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-1.2246e-16,-1.0000e+00,0.0000e+00,-1.2246e-16,-1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7147"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-1.1916e-01,1.1652e+00,5.7490e+00,-1.1916e-01,1.5906e+00,5.6490e+00,-1.1916e-01,1.5906e+00,5.7490e+00,-1.1916e-01,1.1652e+00,5.6490e+00,-1.1916e-01,1.5906e+00,5.6490e+00,-1.1916e-01,1.1652e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7171"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-1.1916e-01,1.5906e+00,5.7490e+00,-2.4248e-01,1.5906e+00,5.6490e+00,-2.4248e-01,1.5906e+00,5.7490e+00,-1.1916e-01,1.5906e+00,5.6490e+00,-2.4248e-01,1.5906e+00,5.6490e+00,-1.1916e-01,1.5906e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7188"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-2.4248e-01,1.5906e+00,5.7490e+00,-2.4248e-01,1.1652e+00,5.6490e+00,-2.4248e-01,1.1652e+00,5.7490e+00,-2.4248e-01,1.5906e+00,5.6490e+00,-2.4248e-01,1.1652e+00,5.6490e+00,-2.4248e-01,1.5906e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7216"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {90,0,1,90,1,2,90,2,3,90,3,4,90,4,5,90,5,6,90,6,7,7,8,9,7,9,10,7,10,11,7,11,12,7,12,13,7,13,14,14,15,16,14,16,17,14,17,18,14,18,19,14,19,20,14,20,21,14,21,22,40,41,42,40,42,43,39,40,43,39,43,44,39,44,45,38,39,45,38,45,46,37,38,46,36,37,46,35,36,46,34,35,46,33,34,46,32,33,46,32,46,47,31,32,47,31,47,48,30,31,48,30,48,49,29,30,49,29,49,50,28,29,50,28,50,51,27,28,51,27,51,52,26,27,52,26,52,53,25,26,53,25,53,54,24,25,54,24,54,55,23,24,55,23,55,56,22,23,56,22,56,57,22,57,58,22,58,59,22,59,60,22,60,61,22,61,62,22,62,63,22,63,64,22,64,65,14,22,65,14,65,66,14,66,67,14,67,68,14,68,69,14,69,70,14,70,71,14,71,72,14,72,73,14,73,74,14,74,75,14,75,76,14,76,77,14,77,78,7,14,78,7,78,79,7,79,80,90,7,80,90,80,81,90,81,82,90,82,83,90,83,84,90,84,85,90,85,86,90,86,87,90,87,88,90,88,89}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1605_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7247"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-3.2166e-01,1.1385e+00,5.7490e+00,-3.2166e-01,1.5906e+00,5.6490e+00,-3.2166e-01,1.5906e+00,5.7490e+00,-3.2166e-01,1.1385e+00,5.6490e+00,-3.2166e-01,1.5906e+00,5.6490e+00,-3.2166e-01,1.1385e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7271"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-3.2166e-01,1.5906e+00,5.7490e+00,-4.4497e-01,1.5906e+00,5.6490e+00,-4.4497e-01,1.5906e+00,5.7490e+00,-3.2166e-01,1.5906e+00,5.6490e+00,-4.4497e-01,1.5906e+00,5.6490e+00,-3.2166e-01,1.5906e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7295"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-4.4497e-01,1.5906e+00,5.7490e+00,-4.4497e-01,1.1414e+00,5.6490e+00,-4.4497e-01,1.1414e+00,5.7490e+00,-4.4497e-01,1.5906e+00,5.6490e+00,-4.4497e-01,1.1414e+00,5.6490e+00,-4.4497e-01,1.5906e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7320"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1629_point()))
            .setNormal(new Normal().setVector(getNormal_7_1630_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7344"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-4.7323e-01,1.1290e+00,5.7490e+00,-8.7735e-01,1.5660e+00,5.6490e+00,-8.7735e-01,1.5660e+00,5.7490e+00,-4.7323e-01,1.1290e+00,5.6490e+00,-8.7735e-01,1.5660e+00,5.6490e+00,-4.7323e-01,1.1290e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7369"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1642_point()))
            .setNormal(new Normal().setVector(getNormal_7_1643_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7393"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-1.1000e+00,1.4788e+00,5.7490e+00,-1.1000e+00,1.0000e+00,5.6490e+00,-1.1000e+00,1.0000e+00,5.7490e+00,-1.1000e+00,1.4788e+00,5.6490e+00,-1.1000e+00,1.0000e+00,5.6490e+00,-1.1000e+00,1.4788e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7417"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-1.1000e+00,1.0000e+00,5.7490e+00,-9.7785e-01,1.0000e+00,5.6490e+00,-9.7785e-01,1.0000e+00,5.7490e+00,-1.1000e+00,1.0000e+00,5.6490e+00,-9.7785e-01,1.0000e+00,5.6490e+00,-1.1000e+00,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7441"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-9.7785e-01,1.0000e+00,5.7490e+00,-9.7785e-01,1.4427e+00,5.6490e+00,-9.7785e-01,1.4427e+00,5.7490e+00,-9.7785e-01,1.0000e+00,5.6490e+00,-9.7785e-01,1.4427e+00,5.6490e+00,-9.7785e-01,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7466"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1667_point()))
            .setNormal(new Normal().setVector(getNormal_7_1668_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7490"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.7490e+00,-9.4096e-01,1.4570e+00,5.7490e+00,-5.6824e-01,1.0519e+00,5.6490e+00,-5.6824e-01,1.0519e+00,5.7490e+00,-9.4096e-01,1.4570e+00,5.6490e+00,-5.6824e-01,1.0519e+00,5.6490e+00,-9.4096e-01,1.4570e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7508"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1680_point()))
            .setNormal(new Normal().setVector(getNormal_7_1681_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#7528"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {57,0,1,57,1,2,57,2,3,57,3,4,57,4,5,57,5,6,57,6,7,57,7,8,57,8,9,57,9,10,15,16,17,15,17,18,15,18,19,15,19,20,15,20,21,15,21,22,14,15,22,14,22,23,14,23,24,24,25,26,24,26,27,24,27,28,24,28,29,24,29,30,24,30,31,24,31,32,24,32,33,24,33,34,24,34,35,24,35,36,24,36,37,24,37,38,24,38,39,24,39,40,24,40,41,24,41,42,14,24,42,14,42,43,14,43,44,13,14,44,12,13,44,11,12,44,10,11,44,57,10,44,57,44,45,57,45,46,57,46,47,57,47,48,57,48,49,57,49,50,57,50,51,57,51,52,57,52,53,57,53,54,57,54,55,57,55,56}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1687_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))));
    }
	// end of initialize() method

		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_43_index_1()
		{
			int[] value = {60,114,115,115,116,117,60,115,117,119,120,121,119,121,122,119,122,123,119,123,124,119,124,125,119,125,126,119,126,127,119,127,128,119,128,129,119,129,130,119,130,131,119,131,132,119,132,133,119,133,134,119,134,135,119,135,136,119,136,137,119,137,138,119,138,139,119,139,140,119,140,141,119,141,142,118,119,142,118,142,143,118,143,144,118,144,145,118,145,146,118,146,147,118,147,148,118,148,149,118,149,150,118,150,151,118,151,152,69,70,57,68,69,57,68,57,0,67,68,0,66,67,0,65,66,0,64,65,0,64,0,1,64,1,2,63,64,2,63,2,3,62,63,3,62,3,4,62,4,5,152,62,5,152,5,6,152,6,7,152,7,8,13,14,15,13,15,16,13,16,17,13,17,18,13,18,19,13,19,20,13,20,21,12,13,21,12,21,22,12,22,23,12,23,24,12,24,25,12,25,26,12,26,27,11,12,27,10,11,27,9,10,27,8,9,27,152,8,27,41,42,43,41,43,44,41,44,45,41,45,46,41,46,47,41,47,48,41,48,49,41,49,50,41,50,51,41,51,52,41,52,53,41,53,54,41,54,55,41,55,56,40,41,56,39,40,56,38,39,56,37,38,56,37,56,57,37,57,70,37,70,71,71,72,73,71,73,74,71,74,75,71,75,76,71,76,77,71,77,78,71,78,79,71,79,80,80,81,82,80,82,83,80,83,84,80,84,85,80,85,86,80,86,87,80,87,88,80,88,89,80,89,90,80,90,91,80,91,92,80,92,93,80,93,94,80,94,95,80,95,96,80,96,97,80,97,98,80,98,99,80,99,100,80,100,101,80,101,102,80,102,103,80,103,104,71,80,104,71,104,105,71,105,106,71,106,107,71,107,108,71,108,109,71,109,110,71,110,111,71,111,112,37,71,112,37,112,113,37,113,114,37,114,60,37,60,61,36,37,61,35,36,61,34,35,61,33,34,61,32,33,61,31,32,61,30,31,61,29,30,61,28,29,61,28,61,58,117,28,58,117,58,59,60,117,59};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_43_point_1()
		{
			double[] value = {5.7490e+00,-3.2166e-01,1.1385e+00,5.7490e+00,-3.2414e-01,1.1124e+00,5.7490e+00,-3.3151e-01,1.0872e+00,5.7490e+00,-3.4349e-01,1.0638e+00,5.7490e+00,-3.5966e-01,1.0432e+00,5.7490e+00,-3.7944e-01,1.0259e+00,5.7490e+00,-4.0211e-01,1.0127e+00,5.7490e+00,-4.2686e-01,1.0041e+00,5.7490e+00,-4.5281e-01,1.0002e+00,5.7490e+00,-4.7902e-01,1.0013e+00,5.7490e+00,-5.0455e-01,1.0073e+00,5.7490e+00,-5.2849e-01,1.0181e+00,5.7490e+00,-5.4998e-01,1.0331e+00,5.7490e+00,-5.6824e-01,1.0519e+00,5.7490e+00,-9.4096e-01,1.4570e+00,5.7490e+00,-9.4413e-01,1.4599e+00,5.7490e+00,-9.4779e-01,1.4620e+00,5.7490e+00,-9.5180e-01,1.4634e+00,5.7490e+00,-9.5601e-01,1.4639e+00,5.7490e+00,-9.6024e-01,1.4636e+00,5.7490e+00,-9.6432e-01,1.4625e+00,5.7490e+00,-9.6810e-01,1.4605e+00,5.7490e+00,-9.7142e-01,1.4579e+00,5.7490e+00,-9.7415e-01,1.4546e+00,5.7490e+00,-9.7618e-01,1.4509e+00,5.7490e+00,-9.7743e-01,1.4469e+00,5.7490e+00,-9.7785e-01,1.4427e+00,5.7490e+00,-9.7785e-01,1.0000e+00,5.7490e+00,-1.1000e+00,1.0000e+00,5.7490e+00,-1.1000e+00,1.4788e+00,5.7490e+00,-1.0975e+00,1.5043e+00,5.7490e+00,-1.0899e+00,1.5287e+00,5.7490e+00,-1.0777e+00,1.5512e+00,5.7490e+00,-1.0612e+00,1.5708e+00,5.7490e+00,-1.0412e+00,1.5867e+00,5.7490e+00,-1.0184e+00,1.5984e+00,5.7490e+00,-9.9378e-01,1.6053e+00,5.7490e+00,-9.6827e-01,1.6072e+00,5.7490e+00,-9.4289e-01,1.6040e+00,5.7490e+00,-9.1865e-01,1.5958e+00,5.7490e+00,-8.9651e-01,1.5829e+00,5.7490e+00,-8.7735e-01,1.5660e+00,5.7490e+00,-4.7323e-01,1.1290e+00,5.7490e+00,-4.7091e-01,1.1269e+00,5.7490e+00,-4.6824e-01,1.1253e+00,5.7490e+00,-4.6532e-01,1.1242e+00,5.7490e+00,-4.6225e-01,1.1238e+00,5.7490e+00,-4.5914e-01,1.1239e+00,5.7490e+00,-4.5611e-01,1.1245e+00,5.7490e+00,-4.5327e-01,1.1258e+00,5.7490e+00,-4.5071e-01,1.1276e+00,5.7490e+00,-4.4854e-01,1.1298e+00,5.7490e+00,-4.4683e-01,1.1324e+00,5.7490e+00,-4.4563e-01,1.1353e+00,5.7490e+00,-4.4501e-01,1.1383e+00,5.7490e+00,-4.4497e-01,1.1414e+00,5.7490e+00,-4.4497e-01,1.5906e+00,5.7490e+00,-3.2166e-01,1.5906e+00,5.7490e+00,-3.0843e+00,4.6000e-01,5.7490e+00,3.0843e+00,4.6000e-01,5.7490e+00,3.0843e+00,1.7800e+00,5.7490e+00,-3.0843e+00,1.7800e+00,5.7490e+00,-1.0952e-01,1.0032e+00,5.7490e+00,-1.4050e-01,1.0126e+00,5.7490e+00,-1.6906e-01,1.0278e+00,5.7490e+00,-1.9409e-01,1.0484e+00,5.7490e+00,-2.1464e-01,1.0734e+00,5.7490e+00,-2.2990e-01,1.1020e+00,5.7490e+00,-2.3930e-01,1.1330e+00,5.7490e+00,-2.4248e-01,1.1652e+00,5.7490e+00,-2.4248e-01,1.5906e+00,5.7490e+00,-1.1916e-01,1.5906e+00,5.7490e+00,-1.1916e-01,1.1652e+00,5.7490e+00,-1.1833e-01,1.1568e+00,5.7490e+00,-1.1588e-01,1.1487e+00,5.7490e+00,-1.1191e-01,1.1413e+00,5.7490e+00,-1.0656e-01,1.1348e+00,5.7490e+00,-1.0004e-01,1.1294e+00,5.7490e+00,-9.2606e-02,1.1254e+00,5.7490e+00,-8.4536e-02,1.1230e+00,5.7490e+00,-7.6145e-02,1.1222e+00,5.7490e+00,5.0305e-01,1.1222e+00,5.7490e+00,5.1364e-01,1.1246e+00,5.7490e+00,5.2356e-01,1.1290e+00,5.7490e+00,5.3243e-01,1.1353e+00,5.7490e+00,5.3992e-01,1.1432e+00,5.7490e+00,5.4574e-01,1.1524e+00,5.7490e+00,5.4967e-01,1.1625e+00,5.7490e+00,5.5156e-01,1.1732e+00,5.7490e+00,5.5134e-01,1.1841e+00,5.7490e+00,5.4901e-01,1.1947e+00,5.7490e+00,5.4467e-01,1.2046e+00,5.7490e+00,5.3849e-01,1.2136e+00,5.7490e+00,5.3068e-01,1.2211e+00,5.7490e+00,5.2156e-01,1.2270e+00,5.7490e+00,5.1147e-01,1.2311e+00,5.7490e+00,5.0078e-01,1.2331e+00,5.7490e+00,1.4441e-01,1.2331e+00,5.7490e+00,1.0849e-01,1.2339e+00,5.7490e+00,7.3468e-02,1.2420e+00};
			return value;
		}
		private double[] getCoordinate_7_43_point_2()
		{
			double[] value = {5.7490e+00,4.0760e-02,1.2569e+00,5.7490e+00,1.1684e-02,1.2780e+00,5.7490e+00,-1.2590e-02,1.3045e+00,5.7490e+00,-3.1082e-02,1.3353e+00,5.7490e+00,-4.3048e-02,1.3692e+00,5.7490e+00,-4.8005e-02,1.4048e+00,5.7490e+00,-4.5754e-02,1.4406e+00,5.7490e+00,-3.6386e-02,1.4753e+00,5.7490e+00,-2.0277e-02,1.5074e+00,5.7490e+00,1.9227e-03,1.5357e+00,5.7490e+00,2.9319e-02,1.5590e+00,5.7490e+00,6.0807e-02,1.5763e+00,5.7490e+00,9.5119e-02,1.5869e+00,5.7490e+00,1.3087e-01,1.5906e+00,5.7490e+00,1.1389e+00,1.5906e+00,5.7490e+00,1.1389e+00,1.4661e+00,5.7490e+00,8.8654e-01,1.4661e+00,5.7490e+00,8.8654e-01,1.0000e+00,5.7490e+00,7.6439e-01,1.0000e+00,5.7490e+00,7.6439e-01,1.4661e+00,5.7490e+00,1.4667e-01,1.4661e+00,5.7490e+00,1.3551e-01,1.4659e+00,5.7490e+00,1.2461e-01,1.4634e+00,5.7490e+00,1.1443e-01,1.4589e+00,5.7490e+00,1.0536e-01,1.4524e+00,5.7490e+00,9.7782e-02,1.4441e+00,5.7490e+00,9.1998e-02,1.4346e+00,5.7490e+00,8.8243e-02,1.4241e+00,5.7490e+00,8.6668e-02,1.4130e+00,5.7490e+00,8.7336e-02,1.4019e+00,5.7490e+00,9.0222e-02,1.3911e+00,5.7490e+00,9.5208e-02,1.3811e+00,5.7490e+00,1.0209e-01,1.3723e+00,5.7490e+00,1.1060e-01,1.3651e+00,5.7490e+00,1.2038e-01,1.3597e+00,5.7490e+00,1.3104e-01,1.3564e+00,5.7490e+00,1.4215e-01,1.3552e+00,5.7490e+00,5.2115e-01,1.3552e+00,5.7490e+00,5.5619e-01,1.3460e+00,5.7490e+00,5.8865e-01,1.3298e+00,5.7490e+00,6.1722e-01,1.3076e+00,5.7490e+00,6.4075e-01,1.2800e+00,5.7490e+00,6.5827e-01,1.2483e+00,5.7490e+00,6.6907e-01,1.2137e+00,5.7490e+00,6.7272e-01,1.1776e+00,5.7490e+00,6.6907e-01,1.1416e+00,5.7490e+00,6.5827e-01,1.1070e+00,5.7490e+00,6.4075e-01,1.0752e+00,5.7490e+00,6.1722e-01,1.0477e+00,5.7490e+00,5.8865e-01,1.0254e+00,5.7490e+00,5.5619e-01,1.0093e+00,5.7490e+00,5.2115e-01,1.0000e+00,5.7490e+00,-7.7290e-02,1.0000e+00};
			return value;
		}


		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_51_index_1()
		{
			int[] value = {1,85,86,1,86,51,1,51,52,1,52,53,1,53,54,58,59,97,57,58,97,56,57,97,55,56,97,55,97,98,55,98,99,54,55,99,54,99,100,54,100,101,54,101,102,1,54,102,1,102,103,1,103,104,96,97,59,95,96,59,94,95,59,93,94,59,92,93,59,91,92,59,90,91,59,90,59,60,89,90,60,88,89,60,87,88,60,117,87,60,116,117,60,115,116,60,114,115,60,114,60,61,114,61,62,114,62,63,114,63,64,114,64,65,84,85,1,83,84,1,82,83,1,81,82,1,80,81,1,79,80,1,78,79,1,77,78,1,77,1,6,76,77,6,75,76,6,74,75,6,73,74,6,72,73,6,71,72,6,70,71,6,69,70,6,68,69,6,67,68,6,66,67,6,65,66,6,114,65,6,113,114,6,113,6,7,113,7,8,113,8,9,113,9,10,10,11,12,10,12,13,10,13,14,10,14,15,113,10,15,113,15,16,113,16,17,113,17,18,113,18,19,113,19,20,113,20,21,113,21,22,113,22,23,113,23,24,113,24,25,113,25,26,112,113,26,112,26,27,112,27,28,112,28,29,112,29,30,112,30,31,112,31,32,111,112,32,111,32,33,33,121,122,33,122,123,33,123,124,33,124,125,33,125,126,33,126,127,111,33,127,111,127,128,111,128,129,111,129,130,111,130,131,111,131,132,111,132,133,111,133,134,111,134,135,111,135,136,111,136,137,111,137,138,111,138,139,111,139,140,111,140,141,111,141,142,120,121,33,119,120,33,118,119,33,148,118,33,147,148,33,146,147,33,146,33,34,145,146,34,145,34,35,144,145,35,144,35,36,144,36,37,143,144,37,143,37,38,143,38,39,49,50,2,48,49,2,47,48,2,46,47,2,45,46,2,43,45,2,43,2,3,42,43,3,41,42,3,40,41,3,39,40,3,143,39,3,142,143,3,111,142,3,110,111,3,109,110,3,108,109,3,108,3,4,107,108,4,106,107,4,105,106,4,104,105,4,1,104,4,1,4,5,261,223,224,261,224,225,261,225,226,261,226,227,261,227,228,261,228,229,261,229,152,150,153,154,150,154,155,150,155,156,150,156,157,150,157,158,150,158,159,149,150,159,149,159,160,149,160,161,149,161,162,149,162,163,149,163,164,149,164,165,149,165,166,152,149,166,152,166,167,152,167,168,152,168,169,152,169,170,152,170,171,152,171,172,152,172,173,152,173,174,152,174,175,152,175,176,152,176,177,152,177,178,178,179,180,178,180,181,178,181,182,178,182,183,178,183,184,178,184,185,178,185,186,178,186,187,178,187,188,178,188,189,189,190,191,189,191,192,189,192,230,189,230,231,189,231,232,189,232,233,189,233,234,189,234,235,189,235,236,189,236,237,189,237,238,178,189,238,178,238,239,178,239,240,178,240,241,178,241,242,178,242,243,178,243,244,178,244,245,178,245,246,178,246,247,178,247,248,178,248,249,152,178,249,152,249,250,152,250,251,152,251,252,152,252,253,152,253,254,152,254,255,152,255,256,152,256,257,152,257,258,152,258,259,152,259,260,152,260,230,230,192,193,230,193,194,230,194,195,230,195,196,152,230,196,152,196,197,152,197,198,152,198,199,152,199,200,152,200,201,152,201,202,152,202,203,152,203,204,152,204,205,152,205,206,152,206,207,152,207,208,152,208,209,152,209,210,152,210,211,152,211,212,212,213,214,212,214,215,212,215,216,212,216,217,212,217,218,212,218,219,212,219,220,212,220,221,212,221,222,212,222,223,223,261,262,223,262,263,223,263,264,223,264,265,223,265,266,212,223,266,212,266,267,212,267,268,212,268,269,212,269,270,212,270,271,212,271,272,212,272,273,212,273,274,212,274,275,212,275,276,212,276,277,152,212,277,152,277,278,152,278,279,152,279,280,152,280,281,152,281,282,152,282,283,152,283,284,152,284,285,152,285,286,152,286,287,152,287,288,152,288,289,152,289,290,152,290,291,261,152,291,343,369,370,343,370,371,343,371,372,343,372,373,343,373,374,343,374,375,399,369,343,398,399,343,397,398,343,396,397,343,395,396,343,394,395,343,394,343,344,393,394,344,393,344,345,393,345,346,393,346,347,392,393,347,392,347,348,392,348,349,392,349,350,392,350,351,392,351,352,367,368,298,366,367,298,365,366,298,364,365,298,363,364,298,362,363,298,361,362,298,360,361,298,359,360,298,358,359,298,358,298,299,357,358,299,356,357,299,355,356,299,354,355,299,353};
			return value;
		}
		private int[] getIndexedTriangleSet_6_51_index_2()
		{
			int[] value = {354,299,352,353,299,392,352,299,391,392,299,390,391,299,389,390,299,389,299,300,389,300,301,389,301,302,389,302,303,389,303,304,316,317,294,315,316,294,315,294,296,314,315,296,313,314,296,312,313,296,311,312,296,310,311,296,309,310,296,308,309,296,308,296,297,307,308,297,306,307,297,305,306,297,304,305,297,389,304,297,388,389,297,387,388,297,387,297,292,386,387,292,385,386,292,384,385,292,383,384,292,382,383,292,381,382,292,380,381,292,292,318,319,292,319,320,292,320,321,292,321,322,292,322,323,380,292,323,379,380,323,378,379,323,378,323,324,378,324,325,378,325,326,378,326,327,377,378,327,377,327,328,377,328,329,377,329,330,376,377,330,376,330,331,375,376,331,375,331,332,343,375,332,343,332,333,343,333,334,343,334,335,343,335,336,343,336,337,343,337,338,343,338,339,343,339,340,343,340,341,343,341,342,442,400,401,401,415,416,401,416,417,417,460,461,417,461,462,417,462,463,401,417,463,401,463,464,401,464,465,401,465,466,401,466,467,401,467,468,401,468,469,401,469,470,401,470,471,401,471,472,401,472,473,401,473,474,401,474,475,401,475,476,401,476,477,401,477,478,401,478,479,459,460,417,458,459,417,457,458,417,487,457,417,486,487,417,485,486,417,485,417,418,484,485,418,484,418,419,483,484,419,483,419,420,483,420,421,482,483,421,482,421,422,482,422,423,424,425,402,423,424,402,482,423,402,482,402,403,481,482,403,480,481,403,479,480,403,401,479,403,403,404,405,403,405,406,401,403,406,401,406,407,411,412,514,410,411,514,409,410,514,408,409,514,407,408,514,407,514,515,407,515,516,407,516,517,407,517,518,407,518,488,407,488,489,407,489,490,407,490,491,407,491,492,401,407,492,401,492,493,401,493,494,401,494,495,401,495,496,401,496,497,401,497,498,401,498,499,401,499,500,401,500,501,401,501,502,401,502,503,401,503,504,401,504,505,401,505,506,401,506,507,513,514,412,512,513,412,511,512,412,510,511,412,509,510,412,508,509,412,508,412,413,507,508,413,507,413,414,507,414,400,400,442,443,400,443,444,400,444,445,400,445,446,400,446,447,400,447,448,507,400,448,507,448,449,507,449,450,507,450,451,507,451,452,507,452,453,507,453,454,507,454,455,507,455,456,507,456,426,507,426,427,507,427,428,401,507,428,401,428,429,401,429,430,401,430,431,401,431,432,401,432,433,401,433,434,401,434,435,401,435,436,401,436,437,401,437,438,401,438,439,401,439,440,401,440,441,442,401,441,603,532,533,603,533,534,603,534,535,603,535,536,603,536,537,603,537,538,538,539,540,555,556,557,555,557,558,555,558,559,554,555,559,554,559,560,554,560,561,553,554,561,553,561,562,553,562,563,552,553,563,563,634,604,563,604,605,552,563,605,551,552,605,550,551,605,550,605,606,550,606,607,550,607,608,550,608,609,550,609,610,549,550,610,549,610,611,549,611,612,549,612,613,548,549,613,548,613,614,547,548,614,547,614,615,547,615,616,547,616,617,547,617,618,633,634,563,632,633,563,631,632,563,630,631,563,629,630,563,628,629,563,628,563,564,627,628,564,627,564,565,626,627,565,626,565,566,625,626,566,625,566,567,624,625,567,624,567,568,623,624,568,623,568,569,622,623,569,622,569,570,621,622,570,621,570,571,621,571,572,621,572,519,620,621,519,619,620,519,618,619,519,547,618,519,546,547,519,545,546,519,545,519,520,544,545,520,543,544,520,542,543,520,541,542,520,540,541,520,538,540,520,520,523,524,520,524,525,520,525,526,520,526,527,520,527,528,520,528,529,520,529,530,520,530,531,531,532,603,531,603,573,531,573,574,531,574,575,531,575,576,531,576,577,531,577,578,520,531,578,520,578,579,520,579,580,520,580,581,520,581,582,520,582,583,520,583,584,520,584,585,520,585,586,520,586,587,520,587,588,520,588,589,520,589,590,520,590,591,538,520,591,538,591,592,538,592,593,538,593,594,538,594,595,538,595,596,538,596,597,538,597,598,538,598,599,538,599,600,538,600,601,538,601,602,603,538,602,714,645,646,714,646,647,714,647,648,714,648,649,714,649,650,714,650,651,651,652,653,651,653,654,651,654,655,651,655,656,651,656,657,651,657,658,651,658,659,651,659,660,651,660,661,651,661,662,651,662,663,675,676,677,675,677,678,675,678,679,674,675,679,674,679,680,674,680,681,673,674,681,673,681,682,673,682,683,672,673};
			return value;
		}
		private int[] getIndexedTriangleSet_6_51_index_3()
		{
			int[] value = {683,672,683,684,672,684,685,671,672,685,671,685,686,686,687,688,686,688,689,686,689,690,686,690,732,686,732,733,686,733,734,686,734,735,686,735,736,686,736,737,686,737,738,686,738,739,686,739,740,686,740,741,671,686,741,670,671,741,670,741,742,670,742,743,670,743,744,670,744,745,670,745,746,669,670,746,669,746,747,669,747,748,668,669,748,668,748,749,668,749,750,667,668,750,667,750,751,667,751,752,667,752,753,667,753,754,731,732,690,730,731,690,729,730,690,728,729,690,727,728,690,726,727,690,726,690,691,725,726,691,725,691,692,725,692,639,724,725,639,754,724,639,667,754,639,666,667,639,666,639,640,665,666,640,664,665,640,663,664,640,640,643,644,640,644,645,640,645,714,640,714,715,640,715,716,640,716,717,640,717,718,640,718,719,640,719,720,640,720,721,640,721,722,640,722,723,640,723,693,663,640,693,663,693,694,663,694,695,663,695,696,663,696,697,663,697,698,663,698,699,663,699,700,663,700,701,663,701,702,663,702,703,651,663,703,651,703,704,651,704,705,651,705,706,651,706,707,651,707,708,651,708,709,651,709,710,651,710,711,651,711,712,651,712,713,714,651,713,642,637,638,642,638,641,828,759,760,757,761,762,757,762,763,757,763,764,757,764,765,757,765,766,757,766,767,757,767,768,757,768,769,757,769,770,757,770,771,757,771,772,757,772,773,757,773,774,757,774,775,757,775,776,757,776,777,757,777,778,778,886,887,757,778,887,757,887,888,757,888,889,757,889,890,757,890,860,757,860,861,757,861,862,757,862,863,757,863,864,760,757,864,760,864,865,760,865,866,760,866,867,760,867,868,760,868,869,760,869,870,760,870,871,760,871,872,760,872,873,760,873,874,760,874,875,760,875,876,760,876,877,760,877,878,760,878,879,885,886,778,884,885,778,883,884,778,882,883,778,881,882,778,880,881,778,880,778,779,879,880,779,760,879,779,760,779,780,760,780,781,760,781,782,760,782,783,760,783,784,760,784,785,760,785,786,760,786,787,760,787,788,760,788,789,760,789,790,760,790,791,760,791,792,760,792,793,760,793,794,760,794,795,760,795,796,799,800,801,798,799,801,797,798,801,796,797,801,760,796,801,760,801,802,760,802,803,760,803,804,760,804,805,755,759,828,755,828,829,755,829,830,755,830,831,755,831,832,755,832,833,755,833,834,755,834,835,755,835,836,755,836,837,805,755,837,805,837,838,805,838,839,805,839,840,805,840,841,805,841,842,805,842,843,805,843,844,805,844,845,805,845,846,805,846,847,805,847,848,805,848,849,805,849,850,805,850,851,805,851,852,805,852,853,805,853,854,805,854,855,805,855,856,858,859,817,857,858,817,856,857,817,805,856,817,805,817,818,760,805,818,760,818,819,760,819,820,760,820,821,760,821,822,760,822,823,760,823,824,760,824,825,760,825,826,760,826,827,828,760,827,816,758,806,816,806,807,816,807,808,810,811,812,809,810,812,808,809,812,808,812,813,808,813,814,808,814,815,816,808,815,1013,901,902,1013,902,903,1013,903,904,1013,904,905,1013,905,906,1013,906,907,907,908,909,907,909,910,907,910,911,907,911,912,907,912,913,907,913,914,907,914,915,907,915,916,907,916,917,907,917,918,907,918,919,931,932,1044,930,931,1044,929,930,1044,928,929,1044,927,928,1044,926,927,1044,925,926,1044,925,1044,1045,925,1045,1015,925,1015,1016,924,925,1016,924,1016,1017,923,924,1017,923,1017,1018,923,1018,1019,923,1019,1020,923,1020,1021,923,1021,1022,1043,1044,932,1042,1043,932,1041,1042,932,1040,1041,932,1039,1040,932,1038,1039,932,1038,932,933,1037,1038,933,1037,933,934,1036,1037,934,1036,934,935,1035,1036,935,1035,935,936,1034,1035,936,1034,936,937,1033,1034,937,1033,937,938,1032,1033,938,1032,938,939,1031,1032,939,1031,939,940,1030,1031,940,1030,940,941,1029,1030,941,1029,941,942,1028,1029,942,1028,942,943,1027,1028,943,1027,943,944,1026,1027,944,1026,944,945,1025,1026,945,1025,945,946,1024,1025,946,1024,946,947,1024,947,948,1024,948,949,1023,1024,949,1023,949,950,1023,950,951,1023,951,952,1022,1023,952,1022,952,953,1022,953,954,1022,954,955,970,971,891,969,970,891,968,969,891,967,968,891,966,967,891,965,966,891,964,965,891,963,964,891,962,963,891,961,962,891,960,961,891,891,972,973,960,891,973,959,960,973,959,973,974,959,974,975,959,975,976,959,976,977,959,977,978,958,959,978,957,958,978,957,978,979,957,979,980,956,957,980,956,980,981,956,981,982,956,982,983};
			return value;
		}
		private int[] getIndexedTriangleSet_6_51_index_4()
		{
			int[] value = {956,983,892,955,956,892,1022,955,892,923,1022,892,922,923,892,921,922,892,920,921,892,920,892,893,919,920,893,893,895,896,893,896,897,893,897,898,893,898,899,893,899,900,893,900,901,893,901,1013,893,1013,1014,893,1014,984,893,984,985,893,985,986,893,986,987,893,987,988,893,988,989,893,989,990,893,990,991,893,991,992,919,893,992,919,992,993,919,993,994,919,994,995,919,995,996,919,996,997,919,997,998,919,998,999,919,999,1000,919,1000,1001,907,919,1001,907,1001,1002,907,1002,1003,907,1003,1004,907,1004,1005,907,1005,1006,907,1006,1007,907,1007,1008,907,1008,1009,907,1009,1010,907,1010,1011,907,1011,1012,1013,907,1012,1097,1152,1153,1097,1153,1123,1097,1123,1124,1097,1124,1125,1097,1125,1126,1097,1126,1127,1151,1152,1097,1150,1151,1097,1149,1150,1097,1148,1149,1097,1147,1148,1097,1146,1147,1097,1146,1097,1098,1145,1146,1098,1145,1098,1099,1144,1145,1099,1144,1099,1100,1143,1144,1100,1143,1100,1101,1142,1143,1101,1142,1101,1102,1141,1142,1102,1141,1102,1103,1140,1141,1103,1140,1103,1104,1139,1140,1104,1139,1104,1105,1138,1139,1105,1138,1105,1106,1137,1138,1106,1137,1106,1107,1136,1137,1107,1136,1107,1108,1135,1136,1108,1135,1108,1109,1134,1135,1109,1134,1109,1110,1133,1134,1110,1133,1110,1111,1132,1133,1111,1132,1111,1112,1132,1112,1113,1132,1113,1114,1131,1132,1114,1131,1114,1115,1131,1115,1116,1131,1116,1117,1130,1131,1117,1130,1117,1118,1130,1118,1119,1130,1119,1120,1121,1122,1047,1120,1121,1047,1130,1120,1047,1129,1130,1047,1128,1129,1047,1127,1128,1047,1097,1127,1047,1047,1050,1051,1051,1049,1052,1051,1052,1053,1051,1053,1054,1051,1054,1055,1051,1055,1056,1051,1056,1057,1051,1057,1058,1051,1058,1059,1051,1059,1060,1047,1051,1060,1047,1060,1061,1047,1061,1062,1047,1062,1063,1047,1063,1064,1047,1064,1065,1047,1065,1066,1047,1066,1067,1047,1067,1068,1047,1068,1069,1047,1069,1070,1071,1072,1073,1071,1073,1074,1071,1074,1075,1071,1075,1076,1071,1076,1077,1071,1077,1078,1070,1071,1078,1070,1078,1079,1070,1079,1080,1070,1080,1081,1070,1081,1082,1070,1082,1083,1070,1083,1084,1070,1084,1085,1047,1070,1085,1047,1085,1086,1047,1086,1087,1047,1087,1088,1047,1088,1089,1047,1089,1090,1047,1090,1091,1047,1091,1092,1047,1092,1093,1047,1093,1094,1047,1094,1095,1047,1095,1096,1097,1047,1096};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_51_point_1()
		{
			double[] value = {5.6290e+00,-3.9140e+00,1.9000e+00,5.6290e+00,-1.3047e+00,1.9000e+00,1.8763e+00,-1.3047e+00,1.9000e+00,1.8763e+00,-3.9140e+00,1.9000e+00,4.7993e+00,-3.9140e+00,1.9000e+00,5.6290e+00,-3.0843e+00,1.9000e+00,2.5759e+00,-1.3047e+00,1.9000e+00,2.5994e+00,-1.3333e+00,1.9000e+00,2.6272e+00,-1.3852e+00,1.9000e+00,2.6442e+00,-1.4415e+00,1.9000e+00,2.6500e+00,-1.5000e+00,1.9000e+00,2.6500e+00,-1.6250e+00,1.9000e+00,2.6890e+00,-1.6288e+00,1.9000e+00,2.7265e+00,-1.6402e+00,1.9000e+00,2.7611e+00,-1.6587e+00,1.9000e+00,2.7914e+00,-1.6836e+00,1.9000e+00,2.8163e+00,-1.7139e+00,1.9000e+00,2.8348e+00,-1.7485e+00,1.9000e+00,2.8462e+00,-1.7860e+00,1.9000e+00,2.8500e+00,-1.8250e+00,1.9000e+00,2.8462e+00,-1.8640e+00,1.9000e+00,2.8348e+00,-1.9015e+00,1.9000e+00,2.8163e+00,-1.9361e+00,1.9000e+00,2.7914e+00,-1.9664e+00,1.9000e+00,2.7611e+00,-1.9913e+00,1.9000e+00,2.7265e+00,-2.0098e+00,1.9000e+00,2.6890e+00,-2.0212e+00,1.9000e+00,2.6500e+00,-2.0250e+00,1.9000e+00,2.6500e+00,-2.1500e+00,1.9000e+00,2.6442e+00,-2.2085e+00,1.9000e+00,2.6272e+00,-2.2648e+00,1.9000e+00,2.5994e+00,-2.3167e+00,1.9000e+00,2.5621e+00,-2.3621e+00,1.9000e+00,2.5167e+00,-2.3994e+00,1.9000e+00,2.4648e+00,-2.4272e+00,1.9000e+00,2.4085e+00,-2.4442e+00,1.9000e+00,2.3500e+00,-2.4500e+00,1.9000e+00,2.2915e+00,-2.4442e+00,1.9000e+00,2.2352e+00,-2.4272e+00,1.9000e+00,2.1833e+00,-2.3994e+00,1.9000e+00,2.1379e+00,-2.3621e+00,1.9000e+00,2.1006e+00,-2.3167e+00,1.9000e+00,2.0728e+00,-2.2648e+00,1.9000e+00,2.0558e+00,-2.2085e+00,1.9000e+00,2.0500e+00,-2.1500e+00,1.9000e+00,2.0500e+00,-2.1500e+00,1.9000e+00,2.0500e+00,-1.5000e+00,1.9000e+00,2.0558e+00,-1.4415e+00,1.9000e+00,2.0728e+00,-1.3852e+00,1.9000e+00,2.1006e+00,-1.3333e+00,1.9000e+00,2.1241e+00,-1.3047e+00,1.9000e+00,4.8500e+00,-2.4375e+00,1.9000e+00,4.8488e+00,-2.4497e+00,1.9000e+00,4.8452e+00,-2.4614e+00,1.9000e+00,4.8395e+00,-2.4722e+00,1.9000e+00,4.8317e+00,-2.4817e+00,1.9000e+00,4.8222e+00,-2.4895e+00,1.9000e+00,4.8114e+00,-2.4952e+00,1.9000e+00,4.7997e+00,-2.4988e+00,1.9000e+00,4.7875e+00,-2.5000e+00,1.9000e+00,3.8125e+00,-2.5000e+00,1.9000e+00,3.8003e+00,-2.4988e+00,1.9000e+00,3.7886e+00,-2.4952e+00,1.9000e+00,3.7778e+00,-2.4895e+00,1.9000e+00,3.7683e+00,-2.4817e+00,1.9000e+00,3.7605e+00,-2.4722e+00,1.9000e+00,3.7548e+00,-2.4614e+00,1.9000e+00,3.7512e+00,-2.4497e+00,1.9000e+00,3.7500e+00,-2.4375e+00,1.9000e+00,3.7500e+00,-1.4625e+00,1.9000e+00,3.7512e+00,-1.4503e+00,1.9000e+00,3.7548e+00,-1.4386e+00,1.9000e+00,3.7605e+00,-1.4278e+00,1.9000e+00,3.7683e+00,-1.4183e+00,1.9000e+00,3.7778e+00,-1.4105e+00,1.9000e+00,3.7886e+00,-1.4048e+00,1.9000e+00,3.8003e+00,-1.4012e+00,1.9000e+00,3.8125e+00,-1.4000e+00,1.9000e+00,4.7875e+00,-1.4000e+00,1.9000e+00,4.7997e+00,-1.4012e+00,1.9000e+00,4.8114e+00,-1.4048e+00,1.9000e+00,4.8222e+00,-1.4105e+00,1.9000e+00,4.8317e+00,-1.4183e+00,1.9000e+00,4.8395e+00,-1.4278e+00,1.9000e+00,4.8452e+00,-1.4386e+00,1.9000e+00,4.8488e+00,-1.4503e+00,1.9000e+00,4.8500e+00,-1.4625e+00,1.9000e+00,4.1776e+00,-3.0498e+00,1.9000e+00,4.1851e+00,-3.0257e+00,1.9000e+00,4.1974e+00,-3.0036e+00,1.9000e+00,4.2139e+00,-2.9844e+00,1.9000e+00,4.2339e+00,-2.9689e+00,1.9000e+00,4.2566e+00,-2.9578e+00,1.9000e+00,4.2811e+00,-2.9514e+00,1.9000e+00,4.3063e+00,-2.9502e+00,1.9000e+00,4.3313e+00,-2.9540e+00,1.9000e+00,4.3550e+00,-2.9628e+00,1.9000e+00,4.3765e+00,-2.9762e+00,1.9000e+00,4.3948e+00,-2.9936e+00,1.9000e+00,4.4093e+00,-3.0143e+00,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_2()
		{
			double[] value = {4.4193e+00,-3.0376e+00,1.9000e+00,4.4244e+00,-3.0624e+00,1.9000e+00,4.4244e+00,-3.0876e+00,1.9000e+00,4.4193e+00,-3.1124e+00,1.9000e+00,4.4093e+00,-3.1357e+00,1.9000e+00,4.3948e+00,-3.1564e+00,1.9000e+00,4.3765e+00,-3.1738e+00,1.9000e+00,4.3550e+00,-3.1872e+00,1.9000e+00,4.3313e+00,-3.1960e+00,1.9000e+00,4.3063e+00,-3.1998e+00,1.9000e+00,4.2811e+00,-3.1986e+00,1.9000e+00,4.2566e+00,-3.1922e+00,1.9000e+00,4.2339e+00,-3.1811e+00,1.9000e+00,4.2139e+00,-3.1656e+00,1.9000e+00,4.1974e+00,-3.1464e+00,1.9000e+00,4.1851e+00,-3.1243e+00,1.9000e+00,4.1776e+00,-3.1002e+00,1.9000e+00,4.1750e+00,-3.0750e+00,1.9000e+00,2.6383e+00,-2.6271e+00,1.9000e+00,2.6452e+00,-2.6050e+00,1.9000e+00,2.6564e+00,-2.5849e+00,1.9000e+00,2.6715e+00,-2.5674e+00,1.9000e+00,2.6897e+00,-2.5533e+00,1.9000e+00,2.7104e+00,-2.5431e+00,1.9000e+00,2.7327e+00,-2.5373e+00,1.9000e+00,2.7558e+00,-2.5361e+00,1.9000e+00,2.7786e+00,-2.5396e+00,1.9000e+00,2.8002e+00,-2.5477e+00,1.9000e+00,2.8198e+00,-2.5599e+00,1.9000e+00,2.8365e+00,-2.5757e+00,1.9000e+00,2.8497e+00,-2.5947e+00,1.9000e+00,2.8588e+00,-2.6159e+00,1.9000e+00,2.8634e+00,-2.6385e+00,1.9000e+00,2.8634e+00,-2.6615e+00,1.9000e+00,2.8588e+00,-2.6841e+00,1.9000e+00,2.8497e+00,-2.7053e+00,1.9000e+00,2.8365e+00,-2.7243e+00,1.9000e+00,2.8198e+00,-2.7401e+00,1.9000e+00,2.8002e+00,-2.7523e+00,1.9000e+00,2.7786e+00,-2.7604e+00,1.9000e+00,2.7558e+00,-2.7639e+00,1.9000e+00,2.7327e+00,-2.7627e+00,1.9000e+00,2.7104e+00,-2.7569e+00,1.9000e+00,2.6897e+00,-2.7467e+00,1.9000e+00,2.6715e+00,-2.7326e+00,1.9000e+00,2.6564e+00,-2.7151e+00,1.9000e+00,2.6452e+00,-2.6950e+00,1.9000e+00,2.6383e+00,-2.6729e+00,1.9000e+00,2.6360e+00,-2.6500e+00,1.9000e+00,1.8763e+00,-3.9140e+00,1.9000e+00,1.8763e+00,-1.3047e+00,1.9000e+00,-1.8763e+00,-1.3047e+00,1.9000e+00,-1.8763e+00,-3.9140e+00,1.9000e+00,1.1721e+00,-1.3047e+00,1.9000e+00,1.1858e+00,-1.3108e+00,1.9000e+00,1.2041e+00,-1.3232e+00,1.9000e+00,1.2199e+00,-1.3387e+00,1.9000e+00,1.2328e+00,-1.3566e+00,1.9000e+00,1.2422e+00,-1.3766e+00,1.9000e+00,1.2480e+00,-1.3980e+00,1.9000e+00,1.2500e+00,-1.4200e+00,1.9000e+00,1.2500e+00,-2.1250e+00,1.9000e+00,1.2476e+00,-2.1494e+00,1.9000e+00,1.2405e+00,-2.1728e+00,1.9000e+00,1.2289e+00,-2.1944e+00,1.9000e+00,1.2134e+00,-2.2134e+00,1.9000e+00,1.1944e+00,-2.2289e+00,1.9000e+00,1.1728e+00,-2.2405e+00,1.9000e+00,1.1494e+00,-2.2476e+00,1.9000e+00,1.1250e+00,-2.2500e+00,1.9000e+00,6.7000e-01,-2.2500e+00,1.9000e+00,6.4797e-01,-2.2480e+00,1.9000e+00,6.2663e-01,-2.2422e+00,1.9000e+00,6.0665e-01,-2.2328e+00,1.9000e+00,5.8865e-01,-2.2199e+00,1.9000e+00,5.7320e-01,-2.2041e+00,1.9000e+00,5.6078e-01,-2.1858e+00,1.9000e+00,5.5177e-01,-2.1656e+00,1.9000e+00,5.4647e-01,-2.1441e+00,1.9000e+00,5.3119e-01,-2.0854e+00,1.9000e+00,5.0442e-01,-2.0310e+00,1.9000e+00,4.6726e-01,-1.9831e+00,1.9000e+00,4.2122e-01,-1.9437e+00,1.9000e+00,3.6819e-01,-1.9143e+00,1.9000e+00,3.1033e-01,-1.8961e+00,1.9000e+00,2.5000e-01,-1.8900e+00,1.9000e+00,1.8967e-01,-1.8961e+00,1.9000e+00,1.3181e-01,-1.9143e+00,1.9000e+00,7.8781e-02,-1.9437e+00,1.9000e+00,3.2743e-02,-1.9831e+00,1.9000e+00,-4.4196e-03,-2.0310e+00,1.9000e+00,-3.1189e-02,-2.0854e+00,1.9000e+00,-4.6471e-02,-2.1441e+00,1.9000e+00,-5.1773e-02,-2.1656e+00,1.9000e+00,-6.0776e-02,-2.1858e+00,1.9000e+00,-7.3199e-02,-2.2041e+00,1.9000e+00,-8.8651e-02,-2.2199e+00,1.9000e+00,-1.0665e-01,-2.2328e+00,1.9000e+00,-1.2663e-01,-2.2422e+00,1.9000e+00,-1.4797e-01,-2.2480e+00,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_3()
		{
			double[] value = {-1.7000e-01,-2.2500e+00,1.9000e+00,-1.0800e+00,-2.2500e+00,1.9000e+00,-1.1020e+00,-2.2480e+00,1.9000e+00,-1.1234e+00,-2.2422e+00,1.9000e+00,-1.1434e+00,-2.2328e+00,1.9000e+00,-1.1613e+00,-2.2199e+00,1.9000e+00,-1.1768e+00,-2.2041e+00,1.9000e+00,-1.1892e+00,-2.1858e+00,1.9000e+00,-1.1982e+00,-2.1656e+00,1.9000e+00,-1.2035e+00,-2.1441e+00,1.9000e+00,-1.2188e+00,-2.0854e+00,1.9000e+00,-1.2456e+00,-2.0310e+00,1.9000e+00,-1.2827e+00,-1.9831e+00,1.9000e+00,-1.3288e+00,-1.9437e+00,1.9000e+00,-1.3818e+00,-1.9143e+00,1.9000e+00,-1.4397e+00,-1.8961e+00,1.9000e+00,-1.5000e+00,-1.8900e+00,1.9000e+00,-1.5603e+00,-1.8961e+00,1.9000e+00,-1.6182e+00,-1.9143e+00,1.9000e+00,-1.6712e+00,-1.9437e+00,1.9000e+00,-1.7173e+00,-1.9831e+00,1.9000e+00,-1.7544e+00,-2.0310e+00,1.9000e+00,-1.7812e+00,-2.0854e+00,1.9000e+00,-1.7965e+00,-2.1441e+00,1.9000e+00,-1.8018e+00,-2.1656e+00,1.9000e+00,-1.8108e+00,-2.1858e+00,1.9000e+00,-1.8232e+00,-2.2041e+00,1.9000e+00,-1.8387e+00,-2.2199e+00,1.9000e+00,-1.8566e+00,-2.2328e+00,1.9000e+00,-1.8763e+00,-2.2422e+00,1.9000e+00,1.4568e-01,-2.1686e+00,1.9000e+00,1.5213e-01,-2.1480e+00,1.9000e+00,1.6259e-01,-2.1292e+00,1.9000e+00,1.7663e-01,-2.1128e+00,1.9000e+00,1.9367e-01,-2.0996e+00,1.9000e+00,2.1301e-01,-2.0901e+00,1.9000e+00,2.3387e-01,-2.0847e+00,1.9000e+00,2.5539e-01,-2.0836e+00,1.9000e+00,2.7669e-01,-2.0869e+00,1.9000e+00,2.9690e-01,-2.0944e+00,1.9000e+00,3.1519e-01,-2.1058e+00,1.9000e+00,3.3081e-01,-2.1206e+00,1.9000e+00,3.4312e-01,-2.1383e+00,1.9000e+00,3.5162e-01,-2.1581e+00,1.9000e+00,3.5595e-01,-2.1792e+00,1.9000e+00,3.5595e-01,-2.2008e+00,1.9000e+00,3.5162e-01,-2.2219e+00,1.9000e+00,3.4312e-01,-2.2417e+00,1.9000e+00,3.3081e-01,-2.2594e+00,1.9000e+00,3.1519e-01,-2.2742e+00,1.9000e+00,2.9690e-01,-2.2856e+00,1.9000e+00,2.7669e-01,-2.2931e+00,1.9000e+00,2.5539e-01,-2.2964e+00,1.9000e+00,2.3387e-01,-2.2953e+00,1.9000e+00,2.1301e-01,-2.2899e+00,1.9000e+00,1.9367e-01,-2.2804e+00,1.9000e+00,1.7663e-01,-2.2672e+00,1.9000e+00,1.6259e-01,-2.2508e+00,1.9000e+00,1.5213e-01,-2.2320e+00,1.9000e+00,1.4568e-01,-2.2114e+00,1.9000e+00,1.4350e-01,-2.1900e+00,1.9000e+00,-1.6043e+00,-2.1686e+00,1.9000e+00,-1.5979e+00,-2.1480e+00,1.9000e+00,-1.5874e+00,-2.1292e+00,1.9000e+00,-1.5734e+00,-2.1128e+00,1.9000e+00,-1.5563e+00,-2.0996e+00,1.9000e+00,-1.5370e+00,-2.0901e+00,1.9000e+00,-1.5161e+00,-2.0847e+00,1.9000e+00,-1.4946e+00,-2.0836e+00,1.9000e+00,-1.4733e+00,-2.0869e+00,1.9000e+00,-1.4531e+00,-2.0944e+00,1.9000e+00,-1.4348e+00,-2.1058e+00,1.9000e+00,-1.4192e+00,-2.1206e+00,1.9000e+00,-1.4069e+00,-2.1383e+00,1.9000e+00,-1.3984e+00,-2.1581e+00,1.9000e+00,-1.3940e+00,-2.1792e+00,1.9000e+00,-1.3940e+00,-2.2008e+00,1.9000e+00,-1.3984e+00,-2.2219e+00,1.9000e+00,-1.4069e+00,-2.2417e+00,1.9000e+00,-1.4192e+00,-2.2594e+00,1.9000e+00,-1.4348e+00,-2.2742e+00,1.9000e+00,-1.4531e+00,-2.2856e+00,1.9000e+00,-1.4733e+00,-2.2931e+00,1.9000e+00,-1.4946e+00,-2.2964e+00,1.9000e+00,-1.5161e+00,-2.2953e+00,1.9000e+00,-1.5370e+00,-2.2899e+00,1.9000e+00,-1.5563e+00,-2.2804e+00,1.9000e+00,-1.5734e+00,-2.2672e+00,1.9000e+00,-1.5874e+00,-2.2508e+00,1.9000e+00,-1.5979e+00,-2.2320e+00,1.9000e+00,-1.6043e+00,-2.2114e+00,1.9000e+00,-1.6065e+00,-2.1900e+00,1.9000e+00,-1.8763e+00,-3.9140e+00,1.9000e+00,-1.8763e+00,-1.3047e+00,1.9000e+00,-5.6290e+00,-1.3047e+00,1.9000e+00,-5.6290e+00,-3.9140e+00,1.9000e+00,-5.6290e+00,-3.0843e+00,1.9000e+00,-4.7993e+00,-3.9140e+00,1.9000e+00,-4.6500e+00,-1.3047e+00,1.9000e+00,-4.6500e+00,-3.0000e+00,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_4()
		{
			double[] value = {-4.6524e+00,-3.0244e+00,1.9000e+00,-4.6595e+00,-3.0478e+00,1.9000e+00,-4.6711e+00,-3.0694e+00,1.9000e+00,-4.6866e+00,-3.0884e+00,1.9000e+00,-4.7056e+00,-3.1039e+00,1.9000e+00,-4.7272e+00,-3.1155e+00,1.9000e+00,-4.7506e+00,-3.1226e+00,1.9000e+00,-4.7750e+00,-3.1250e+00,1.9000e+00,-5.0250e+00,-3.1250e+00,1.9000e+00,-5.0494e+00,-3.1226e+00,1.9000e+00,-5.0728e+00,-3.1155e+00,1.9000e+00,-5.0944e+00,-3.1039e+00,1.9000e+00,-5.1134e+00,-3.0884e+00,1.9000e+00,-5.1289e+00,-3.0694e+00,1.9000e+00,-5.1405e+00,-3.0478e+00,1.9000e+00,-5.1476e+00,-3.0244e+00,1.9000e+00,-5.1500e+00,-3.0000e+00,1.9000e+00,-5.1500e+00,-1.3047e+00,1.9000e+00,-1.8763e+00,-2.2422e+00,1.9000e+00,-1.8980e+00,-2.2480e+00,1.9000e+00,-1.9200e+00,-2.2500e+00,1.9000e+00,-2.8300e+00,-2.2500e+00,1.9000e+00,-2.8520e+00,-2.2480e+00,1.9000e+00,-2.8734e+00,-2.2422e+00,1.9000e+00,-2.8934e+00,-2.2328e+00,1.9000e+00,-2.9113e+00,-2.2199e+00,1.9000e+00,-2.9268e+00,-2.2041e+00,1.9000e+00,-2.9392e+00,-2.1858e+00,1.9000e+00,-2.9482e+00,-2.1656e+00,1.9000e+00,-2.9535e+00,-2.1441e+00,1.9000e+00,-2.9688e+00,-2.0854e+00,1.9000e+00,-2.9956e+00,-2.0310e+00,1.9000e+00,-3.0327e+00,-1.9831e+00,1.9000e+00,-3.0788e+00,-1.9437e+00,1.9000e+00,-3.1318e+00,-1.9143e+00,1.9000e+00,-3.1897e+00,-1.8961e+00,1.9000e+00,-3.2500e+00,-1.8900e+00,1.9000e+00,-3.3103e+00,-1.8961e+00,1.9000e+00,-3.3682e+00,-1.9143e+00,1.9000e+00,-3.4212e+00,-1.9437e+00,1.9000e+00,-3.4673e+00,-1.9831e+00,1.9000e+00,-3.5044e+00,-2.0310e+00,1.9000e+00,-3.5312e+00,-2.0854e+00,1.9000e+00,-3.5465e+00,-2.1441e+00,1.9000e+00,-3.5518e+00,-2.1656e+00,1.9000e+00,-3.5608e+00,-2.1858e+00,1.9000e+00,-3.5732e+00,-2.2041e+00,1.9000e+00,-3.5887e+00,-2.2199e+00,1.9000e+00,-3.6066e+00,-2.2328e+00,1.9000e+00,-3.6266e+00,-2.2422e+00,1.9000e+00,-3.6480e+00,-2.2480e+00,1.9000e+00,-3.6700e+00,-2.2500e+00,1.9000e+00,-4.1250e+00,-2.2500e+00,1.9000e+00,-4.1494e+00,-2.2476e+00,1.9000e+00,-4.1728e+00,-2.2405e+00,1.9000e+00,-4.1944e+00,-2.2289e+00,1.9000e+00,-4.2134e+00,-2.2134e+00,1.9000e+00,-4.2289e+00,-2.1944e+00,1.9000e+00,-4.2405e+00,-2.1728e+00,1.9000e+00,-4.2476e+00,-2.1494e+00,1.9000e+00,-4.2500e+00,-2.1250e+00,1.9000e+00,-4.2500e+00,-1.4200e+00,1.9000e+00,-4.2480e+00,-1.3980e+00,1.9000e+00,-4.2422e+00,-1.3766e+00,1.9000e+00,-4.2328e+00,-1.3566e+00,1.9000e+00,-4.2199e+00,-1.3387e+00,1.9000e+00,-4.2041e+00,-1.3232e+00,1.9000e+00,-4.1858e+00,-1.3108e+00,1.9000e+00,-4.1721e+00,-1.3047e+00,1.9000e+00,-3.3543e+00,-2.1686e+00,1.9000e+00,-3.3479e+00,-2.1480e+00,1.9000e+00,-3.3374e+00,-2.1292e+00,1.9000e+00,-3.3234e+00,-2.1128e+00,1.9000e+00,-3.3063e+00,-2.0996e+00,1.9000e+00,-3.2870e+00,-2.0901e+00,1.9000e+00,-3.2661e+00,-2.0847e+00,1.9000e+00,-3.2446e+00,-2.0836e+00,1.9000e+00,-3.2233e+00,-2.0869e+00,1.9000e+00,-3.2031e+00,-2.0944e+00,1.9000e+00,-3.1848e+00,-2.1058e+00,1.9000e+00,-3.1692e+00,-2.1206e+00,1.9000e+00,-3.1569e+00,-2.1383e+00,1.9000e+00,-3.1484e+00,-2.1581e+00,1.9000e+00,-3.1440e+00,-2.1792e+00,1.9000e+00,-3.1440e+00,-2.2008e+00,1.9000e+00,-3.1484e+00,-2.2219e+00,1.9000e+00,-3.1569e+00,-2.2417e+00,1.9000e+00,-3.1692e+00,-2.2594e+00,1.9000e+00,-3.1848e+00,-2.2742e+00,1.9000e+00,-3.2031e+00,-2.2856e+00,1.9000e+00,-3.2233e+00,-2.2931e+00,1.9000e+00,-3.2446e+00,-2.2964e+00,1.9000e+00,-3.2661e+00,-2.2953e+00,1.9000e+00,-3.2870e+00,-2.2899e+00,1.9000e+00,-3.3063e+00,-2.2804e+00,1.9000e+00,-3.3234e+00,-2.2672e+00,1.9000e+00,-3.3374e+00,-2.2508e+00,1.9000e+00,-3.3479e+00,-2.2320e+00,1.9000e+00,-3.3543e+00,-2.2114e+00,1.9000e+00,-3.3565e+00,-2.1900e+00,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_5()
		{
			double[] value = {5.6290e+00,-1.3047e+00,1.9000e+00,5.6290e+00,1.3047e+00,1.9000e+00,1.8763e+00,1.3047e+00,1.9000e+00,1.8763e+00,-1.3047e+00,1.9000e+00,2.1241e+00,-1.3047e+00,1.9000e+00,2.1379e+00,-1.2879e+00,1.9000e+00,2.1833e+00,-1.2506e+00,1.9000e+00,2.2352e+00,-1.2228e+00,1.9000e+00,2.2915e+00,-1.2058e+00,1.9000e+00,2.3500e+00,-1.2000e+00,1.9000e+00,2.4085e+00,-1.2058e+00,1.9000e+00,2.4648e+00,-1.2228e+00,1.9000e+00,2.5167e+00,-1.2506e+00,1.9000e+00,2.5621e+00,-1.2879e+00,1.9000e+00,2.5759e+00,-1.3047e+00,1.9000e+00,2.5759e+00,1.3047e+00,1.9000e+00,2.5621e+00,1.2879e+00,1.9000e+00,2.5167e+00,1.2506e+00,1.9000e+00,2.4648e+00,1.2228e+00,1.9000e+00,2.4085e+00,1.2058e+00,1.9000e+00,2.3500e+00,1.2000e+00,1.9000e+00,2.2915e+00,1.2058e+00,1.9000e+00,2.2352e+00,1.2228e+00,1.9000e+00,2.1833e+00,1.2506e+00,1.9000e+00,2.1379e+00,1.2879e+00,1.9000e+00,2.1241e+00,1.3047e+00,1.9000e+00,4.1776e+00,-7.9984e-01,1.9000e+00,4.1851e+00,-7.7571e-01,1.9000e+00,4.1974e+00,-7.5359e-01,1.9000e+00,4.2139e+00,-7.3440e-01,1.9000e+00,4.2339e+00,-7.1892e-01,1.9000e+00,4.2566e+00,-7.0778e-01,1.9000e+00,4.2811e+00,-7.0144e-01,1.9000e+00,4.3063e+00,-7.0016e-01,1.9000e+00,4.3313e+00,-7.0399e-01,1.9000e+00,4.3550e+00,-7.1277e-01,1.9000e+00,4.3765e+00,-7.2615e-01,1.9000e+00,4.3948e+00,-7.4358e-01,1.9000e+00,4.4093e+00,-7.6434e-01,1.9000e+00,4.4193e+00,-7.8758e-01,1.9000e+00,4.4244e+00,-8.1235e-01,1.9000e+00,4.4244e+00,-8.3765e-01,1.9000e+00,4.4193e+00,-8.6242e-01,1.9000e+00,4.4093e+00,-8.8566e-01,1.9000e+00,4.3948e+00,-9.0642e-01,1.9000e+00,4.3765e+00,-9.2385e-01,1.9000e+00,4.3550e+00,-9.3723e-01,1.9000e+00,4.3313e+00,-9.4601e-01,1.9000e+00,4.3063e+00,-9.4984e-01,1.9000e+00,4.2811e+00,-9.4856e-01,1.9000e+00,4.2566e+00,-9.4222e-01,1.9000e+00,4.2339e+00,-9.3108e-01,1.9000e+00,4.2139e+00,-9.1560e-01,1.9000e+00,4.1974e+00,-8.9641e-01,1.9000e+00,4.1851e+00,-8.7429e-01,1.9000e+00,4.1776e+00,-8.5016e-01,1.9000e+00,4.1750e+00,-8.2500e-01,1.9000e+00,2.6383e+00,1.0229e+00,1.9000e+00,2.6452e+00,1.0450e+00,1.9000e+00,2.6564e+00,1.0651e+00,1.9000e+00,2.6715e+00,1.0826e+00,1.9000e+00,2.6897e+00,1.0967e+00,1.9000e+00,2.7104e+00,1.1069e+00,1.9000e+00,2.7327e+00,1.1127e+00,1.9000e+00,2.7558e+00,1.1139e+00,1.9000e+00,2.7786e+00,1.1104e+00,1.9000e+00,2.8002e+00,1.1023e+00,1.9000e+00,2.8198e+00,1.0901e+00,1.9000e+00,2.8365e+00,1.0743e+00,1.9000e+00,2.8497e+00,1.0553e+00,1.9000e+00,2.8588e+00,1.0341e+00,1.9000e+00,2.8634e+00,1.0115e+00,1.9000e+00,2.8634e+00,9.8847e-01,1.9000e+00,2.8588e+00,9.6587e-01,1.9000e+00,2.8497e+00,9.4468e-01,1.9000e+00,2.8365e+00,9.2574e-01,1.9000e+00,2.8198e+00,9.0985e-01,1.9000e+00,2.8002e+00,8.9765e-01,1.9000e+00,2.7786e+00,8.8964e-01,1.9000e+00,2.7558e+00,8.8615e-01,1.9000e+00,2.7327e+00,8.8731e-01,1.9000e+00,2.7104e+00,8.9310e-01,1.9000e+00,2.6897e+00,9.0325e-01,1.9000e+00,2.6715e+00,9.1737e-01,1.9000e+00,2.6564e+00,9.3488e-01,1.9000e+00,2.6452e+00,9.5504e-01,1.9000e+00,2.6383e+00,9.7705e-01,1.9000e+00,2.6360e+00,1.0000e+00,1.9000e+00,2.6315e+00,-9.7564e-01,1.9000e+00,2.6388e+00,-9.5228e-01,1.9000e+00,2.6507e+00,-9.3088e-01,1.9000e+00,2.6666e+00,-9.1230e-01,1.9000e+00,2.6860e+00,-8.9731e-01,1.9000e+00,2.7080e+00,-8.8653e-01,1.9000e+00,2.7317e+00,-8.8040e-01,1.9000e+00,2.7561e+00,-8.7916e-01,1.9000e+00,2.7803e+00,-8.8286e-01,1.9000e+00,2.8033e+00,-8.9137e-01,1.9000e+00,2.8241e+00,-9.0432e-01,1.9000e+00,2.8418e+00,-9.2118e-01,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_6()
		{
			double[] value = {2.8558e+00,-9.4128e-01,1.9000e+00,2.8655e+00,-9.6378e-01,1.9000e+00,2.8704e+00,-9.8776e-01,1.9000e+00,2.8704e+00,-1.0122e+00,1.9000e+00,2.8655e+00,-1.0362e+00,1.9000e+00,2.8558e+00,-1.0587e+00,1.9000e+00,2.8418e+00,-1.0788e+00,1.9000e+00,2.8241e+00,-1.0957e+00,1.9000e+00,2.8033e+00,-1.1086e+00,1.9000e+00,2.7803e+00,-1.1171e+00,1.9000e+00,2.7561e+00,-1.1208e+00,1.9000e+00,2.7317e+00,-1.1196e+00,1.9000e+00,2.7080e+00,-1.1135e+00,1.9000e+00,2.6860e+00,-1.1027e+00,1.9000e+00,2.6666e+00,-1.0877e+00,1.9000e+00,2.6507e+00,-1.0691e+00,1.9000e+00,2.6388e+00,-1.0477e+00,1.9000e+00,2.6315e+00,-1.0244e+00,1.9000e+00,2.6290e+00,-1.0000e+00,1.9000e+00,1.8763e+00,-1.3047e+00,1.9000e+00,1.8763e+00,1.3047e+00,1.9000e+00,-1.8763e+00,1.3047e+00,1.9000e+00,-1.8763e+00,-1.3047e+00,1.9000e+00,1.1721e+00,1.3047e+00,1.9000e+00,1.1656e+00,1.3018e+00,1.9000e+00,1.1441e+00,1.2965e+00,1.9000e+00,1.0854e+00,1.2812e+00,1.9000e+00,1.0310e+00,1.2544e+00,1.9000e+00,9.8312e-01,1.2173e+00,1.9000e+00,9.4366e-01,1.1712e+00,1.9000e+00,9.1426e-01,1.1182e+00,1.9000e+00,8.9613e-01,1.0603e+00,1.9000e+00,8.9000e-01,1.0000e+00,1.9000e+00,8.9613e-01,9.3967e-01,1.9000e+00,9.1426e-01,8.8181e-01,1.9000e+00,9.4366e-01,8.2878e-01,1.9000e+00,9.8312e-01,7.8274e-01,1.9000e+00,1.0310e+00,7.4558e-01,1.9000e+00,1.0854e+00,7.1881e-01,1.9000e+00,1.1441e+00,7.0353e-01,1.9000e+00,1.1656e+00,6.9823e-01,1.9000e+00,1.1858e+00,6.8922e-01,1.9000e+00,1.2041e+00,6.7680e-01,1.9000e+00,1.2199e+00,6.6135e-01,1.9000e+00,1.2328e+00,6.4335e-01,1.9000e+00,1.2422e+00,6.2337e-01,1.9000e+00,1.2480e+00,6.0203e-01,1.9000e+00,1.2500e+00,5.8000e-01,1.9000e+00,1.2500e+00,-5.8000e-01,1.9000e+00,1.2480e+00,-6.0203e-01,1.9000e+00,1.2422e+00,-6.2337e-01,1.9000e+00,1.2328e+00,-6.4335e-01,1.9000e+00,1.2199e+00,-6.6135e-01,1.9000e+00,1.2041e+00,-6.7680e-01,1.9000e+00,1.1858e+00,-6.8922e-01,1.9000e+00,1.1656e+00,-6.9823e-01,1.9000e+00,1.1441e+00,-7.0353e-01,1.9000e+00,1.0854e+00,-7.1881e-01,1.9000e+00,1.0310e+00,-7.4558e-01,1.9000e+00,9.8312e-01,-7.8274e-01,1.9000e+00,9.4366e-01,-8.2878e-01,1.9000e+00,9.1426e-01,-8.8181e-01,1.9000e+00,8.9613e-01,-9.3967e-01,1.9000e+00,8.9000e-01,-1.0000e+00,1.9000e+00,8.9613e-01,-1.0603e+00,1.9000e+00,9.1426e-01,-1.1182e+00,1.9000e+00,9.4366e-01,-1.1712e+00,1.9000e+00,9.8312e-01,-1.2173e+00,1.9000e+00,1.0310e+00,-1.2544e+00,1.9000e+00,1.0854e+00,-1.2812e+00,1.9000e+00,1.1441e+00,-1.2965e+00,1.9000e+00,1.1656e+00,-1.3018e+00,1.9000e+00,1.1721e+00,-1.3047e+00,1.9000e+00,1.0857e+00,1.0214e+00,1.9000e+00,1.0921e+00,1.0420e+00,1.9000e+00,1.1026e+00,1.0608e+00,1.9000e+00,1.1166e+00,1.0772e+00,1.9000e+00,1.1337e+00,1.0904e+00,1.9000e+00,1.1530e+00,1.0999e+00,1.9000e+00,1.1739e+00,1.1053e+00,1.9000e+00,1.1954e+00,1.1064e+00,1.9000e+00,1.2167e+00,1.1031e+00,1.9000e+00,1.2369e+00,1.0956e+00,1.9000e+00,1.2552e+00,1.0842e+00,1.9000e+00,1.2708e+00,1.0694e+00,1.9000e+00,1.2831e+00,1.0517e+00,1.9000e+00,1.2916e+00,1.0319e+00,1.9000e+00,1.2960e+00,1.0108e+00,1.9000e+00,1.2960e+00,9.8923e-01,1.9000e+00,1.2916e+00,9.6812e-01,1.9000e+00,1.2831e+00,9.4832e-01,1.9000e+00,1.2708e+00,9.3063e-01,1.9000e+00,1.2552e+00,9.1578e-01,1.9000e+00,1.2369e+00,9.0438e-01,1.9000e+00,1.2167e+00,8.9690e-01,1.9000e+00,1.1954e+00,8.9364e-01,1.9000e+00,1.1739e+00,8.9473e-01,1.9000e+00,1.1530e+00,9.0013e-01,1.9000e+00,1.1337e+00,9.0962e-01,1.9000e+00,1.1166e+00,9.2281e-01,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_7()
		{
			double[] value = {1.1026e+00,9.3916e-01,1.9000e+00,1.0921e+00,9.5800e-01,1.9000e+00,1.0857e+00,9.7856e-01,1.9000e+00,1.0835e+00,1.0000e+00,1.9000e+00,1.0857e+00,-9.7856e-01,1.9000e+00,1.0921e+00,-9.5800e-01,1.9000e+00,1.1026e+00,-9.3916e-01,1.9000e+00,1.1166e+00,-9.2281e-01,1.9000e+00,1.1337e+00,-9.0962e-01,1.9000e+00,1.1530e+00,-9.0013e-01,1.9000e+00,1.1739e+00,-8.9473e-01,1.9000e+00,1.1954e+00,-8.9364e-01,1.9000e+00,1.2167e+00,-8.9690e-01,1.9000e+00,1.2369e+00,-9.0438e-01,1.9000e+00,1.2552e+00,-9.1578e-01,1.9000e+00,1.2708e+00,-9.3063e-01,1.9000e+00,1.2831e+00,-9.4832e-01,1.9000e+00,1.2916e+00,-9.6812e-01,1.9000e+00,1.2960e+00,-9.8923e-01,1.9000e+00,1.2960e+00,-1.0108e+00,1.9000e+00,1.2916e+00,-1.0319e+00,1.9000e+00,1.2831e+00,-1.0517e+00,1.9000e+00,1.2708e+00,-1.0694e+00,1.9000e+00,1.2552e+00,-1.0842e+00,1.9000e+00,1.2369e+00,-1.0956e+00,1.9000e+00,1.2167e+00,-1.1031e+00,1.9000e+00,1.1954e+00,-1.1064e+00,1.9000e+00,1.1739e+00,-1.1053e+00,1.9000e+00,1.1530e+00,-1.0999e+00,1.9000e+00,1.1337e+00,-1.0904e+00,1.9000e+00,1.1166e+00,-1.0772e+00,1.9000e+00,1.1026e+00,-1.0608e+00,1.9000e+00,1.0921e+00,-1.0420e+00,1.9000e+00,1.0857e+00,-1.0214e+00,1.9000e+00,1.0835e+00,-1.0000e+00,1.9000e+00,-1.8763e+00,-1.3047e+00,1.9000e+00,-1.8763e+00,1.3047e+00,1.9000e+00,-5.6290e+00,1.3047e+00,1.9000e+00,-5.6290e+00,-1.3047e+00,1.9000e+00,-4.6500e+00,1.3047e+00,1.9000e+00,-4.6500e+00,-1.3047e+00,1.9000e+00,-5.1500e+00,-1.3047e+00,1.9000e+00,-5.1500e+00,1.3047e+00,1.9000e+00,-4.1721e+00,-1.3047e+00,1.9000e+00,-4.1656e+00,-1.3018e+00,1.9000e+00,-4.1441e+00,-1.2965e+00,1.9000e+00,-4.0854e+00,-1.2812e+00,1.9000e+00,-4.0310e+00,-1.2544e+00,1.9000e+00,-3.9831e+00,-1.2173e+00,1.9000e+00,-3.9437e+00,-1.1712e+00,1.9000e+00,-3.9143e+00,-1.1182e+00,1.9000e+00,-3.8961e+00,-1.0603e+00,1.9000e+00,-3.8900e+00,-1.0000e+00,1.9000e+00,-3.8961e+00,-9.3967e-01,1.9000e+00,-3.9143e+00,-8.8181e-01,1.9000e+00,-3.9437e+00,-8.2878e-01,1.9000e+00,-3.9831e+00,-7.8274e-01,1.9000e+00,-4.0310e+00,-7.4558e-01,1.9000e+00,-4.0854e+00,-7.1881e-01,1.9000e+00,-4.1441e+00,-7.0353e-01,1.9000e+00,-4.1656e+00,-6.9823e-01,1.9000e+00,-4.1858e+00,-6.8922e-01,1.9000e+00,-4.2041e+00,-6.7680e-01,1.9000e+00,-4.2199e+00,-6.6135e-01,1.9000e+00,-4.2328e+00,-6.4335e-01,1.9000e+00,-4.2422e+00,-6.2337e-01,1.9000e+00,-4.2480e+00,-6.0203e-01,1.9000e+00,-4.2500e+00,-5.8000e-01,1.9000e+00,-4.2500e+00,5.8000e-01,1.9000e+00,-4.2480e+00,6.0203e-01,1.9000e+00,-4.2422e+00,6.2337e-01,1.9000e+00,-4.2328e+00,6.4335e-01,1.9000e+00,-4.2199e+00,6.6135e-01,1.9000e+00,-4.2041e+00,6.7680e-01,1.9000e+00,-4.1858e+00,6.8922e-01,1.9000e+00,-4.1656e+00,6.9823e-01,1.9000e+00,-4.1441e+00,7.0353e-01,1.9000e+00,-4.0854e+00,7.1881e-01,1.9000e+00,-4.0310e+00,7.4558e-01,1.9000e+00,-3.9831e+00,7.8274e-01,1.9000e+00,-3.9437e+00,8.2878e-01,1.9000e+00,-3.9143e+00,8.8181e-01,1.9000e+00,-3.8961e+00,9.3967e-01,1.9000e+00,-3.8900e+00,1.0000e+00,1.9000e+00,-3.8961e+00,1.0603e+00,1.9000e+00,-3.9143e+00,1.1182e+00,1.9000e+00,-3.9437e+00,1.1712e+00,1.9000e+00,-3.9831e+00,1.2173e+00,1.9000e+00,-4.0310e+00,1.2544e+00,1.9000e+00,-4.0854e+00,1.2812e+00,1.9000e+00,-4.1441e+00,1.2965e+00,1.9000e+00,-4.1656e+00,1.3018e+00,1.9000e+00,-4.1721e+00,1.3047e+00,1.9000e+00,-4.2943e+00,-9.7856e-01,1.9000e+00,-4.2879e+00,-9.5800e-01,1.9000e+00,-4.2774e+00,-9.3916e-01,1.9000e+00,-4.2634e+00,-9.2281e-01,1.9000e+00,-4.2463e+00,-9.0962e-01,1.9000e+00,-4.2270e+00,-9.0013e-01,1.9000e+00,-4.2061e+00,-8.9473e-01,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_8()
		{
			double[] value = {-4.1846e+00,-8.9364e-01,1.9000e+00,-4.1633e+00,-8.9690e-01,1.9000e+00,-4.1431e+00,-9.0438e-01,1.9000e+00,-4.1248e+00,-9.1578e-01,1.9000e+00,-4.1092e+00,-9.3063e-01,1.9000e+00,-4.0969e+00,-9.4832e-01,1.9000e+00,-4.0884e+00,-9.6812e-01,1.9000e+00,-4.0840e+00,-9.8923e-01,1.9000e+00,-4.0840e+00,-1.0108e+00,1.9000e+00,-4.0884e+00,-1.0319e+00,1.9000e+00,-4.0969e+00,-1.0517e+00,1.9000e+00,-4.1092e+00,-1.0694e+00,1.9000e+00,-4.1248e+00,-1.0842e+00,1.9000e+00,-4.1431e+00,-1.0956e+00,1.9000e+00,-4.1633e+00,-1.1031e+00,1.9000e+00,-4.1846e+00,-1.1064e+00,1.9000e+00,-4.2061e+00,-1.1053e+00,1.9000e+00,-4.2270e+00,-1.0999e+00,1.9000e+00,-4.2463e+00,-1.0904e+00,1.9000e+00,-4.2634e+00,-1.0772e+00,1.9000e+00,-4.2774e+00,-1.0608e+00,1.9000e+00,-4.2879e+00,-1.0420e+00,1.9000e+00,-4.2943e+00,-1.0214e+00,1.9000e+00,-4.2965e+00,-1.0000e+00,1.9000e+00,-4.2943e+00,1.0214e+00,1.9000e+00,-4.2879e+00,1.0420e+00,1.9000e+00,-4.2774e+00,1.0608e+00,1.9000e+00,-4.2634e+00,1.0772e+00,1.9000e+00,-4.2463e+00,1.0904e+00,1.9000e+00,-4.2270e+00,1.0999e+00,1.9000e+00,-4.2061e+00,1.1053e+00,1.9000e+00,-4.1846e+00,1.1064e+00,1.9000e+00,-4.1633e+00,1.1031e+00,1.9000e+00,-4.1431e+00,1.0956e+00,1.9000e+00,-4.1248e+00,1.0842e+00,1.9000e+00,-4.1092e+00,1.0694e+00,1.9000e+00,-4.0969e+00,1.0517e+00,1.9000e+00,-4.0884e+00,1.0319e+00,1.9000e+00,-4.0840e+00,1.0108e+00,1.9000e+00,-4.0840e+00,9.8923e-01,1.9000e+00,-4.0884e+00,9.6812e-01,1.9000e+00,-4.0969e+00,9.4832e-01,1.9000e+00,-4.1092e+00,9.3063e-01,1.9000e+00,-4.1248e+00,9.1578e-01,1.9000e+00,-4.1431e+00,9.0438e-01,1.9000e+00,-4.1633e+00,8.9690e-01,1.9000e+00,-4.1846e+00,8.9364e-01,1.9000e+00,-4.2061e+00,8.9473e-01,1.9000e+00,-4.2270e+00,9.0013e-01,1.9000e+00,-4.2463e+00,9.0962e-01,1.9000e+00,-4.2634e+00,9.2281e-01,1.9000e+00,-4.2774e+00,9.3916e-01,1.9000e+00,-4.2879e+00,9.5800e-01,1.9000e+00,-4.2943e+00,9.7856e-01,1.9000e+00,-4.2965e+00,1.0000e+00,1.9000e+00,5.6290e+00,1.3047e+00,1.9000e+00,5.6290e+00,3.9140e+00,1.9000e+00,1.8763e+00,3.9140e+00,1.9000e+00,1.8763e+00,1.3047e+00,1.9000e+00,5.6290e+00,3.0843e+00,1.9000e+00,4.7993e+00,3.9140e+00,1.9000e+00,1.8763e+00,2.0633e+00,1.9000e+00,1.8778e+00,2.0645e+00,1.9000e+00,1.8886e+00,2.0702e+00,1.9000e+00,1.9003e+00,2.0738e+00,1.9000e+00,1.9125e+00,2.0750e+00,1.9000e+00,2.0500e+00,2.0750e+00,1.9000e+00,2.0500e+00,2.1500e+00,1.9000e+00,2.0558e+00,2.2085e+00,1.9000e+00,2.0728e+00,2.2648e+00,1.9000e+00,2.1006e+00,2.3167e+00,1.9000e+00,2.1379e+00,2.3621e+00,1.9000e+00,2.1833e+00,2.3994e+00,1.9000e+00,2.2352e+00,2.4272e+00,1.9000e+00,2.2915e+00,2.4442e+00,1.9000e+00,2.3500e+00,2.4500e+00,1.9000e+00,2.4085e+00,2.4442e+00,1.9000e+00,2.4648e+00,2.4272e+00,1.9000e+00,2.5167e+00,2.3994e+00,1.9000e+00,2.5621e+00,2.3621e+00,1.9000e+00,2.5994e+00,2.3167e+00,1.9000e+00,2.6272e+00,2.2648e+00,1.9000e+00,2.6442e+00,2.2085e+00,1.9000e+00,2.6500e+00,2.1500e+00,1.9000e+00,2.6500e+00,2.0250e+00,1.9000e+00,2.6890e+00,2.0212e+00,1.9000e+00,2.7265e+00,2.0098e+00,1.9000e+00,2.7611e+00,1.9913e+00,1.9000e+00,2.7914e+00,1.9664e+00,1.9000e+00,2.8163e+00,1.9361e+00,1.9000e+00,2.8348e+00,1.9015e+00,1.9000e+00,2.8462e+00,1.8640e+00,1.9000e+00,2.8500e+00,1.8250e+00,1.9000e+00,2.8462e+00,1.7860e+00,1.9000e+00,2.8348e+00,1.7485e+00,1.9000e+00,2.8163e+00,1.7139e+00,1.9000e+00,2.7914e+00,1.6836e+00,1.9000e+00,2.7611e+00,1.6587e+00,1.9000e+00,2.7265e+00,1.6402e+00,1.9000e+00,2.6890e+00,1.6288e+00,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_9()
		{
			double[] value = {2.6500e+00,1.6250e+00,1.9000e+00,2.6500e+00,1.5000e+00,1.9000e+00,2.6442e+00,1.4415e+00,1.9000e+00,2.6272e+00,1.3852e+00,1.9000e+00,2.5994e+00,1.3333e+00,1.9000e+00,2.5759e+00,1.3047e+00,1.9000e+00,2.1241e+00,1.3047e+00,1.9000e+00,2.1006e+00,1.3333e+00,1.9000e+00,2.0728e+00,1.3852e+00,1.9000e+00,2.0558e+00,1.4415e+00,1.9000e+00,2.0500e+00,1.5000e+00,1.9000e+00,2.0500e+00,1.5750e+00,1.9000e+00,1.9125e+00,1.5750e+00,1.9000e+00,1.9003e+00,1.5762e+00,1.9000e+00,1.8886e+00,1.5798e+00,1.9000e+00,1.8778e+00,1.5855e+00,1.9000e+00,1.8763e+00,1.5867e+00,1.9000e+00,3.8476e+00,2.7382e+00,1.9000e+00,3.9068e+00,2.8444e+00,1.9000e+00,3.9862e+00,2.9366e+00,1.9000e+00,4.0825e+00,3.0109e+00,1.9000e+00,4.1917e+00,3.0644e+00,1.9000e+00,4.3095e+00,3.0947e+00,1.9000e+00,4.4310e+00,3.1007e+00,1.9000e+00,4.5513e+00,3.0822e+00,1.9000e+00,4.6653e+00,3.0399e+00,1.9000e+00,4.7685e+00,2.9755e+00,1.9000e+00,4.8566e+00,2.8916e+00,1.9000e+00,4.9261e+00,2.7918e+00,1.9000e+00,4.9740e+00,2.6800e+00,1.9000e+00,4.9985e+00,2.5608e+00,1.9000e+00,4.9985e+00,2.4392e+00,1.9000e+00,4.9740e+00,2.3200e+00,1.9000e+00,4.9261e+00,2.2082e+00,1.9000e+00,4.8566e+00,2.1084e+00,1.9000e+00,4.7685e+00,2.0245e+00,1.9000e+00,4.6653e+00,1.9601e+00,1.9000e+00,4.5513e+00,1.9178e+00,1.9000e+00,4.4310e+00,1.8993e+00,1.9000e+00,4.3095e+00,1.9053e+00,1.9000e+00,4.1917e+00,1.9356e+00,1.9000e+00,4.0825e+00,1.9891e+00,1.9000e+00,3.9862e+00,2.0634e+00,1.9000e+00,3.9068e+00,2.1556e+00,1.9000e+00,3.8476e+00,2.2618e+00,1.9000e+00,3.8110e+00,2.3778e+00,1.9000e+00,3.7879e+00,2.3852e+00,1.9000e+00,3.7668e+00,2.3969e+00,1.9000e+00,3.7482e+00,2.4125e+00,1.9000e+00,3.7331e+00,2.4313e+00,1.9000e+00,3.7218e+00,2.4527e+00,1.9000e+00,3.7148e+00,2.4759e+00,1.9000e+00,3.7125e+00,2.5000e+00,1.9000e+00,3.7148e+00,2.5241e+00,1.9000e+00,3.7218e+00,2.5473e+00,1.9000e+00,3.7331e+00,2.5687e+00,1.9000e+00,3.7482e+00,2.5875e+00,1.9000e+00,3.7668e+00,2.6031e+00,1.9000e+00,3.7879e+00,2.6148e+00,1.9000e+00,3.8110e+00,2.6222e+00,1.9000e+00,2.6315e+00,2.6744e+00,1.9000e+00,2.6388e+00,2.6977e+00,1.9000e+00,2.6507e+00,2.7191e+00,1.9000e+00,2.6666e+00,2.7377e+00,1.9000e+00,2.6860e+00,2.7527e+00,1.9000e+00,2.7080e+00,2.7635e+00,1.9000e+00,2.7317e+00,2.7696e+00,1.9000e+00,2.7561e+00,2.7708e+00,1.9000e+00,2.7803e+00,2.7671e+00,1.9000e+00,2.8033e+00,2.7586e+00,1.9000e+00,2.8241e+00,2.7457e+00,1.9000e+00,2.8418e+00,2.7288e+00,1.9000e+00,2.8558e+00,2.7087e+00,1.9000e+00,2.8655e+00,2.6862e+00,1.9000e+00,2.8704e+00,2.6622e+00,1.9000e+00,2.8704e+00,2.6378e+00,1.9000e+00,2.8655e+00,2.6138e+00,1.9000e+00,2.8558e+00,2.5913e+00,1.9000e+00,2.8418e+00,2.5712e+00,1.9000e+00,2.8241e+00,2.5543e+00,1.9000e+00,2.8033e+00,2.5414e+00,1.9000e+00,2.7803e+00,2.5329e+00,1.9000e+00,2.7561e+00,2.5292e+00,1.9000e+00,2.7317e+00,2.5304e+00,1.9000e+00,2.7080e+00,2.5365e+00,1.9000e+00,2.6860e+00,2.5473e+00,1.9000e+00,2.6666e+00,2.5623e+00,1.9000e+00,2.6507e+00,2.5809e+00,1.9000e+00,2.6388e+00,2.6023e+00,1.9000e+00,2.6315e+00,2.6256e+00,1.9000e+00,2.6290e+00,2.6500e+00,1.9000e+00,1.8763e+00,1.3047e+00,1.9000e+00,1.8763e+00,3.9140e+00,1.9000e+00,-1.8763e+00,3.9140e+00,1.9000e+00,-1.8763e+00,1.3047e+00,1.9000e+00,-1.8763e+00,2.2422e+00,1.9000e+00,-1.8566e+00,2.2328e+00,1.9000e+00,-1.8387e+00,2.2199e+00,1.9000e+00,-1.8232e+00,2.2041e+00,1.9000e+00,-1.8108e+00,2.1858e+00,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_10()
		{
			double[] value = {-1.8018e+00,2.1656e+00,1.9000e+00,-1.7965e+00,2.1441e+00,1.9000e+00,-1.7812e+00,2.0854e+00,1.9000e+00,-1.7544e+00,2.0310e+00,1.9000e+00,-1.7173e+00,1.9831e+00,1.9000e+00,-1.6712e+00,1.9437e+00,1.9000e+00,-1.6182e+00,1.9143e+00,1.9000e+00,-1.5603e+00,1.8961e+00,1.9000e+00,-1.5000e+00,1.8900e+00,1.9000e+00,-1.4397e+00,1.8961e+00,1.9000e+00,-1.3818e+00,1.9143e+00,1.9000e+00,-1.3288e+00,1.9437e+00,1.9000e+00,-1.2827e+00,1.9831e+00,1.9000e+00,-1.2456e+00,2.0310e+00,1.9000e+00,-1.2188e+00,2.0854e+00,1.9000e+00,-1.2035e+00,2.1441e+00,1.9000e+00,-1.1982e+00,2.1656e+00,1.9000e+00,-1.1892e+00,2.1858e+00,1.9000e+00,-1.1768e+00,2.2041e+00,1.9000e+00,-1.1613e+00,2.2199e+00,1.9000e+00,-1.1434e+00,2.2328e+00,1.9000e+00,-1.1234e+00,2.2422e+00,1.9000e+00,-1.1020e+00,2.2480e+00,1.9000e+00,-1.0800e+00,2.2500e+00,1.9000e+00,-1.7000e-01,2.2500e+00,1.9000e+00,-1.4797e-01,2.2480e+00,1.9000e+00,-1.2663e-01,2.2422e+00,1.9000e+00,-1.0665e-01,2.2328e+00,1.9000e+00,-8.8651e-02,2.2199e+00,1.9000e+00,-7.3199e-02,2.2041e+00,1.9000e+00,-6.0776e-02,2.1858e+00,1.9000e+00,-5.1773e-02,2.1656e+00,1.9000e+00,-4.6471e-02,2.1441e+00,1.9000e+00,-3.1189e-02,2.0854e+00,1.9000e+00,-4.4196e-03,2.0310e+00,1.9000e+00,3.2743e-02,1.9831e+00,1.9000e+00,7.8781e-02,1.9437e+00,1.9000e+00,1.3181e-01,1.9143e+00,1.9000e+00,1.8967e-01,1.8961e+00,1.9000e+00,2.5000e-01,1.8900e+00,1.9000e+00,3.1033e-01,1.8961e+00,1.9000e+00,3.6819e-01,1.9143e+00,1.9000e+00,4.2122e-01,1.9437e+00,1.9000e+00,4.6726e-01,1.9831e+00,1.9000e+00,5.0442e-01,2.0310e+00,1.9000e+00,5.3119e-01,2.0854e+00,1.9000e+00,5.4647e-01,2.1441e+00,1.9000e+00,5.5177e-01,2.1656e+00,1.9000e+00,5.6078e-01,2.1858e+00,1.9000e+00,5.7320e-01,2.2041e+00,1.9000e+00,5.8865e-01,2.2199e+00,1.9000e+00,6.0665e-01,2.2328e+00,1.9000e+00,6.2663e-01,2.2422e+00,1.9000e+00,6.4797e-01,2.2480e+00,1.9000e+00,6.7000e-01,2.2500e+00,1.9000e+00,1.1250e+00,2.2500e+00,1.9000e+00,1.1494e+00,2.2476e+00,1.9000e+00,1.1728e+00,2.2405e+00,1.9000e+00,1.1944e+00,2.2289e+00,1.9000e+00,1.2134e+00,2.2134e+00,1.9000e+00,1.2289e+00,2.1944e+00,1.9000e+00,1.2405e+00,2.1728e+00,1.9000e+00,1.2476e+00,2.1494e+00,1.9000e+00,1.2500e+00,2.1250e+00,1.9000e+00,1.2500e+00,1.4200e+00,1.9000e+00,1.2480e+00,1.3980e+00,1.9000e+00,1.2422e+00,1.3766e+00,1.9000e+00,1.2328e+00,1.3566e+00,1.9000e+00,1.2199e+00,1.3387e+00,1.9000e+00,1.2041e+00,1.3232e+00,1.9000e+00,1.1858e+00,1.3108e+00,1.9000e+00,1.1721e+00,1.3047e+00,1.9000e+00,1.8763e+00,1.5867e+00,1.9000e+00,1.8683e+00,1.5933e+00,1.9000e+00,1.8605e+00,1.6028e+00,1.9000e+00,1.8548e+00,1.6136e+00,1.9000e+00,1.8512e+00,1.6253e+00,1.9000e+00,1.8500e+00,1.6375e+00,1.9000e+00,1.8500e+00,2.0125e+00,1.9000e+00,1.8512e+00,2.0247e+00,1.9000e+00,1.8548e+00,2.0364e+00,1.9000e+00,1.8605e+00,2.0472e+00,1.9000e+00,1.8683e+00,2.0567e+00,1.9000e+00,1.8763e+00,2.0633e+00,1.9000e+00,-1.6043e+00,2.2114e+00,1.9000e+00,-1.5979e+00,2.2320e+00,1.9000e+00,-1.5874e+00,2.2508e+00,1.9000e+00,-1.5734e+00,2.2672e+00,1.9000e+00,-1.5563e+00,2.2804e+00,1.9000e+00,-1.5370e+00,2.2899e+00,1.9000e+00,-1.5161e+00,2.2953e+00,1.9000e+00,-1.4946e+00,2.2964e+00,1.9000e+00,-1.4733e+00,2.2931e+00,1.9000e+00,-1.4531e+00,2.2856e+00,1.9000e+00,-1.4348e+00,2.2742e+00,1.9000e+00,-1.4192e+00,2.2594e+00,1.9000e+00,-1.4069e+00,2.2417e+00,1.9000e+00,-1.3984e+00,2.2219e+00,1.9000e+00,-1.3940e+00,2.2008e+00,1.9000e+00,-1.3940e+00,2.1792e+00,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_11()
		{
			double[] value = {-1.3984e+00,2.1581e+00,1.9000e+00,-1.4069e+00,2.1383e+00,1.9000e+00,-1.4192e+00,2.1206e+00,1.9000e+00,-1.4348e+00,2.1058e+00,1.9000e+00,-1.4531e+00,2.0944e+00,1.9000e+00,-1.4733e+00,2.0869e+00,1.9000e+00,-1.4946e+00,2.0836e+00,1.9000e+00,-1.5161e+00,2.0847e+00,1.9000e+00,-1.5370e+00,2.0901e+00,1.9000e+00,-1.5563e+00,2.0996e+00,1.9000e+00,-1.5734e+00,2.1128e+00,1.9000e+00,-1.5874e+00,2.1292e+00,1.9000e+00,-1.5979e+00,2.1480e+00,1.9000e+00,-1.6043e+00,2.1686e+00,1.9000e+00,-1.6065e+00,2.1900e+00,1.9000e+00,1.4568e-01,2.2114e+00,1.9000e+00,1.5213e-01,2.2320e+00,1.9000e+00,1.6259e-01,2.2508e+00,1.9000e+00,1.7663e-01,2.2672e+00,1.9000e+00,1.9367e-01,2.2804e+00,1.9000e+00,2.1301e-01,2.2899e+00,1.9000e+00,2.3387e-01,2.2953e+00,1.9000e+00,2.5539e-01,2.2964e+00,1.9000e+00,2.7669e-01,2.2931e+00,1.9000e+00,2.9690e-01,2.2856e+00,1.9000e+00,3.1519e-01,2.2742e+00,1.9000e+00,3.3081e-01,2.2594e+00,1.9000e+00,3.4312e-01,2.2417e+00,1.9000e+00,3.5162e-01,2.2219e+00,1.9000e+00,3.5595e-01,2.2008e+00,1.9000e+00,3.5595e-01,2.1792e+00,1.9000e+00,3.5162e-01,2.1581e+00,1.9000e+00,3.4312e-01,2.1383e+00,1.9000e+00,3.3081e-01,2.1206e+00,1.9000e+00,3.1519e-01,2.1058e+00,1.9000e+00,2.9690e-01,2.0944e+00,1.9000e+00,2.7669e-01,2.0869e+00,1.9000e+00,2.5539e-01,2.0836e+00,1.9000e+00,2.3387e-01,2.0847e+00,1.9000e+00,2.1301e-01,2.0901e+00,1.9000e+00,1.9367e-01,2.0996e+00,1.9000e+00,1.7663e-01,2.1128e+00,1.9000e+00,1.6259e-01,2.1292e+00,1.9000e+00,1.5213e-01,2.1480e+00,1.9000e+00,1.4568e-01,2.1686e+00,1.9000e+00,1.4350e-01,2.1900e+00,1.9000e+00,-1.8763e+00,1.3047e+00,1.9000e+00,-1.8763e+00,3.9140e+00,1.9000e+00,-5.6290e+00,3.9140e+00,1.9000e+00,-5.6290e+00,1.3047e+00,1.9000e+00,-4.7993e+00,3.9140e+00,1.9000e+00,-5.6290e+00,3.0843e+00,1.9000e+00,-5.1500e+00,1.3047e+00,1.9000e+00,-5.1500e+00,3.0000e+00,1.9000e+00,-5.1476e+00,3.0244e+00,1.9000e+00,-5.1405e+00,3.0478e+00,1.9000e+00,-5.1289e+00,3.0694e+00,1.9000e+00,-5.1134e+00,3.0884e+00,1.9000e+00,-5.0944e+00,3.1039e+00,1.9000e+00,-5.0728e+00,3.1155e+00,1.9000e+00,-5.0494e+00,3.1226e+00,1.9000e+00,-5.0250e+00,3.1250e+00,1.9000e+00,-4.7750e+00,3.1250e+00,1.9000e+00,-4.7506e+00,3.1226e+00,1.9000e+00,-4.7272e+00,3.1155e+00,1.9000e+00,-4.7056e+00,3.1039e+00,1.9000e+00,-4.6866e+00,3.0884e+00,1.9000e+00,-4.6711e+00,3.0694e+00,1.9000e+00,-4.6595e+00,3.0478e+00,1.9000e+00,-4.6524e+00,3.0244e+00,1.9000e+00,-4.6500e+00,3.0000e+00,1.9000e+00,-4.6500e+00,1.3047e+00,1.9000e+00,-4.1721e+00,1.3047e+00,1.9000e+00,-4.1858e+00,1.3108e+00,1.9000e+00,-4.2041e+00,1.3232e+00,1.9000e+00,-4.2199e+00,1.3387e+00,1.9000e+00,-4.2328e+00,1.3566e+00,1.9000e+00,-4.2422e+00,1.3766e+00,1.9000e+00,-4.2480e+00,1.3980e+00,1.9000e+00,-4.2500e+00,1.4200e+00,1.9000e+00,-4.2500e+00,2.1250e+00,1.9000e+00,-4.2476e+00,2.1494e+00,1.9000e+00,-4.2405e+00,2.1728e+00,1.9000e+00,-4.2289e+00,2.1944e+00,1.9000e+00,-4.2134e+00,2.2134e+00,1.9000e+00,-4.1944e+00,2.2289e+00,1.9000e+00,-4.1728e+00,2.2405e+00,1.9000e+00,-4.1494e+00,2.2476e+00,1.9000e+00,-4.1250e+00,2.2500e+00,1.9000e+00,-3.6700e+00,2.2500e+00,1.9000e+00,-3.6480e+00,2.2480e+00,1.9000e+00,-3.6266e+00,2.2422e+00,1.9000e+00,-3.6066e+00,2.2328e+00,1.9000e+00,-3.5887e+00,2.2199e+00,1.9000e+00,-3.5732e+00,2.2041e+00,1.9000e+00,-3.5608e+00,2.1858e+00,1.9000e+00,-3.5518e+00,2.1656e+00,1.9000e+00,-3.5465e+00,2.1441e+00,1.9000e+00,-3.5312e+00,2.0854e+00,1.9000e+00,-3.5044e+00,2.0310e+00,1.9000e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_12()
		{
			double[] value = {-3.4673e+00,1.9831e+00,1.9000e+00,-3.4212e+00,1.9437e+00,1.9000e+00,-3.3682e+00,1.9143e+00,1.9000e+00,-3.3103e+00,1.8961e+00,1.9000e+00,-3.2500e+00,1.8900e+00,1.9000e+00,-3.1897e+00,1.8961e+00,1.9000e+00,-3.1318e+00,1.9143e+00,1.9000e+00,-3.0788e+00,1.9437e+00,1.9000e+00,-3.0327e+00,1.9831e+00,1.9000e+00,-2.9956e+00,2.0310e+00,1.9000e+00,-2.9688e+00,2.0854e+00,1.9000e+00,-2.9535e+00,2.1441e+00,1.9000e+00,-2.9482e+00,2.1656e+00,1.9000e+00,-2.9392e+00,2.1858e+00,1.9000e+00,-2.9268e+00,2.2041e+00,1.9000e+00,-2.9113e+00,2.2199e+00,1.9000e+00,-2.8934e+00,2.2328e+00,1.9000e+00,-2.8734e+00,2.2422e+00,1.9000e+00,-2.8520e+00,2.2480e+00,1.9000e+00,-2.8300e+00,2.2500e+00,1.9000e+00,-1.9200e+00,2.2500e+00,1.9000e+00,-1.8980e+00,2.2480e+00,1.9000e+00,-1.8763e+00,2.2422e+00,1.9000e+00,-3.3543e+00,2.2114e+00,1.9000e+00,-3.3479e+00,2.2320e+00,1.9000e+00,-3.3374e+00,2.2508e+00,1.9000e+00,-3.3234e+00,2.2672e+00,1.9000e+00,-3.3063e+00,2.2804e+00,1.9000e+00,-3.2870e+00,2.2899e+00,1.9000e+00,-3.2661e+00,2.2953e+00,1.9000e+00,-3.2446e+00,2.2964e+00,1.9000e+00,-3.2233e+00,2.2931e+00,1.9000e+00,-3.2031e+00,2.2856e+00,1.9000e+00,-3.1848e+00,2.2742e+00,1.9000e+00,-3.1692e+00,2.2594e+00,1.9000e+00,-3.1569e+00,2.2417e+00,1.9000e+00,-3.1484e+00,2.2219e+00,1.9000e+00,-3.1440e+00,2.2008e+00,1.9000e+00,-3.1440e+00,2.1792e+00,1.9000e+00,-3.1484e+00,2.1581e+00,1.9000e+00,-3.1569e+00,2.1383e+00,1.9000e+00,-3.1692e+00,2.1206e+00,1.9000e+00,-3.1848e+00,2.1058e+00,1.9000e+00,-3.2031e+00,2.0944e+00,1.9000e+00,-3.2233e+00,2.0869e+00,1.9000e+00,-3.2446e+00,2.0836e+00,1.9000e+00,-3.2661e+00,2.0847e+00,1.9000e+00,-3.2870e+00,2.0901e+00,1.9000e+00,-3.3063e+00,2.0996e+00,1.9000e+00,-3.3234e+00,2.1128e+00,1.9000e+00,-3.3374e+00,2.1292e+00,1.9000e+00,-3.3479e+00,2.1480e+00,1.9000e+00,-3.3543e+00,2.1686e+00,1.9000e+00,-3.3565e+00,2.1900e+00,1.9000e+00};
			return value;
		}


		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_57_index_1()
		{
			int[] value = {1,6,7,1,7,8,1,8,9,1,9,10,1,10,11,1,11,12,1,12,13,1,13,14,1,14,15,1,15,16,1,16,17,1,17,18,1,18,19,1,19,20,1,20,21,1,21,22,1,22,23,1,23,24,1,24,25,1,25,26,1,26,27,1,27,28,1,28,29,29,30,31,1,29,31,1,31,32,1,32,33,1,33,34,1,34,35,1,35,36,36,123,124,1,36,124,1,124,125,1,125,126,1,126,127,1,127,128,1,128,129,1,129,130,1,130,131,1,131,132,1,132,133,1,133,134,1,134,135,1,135,136,1,136,137,122,123,36,121,122,36,120,121,36,150,120,36,149,150,36,148,149,36,148,36,37,147,148,37,147,37,38,146,147,38,146,38,39,146,39,40,146,40,41,145,146,41,145,41,42,47,48,49,46,47,49,45,46,49,44,45,49,44,49,50,43,44,50,43,50,51,43,51,52,43,52,53,66,67,68,65,66,68,64,65,68,64,68,69,63,64,69,63,69,70,62,63,70,62,70,71,62,71,72,74,75,2,73,74,2,72,73,2,62,72,2,61,62,2,60,61,2,59,60,2,58,59,2,57,58,2,57,2,3,56,57,3,55,56,3,54,55,3,53,54,3,43,53,3,42,43,3,145,42,3,144,145,3,143,144,3,142,143,3,141,142,3,140,141,3,139,140,3,139,3,4,138,139,4,137,138,4,4,5,107,4,107,108,4,108,109,4,109,110,4,110,111,4,111,112,4,112,113,4,113,114,137,4,114,137,114,115,137,115,116,137,116,117,137,117,118,137,118,76,137,76,77,137,77,78,137,78,79,137,79,80,137,80,81,137,81,82,137,82,83,137,83,84,137,84,85,137,85,86,137,86,87,137,87,88,137,88,89,89,90,91,137,89,91,137,91,92,137,92,93,137,93,94,1,137,94,1,94,95,1,95,96,1,96,97,1,97,98,1,98,99,1,99,100,1,100,101,1,101,102,5,1,102,5,102,103,5,103,104,5,104,105,5,105,106,107,5,106,261,198,199,261,199,200,261,200,201,261,201,202,261,202,203,261,203,204,261,204,205,214,215,216,214,216,217,214,217,218,213,214,218,213,218,219,213,219,220,212,213,220,212,220,221,212,221,222,211,212,222,211,222,223,211,223,224,210,211,224,210,224,225,225,226,227,225,227,228,225,228,229,225,229,230,225,230,231,225,231,232,225,232,233,225,233,234,225,234,235,225,235,236,225,236,237,225,237,238,225,238,239,210,225,239,209,210,239,209,239,240,209,240,241,209,241,242,209,242,243,209,243,244,208,209,244,208,244,245,208,245,246,207,208,246,207,246,247,207,247,248,206,207,248,206,248,249,206,249,250,206,250,251,206,251,252,260,230,229,259,260,229,258,259,229,257,258,229,256,257,229,255,256,229,255,229,154,254,255,154,253,254,154,252,253,154,206,252,154,205,206,154,261,205,154,152,155,156,152,156,157,152,157,158,152,158,159,152,159,160,152,160,161,152,161,162,152,162,163,152,163,164,152,164,165,151,152,165,151,165,166,151,166,167,151,167,168,151,168,169,151,169,170,151,170,171,151,171,172,151,172,173,154,151,173,154,173,174,154,174,175,154,175,176,154,176,177,154,177,178,154,178,179,154,179,180,154,180,181,154,181,182,154,182,183,154,183,184,184,185,186,184,186,187,184,187,188,184,188,189,184,189,190,184,190,191,184,191,192,184,192,193,184,193,194,184,194,195,195,196,197,195,197,198,195,198,261,195,261,262,195,262,263,195,263,264,195,264,265,195,265,266,195,266,267,195,267,268,195,268,269,184,195,269,184,269,270,184,270,271,184,271,272,184,272,273,184,273,274,184,274,275,184,275,276,184,276,277,184,277,278,184,278,279,184,279,280,154,184,280,154,280,281,154,281,282,154,282,283,154,283,284,154,284,285,154,285,286,154,286,287,154,287,288,154,288,289,154,289,290,154,290,291,261,154,291,330,360,361,330,361,362,330,362,363,330,363,364,330,364,365,330,365,366,390,360,330,389,390,330,388,389,330,387,388,330,386,387,330,385,386,330,385,330,331,384,385,331,384,331,332,384,332,333,384,333,334,383,384,334,383,334,335,383,335,336,383,336,337,383,337,338,383,338,339,355,356,357,355,357,358,355,358,359,354,355,359,354,359,294,353,354,294,352,353,294,351,352,294,350,351,294,349,350,294,348,349,294,347,348,294,346,347,294,345,346,294,344,345,294,343,344,294,343,294,296,342};
			return value;
		}
		private int[] getIndexedTriangleSet_6_57_index_2()
		{
			int[] value = {343,296,341,342,296,340,341,296,339,340,296,383,339,296,382,383,296,381,382,296,381,296,297,380,381,297,379,380,297,379,297,292,378,379,292,377,378,292,376,377,292,375,376,292,374,375,292,373,374,292,372,373,292,371,372,292,292,298,299,292,299,300,292,300,301,292,301,302,292,302,303,292,303,304,292,304,305,292,305,306,292,306,307,292,307,308,292,308,309,292,309,310,371,292,310,370,371,310,369,370,310,369,310,311,369,311,312,369,312,313,369,313,314,368,369,314,368,314,315,368,315,316,368,316,317,367,368,317,367,317,318,366,367,318,366,318,319,330,366,319,330,319,320,330,320,321,330,321,322,330,322,323,330,323,324,330,324,325,330,325,326,330,326,327,330,327,328,330,328,329,395,469,470,395,470,471,395,471,472,395,472,473,395,473,474,392,395,474,392,474,475,392,475,476,392,476,477,392,477,478,392,478,479,392,479,480,392,480,481,392,481,482,392,482,483,392,483,484,392,484,485,392,485,486,392,486,487,392,487,488,392,488,489,468,469,395,467,468,395,497,467,395,496,497,395,495,496,395,494,495,395,494,395,396,493,494,396,493,396,397,493,397,398,493,398,399,492,493,399,492,399,393,491,492,393,491,393,394,490,491,394,489,490,394,489,394,400,489,400,401,489,401,402,489,402,403,489,403,404,404,463,464,404,464,465,404,465,466,489,404,466,489,466,436,489,436,437,489,437,438,489,438,439,489,439,440,489,440,441,489,441,442,489,442,443,489,443,444,489,444,445,489,445,446,489,446,447,489,447,448,489,448,449,489,449,450,462,463,404,461,462,404,460,461,404,459,460,404,458,459,404,457,458,404,457,404,391,456,457,391,455,456,391,454,455,391,453,454,391,452,453,391,451,452,391,450,451,391,489,450,391,391,392,418,391,418,419,391,419,420,391,420,421,391,421,422,391,422,423,391,423,424,391,424,425,391,425,426,391,426,427,391,427,428,489,391,428,489,428,429,489,429,430,489,430,431,489,431,432,489,432,433,489,433,434,489,434,435,489,435,405,489,405,406,489,406,407,489,407,408,489,408,409,489,409,410,489,410,411,392,489,411,392,411,412,392,412,413,392,413,414,392,414,415,392,415,416,392,416,417,418,392,417,578,502,503,578,503,504,578,504,505,578,505,506,578,506,507,578,507,508,578,508,509,509,510,511,509,511,512,509,512,513,509,513,514,509,514,515,509,515,516,509,516,517,530,531,532,530,532,533,530,533,534,529,530,534,529,534,535,529,535,536,528,529,536,528,536,537,528,537,538,527,528,538,527,538,539,527,539,540,526,527,540,526,540,541,541,542,543,541,543,570,541,570,571,541,571,572,541,572,573,541,573,574,541,574,544,541,544,545,526,541,545,525,526,545,525,545,546,525,546,547,525,547,548,525,548,549,525,549,550,524,525,550,524,550,551,524,551,552,524,552,553,523,524,553,523,553,554,522,523,554,522,554,555,522,555,556,522,556,557,522,557,558,569,570,543,568,569,543,567,568,543,566,567,543,565,566,543,564,565,543,564,543,498,563,564,498,562,563,498,561,562,498,560,561,498,559,560,498,558,559,498,522,558,498,521,522,498,520,521,498,520,498,499,519,520,499,518,519,499,517,518,499,502,578,579,502,579,580,502,580,581,499,502,581,499,581,582,499,582,583,499,583,584,499,584,585,499,585,586,499,586,587,499,587,588,499,588,589,499,589,590,499,590,591,517,499,591,517,591,592,517,592,593,517,593,594,517,594,595,517,595,596,517,596,597,509,517,597,509,597,598,509,598,599,509,599,600,509,600,601,509,601,602,509,602,603,509,603,604,509,604,605,509,605,575,509,575,576,509,576,577,578,509,577,703,610,611,703,611,612,703,612,613,703,613,614,703,614,615,703,615,616,616,617,618,616,618,619,616,619,620,616,620,621,616,621,622,616,622,623,616,623,624,616,624,625,638,640,641,638,641,642,638,642,643,637,638,643,637,643,644,637,644,645,636,637,645,636,645,646,636,646,647,635,636,647,635,647,648,635,648,649,634,635,649,634,649,650,650,651,652,650,652,663,650,663,664,650,664,665,650,665,666,650,666,667,650,667,668,650,668,669,650,669,670,634,650,670,633,634,670,633,670,671,633,671,672,633,672,673,633,673,674,633,674,675,632,633,675,632,675,676,632,676,677,631,632,677,631,677,678,631,678,679,630,631,679,630,679,680,630,680,681,630,681,682,630,682,683,662,663,652,661,662,652,660,661};
			return value;
		}
		private int[] getIndexedTriangleSet_6_57_index_3()
		{
			int[] value = {652,659,660,652,658,659,652,657,658,652,657,652,608,656,657,608,655,656,608,654,655,608,653,654,608,683,653,608,630,683,608,629,630,608,628,629,608,627,628,608,627,608,609,626,627,609,625,626,609,610,703,704,610,704,705,610,705,706,609,610,706,609,706,707,609,707,708,609,708,709,609,709,710,609,710,711,609,711,712,609,712,713,609,713,714,609,714,684,625,609,684,625,684,685,625,685,686,625,686,687,625,687,688,625,688,689,625,689,690,625,690,691,625,691,692,616,625,692,616,692,693,616,693,694,616,694,695,616,695,696,616,696,697,616,697,698,616,698,699,616,699,700,616,700,701,616,701,702,703,616,702,718,721,722,718,722,723,718,723,724,718,724,725,718,725,726,718,726,727,717,718,727,717,727,728,717,728,729,717,729,730,717,730,731,717,731,732,717,732,733,717,733,734,717,734,735,717,735,736,717,736,737,717,737,738,717,738,739,717,739,740,740,864,865,717,740,865,717,865,866,717,866,867,717,867,868,717,868,838,717,838,839,717,839,840,717,840,841,717,841,842,717,842,843,720,717,843,720,843,844,720,844,845,720,845,846,720,846,847,720,847,848,720,848,849,720,849,850,720,850,851,720,851,852,720,852,853,720,853,854,720,854,855,720,855,856,720,856,857,720,857,858,863,864,740,862,863,740,861,862,740,860,861,740,859,860,740,858,859,740,858,740,741,720,858,741,720,741,742,720,742,743,720,743,744,720,744,745,720,745,746,720,746,747,720,747,748,720,748,749,720,749,750,720,750,751,720,751,752,720,752,753,720,753,754,720,754,755,720,755,756,761,762,763,760,761,763,759,760,763,758,759,763,757,758,763,757,763,764,757,764,765,757,765,766,769,770,715,768,769,715,767,768,715,766,767,715,715,791,792,715,792,793,715,793,794,715,794,795,715,795,796,715,796,797,766,715,797,766,797,798,766,798,799,766,799,800,757,766,800,756,757,800,756,800,801,756,801,802,756,802,803,756,803,804,756,804,805,756,805,806,756,806,771,756,771,772,756,772,773,756,773,774,756,774,775,756,775,776,790,791,715,789,790,715,788,789,715,787,788,715,786,787,715,786,715,719,785,786,719,784,785,719,783,784,719,782,783,719,781,782,719,780,781,719,779,780,719,778,779,719,777,778,719,719,720,817,719,817,818,719,818,819,719,819,820,719,820,821,719,821,822,719,822,823,719,823,824,719,824,825,719,825,826,777,719,826,776,777,826,756,776,826,756,826,827,756,827,828,756,828,829,756,829,830,756,830,831,756,831,832,756,832,833,756,833,834,756,834,835,756,835,836,756,836,837,756,837,807,756,807,808,756,808,809,756,809,810,720,756,810,720,810,811,720,811,812,720,812,813,720,813,814,720,814,815,720,815,816,817,720,816,977,904,905,977,905,906,977,906,907,977,907,908,977,908,909,977,909,910,910,911,912,910,912,913,910,913,914,910,914,915,910,915,916,910,916,917,910,917,918,910,918,919,910,919,920,910,920,921,910,921,922,943,944,945,943,945,946,943,946,947,942,943,947,942,947,869,941,942,869,940,941,869,939,940,869,938,939,869,937,938,869,936,937,869,935,936,869,934,935,869,933,934,869,932,933,869,932,869,870,931,932,870,930,931,870,929,930,870,928,929,870,927,928,870,926,927,870,925,926,870,924,925,870,923,924,870,922,923,870,910,922,870,871,873,1008,871,1008,1009,871,1009,979,871,979,980,871,980,981,871,981,982,871,982,983,871,983,984,870,871,984,870,984,985,870,985,986,870,986,987,870,987,988,870,988,989,870,989,990,870,990,991,870,991,992,870,992,993,870,993,994,870,994,995,870,995,996,870,996,997,870,997,998,870,998,999,1007,1008,873,1006,1007,873,1005,1006,873,1004,1005,873,1003,1004,873,1002,1003,873,1002,873,874,1001,1002,874,1001,874,875,1000,1001,875,1000,875,876,999,1000,876,999,876,877,999,877,878,999,878,879,999,879,880,999,880,881,999,881,882,999,882,883,999,883,884,999,884,885,999,885,886,999,886,887,999,887,888,999,888,889,999,889,890,999,890,891,999,891,892,870,999,892,870,892,893,870,893,894,870,894,895,870,895,896,870,896,897,870,897,898,870,898,899,870,899,900,870,900,901,870,901,902,870,902,903,870,903,904,904,977,978,904,978,948,904,948,949,904,949,950,904,950,951,870,904,951,870,951,952,870,952,953,870,953,954,870,954,955,870,955,956,870,956,957,870,957,958,870,958,959,870,959,960,870,960,961,870,961,962};
			return value;
		}
		private int[] getIndexedTriangleSet_6_57_index_4()
		{
			int[] value = {870,962,963,870,963,964,870,964,965,910,870,965,910,965,966,910,966,967,910,967,968,910,968,969,910,969,970,910,970,971,910,971,972,910,972,973,910,973,974,910,974,975,910,975,976,977,910,976,1045,1107,1108,1045,1108,1078,1045,1078,1079,1045,1079,1080,1045,1080,1081,1045,1081,1082,1106,1107,1045,1105,1106,1045,1104,1105,1045,1103,1104,1045,1102,1103,1045,1101,1102,1045,1101,1045,1046,1100,1101,1046,1100,1046,1047,1099,1100,1047,1099,1047,1048,1098,1099,1048,1098,1048,1049,1097,1098,1049,1097,1049,1050,1096,1097,1050,1096,1050,1051,1095,1096,1051,1095,1051,1052,1094,1095,1052,1094,1052,1053,1093,1094,1053,1093,1053,1054,1092,1093,1054,1092,1054,1055,1091,1092,1055,1091,1055,1056,1090,1091,1056,1090,1056,1057,1089,1090,1057,1089,1057,1058,1088,1089,1058,1088,1058,1059,1087,1088,1059,1087,1059,1060,1087,1060,1061,1087,1061,1062,1086,1087,1062,1086,1062,1063,1086,1063,1064,1086,1064,1065,1085,1086,1065,1085,1065,1066,1085,1066,1067,1085,1067,1068,1075,1076,1077,1075,1077,1011,1074,1075,1011,1073,1074,1011,1072,1073,1011,1071,1072,1011,1070,1071,1011,1069,1070,1011,1068,1069,1011,1085,1068,1011,1084,1085,1011,1083,1084,1011,1082,1083,1011,1045,1082,1011,1011,1014,1015,1013,1016,1017,1013,1017,1018,1013,1018,1019,1013,1019,1020,1013,1020,1021,1013,1021,1022,1013,1022,1023,1013,1023,1024,1015,1013,1024,1015,1024,1025,1015,1025,1026,1015,1026,1027,1015,1027,1028,1015,1028,1029,1015,1029,1030,1015,1030,1031,1015,1031,1032,1015,1032,1033,1011,1015,1033,1011,1033,1034,1011,1034,1035,1011,1035,1036,1011,1036,1037,1011,1037,1038,1011,1038,1039,1011,1039,1040,1011,1040,1041,1011,1041,1042,1011,1042,1043,1011,1043,1044,1045,1011,1044};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_57_point_1()
		{
			double[] value = {5.3790e+00,3.6640e+00,1.7650e+00,5.3790e+00,1.2213e+00,1.7650e+00,1.7930e+00,1.2213e+00,1.7650e+00,1.7930e+00,3.6640e+00,1.7650e+00,4.6957e+00,3.6640e+00,1.7650e+00,5.3790e+00,2.9807e+00,1.7650e+00,2.4599e+00,1.2213e+00,1.7650e+00,2.4648e+00,1.2228e+00,1.7650e+00,2.5167e+00,1.2506e+00,1.7650e+00,2.5621e+00,1.2879e+00,1.7650e+00,2.5994e+00,1.3333e+00,1.7650e+00,2.6272e+00,1.3852e+00,1.7650e+00,2.6442e+00,1.4415e+00,1.7650e+00,2.6500e+00,1.5000e+00,1.7650e+00,2.6500e+00,1.6250e+00,1.7650e+00,2.6890e+00,1.6288e+00,1.7650e+00,2.7265e+00,1.6402e+00,1.7650e+00,2.7611e+00,1.6587e+00,1.7650e+00,2.7914e+00,1.6836e+00,1.7650e+00,2.8163e+00,1.7139e+00,1.7650e+00,2.8348e+00,1.7485e+00,1.7650e+00,2.8462e+00,1.7860e+00,1.7650e+00,2.8500e+00,1.8250e+00,1.7650e+00,2.8462e+00,1.8640e+00,1.7650e+00,2.8348e+00,1.9015e+00,1.7650e+00,2.8163e+00,1.9361e+00,1.7650e+00,2.7914e+00,1.9664e+00,1.7650e+00,2.7611e+00,1.9913e+00,1.7650e+00,2.7265e+00,2.0098e+00,1.7650e+00,2.6890e+00,2.0212e+00,1.7650e+00,2.6500e+00,2.0250e+00,1.7650e+00,2.6500e+00,2.1500e+00,1.7650e+00,2.6442e+00,2.2085e+00,1.7650e+00,2.6272e+00,2.2648e+00,1.7650e+00,2.5994e+00,2.3167e+00,1.7650e+00,2.5621e+00,2.3621e+00,1.7650e+00,2.5167e+00,2.3994e+00,1.7650e+00,2.4648e+00,2.4272e+00,1.7650e+00,2.4085e+00,2.4442e+00,1.7650e+00,2.3500e+00,2.4500e+00,1.7650e+00,2.2915e+00,2.4442e+00,1.7650e+00,2.2352e+00,2.4272e+00,1.7650e+00,2.1833e+00,2.3994e+00,1.7650e+00,2.1379e+00,2.3621e+00,1.7650e+00,2.1006e+00,2.3167e+00,1.7650e+00,2.0728e+00,2.2648e+00,1.7650e+00,2.0558e+00,2.2085e+00,1.7650e+00,2.0500e+00,2.1500e+00,1.7650e+00,2.0500e+00,2.0750e+00,1.7650e+00,1.9125e+00,2.0750e+00,1.7650e+00,1.9003e+00,2.0738e+00,1.7650e+00,1.8886e+00,2.0702e+00,1.7650e+00,1.8778e+00,2.0645e+00,1.7650e+00,1.8683e+00,2.0567e+00,1.7650e+00,1.8605e+00,2.0472e+00,1.7650e+00,1.8548e+00,2.0364e+00,1.7650e+00,1.8512e+00,2.0247e+00,1.7650e+00,1.8500e+00,2.0125e+00,1.7650e+00,1.8500e+00,1.6375e+00,1.7650e+00,1.8512e+00,1.6253e+00,1.7650e+00,1.8548e+00,1.6136e+00,1.7650e+00,1.8605e+00,1.6028e+00,1.7650e+00,1.8683e+00,1.5933e+00,1.7650e+00,1.8778e+00,1.5855e+00,1.7650e+00,1.8886e+00,1.5798e+00,1.7650e+00,1.9003e+00,1.5762e+00,1.7650e+00,1.9125e+00,1.5750e+00,1.7650e+00,2.0500e+00,1.5750e+00,1.7650e+00,2.0500e+00,1.5000e+00,1.7650e+00,2.0558e+00,1.4415e+00,1.7650e+00,2.0728e+00,1.3852e+00,1.7650e+00,2.1006e+00,1.3333e+00,1.7650e+00,2.1379e+00,1.2879e+00,1.7650e+00,2.1833e+00,1.2506e+00,1.7650e+00,2.2352e+00,1.2228e+00,1.7650e+00,2.2401e+00,1.2213e+00,1.7650e+00,3.8110e+00,2.6222e+00,1.7650e+00,3.7879e+00,2.6148e+00,1.7650e+00,3.7668e+00,2.6031e+00,1.7650e+00,3.7482e+00,2.5875e+00,1.7650e+00,3.7331e+00,2.5687e+00,1.7650e+00,3.7218e+00,2.5473e+00,1.7650e+00,3.7148e+00,2.5241e+00,1.7650e+00,3.7125e+00,2.5000e+00,1.7650e+00,3.7148e+00,2.4759e+00,1.7650e+00,3.7218e+00,2.4527e+00,1.7650e+00,3.7331e+00,2.4313e+00,1.7650e+00,3.7482e+00,2.4125e+00,1.7650e+00,3.7668e+00,2.3969e+00,1.7650e+00,3.7879e+00,2.3852e+00,1.7650e+00,3.8110e+00,2.3778e+00,1.7650e+00,3.8476e+00,2.2618e+00,1.7650e+00,3.9068e+00,2.1556e+00,1.7650e+00,3.9862e+00,2.0634e+00,1.7650e+00,4.0825e+00,1.9891e+00,1.7650e+00,4.1917e+00,1.9356e+00,1.7650e+00,4.3095e+00,1.9053e+00,1.7650e+00,4.4310e+00,1.8993e+00,1.7650e+00,4.5513e+00,1.9178e+00,1.7650e+00,4.6653e+00,1.9601e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_2()
		{
			double[] value = {4.7685e+00,2.0245e+00,1.7650e+00,4.8566e+00,2.1084e+00,1.7650e+00,4.9261e+00,2.2082e+00,1.7650e+00,4.9740e+00,2.3200e+00,1.7650e+00,4.9985e+00,2.4392e+00,1.7650e+00,4.9985e+00,2.5608e+00,1.7650e+00,4.9740e+00,2.6800e+00,1.7650e+00,4.9261e+00,2.7918e+00,1.7650e+00,4.8566e+00,2.8916e+00,1.7650e+00,4.7685e+00,2.9755e+00,1.7650e+00,4.6653e+00,3.0399e+00,1.7650e+00,4.5513e+00,3.0822e+00,1.7650e+00,4.4310e+00,3.1007e+00,1.7650e+00,4.3095e+00,3.0947e+00,1.7650e+00,4.1917e+00,3.0644e+00,1.7650e+00,4.0825e+00,3.0109e+00,1.7650e+00,3.9862e+00,2.9366e+00,1.7650e+00,3.9068e+00,2.8444e+00,1.7650e+00,3.8476e+00,2.7382e+00,1.7650e+00,3.8110e+00,2.6222e+00,1.7650e+00,2.6315e+00,2.6256e+00,1.7650e+00,2.6388e+00,2.6023e+00,1.7650e+00,2.6507e+00,2.5809e+00,1.7650e+00,2.6666e+00,2.5623e+00,1.7650e+00,2.6860e+00,2.5473e+00,1.7650e+00,2.7080e+00,2.5365e+00,1.7650e+00,2.7317e+00,2.5304e+00,1.7650e+00,2.7561e+00,2.5292e+00,1.7650e+00,2.7803e+00,2.5329e+00,1.7650e+00,2.8033e+00,2.5414e+00,1.7650e+00,2.8241e+00,2.5543e+00,1.7650e+00,2.8418e+00,2.5712e+00,1.7650e+00,2.8558e+00,2.5913e+00,1.7650e+00,2.8655e+00,2.6138e+00,1.7650e+00,2.8704e+00,2.6378e+00,1.7650e+00,2.8704e+00,2.6622e+00,1.7650e+00,2.8655e+00,2.6862e+00,1.7650e+00,2.8558e+00,2.7087e+00,1.7650e+00,2.8418e+00,2.7288e+00,1.7650e+00,2.8241e+00,2.7457e+00,1.7650e+00,2.8033e+00,2.7586e+00,1.7650e+00,2.7803e+00,2.7671e+00,1.7650e+00,2.7561e+00,2.7708e+00,1.7650e+00,2.7317e+00,2.7696e+00,1.7650e+00,2.7080e+00,2.7635e+00,1.7650e+00,2.6860e+00,2.7527e+00,1.7650e+00,2.6666e+00,2.7377e+00,1.7650e+00,2.6507e+00,2.7191e+00,1.7650e+00,2.6388e+00,2.6977e+00,1.7650e+00,2.6315e+00,2.6744e+00,1.7650e+00,2.6290e+00,2.6500e+00,1.7650e+00,1.7930e+00,3.6640e+00,1.7650e+00,1.7930e+00,1.2213e+00,1.7650e+00,-1.7930e+00,1.2213e+00,1.7650e+00,-1.7930e+00,3.6640e+00,1.7650e+00,9.8838e-01,1.2213e+00,1.7650e+00,1.0310e+00,1.2544e+00,1.7650e+00,1.0854e+00,1.2812e+00,1.7650e+00,1.1441e+00,1.2965e+00,1.7650e+00,1.1656e+00,1.3018e+00,1.7650e+00,1.1858e+00,1.3108e+00,1.7650e+00,1.2041e+00,1.3232e+00,1.7650e+00,1.2199e+00,1.3387e+00,1.7650e+00,1.2328e+00,1.3566e+00,1.7650e+00,1.2422e+00,1.3766e+00,1.7650e+00,1.2480e+00,1.3980e+00,1.7650e+00,1.2500e+00,1.4200e+00,1.7650e+00,1.2500e+00,2.1250e+00,1.7650e+00,1.2476e+00,2.1494e+00,1.7650e+00,1.2405e+00,2.1728e+00,1.7650e+00,1.2289e+00,2.1944e+00,1.7650e+00,1.2134e+00,2.2134e+00,1.7650e+00,1.1944e+00,2.2289e+00,1.7650e+00,1.1728e+00,2.2405e+00,1.7650e+00,1.1494e+00,2.2476e+00,1.7650e+00,1.1250e+00,2.2500e+00,1.7650e+00,6.7000e-01,2.2500e+00,1.7650e+00,6.4797e-01,2.2480e+00,1.7650e+00,6.2663e-01,2.2422e+00,1.7650e+00,6.0665e-01,2.2328e+00,1.7650e+00,5.8865e-01,2.2199e+00,1.7650e+00,5.7320e-01,2.2041e+00,1.7650e+00,5.6078e-01,2.1858e+00,1.7650e+00,5.5177e-01,2.1656e+00,1.7650e+00,5.4647e-01,2.1441e+00,1.7650e+00,5.3119e-01,2.0854e+00,1.7650e+00,5.0442e-01,2.0310e+00,1.7650e+00,4.6726e-01,1.9831e+00,1.7650e+00,4.2122e-01,1.9437e+00,1.7650e+00,3.6819e-01,1.9143e+00,1.7650e+00,3.1033e-01,1.8961e+00,1.7650e+00,2.5000e-01,1.8900e+00,1.7650e+00,1.8967e-01,1.8961e+00,1.7650e+00,1.3181e-01,1.9143e+00,1.7650e+00,7.8781e-02,1.9437e+00,1.7650e+00,3.2743e-02,1.9831e+00,1.7650e+00,-4.4196e-03,2.0310e+00,1.7650e+00,-3.1189e-02,2.0854e+00,1.7650e+00,-4.6471e-02,2.1441e+00,1.7650e+00,-5.1773e-02,2.1656e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_3()
		{
			double[] value = {-6.0776e-02,2.1858e+00,1.7650e+00,-7.3199e-02,2.2041e+00,1.7650e+00,-8.8651e-02,2.2199e+00,1.7650e+00,-1.0665e-01,2.2328e+00,1.7650e+00,-1.2663e-01,2.2422e+00,1.7650e+00,-1.4797e-01,2.2480e+00,1.7650e+00,-1.7000e-01,2.2500e+00,1.7650e+00,-1.0800e+00,2.2500e+00,1.7650e+00,-1.1020e+00,2.2480e+00,1.7650e+00,-1.1234e+00,2.2422e+00,1.7650e+00,-1.1434e+00,2.2328e+00,1.7650e+00,-1.1613e+00,2.2199e+00,1.7650e+00,-1.1768e+00,2.2041e+00,1.7650e+00,-1.1892e+00,2.1858e+00,1.7650e+00,-1.1982e+00,2.1656e+00,1.7650e+00,-1.2035e+00,2.1441e+00,1.7650e+00,-1.2188e+00,2.0854e+00,1.7650e+00,-1.2456e+00,2.0310e+00,1.7650e+00,-1.2827e+00,1.9831e+00,1.7650e+00,-1.3288e+00,1.9437e+00,1.7650e+00,-1.3818e+00,1.9143e+00,1.7650e+00,-1.4397e+00,1.8961e+00,1.7650e+00,-1.5000e+00,1.8900e+00,1.7650e+00,-1.5603e+00,1.8961e+00,1.7650e+00,-1.6182e+00,1.9143e+00,1.7650e+00,-1.6712e+00,1.9437e+00,1.7650e+00,-1.7173e+00,1.9831e+00,1.7650e+00,-1.7544e+00,2.0310e+00,1.7650e+00,-1.7812e+00,2.0854e+00,1.7650e+00,-1.7930e+00,2.1308e+00,1.7650e+00,-1.6043e+00,2.1686e+00,1.7650e+00,-1.5979e+00,2.1480e+00,1.7650e+00,-1.5874e+00,2.1292e+00,1.7650e+00,-1.5734e+00,2.1128e+00,1.7650e+00,-1.5563e+00,2.0996e+00,1.7650e+00,-1.5370e+00,2.0901e+00,1.7650e+00,-1.5161e+00,2.0847e+00,1.7650e+00,-1.4946e+00,2.0836e+00,1.7650e+00,-1.4733e+00,2.0869e+00,1.7650e+00,-1.4531e+00,2.0944e+00,1.7650e+00,-1.4348e+00,2.1058e+00,1.7650e+00,-1.4192e+00,2.1206e+00,1.7650e+00,-1.4069e+00,2.1383e+00,1.7650e+00,-1.3984e+00,2.1581e+00,1.7650e+00,-1.3940e+00,2.1792e+00,1.7650e+00,-1.3940e+00,2.2008e+00,1.7650e+00,-1.3984e+00,2.2219e+00,1.7650e+00,-1.4069e+00,2.2417e+00,1.7650e+00,-1.4192e+00,2.2594e+00,1.7650e+00,-1.4348e+00,2.2742e+00,1.7650e+00,-1.4531e+00,2.2856e+00,1.7650e+00,-1.4733e+00,2.2931e+00,1.7650e+00,-1.4946e+00,2.2964e+00,1.7650e+00,-1.5161e+00,2.2953e+00,1.7650e+00,-1.5370e+00,2.2899e+00,1.7650e+00,-1.5563e+00,2.2804e+00,1.7650e+00,-1.5734e+00,2.2672e+00,1.7650e+00,-1.5874e+00,2.2508e+00,1.7650e+00,-1.5979e+00,2.2320e+00,1.7650e+00,-1.6043e+00,2.2114e+00,1.7650e+00,-1.6065e+00,2.1900e+00,1.7650e+00,1.4568e-01,2.1686e+00,1.7650e+00,1.5213e-01,2.1480e+00,1.7650e+00,1.6259e-01,2.1292e+00,1.7650e+00,1.7663e-01,2.1128e+00,1.7650e+00,1.9367e-01,2.0996e+00,1.7650e+00,2.1301e-01,2.0901e+00,1.7650e+00,2.3387e-01,2.0847e+00,1.7650e+00,2.5539e-01,2.0836e+00,1.7650e+00,2.7669e-01,2.0869e+00,1.7650e+00,2.9690e-01,2.0944e+00,1.7650e+00,3.1519e-01,2.1058e+00,1.7650e+00,3.3081e-01,2.1206e+00,1.7650e+00,3.4312e-01,2.1383e+00,1.7650e+00,3.5162e-01,2.1581e+00,1.7650e+00,3.5595e-01,2.1792e+00,1.7650e+00,3.5595e-01,2.2008e+00,1.7650e+00,3.5162e-01,2.2219e+00,1.7650e+00,3.4312e-01,2.2417e+00,1.7650e+00,3.3081e-01,2.2594e+00,1.7650e+00,3.1519e-01,2.2742e+00,1.7650e+00,2.9690e-01,2.2856e+00,1.7650e+00,2.7669e-01,2.2931e+00,1.7650e+00,2.5539e-01,2.2964e+00,1.7650e+00,2.3387e-01,2.2953e+00,1.7650e+00,2.1301e-01,2.2899e+00,1.7650e+00,1.9367e-01,2.2804e+00,1.7650e+00,1.7663e-01,2.2672e+00,1.7650e+00,1.6259e-01,2.2508e+00,1.7650e+00,1.5213e-01,2.2320e+00,1.7650e+00,1.4568e-01,2.2114e+00,1.7650e+00,1.4350e-01,2.1900e+00,1.7650e+00,-1.7930e+00,3.6640e+00,1.7650e+00,-1.7930e+00,1.2213e+00,1.7650e+00,-5.3790e+00,1.2213e+00,1.7650e+00,-5.3790e+00,3.6640e+00,1.7650e+00,-5.3790e+00,2.9807e+00,1.7650e+00,-4.6957e+00,3.6640e+00,1.7650e+00,-1.7930e+00,2.1308e+00,1.7650e+00,-1.7965e+00,2.1441e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_4()
		{
			double[] value = {-1.8018e+00,2.1656e+00,1.7650e+00,-1.8108e+00,2.1858e+00,1.7650e+00,-1.8232e+00,2.2041e+00,1.7650e+00,-1.8387e+00,2.2199e+00,1.7650e+00,-1.8566e+00,2.2328e+00,1.7650e+00,-1.8766e+00,2.2422e+00,1.7650e+00,-1.8980e+00,2.2480e+00,1.7650e+00,-1.9200e+00,2.2500e+00,1.7650e+00,-2.8300e+00,2.2500e+00,1.7650e+00,-2.8520e+00,2.2480e+00,1.7650e+00,-2.8734e+00,2.2422e+00,1.7650e+00,-2.8934e+00,2.2328e+00,1.7650e+00,-2.9113e+00,2.2199e+00,1.7650e+00,-2.9268e+00,2.2041e+00,1.7650e+00,-2.9392e+00,2.1858e+00,1.7650e+00,-2.9482e+00,2.1656e+00,1.7650e+00,-2.9535e+00,2.1441e+00,1.7650e+00,-2.9688e+00,2.0854e+00,1.7650e+00,-2.9956e+00,2.0310e+00,1.7650e+00,-3.0327e+00,1.9831e+00,1.7650e+00,-3.0788e+00,1.9437e+00,1.7650e+00,-3.1318e+00,1.9143e+00,1.7650e+00,-3.1897e+00,1.8961e+00,1.7650e+00,-3.2500e+00,1.8900e+00,1.7650e+00,-3.3103e+00,1.8961e+00,1.7650e+00,-3.3682e+00,1.9143e+00,1.7650e+00,-3.4212e+00,1.9437e+00,1.7650e+00,-3.4673e+00,1.9831e+00,1.7650e+00,-3.5044e+00,2.0310e+00,1.7650e+00,-3.5312e+00,2.0854e+00,1.7650e+00,-3.5465e+00,2.1441e+00,1.7650e+00,-3.5518e+00,2.1656e+00,1.7650e+00,-3.5608e+00,2.1858e+00,1.7650e+00,-3.5732e+00,2.2041e+00,1.7650e+00,-3.5887e+00,2.2199e+00,1.7650e+00,-3.6066e+00,2.2328e+00,1.7650e+00,-3.6266e+00,2.2422e+00,1.7650e+00,-3.6480e+00,2.2480e+00,1.7650e+00,-3.6700e+00,2.2500e+00,1.7650e+00,-4.1250e+00,2.2500e+00,1.7650e+00,-4.1494e+00,2.2476e+00,1.7650e+00,-4.1728e+00,2.2405e+00,1.7650e+00,-4.1944e+00,2.2289e+00,1.7650e+00,-4.2134e+00,2.2134e+00,1.7650e+00,-4.2289e+00,2.1944e+00,1.7650e+00,-4.2405e+00,2.1728e+00,1.7650e+00,-4.2476e+00,2.1494e+00,1.7650e+00,-4.2500e+00,2.1250e+00,1.7650e+00,-4.2500e+00,1.4200e+00,1.7650e+00,-4.2480e+00,1.3980e+00,1.7650e+00,-4.2422e+00,1.3766e+00,1.7650e+00,-4.2328e+00,1.3566e+00,1.7650e+00,-4.2199e+00,1.3387e+00,1.7650e+00,-4.2041e+00,1.3232e+00,1.7650e+00,-4.1858e+00,1.3108e+00,1.7650e+00,-4.1656e+00,1.3018e+00,1.7650e+00,-4.1441e+00,1.2965e+00,1.7650e+00,-4.0854e+00,1.2812e+00,1.7650e+00,-4.0310e+00,1.2544e+00,1.7650e+00,-3.9884e+00,1.2213e+00,1.7650e+00,-3.3543e+00,2.1686e+00,1.7650e+00,-3.3479e+00,2.1480e+00,1.7650e+00,-3.3374e+00,2.1292e+00,1.7650e+00,-3.3234e+00,2.1128e+00,1.7650e+00,-3.3063e+00,2.0996e+00,1.7650e+00,-3.2870e+00,2.0901e+00,1.7650e+00,-3.2661e+00,2.0847e+00,1.7650e+00,-3.2446e+00,2.0836e+00,1.7650e+00,-3.2233e+00,2.0869e+00,1.7650e+00,-3.2031e+00,2.0944e+00,1.7650e+00,-3.1848e+00,2.1058e+00,1.7650e+00,-3.1692e+00,2.1206e+00,1.7650e+00,-3.1569e+00,2.1383e+00,1.7650e+00,-3.1484e+00,2.1581e+00,1.7650e+00,-3.1440e+00,2.1792e+00,1.7650e+00,-3.1440e+00,2.2008e+00,1.7650e+00,-3.1484e+00,2.2219e+00,1.7650e+00,-3.1569e+00,2.2417e+00,1.7650e+00,-3.1692e+00,2.2594e+00,1.7650e+00,-3.1848e+00,2.2742e+00,1.7650e+00,-3.2031e+00,2.2856e+00,1.7650e+00,-3.2233e+00,2.2931e+00,1.7650e+00,-3.2446e+00,2.2964e+00,1.7650e+00,-3.2661e+00,2.2953e+00,1.7650e+00,-3.2870e+00,2.2899e+00,1.7650e+00,-3.3063e+00,2.2804e+00,1.7650e+00,-3.3234e+00,2.2672e+00,1.7650e+00,-3.3374e+00,2.2508e+00,1.7650e+00,-3.3479e+00,2.2320e+00,1.7650e+00,-3.3543e+00,2.2114e+00,1.7650e+00,-3.3565e+00,2.1900e+00,1.7650e+00,5.3790e+00,1.2213e+00,1.7650e+00,5.3790e+00,-1.2213e+00,1.7650e+00,1.7930e+00,-1.2213e+00,1.7650e+00,1.7930e+00,1.2213e+00,1.7650e+00,2.4599e+00,-1.2213e+00,1.7650e+00,2.4085e+00,-1.2058e+00,1.7650e+00,2.3500e+00,-1.2000e+00,1.7650e+00,2.2915e+00,-1.2058e+00,1.7650e+00,2.2401e+00,-1.2213e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_5()
		{
			double[] value = {2.2401e+00,1.2213e+00,1.7650e+00,2.2915e+00,1.2058e+00,1.7650e+00,2.3500e+00,1.2000e+00,1.7650e+00,2.4085e+00,1.2058e+00,1.7650e+00,2.4599e+00,1.2213e+00,1.7650e+00,4.1776e+00,-8.5016e-01,1.7650e+00,4.1851e+00,-8.7429e-01,1.7650e+00,4.1974e+00,-8.9641e-01,1.7650e+00,4.2139e+00,-9.1560e-01,1.7650e+00,4.2339e+00,-9.3108e-01,1.7650e+00,4.2566e+00,-9.4222e-01,1.7650e+00,4.2811e+00,-9.4856e-01,1.7650e+00,4.3063e+00,-9.4984e-01,1.7650e+00,4.3313e+00,-9.4601e-01,1.7650e+00,4.3550e+00,-9.3723e-01,1.7650e+00,4.3765e+00,-9.2385e-01,1.7650e+00,4.3948e+00,-9.0642e-01,1.7650e+00,4.4093e+00,-8.8566e-01,1.7650e+00,4.4193e+00,-8.6242e-01,1.7650e+00,4.4244e+00,-8.3765e-01,1.7650e+00,4.4244e+00,-8.1235e-01,1.7650e+00,4.4193e+00,-7.8758e-01,1.7650e+00,4.4093e+00,-7.6434e-01,1.7650e+00,4.3948e+00,-7.4358e-01,1.7650e+00,4.3765e+00,-7.2615e-01,1.7650e+00,4.3550e+00,-7.1277e-01,1.7650e+00,4.3313e+00,-7.0399e-01,1.7650e+00,4.3063e+00,-7.0016e-01,1.7650e+00,4.2811e+00,-7.0144e-01,1.7650e+00,4.2566e+00,-7.0778e-01,1.7650e+00,4.2339e+00,-7.1892e-01,1.7650e+00,4.2139e+00,-7.3440e-01,1.7650e+00,4.1974e+00,-7.5359e-01,1.7650e+00,4.1851e+00,-7.7571e-01,1.7650e+00,4.1776e+00,-7.9984e-01,1.7650e+00,4.1750e+00,-8.2500e-01,1.7650e+00,2.6383e+00,9.7705e-01,1.7650e+00,2.6452e+00,9.5504e-01,1.7650e+00,2.6564e+00,9.3488e-01,1.7650e+00,2.6715e+00,9.1737e-01,1.7650e+00,2.6897e+00,9.0325e-01,1.7650e+00,2.7104e+00,8.9310e-01,1.7650e+00,2.7327e+00,8.8731e-01,1.7650e+00,2.7558e+00,8.8615e-01,1.7650e+00,2.7786e+00,8.8964e-01,1.7650e+00,2.8002e+00,8.9765e-01,1.7650e+00,2.8198e+00,9.0985e-01,1.7650e+00,2.8365e+00,9.2574e-01,1.7650e+00,2.8497e+00,9.4468e-01,1.7650e+00,2.8588e+00,9.6587e-01,1.7650e+00,2.8634e+00,9.8847e-01,1.7650e+00,2.8634e+00,1.0115e+00,1.7650e+00,2.8588e+00,1.0341e+00,1.7650e+00,2.8497e+00,1.0553e+00,1.7650e+00,2.8365e+00,1.0743e+00,1.7650e+00,2.8198e+00,1.0901e+00,1.7650e+00,2.8002e+00,1.1023e+00,1.7650e+00,2.7786e+00,1.1104e+00,1.7650e+00,2.7558e+00,1.1139e+00,1.7650e+00,2.7327e+00,1.1127e+00,1.7650e+00,2.7104e+00,1.1069e+00,1.7650e+00,2.6897e+00,1.0967e+00,1.7650e+00,2.6715e+00,1.0826e+00,1.7650e+00,2.6564e+00,1.0651e+00,1.7650e+00,2.6452e+00,1.0450e+00,1.7650e+00,2.6383e+00,1.0229e+00,1.7650e+00,2.6360e+00,1.0000e+00,1.7650e+00,2.6315e+00,-1.0244e+00,1.7650e+00,2.6388e+00,-1.0477e+00,1.7650e+00,2.6507e+00,-1.0691e+00,1.7650e+00,2.6666e+00,-1.0877e+00,1.7650e+00,2.6860e+00,-1.1027e+00,1.7650e+00,2.7080e+00,-1.1135e+00,1.7650e+00,2.7317e+00,-1.1196e+00,1.7650e+00,2.7561e+00,-1.1208e+00,1.7650e+00,2.7803e+00,-1.1171e+00,1.7650e+00,2.8033e+00,-1.1086e+00,1.7650e+00,2.8241e+00,-1.0957e+00,1.7650e+00,2.8418e+00,-1.0788e+00,1.7650e+00,2.8558e+00,-1.0587e+00,1.7650e+00,2.8655e+00,-1.0362e+00,1.7650e+00,2.8704e+00,-1.0122e+00,1.7650e+00,2.8704e+00,-9.8776e-01,1.7650e+00,2.8655e+00,-9.6378e-01,1.7650e+00,2.8558e+00,-9.4128e-01,1.7650e+00,2.8418e+00,-9.2118e-01,1.7650e+00,2.8241e+00,-9.0432e-01,1.7650e+00,2.8033e+00,-8.9137e-01,1.7650e+00,2.7803e+00,-8.8286e-01,1.7650e+00,2.7561e+00,-8.7916e-01,1.7650e+00,2.7317e+00,-8.8040e-01,1.7650e+00,2.7080e+00,-8.8653e-01,1.7650e+00,2.6860e+00,-8.9731e-01,1.7650e+00,2.6666e+00,-9.1230e-01,1.7650e+00,2.6507e+00,-9.3088e-01,1.7650e+00,2.6388e+00,-9.5228e-01,1.7650e+00,2.6315e+00,-9.7564e-01,1.7650e+00,2.6290e+00,-1.0000e+00,1.7650e+00,1.7930e+00,1.2213e+00,1.7650e+00,1.7930e+00,-1.2213e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_6()
		{
			double[] value = {-1.7930e+00,-1.2213e+00,1.7650e+00,-1.7930e+00,1.2213e+00,1.7650e+00,9.8838e-01,-1.2213e+00,1.7650e+00,9.8312e-01,-1.2173e+00,1.7650e+00,9.4366e-01,-1.1712e+00,1.7650e+00,9.1426e-01,-1.1182e+00,1.7650e+00,8.9613e-01,-1.0603e+00,1.7650e+00,8.9000e-01,-1.0000e+00,1.7650e+00,8.9613e-01,-9.3967e-01,1.7650e+00,9.1426e-01,-8.8181e-01,1.7650e+00,9.4366e-01,-8.2878e-01,1.7650e+00,9.8312e-01,-7.8274e-01,1.7650e+00,1.0310e+00,-7.4558e-01,1.7650e+00,1.0854e+00,-7.1881e-01,1.7650e+00,1.1441e+00,-7.0353e-01,1.7650e+00,1.1656e+00,-6.9823e-01,1.7650e+00,1.1858e+00,-6.8922e-01,1.7650e+00,1.2041e+00,-6.7680e-01,1.7650e+00,1.2199e+00,-6.6135e-01,1.7650e+00,1.2328e+00,-6.4335e-01,1.7650e+00,1.2422e+00,-6.2337e-01,1.7650e+00,1.2480e+00,-6.0203e-01,1.7650e+00,1.2500e+00,-5.8000e-01,1.7650e+00,1.2500e+00,5.8000e-01,1.7650e+00,1.2480e+00,6.0203e-01,1.7650e+00,1.2422e+00,6.2337e-01,1.7650e+00,1.2328e+00,6.4335e-01,1.7650e+00,1.2199e+00,6.6135e-01,1.7650e+00,1.2041e+00,6.7680e-01,1.7650e+00,1.1858e+00,6.8922e-01,1.7650e+00,1.1656e+00,6.9823e-01,1.7650e+00,1.1441e+00,7.0353e-01,1.7650e+00,1.0854e+00,7.1881e-01,1.7650e+00,1.0310e+00,7.4558e-01,1.7650e+00,9.8312e-01,7.8274e-01,1.7650e+00,9.4366e-01,8.2878e-01,1.7650e+00,9.1426e-01,8.8181e-01,1.7650e+00,8.9613e-01,9.3967e-01,1.7650e+00,8.9000e-01,1.0000e+00,1.7650e+00,8.9613e-01,1.0603e+00,1.7650e+00,9.1426e-01,1.1182e+00,1.7650e+00,9.4366e-01,1.1712e+00,1.7650e+00,9.8312e-01,1.2173e+00,1.7650e+00,9.8838e-01,1.2213e+00,1.7650e+00,1.0857e+00,9.7856e-01,1.7650e+00,1.0921e+00,9.5800e-01,1.7650e+00,1.1026e+00,9.3916e-01,1.7650e+00,1.1166e+00,9.2281e-01,1.7650e+00,1.1337e+00,9.0962e-01,1.7650e+00,1.1530e+00,9.0013e-01,1.7650e+00,1.1739e+00,8.9473e-01,1.7650e+00,1.1954e+00,8.9364e-01,1.7650e+00,1.2167e+00,8.9690e-01,1.7650e+00,1.2369e+00,9.0438e-01,1.7650e+00,1.2552e+00,9.1578e-01,1.7650e+00,1.2708e+00,9.3063e-01,1.7650e+00,1.2831e+00,9.4832e-01,1.7650e+00,1.2916e+00,9.6812e-01,1.7650e+00,1.2960e+00,9.8923e-01,1.7650e+00,1.2960e+00,1.0108e+00,1.7650e+00,1.2916e+00,1.0319e+00,1.7650e+00,1.2831e+00,1.0517e+00,1.7650e+00,1.2708e+00,1.0694e+00,1.7650e+00,1.2552e+00,1.0842e+00,1.7650e+00,1.2369e+00,1.0956e+00,1.7650e+00,1.2167e+00,1.1031e+00,1.7650e+00,1.1954e+00,1.1064e+00,1.7650e+00,1.1739e+00,1.1053e+00,1.7650e+00,1.1530e+00,1.0999e+00,1.7650e+00,1.1337e+00,1.0904e+00,1.7650e+00,1.1166e+00,1.0772e+00,1.7650e+00,1.1026e+00,1.0608e+00,1.7650e+00,1.0921e+00,1.0420e+00,1.7650e+00,1.0857e+00,1.0214e+00,1.7650e+00,1.0835e+00,1.0000e+00,1.7650e+00,1.0857e+00,-1.0214e+00,1.7650e+00,1.0921e+00,-1.0420e+00,1.7650e+00,1.1026e+00,-1.0608e+00,1.7650e+00,1.1166e+00,-1.0772e+00,1.7650e+00,1.1337e+00,-1.0904e+00,1.7650e+00,1.1530e+00,-1.0999e+00,1.7650e+00,1.1739e+00,-1.1053e+00,1.7650e+00,1.1954e+00,-1.1064e+00,1.7650e+00,1.2167e+00,-1.1031e+00,1.7650e+00,1.2369e+00,-1.0956e+00,1.7650e+00,1.2552e+00,-1.0842e+00,1.7650e+00,1.2708e+00,-1.0694e+00,1.7650e+00,1.2831e+00,-1.0517e+00,1.7650e+00,1.2916e+00,-1.0319e+00,1.7650e+00,1.2960e+00,-1.0108e+00,1.7650e+00,1.2960e+00,-9.8923e-01,1.7650e+00,1.2916e+00,-9.6812e-01,1.7650e+00,1.2831e+00,-9.4832e-01,1.7650e+00,1.2708e+00,-9.3063e-01,1.7650e+00,1.2552e+00,-9.1578e-01,1.7650e+00,1.2369e+00,-9.0438e-01,1.7650e+00,1.2167e+00,-8.9690e-01,1.7650e+00,1.1954e+00,-8.9364e-01,1.7650e+00,1.1739e+00,-8.9473e-01,1.7650e+00,1.1530e+00,-9.0013e-01,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_7()
		{
			double[] value = {1.1337e+00,-9.0962e-01,1.7650e+00,1.1166e+00,-9.2281e-01,1.7650e+00,1.1026e+00,-9.3916e-01,1.7650e+00,1.0921e+00,-9.5800e-01,1.7650e+00,1.0857e+00,-9.7856e-01,1.7650e+00,1.0835e+00,-1.0000e+00,1.7650e+00,-1.7930e+00,1.2213e+00,1.7650e+00,-1.7930e+00,-1.2213e+00,1.7650e+00,-5.3790e+00,-1.2213e+00,1.7650e+00,-5.3790e+00,1.2213e+00,1.7650e+00,-3.9884e+00,1.2213e+00,1.7650e+00,-3.9831e+00,1.2173e+00,1.7650e+00,-3.9437e+00,1.1712e+00,1.7650e+00,-3.9143e+00,1.1182e+00,1.7650e+00,-3.8961e+00,1.0603e+00,1.7650e+00,-3.8900e+00,1.0000e+00,1.7650e+00,-3.8961e+00,9.3967e-01,1.7650e+00,-3.9143e+00,8.8181e-01,1.7650e+00,-3.9437e+00,8.2878e-01,1.7650e+00,-3.9831e+00,7.8274e-01,1.7650e+00,-4.0310e+00,7.4558e-01,1.7650e+00,-4.0854e+00,7.1881e-01,1.7650e+00,-4.1441e+00,7.0353e-01,1.7650e+00,-4.1656e+00,6.9823e-01,1.7650e+00,-4.1858e+00,6.8922e-01,1.7650e+00,-4.2041e+00,6.7680e-01,1.7650e+00,-4.2199e+00,6.6135e-01,1.7650e+00,-4.2328e+00,6.4335e-01,1.7650e+00,-4.2422e+00,6.2337e-01,1.7650e+00,-4.2480e+00,6.0203e-01,1.7650e+00,-4.2500e+00,5.8000e-01,1.7650e+00,-4.2500e+00,-5.8000e-01,1.7650e+00,-4.2480e+00,-6.0203e-01,1.7650e+00,-4.2422e+00,-6.2337e-01,1.7650e+00,-4.2328e+00,-6.4335e-01,1.7650e+00,-4.2199e+00,-6.6135e-01,1.7650e+00,-4.2041e+00,-6.7680e-01,1.7650e+00,-4.1858e+00,-6.8922e-01,1.7650e+00,-4.1656e+00,-6.9823e-01,1.7650e+00,-4.1441e+00,-7.0353e-01,1.7650e+00,-4.1441e+00,-7.0353e-01,1.7650e+00,-4.0854e+00,-7.1881e-01,1.7650e+00,-4.0310e+00,-7.4558e-01,1.7650e+00,-3.9831e+00,-7.8274e-01,1.7650e+00,-3.9437e+00,-8.2878e-01,1.7650e+00,-3.9143e+00,-8.8181e-01,1.7650e+00,-3.8961e+00,-9.3967e-01,1.7650e+00,-3.8900e+00,-1.0000e+00,1.7650e+00,-3.8961e+00,-1.0603e+00,1.7650e+00,-3.9143e+00,-1.1182e+00,1.7650e+00,-3.9437e+00,-1.1712e+00,1.7650e+00,-3.9831e+00,-1.2173e+00,1.7650e+00,-3.9884e+00,-1.2213e+00,1.7650e+00,-4.2943e+00,-1.0214e+00,1.7650e+00,-4.2879e+00,-1.0420e+00,1.7650e+00,-4.2774e+00,-1.0608e+00,1.7650e+00,-4.2634e+00,-1.0772e+00,1.7650e+00,-4.2463e+00,-1.0904e+00,1.7650e+00,-4.2270e+00,-1.0999e+00,1.7650e+00,-4.2061e+00,-1.1053e+00,1.7650e+00,-4.1846e+00,-1.1064e+00,1.7650e+00,-4.1633e+00,-1.1031e+00,1.7650e+00,-4.1431e+00,-1.0956e+00,1.7650e+00,-4.1248e+00,-1.0842e+00,1.7650e+00,-4.1092e+00,-1.0694e+00,1.7650e+00,-4.0969e+00,-1.0517e+00,1.7650e+00,-4.0884e+00,-1.0319e+00,1.7650e+00,-4.0840e+00,-1.0108e+00,1.7650e+00,-4.0840e+00,-9.8923e-01,1.7650e+00,-4.0884e+00,-9.6812e-01,1.7650e+00,-4.0969e+00,-9.4832e-01,1.7650e+00,-4.1092e+00,-9.3063e-01,1.7650e+00,-4.1248e+00,-9.1578e-01,1.7650e+00,-4.1431e+00,-9.0438e-01,1.7650e+00,-4.1633e+00,-8.9690e-01,1.7650e+00,-4.1846e+00,-8.9364e-01,1.7650e+00,-4.2061e+00,-8.9473e-01,1.7650e+00,-4.2270e+00,-9.0013e-01,1.7650e+00,-4.2463e+00,-9.0962e-01,1.7650e+00,-4.2634e+00,-9.2281e-01,1.7650e+00,-4.2774e+00,-9.3916e-01,1.7650e+00,-4.2879e+00,-9.5800e-01,1.7650e+00,-4.2943e+00,-9.7856e-01,1.7650e+00,-4.2965e+00,-1.0000e+00,1.7650e+00,-4.2943e+00,9.7856e-01,1.7650e+00,-4.2879e+00,9.5800e-01,1.7650e+00,-4.2774e+00,9.3916e-01,1.7650e+00,-4.2634e+00,9.2281e-01,1.7650e+00,-4.2463e+00,9.0962e-01,1.7650e+00,-4.2270e+00,9.0013e-01,1.7650e+00,-4.2061e+00,8.9473e-01,1.7650e+00,-4.1846e+00,8.9364e-01,1.7650e+00,-4.1633e+00,8.9690e-01,1.7650e+00,-4.1431e+00,9.0438e-01,1.7650e+00,-4.1248e+00,9.1578e-01,1.7650e+00,-4.1092e+00,9.3063e-01,1.7650e+00,-4.0969e+00,9.4832e-01,1.7650e+00,-4.0884e+00,9.6812e-01,1.7650e+00,-4.0840e+00,9.8923e-01,1.7650e+00,-4.0840e+00,1.0108e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_8()
		{
			double[] value = {-4.0884e+00,1.0319e+00,1.7650e+00,-4.0969e+00,1.0517e+00,1.7650e+00,-4.1092e+00,1.0694e+00,1.7650e+00,-4.1248e+00,1.0842e+00,1.7650e+00,-4.1431e+00,1.0956e+00,1.7650e+00,-4.1633e+00,1.1031e+00,1.7650e+00,-4.1846e+00,1.1064e+00,1.7650e+00,-4.2061e+00,1.1053e+00,1.7650e+00,-4.2270e+00,1.0999e+00,1.7650e+00,-4.2463e+00,1.0904e+00,1.7650e+00,-4.2634e+00,1.0772e+00,1.7650e+00,-4.2774e+00,1.0608e+00,1.7650e+00,-4.2879e+00,1.0420e+00,1.7650e+00,-4.2943e+00,1.0214e+00,1.7650e+00,-4.2965e+00,1.0000e+00,1.7650e+00,5.3790e+00,-1.2213e+00,1.7650e+00,5.3790e+00,-3.6640e+00,1.7650e+00,1.7930e+00,-3.6640e+00,1.7650e+00,1.7930e+00,-1.2213e+00,1.7650e+00,5.3790e+00,-2.9807e+00,1.7650e+00,4.6957e+00,-3.6640e+00,1.7650e+00,2.2401e+00,-1.2213e+00,1.7650e+00,2.2352e+00,-1.2228e+00,1.7650e+00,2.1833e+00,-1.2506e+00,1.7650e+00,2.1379e+00,-1.2879e+00,1.7650e+00,2.1006e+00,-1.3333e+00,1.7650e+00,2.0728e+00,-1.3852e+00,1.7650e+00,2.0558e+00,-1.4415e+00,1.7650e+00,2.0500e+00,-1.5000e+00,1.7650e+00,2.0500e+00,-2.1500e+00,1.7650e+00,2.0558e+00,-2.2085e+00,1.7650e+00,2.0728e+00,-2.2648e+00,1.7650e+00,2.1006e+00,-2.3167e+00,1.7650e+00,2.1379e+00,-2.3621e+00,1.7650e+00,2.1833e+00,-2.3994e+00,1.7650e+00,2.2352e+00,-2.4272e+00,1.7650e+00,2.2915e+00,-2.4442e+00,1.7650e+00,2.3500e+00,-2.4500e+00,1.7650e+00,2.4085e+00,-2.4442e+00,1.7650e+00,2.4648e+00,-2.4272e+00,1.7650e+00,2.5167e+00,-2.3994e+00,1.7650e+00,2.5621e+00,-2.3621e+00,1.7650e+00,2.5994e+00,-2.3167e+00,1.7650e+00,2.6272e+00,-2.2648e+00,1.7650e+00,2.6442e+00,-2.2085e+00,1.7650e+00,2.6500e+00,-2.1500e+00,1.7650e+00,2.6500e+00,-2.0250e+00,1.7650e+00,2.6890e+00,-2.0212e+00,1.7650e+00,2.7265e+00,-2.0098e+00,1.7650e+00,2.7611e+00,-1.9913e+00,1.7650e+00,2.7914e+00,-1.9664e+00,1.7650e+00,2.8163e+00,-1.9361e+00,1.7650e+00,2.8348e+00,-1.9015e+00,1.7650e+00,2.8462e+00,-1.8640e+00,1.7650e+00,2.8500e+00,-1.8250e+00,1.7650e+00,2.8462e+00,-1.7860e+00,1.7650e+00,2.8348e+00,-1.7485e+00,1.7650e+00,2.8163e+00,-1.7139e+00,1.7650e+00,2.7914e+00,-1.6836e+00,1.7650e+00,2.7611e+00,-1.6587e+00,1.7650e+00,2.7265e+00,-1.6402e+00,1.7650e+00,2.6890e+00,-1.6288e+00,1.7650e+00,2.6500e+00,-1.6250e+00,1.7650e+00,2.6500e+00,-1.5000e+00,1.7650e+00,2.6442e+00,-1.4415e+00,1.7650e+00,2.6272e+00,-1.3852e+00,1.7650e+00,2.5994e+00,-1.3333e+00,1.7650e+00,2.5621e+00,-1.2879e+00,1.7650e+00,2.5167e+00,-1.2506e+00,1.7650e+00,2.4648e+00,-1.2228e+00,1.7650e+00,2.4599e+00,-1.2213e+00,1.7650e+00,3.7500e+00,-2.4375e+00,1.7650e+00,3.7512e+00,-2.4497e+00,1.7650e+00,3.7548e+00,-2.4614e+00,1.7650e+00,3.7605e+00,-2.4722e+00,1.7650e+00,3.7683e+00,-2.4817e+00,1.7650e+00,3.7778e+00,-2.4895e+00,1.7650e+00,3.7886e+00,-2.4952e+00,1.7650e+00,3.8003e+00,-2.4988e+00,1.7650e+00,3.8125e+00,-2.5000e+00,1.7650e+00,4.7875e+00,-2.5000e+00,1.7650e+00,4.7997e+00,-2.4988e+00,1.7650e+00,4.8114e+00,-2.4952e+00,1.7650e+00,4.8222e+00,-2.4895e+00,1.7650e+00,4.8317e+00,-2.4817e+00,1.7650e+00,4.8395e+00,-2.4722e+00,1.7650e+00,4.8452e+00,-2.4614e+00,1.7650e+00,4.8488e+00,-2.4497e+00,1.7650e+00,4.8500e+00,-2.4375e+00,1.7650e+00,4.8500e+00,-1.4625e+00,1.7650e+00,4.8488e+00,-1.4503e+00,1.7650e+00,4.8452e+00,-1.4386e+00,1.7650e+00,4.8395e+00,-1.4278e+00,1.7650e+00,4.8317e+00,-1.4183e+00,1.7650e+00,4.8222e+00,-1.4105e+00,1.7650e+00,4.8114e+00,-1.4048e+00,1.7650e+00,4.7997e+00,-1.4012e+00,1.7650e+00,4.7875e+00,-1.4000e+00,1.7650e+00,3.8125e+00,-1.4000e+00,1.7650e+00,3.8003e+00,-1.4012e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_9()
		{
			double[] value = {3.7886e+00,-1.4048e+00,1.7650e+00,3.7778e+00,-1.4105e+00,1.7650e+00,3.7683e+00,-1.4183e+00,1.7650e+00,3.7605e+00,-1.4278e+00,1.7650e+00,3.7548e+00,-1.4386e+00,1.7650e+00,3.7512e+00,-1.4503e+00,1.7650e+00,3.7500e+00,-1.4625e+00,1.7650e+00,4.1776e+00,-3.1002e+00,1.7650e+00,4.1851e+00,-3.1243e+00,1.7650e+00,4.1974e+00,-3.1464e+00,1.7650e+00,4.2139e+00,-3.1656e+00,1.7650e+00,4.2339e+00,-3.1811e+00,1.7650e+00,4.2566e+00,-3.1922e+00,1.7650e+00,4.2811e+00,-3.1986e+00,1.7650e+00,4.3063e+00,-3.1998e+00,1.7650e+00,4.3313e+00,-3.1960e+00,1.7650e+00,4.3550e+00,-3.1872e+00,1.7650e+00,4.3765e+00,-3.1738e+00,1.7650e+00,4.3948e+00,-3.1564e+00,1.7650e+00,4.4093e+00,-3.1357e+00,1.7650e+00,4.4193e+00,-3.1124e+00,1.7650e+00,4.4244e+00,-3.0876e+00,1.7650e+00,4.4244e+00,-3.0624e+00,1.7650e+00,4.4193e+00,-3.0376e+00,1.7650e+00,4.4093e+00,-3.0143e+00,1.7650e+00,4.3948e+00,-2.9936e+00,1.7650e+00,4.3765e+00,-2.9762e+00,1.7650e+00,4.3550e+00,-2.9628e+00,1.7650e+00,4.3313e+00,-2.9540e+00,1.7650e+00,4.3063e+00,-2.9502e+00,1.7650e+00,4.2811e+00,-2.9514e+00,1.7650e+00,4.2566e+00,-2.9578e+00,1.7650e+00,4.2339e+00,-2.9689e+00,1.7650e+00,4.2139e+00,-2.9844e+00,1.7650e+00,4.1974e+00,-3.0036e+00,1.7650e+00,4.1851e+00,-3.0257e+00,1.7650e+00,4.1776e+00,-3.0498e+00,1.7650e+00,4.1750e+00,-3.0750e+00,1.7650e+00,2.6383e+00,-2.6729e+00,1.7650e+00,2.6452e+00,-2.6950e+00,1.7650e+00,2.6564e+00,-2.7151e+00,1.7650e+00,2.6715e+00,-2.7326e+00,1.7650e+00,2.6897e+00,-2.7467e+00,1.7650e+00,2.7104e+00,-2.7569e+00,1.7650e+00,2.7327e+00,-2.7627e+00,1.7650e+00,2.7558e+00,-2.7639e+00,1.7650e+00,2.7786e+00,-2.7604e+00,1.7650e+00,2.8002e+00,-2.7523e+00,1.7650e+00,2.8198e+00,-2.7401e+00,1.7650e+00,2.8365e+00,-2.7243e+00,1.7650e+00,2.8497e+00,-2.7053e+00,1.7650e+00,2.8588e+00,-2.6841e+00,1.7650e+00,2.8634e+00,-2.6615e+00,1.7650e+00,2.8634e+00,-2.6385e+00,1.7650e+00,2.8588e+00,-2.6159e+00,1.7650e+00,2.8497e+00,-2.5947e+00,1.7650e+00,2.8365e+00,-2.5757e+00,1.7650e+00,2.8198e+00,-2.5599e+00,1.7650e+00,2.8002e+00,-2.5477e+00,1.7650e+00,2.7786e+00,-2.5396e+00,1.7650e+00,2.7558e+00,-2.5361e+00,1.7650e+00,2.7327e+00,-2.5373e+00,1.7650e+00,2.7104e+00,-2.5431e+00,1.7650e+00,2.6897e+00,-2.5533e+00,1.7650e+00,2.6715e+00,-2.5674e+00,1.7650e+00,2.6564e+00,-2.5849e+00,1.7650e+00,2.6452e+00,-2.6050e+00,1.7650e+00,2.6383e+00,-2.6271e+00,1.7650e+00,2.6360e+00,-2.6500e+00,1.7650e+00,1.7930e+00,-1.2213e+00,1.7650e+00,1.7930e+00,-3.6640e+00,1.7650e+00,-1.7930e+00,-3.6640e+00,1.7650e+00,-1.7930e+00,-1.2213e+00,1.7650e+00,-1.7930e+00,-2.1308e+00,1.7650e+00,-1.7812e+00,-2.0854e+00,1.7650e+00,-1.7544e+00,-2.0310e+00,1.7650e+00,-1.7173e+00,-1.9831e+00,1.7650e+00,-1.6712e+00,-1.9437e+00,1.7650e+00,-1.6182e+00,-1.9143e+00,1.7650e+00,-1.5603e+00,-1.8961e+00,1.7650e+00,-1.5000e+00,-1.8900e+00,1.7650e+00,-1.4397e+00,-1.8961e+00,1.7650e+00,-1.3818e+00,-1.9143e+00,1.7650e+00,-1.3288e+00,-1.9437e+00,1.7650e+00,-1.2827e+00,-1.9831e+00,1.7650e+00,-1.2456e+00,-2.0310e+00,1.7650e+00,-1.2188e+00,-2.0854e+00,1.7650e+00,-1.2035e+00,-2.1441e+00,1.7650e+00,-1.1982e+00,-2.1656e+00,1.7650e+00,-1.1892e+00,-2.1858e+00,1.7650e+00,-1.1768e+00,-2.2041e+00,1.7650e+00,-1.1613e+00,-2.2199e+00,1.7650e+00,-1.1434e+00,-2.2328e+00,1.7650e+00,-1.1234e+00,-2.2422e+00,1.7650e+00,-1.1020e+00,-2.2480e+00,1.7650e+00,-1.0800e+00,-2.2500e+00,1.7650e+00,-1.7000e-01,-2.2500e+00,1.7650e+00,-1.4797e-01,-2.2480e+00,1.7650e+00,-1.2663e-01,-2.2422e+00,1.7650e+00,-1.0665e-01,-2.2328e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_10()
		{
			double[] value = {-8.8651e-02,-2.2199e+00,1.7650e+00,-7.3199e-02,-2.2041e+00,1.7650e+00,-6.0776e-02,-2.1858e+00,1.7650e+00,-5.1773e-02,-2.1656e+00,1.7650e+00,-4.6471e-02,-2.1441e+00,1.7650e+00,-3.1189e-02,-2.0854e+00,1.7650e+00,-4.4196e-03,-2.0310e+00,1.7650e+00,3.2743e-02,-1.9831e+00,1.7650e+00,7.8781e-02,-1.9437e+00,1.7650e+00,1.3181e-01,-1.9143e+00,1.7650e+00,1.8967e-01,-1.8961e+00,1.7650e+00,2.5000e-01,-1.8900e+00,1.7650e+00,3.1033e-01,-1.8961e+00,1.7650e+00,3.6819e-01,-1.9143e+00,1.7650e+00,4.2122e-01,-1.9437e+00,1.7650e+00,4.6726e-01,-1.9831e+00,1.7650e+00,5.0442e-01,-2.0310e+00,1.7650e+00,5.3119e-01,-2.0854e+00,1.7650e+00,5.4647e-01,-2.1441e+00,1.7650e+00,5.5177e-01,-2.1656e+00,1.7650e+00,5.6078e-01,-2.1858e+00,1.7650e+00,5.7320e-01,-2.2041e+00,1.7650e+00,5.8865e-01,-2.2199e+00,1.7650e+00,6.0665e-01,-2.2328e+00,1.7650e+00,6.2663e-01,-2.2422e+00,1.7650e+00,6.4797e-01,-2.2480e+00,1.7650e+00,6.7000e-01,-2.2500e+00,1.7650e+00,1.1250e+00,-2.2500e+00,1.7650e+00,1.1494e+00,-2.2476e+00,1.7650e+00,1.1728e+00,-2.2405e+00,1.7650e+00,1.1944e+00,-2.2289e+00,1.7650e+00,1.2134e+00,-2.2134e+00,1.7650e+00,1.2289e+00,-2.1944e+00,1.7650e+00,1.2405e+00,-2.1728e+00,1.7650e+00,1.2476e+00,-2.1494e+00,1.7650e+00,1.2500e+00,-2.1250e+00,1.7650e+00,1.2500e+00,-1.4200e+00,1.7650e+00,1.2480e+00,-1.3980e+00,1.7650e+00,1.2422e+00,-1.3766e+00,1.7650e+00,1.2328e+00,-1.3566e+00,1.7650e+00,1.2199e+00,-1.3387e+00,1.7650e+00,1.2041e+00,-1.3232e+00,1.7650e+00,1.1858e+00,-1.3108e+00,1.7650e+00,1.1656e+00,-1.3018e+00,1.7650e+00,1.1441e+00,-1.2965e+00,1.7650e+00,1.0854e+00,-1.2812e+00,1.7650e+00,1.0310e+00,-1.2544e+00,1.7650e+00,9.8838e-01,-1.2213e+00,1.7650e+00,1.4568e-01,-2.2114e+00,1.7650e+00,1.5213e-01,-2.2320e+00,1.7650e+00,1.6259e-01,-2.2508e+00,1.7650e+00,1.7663e-01,-2.2672e+00,1.7650e+00,1.9367e-01,-2.2804e+00,1.7650e+00,2.1301e-01,-2.2899e+00,1.7650e+00,2.3387e-01,-2.2953e+00,1.7650e+00,2.5539e-01,-2.2964e+00,1.7650e+00,2.7669e-01,-2.2931e+00,1.7650e+00,2.9690e-01,-2.2856e+00,1.7650e+00,3.1519e-01,-2.2742e+00,1.7650e+00,3.3081e-01,-2.2594e+00,1.7650e+00,3.4312e-01,-2.2417e+00,1.7650e+00,3.5162e-01,-2.2219e+00,1.7650e+00,3.5595e-01,-2.2008e+00,1.7650e+00,3.5595e-01,-2.1792e+00,1.7650e+00,3.5162e-01,-2.1581e+00,1.7650e+00,3.4312e-01,-2.1383e+00,1.7650e+00,3.3081e-01,-2.1206e+00,1.7650e+00,3.1519e-01,-2.1058e+00,1.7650e+00,2.9690e-01,-2.0944e+00,1.7650e+00,2.7669e-01,-2.0869e+00,1.7650e+00,2.5539e-01,-2.0836e+00,1.7650e+00,2.3387e-01,-2.0847e+00,1.7650e+00,2.1301e-01,-2.0901e+00,1.7650e+00,1.9367e-01,-2.0996e+00,1.7650e+00,1.7663e-01,-2.1128e+00,1.7650e+00,1.6259e-01,-2.1292e+00,1.7650e+00,1.5213e-01,-2.1480e+00,1.7650e+00,1.4568e-01,-2.1686e+00,1.7650e+00,1.4350e-01,-2.1900e+00,1.7650e+00,-1.6043e+00,-2.2114e+00,1.7650e+00,-1.5979e+00,-2.2320e+00,1.7650e+00,-1.5874e+00,-2.2508e+00,1.7650e+00,-1.5734e+00,-2.2672e+00,1.7650e+00,-1.5563e+00,-2.2804e+00,1.7650e+00,-1.5370e+00,-2.2899e+00,1.7650e+00,-1.5161e+00,-2.2953e+00,1.7650e+00,-1.4946e+00,-2.2964e+00,1.7650e+00,-1.4733e+00,-2.2931e+00,1.7650e+00,-1.4531e+00,-2.2856e+00,1.7650e+00,-1.4348e+00,-2.2742e+00,1.7650e+00,-1.4192e+00,-2.2594e+00,1.7650e+00,-1.4069e+00,-2.2417e+00,1.7650e+00,-1.3984e+00,-2.2219e+00,1.7650e+00,-1.3940e+00,-2.2008e+00,1.7650e+00,-1.3940e+00,-2.1792e+00,1.7650e+00,-1.3984e+00,-2.1581e+00,1.7650e+00,-1.4069e+00,-2.1383e+00,1.7650e+00,-1.4192e+00,-2.1206e+00,1.7650e+00,-1.4348e+00,-2.1058e+00,1.7650e+00,-1.4531e+00,-2.0944e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_11()
		{
			double[] value = {-1.4733e+00,-2.0869e+00,1.7650e+00,-1.4946e+00,-2.0836e+00,1.7650e+00,-1.5161e+00,-2.0847e+00,1.7650e+00,-1.5370e+00,-2.0901e+00,1.7650e+00,-1.5563e+00,-2.0996e+00,1.7650e+00,-1.5734e+00,-2.1128e+00,1.7650e+00,-1.5874e+00,-2.1292e+00,1.7650e+00,-1.5979e+00,-2.1480e+00,1.7650e+00,-1.6043e+00,-2.1686e+00,1.7650e+00,-1.6065e+00,-2.1900e+00,1.7650e+00,-1.7930e+00,-1.2213e+00,1.7650e+00,-1.7930e+00,-3.6640e+00,1.7650e+00,-5.3790e+00,-3.6640e+00,1.7650e+00,-5.3790e+00,-1.2213e+00,1.7650e+00,-4.6957e+00,-3.6640e+00,1.7650e+00,-5.3790e+00,-2.9807e+00,1.7650e+00,-3.9884e+00,-1.2213e+00,1.7650e+00,-4.0310e+00,-1.2544e+00,1.7650e+00,-4.0854e+00,-1.2812e+00,1.7650e+00,-4.1441e+00,-1.2965e+00,1.7650e+00,-4.1656e+00,-1.3018e+00,1.7650e+00,-4.1858e+00,-1.3108e+00,1.7650e+00,-4.2041e+00,-1.3232e+00,1.7650e+00,-4.2199e+00,-1.3387e+00,1.7650e+00,-4.2328e+00,-1.3566e+00,1.7650e+00,-4.2422e+00,-1.3766e+00,1.7650e+00,-4.2480e+00,-1.3980e+00,1.7650e+00,-4.2500e+00,-1.4200e+00,1.7650e+00,-4.2500e+00,-2.1250e+00,1.7650e+00,-4.2476e+00,-2.1494e+00,1.7650e+00,-4.2405e+00,-2.1728e+00,1.7650e+00,-4.2289e+00,-2.1944e+00,1.7650e+00,-4.2134e+00,-2.2134e+00,1.7650e+00,-4.1944e+00,-2.2289e+00,1.7650e+00,-4.1728e+00,-2.2405e+00,1.7650e+00,-4.1494e+00,-2.2476e+00,1.7650e+00,-4.1250e+00,-2.2500e+00,1.7650e+00,-3.6700e+00,-2.2500e+00,1.7650e+00,-3.6480e+00,-2.2480e+00,1.7650e+00,-3.6266e+00,-2.2422e+00,1.7650e+00,-3.6066e+00,-2.2328e+00,1.7650e+00,-3.5887e+00,-2.2199e+00,1.7650e+00,-3.5732e+00,-2.2041e+00,1.7650e+00,-3.5608e+00,-2.1858e+00,1.7650e+00,-3.5518e+00,-2.1656e+00,1.7650e+00,-3.5465e+00,-2.1441e+00,1.7650e+00,-3.5312e+00,-2.0854e+00,1.7650e+00,-3.5044e+00,-2.0310e+00,1.7650e+00,-3.4673e+00,-1.9831e+00,1.7650e+00,-3.4212e+00,-1.9437e+00,1.7650e+00,-3.3682e+00,-1.9143e+00,1.7650e+00,-3.3103e+00,-1.8961e+00,1.7650e+00,-3.2500e+00,-1.8900e+00,1.7650e+00,-3.1897e+00,-1.8961e+00,1.7650e+00,-3.1318e+00,-1.9143e+00,1.7650e+00,-3.0788e+00,-1.9437e+00,1.7650e+00,-3.0327e+00,-1.9831e+00,1.7650e+00,-2.9956e+00,-2.0310e+00,1.7650e+00,-2.9688e+00,-2.0854e+00,1.7650e+00,-2.9535e+00,-2.1441e+00,1.7650e+00,-2.9482e+00,-2.1656e+00,1.7650e+00,-2.9392e+00,-2.1858e+00,1.7650e+00,-2.9268e+00,-2.2041e+00,1.7650e+00,-2.9113e+00,-2.2199e+00,1.7650e+00,-2.8934e+00,-2.2328e+00,1.7650e+00,-2.8734e+00,-2.2422e+00,1.7650e+00,-2.8520e+00,-2.2480e+00,1.7650e+00,-2.8300e+00,-2.2500e+00,1.7650e+00,-1.9200e+00,-2.2500e+00,1.7650e+00,-1.8980e+00,-2.2480e+00,1.7650e+00,-1.8766e+00,-2.2422e+00,1.7650e+00,-1.8566e+00,-2.2328e+00,1.7650e+00,-1.8387e+00,-2.2199e+00,1.7650e+00,-1.8232e+00,-2.2041e+00,1.7650e+00,-1.8108e+00,-2.1858e+00,1.7650e+00,-1.8018e+00,-2.1656e+00,1.7650e+00,-1.7965e+00,-2.1441e+00,1.7650e+00,-1.7930e+00,-2.1308e+00,1.7650e+00,-3.3543e+00,-2.2114e+00,1.7650e+00,-3.3479e+00,-2.2320e+00,1.7650e+00,-3.3374e+00,-2.2508e+00,1.7650e+00,-3.3234e+00,-2.2672e+00,1.7650e+00,-3.3063e+00,-2.2804e+00,1.7650e+00,-3.2870e+00,-2.2899e+00,1.7650e+00,-3.2661e+00,-2.2953e+00,1.7650e+00,-3.2446e+00,-2.2964e+00,1.7650e+00,-3.2233e+00,-2.2931e+00,1.7650e+00,-3.2031e+00,-2.2856e+00,1.7650e+00,-3.1848e+00,-2.2742e+00,1.7650e+00,-3.1692e+00,-2.2594e+00,1.7650e+00,-3.1569e+00,-2.2417e+00,1.7650e+00,-3.1484e+00,-2.2219e+00,1.7650e+00,-3.1440e+00,-2.2008e+00,1.7650e+00,-3.1440e+00,-2.1792e+00,1.7650e+00,-3.1484e+00,-2.1581e+00,1.7650e+00,-3.1569e+00,-2.1383e+00,1.7650e+00,-3.1692e+00,-2.1206e+00,1.7650e+00,-3.1848e+00,-2.1058e+00,1.7650e+00,-3.2031e+00,-2.0944e+00,1.7650e+00,-3.2233e+00,-2.0869e+00,1.7650e+00};
			return value;
		}
		private double[] getCoordinate_7_57_point_12()
		{
			double[] value = {-3.2446e+00,-2.0836e+00,1.7650e+00,-3.2661e+00,-2.0847e+00,1.7650e+00,-3.2870e+00,-2.0901e+00,1.7650e+00,-3.3063e+00,-2.0996e+00,1.7650e+00,-3.3234e+00,-2.1128e+00,1.7650e+00,-3.3374e+00,-2.1292e+00,1.7650e+00,-3.3479e+00,-2.1480e+00,1.7650e+00,-3.3543e+00,-2.1686e+00,1.7650e+00,-3.3565e+00,-2.1900e+00,1.7650e+00};
			return value;
		}


		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_63_index_1()
		{
			int[] value = {224,59,60,224,60,61,224,61,62,224,62,63,224,63,64,224,64,65,224,65,66,45,46,35,44,45,35,43,44,35,42,43,35,41,42,35,40,41,35,39,40,35,39,35,0,38,39,0,37,38,0,36,37,0,66,36,0,66,0,1,66,1,2,66,2,3,66,3,4,66,4,5,66,5,6,66,6,7,66,7,8,8,69,70,8,70,71,8,71,72,8,72,73,8,73,74,66,8,74,66,74,75,66,75,76,66,76,77,66,77,78,66,78,79,66,79,80,66,80,81,66,81,82,66,82,83,66,83,84,66,84,85,66,85,86,68,69,8,67,68,8,97,67,8,96,97,8,95,96,8,94,95,8,93,94,8,93,8,9,92,93,9,91,92,9,90,91,9,89,90,9,88,89,9,87,88,9,86,87,9,9,156,157,9,157,158,9,158,159,86,9,159,86,159,129,86,129,130,86,130,131,86,131,132,86,132,133,86,133,134,86,134,135,86,135,136,86,136,137,86,137,138,86,138,139,86,139,140,86,140,141,86,141,142,86,142,143,155,156,9,154,155,9,153,154,9,152,153,9,151,152,9,150,151,9,149,150,9,149,9,10,149,10,11,149,11,12,148,149,12,148,12,13,148,13,14,148,14,15,148,15,16,148,16,17,148,17,18,147,148,18,146,147,18,145,146,18,144,145,18,143,144,18,18,117,118,18,118,119,18,119,120,143,18,120,143,120,121,143,121,122,143,122,123,143,123,124,143,124,125,143,125,126,143,126,127,143,127,128,143,128,98,143,98,99,143,99,100,143,100,101,116,117,18,115,116,18,114,115,18,113,114,18,112,113,18,111,112,18,110,111,18,110,18,19,110,19,20,110,20,21,110,21,22,109,110,22,109,22,23,109,23,24,109,24,25,109,25,26,109,26,27,108,109,27,107,108,27,106,107,27,105,106,27,104,105,27,103,104,27,102,103,27,101,102,27,101,27,28,101,28,29,101,29,30,101,30,31,101,31,32,101,32,33,101,33,34,101,34,35,35,46,47,35,47,48,35,48,49,35,49,50,35,50,51,101,35,51,101,51,52,101,52,53,101,53,54,101,54,55,101,55,56,101,56,57,101,57,58,101,58,59,59,224,225,59,225,226,59,226,227,59,227,228,59,228,229,59,229,230,59,230,231,59,231,160,101,59,160,101,160,161,101,161,162,101,162,163,101,163,164,101,164,165,101,165,166,101,166,167,101,167,168,101,168,169,101,169,170,101,170,171,101,171,172,101,172,173,101,173,174,101,174,175,101,175,176,101,176,177,101,177,178,143,101,178,143,178,179,143,179,180,143,180,181,143,181,182,143,182,183,143,183,184,143,184,185,143,185,186,143,186,187,143,187,188,143,188,189,143,189,190,143,190,191,143,191,192,143,192,193,143,193,194,143,194,195,143,195,196,86,143,196,86,196,197,86,197,198,86,198,199,86,199,200,86,200,201,86,201,202,86,202,203,86,203,204,86,204,205,86,205,206,86,206,207,86,207,208,86,208,209,86,209,210,86,210,211,86,211,212,86,212,213,86,213,214,66,86,214,66,214,215,66,215,216,66,216,217,66,217,218,66,218,219,66,219,220,66,220,221,66,221,222,66,222,223,224,66,223};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_63_point_1()
		{
			double[] value = {6.0140e+00,4.3840e+00,0.0000e+00,6.0374e+00,4.3817e+00,0.0000e+00,6.0599e+00,4.3749e+00,0.0000e+00,6.0807e+00,4.3638e+00,0.0000e+00,6.0989e+00,4.3489e+00,0.0000e+00,6.1138e+00,4.3307e+00,0.0000e+00,6.1249e+00,4.3099e+00,0.0000e+00,6.1317e+00,4.2874e+00,0.0000e+00,6.1340e+00,4.2640e+00,0.0000e+00,6.1340e+00,-4.2640e+00,0.0000e+00,6.1317e+00,-4.2874e+00,0.0000e+00,6.1249e+00,-4.3099e+00,0.0000e+00,6.1138e+00,-4.3307e+00,0.0000e+00,6.0989e+00,-4.3489e+00,0.0000e+00,6.0807e+00,-4.3638e+00,0.0000e+00,6.0599e+00,-4.3749e+00,0.0000e+00,6.0374e+00,-4.3817e+00,0.0000e+00,6.0140e+00,-4.3840e+00,0.0000e+00,-6.0140e+00,-4.3840e+00,0.0000e+00,-6.0374e+00,-4.3817e+00,0.0000e+00,-6.0599e+00,-4.3749e+00,0.0000e+00,-6.0807e+00,-4.3638e+00,0.0000e+00,-6.0989e+00,-4.3489e+00,0.0000e+00,-6.1138e+00,-4.3307e+00,0.0000e+00,-6.1249e+00,-4.3099e+00,0.0000e+00,-6.1317e+00,-4.2874e+00,0.0000e+00,-6.1340e+00,-4.2640e+00,0.0000e+00,-6.1340e+00,4.2640e+00,0.0000e+00,-6.1317e+00,4.2874e+00,0.0000e+00,-6.1249e+00,4.3099e+00,0.0000e+00,-6.1138e+00,4.3307e+00,0.0000e+00,-6.0989e+00,4.3489e+00,0.0000e+00,-6.0807e+00,4.3638e+00,0.0000e+00,-6.0599e+00,4.3749e+00,0.0000e+00,-6.0374e+00,4.3817e+00,0.0000e+00,-6.0140e+00,4.3840e+00,0.0000e+00,-5.5087e+00,3.8989e+00,0.0000e+00,-5.5159e+00,3.9218e+00,0.0000e+00,-5.5275e+00,3.9428e+00,0.0000e+00,-5.5432e+00,3.9611e+00,0.0000e+00,-5.5622e+00,3.9758e+00,0.0000e+00,-5.5838e+00,3.9864e+00,0.0000e+00,-5.6070e+00,3.9924e+00,0.0000e+00,-5.6310e+00,3.9936e+00,0.0000e+00,-5.6548e+00,3.9900e+00,0.0000e+00,-5.6773e+00,3.9816e+00,0.0000e+00,-5.6977e+00,3.9689e+00,0.0000e+00,-5.7151e+00,3.9524e+00,0.0000e+00,-5.7288e+00,3.9326e+00,0.0000e+00,-5.7383e+00,3.9105e+00,0.0000e+00,-5.7431e+00,3.8870e+00,0.0000e+00,-5.7431e+00,3.8630e+00,0.0000e+00,-5.7383e+00,3.8395e+00,0.0000e+00,-5.7288e+00,3.8174e+00,0.0000e+00,-5.7151e+00,3.7976e+00,0.0000e+00,-5.6977e+00,3.7811e+00,0.0000e+00,-5.6773e+00,3.7684e+00,0.0000e+00,-5.6548e+00,3.7600e+00,0.0000e+00,-5.6310e+00,3.7564e+00,0.0000e+00,-5.6070e+00,3.7576e+00,0.0000e+00,-5.5838e+00,3.7636e+00,0.0000e+00,-5.5622e+00,3.7742e+00,0.0000e+00,-5.5432e+00,3.7889e+00,0.0000e+00,-5.5275e+00,3.8072e+00,0.0000e+00,-5.5159e+00,3.8282e+00,0.0000e+00,-5.5087e+00,3.8511e+00,0.0000e+00,-5.5062e+00,3.8750e+00,0.0000e+00,5.7413e+00,3.8989e+00,0.0000e+00,5.7341e+00,3.9218e+00,0.0000e+00,5.7225e+00,3.9428e+00,0.0000e+00,5.7068e+00,3.9611e+00,0.0000e+00,5.6878e+00,3.9758e+00,0.0000e+00,5.6662e+00,3.9864e+00,0.0000e+00,5.6430e+00,3.9924e+00,0.0000e+00,5.6190e+00,3.9936e+00,0.0000e+00,5.5952e+00,3.9900e+00,0.0000e+00,5.5727e+00,3.9816e+00,0.0000e+00,5.5523e+00,3.9689e+00,0.0000e+00,5.5349e+00,3.9524e+00,0.0000e+00,5.5212e+00,3.9326e+00,0.0000e+00,5.5117e+00,3.9105e+00,0.0000e+00,5.5069e+00,3.8870e+00,0.0000e+00,5.5069e+00,3.8630e+00,0.0000e+00,5.5117e+00,3.8395e+00,0.0000e+00,5.5212e+00,3.8174e+00,0.0000e+00,5.5349e+00,3.7976e+00,0.0000e+00,5.5523e+00,3.7811e+00,0.0000e+00,5.5727e+00,3.7684e+00,0.0000e+00,5.5952e+00,3.7600e+00,0.0000e+00,5.6190e+00,3.7564e+00,0.0000e+00,5.6430e+00,3.7576e+00,0.0000e+00,5.6662e+00,3.7636e+00,0.0000e+00,5.6878e+00,3.7742e+00,0.0000e+00,5.7068e+00,3.7889e+00,0.0000e+00,5.7225e+00,3.8072e+00,0.0000e+00,5.7341e+00,3.8282e+00,0.0000e+00,5.7413e+00,3.8511e+00,0.0000e+00,5.7438e+00,3.8750e+00,0.0000e+00,-5.5087e+00,-3.8511e+00,0.0000e+00,-5.5159e+00,-3.8282e+00,0.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_63_point_2()
		{
			double[] value = {-5.5275e+00,-3.8072e+00,0.0000e+00,-5.5432e+00,-3.7889e+00,0.0000e+00,-5.5622e+00,-3.7742e+00,0.0000e+00,-5.5838e+00,-3.7636e+00,0.0000e+00,-5.6070e+00,-3.7576e+00,0.0000e+00,-5.6310e+00,-3.7564e+00,0.0000e+00,-5.6548e+00,-3.7600e+00,0.0000e+00,-5.6773e+00,-3.7684e+00,0.0000e+00,-5.6977e+00,-3.7811e+00,0.0000e+00,-5.7151e+00,-3.7976e+00,0.0000e+00,-5.7288e+00,-3.8174e+00,0.0000e+00,-5.7383e+00,-3.8395e+00,0.0000e+00,-5.7431e+00,-3.8630e+00,0.0000e+00,-5.7431e+00,-3.8870e+00,0.0000e+00,-5.7383e+00,-3.9105e+00,0.0000e+00,-5.7288e+00,-3.9326e+00,0.0000e+00,-5.7151e+00,-3.9524e+00,0.0000e+00,-5.6977e+00,-3.9689e+00,0.0000e+00,-5.6773e+00,-3.9816e+00,0.0000e+00,-5.6548e+00,-3.9900e+00,0.0000e+00,-5.6310e+00,-3.9936e+00,0.0000e+00,-5.6070e+00,-3.9924e+00,0.0000e+00,-5.5838e+00,-3.9864e+00,0.0000e+00,-5.5622e+00,-3.9758e+00,0.0000e+00,-5.5432e+00,-3.9611e+00,0.0000e+00,-5.5275e+00,-3.9428e+00,0.0000e+00,-5.5159e+00,-3.9218e+00,0.0000e+00,-5.5087e+00,-3.8989e+00,0.0000e+00,-5.5062e+00,-3.8750e+00,0.0000e+00,5.7413e+00,-3.8511e+00,0.0000e+00,5.7341e+00,-3.8282e+00,0.0000e+00,5.7225e+00,-3.8072e+00,0.0000e+00,5.7068e+00,-3.7889e+00,0.0000e+00,5.6878e+00,-3.7742e+00,0.0000e+00,5.6662e+00,-3.7636e+00,0.0000e+00,5.6430e+00,-3.7576e+00,0.0000e+00,5.6190e+00,-3.7564e+00,0.0000e+00,5.5952e+00,-3.7600e+00,0.0000e+00,5.5727e+00,-3.7684e+00,0.0000e+00,5.5523e+00,-3.7811e+00,0.0000e+00,5.5349e+00,-3.7976e+00,0.0000e+00,5.5212e+00,-3.8174e+00,0.0000e+00,5.5117e+00,-3.8395e+00,0.0000e+00,5.5069e+00,-3.8630e+00,0.0000e+00,5.5069e+00,-3.8870e+00,0.0000e+00,5.5117e+00,-3.9105e+00,0.0000e+00,5.5212e+00,-3.9326e+00,0.0000e+00,5.5349e+00,-3.9524e+00,0.0000e+00,5.5523e+00,-3.9689e+00,0.0000e+00,5.5727e+00,-3.9816e+00,0.0000e+00,5.5952e+00,-3.9900e+00,0.0000e+00,5.6190e+00,-3.9936e+00,0.0000e+00,5.6430e+00,-3.9924e+00,0.0000e+00,5.6662e+00,-3.9864e+00,0.0000e+00,5.6878e+00,-3.9758e+00,0.0000e+00,5.7068e+00,-3.9611e+00,0.0000e+00,5.7225e+00,-3.9428e+00,0.0000e+00,5.7341e+00,-3.9218e+00,0.0000e+00,5.7413e+00,-3.8989e+00,0.0000e+00,5.7438e+00,-3.8750e+00,0.0000e+00,-5.4990e+00,2.9807e+00,0.0000e+00,-5.4990e+00,-2.9807e+00,0.0000e+00,-5.4984e+00,-2.9925e+00,0.0000e+00,-5.4967e+00,-3.0042e+00,0.0000e+00,-5.4938e+00,-3.0156e+00,0.0000e+00,-5.4899e+00,-3.0267e+00,0.0000e+00,-5.4848e+00,-3.0373e+00,0.0000e+00,-5.4788e+00,-3.0474e+00,0.0000e+00,-5.4718e+00,-3.0569e+00,0.0000e+00,-5.4639e+00,-3.0656e+00,0.0000e+00,-4.7806e+00,-3.7489e+00,0.0000e+00,-4.7719e+00,-3.7568e+00,0.0000e+00,-4.7624e+00,-3.7638e+00,0.0000e+00,-4.7523e+00,-3.7698e+00,0.0000e+00,-4.7417e+00,-3.7749e+00,0.0000e+00,-4.7306e+00,-3.7788e+00,0.0000e+00,-4.7192e+00,-3.7817e+00,0.0000e+00,-4.7075e+00,-3.7834e+00,0.0000e+00,-4.6957e+00,-3.7840e+00,0.0000e+00,4.6957e+00,-3.7840e+00,0.0000e+00,4.7075e+00,-3.7834e+00,0.0000e+00,4.7192e+00,-3.7817e+00,0.0000e+00,4.7306e+00,-3.7788e+00,0.0000e+00,4.7417e+00,-3.7749e+00,0.0000e+00,4.7523e+00,-3.7698e+00,0.0000e+00,4.7624e+00,-3.7638e+00,0.0000e+00,4.7719e+00,-3.7568e+00,0.0000e+00,4.7806e+00,-3.7489e+00,0.0000e+00,5.4639e+00,-3.0656e+00,0.0000e+00,5.4718e+00,-3.0569e+00,0.0000e+00,5.4788e+00,-3.0474e+00,0.0000e+00,5.4848e+00,-3.0373e+00,0.0000e+00,5.4899e+00,-3.0267e+00,0.0000e+00,5.4938e+00,-3.0156e+00,0.0000e+00,5.4967e+00,-3.0042e+00,0.0000e+00,5.4984e+00,-2.9925e+00,0.0000e+00,5.4990e+00,-2.9807e+00,0.0000e+00,5.4990e+00,2.9807e+00,0.0000e+00,5.4984e+00,2.9925e+00,0.0000e+00,5.4967e+00,3.0042e+00,0.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_63_point_3()
		{
			double[] value = {5.4938e+00,3.0156e+00,0.0000e+00,5.4899e+00,3.0267e+00,0.0000e+00,5.4848e+00,3.0373e+00,0.0000e+00,5.4788e+00,3.0474e+00,0.0000e+00,5.4718e+00,3.0569e+00,0.0000e+00,5.4639e+00,3.0656e+00,0.0000e+00,4.7806e+00,3.7489e+00,0.0000e+00,4.7719e+00,3.7568e+00,0.0000e+00,4.7624e+00,3.7638e+00,0.0000e+00,4.7523e+00,3.7698e+00,0.0000e+00,4.7417e+00,3.7749e+00,0.0000e+00,4.7306e+00,3.7788e+00,0.0000e+00,4.7192e+00,3.7817e+00,0.0000e+00,4.7075e+00,3.7834e+00,0.0000e+00,4.6957e+00,3.7840e+00,0.0000e+00,-4.6957e+00,3.7840e+00,0.0000e+00,-4.7075e+00,3.7834e+00,0.0000e+00,-4.7192e+00,3.7817e+00,0.0000e+00,-4.7306e+00,3.7788e+00,0.0000e+00,-4.7417e+00,3.7749e+00,0.0000e+00,-4.7523e+00,3.7698e+00,0.0000e+00,-4.7624e+00,3.7638e+00,0.0000e+00,-4.7719e+00,3.7568e+00,0.0000e+00,-4.7806e+00,3.7489e+00,0.0000e+00,-5.4639e+00,3.0656e+00,0.0000e+00,-5.4718e+00,3.0569e+00,0.0000e+00,-5.4788e+00,3.0474e+00,0.0000e+00,-5.4848e+00,3.0373e+00,0.0000e+00,-5.4899e+00,3.0267e+00,0.0000e+00,-5.4938e+00,3.0156e+00,0.0000e+00,-5.4967e+00,3.0042e+00,0.0000e+00,-5.4984e+00,2.9925e+00,0.0000e+00,-5.4990e+00,2.9807e+00,0.0000e+00};
			return value;
		}


		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_69_index_1()
		{
			int[] value = {25,192,193,25,193,194,25,194,195,25,195,196,25,196,197,25,197,198,25,198,199,171,172,74,170,171,74,169,170,74,199,169,74,25,199,74,75,133,134,75,134,135,75,135,136,75,136,137,75,137,107,75,107,108,75,108,109,132,133,75,131,132,75,130,131,75,129,130,75,128,129,75,127,128,75,126,127,75,72,94,95,72,95,96,72,96,97,72,97,98,72,98,99,72,99,100,72,100,101,93,94,72,92,93,72,91,92,72,90,91,72,89,90,72,88,89,72,73,149,150,73,150,151,73,151,152,73,152,153,73,153,154,73,154,155,148,149,73,147,148,73,146,147,73,145,146,73,144,145,73,143,144,73,142,143,73,74,172,173,74,173,174,74,174,175,74,175,176,74,176,177,74,177,178,74,178,179,191,192,25,190,191,25,189,190,25,188,189,25,187,188,25,186,187,25,185,186,25,185,25,26,184,185,26,183,184,26,182,183,26,181,182,26,180,181,26,179,180,26,74,179,26,74,26,27,74,27,28,74,28,29,74,29,30,74,30,31,74,31,32,74,32,33,74,33,34,73,74,34,73,34,35,73,35,36,73,36,37,142,73,37,141,142,37,140,141,37,139,140,37,139,37,38,138,139,38,168,138,38,168,38,39,167,168,39,166,167,39,165,166,39,164,165,39,163,164,39,162,163,39,162,39,40,162,40,41,162,41,42,162,42,43,162,43,44,161,162,44,160,161,44,159,160,44,158,159,44,157,158,44,156,157,44,155,156,44,73,155,44,73,44,45,73,45,46,73,46,47,73,47,48,73,48,49,73,49,50,73,50,51,73,51,52,72,73,52,72,52,53,72,53,54,88,72,54,87,88,54,87,54,55,86,87,55,85,86,55,84,85,55,84,55,56,83,84,56,82,83,56,81,82,56,81,56,57,80,81,57,79,80,57,78,79,57,77,78,57,77,57,58,77,58,59,77,59,60,77,60,61,77,61,62,76,77,62,106,76,62,105,106,62,104,105,62,103,104,62,102,103,62,101,102,62,72,101,62,72,62,63,72,63,64,72,64,65,72,65,66,72,66,67,72,67,68,72,68,69,72,69,70,75,72,70,75,70,71,75,71,0,75,0,1,126,75,1,125,126,1,124,125,1,124,1,2,123,124,2,122,123,2,121,122,2,121,2,3,120,121,3,119,120,3,118,119,3,117,118,3,116,117,3,116,3,4,116,4,5,116,5,6,116,6,7,116,7,8,115,116,8,114,115,8,113,114,8,112,113,8,111,112,8,110,111,8,109,110,8,75,109,8,75,8,9,75,9,10,75,10,11,75,11,12,75,12,13,75,13,14,75,14,15,75,15,16,74,75,16,74,16,17,74,17,18,74,18,19,74,19,20,74,20,21,74,21,22,74,22,23,74,23,24,25,74,24};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_69_point_1()
		{
			double[] value = {-4.8169e+00,-4.0931e+00,4.0000e-01,-4.8344e+00,-4.0905e+00,4.0000e-01,-4.8515e+00,-4.0862e+00,4.0000e-01,-4.8682e+00,-4.0803e+00,4.0000e-01,-4.8841e+00,-4.0727e+00,4.0000e-01,-4.8993e+00,-4.0637e+00,4.0000e-01,-4.9135e+00,-4.0531e+00,4.0000e-01,-4.9266e+00,-4.0413e+00,4.0000e-01,-5.7563e+00,-3.2116e+00,4.0000e-01,-5.7681e+00,-3.1985e+00,4.0000e-01,-5.7787e+00,-3.1843e+00,4.0000e-01,-5.7877e+00,-3.1691e+00,4.0000e-01,-5.7953e+00,-3.1532e+00,4.0000e-01,-5.8012e+00,-3.1365e+00,4.0000e-01,-5.8055e+00,-3.1194e+00,4.0000e-01,-5.8081e+00,-3.1019e+00,4.0000e-01,-5.8090e+00,-3.0843e+00,4.0000e-01,-5.8090e+00,3.0843e+00,4.0000e-01,-5.8081e+00,3.1019e+00,4.0000e-01,-5.8055e+00,3.1194e+00,4.0000e-01,-5.8012e+00,3.1365e+00,4.0000e-01,-5.7953e+00,3.1532e+00,4.0000e-01,-5.7877e+00,3.1691e+00,4.0000e-01,-5.7787e+00,3.1843e+00,4.0000e-01,-5.7681e+00,3.1985e+00,4.0000e-01,-5.7563e+00,3.2116e+00,4.0000e-01,-4.9266e+00,4.0413e+00,4.0000e-01,-4.9135e+00,4.0531e+00,4.0000e-01,-4.8993e+00,4.0637e+00,4.0000e-01,-4.8841e+00,4.0727e+00,4.0000e-01,-4.8682e+00,4.0803e+00,4.0000e-01,-4.8515e+00,4.0862e+00,4.0000e-01,-4.8344e+00,4.0905e+00,4.0000e-01,-4.8169e+00,4.0931e+00,4.0000e-01,-4.7993e+00,4.0940e+00,4.0000e-01,4.7993e+00,4.0940e+00,4.0000e-01,4.8169e+00,4.0931e+00,4.0000e-01,4.8344e+00,4.0905e+00,4.0000e-01,4.8515e+00,4.0862e+00,4.0000e-01,4.8682e+00,4.0803e+00,4.0000e-01,4.8841e+00,4.0727e+00,4.0000e-01,4.8993e+00,4.0637e+00,4.0000e-01,4.9135e+00,4.0531e+00,4.0000e-01,4.9266e+00,4.0413e+00,4.0000e-01,5.7563e+00,3.2116e+00,4.0000e-01,5.7681e+00,3.1985e+00,4.0000e-01,5.7787e+00,3.1843e+00,4.0000e-01,5.7877e+00,3.1691e+00,4.0000e-01,5.7953e+00,3.1532e+00,4.0000e-01,5.8012e+00,3.1365e+00,4.0000e-01,5.8055e+00,3.1194e+00,4.0000e-01,5.8081e+00,3.1019e+00,4.0000e-01,5.8090e+00,3.0843e+00,4.0000e-01,5.8090e+00,-3.0843e+00,4.0000e-01,5.8081e+00,-3.1019e+00,4.0000e-01,5.8055e+00,-3.1194e+00,4.0000e-01,5.8012e+00,-3.1365e+00,4.0000e-01,5.7953e+00,-3.1532e+00,4.0000e-01,5.7877e+00,-3.1691e+00,4.0000e-01,5.7787e+00,-3.1843e+00,4.0000e-01,5.7681e+00,-3.1985e+00,4.0000e-01,5.7563e+00,-3.2116e+00,4.0000e-01,4.9266e+00,-4.0413e+00,4.0000e-01,4.9135e+00,-4.0531e+00,4.0000e-01,4.8993e+00,-4.0637e+00,4.0000e-01,4.8841e+00,-4.0727e+00,4.0000e-01,4.8682e+00,-4.0803e+00,4.0000e-01,4.8515e+00,-4.0862e+00,4.0000e-01,4.8344e+00,-4.0905e+00,4.0000e-01,4.8169e+00,-4.0931e+00,4.0000e-01,4.7993e+00,-4.0940e+00,4.0000e-01,-4.7993e+00,-4.0940e+00,4.0000e-01,6.0140e+00,-4.2640e+00,4.0000e-01,6.0140e+00,4.2640e+00,4.0000e-01,-6.0140e+00,4.2640e+00,4.0000e-01,-6.0140e+00,-4.2640e+00,4.0000e-01,5.5087e+00,-3.8511e+00,4.0000e-01,5.5159e+00,-3.8282e+00,4.0000e-01,5.5275e+00,-3.8072e+00,4.0000e-01,5.5432e+00,-3.7889e+00,4.0000e-01,5.5622e+00,-3.7742e+00,4.0000e-01,5.5838e+00,-3.7636e+00,4.0000e-01,5.6070e+00,-3.7576e+00,4.0000e-01,5.6310e+00,-3.7564e+00,4.0000e-01,5.6548e+00,-3.7600e+00,4.0000e-01,5.6773e+00,-3.7684e+00,4.0000e-01,5.6977e+00,-3.7811e+00,4.0000e-01,5.7151e+00,-3.7976e+00,4.0000e-01,5.7288e+00,-3.8174e+00,4.0000e-01,5.7383e+00,-3.8395e+00,4.0000e-01,5.7431e+00,-3.8630e+00,4.0000e-01,5.7431e+00,-3.8870e+00,4.0000e-01,5.7383e+00,-3.9105e+00,4.0000e-01,5.7288e+00,-3.9326e+00,4.0000e-01,5.7151e+00,-3.9524e+00,4.0000e-01,5.6977e+00,-3.9689e+00,4.0000e-01,5.6773e+00,-3.9816e+00,4.0000e-01,5.6548e+00,-3.9900e+00,4.0000e-01,5.6310e+00,-3.9936e+00,4.0000e-01,5.6070e+00,-3.9924e+00,4.0000e-01};
			return value;
		}
		private double[] getCoordinate_7_69_point_2()
		{
			double[] value = {5.5838e+00,-3.9864e+00,4.0000e-01,5.5622e+00,-3.9758e+00,4.0000e-01,5.5432e+00,-3.9611e+00,4.0000e-01,5.5275e+00,-3.9428e+00,4.0000e-01,5.5159e+00,-3.9218e+00,4.0000e-01,5.5087e+00,-3.8989e+00,4.0000e-01,5.5062e+00,-3.8750e+00,4.0000e-01,-5.7413e+00,-3.8511e+00,4.0000e-01,-5.7341e+00,-3.8282e+00,4.0000e-01,-5.7225e+00,-3.8072e+00,4.0000e-01,-5.7068e+00,-3.7889e+00,4.0000e-01,-5.6878e+00,-3.7742e+00,4.0000e-01,-5.6662e+00,-3.7636e+00,4.0000e-01,-5.6430e+00,-3.7576e+00,4.0000e-01,-5.6190e+00,-3.7564e+00,4.0000e-01,-5.5952e+00,-3.7600e+00,4.0000e-01,-5.5727e+00,-3.7684e+00,4.0000e-01,-5.5523e+00,-3.7811e+00,4.0000e-01,-5.5349e+00,-3.7976e+00,4.0000e-01,-5.5212e+00,-3.8174e+00,4.0000e-01,-5.5117e+00,-3.8395e+00,4.0000e-01,-5.5069e+00,-3.8630e+00,4.0000e-01,-5.5069e+00,-3.8870e+00,4.0000e-01,-5.5117e+00,-3.9105e+00,4.0000e-01,-5.5212e+00,-3.9326e+00,4.0000e-01,-5.5349e+00,-3.9524e+00,4.0000e-01,-5.5523e+00,-3.9689e+00,4.0000e-01,-5.5727e+00,-3.9816e+00,4.0000e-01,-5.5952e+00,-3.9900e+00,4.0000e-01,-5.6190e+00,-3.9936e+00,4.0000e-01,-5.6430e+00,-3.9924e+00,4.0000e-01,-5.6662e+00,-3.9864e+00,4.0000e-01,-5.6878e+00,-3.9758e+00,4.0000e-01,-5.7068e+00,-3.9611e+00,4.0000e-01,-5.7225e+00,-3.9428e+00,4.0000e-01,-5.7341e+00,-3.9218e+00,4.0000e-01,-5.7413e+00,-3.8989e+00,4.0000e-01,-5.7438e+00,-3.8750e+00,4.0000e-01,5.5087e+00,3.8989e+00,4.0000e-01,5.5159e+00,3.9218e+00,4.0000e-01,5.5275e+00,3.9428e+00,4.0000e-01,5.5432e+00,3.9611e+00,4.0000e-01,5.5622e+00,3.9758e+00,4.0000e-01,5.5838e+00,3.9864e+00,4.0000e-01,5.6070e+00,3.9924e+00,4.0000e-01,5.6310e+00,3.9936e+00,4.0000e-01,5.6548e+00,3.9900e+00,4.0000e-01,5.6773e+00,3.9816e+00,4.0000e-01,5.6977e+00,3.9689e+00,4.0000e-01,5.7151e+00,3.9524e+00,4.0000e-01,5.7288e+00,3.9326e+00,4.0000e-01,5.7383e+00,3.9105e+00,4.0000e-01,5.7431e+00,3.8870e+00,4.0000e-01,5.7431e+00,3.8630e+00,4.0000e-01,5.7383e+00,3.8395e+00,4.0000e-01,5.7288e+00,3.8174e+00,4.0000e-01,5.7151e+00,3.7976e+00,4.0000e-01,5.6977e+00,3.7811e+00,4.0000e-01,5.6773e+00,3.7684e+00,4.0000e-01,5.6548e+00,3.7600e+00,4.0000e-01,5.6310e+00,3.7564e+00,4.0000e-01,5.6070e+00,3.7576e+00,4.0000e-01,5.5838e+00,3.7636e+00,4.0000e-01,5.5622e+00,3.7742e+00,4.0000e-01,5.5432e+00,3.7889e+00,4.0000e-01,5.5275e+00,3.8072e+00,4.0000e-01,5.5159e+00,3.8282e+00,4.0000e-01,5.5087e+00,3.8511e+00,4.0000e-01,5.5062e+00,3.8750e+00,4.0000e-01,-5.7413e+00,3.8989e+00,4.0000e-01,-5.7341e+00,3.9218e+00,4.0000e-01,-5.7225e+00,3.9428e+00,4.0000e-01,-5.7068e+00,3.9611e+00,4.0000e-01,-5.6878e+00,3.9758e+00,4.0000e-01,-5.6662e+00,3.9864e+00,4.0000e-01,-5.6430e+00,3.9924e+00,4.0000e-01,-5.6190e+00,3.9936e+00,4.0000e-01,-5.5952e+00,3.9900e+00,4.0000e-01,-5.5727e+00,3.9816e+00,4.0000e-01,-5.5523e+00,3.9689e+00,4.0000e-01,-5.5349e+00,3.9524e+00,4.0000e-01,-5.5212e+00,3.9326e+00,4.0000e-01,-5.5117e+00,3.9105e+00,4.0000e-01,-5.5069e+00,3.8870e+00,4.0000e-01,-5.5069e+00,3.8630e+00,4.0000e-01,-5.5117e+00,3.8395e+00,4.0000e-01,-5.5212e+00,3.8174e+00,4.0000e-01,-5.5349e+00,3.7976e+00,4.0000e-01,-5.5523e+00,3.7811e+00,4.0000e-01,-5.5727e+00,3.7684e+00,4.0000e-01,-5.5952e+00,3.7600e+00,4.0000e-01,-5.6190e+00,3.7564e+00,4.0000e-01,-5.6430e+00,3.7576e+00,4.0000e-01,-5.6662e+00,3.7636e+00,4.0000e-01,-5.6878e+00,3.7742e+00,4.0000e-01,-5.7068e+00,3.7889e+00,4.0000e-01,-5.7225e+00,3.8072e+00,4.0000e-01,-5.7341e+00,3.8282e+00,4.0000e-01,-5.7413e+00,3.8511e+00,4.0000e-01,-5.7438e+00,3.8750e+00,4.0000e-01};
			return value;
		}















































































		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_856_index_1()
		{
			int[] value = {9,1,0,10,1,9,10,2,1,11,2,10,11,3,2,12,3,11,12,4,3,13,4,12,13,5,4,14,5,13,14,6,5,15,6,14,15,7,6,16,7,15,16,8,7,17,8,16,18,10,9,19,10,18,19,11,10,20,11,19,20,12,11,21,12,20,21,13,12,22,13,21,22,14,13,23,14,22,23,15,14,24,15,23,24,16,15,25,16,24,25,17,16,26,17,25,27,19,18,28,19,27,28,20,19,29,20,28,29,21,20,30,21,29,30,22,21,31,22,30,31,23,22,32,23,31,32,24,23,33,24,32,33,25,24,34,25,33,34,26,25,35,26,34,36,28,27,37,28,36,37,29,28,38,29,37,38,30,29,39,30,38,39,31,30,40,31,39,40,32,31,41,32,40,41,33,32,42,33,41,42,34,33,43,34,42,43,35,34,44,35,43,45,37,36,46,37,45,46,38,37,47,38,46,47,39,38,48,39,47,48,40,39,49,40,48,49,41,40,50,41,49,50,42,41,51,42,50,51,43,42,52,43,51,52,44,43,53,44,52,54,46,45,55,46,54,55,47,46,56,47,55,56,48,47,57,48,56,57,49,48,58,49,57,58,50,49,59,50,58,59,51,50,60,51,59,60,52,51,61,52,60,61,53,52,62,53,61,63,55,54,64,55,63,64,56,55,65,56,64,65,57,56,66,57,65,66,58,57,67,58,66,67,59,58,68,59,67,68,60,59,69,60,68,69,61,60,70,61,69,70,62,61,71,62,70,72,64,63,73,64,72,73,65,64,74,65,73,74,66,65,75,66,74,75,67,66,76,67,75,76,68,67,77,68,76,77,69,68,78,69,77,78,70,69,79,70,78,79,71,70,80,71,79};
			return value;
		}




		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_863_index_1()
		{
			int[] value = {9,1,0,10,1,9,10,2,1,11,2,10,11,3,2,12,3,11,12,4,3,13,4,12,13,5,4,14,5,13,14,6,5,15,6,14,15,7,6,16,7,15,16,8,7,17,8,16,18,10,9,19,10,18,19,11,10,20,11,19,20,12,11,21,12,20,21,13,12,22,13,21,22,14,13,23,14,22,23,15,14,24,15,23,24,16,15,25,16,24,25,17,16,26,17,25,27,19,18,28,19,27,28,20,19,29,20,28,29,21,20,30,21,29,30,22,21,31,22,30,31,23,22,32,23,31,32,24,23,33,24,32,33,25,24,34,25,33,34,26,25,35,26,34,36,28,27,37,28,36,37,29,28,38,29,37,38,30,29,39,30,38,39,31,30,40,31,39,40,32,31,41,32,40,41,33,32,42,33,41,42,34,33,43,34,42,43,35,34,44,35,43,45,37,36,46,37,45,46,38,37,47,38,46,47,39,38,48,39,47,48,40,39,49,40,48,49,41,40,50,41,49,50,42,41,51,42,50,51,43,42,52,43,51,52,44,43,53,44,52,54,46,45,55,46,54,55,47,46,56,47,55,56,48,47,57,48,56,57,49,48,58,49,57,58,50,49,59,50,58,59,51,50,60,51,59,60,52,51,61,52,60,61,53,52,62,53,61,63,55,54,64,55,63,64,56,55,65,56,64,65,57,56,66,57,65,66,58,57,67,58,66,67,59,58,68,59,67,68,60,59,69,60,68,69,61,60,70,61,69,70,62,61,71,62,70,72,64,63,73,64,72,73,65,64,74,65,73,74,66,65,75,66,74,75,67,66,76,67,75,76,68,67,77,68,76,77,69,68,78,69,77,78,70,69,79,70,78,79,71,70,80,71,79};
			return value;
		}




		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_884_index_1()
		{
			int[] value = {9,1,0,10,1,9,10,2,1,11,2,10,11,3,2,12,3,11,12,4,3,13,4,12,13,5,4,14,5,13,14,6,5,15,6,14,15,7,6,16,7,15,16,8,7,17,8,16,18,10,9,19,10,18,19,11,10,20,11,19,20,12,11,21,12,20,21,13,12,22,13,21,22,14,13,23,14,22,23,15,14,24,15,23,24,16,15,25,16,24,25,17,16,26,17,25,27,19,18,28,19,27,28,20,19,29,20,28,29,21,20,30,21,29,30,22,21,31,22,30,31,23,22,32,23,31,32,24,23,33,24,32,33,25,24,34,25,33,34,26,25,35,26,34,36,28,27,37,28,36,37,29,28,38,29,37,38,30,29,39,30,38,39,31,30,40,31,39,40,32,31,41,32,40,41,33,32,42,33,41,42,34,33,43,34,42,43,35,34,44,35,43,45,37,36,46,37,45,46,38,37,47,38,46,47,39,38,48,39,47,48,40,39,49,40,48,49,41,40,50,41,49,50,42,41,51,42,50,51,43,42,52,43,51,52,44,43,53,44,52,54,46,45,55,46,54,55,47,46,56,47,55,56,48,47,57,48,56,57,49,48,58,49,57,58,50,49,59,50,58,59,51,50,60,51,59,60,52,51,61,52,60,61,53,52,62,53,61,63,55,54,64,55,63,64,56,55,65,56,64,65,57,56,66,57,65,66,58,57,67,58,66,67,59,58,68,59,67,68,60,59,69,60,68,69,61,60,70,61,69,70,62,61,71,62,70,72,64,63,73,64,72,73,65,64,74,65,73,74,66,65,75,66,74,75,67,66,76,67,75,76,68,67,77,68,76,77,69,68,78,69,77,78,70,69,79,70,78,79,71,70,80,71,79};
			return value;
		}




		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_891_index_1()
		{
			int[] value = {10,1,0,11,1,10,11,2,1,12,2,11,12,3,2,13,3,12,13,4,3,14,4,13,14,5,4,15,5,14,15,6,5,16,6,15,16,7,6,17,7,16,17,8,7,18,8,17,18,9,8,19,9,18,20,11,10,21,11,20,21,12,11,22,12,21,22,13,12,23,13,22,23,14,13,24,14,23,24,15,14,25,15,24,25,16,15,26,16,25,26,17,16,27,17,26,27,18,17,28,18,27,28,19,18,29,19,28,30,21,20,31,21,30,31,22,21,32,22,31,32,23,22,33,23,32,33,24,23,34,24,33,34,25,24,35,25,34,35,26,25,36,26,35,36,27,26,37,27,36,37,28,27,38,28,37,38,29,28,39,29,38,40,31,30,41,31,40,41,32,31,42,32,41,42,33,32,43,33,42,43,34,33,44,34,43,44,35,34,45,35,44,45,36,35,46,36,45,46,37,36,47,37,46,47,38,37,48,38,47,48,39,38,49,39,48,50,41,40,51,41,50,51,42,41,52,42,51,52,43,42,53,43,52,53,44,43,54,44,53,54,45,44,55,45,54,55,46,45,56,46,55,56,47,46,57,47,56,57,48,47,58,48,57,58,49,48,59,49,58,60,51,50,61,51,60,61,52,51,62,52,61,62,53,52,63,53,62,63,54,53,64,54,63,64,55,54,65,55,64,65,56,55,66,56,65,66,57,56,67,57,66,67,58,57,68,58,67,68,59,58,69,59,68,70,61,60,71,61,70,71,62,61,72,62,71,72,63,62,73,63,72,73,64,63,74,64,73,74,65,64,75,65,74,75,66,65,76,66,75,76,67,66,77,67,76,77,68,67,78,68,77,78,69,68,79,69,78,80,71,70,81,71,80,81,72,71,82,72,81,82,73,72,83,73,82,83,74,73,84,74,83,84,75,74,85,75,84,85,76,75,86,76,85,86,77,76,87,77,86,87,78,77,88,78,87,88,79,78,89,79,88};
			return value;
		}




		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_968_index_1()
		{
			int[] value = {72,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,72,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,72,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,72,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39,72,32,40,32,33,40,40,33,41,33,34,41,41,34,42,34,35,42,42,35,43,35,36,43,43,36,44,36,37,44,44,37,45,37,38,45,45,38,46,38,39,46,46,39,47,72,40,48,40,41,48,48,41,49,41,42,49,49,42,50,42,43,50,50,43,51,43,44,51,51,44,52,44,45,52,52,45,53,45,46,53,53,46,54,46,47,54,54,47,55,72,48,56,48,49,56,56,49,57,49,50,57,57,50,58,50,51,58,58,51,59,51,52,59,59,52,60,52,53,60,60,53,61,53,54,61,61,54,62,54,55,62,62,55,63,72,56,64,56,57,64,64,57,65,57,58,65,65,58,66,58,59,66,66,59,67,59,60,67,67,60,68,60,61,68,68,61,69,61,62,69,69,62,70,62,63,70,70,63,71};
			return value;
		}




		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_975_index_1()
		{
			int[] value = {72,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,72,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,72,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,72,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39,72,32,40,32,33,40,40,33,41,33,34,41,41,34,42,34,35,42,42,35,43,35,36,43,43,36,44,36,37,44,44,37,45,37,38,45,45,38,46,38,39,46,46,39,47,72,40,48,40,41,48,48,41,49,41,42,49,49,42,50,42,43,50,50,43,51,43,44,51,51,44,52,44,45,52,52,45,53,45,46,53,53,46,54,46,47,54,54,47,55,72,48,56,48,49,56,56,49,57,49,50,57,57,50,58,50,51,58,58,51,59,51,52,59,59,52,60,52,53,60,60,53,61,53,54,61,61,54,62,54,55,62,62,55,63,72,56,64,56,57,64,64,57,65,57,58,65,65,58,66,58,59,66,66,59,67,59,60,67,67,60,68,60,61,68,68,61,69,61,62,69,69,62,70,62,63,70,70,63,71};
			return value;
		}




		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_1010_index_1()
		{
			int[] value = {72,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,72,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,72,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,72,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39,72,32,40,32,33,40,40,33,41,33,34,41,41,34,42,34,35,42,42,35,43,35,36,43,43,36,44,36,37,44,44,37,45,37,38,45,45,38,46,38,39,46,46,39,47,72,40,48,40,41,48,48,41,49,41,42,49,49,42,50,42,43,50,50,43,51,43,44,51,51,44,52,44,45,52,52,45,53,45,46,53,53,46,54,46,47,54,54,47,55,72,48,56,48,49,56,56,49,57,49,50,57,57,50,58,50,51,58,58,51,59,51,52,59,59,52,60,52,53,60,60,53,61,53,54,61,61,54,62,54,55,62,62,55,63,72,56,64,56,57,64,64,57,65,57,58,65,65,58,66,58,59,66,66,59,67,59,60,67,67,60,68,60,61,68,68,61,69,61,62,69,69,62,70,62,63,70,70,63,71};
			return value;
		}




		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_1017_index_1()
		{
			int[] value = {72,0,8,0,1,8,8,1,9,1,2,9,9,2,10,2,3,10,10,3,11,3,4,11,11,4,12,4,5,12,12,5,13,5,6,13,13,6,14,6,7,14,14,7,15,72,8,16,8,9,16,16,9,17,9,10,17,17,10,18,10,11,18,18,11,19,11,12,19,19,12,20,12,13,20,20,13,21,13,14,21,21,14,22,14,15,22,22,15,23,72,16,24,16,17,24,24,17,25,17,18,25,25,18,26,18,19,26,26,19,27,19,20,27,27,20,28,20,21,28,28,21,29,21,22,29,29,22,30,22,23,30,30,23,31,72,24,32,24,25,32,32,25,33,25,26,33,33,26,34,26,27,34,34,27,35,27,28,35,35,28,36,28,29,36,36,29,37,29,30,37,37,30,38,30,31,38,38,31,39,72,32,40,32,33,40,40,33,41,33,34,41,41,34,42,34,35,42,42,35,43,35,36,43,43,36,44,36,37,44,44,37,45,37,38,45,45,38,46,38,39,46,46,39,47,72,40,48,40,41,48,48,41,49,41,42,49,49,42,50,42,43,50,50,43,51,43,44,51,51,44,52,44,45,52,52,45,53,45,46,53,53,46,54,46,47,54,54,47,55,72,48,56,48,49,56,56,49,57,49,50,57,57,50,58,50,51,58,58,51,59,51,52,59,59,52,60,52,53,60,60,53,61,53,54,61,61,54,62,54,55,62,62,55,63,72,56,64,56,57,64,64,57,65,57,58,65,65,58,66,58,59,66,66,59,67,59,60,67,67,60,68,60,61,68,68,61,69,61,62,69,69,62,70,62,63,70,70,63,71};
			return value;
		}






































































		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #43, 456 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_43_index()
		{
			MFInt32 IndexedTriangleSet_6_43_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_43_index_1()));
			return IndexedTriangleSet_6_43_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #43, 459 total numbers made up of 153 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_43_point()
		{
			MFVec3f Coordinate_7_43_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_43_point_1()))
				.append(new MFVec3f(getCoordinate_7_43_point_2()));
			return Coordinate_7_43_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #51, 3465 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_51_index()
		{
			MFInt32 IndexedTriangleSet_6_51_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_51_index_1()))
				.append(new MFInt32(getIndexedTriangleSet_6_51_index_2()))
				.append(new MFInt32(getIndexedTriangleSet_6_51_index_3()))
				.append(new MFInt32(getIndexedTriangleSet_6_51_index_4()));
			return IndexedTriangleSet_6_51_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #51, 3462 total numbers made up of 1154 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_51_point()
		{
			MFVec3f Coordinate_7_51_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_51_point_1()))
				.append(new MFVec3f(getCoordinate_7_51_point_2()))
				.append(new MFVec3f(getCoordinate_7_51_point_3()))
				.append(new MFVec3f(getCoordinate_7_51_point_4()))
				.append(new MFVec3f(getCoordinate_7_51_point_5()))
				.append(new MFVec3f(getCoordinate_7_51_point_6()))
				.append(new MFVec3f(getCoordinate_7_51_point_7()))
				.append(new MFVec3f(getCoordinate_7_51_point_8()))
				.append(new MFVec3f(getCoordinate_7_51_point_9()))
				.append(new MFVec3f(getCoordinate_7_51_point_10()))
				.append(new MFVec3f(getCoordinate_7_51_point_11()))
				.append(new MFVec3f(getCoordinate_7_51_point_12()));
			return Coordinate_7_51_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #57, 3339 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_57_index()
		{
			MFInt32 IndexedTriangleSet_6_57_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_57_index_1()))
				.append(new MFInt32(getIndexedTriangleSet_6_57_index_2()))
				.append(new MFInt32(getIndexedTriangleSet_6_57_index_3()))
				.append(new MFInt32(getIndexedTriangleSet_6_57_index_4()));
			return IndexedTriangleSet_6_57_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #57, 3327 total numbers made up of 1109 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_57_point()
		{
			MFVec3f Coordinate_7_57_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_57_point_1()))
				.append(new MFVec3f(getCoordinate_7_57_point_2()))
				.append(new MFVec3f(getCoordinate_7_57_point_3()))
				.append(new MFVec3f(getCoordinate_7_57_point_4()))
				.append(new MFVec3f(getCoordinate_7_57_point_5()))
				.append(new MFVec3f(getCoordinate_7_57_point_6()))
				.append(new MFVec3f(getCoordinate_7_57_point_7()))
				.append(new MFVec3f(getCoordinate_7_57_point_8()))
				.append(new MFVec3f(getCoordinate_7_57_point_9()))
				.append(new MFVec3f(getCoordinate_7_57_point_10()))
				.append(new MFVec3f(getCoordinate_7_57_point_11()))
				.append(new MFVec3f(getCoordinate_7_57_point_12()));
			return Coordinate_7_57_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #63, 720 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_63_index()
		{
			MFInt32 IndexedTriangleSet_6_63_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_63_index_1()));
			return IndexedTriangleSet_6_63_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #63, 699 total numbers made up of 233 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_63_point()
		{
			MFVec3f Coordinate_7_63_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_63_point_1()))
				.append(new MFVec3f(getCoordinate_7_63_point_2()))
				.append(new MFVec3f(getCoordinate_7_63_point_3()));
			return Coordinate_7_63_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #69, 624 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_69_index()
		{
			MFInt32 IndexedTriangleSet_6_69_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_69_index_1()));
			return IndexedTriangleSet_6_69_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #69, 600 total numbers made up of 200 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_69_point()
		{
			MFVec3f Coordinate_7_69_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_69_point_1()))
				.append(new MFVec3f(getCoordinate_7_69_point_2()));
			return Coordinate_7_69_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #141, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_141_point()
		{
			MFVec3f Coordinate_7_141_point = new MFVec3f(new double[] {-5.6250e+00,3.7563e+00,0.0000e+00,-5.6250e+00,3.7563e+00,4.0000e-01,-5.6405e+00,3.7573e+00,0.0000e+00,-5.6405e+00,3.7573e+00,4.0000e-01,-5.6557e+00,3.7603e+00,0.0000e+00,-5.6557e+00,3.7603e+00,4.0000e-01,-5.6704e+00,3.7653e+00,0.0000e+00,-5.6704e+00,3.7653e+00,4.0000e-01,-5.6844e+00,3.7722e+00,0.0000e+00,-5.6844e+00,3.7722e+00,4.0000e-01,-5.6973e+00,3.7808e+00,0.0000e+00,-5.6973e+00,3.7808e+00,4.0000e-01,-5.7090e+00,3.7910e+00,0.0000e+00,-5.7090e+00,3.7910e+00,4.0000e-01,-5.7192e+00,3.8027e+00,0.0000e+00,-5.7192e+00,3.8027e+00,4.0000e-01,-5.7278e+00,3.8156e+00,0.0000e+00,-5.7278e+00,3.8156e+00,4.0000e-01,-5.7347e+00,3.8296e+00,0.0000e+00,-5.7347e+00,3.8296e+00,4.0000e-01,-5.7397e+00,3.8443e+00,0.0000e+00,-5.7397e+00,3.8443e+00,4.0000e-01,-5.7427e+00,3.8595e+00,0.0000e+00,-5.7427e+00,3.8595e+00,4.0000e-01,-5.7438e+00,3.8750e+00,0.0000e+00,-5.7438e+00,3.8750e+00,4.0000e-01,-5.7427e+00,3.8905e+00,0.0000e+00,-5.7427e+00,3.8905e+00,4.0000e-01,-5.7397e+00,3.9057e+00,0.0000e+00,-5.7397e+00,3.9057e+00,4.0000e-01,-5.7347e+00,3.9204e+00,0.0000e+00,-5.7347e+00,3.9204e+00,4.0000e-01,-5.7278e+00,3.9344e+00,0.0000e+00,-5.7278e+00,3.9344e+00,4.0000e-01,-5.7192e+00,3.9473e+00,0.0000e+00,-5.7192e+00,3.9473e+00,4.0000e-01,-5.7090e+00,3.9590e+00,0.0000e+00,-5.7090e+00,3.9590e+00,4.0000e-01,-5.6973e+00,3.9692e+00,0.0000e+00,-5.6973e+00,3.9692e+00,4.0000e-01,-5.6844e+00,3.9778e+00,0.0000e+00,-5.6844e+00,3.9778e+00,4.0000e-01,-5.6704e+00,3.9847e+00,0.0000e+00,-5.6704e+00,3.9847e+00,4.0000e-01,-5.6557e+00,3.9897e+00,0.0000e+00,-5.6557e+00,3.9897e+00,4.0000e-01,-5.6405e+00,3.9927e+00,0.0000e+00,-5.6405e+00,3.9927e+00,4.0000e-01,-5.6250e+00,3.9937e+00,0.0000e+00,-5.6250e+00,3.9937e+00,4.0000e-01,-5.6095e+00,3.9927e+00,0.0000e+00,-5.6095e+00,3.9927e+00,4.0000e-01,-5.5943e+00,3.9897e+00,0.0000e+00,-5.5943e+00,3.9897e+00,4.0000e-01,-5.5796e+00,3.9847e+00,0.0000e+00,-5.5796e+00,3.9847e+00,4.0000e-01,-5.5656e+00,3.9778e+00,0.0000e+00,-5.5656e+00,3.9778e+00,4.0000e-01,-5.5527e+00,3.9692e+00,0.0000e+00,-5.5527e+00,3.9692e+00,4.0000e-01,-5.5410e+00,3.9590e+00,0.0000e+00,-5.5410e+00,3.9590e+00,4.0000e-01,-5.5308e+00,3.9473e+00,0.0000e+00,-5.5308e+00,3.9473e+00,4.0000e-01,-5.5222e+00,3.9344e+00,0.0000e+00,-5.5222e+00,3.9344e+00,4.0000e-01,-5.5153e+00,3.9204e+00,0.0000e+00,-5.5153e+00,3.9204e+00,4.0000e-01,-5.5103e+00,3.9057e+00,0.0000e+00,-5.5103e+00,3.9057e+00,4.0000e-01,-5.5073e+00,3.8905e+00,0.0000e+00,-5.5073e+00,3.8905e+00,4.0000e-01,-5.5062e+00,3.8750e+00,0.0000e+00,-5.5062e+00,3.8750e+00,4.0000e-01,-5.5073e+00,3.8595e+00,0.0000e+00,-5.5073e+00,3.8595e+00,4.0000e-01,-5.5103e+00,3.8443e+00,0.0000e+00,-5.5103e+00,3.8443e+00,4.0000e-01,-5.5153e+00,3.8296e+00,0.0000e+00,-5.5153e+00,3.8296e+00,4.0000e-01,-5.5222e+00,3.8156e+00,0.0000e+00,-5.5222e+00,3.8156e+00,4.0000e-01,-5.5308e+00,3.8027e+00,0.0000e+00,-5.5308e+00,3.8027e+00,4.0000e-01,-5.5410e+00,3.7910e+00,0.0000e+00,-5.5410e+00,3.7910e+00,4.0000e-01,-5.5527e+00,3.7808e+00,0.0000e+00,-5.5527e+00,3.7808e+00,4.0000e-01,-5.5656e+00,3.7722e+00,0.0000e+00,-5.5656e+00,3.7722e+00,4.0000e-01,-5.5796e+00,3.7653e+00,0.0000e+00,-5.5796e+00,3.7653e+00,4.0000e-01,-5.5943e+00,3.7603e+00,0.0000e+00,-5.5943e+00,3.7603e+00,4.0000e-01,-5.6095e+00,3.7573e+00,0.0000e+00,-5.6095e+00,3.7573e+00,4.0000e-01});
			return Coordinate_7_141_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #142, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_142_vector()
		{
			MFVec3f Normal_7_142_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_142_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #148, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_148_point()
		{
			MFVec3f Coordinate_7_148_point = new MFVec3f(new double[] {5.6250e+00,3.7563e+00,0.0000e+00,5.6250e+00,3.7563e+00,4.0000e-01,5.6095e+00,3.7573e+00,0.0000e+00,5.6095e+00,3.7573e+00,4.0000e-01,5.5943e+00,3.7603e+00,0.0000e+00,5.5943e+00,3.7603e+00,4.0000e-01,5.5796e+00,3.7653e+00,0.0000e+00,5.5796e+00,3.7653e+00,4.0000e-01,5.5656e+00,3.7722e+00,0.0000e+00,5.5656e+00,3.7722e+00,4.0000e-01,5.5527e+00,3.7808e+00,0.0000e+00,5.5527e+00,3.7808e+00,4.0000e-01,5.5410e+00,3.7910e+00,0.0000e+00,5.5410e+00,3.7910e+00,4.0000e-01,5.5308e+00,3.8027e+00,0.0000e+00,5.5308e+00,3.8027e+00,4.0000e-01,5.5222e+00,3.8156e+00,0.0000e+00,5.5222e+00,3.8156e+00,4.0000e-01,5.5153e+00,3.8296e+00,0.0000e+00,5.5153e+00,3.8296e+00,4.0000e-01,5.5103e+00,3.8443e+00,0.0000e+00,5.5103e+00,3.8443e+00,4.0000e-01,5.5073e+00,3.8595e+00,0.0000e+00,5.5073e+00,3.8595e+00,4.0000e-01,5.5062e+00,3.8750e+00,0.0000e+00,5.5062e+00,3.8750e+00,4.0000e-01,5.5073e+00,3.8905e+00,0.0000e+00,5.5073e+00,3.8905e+00,4.0000e-01,5.5103e+00,3.9057e+00,0.0000e+00,5.5103e+00,3.9057e+00,4.0000e-01,5.5153e+00,3.9204e+00,0.0000e+00,5.5153e+00,3.9204e+00,4.0000e-01,5.5222e+00,3.9344e+00,0.0000e+00,5.5222e+00,3.9344e+00,4.0000e-01,5.5308e+00,3.9473e+00,0.0000e+00,5.5308e+00,3.9473e+00,4.0000e-01,5.5410e+00,3.9590e+00,0.0000e+00,5.5410e+00,3.9590e+00,4.0000e-01,5.5527e+00,3.9692e+00,0.0000e+00,5.5527e+00,3.9692e+00,4.0000e-01,5.5656e+00,3.9778e+00,0.0000e+00,5.5656e+00,3.9778e+00,4.0000e-01,5.5796e+00,3.9847e+00,0.0000e+00,5.5796e+00,3.9847e+00,4.0000e-01,5.5943e+00,3.9897e+00,0.0000e+00,5.5943e+00,3.9897e+00,4.0000e-01,5.6095e+00,3.9927e+00,0.0000e+00,5.6095e+00,3.9927e+00,4.0000e-01,5.6250e+00,3.9937e+00,0.0000e+00,5.6250e+00,3.9937e+00,4.0000e-01,5.6405e+00,3.9927e+00,0.0000e+00,5.6405e+00,3.9927e+00,4.0000e-01,5.6557e+00,3.9897e+00,0.0000e+00,5.6557e+00,3.9897e+00,4.0000e-01,5.6704e+00,3.9847e+00,0.0000e+00,5.6704e+00,3.9847e+00,4.0000e-01,5.6844e+00,3.9778e+00,0.0000e+00,5.6844e+00,3.9778e+00,4.0000e-01,5.6973e+00,3.9692e+00,0.0000e+00,5.6973e+00,3.9692e+00,4.0000e-01,5.7090e+00,3.9590e+00,0.0000e+00,5.7090e+00,3.9590e+00,4.0000e-01,5.7192e+00,3.9473e+00,0.0000e+00,5.7192e+00,3.9473e+00,4.0000e-01,5.7278e+00,3.9344e+00,0.0000e+00,5.7278e+00,3.9344e+00,4.0000e-01,5.7347e+00,3.9204e+00,0.0000e+00,5.7347e+00,3.9204e+00,4.0000e-01,5.7397e+00,3.9057e+00,0.0000e+00,5.7397e+00,3.9057e+00,4.0000e-01,5.7427e+00,3.8905e+00,0.0000e+00,5.7427e+00,3.8905e+00,4.0000e-01,5.7438e+00,3.8750e+00,0.0000e+00,5.7438e+00,3.8750e+00,4.0000e-01,5.7427e+00,3.8595e+00,0.0000e+00,5.7427e+00,3.8595e+00,4.0000e-01,5.7397e+00,3.8443e+00,0.0000e+00,5.7397e+00,3.8443e+00,4.0000e-01,5.7347e+00,3.8296e+00,0.0000e+00,5.7347e+00,3.8296e+00,4.0000e-01,5.7278e+00,3.8156e+00,0.0000e+00,5.7278e+00,3.8156e+00,4.0000e-01,5.7192e+00,3.8027e+00,0.0000e+00,5.7192e+00,3.8027e+00,4.0000e-01,5.7090e+00,3.7910e+00,0.0000e+00,5.7090e+00,3.7910e+00,4.0000e-01,5.6973e+00,3.7808e+00,0.0000e+00,5.6973e+00,3.7808e+00,4.0000e-01,5.6844e+00,3.7722e+00,0.0000e+00,5.6844e+00,3.7722e+00,4.0000e-01,5.6704e+00,3.7653e+00,0.0000e+00,5.6704e+00,3.7653e+00,4.0000e-01,5.6557e+00,3.7603e+00,0.0000e+00,5.6557e+00,3.7603e+00,4.0000e-01,5.6405e+00,3.7573e+00,0.0000e+00,5.6405e+00,3.7573e+00,4.0000e-01});
			return Coordinate_7_148_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #149, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_149_vector()
		{
			MFVec3f Normal_7_149_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_149_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #155, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_155_point()
		{
			MFVec3f Coordinate_7_155_point = new MFVec3f(new double[] {-5.6250e+00,-3.9937e+00,0.0000e+00,-5.6250e+00,-3.9937e+00,4.0000e-01,-5.6405e+00,-3.9927e+00,0.0000e+00,-5.6405e+00,-3.9927e+00,4.0000e-01,-5.6557e+00,-3.9897e+00,0.0000e+00,-5.6557e+00,-3.9897e+00,4.0000e-01,-5.6704e+00,-3.9847e+00,0.0000e+00,-5.6704e+00,-3.9847e+00,4.0000e-01,-5.6844e+00,-3.9778e+00,0.0000e+00,-5.6844e+00,-3.9778e+00,4.0000e-01,-5.6973e+00,-3.9692e+00,0.0000e+00,-5.6973e+00,-3.9692e+00,4.0000e-01,-5.7090e+00,-3.9590e+00,0.0000e+00,-5.7090e+00,-3.9590e+00,4.0000e-01,-5.7192e+00,-3.9473e+00,0.0000e+00,-5.7192e+00,-3.9473e+00,4.0000e-01,-5.7278e+00,-3.9344e+00,0.0000e+00,-5.7278e+00,-3.9344e+00,4.0000e-01,-5.7347e+00,-3.9204e+00,0.0000e+00,-5.7347e+00,-3.9204e+00,4.0000e-01,-5.7397e+00,-3.9057e+00,0.0000e+00,-5.7397e+00,-3.9057e+00,4.0000e-01,-5.7427e+00,-3.8905e+00,0.0000e+00,-5.7427e+00,-3.8905e+00,4.0000e-01,-5.7438e+00,-3.8750e+00,0.0000e+00,-5.7438e+00,-3.8750e+00,4.0000e-01,-5.7427e+00,-3.8595e+00,0.0000e+00,-5.7427e+00,-3.8595e+00,4.0000e-01,-5.7397e+00,-3.8443e+00,0.0000e+00,-5.7397e+00,-3.8443e+00,4.0000e-01,-5.7347e+00,-3.8296e+00,0.0000e+00,-5.7347e+00,-3.8296e+00,4.0000e-01,-5.7278e+00,-3.8156e+00,0.0000e+00,-5.7278e+00,-3.8156e+00,4.0000e-01,-5.7192e+00,-3.8027e+00,0.0000e+00,-5.7192e+00,-3.8027e+00,4.0000e-01,-5.7090e+00,-3.7910e+00,0.0000e+00,-5.7090e+00,-3.7910e+00,4.0000e-01,-5.6973e+00,-3.7808e+00,0.0000e+00,-5.6973e+00,-3.7808e+00,4.0000e-01,-5.6844e+00,-3.7722e+00,0.0000e+00,-5.6844e+00,-3.7722e+00,4.0000e-01,-5.6704e+00,-3.7653e+00,0.0000e+00,-5.6704e+00,-3.7653e+00,4.0000e-01,-5.6557e+00,-3.7603e+00,0.0000e+00,-5.6557e+00,-3.7603e+00,4.0000e-01,-5.6405e+00,-3.7573e+00,0.0000e+00,-5.6405e+00,-3.7573e+00,4.0000e-01,-5.6250e+00,-3.7563e+00,0.0000e+00,-5.6250e+00,-3.7563e+00,4.0000e-01,-5.6095e+00,-3.7573e+00,0.0000e+00,-5.6095e+00,-3.7573e+00,4.0000e-01,-5.5943e+00,-3.7603e+00,0.0000e+00,-5.5943e+00,-3.7603e+00,4.0000e-01,-5.5796e+00,-3.7653e+00,0.0000e+00,-5.5796e+00,-3.7653e+00,4.0000e-01,-5.5656e+00,-3.7722e+00,0.0000e+00,-5.5656e+00,-3.7722e+00,4.0000e-01,-5.5527e+00,-3.7808e+00,0.0000e+00,-5.5527e+00,-3.7808e+00,4.0000e-01,-5.5410e+00,-3.7910e+00,0.0000e+00,-5.5410e+00,-3.7910e+00,4.0000e-01,-5.5308e+00,-3.8027e+00,0.0000e+00,-5.5308e+00,-3.8027e+00,4.0000e-01,-5.5222e+00,-3.8156e+00,0.0000e+00,-5.5222e+00,-3.8156e+00,4.0000e-01,-5.5153e+00,-3.8296e+00,0.0000e+00,-5.5153e+00,-3.8296e+00,4.0000e-01,-5.5103e+00,-3.8443e+00,0.0000e+00,-5.5103e+00,-3.8443e+00,4.0000e-01,-5.5073e+00,-3.8595e+00,0.0000e+00,-5.5073e+00,-3.8595e+00,4.0000e-01,-5.5062e+00,-3.8750e+00,0.0000e+00,-5.5062e+00,-3.8750e+00,4.0000e-01,-5.5073e+00,-3.8905e+00,0.0000e+00,-5.5073e+00,-3.8905e+00,4.0000e-01,-5.5103e+00,-3.9057e+00,0.0000e+00,-5.5103e+00,-3.9057e+00,4.0000e-01,-5.5153e+00,-3.9204e+00,0.0000e+00,-5.5153e+00,-3.9204e+00,4.0000e-01,-5.5222e+00,-3.9344e+00,0.0000e+00,-5.5222e+00,-3.9344e+00,4.0000e-01,-5.5308e+00,-3.9473e+00,0.0000e+00,-5.5308e+00,-3.9473e+00,4.0000e-01,-5.5410e+00,-3.9590e+00,0.0000e+00,-5.5410e+00,-3.9590e+00,4.0000e-01,-5.5527e+00,-3.9692e+00,0.0000e+00,-5.5527e+00,-3.9692e+00,4.0000e-01,-5.5656e+00,-3.9778e+00,0.0000e+00,-5.5656e+00,-3.9778e+00,4.0000e-01,-5.5796e+00,-3.9847e+00,0.0000e+00,-5.5796e+00,-3.9847e+00,4.0000e-01,-5.5943e+00,-3.9897e+00,0.0000e+00,-5.5943e+00,-3.9897e+00,4.0000e-01,-5.6095e+00,-3.9927e+00,0.0000e+00,-5.6095e+00,-3.9927e+00,4.0000e-01});
			return Coordinate_7_155_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #156, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_156_vector()
		{
			MFVec3f Normal_7_156_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_156_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #162, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_162_point()
		{
			MFVec3f Coordinate_7_162_point = new MFVec3f(new double[] {5.6250e+00,-3.9937e+00,0.0000e+00,5.6250e+00,-3.9937e+00,4.0000e-01,5.6095e+00,-3.9927e+00,0.0000e+00,5.6095e+00,-3.9927e+00,4.0000e-01,5.5943e+00,-3.9897e+00,0.0000e+00,5.5943e+00,-3.9897e+00,4.0000e-01,5.5796e+00,-3.9847e+00,0.0000e+00,5.5796e+00,-3.9847e+00,4.0000e-01,5.5656e+00,-3.9778e+00,0.0000e+00,5.5656e+00,-3.9778e+00,4.0000e-01,5.5527e+00,-3.9692e+00,0.0000e+00,5.5527e+00,-3.9692e+00,4.0000e-01,5.5410e+00,-3.9590e+00,0.0000e+00,5.5410e+00,-3.9590e+00,4.0000e-01,5.5308e+00,-3.9473e+00,0.0000e+00,5.5308e+00,-3.9473e+00,4.0000e-01,5.5222e+00,-3.9344e+00,0.0000e+00,5.5222e+00,-3.9344e+00,4.0000e-01,5.5153e+00,-3.9204e+00,0.0000e+00,5.5153e+00,-3.9204e+00,4.0000e-01,5.5103e+00,-3.9057e+00,0.0000e+00,5.5103e+00,-3.9057e+00,4.0000e-01,5.5073e+00,-3.8905e+00,0.0000e+00,5.5073e+00,-3.8905e+00,4.0000e-01,5.5062e+00,-3.8750e+00,0.0000e+00,5.5062e+00,-3.8750e+00,4.0000e-01,5.5073e+00,-3.8595e+00,0.0000e+00,5.5073e+00,-3.8595e+00,4.0000e-01,5.5103e+00,-3.8443e+00,0.0000e+00,5.5103e+00,-3.8443e+00,4.0000e-01,5.5153e+00,-3.8296e+00,0.0000e+00,5.5153e+00,-3.8296e+00,4.0000e-01,5.5222e+00,-3.8156e+00,0.0000e+00,5.5222e+00,-3.8156e+00,4.0000e-01,5.5308e+00,-3.8027e+00,0.0000e+00,5.5308e+00,-3.8027e+00,4.0000e-01,5.5410e+00,-3.7910e+00,0.0000e+00,5.5410e+00,-3.7910e+00,4.0000e-01,5.5527e+00,-3.7808e+00,0.0000e+00,5.5527e+00,-3.7808e+00,4.0000e-01,5.5656e+00,-3.7722e+00,0.0000e+00,5.5656e+00,-3.7722e+00,4.0000e-01,5.5796e+00,-3.7653e+00,0.0000e+00,5.5796e+00,-3.7653e+00,4.0000e-01,5.5943e+00,-3.7603e+00,0.0000e+00,5.5943e+00,-3.7603e+00,4.0000e-01,5.6095e+00,-3.7573e+00,0.0000e+00,5.6095e+00,-3.7573e+00,4.0000e-01,5.6250e+00,-3.7563e+00,0.0000e+00,5.6250e+00,-3.7563e+00,4.0000e-01,5.6405e+00,-3.7573e+00,0.0000e+00,5.6405e+00,-3.7573e+00,4.0000e-01,5.6557e+00,-3.7603e+00,0.0000e+00,5.6557e+00,-3.7603e+00,4.0000e-01,5.6704e+00,-3.7653e+00,0.0000e+00,5.6704e+00,-3.7653e+00,4.0000e-01,5.6844e+00,-3.7722e+00,0.0000e+00,5.6844e+00,-3.7722e+00,4.0000e-01,5.6973e+00,-3.7808e+00,0.0000e+00,5.6973e+00,-3.7808e+00,4.0000e-01,5.7090e+00,-3.7910e+00,0.0000e+00,5.7090e+00,-3.7910e+00,4.0000e-01,5.7192e+00,-3.8027e+00,0.0000e+00,5.7192e+00,-3.8027e+00,4.0000e-01,5.7278e+00,-3.8156e+00,0.0000e+00,5.7278e+00,-3.8156e+00,4.0000e-01,5.7347e+00,-3.8296e+00,0.0000e+00,5.7347e+00,-3.8296e+00,4.0000e-01,5.7397e+00,-3.8443e+00,0.0000e+00,5.7397e+00,-3.8443e+00,4.0000e-01,5.7427e+00,-3.8595e+00,0.0000e+00,5.7427e+00,-3.8595e+00,4.0000e-01,5.7438e+00,-3.8750e+00,0.0000e+00,5.7438e+00,-3.8750e+00,4.0000e-01,5.7427e+00,-3.8905e+00,0.0000e+00,5.7427e+00,-3.8905e+00,4.0000e-01,5.7397e+00,-3.9057e+00,0.0000e+00,5.7397e+00,-3.9057e+00,4.0000e-01,5.7347e+00,-3.9204e+00,0.0000e+00,5.7347e+00,-3.9204e+00,4.0000e-01,5.7278e+00,-3.9344e+00,0.0000e+00,5.7278e+00,-3.9344e+00,4.0000e-01,5.7192e+00,-3.9473e+00,0.0000e+00,5.7192e+00,-3.9473e+00,4.0000e-01,5.7090e+00,-3.9590e+00,0.0000e+00,5.7090e+00,-3.9590e+00,4.0000e-01,5.6973e+00,-3.9692e+00,0.0000e+00,5.6973e+00,-3.9692e+00,4.0000e-01,5.6844e+00,-3.9778e+00,0.0000e+00,5.6844e+00,-3.9778e+00,4.0000e-01,5.6704e+00,-3.9847e+00,0.0000e+00,5.6704e+00,-3.9847e+00,4.0000e-01,5.6557e+00,-3.9897e+00,0.0000e+00,5.6557e+00,-3.9897e+00,4.0000e-01,5.6405e+00,-3.9927e+00,0.0000e+00,5.6405e+00,-3.9927e+00,4.0000e-01});
			return Coordinate_7_162_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #163, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_163_vector()
		{
			MFVec3f Normal_7_163_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_163_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #217, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_217_point()
		{
			MFVec3f Coordinate_7_217_point = new MFVec3f(new double[] {-2.9535e+00,-2.1441e+00,1.9000e+00,-2.9535e+00,-2.1441e+00,1.7650e+00,-2.9619e+00,-2.1064e+00,1.9000e+00,-2.9619e+00,-2.1064e+00,1.7650e+00,-2.9750e+00,-2.0701e+00,1.9000e+00,-2.9750e+00,-2.0701e+00,1.7650e+00,-2.9927e+00,-2.0357e+00,1.9000e+00,-2.9927e+00,-2.0357e+00,1.7650e+00,-3.0147e+00,-2.0040e+00,1.9000e+00,-3.0147e+00,-2.0040e+00,1.7650e+00,-3.0405e+00,-1.9753e+00,1.9000e+00,-3.0405e+00,-1.9753e+00,1.7650e+00,-3.0698e+00,-1.9501e+00,1.9000e+00,-3.0698e+00,-1.9501e+00,1.7650e+00,-3.1021e+00,-1.9290e+00,1.9000e+00,-3.1021e+00,-1.9290e+00,1.7650e+00,-3.1369e+00,-1.9121e+00,1.9000e+00,-3.1369e+00,-1.9121e+00,1.7650e+00,-3.1735e+00,-1.8999e+00,1.9000e+00,-3.1735e+00,-1.8999e+00,1.7650e+00,-3.2115e+00,-1.8925e+00,1.9000e+00,-3.2115e+00,-1.8925e+00,1.7650e+00,-3.2500e+00,-1.8900e+00,1.9000e+00,-3.2500e+00,-1.8900e+00,1.7650e+00,-3.2885e+00,-1.8925e+00,1.9000e+00,-3.2885e+00,-1.8925e+00,1.7650e+00,-3.3265e+00,-1.8999e+00,1.9000e+00,-3.3265e+00,-1.8999e+00,1.7650e+00,-3.3631e+00,-1.9121e+00,1.9000e+00,-3.3631e+00,-1.9121e+00,1.7650e+00,-3.3979e+00,-1.9290e+00,1.9000e+00,-3.3979e+00,-1.9290e+00,1.7650e+00,-3.4302e+00,-1.9501e+00,1.9000e+00,-3.4302e+00,-1.9501e+00,1.7650e+00,-3.4595e+00,-1.9753e+00,1.9000e+00,-3.4595e+00,-1.9753e+00,1.7650e+00,-3.4853e+00,-2.0040e+00,1.9000e+00,-3.4853e+00,-2.0040e+00,1.7650e+00,-3.5073e+00,-2.0357e+00,1.9000e+00,-3.5073e+00,-2.0357e+00,1.7650e+00,-3.5250e+00,-2.0701e+00,1.9000e+00,-3.5250e+00,-2.0701e+00,1.7650e+00,-3.5381e+00,-2.1064e+00,1.9000e+00,-3.5381e+00,-2.1064e+00,1.7650e+00,-3.5465e+00,-2.1441e+00,1.9000e+00,-3.5465e+00,-2.1441e+00,1.7650e+00});
			return Coordinate_7_217_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #218, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_218_vector()
		{
			MFVec3f Normal_7_218_vector = new MFVec3f(new double[] {9.8824e-01,1.5294e-01,0.0000e+00,9.8824e-01,1.5294e-01,0.0000e+00,9.6039e-01,2.7865e-01,0.0000e+00,9.6039e-01,2.7865e-01,0.0000e+00,9.1663e-01,3.9973e-01,0.0000e+00,9.1663e-01,3.9973e-01,0.0000e+00,8.5767e-01,5.1419e-01,0.0000e+00,8.5767e-01,5.1419e-01,0.0000e+00,7.8450e-01,6.2013e-01,0.0000e+00,7.8450e-01,6.2013e-01,0.0000e+00,6.9832e-01,7.1579e-01,0.0000e+00,6.9832e-01,7.1579e-01,0.0000e+00,6.0056e-01,7.9958e-01,0.0000e+00,6.0056e-01,7.9958e-01,0.0000e+00,4.9285e-01,8.7011e-01,0.0000e+00,4.9285e-01,8.7011e-01,0.0000e+00,3.7697e-01,9.2623e-01,0.0000e+00,3.7697e-01,9.2623e-01,0.0000e+00,2.5484e-01,9.6698e-01,0.0000e+00,2.5484e-01,9.6698e-01,0.0000e+00,1.2848e-01,9.9171e-01,0.0000e+00,1.2848e-01,9.9171e-01,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,-1.2848e-01,9.9171e-01,0.0000e+00,-1.2848e-01,9.9171e-01,0.0000e+00,-2.5484e-01,9.6698e-01,0.0000e+00,-2.5484e-01,9.6698e-01,0.0000e+00,-3.7697e-01,9.2623e-01,0.0000e+00,-3.7697e-01,9.2623e-01,0.0000e+00,-4.9285e-01,8.7011e-01,0.0000e+00,-4.9285e-01,8.7011e-01,0.0000e+00,-6.0056e-01,7.9958e-01,0.0000e+00,-6.0056e-01,7.9958e-01,0.0000e+00,-6.9832e-01,7.1579e-01,0.0000e+00,-6.9832e-01,7.1579e-01,0.0000e+00,-7.8450e-01,6.2013e-01,0.0000e+00,-7.8450e-01,6.2013e-01,0.0000e+00,-8.5767e-01,5.1419e-01,0.0000e+00,-8.5767e-01,5.1419e-01,0.0000e+00,-9.1663e-01,3.9973e-01,0.0000e+00,-9.1663e-01,3.9973e-01,0.0000e+00,-9.6039e-01,2.7865e-01,0.0000e+00,-9.6039e-01,2.7865e-01,0.0000e+00,-9.8824e-01,1.5294e-01,0.0000e+00,-9.8824e-01,1.5294e-01,0.0000e+00});
			return Normal_7_218_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #230, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_230_point()
		{
			MFVec3f Coordinate_7_230_point = new MFVec3f(new double[] {-1.2035e+00,-2.1441e+00,1.9000e+00,-1.2035e+00,-2.1441e+00,1.7650e+00,-1.2119e+00,-2.1064e+00,1.9000e+00,-1.2119e+00,-2.1064e+00,1.7650e+00,-1.2250e+00,-2.0701e+00,1.9000e+00,-1.2250e+00,-2.0701e+00,1.7650e+00,-1.2427e+00,-2.0357e+00,1.9000e+00,-1.2427e+00,-2.0357e+00,1.7650e+00,-1.2647e+00,-2.0040e+00,1.9000e+00,-1.2647e+00,-2.0040e+00,1.7650e+00,-1.2905e+00,-1.9753e+00,1.9000e+00,-1.2905e+00,-1.9753e+00,1.7650e+00,-1.3198e+00,-1.9501e+00,1.9000e+00,-1.3198e+00,-1.9501e+00,1.7650e+00,-1.3521e+00,-1.9290e+00,1.9000e+00,-1.3521e+00,-1.9290e+00,1.7650e+00,-1.3869e+00,-1.9121e+00,1.9000e+00,-1.3869e+00,-1.9121e+00,1.7650e+00,-1.4235e+00,-1.8999e+00,1.9000e+00,-1.4235e+00,-1.8999e+00,1.7650e+00,-1.4615e+00,-1.8925e+00,1.9000e+00,-1.4615e+00,-1.8925e+00,1.7650e+00,-1.5000e+00,-1.8900e+00,1.9000e+00,-1.5000e+00,-1.8900e+00,1.7650e+00,-1.5385e+00,-1.8925e+00,1.9000e+00,-1.5385e+00,-1.8925e+00,1.7650e+00,-1.5765e+00,-1.8999e+00,1.9000e+00,-1.5765e+00,-1.8999e+00,1.7650e+00,-1.6131e+00,-1.9121e+00,1.9000e+00,-1.6131e+00,-1.9121e+00,1.7650e+00,-1.6479e+00,-1.9290e+00,1.9000e+00,-1.6479e+00,-1.9290e+00,1.7650e+00,-1.6802e+00,-1.9501e+00,1.9000e+00,-1.6802e+00,-1.9501e+00,1.7650e+00,-1.7095e+00,-1.9753e+00,1.9000e+00,-1.7095e+00,-1.9753e+00,1.7650e+00,-1.7353e+00,-2.0040e+00,1.9000e+00,-1.7353e+00,-2.0040e+00,1.7650e+00,-1.7573e+00,-2.0357e+00,1.9000e+00,-1.7573e+00,-2.0357e+00,1.7650e+00,-1.7750e+00,-2.0701e+00,1.9000e+00,-1.7750e+00,-2.0701e+00,1.7650e+00,-1.7881e+00,-2.1064e+00,1.9000e+00,-1.7881e+00,-2.1064e+00,1.7650e+00,-1.7965e+00,-2.1441e+00,1.9000e+00,-1.7965e+00,-2.1441e+00,1.7650e+00});
			return Coordinate_7_230_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #231, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_231_vector()
		{
			MFVec3f Normal_7_231_vector = new MFVec3f(new double[] {9.8824e-01,1.5294e-01,0.0000e+00,9.8824e-01,1.5294e-01,0.0000e+00,9.6039e-01,2.7865e-01,0.0000e+00,9.6039e-01,2.7865e-01,0.0000e+00,9.1663e-01,3.9973e-01,0.0000e+00,9.1663e-01,3.9973e-01,0.0000e+00,8.5767e-01,5.1419e-01,0.0000e+00,8.5767e-01,5.1419e-01,0.0000e+00,7.8450e-01,6.2013e-01,0.0000e+00,7.8450e-01,6.2013e-01,0.0000e+00,6.9832e-01,7.1579e-01,0.0000e+00,6.9832e-01,7.1579e-01,0.0000e+00,6.0056e-01,7.9958e-01,0.0000e+00,6.0056e-01,7.9958e-01,0.0000e+00,4.9285e-01,8.7011e-01,0.0000e+00,4.9285e-01,8.7011e-01,0.0000e+00,3.7697e-01,9.2623e-01,0.0000e+00,3.7697e-01,9.2623e-01,0.0000e+00,2.5484e-01,9.6698e-01,0.0000e+00,2.5484e-01,9.6698e-01,0.0000e+00,1.2848e-01,9.9171e-01,0.0000e+00,1.2848e-01,9.9171e-01,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,-1.2848e-01,9.9171e-01,0.0000e+00,-1.2848e-01,9.9171e-01,0.0000e+00,-2.5484e-01,9.6698e-01,0.0000e+00,-2.5484e-01,9.6698e-01,0.0000e+00,-3.7697e-01,9.2623e-01,0.0000e+00,-3.7697e-01,9.2623e-01,0.0000e+00,-4.9285e-01,8.7011e-01,0.0000e+00,-4.9285e-01,8.7011e-01,0.0000e+00,-6.0056e-01,7.9958e-01,0.0000e+00,-6.0056e-01,7.9958e-01,0.0000e+00,-6.9832e-01,7.1579e-01,0.0000e+00,-6.9832e-01,7.1579e-01,0.0000e+00,-7.8450e-01,6.2013e-01,0.0000e+00,-7.8450e-01,6.2013e-01,0.0000e+00,-8.5767e-01,5.1419e-01,0.0000e+00,-8.5767e-01,5.1419e-01,0.0000e+00,-9.1663e-01,3.9973e-01,0.0000e+00,-9.1663e-01,3.9973e-01,0.0000e+00,-9.6039e-01,2.7865e-01,0.0000e+00,-9.6039e-01,2.7865e-01,0.0000e+00,-9.8824e-01,1.5294e-01,0.0000e+00,-9.8824e-01,1.5294e-01,0.0000e+00});
			return Normal_7_231_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #243, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_243_point()
		{
			MFVec3f Coordinate_7_243_point = new MFVec3f(new double[] {5.4647e-01,-2.1441e+00,1.9000e+00,5.4647e-01,-2.1441e+00,1.7650e+00,5.3812e-01,-2.1064e+00,1.9000e+00,5.3812e-01,-2.1064e+00,1.7650e+00,5.2499e-01,-2.0701e+00,1.9000e+00,5.2499e-01,-2.0701e+00,1.7650e+00,5.0730e-01,-2.0357e+00,1.9000e+00,5.0730e-01,-2.0357e+00,1.7650e+00,4.8535e-01,-2.0040e+00,1.9000e+00,4.8535e-01,-2.0040e+00,1.7650e+00,4.5950e-01,-1.9753e+00,1.9000e+00,4.5950e-01,-1.9753e+00,1.7650e+00,4.3017e-01,-1.9501e+00,1.9000e+00,4.3017e-01,-1.9501e+00,1.7650e+00,3.9786e-01,-1.9290e+00,1.9000e+00,3.9786e-01,-1.9290e+00,1.7650e+00,3.6309e-01,-1.9121e+00,1.9000e+00,3.6309e-01,-1.9121e+00,1.7650e+00,3.2645e-01,-1.8999e+00,1.9000e+00,3.2645e-01,-1.8999e+00,1.7650e+00,2.8855e-01,-1.8925e+00,1.9000e+00,2.8855e-01,-1.8925e+00,1.7650e+00,2.5000e-01,-1.8900e+00,1.9000e+00,2.5000e-01,-1.8900e+00,1.7650e+00,2.1145e-01,-1.8925e+00,1.9000e+00,2.1145e-01,-1.8925e+00,1.7650e+00,1.7355e-01,-1.8999e+00,1.9000e+00,1.7355e-01,-1.8999e+00,1.7650e+00,1.3691e-01,-1.9121e+00,1.9000e+00,1.3691e-01,-1.9121e+00,1.7650e+00,1.0214e-01,-1.9290e+00,1.9000e+00,1.0214e-01,-1.9290e+00,1.7650e+00,6.9831e-02,-1.9501e+00,1.9000e+00,6.9831e-02,-1.9501e+00,1.7650e+00,4.0504e-02,-1.9753e+00,1.9000e+00,4.0504e-02,-1.9753e+00,1.7650e+00,1.4650e-02,-2.0040e+00,1.9000e+00,1.4650e-02,-2.0040e+00,1.7650e+00,-7.3022e-03,-2.0357e+00,1.9000e+00,-7.3022e-03,-2.0357e+00,1.7650e+00,-2.4989e-02,-2.0701e+00,1.9000e+00,-2.4989e-02,-2.0701e+00,1.7650e+00,-3.8118e-02,-2.1064e+00,1.9000e+00,-3.8118e-02,-2.1064e+00,1.7650e+00,-4.6471e-02,-2.1441e+00,1.9000e+00,-4.6471e-02,-2.1441e+00,1.7650e+00});
			return Coordinate_7_243_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #244, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_244_vector()
		{
			MFVec3f Normal_7_244_vector = new MFVec3f(new double[] {9.8824e-01,1.5294e-01,0.0000e+00,9.8824e-01,1.5294e-01,0.0000e+00,9.6039e-01,2.7865e-01,0.0000e+00,9.6039e-01,2.7865e-01,0.0000e+00,9.1663e-01,3.9973e-01,0.0000e+00,9.1663e-01,3.9973e-01,0.0000e+00,8.5767e-01,5.1419e-01,0.0000e+00,8.5767e-01,5.1419e-01,0.0000e+00,7.8450e-01,6.2013e-01,0.0000e+00,7.8450e-01,6.2013e-01,0.0000e+00,6.9832e-01,7.1579e-01,0.0000e+00,6.9832e-01,7.1579e-01,0.0000e+00,6.0056e-01,7.9958e-01,0.0000e+00,6.0056e-01,7.9958e-01,0.0000e+00,4.9285e-01,8.7011e-01,0.0000e+00,4.9285e-01,8.7011e-01,0.0000e+00,3.7697e-01,9.2623e-01,0.0000e+00,3.7697e-01,9.2623e-01,0.0000e+00,2.5484e-01,9.6698e-01,0.0000e+00,2.5484e-01,9.6698e-01,0.0000e+00,1.2848e-01,9.9171e-01,0.0000e+00,1.2848e-01,9.9171e-01,0.0000e+00,-5.0981e-11,1.0000e+00,0.0000e+00,-5.0981e-11,1.0000e+00,0.0000e+00,-1.2848e-01,9.9171e-01,0.0000e+00,-1.2848e-01,9.9171e-01,0.0000e+00,-2.5484e-01,9.6698e-01,0.0000e+00,-2.5484e-01,9.6698e-01,0.0000e+00,-3.7697e-01,9.2623e-01,0.0000e+00,-3.7697e-01,9.2623e-01,0.0000e+00,-4.9285e-01,8.7011e-01,0.0000e+00,-4.9285e-01,8.7011e-01,0.0000e+00,-6.0056e-01,7.9958e-01,0.0000e+00,-6.0056e-01,7.9958e-01,0.0000e+00,-6.9832e-01,7.1579e-01,0.0000e+00,-6.9832e-01,7.1579e-01,0.0000e+00,-7.8450e-01,6.2013e-01,0.0000e+00,-7.8450e-01,6.2013e-01,0.0000e+00,-8.5767e-01,5.1419e-01,0.0000e+00,-8.5767e-01,5.1419e-01,0.0000e+00,-9.1663e-01,3.9973e-01,0.0000e+00,-9.1663e-01,3.9973e-01,0.0000e+00,-9.6039e-01,2.7865e-01,0.0000e+00,-9.6039e-01,2.7865e-01,0.0000e+00,-9.8824e-01,1.5294e-01,0.0000e+00,-9.8824e-01,1.5294e-01,0.0000e+00});
			return Normal_7_244_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #262, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_262_point()
		{
			MFVec3f Coordinate_7_262_point = new MFVec3f(new double[] {1.1441e+00,-7.0353e-01,1.9000e+00,1.1441e+00,-7.0353e-01,1.7650e+00,1.1064e+00,-7.1188e-01,1.9000e+00,1.1064e+00,-7.1188e-01,1.7650e+00,1.0701e+00,-7.2501e-01,1.9000e+00,1.0701e+00,-7.2501e-01,1.7650e+00,1.0357e+00,-7.4270e-01,1.9000e+00,1.0357e+00,-7.4270e-01,1.7650e+00,1.0040e+00,-7.6465e-01,1.9000e+00,1.0040e+00,-7.6465e-01,1.7650e+00,9.7526e-01,-7.9050e-01,1.9000e+00,9.7526e-01,-7.9050e-01,1.7650e+00,9.5013e-01,-8.1983e-01,1.9000e+00,9.5013e-01,-8.1983e-01,1.7650e+00,9.2897e-01,-8.5214e-01,1.9000e+00,9.2897e-01,-8.5214e-01,1.7650e+00,9.1213e-01,-8.8691e-01,1.9000e+00,9.1213e-01,-8.8691e-01,1.7650e+00,8.9991e-01,-9.2355e-01,1.9000e+00,8.9991e-01,-9.2355e-01,1.7650e+00,8.9249e-01,-9.6145e-01,1.9000e+00,8.9249e-01,-9.6145e-01,1.7650e+00,8.9000e-01,-1.0000e+00,1.9000e+00,8.9000e-01,-1.0000e+00,1.7650e+00,8.9249e-01,-1.0385e+00,1.9000e+00,8.9249e-01,-1.0385e+00,1.7650e+00,8.9991e-01,-1.0765e+00,1.9000e+00,8.9991e-01,-1.0765e+00,1.7650e+00,9.1213e-01,-1.1131e+00,1.9000e+00,9.1213e-01,-1.1131e+00,1.7650e+00,9.2897e-01,-1.1479e+00,1.9000e+00,9.2897e-01,-1.1479e+00,1.7650e+00,9.5013e-01,-1.1802e+00,1.9000e+00,9.5013e-01,-1.1802e+00,1.7650e+00,9.7526e-01,-1.2095e+00,1.9000e+00,9.7526e-01,-1.2095e+00,1.7650e+00,1.0040e+00,-1.2353e+00,1.9000e+00,1.0040e+00,-1.2353e+00,1.7650e+00,1.0357e+00,-1.2573e+00,1.9000e+00,1.0357e+00,-1.2573e+00,1.7650e+00,1.0701e+00,-1.2750e+00,1.9000e+00,1.0701e+00,-1.2750e+00,1.7650e+00,1.1064e+00,-1.2881e+00,1.9000e+00,1.1064e+00,-1.2881e+00,1.7650e+00,1.1441e+00,-1.2965e+00,1.9000e+00,1.1441e+00,-1.2965e+00,1.7650e+00});
			return Coordinate_7_262_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #263, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_263_vector()
		{
			MFVec3f Normal_7_263_vector = new MFVec3f(new double[] {-1.5294e-01,9.8824e-01,0.0000e+00,-1.5294e-01,9.8824e-01,0.0000e+00,-2.7865e-01,9.6039e-01,0.0000e+00,-2.7865e-01,9.6039e-01,0.0000e+00,-3.9973e-01,9.1663e-01,0.0000e+00,-3.9973e-01,9.1663e-01,0.0000e+00,-5.1419e-01,8.5767e-01,0.0000e+00,-5.1419e-01,8.5767e-01,0.0000e+00,-6.2013e-01,7.8450e-01,0.0000e+00,-6.2013e-01,7.8450e-01,0.0000e+00,-7.1579e-01,6.9832e-01,0.0000e+00,-7.1579e-01,6.9832e-01,0.0000e+00,-7.9958e-01,6.0056e-01,0.0000e+00,-7.9958e-01,6.0056e-01,0.0000e+00,-8.7011e-01,4.9285e-01,0.0000e+00,-8.7011e-01,4.9285e-01,0.0000e+00,-9.2623e-01,3.7697e-01,0.0000e+00,-9.2623e-01,3.7697e-01,0.0000e+00,-9.6698e-01,2.5484e-01,0.0000e+00,-9.6698e-01,2.5484e-01,0.0000e+00,-9.9171e-01,1.2848e-01,0.0000e+00,-9.9171e-01,1.2848e-01,0.0000e+00,-1.0000e+00,-5.0980e-10,0.0000e+00,-1.0000e+00,-5.0980e-10,0.0000e+00,-9.9171e-01,-1.2848e-01,0.0000e+00,-9.9171e-01,-1.2848e-01,0.0000e+00,-9.6698e-01,-2.5484e-01,0.0000e+00,-9.6698e-01,-2.5484e-01,0.0000e+00,-9.2623e-01,-3.7697e-01,0.0000e+00,-9.2623e-01,-3.7697e-01,0.0000e+00,-8.7011e-01,-4.9285e-01,0.0000e+00,-8.7011e-01,-4.9285e-01,0.0000e+00,-7.9958e-01,-6.0056e-01,0.0000e+00,-7.9958e-01,-6.0056e-01,0.0000e+00,-7.1579e-01,-6.9832e-01,0.0000e+00,-7.1579e-01,-6.9832e-01,0.0000e+00,-6.2013e-01,-7.8450e-01,0.0000e+00,-6.2013e-01,-7.8450e-01,0.0000e+00,-5.1419e-01,-8.5767e-01,0.0000e+00,-5.1419e-01,-8.5767e-01,0.0000e+00,-3.9973e-01,-9.1663e-01,0.0000e+00,-3.9973e-01,-9.1663e-01,0.0000e+00,-2.7865e-01,-9.6039e-01,0.0000e+00,-2.7865e-01,-9.6039e-01,0.0000e+00,-1.5294e-01,-9.8824e-01,0.0000e+00,-1.5294e-01,-9.8824e-01,0.0000e+00});
			return Normal_7_263_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #275, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_275_point()
		{
			MFVec3f Coordinate_7_275_point = new MFVec3f(new double[] {1.1441e+00,1.2965e+00,1.9000e+00,1.1441e+00,1.2965e+00,1.7650e+00,1.1064e+00,1.2881e+00,1.9000e+00,1.1064e+00,1.2881e+00,1.7650e+00,1.0701e+00,1.2750e+00,1.9000e+00,1.0701e+00,1.2750e+00,1.7650e+00,1.0357e+00,1.2573e+00,1.9000e+00,1.0357e+00,1.2573e+00,1.7650e+00,1.0040e+00,1.2353e+00,1.9000e+00,1.0040e+00,1.2353e+00,1.7650e+00,9.7526e-01,1.2095e+00,1.9000e+00,9.7526e-01,1.2095e+00,1.7650e+00,9.5013e-01,1.1802e+00,1.9000e+00,9.5013e-01,1.1802e+00,1.7650e+00,9.2897e-01,1.1479e+00,1.9000e+00,9.2897e-01,1.1479e+00,1.7650e+00,9.1213e-01,1.1131e+00,1.9000e+00,9.1213e-01,1.1131e+00,1.7650e+00,8.9991e-01,1.0765e+00,1.9000e+00,8.9991e-01,1.0765e+00,1.7650e+00,8.9249e-01,1.0385e+00,1.9000e+00,8.9249e-01,1.0385e+00,1.7650e+00,8.9000e-01,1.0000e+00,1.9000e+00,8.9000e-01,1.0000e+00,1.7650e+00,8.9249e-01,9.6145e-01,1.9000e+00,8.9249e-01,9.6145e-01,1.7650e+00,8.9991e-01,9.2355e-01,1.9000e+00,8.9991e-01,9.2355e-01,1.7650e+00,9.1213e-01,8.8691e-01,1.9000e+00,9.1213e-01,8.8691e-01,1.7650e+00,9.2897e-01,8.5214e-01,1.9000e+00,9.2897e-01,8.5214e-01,1.7650e+00,9.5013e-01,8.1983e-01,1.9000e+00,9.5013e-01,8.1983e-01,1.7650e+00,9.7526e-01,7.9050e-01,1.9000e+00,9.7526e-01,7.9050e-01,1.7650e+00,1.0040e+00,7.6465e-01,1.9000e+00,1.0040e+00,7.6465e-01,1.7650e+00,1.0357e+00,7.4270e-01,1.9000e+00,1.0357e+00,7.4270e-01,1.7650e+00,1.0701e+00,7.2501e-01,1.9000e+00,1.0701e+00,7.2501e-01,1.7650e+00,1.1064e+00,7.1188e-01,1.9000e+00,1.1064e+00,7.1188e-01,1.7650e+00,1.1441e+00,7.0353e-01,1.9000e+00,1.1441e+00,7.0353e-01,1.7650e+00});
			return Coordinate_7_275_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #276, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_276_vector()
		{
			MFVec3f Normal_7_276_vector = new MFVec3f(new double[] {-1.5294e-01,9.8824e-01,0.0000e+00,-1.5294e-01,9.8824e-01,0.0000e+00,-2.7865e-01,9.6039e-01,0.0000e+00,-2.7865e-01,9.6039e-01,0.0000e+00,-3.9973e-01,9.1663e-01,0.0000e+00,-3.9973e-01,9.1663e-01,0.0000e+00,-5.1419e-01,8.5767e-01,0.0000e+00,-5.1419e-01,8.5767e-01,0.0000e+00,-6.2013e-01,7.8450e-01,0.0000e+00,-6.2013e-01,7.8450e-01,0.0000e+00,-7.1579e-01,6.9832e-01,0.0000e+00,-7.1579e-01,6.9832e-01,0.0000e+00,-7.9958e-01,6.0056e-01,0.0000e+00,-7.9958e-01,6.0056e-01,0.0000e+00,-8.7011e-01,4.9285e-01,0.0000e+00,-8.7011e-01,4.9285e-01,0.0000e+00,-9.2623e-01,3.7697e-01,0.0000e+00,-9.2623e-01,3.7697e-01,0.0000e+00,-9.6698e-01,2.5484e-01,0.0000e+00,-9.6698e-01,2.5484e-01,0.0000e+00,-9.9171e-01,1.2848e-01,0.0000e+00,-9.9171e-01,1.2848e-01,0.0000e+00,-1.0000e+00,5.0980e-10,0.0000e+00,-1.0000e+00,5.0980e-10,0.0000e+00,-9.9171e-01,-1.2848e-01,0.0000e+00,-9.9171e-01,-1.2848e-01,0.0000e+00,-9.6698e-01,-2.5484e-01,0.0000e+00,-9.6698e-01,-2.5484e-01,0.0000e+00,-9.2623e-01,-3.7697e-01,0.0000e+00,-9.2623e-01,-3.7697e-01,0.0000e+00,-8.7011e-01,-4.9285e-01,0.0000e+00,-8.7011e-01,-4.9285e-01,0.0000e+00,-7.9958e-01,-6.0056e-01,0.0000e+00,-7.9958e-01,-6.0056e-01,0.0000e+00,-7.1579e-01,-6.9832e-01,0.0000e+00,-7.1579e-01,-6.9832e-01,0.0000e+00,-6.2013e-01,-7.8450e-01,0.0000e+00,-6.2013e-01,-7.8450e-01,0.0000e+00,-5.1419e-01,-8.5767e-01,0.0000e+00,-5.1419e-01,-8.5767e-01,0.0000e+00,-3.9973e-01,-9.1663e-01,0.0000e+00,-3.9973e-01,-9.1663e-01,0.0000e+00,-2.7865e-01,-9.6039e-01,0.0000e+00,-2.7865e-01,-9.6039e-01,0.0000e+00,-1.5294e-01,-9.8824e-01,0.0000e+00,-1.5294e-01,-9.8824e-01,0.0000e+00});
			return Normal_7_276_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #294, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_294_point()
		{
			MFVec3f Coordinate_7_294_point = new MFVec3f(new double[] {-4.6471e-02,2.1441e+00,1.9000e+00,-4.6471e-02,2.1441e+00,1.7650e+00,-3.8118e-02,2.1064e+00,1.9000e+00,-3.8118e-02,2.1064e+00,1.7650e+00,-2.4989e-02,2.0701e+00,1.9000e+00,-2.4989e-02,2.0701e+00,1.7650e+00,-7.3022e-03,2.0357e+00,1.9000e+00,-7.3022e-03,2.0357e+00,1.7650e+00,1.4650e-02,2.0040e+00,1.9000e+00,1.4650e-02,2.0040e+00,1.7650e+00,4.0504e-02,1.9753e+00,1.9000e+00,4.0504e-02,1.9753e+00,1.7650e+00,6.9831e-02,1.9501e+00,1.9000e+00,6.9831e-02,1.9501e+00,1.7650e+00,1.0214e-01,1.9290e+00,1.9000e+00,1.0214e-01,1.9290e+00,1.7650e+00,1.3691e-01,1.9121e+00,1.9000e+00,1.3691e-01,1.9121e+00,1.7650e+00,1.7355e-01,1.8999e+00,1.9000e+00,1.7355e-01,1.8999e+00,1.7650e+00,2.1145e-01,1.8925e+00,1.9000e+00,2.1145e-01,1.8925e+00,1.7650e+00,2.5000e-01,1.8900e+00,1.9000e+00,2.5000e-01,1.8900e+00,1.7650e+00,2.8855e-01,1.8925e+00,1.9000e+00,2.8855e-01,1.8925e+00,1.7650e+00,3.2645e-01,1.8999e+00,1.9000e+00,3.2645e-01,1.8999e+00,1.7650e+00,3.6309e-01,1.9121e+00,1.9000e+00,3.6309e-01,1.9121e+00,1.7650e+00,3.9786e-01,1.9290e+00,1.9000e+00,3.9786e-01,1.9290e+00,1.7650e+00,4.3017e-01,1.9501e+00,1.9000e+00,4.3017e-01,1.9501e+00,1.7650e+00,4.5950e-01,1.9753e+00,1.9000e+00,4.5950e-01,1.9753e+00,1.7650e+00,4.8535e-01,2.0040e+00,1.9000e+00,4.8535e-01,2.0040e+00,1.7650e+00,5.0730e-01,2.0357e+00,1.9000e+00,5.0730e-01,2.0357e+00,1.7650e+00,5.2499e-01,2.0701e+00,1.9000e+00,5.2499e-01,2.0701e+00,1.7650e+00,5.3812e-01,2.1064e+00,1.9000e+00,5.3812e-01,2.1064e+00,1.7650e+00,5.4647e-01,2.1441e+00,1.9000e+00,5.4647e-01,2.1441e+00,1.7650e+00});
			return Coordinate_7_294_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #295, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_295_vector()
		{
			MFVec3f Normal_7_295_vector = new MFVec3f(new double[] {-9.8824e-01,-1.5294e-01,0.0000e+00,-9.8824e-01,-1.5294e-01,0.0000e+00,-9.6039e-01,-2.7865e-01,0.0000e+00,-9.6039e-01,-2.7865e-01,0.0000e+00,-9.1663e-01,-3.9973e-01,0.0000e+00,-9.1663e-01,-3.9973e-01,0.0000e+00,-8.5767e-01,-5.1419e-01,0.0000e+00,-8.5767e-01,-5.1419e-01,0.0000e+00,-7.8450e-01,-6.2013e-01,0.0000e+00,-7.8450e-01,-6.2013e-01,0.0000e+00,-6.9832e-01,-7.1579e-01,0.0000e+00,-6.9832e-01,-7.1579e-01,0.0000e+00,-6.0056e-01,-7.9958e-01,0.0000e+00,-6.0056e-01,-7.9958e-01,0.0000e+00,-4.9285e-01,-8.7011e-01,0.0000e+00,-4.9285e-01,-8.7011e-01,0.0000e+00,-3.7697e-01,-9.2623e-01,0.0000e+00,-3.7697e-01,-9.2623e-01,0.0000e+00,-2.5484e-01,-9.6698e-01,0.0000e+00,-2.5484e-01,-9.6698e-01,0.0000e+00,-1.2848e-01,-9.9171e-01,0.0000e+00,-1.2848e-01,-9.9171e-01,0.0000e+00,-5.0980e-11,-1.0000e+00,0.0000e+00,-5.0980e-11,-1.0000e+00,0.0000e+00,1.2848e-01,-9.9171e-01,0.0000e+00,1.2848e-01,-9.9171e-01,0.0000e+00,2.5484e-01,-9.6698e-01,0.0000e+00,2.5484e-01,-9.6698e-01,0.0000e+00,3.7697e-01,-9.2623e-01,0.0000e+00,3.7697e-01,-9.2623e-01,0.0000e+00,4.9285e-01,-8.7011e-01,0.0000e+00,4.9285e-01,-8.7011e-01,0.0000e+00,6.0056e-01,-7.9958e-01,0.0000e+00,6.0056e-01,-7.9958e-01,0.0000e+00,6.9832e-01,-7.1579e-01,0.0000e+00,6.9832e-01,-7.1579e-01,0.0000e+00,7.8450e-01,-6.2013e-01,0.0000e+00,7.8450e-01,-6.2013e-01,0.0000e+00,8.5767e-01,-5.1419e-01,0.0000e+00,8.5767e-01,-5.1419e-01,0.0000e+00,9.1663e-01,-3.9973e-01,0.0000e+00,9.1663e-01,-3.9973e-01,0.0000e+00,9.6039e-01,-2.7865e-01,0.0000e+00,9.6039e-01,-2.7865e-01,0.0000e+00,9.8824e-01,-1.5294e-01,0.0000e+00,9.8824e-01,-1.5294e-01,0.0000e+00});
			return Normal_7_295_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #307, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_307_point()
		{
			MFVec3f Coordinate_7_307_point = new MFVec3f(new double[] {-1.7965e+00,2.1441e+00,1.9000e+00,-1.7965e+00,2.1441e+00,1.7650e+00,-1.7881e+00,2.1064e+00,1.9000e+00,-1.7881e+00,2.1064e+00,1.7650e+00,-1.7750e+00,2.0701e+00,1.9000e+00,-1.7750e+00,2.0701e+00,1.7650e+00,-1.7573e+00,2.0357e+00,1.9000e+00,-1.7573e+00,2.0357e+00,1.7650e+00,-1.7353e+00,2.0040e+00,1.9000e+00,-1.7353e+00,2.0040e+00,1.7650e+00,-1.7095e+00,1.9753e+00,1.9000e+00,-1.7095e+00,1.9753e+00,1.7650e+00,-1.6802e+00,1.9501e+00,1.9000e+00,-1.6802e+00,1.9501e+00,1.7650e+00,-1.6479e+00,1.9290e+00,1.9000e+00,-1.6479e+00,1.9290e+00,1.7650e+00,-1.6131e+00,1.9121e+00,1.9000e+00,-1.6131e+00,1.9121e+00,1.7650e+00,-1.5765e+00,1.8999e+00,1.9000e+00,-1.5765e+00,1.8999e+00,1.7650e+00,-1.5385e+00,1.8925e+00,1.9000e+00,-1.5385e+00,1.8925e+00,1.7650e+00,-1.5000e+00,1.8900e+00,1.9000e+00,-1.5000e+00,1.8900e+00,1.7650e+00,-1.4615e+00,1.8925e+00,1.9000e+00,-1.4615e+00,1.8925e+00,1.7650e+00,-1.4235e+00,1.8999e+00,1.9000e+00,-1.4235e+00,1.8999e+00,1.7650e+00,-1.3869e+00,1.9121e+00,1.9000e+00,-1.3869e+00,1.9121e+00,1.7650e+00,-1.3521e+00,1.9290e+00,1.9000e+00,-1.3521e+00,1.9290e+00,1.7650e+00,-1.3198e+00,1.9501e+00,1.9000e+00,-1.3198e+00,1.9501e+00,1.7650e+00,-1.2905e+00,1.9753e+00,1.9000e+00,-1.2905e+00,1.9753e+00,1.7650e+00,-1.2647e+00,2.0040e+00,1.9000e+00,-1.2647e+00,2.0040e+00,1.7650e+00,-1.2427e+00,2.0357e+00,1.9000e+00,-1.2427e+00,2.0357e+00,1.7650e+00,-1.2250e+00,2.0701e+00,1.9000e+00,-1.2250e+00,2.0701e+00,1.7650e+00,-1.2119e+00,2.1064e+00,1.9000e+00,-1.2119e+00,2.1064e+00,1.7650e+00,-1.2035e+00,2.1441e+00,1.9000e+00,-1.2035e+00,2.1441e+00,1.7650e+00});
			return Coordinate_7_307_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #308, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_308_vector()
		{
			MFVec3f Normal_7_308_vector = new MFVec3f(new double[] {-9.8824e-01,-1.5294e-01,0.0000e+00,-9.8824e-01,-1.5294e-01,0.0000e+00,-9.6039e-01,-2.7865e-01,0.0000e+00,-9.6039e-01,-2.7865e-01,0.0000e+00,-9.1663e-01,-3.9973e-01,0.0000e+00,-9.1663e-01,-3.9973e-01,0.0000e+00,-8.5767e-01,-5.1419e-01,0.0000e+00,-8.5767e-01,-5.1419e-01,0.0000e+00,-7.8450e-01,-6.2013e-01,0.0000e+00,-7.8450e-01,-6.2013e-01,0.0000e+00,-6.9832e-01,-7.1579e-01,0.0000e+00,-6.9832e-01,-7.1579e-01,0.0000e+00,-6.0056e-01,-7.9958e-01,0.0000e+00,-6.0056e-01,-7.9958e-01,0.0000e+00,-4.9285e-01,-8.7011e-01,0.0000e+00,-4.9285e-01,-8.7011e-01,0.0000e+00,-3.7697e-01,-9.2623e-01,0.0000e+00,-3.7697e-01,-9.2623e-01,0.0000e+00,-2.5484e-01,-9.6698e-01,0.0000e+00,-2.5484e-01,-9.6698e-01,0.0000e+00,-1.2848e-01,-9.9171e-01,0.0000e+00,-1.2848e-01,-9.9171e-01,0.0000e+00,1.2246e-16,-1.0000e+00,0.0000e+00,1.2246e-16,-1.0000e+00,0.0000e+00,1.2848e-01,-9.9171e-01,0.0000e+00,1.2848e-01,-9.9171e-01,0.0000e+00,2.5484e-01,-9.6698e-01,0.0000e+00,2.5484e-01,-9.6698e-01,0.0000e+00,3.7697e-01,-9.2623e-01,0.0000e+00,3.7697e-01,-9.2623e-01,0.0000e+00,4.9285e-01,-8.7011e-01,0.0000e+00,4.9285e-01,-8.7011e-01,0.0000e+00,6.0056e-01,-7.9958e-01,0.0000e+00,6.0056e-01,-7.9958e-01,0.0000e+00,6.9832e-01,-7.1579e-01,0.0000e+00,6.9832e-01,-7.1579e-01,0.0000e+00,7.8450e-01,-6.2013e-01,0.0000e+00,7.8450e-01,-6.2013e-01,0.0000e+00,8.5767e-01,-5.1419e-01,0.0000e+00,8.5767e-01,-5.1419e-01,0.0000e+00,9.1663e-01,-3.9973e-01,0.0000e+00,9.1663e-01,-3.9973e-01,0.0000e+00,9.6039e-01,-2.7865e-01,0.0000e+00,9.6039e-01,-2.7865e-01,0.0000e+00,9.8824e-01,-1.5294e-01,0.0000e+00,9.8824e-01,-1.5294e-01,0.0000e+00});
			return Normal_7_308_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #320, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_320_point()
		{
			MFVec3f Coordinate_7_320_point = new MFVec3f(new double[] {-3.5465e+00,2.1441e+00,1.9000e+00,-3.5465e+00,2.1441e+00,1.7650e+00,-3.5381e+00,2.1064e+00,1.9000e+00,-3.5381e+00,2.1064e+00,1.7650e+00,-3.5250e+00,2.0701e+00,1.9000e+00,-3.5250e+00,2.0701e+00,1.7650e+00,-3.5073e+00,2.0357e+00,1.9000e+00,-3.5073e+00,2.0357e+00,1.7650e+00,-3.4853e+00,2.0040e+00,1.9000e+00,-3.4853e+00,2.0040e+00,1.7650e+00,-3.4595e+00,1.9753e+00,1.9000e+00,-3.4595e+00,1.9753e+00,1.7650e+00,-3.4302e+00,1.9501e+00,1.9000e+00,-3.4302e+00,1.9501e+00,1.7650e+00,-3.3979e+00,1.9290e+00,1.9000e+00,-3.3979e+00,1.9290e+00,1.7650e+00,-3.3631e+00,1.9121e+00,1.9000e+00,-3.3631e+00,1.9121e+00,1.7650e+00,-3.3265e+00,1.8999e+00,1.9000e+00,-3.3265e+00,1.8999e+00,1.7650e+00,-3.2885e+00,1.8925e+00,1.9000e+00,-3.2885e+00,1.8925e+00,1.7650e+00,-3.2500e+00,1.8900e+00,1.9000e+00,-3.2500e+00,1.8900e+00,1.7650e+00,-3.2115e+00,1.8925e+00,1.9000e+00,-3.2115e+00,1.8925e+00,1.7650e+00,-3.1735e+00,1.8999e+00,1.9000e+00,-3.1735e+00,1.8999e+00,1.7650e+00,-3.1369e+00,1.9121e+00,1.9000e+00,-3.1369e+00,1.9121e+00,1.7650e+00,-3.1021e+00,1.9290e+00,1.9000e+00,-3.1021e+00,1.9290e+00,1.7650e+00,-3.0698e+00,1.9501e+00,1.9000e+00,-3.0698e+00,1.9501e+00,1.7650e+00,-3.0405e+00,1.9753e+00,1.9000e+00,-3.0405e+00,1.9753e+00,1.7650e+00,-3.0147e+00,2.0040e+00,1.9000e+00,-3.0147e+00,2.0040e+00,1.7650e+00,-2.9927e+00,2.0357e+00,1.9000e+00,-2.9927e+00,2.0357e+00,1.7650e+00,-2.9750e+00,2.0701e+00,1.9000e+00,-2.9750e+00,2.0701e+00,1.7650e+00,-2.9619e+00,2.1064e+00,1.9000e+00,-2.9619e+00,2.1064e+00,1.7650e+00,-2.9535e+00,2.1441e+00,1.9000e+00,-2.9535e+00,2.1441e+00,1.7650e+00});
			return Coordinate_7_320_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #321, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_321_vector()
		{
			MFVec3f Normal_7_321_vector = new MFVec3f(new double[] {-9.8824e-01,-1.5294e-01,0.0000e+00,-9.8824e-01,-1.5294e-01,0.0000e+00,-9.6039e-01,-2.7865e-01,0.0000e+00,-9.6039e-01,-2.7865e-01,0.0000e+00,-9.1663e-01,-3.9973e-01,0.0000e+00,-9.1663e-01,-3.9973e-01,0.0000e+00,-8.5767e-01,-5.1419e-01,0.0000e+00,-8.5767e-01,-5.1419e-01,0.0000e+00,-7.8450e-01,-6.2013e-01,0.0000e+00,-7.8450e-01,-6.2013e-01,0.0000e+00,-6.9832e-01,-7.1579e-01,0.0000e+00,-6.9832e-01,-7.1579e-01,0.0000e+00,-6.0056e-01,-7.9958e-01,0.0000e+00,-6.0056e-01,-7.9958e-01,0.0000e+00,-4.9285e-01,-8.7011e-01,0.0000e+00,-4.9285e-01,-8.7011e-01,0.0000e+00,-3.7697e-01,-9.2623e-01,0.0000e+00,-3.7697e-01,-9.2623e-01,0.0000e+00,-2.5484e-01,-9.6698e-01,0.0000e+00,-2.5484e-01,-9.6698e-01,0.0000e+00,-1.2848e-01,-9.9171e-01,0.0000e+00,-1.2848e-01,-9.9171e-01,0.0000e+00,-3.2162e-16,-1.0000e+00,0.0000e+00,-3.2162e-16,-1.0000e+00,0.0000e+00,1.2848e-01,-9.9171e-01,0.0000e+00,1.2848e-01,-9.9171e-01,0.0000e+00,2.5484e-01,-9.6698e-01,0.0000e+00,2.5484e-01,-9.6698e-01,0.0000e+00,3.7697e-01,-9.2623e-01,0.0000e+00,3.7697e-01,-9.2623e-01,0.0000e+00,4.9285e-01,-8.7011e-01,0.0000e+00,4.9285e-01,-8.7011e-01,0.0000e+00,6.0056e-01,-7.9958e-01,0.0000e+00,6.0056e-01,-7.9958e-01,0.0000e+00,6.9832e-01,-7.1579e-01,0.0000e+00,6.9832e-01,-7.1579e-01,0.0000e+00,7.8450e-01,-6.2013e-01,0.0000e+00,7.8450e-01,-6.2013e-01,0.0000e+00,8.5767e-01,-5.1419e-01,0.0000e+00,8.5767e-01,-5.1419e-01,0.0000e+00,9.1663e-01,-3.9973e-01,0.0000e+00,9.1663e-01,-3.9973e-01,0.0000e+00,9.6039e-01,-2.7865e-01,0.0000e+00,9.6039e-01,-2.7865e-01,0.0000e+00,9.8824e-01,-1.5294e-01,0.0000e+00,9.8824e-01,-1.5294e-01,0.0000e+00});
			return Normal_7_321_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #339, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_339_point()
		{
			MFVec3f Coordinate_7_339_point = new MFVec3f(new double[] {-4.1441e+00,7.0353e-01,1.9000e+00,-4.1441e+00,7.0353e-01,1.7650e+00,-4.1064e+00,7.1188e-01,1.9000e+00,-4.1064e+00,7.1188e-01,1.7650e+00,-4.0701e+00,7.2501e-01,1.9000e+00,-4.0701e+00,7.2501e-01,1.7650e+00,-4.0357e+00,7.4270e-01,1.9000e+00,-4.0357e+00,7.4270e-01,1.7650e+00,-4.0040e+00,7.6465e-01,1.9000e+00,-4.0040e+00,7.6465e-01,1.7650e+00,-3.9753e+00,7.9050e-01,1.9000e+00,-3.9753e+00,7.9050e-01,1.7650e+00,-3.9501e+00,8.1983e-01,1.9000e+00,-3.9501e+00,8.1983e-01,1.7650e+00,-3.9290e+00,8.5214e-01,1.9000e+00,-3.9290e+00,8.5214e-01,1.7650e+00,-3.9121e+00,8.8691e-01,1.9000e+00,-3.9121e+00,8.8691e-01,1.7650e+00,-3.8999e+00,9.2355e-01,1.9000e+00,-3.8999e+00,9.2355e-01,1.7650e+00,-3.8925e+00,9.6145e-01,1.9000e+00,-3.8925e+00,9.6145e-01,1.7650e+00,-3.8900e+00,1.0000e+00,1.9000e+00,-3.8900e+00,1.0000e+00,1.7650e+00,-3.8925e+00,1.0385e+00,1.9000e+00,-3.8925e+00,1.0385e+00,1.7650e+00,-3.8999e+00,1.0765e+00,1.9000e+00,-3.8999e+00,1.0765e+00,1.7650e+00,-3.9121e+00,1.1131e+00,1.9000e+00,-3.9121e+00,1.1131e+00,1.7650e+00,-3.9290e+00,1.1479e+00,1.9000e+00,-3.9290e+00,1.1479e+00,1.7650e+00,-3.9501e+00,1.1802e+00,1.9000e+00,-3.9501e+00,1.1802e+00,1.7650e+00,-3.9753e+00,1.2095e+00,1.9000e+00,-3.9753e+00,1.2095e+00,1.7650e+00,-4.0040e+00,1.2353e+00,1.9000e+00,-4.0040e+00,1.2353e+00,1.7650e+00,-4.0357e+00,1.2573e+00,1.9000e+00,-4.0357e+00,1.2573e+00,1.7650e+00,-4.0701e+00,1.2750e+00,1.9000e+00,-4.0701e+00,1.2750e+00,1.7650e+00,-4.1064e+00,1.2881e+00,1.9000e+00,-4.1064e+00,1.2881e+00,1.7650e+00,-4.1441e+00,1.2965e+00,1.9000e+00,-4.1441e+00,1.2965e+00,1.7650e+00});
			return Coordinate_7_339_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #340, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_340_vector()
		{
			MFVec3f Normal_7_340_vector = new MFVec3f(new double[] {1.5294e-01,-9.8824e-01,0.0000e+00,1.5294e-01,-9.8824e-01,0.0000e+00,2.7865e-01,-9.6039e-01,0.0000e+00,2.7865e-01,-9.6039e-01,0.0000e+00,3.9973e-01,-9.1663e-01,0.0000e+00,3.9973e-01,-9.1663e-01,0.0000e+00,5.1419e-01,-8.5767e-01,0.0000e+00,5.1419e-01,-8.5767e-01,0.0000e+00,6.2013e-01,-7.8450e-01,0.0000e+00,6.2013e-01,-7.8450e-01,0.0000e+00,7.1579e-01,-6.9832e-01,0.0000e+00,7.1579e-01,-6.9832e-01,0.0000e+00,7.9958e-01,-6.0056e-01,0.0000e+00,7.9958e-01,-6.0056e-01,0.0000e+00,8.7011e-01,-4.9285e-01,0.0000e+00,8.7011e-01,-4.9285e-01,0.0000e+00,9.2623e-01,-3.7697e-01,0.0000e+00,9.2623e-01,-3.7697e-01,0.0000e+00,9.6698e-01,-2.5484e-01,0.0000e+00,9.6698e-01,-2.5484e-01,0.0000e+00,9.9171e-01,-1.2848e-01,0.0000e+00,9.9171e-01,-1.2848e-01,0.0000e+00,1.0000e+00,5.0980e-10,0.0000e+00,1.0000e+00,5.0980e-10,0.0000e+00,9.9171e-01,1.2848e-01,0.0000e+00,9.9171e-01,1.2848e-01,0.0000e+00,9.6698e-01,2.5484e-01,0.0000e+00,9.6698e-01,2.5484e-01,0.0000e+00,9.2623e-01,3.7697e-01,0.0000e+00,9.2623e-01,3.7697e-01,0.0000e+00,8.7011e-01,4.9285e-01,0.0000e+00,8.7011e-01,4.9285e-01,0.0000e+00,7.9958e-01,6.0056e-01,0.0000e+00,7.9958e-01,6.0056e-01,0.0000e+00,7.1579e-01,6.9832e-01,0.0000e+00,7.1579e-01,6.9832e-01,0.0000e+00,6.2013e-01,7.8450e-01,0.0000e+00,6.2013e-01,7.8450e-01,0.0000e+00,5.1419e-01,8.5767e-01,0.0000e+00,5.1419e-01,8.5767e-01,0.0000e+00,3.9973e-01,9.1663e-01,0.0000e+00,3.9973e-01,9.1663e-01,0.0000e+00,2.7865e-01,9.6039e-01,0.0000e+00,2.7865e-01,9.6039e-01,0.0000e+00,1.5294e-01,9.8824e-01,0.0000e+00,1.5294e-01,9.8824e-01,0.0000e+00});
			return Normal_7_340_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #364, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_364_point()
		{
			MFVec3f Coordinate_7_364_point = new MFVec3f(new double[] {-4.1441e+00,-1.2965e+00,1.9000e+00,-4.1441e+00,-1.2965e+00,1.7650e+00,-4.1064e+00,-1.2881e+00,1.9000e+00,-4.1064e+00,-1.2881e+00,1.7650e+00,-4.0701e+00,-1.2750e+00,1.9000e+00,-4.0701e+00,-1.2750e+00,1.7650e+00,-4.0357e+00,-1.2573e+00,1.9000e+00,-4.0357e+00,-1.2573e+00,1.7650e+00,-4.0040e+00,-1.2353e+00,1.9000e+00,-4.0040e+00,-1.2353e+00,1.7650e+00,-3.9753e+00,-1.2095e+00,1.9000e+00,-3.9753e+00,-1.2095e+00,1.7650e+00,-3.9501e+00,-1.1802e+00,1.9000e+00,-3.9501e+00,-1.1802e+00,1.7650e+00,-3.9290e+00,-1.1479e+00,1.9000e+00,-3.9290e+00,-1.1479e+00,1.7650e+00,-3.9121e+00,-1.1131e+00,1.9000e+00,-3.9121e+00,-1.1131e+00,1.7650e+00,-3.8999e+00,-1.0765e+00,1.9000e+00,-3.8999e+00,-1.0765e+00,1.7650e+00,-3.8925e+00,-1.0385e+00,1.9000e+00,-3.8925e+00,-1.0385e+00,1.7650e+00,-3.8900e+00,-1.0000e+00,1.9000e+00,-3.8900e+00,-1.0000e+00,1.7650e+00,-3.8925e+00,-9.6145e-01,1.9000e+00,-3.8925e+00,-9.6145e-01,1.7650e+00,-3.8999e+00,-9.2355e-01,1.9000e+00,-3.8999e+00,-9.2355e-01,1.7650e+00,-3.9121e+00,-8.8691e-01,1.9000e+00,-3.9121e+00,-8.8691e-01,1.7650e+00,-3.9290e+00,-8.5214e-01,1.9000e+00,-3.9290e+00,-8.5214e-01,1.7650e+00,-3.9501e+00,-8.1983e-01,1.9000e+00,-3.9501e+00,-8.1983e-01,1.7650e+00,-3.9753e+00,-7.9050e-01,1.9000e+00,-3.9753e+00,-7.9050e-01,1.7650e+00,-4.0040e+00,-7.6465e-01,1.9000e+00,-4.0040e+00,-7.6465e-01,1.7650e+00,-4.0357e+00,-7.4270e-01,1.9000e+00,-4.0357e+00,-7.4270e-01,1.7650e+00,-4.0701e+00,-7.2501e-01,1.9000e+00,-4.0701e+00,-7.2501e-01,1.7650e+00,-4.1064e+00,-7.1188e-01,1.9000e+00,-4.1064e+00,-7.1188e-01,1.7650e+00,-4.1441e+00,-7.0353e-01,1.9000e+00,-4.1441e+00,-7.0353e-01,1.7650e+00});
			return Coordinate_7_364_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #365, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_365_vector()
		{
			MFVec3f Normal_7_365_vector = new MFVec3f(new double[] {1.5294e-01,-9.8824e-01,0.0000e+00,1.5294e-01,-9.8824e-01,0.0000e+00,2.7865e-01,-9.6039e-01,0.0000e+00,2.7865e-01,-9.6039e-01,0.0000e+00,3.9973e-01,-9.1663e-01,0.0000e+00,3.9973e-01,-9.1663e-01,0.0000e+00,5.1419e-01,-8.5767e-01,0.0000e+00,5.1419e-01,-8.5767e-01,0.0000e+00,6.2013e-01,-7.8450e-01,0.0000e+00,6.2013e-01,-7.8450e-01,0.0000e+00,7.1579e-01,-6.9832e-01,0.0000e+00,7.1579e-01,-6.9832e-01,0.0000e+00,7.9958e-01,-6.0056e-01,0.0000e+00,7.9958e-01,-6.0056e-01,0.0000e+00,8.7011e-01,-4.9285e-01,0.0000e+00,8.7011e-01,-4.9285e-01,0.0000e+00,9.2623e-01,-3.7697e-01,0.0000e+00,9.2623e-01,-3.7697e-01,0.0000e+00,9.6698e-01,-2.5484e-01,0.0000e+00,9.6698e-01,-2.5484e-01,0.0000e+00,9.9171e-01,-1.2848e-01,0.0000e+00,9.9171e-01,-1.2848e-01,0.0000e+00,1.0000e+00,-5.0980e-10,0.0000e+00,1.0000e+00,-5.0980e-10,0.0000e+00,9.9171e-01,1.2848e-01,0.0000e+00,9.9171e-01,1.2848e-01,0.0000e+00,9.6698e-01,2.5484e-01,0.0000e+00,9.6698e-01,2.5484e-01,0.0000e+00,9.2623e-01,3.7697e-01,0.0000e+00,9.2623e-01,3.7697e-01,0.0000e+00,8.7011e-01,4.9285e-01,0.0000e+00,8.7011e-01,4.9285e-01,0.0000e+00,7.9958e-01,6.0056e-01,0.0000e+00,7.9958e-01,6.0056e-01,0.0000e+00,7.1579e-01,6.9832e-01,0.0000e+00,7.1579e-01,6.9832e-01,0.0000e+00,6.2013e-01,7.8450e-01,0.0000e+00,6.2013e-01,7.8450e-01,0.0000e+00,5.1419e-01,8.5767e-01,0.0000e+00,5.1419e-01,8.5767e-01,0.0000e+00,3.9973e-01,9.1663e-01,0.0000e+00,3.9973e-01,9.1663e-01,0.0000e+00,2.7865e-01,9.6039e-01,0.0000e+00,2.7865e-01,9.6039e-01,0.0000e+00,1.5294e-01,9.8824e-01,0.0000e+00,1.5294e-01,9.8824e-01,0.0000e+00});
			return Normal_7_365_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #371, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_371_point()
		{
			MFVec3f Coordinate_7_371_point = new MFVec3f(new double[] {-3.2500e+00,-2.2965e+00,1.7650e+00,-3.2500e+00,-2.2965e+00,1.9000e+00,-3.2639e+00,-2.2956e+00,1.7650e+00,-3.2639e+00,-2.2956e+00,1.9000e+00,-3.2776e+00,-2.2929e+00,1.7650e+00,-3.2776e+00,-2.2929e+00,1.9000e+00,-3.2908e+00,-2.2884e+00,1.7650e+00,-3.2908e+00,-2.2884e+00,1.9000e+00,-3.3032e+00,-2.2822e+00,1.7650e+00,-3.3032e+00,-2.2822e+00,1.9000e+00,-3.3148e+00,-2.2745e+00,1.7650e+00,-3.3148e+00,-2.2745e+00,1.9000e+00,-3.3253e+00,-2.2653e+00,1.7650e+00,-3.3253e+00,-2.2653e+00,1.9000e+00,-3.3345e+00,-2.2548e+00,1.7650e+00,-3.3345e+00,-2.2548e+00,1.9000e+00,-3.3422e+00,-2.2432e+00,1.7650e+00,-3.3422e+00,-2.2432e+00,1.9000e+00,-3.3484e+00,-2.2308e+00,1.7650e+00,-3.3484e+00,-2.2308e+00,1.9000e+00,-3.3529e+00,-2.2176e+00,1.7650e+00,-3.3529e+00,-2.2176e+00,1.9000e+00,-3.3556e+00,-2.2039e+00,1.7650e+00,-3.3556e+00,-2.2039e+00,1.9000e+00,-3.3565e+00,-2.1900e+00,1.7650e+00,-3.3565e+00,-2.1900e+00,1.9000e+00,-3.3556e+00,-2.1761e+00,1.7650e+00,-3.3556e+00,-2.1761e+00,1.9000e+00,-3.3529e+00,-2.1624e+00,1.7650e+00,-3.3529e+00,-2.1624e+00,1.9000e+00,-3.3484e+00,-2.1492e+00,1.7650e+00,-3.3484e+00,-2.1492e+00,1.9000e+00,-3.3422e+00,-2.1368e+00,1.7650e+00,-3.3422e+00,-2.1368e+00,1.9000e+00,-3.3345e+00,-2.1252e+00,1.7650e+00,-3.3345e+00,-2.1252e+00,1.9000e+00,-3.3253e+00,-2.1147e+00,1.7650e+00,-3.3253e+00,-2.1147e+00,1.9000e+00,-3.3148e+00,-2.1055e+00,1.7650e+00,-3.3148e+00,-2.1055e+00,1.9000e+00,-3.3033e+00,-2.0978e+00,1.7650e+00,-3.3033e+00,-2.0978e+00,1.9000e+00,-3.2908e+00,-2.0916e+00,1.7650e+00,-3.2908e+00,-2.0916e+00,1.9000e+00,-3.2776e+00,-2.0871e+00,1.7650e+00,-3.2776e+00,-2.0871e+00,1.9000e+00,-3.2639e+00,-2.0844e+00,1.7650e+00,-3.2639e+00,-2.0844e+00,1.9000e+00,-3.2500e+00,-2.0835e+00,1.7650e+00,-3.2500e+00,-2.0835e+00,1.9000e+00,-3.2361e+00,-2.0844e+00,1.7650e+00,-3.2361e+00,-2.0844e+00,1.9000e+00,-3.2224e+00,-2.0871e+00,1.7650e+00,-3.2224e+00,-2.0871e+00,1.9000e+00,-3.2092e+00,-2.0916e+00,1.7650e+00,-3.2092e+00,-2.0916e+00,1.9000e+00,-3.1968e+00,-2.0978e+00,1.7650e+00,-3.1968e+00,-2.0978e+00,1.9000e+00,-3.1852e+00,-2.1055e+00,1.7650e+00,-3.1852e+00,-2.1055e+00,1.9000e+00,-3.1747e+00,-2.1147e+00,1.7650e+00,-3.1747e+00,-2.1147e+00,1.9000e+00,-3.1655e+00,-2.1252e+00,1.7650e+00,-3.1655e+00,-2.1252e+00,1.9000e+00,-3.1578e+00,-2.1367e+00,1.7650e+00,-3.1578e+00,-2.1367e+00,1.9000e+00,-3.1516e+00,-2.1492e+00,1.7650e+00,-3.1516e+00,-2.1492e+00,1.9000e+00,-3.1471e+00,-2.1624e+00,1.7650e+00,-3.1471e+00,-2.1624e+00,1.9000e+00,-3.1444e+00,-2.1761e+00,1.7650e+00,-3.1444e+00,-2.1761e+00,1.9000e+00,-3.1435e+00,-2.1900e+00,1.7650e+00,-3.1435e+00,-2.1900e+00,1.9000e+00,-3.1444e+00,-2.2039e+00,1.7650e+00,-3.1444e+00,-2.2039e+00,1.9000e+00,-3.1471e+00,-2.2176e+00,1.7650e+00,-3.1471e+00,-2.2176e+00,1.9000e+00,-3.1516e+00,-2.2308e+00,1.7650e+00,-3.1516e+00,-2.2308e+00,1.9000e+00,-3.1578e+00,-2.2432e+00,1.7650e+00,-3.1578e+00,-2.2432e+00,1.9000e+00,-3.1655e+00,-2.2548e+00,1.7650e+00,-3.1655e+00,-2.2548e+00,1.9000e+00,-3.1747e+00,-2.2653e+00,1.7650e+00,-3.1747e+00,-2.2653e+00,1.9000e+00,-3.1852e+00,-2.2745e+00,1.7650e+00,-3.1852e+00,-2.2745e+00,1.9000e+00,-3.1967e+00,-2.2822e+00,1.7650e+00,-3.1967e+00,-2.2822e+00,1.9000e+00,-3.2092e+00,-2.2884e+00,1.7650e+00,-3.2092e+00,-2.2884e+00,1.9000e+00,-3.2224e+00,-2.2929e+00,1.7650e+00,-3.2224e+00,-2.2929e+00,1.9000e+00,-3.2361e+00,-2.2956e+00,1.7650e+00,-3.2361e+00,-2.2956e+00,1.9000e+00});
			return Coordinate_7_371_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #372, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_372_vector()
		{
			MFVec3f Normal_7_372_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_372_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #378, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_378_point()
		{
			MFVec3f Coordinate_7_378_point = new MFVec3f(new double[] {-4.1900e+00,-1.1065e+00,1.7650e+00,-4.1900e+00,-1.1065e+00,1.9000e+00,-4.2039e+00,-1.1056e+00,1.7650e+00,-4.2039e+00,-1.1056e+00,1.9000e+00,-4.2176e+00,-1.1029e+00,1.7650e+00,-4.2176e+00,-1.1029e+00,1.9000e+00,-4.2308e+00,-1.0984e+00,1.7650e+00,-4.2308e+00,-1.0984e+00,1.9000e+00,-4.2433e+00,-1.0922e+00,1.7650e+00,-4.2433e+00,-1.0922e+00,1.9000e+00,-4.2548e+00,-1.0845e+00,1.7650e+00,-4.2548e+00,-1.0845e+00,1.9000e+00,-4.2653e+00,-1.0753e+00,1.7650e+00,-4.2653e+00,-1.0753e+00,1.9000e+00,-4.2745e+00,-1.0648e+00,1.7650e+00,-4.2745e+00,-1.0648e+00,1.9000e+00,-4.2822e+00,-1.0533e+00,1.7650e+00,-4.2822e+00,-1.0533e+00,1.9000e+00,-4.2884e+00,-1.0408e+00,1.7650e+00,-4.2884e+00,-1.0408e+00,1.9000e+00,-4.2929e+00,-1.0276e+00,1.7650e+00,-4.2929e+00,-1.0276e+00,1.9000e+00,-4.2956e+00,-1.0139e+00,1.7650e+00,-4.2956e+00,-1.0139e+00,1.9000e+00,-4.2965e+00,-1.0000e+00,1.7650e+00,-4.2965e+00,-1.0000e+00,1.9000e+00,-4.2956e+00,-9.8610e-01,1.7650e+00,-4.2956e+00,-9.8610e-01,1.9000e+00,-4.2929e+00,-9.7244e-01,1.7650e+00,-4.2929e+00,-9.7244e-01,1.9000e+00,-4.2884e+00,-9.5924e-01,1.7650e+00,-4.2884e+00,-9.5924e-01,1.9000e+00,-4.2822e+00,-9.4675e-01,1.7650e+00,-4.2822e+00,-9.4675e-01,1.9000e+00,-4.2745e+00,-9.3517e-01,1.7650e+00,-4.2745e+00,-9.3517e-01,1.9000e+00,-4.2653e+00,-9.2469e-01,1.7650e+00,-4.2653e+00,-9.2469e-01,1.9000e+00,-4.2548e+00,-9.1551e-01,1.7650e+00,-4.2548e+00,-9.1551e-01,1.9000e+00,-4.2433e+00,-9.0777e-01,1.7650e+00,-4.2433e+00,-9.0777e-01,1.9000e+00,-4.2308e+00,-9.0161e-01,1.7650e+00,-4.2308e+00,-9.0161e-01,1.9000e+00,-4.2176e+00,-8.9713e-01,1.7650e+00,-4.2176e+00,-8.9713e-01,1.9000e+00,-4.2039e+00,-8.9441e-01,1.7650e+00,-4.2039e+00,-8.9441e-01,1.9000e+00,-4.1900e+00,-8.9350e-01,1.7650e+00,-4.1900e+00,-8.9350e-01,1.9000e+00,-4.1761e+00,-8.9441e-01,1.7650e+00,-4.1761e+00,-8.9441e-01,1.9000e+00,-4.1624e+00,-8.9713e-01,1.7650e+00,-4.1624e+00,-8.9713e-01,1.9000e+00,-4.1492e+00,-9.0161e-01,1.7650e+00,-4.1492e+00,-9.0161e-01,1.9000e+00,-4.1368e+00,-9.0777e-01,1.7650e+00,-4.1368e+00,-9.0777e-01,1.9000e+00,-4.1252e+00,-9.1551e-01,1.7650e+00,-4.1252e+00,-9.1551e-01,1.9000e+00,-4.1147e+00,-9.2469e-01,1.7650e+00,-4.1147e+00,-9.2469e-01,1.9000e+00,-4.1055e+00,-9.3517e-01,1.7650e+00,-4.1055e+00,-9.3517e-01,1.9000e+00,-4.0978e+00,-9.4675e-01,1.7650e+00,-4.0978e+00,-9.4675e-01,1.9000e+00,-4.0916e+00,-9.5924e-01,1.7650e+00,-4.0916e+00,-9.5924e-01,1.9000e+00,-4.0871e+00,-9.7244e-01,1.7650e+00,-4.0871e+00,-9.7244e-01,1.9000e+00,-4.0844e+00,-9.8610e-01,1.7650e+00,-4.0844e+00,-9.8610e-01,1.9000e+00,-4.0835e+00,-1.0000e+00,1.7650e+00,-4.0835e+00,-1.0000e+00,1.9000e+00,-4.0844e+00,-1.0139e+00,1.7650e+00,-4.0844e+00,-1.0139e+00,1.9000e+00,-4.0871e+00,-1.0276e+00,1.7650e+00,-4.0871e+00,-1.0276e+00,1.9000e+00,-4.0916e+00,-1.0408e+00,1.7650e+00,-4.0916e+00,-1.0408e+00,1.9000e+00,-4.0978e+00,-1.0533e+00,1.7650e+00,-4.0978e+00,-1.0533e+00,1.9000e+00,-4.1055e+00,-1.0648e+00,1.7650e+00,-4.1055e+00,-1.0648e+00,1.9000e+00,-4.1147e+00,-1.0753e+00,1.7650e+00,-4.1147e+00,-1.0753e+00,1.9000e+00,-4.1252e+00,-1.0845e+00,1.7650e+00,-4.1252e+00,-1.0845e+00,1.9000e+00,-4.1368e+00,-1.0922e+00,1.7650e+00,-4.1368e+00,-1.0922e+00,1.9000e+00,-4.1492e+00,-1.0984e+00,1.7650e+00,-4.1492e+00,-1.0984e+00,1.9000e+00,-4.1624e+00,-1.1029e+00,1.7650e+00,-4.1624e+00,-1.1029e+00,1.9000e+00,-4.1761e+00,-1.1056e+00,1.7650e+00,-4.1761e+00,-1.1056e+00,1.9000e+00});
			return Coordinate_7_378_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #379, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_379_vector()
		{
			MFVec3f Normal_7_379_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_379_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #385, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_385_point()
		{
			MFVec3f Coordinate_7_385_point = new MFVec3f(new double[] {-4.1900e+00,8.9350e-01,1.7650e+00,-4.1900e+00,8.9350e-01,1.9000e+00,-4.2039e+00,8.9441e-01,1.7650e+00,-4.2039e+00,8.9441e-01,1.9000e+00,-4.2176e+00,8.9713e-01,1.7650e+00,-4.2176e+00,8.9713e-01,1.9000e+00,-4.2308e+00,9.0161e-01,1.7650e+00,-4.2308e+00,9.0161e-01,1.9000e+00,-4.2433e+00,9.0777e-01,1.7650e+00,-4.2433e+00,9.0777e-01,1.9000e+00,-4.2548e+00,9.1551e-01,1.7650e+00,-4.2548e+00,9.1551e-01,1.9000e+00,-4.2653e+00,9.2469e-01,1.7650e+00,-4.2653e+00,9.2469e-01,1.9000e+00,-4.2745e+00,9.3517e-01,1.7650e+00,-4.2745e+00,9.3517e-01,1.9000e+00,-4.2822e+00,9.4675e-01,1.7650e+00,-4.2822e+00,9.4675e-01,1.9000e+00,-4.2884e+00,9.5924e-01,1.7650e+00,-4.2884e+00,9.5924e-01,1.9000e+00,-4.2929e+00,9.7244e-01,1.7650e+00,-4.2929e+00,9.7244e-01,1.9000e+00,-4.2956e+00,9.8610e-01,1.7650e+00,-4.2956e+00,9.8610e-01,1.9000e+00,-4.2965e+00,1.0000e+00,1.7650e+00,-4.2965e+00,1.0000e+00,1.9000e+00,-4.2956e+00,1.0139e+00,1.7650e+00,-4.2956e+00,1.0139e+00,1.9000e+00,-4.2929e+00,1.0276e+00,1.7650e+00,-4.2929e+00,1.0276e+00,1.9000e+00,-4.2884e+00,1.0408e+00,1.7650e+00,-4.2884e+00,1.0408e+00,1.9000e+00,-4.2822e+00,1.0533e+00,1.7650e+00,-4.2822e+00,1.0533e+00,1.9000e+00,-4.2745e+00,1.0648e+00,1.7650e+00,-4.2745e+00,1.0648e+00,1.9000e+00,-4.2653e+00,1.0753e+00,1.7650e+00,-4.2653e+00,1.0753e+00,1.9000e+00,-4.2548e+00,1.0845e+00,1.7650e+00,-4.2548e+00,1.0845e+00,1.9000e+00,-4.2433e+00,1.0922e+00,1.7650e+00,-4.2433e+00,1.0922e+00,1.9000e+00,-4.2308e+00,1.0984e+00,1.7650e+00,-4.2308e+00,1.0984e+00,1.9000e+00,-4.2176e+00,1.1029e+00,1.7650e+00,-4.2176e+00,1.1029e+00,1.9000e+00,-4.2039e+00,1.1056e+00,1.7650e+00,-4.2039e+00,1.1056e+00,1.9000e+00,-4.1900e+00,1.1065e+00,1.7650e+00,-4.1900e+00,1.1065e+00,1.9000e+00,-4.1761e+00,1.1056e+00,1.7650e+00,-4.1761e+00,1.1056e+00,1.9000e+00,-4.1624e+00,1.1029e+00,1.7650e+00,-4.1624e+00,1.1029e+00,1.9000e+00,-4.1492e+00,1.0984e+00,1.7650e+00,-4.1492e+00,1.0984e+00,1.9000e+00,-4.1368e+00,1.0922e+00,1.7650e+00,-4.1368e+00,1.0922e+00,1.9000e+00,-4.1252e+00,1.0845e+00,1.7650e+00,-4.1252e+00,1.0845e+00,1.9000e+00,-4.1147e+00,1.0753e+00,1.7650e+00,-4.1147e+00,1.0753e+00,1.9000e+00,-4.1055e+00,1.0648e+00,1.7650e+00,-4.1055e+00,1.0648e+00,1.9000e+00,-4.0978e+00,1.0533e+00,1.7650e+00,-4.0978e+00,1.0533e+00,1.9000e+00,-4.0916e+00,1.0408e+00,1.7650e+00,-4.0916e+00,1.0408e+00,1.9000e+00,-4.0871e+00,1.0276e+00,1.7650e+00,-4.0871e+00,1.0276e+00,1.9000e+00,-4.0844e+00,1.0139e+00,1.7650e+00,-4.0844e+00,1.0139e+00,1.9000e+00,-4.0835e+00,1.0000e+00,1.7650e+00,-4.0835e+00,1.0000e+00,1.9000e+00,-4.0844e+00,9.8610e-01,1.7650e+00,-4.0844e+00,9.8610e-01,1.9000e+00,-4.0871e+00,9.7244e-01,1.7650e+00,-4.0871e+00,9.7244e-01,1.9000e+00,-4.0916e+00,9.5924e-01,1.7650e+00,-4.0916e+00,9.5924e-01,1.9000e+00,-4.0978e+00,9.4675e-01,1.7650e+00,-4.0978e+00,9.4675e-01,1.9000e+00,-4.1055e+00,9.3517e-01,1.7650e+00,-4.1055e+00,9.3517e-01,1.9000e+00,-4.1147e+00,9.2469e-01,1.7650e+00,-4.1147e+00,9.2469e-01,1.9000e+00,-4.1252e+00,9.1551e-01,1.7650e+00,-4.1252e+00,9.1551e-01,1.9000e+00,-4.1368e+00,9.0777e-01,1.7650e+00,-4.1368e+00,9.0777e-01,1.9000e+00,-4.1492e+00,9.0161e-01,1.7650e+00,-4.1492e+00,9.0161e-01,1.9000e+00,-4.1624e+00,8.9713e-01,1.7650e+00,-4.1624e+00,8.9713e-01,1.9000e+00,-4.1761e+00,8.9441e-01,1.7650e+00,-4.1761e+00,8.9441e-01,1.9000e+00});
			return Coordinate_7_385_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #386, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_386_vector()
		{
			MFVec3f Normal_7_386_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_386_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #392, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_392_point()
		{
			MFVec3f Coordinate_7_392_point = new MFVec3f(new double[] {-3.2500e+00,2.0835e+00,1.7650e+00,-3.2500e+00,2.0835e+00,1.9000e+00,-3.2639e+00,2.0844e+00,1.7650e+00,-3.2639e+00,2.0844e+00,1.9000e+00,-3.2776e+00,2.0871e+00,1.7650e+00,-3.2776e+00,2.0871e+00,1.9000e+00,-3.2908e+00,2.0916e+00,1.7650e+00,-3.2908e+00,2.0916e+00,1.9000e+00,-3.3032e+00,2.0978e+00,1.7650e+00,-3.3032e+00,2.0978e+00,1.9000e+00,-3.3148e+00,2.1055e+00,1.7650e+00,-3.3148e+00,2.1055e+00,1.9000e+00,-3.3253e+00,2.1147e+00,1.7650e+00,-3.3253e+00,2.1147e+00,1.9000e+00,-3.3345e+00,2.1252e+00,1.7650e+00,-3.3345e+00,2.1252e+00,1.9000e+00,-3.3422e+00,2.1368e+00,1.7650e+00,-3.3422e+00,2.1368e+00,1.9000e+00,-3.3484e+00,2.1492e+00,1.7650e+00,-3.3484e+00,2.1492e+00,1.9000e+00,-3.3529e+00,2.1624e+00,1.7650e+00,-3.3529e+00,2.1624e+00,1.9000e+00,-3.3556e+00,2.1761e+00,1.7650e+00,-3.3556e+00,2.1761e+00,1.9000e+00,-3.3565e+00,2.1900e+00,1.7650e+00,-3.3565e+00,2.1900e+00,1.9000e+00,-3.3556e+00,2.2039e+00,1.7650e+00,-3.3556e+00,2.2039e+00,1.9000e+00,-3.3529e+00,2.2176e+00,1.7650e+00,-3.3529e+00,2.2176e+00,1.9000e+00,-3.3484e+00,2.2308e+00,1.7650e+00,-3.3484e+00,2.2308e+00,1.9000e+00,-3.3422e+00,2.2432e+00,1.7650e+00,-3.3422e+00,2.2432e+00,1.9000e+00,-3.3345e+00,2.2548e+00,1.7650e+00,-3.3345e+00,2.2548e+00,1.9000e+00,-3.3253e+00,2.2653e+00,1.7650e+00,-3.3253e+00,2.2653e+00,1.9000e+00,-3.3148e+00,2.2745e+00,1.7650e+00,-3.3148e+00,2.2745e+00,1.9000e+00,-3.3033e+00,2.2822e+00,1.7650e+00,-3.3033e+00,2.2822e+00,1.9000e+00,-3.2908e+00,2.2884e+00,1.7650e+00,-3.2908e+00,2.2884e+00,1.9000e+00,-3.2776e+00,2.2929e+00,1.7650e+00,-3.2776e+00,2.2929e+00,1.9000e+00,-3.2639e+00,2.2956e+00,1.7650e+00,-3.2639e+00,2.2956e+00,1.9000e+00,-3.2500e+00,2.2965e+00,1.7650e+00,-3.2500e+00,2.2965e+00,1.9000e+00,-3.2361e+00,2.2956e+00,1.7650e+00,-3.2361e+00,2.2956e+00,1.9000e+00,-3.2224e+00,2.2929e+00,1.7650e+00,-3.2224e+00,2.2929e+00,1.9000e+00,-3.2092e+00,2.2884e+00,1.7650e+00,-3.2092e+00,2.2884e+00,1.9000e+00,-3.1968e+00,2.2822e+00,1.7650e+00,-3.1968e+00,2.2822e+00,1.9000e+00,-3.1852e+00,2.2745e+00,1.7650e+00,-3.1852e+00,2.2745e+00,1.9000e+00,-3.1747e+00,2.2653e+00,1.7650e+00,-3.1747e+00,2.2653e+00,1.9000e+00,-3.1655e+00,2.2548e+00,1.7650e+00,-3.1655e+00,2.2548e+00,1.9000e+00,-3.1578e+00,2.2433e+00,1.7650e+00,-3.1578e+00,2.2433e+00,1.9000e+00,-3.1516e+00,2.2308e+00,1.7650e+00,-3.1516e+00,2.2308e+00,1.9000e+00,-3.1471e+00,2.2176e+00,1.7650e+00,-3.1471e+00,2.2176e+00,1.9000e+00,-3.1444e+00,2.2039e+00,1.7650e+00,-3.1444e+00,2.2039e+00,1.9000e+00,-3.1435e+00,2.1900e+00,1.7650e+00,-3.1435e+00,2.1900e+00,1.9000e+00,-3.1444e+00,2.1761e+00,1.7650e+00,-3.1444e+00,2.1761e+00,1.9000e+00,-3.1471e+00,2.1624e+00,1.7650e+00,-3.1471e+00,2.1624e+00,1.9000e+00,-3.1516e+00,2.1492e+00,1.7650e+00,-3.1516e+00,2.1492e+00,1.9000e+00,-3.1578e+00,2.1368e+00,1.7650e+00,-3.1578e+00,2.1368e+00,1.9000e+00,-3.1655e+00,2.1252e+00,1.7650e+00,-3.1655e+00,2.1252e+00,1.9000e+00,-3.1747e+00,2.1147e+00,1.7650e+00,-3.1747e+00,2.1147e+00,1.9000e+00,-3.1852e+00,2.1055e+00,1.7650e+00,-3.1852e+00,2.1055e+00,1.9000e+00,-3.1967e+00,2.0978e+00,1.7650e+00,-3.1967e+00,2.0978e+00,1.9000e+00,-3.2092e+00,2.0916e+00,1.7650e+00,-3.2092e+00,2.0916e+00,1.9000e+00,-3.2224e+00,2.0871e+00,1.7650e+00,-3.2224e+00,2.0871e+00,1.9000e+00,-3.2361e+00,2.0844e+00,1.7650e+00,-3.2361e+00,2.0844e+00,1.9000e+00});
			return Coordinate_7_392_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #393, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_393_vector()
		{
			MFVec3f Normal_7_393_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_393_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #399, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_399_point()
		{
			MFVec3f Coordinate_7_399_point = new MFVec3f(new double[] {-1.5000e+00,2.0835e+00,1.7650e+00,-1.5000e+00,2.0835e+00,1.9000e+00,-1.5139e+00,2.0844e+00,1.7650e+00,-1.5139e+00,2.0844e+00,1.9000e+00,-1.5276e+00,2.0871e+00,1.7650e+00,-1.5276e+00,2.0871e+00,1.9000e+00,-1.5408e+00,2.0916e+00,1.7650e+00,-1.5408e+00,2.0916e+00,1.9000e+00,-1.5533e+00,2.0978e+00,1.7650e+00,-1.5533e+00,2.0978e+00,1.9000e+00,-1.5648e+00,2.1055e+00,1.7650e+00,-1.5648e+00,2.1055e+00,1.9000e+00,-1.5753e+00,2.1147e+00,1.7650e+00,-1.5753e+00,2.1147e+00,1.9000e+00,-1.5845e+00,2.1252e+00,1.7650e+00,-1.5845e+00,2.1252e+00,1.9000e+00,-1.5922e+00,2.1368e+00,1.7650e+00,-1.5922e+00,2.1368e+00,1.9000e+00,-1.5984e+00,2.1492e+00,1.7650e+00,-1.5984e+00,2.1492e+00,1.9000e+00,-1.6029e+00,2.1624e+00,1.7650e+00,-1.6029e+00,2.1624e+00,1.9000e+00,-1.6056e+00,2.1761e+00,1.7650e+00,-1.6056e+00,2.1761e+00,1.9000e+00,-1.6065e+00,2.1900e+00,1.7650e+00,-1.6065e+00,2.1900e+00,1.9000e+00,-1.6056e+00,2.2039e+00,1.7650e+00,-1.6056e+00,2.2039e+00,1.9000e+00,-1.6029e+00,2.2176e+00,1.7650e+00,-1.6029e+00,2.2176e+00,1.9000e+00,-1.5984e+00,2.2308e+00,1.7650e+00,-1.5984e+00,2.2308e+00,1.9000e+00,-1.5922e+00,2.2432e+00,1.7650e+00,-1.5922e+00,2.2432e+00,1.9000e+00,-1.5845e+00,2.2548e+00,1.7650e+00,-1.5845e+00,2.2548e+00,1.9000e+00,-1.5753e+00,2.2653e+00,1.7650e+00,-1.5753e+00,2.2653e+00,1.9000e+00,-1.5648e+00,2.2745e+00,1.7650e+00,-1.5648e+00,2.2745e+00,1.9000e+00,-1.5533e+00,2.2822e+00,1.7650e+00,-1.5533e+00,2.2822e+00,1.9000e+00,-1.5408e+00,2.2884e+00,1.7650e+00,-1.5408e+00,2.2884e+00,1.9000e+00,-1.5276e+00,2.2929e+00,1.7650e+00,-1.5276e+00,2.2929e+00,1.9000e+00,-1.5139e+00,2.2956e+00,1.7650e+00,-1.5139e+00,2.2956e+00,1.9000e+00,-1.5000e+00,2.2965e+00,1.7650e+00,-1.5000e+00,2.2965e+00,1.9000e+00,-1.4861e+00,2.2956e+00,1.7650e+00,-1.4861e+00,2.2956e+00,1.9000e+00,-1.4724e+00,2.2929e+00,1.7650e+00,-1.4724e+00,2.2929e+00,1.9000e+00,-1.4592e+00,2.2884e+00,1.7650e+00,-1.4592e+00,2.2884e+00,1.9000e+00,-1.4467e+00,2.2822e+00,1.7650e+00,-1.4467e+00,2.2822e+00,1.9000e+00,-1.4352e+00,2.2745e+00,1.7650e+00,-1.4352e+00,2.2745e+00,1.9000e+00,-1.4247e+00,2.2653e+00,1.7650e+00,-1.4247e+00,2.2653e+00,1.9000e+00,-1.4155e+00,2.2548e+00,1.7650e+00,-1.4155e+00,2.2548e+00,1.9000e+00,-1.4078e+00,2.2433e+00,1.7650e+00,-1.4078e+00,2.2433e+00,1.9000e+00,-1.4016e+00,2.2308e+00,1.7650e+00,-1.4016e+00,2.2308e+00,1.9000e+00,-1.3971e+00,2.2176e+00,1.7650e+00,-1.3971e+00,2.2176e+00,1.9000e+00,-1.3944e+00,2.2039e+00,1.7650e+00,-1.3944e+00,2.2039e+00,1.9000e+00,-1.3935e+00,2.1900e+00,1.7650e+00,-1.3935e+00,2.1900e+00,1.9000e+00,-1.3944e+00,2.1761e+00,1.7650e+00,-1.3944e+00,2.1761e+00,1.9000e+00,-1.3971e+00,2.1624e+00,1.7650e+00,-1.3971e+00,2.1624e+00,1.9000e+00,-1.4016e+00,2.1492e+00,1.7650e+00,-1.4016e+00,2.1492e+00,1.9000e+00,-1.4078e+00,2.1368e+00,1.7650e+00,-1.4078e+00,2.1368e+00,1.9000e+00,-1.4155e+00,2.1252e+00,1.7650e+00,-1.4155e+00,2.1252e+00,1.9000e+00,-1.4247e+00,2.1147e+00,1.7650e+00,-1.4247e+00,2.1147e+00,1.9000e+00,-1.4352e+00,2.1055e+00,1.7650e+00,-1.4352e+00,2.1055e+00,1.9000e+00,-1.4467e+00,2.0978e+00,1.7650e+00,-1.4467e+00,2.0978e+00,1.9000e+00,-1.4592e+00,2.0916e+00,1.7650e+00,-1.4592e+00,2.0916e+00,1.9000e+00,-1.4724e+00,2.0871e+00,1.7650e+00,-1.4724e+00,2.0871e+00,1.9000e+00,-1.4861e+00,2.0844e+00,1.7650e+00,-1.4861e+00,2.0844e+00,1.9000e+00});
			return Coordinate_7_399_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #400, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_400_vector()
		{
			MFVec3f Normal_7_400_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_400_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #406, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_406_point()
		{
			MFVec3f Coordinate_7_406_point = new MFVec3f(new double[] {2.5000e-01,2.0835e+00,1.7650e+00,2.5000e-01,2.0835e+00,1.9000e+00,2.3610e-01,2.0844e+00,1.7650e+00,2.3610e-01,2.0844e+00,1.9000e+00,2.2244e-01,2.0871e+00,1.7650e+00,2.2244e-01,2.0871e+00,1.9000e+00,2.0924e-01,2.0916e+00,1.7650e+00,2.0924e-01,2.0916e+00,1.9000e+00,1.9675e-01,2.0978e+00,1.7650e+00,1.9675e-01,2.0978e+00,1.9000e+00,1.8517e-01,2.1055e+00,1.7650e+00,1.8517e-01,2.1055e+00,1.9000e+00,1.7469e-01,2.1147e+00,1.7650e+00,1.7469e-01,2.1147e+00,1.9000e+00,1.6551e-01,2.1252e+00,1.7650e+00,1.6551e-01,2.1252e+00,1.9000e+00,1.5777e-01,2.1368e+00,1.7650e+00,1.5777e-01,2.1368e+00,1.9000e+00,1.5161e-01,2.1492e+00,1.7650e+00,1.5161e-01,2.1492e+00,1.9000e+00,1.4713e-01,2.1624e+00,1.7650e+00,1.4713e-01,2.1624e+00,1.9000e+00,1.4441e-01,2.1761e+00,1.7650e+00,1.4441e-01,2.1761e+00,1.9000e+00,1.4350e-01,2.1900e+00,1.7650e+00,1.4350e-01,2.1900e+00,1.9000e+00,1.4441e-01,2.2039e+00,1.7650e+00,1.4441e-01,2.2039e+00,1.9000e+00,1.4713e-01,2.2176e+00,1.7650e+00,1.4713e-01,2.2176e+00,1.9000e+00,1.5161e-01,2.2308e+00,1.7650e+00,1.5161e-01,2.2308e+00,1.9000e+00,1.5777e-01,2.2432e+00,1.7650e+00,1.5777e-01,2.2432e+00,1.9000e+00,1.6551e-01,2.2548e+00,1.7650e+00,1.6551e-01,2.2548e+00,1.9000e+00,1.7469e-01,2.2653e+00,1.7650e+00,1.7469e-01,2.2653e+00,1.9000e+00,1.8517e-01,2.2745e+00,1.7650e+00,1.8517e-01,2.2745e+00,1.9000e+00,1.9675e-01,2.2822e+00,1.7650e+00,1.9675e-01,2.2822e+00,1.9000e+00,2.0924e-01,2.2884e+00,1.7650e+00,2.0924e-01,2.2884e+00,1.9000e+00,2.2244e-01,2.2929e+00,1.7650e+00,2.2244e-01,2.2929e+00,1.9000e+00,2.3610e-01,2.2956e+00,1.7650e+00,2.3610e-01,2.2956e+00,1.9000e+00,2.5000e-01,2.2965e+00,1.7650e+00,2.5000e-01,2.2965e+00,1.9000e+00,2.6390e-01,2.2956e+00,1.7650e+00,2.6390e-01,2.2956e+00,1.9000e+00,2.7756e-01,2.2929e+00,1.7650e+00,2.7756e-01,2.2929e+00,1.9000e+00,2.9076e-01,2.2884e+00,1.7650e+00,2.9076e-01,2.2884e+00,1.9000e+00,3.0325e-01,2.2822e+00,1.7650e+00,3.0325e-01,2.2822e+00,1.9000e+00,3.1483e-01,2.2745e+00,1.7650e+00,3.1483e-01,2.2745e+00,1.9000e+00,3.2531e-01,2.2653e+00,1.7650e+00,3.2531e-01,2.2653e+00,1.9000e+00,3.3449e-01,2.2548e+00,1.7650e+00,3.3449e-01,2.2548e+00,1.9000e+00,3.4223e-01,2.2433e+00,1.7650e+00,3.4223e-01,2.2433e+00,1.9000e+00,3.4839e-01,2.2308e+00,1.7650e+00,3.4839e-01,2.2308e+00,1.9000e+00,3.5287e-01,2.2176e+00,1.7650e+00,3.5287e-01,2.2176e+00,1.9000e+00,3.5559e-01,2.2039e+00,1.7650e+00,3.5559e-01,2.2039e+00,1.9000e+00,3.5650e-01,2.1900e+00,1.7650e+00,3.5650e-01,2.1900e+00,1.9000e+00,3.5559e-01,2.1761e+00,1.7650e+00,3.5559e-01,2.1761e+00,1.9000e+00,3.5287e-01,2.1624e+00,1.7650e+00,3.5287e-01,2.1624e+00,1.9000e+00,3.4839e-01,2.1492e+00,1.7650e+00,3.4839e-01,2.1492e+00,1.9000e+00,3.4223e-01,2.1368e+00,1.7650e+00,3.4223e-01,2.1368e+00,1.9000e+00,3.3449e-01,2.1252e+00,1.7650e+00,3.3449e-01,2.1252e+00,1.9000e+00,3.2531e-01,2.1147e+00,1.7650e+00,3.2531e-01,2.1147e+00,1.9000e+00,3.1483e-01,2.1055e+00,1.7650e+00,3.1483e-01,2.1055e+00,1.9000e+00,3.0325e-01,2.0978e+00,1.7650e+00,3.0325e-01,2.0978e+00,1.9000e+00,2.9076e-01,2.0916e+00,1.7650e+00,2.9076e-01,2.0916e+00,1.9000e+00,2.7756e-01,2.0871e+00,1.7650e+00,2.7756e-01,2.0871e+00,1.9000e+00,2.6390e-01,2.0844e+00,1.7650e+00,2.6390e-01,2.0844e+00,1.9000e+00});
			return Coordinate_7_406_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #407, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_407_vector()
		{
			MFVec3f Normal_7_407_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_407_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #413, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_413_point()
		{
			MFVec3f Coordinate_7_413_point = new MFVec3f(new double[] {1.1900e+00,8.9350e-01,1.7650e+00,1.1900e+00,8.9350e-01,1.9000e+00,1.1761e+00,8.9441e-01,1.7650e+00,1.1761e+00,8.9441e-01,1.9000e+00,1.1624e+00,8.9713e-01,1.7650e+00,1.1624e+00,8.9713e-01,1.9000e+00,1.1492e+00,9.0161e-01,1.7650e+00,1.1492e+00,9.0161e-01,1.9000e+00,1.1367e+00,9.0777e-01,1.7650e+00,1.1367e+00,9.0777e-01,1.9000e+00,1.1252e+00,9.1551e-01,1.7650e+00,1.1252e+00,9.1551e-01,1.9000e+00,1.1147e+00,9.2469e-01,1.7650e+00,1.1147e+00,9.2469e-01,1.9000e+00,1.1055e+00,9.3517e-01,1.7650e+00,1.1055e+00,9.3517e-01,1.9000e+00,1.0978e+00,9.4675e-01,1.7650e+00,1.0978e+00,9.4675e-01,1.9000e+00,1.0916e+00,9.5924e-01,1.7650e+00,1.0916e+00,9.5924e-01,1.9000e+00,1.0871e+00,9.7244e-01,1.7650e+00,1.0871e+00,9.7244e-01,1.9000e+00,1.0844e+00,9.8610e-01,1.7650e+00,1.0844e+00,9.8610e-01,1.9000e+00,1.0835e+00,1.0000e+00,1.7650e+00,1.0835e+00,1.0000e+00,1.9000e+00,1.0844e+00,1.0139e+00,1.7650e+00,1.0844e+00,1.0139e+00,1.9000e+00,1.0871e+00,1.0276e+00,1.7650e+00,1.0871e+00,1.0276e+00,1.9000e+00,1.0916e+00,1.0408e+00,1.7650e+00,1.0916e+00,1.0408e+00,1.9000e+00,1.0978e+00,1.0533e+00,1.7650e+00,1.0978e+00,1.0533e+00,1.9000e+00,1.1055e+00,1.0648e+00,1.7650e+00,1.1055e+00,1.0648e+00,1.9000e+00,1.1147e+00,1.0753e+00,1.7650e+00,1.1147e+00,1.0753e+00,1.9000e+00,1.1252e+00,1.0845e+00,1.7650e+00,1.1252e+00,1.0845e+00,1.9000e+00,1.1367e+00,1.0922e+00,1.7650e+00,1.1367e+00,1.0922e+00,1.9000e+00,1.1492e+00,1.0984e+00,1.7650e+00,1.1492e+00,1.0984e+00,1.9000e+00,1.1624e+00,1.1029e+00,1.7650e+00,1.1624e+00,1.1029e+00,1.9000e+00,1.1761e+00,1.1056e+00,1.7650e+00,1.1761e+00,1.1056e+00,1.9000e+00,1.1900e+00,1.1065e+00,1.7650e+00,1.1900e+00,1.1065e+00,1.9000e+00,1.2039e+00,1.1056e+00,1.7650e+00,1.2039e+00,1.1056e+00,1.9000e+00,1.2176e+00,1.1029e+00,1.7650e+00,1.2176e+00,1.1029e+00,1.9000e+00,1.2308e+00,1.0984e+00,1.7650e+00,1.2308e+00,1.0984e+00,1.9000e+00,1.2432e+00,1.0922e+00,1.7650e+00,1.2432e+00,1.0922e+00,1.9000e+00,1.2548e+00,1.0845e+00,1.7650e+00,1.2548e+00,1.0845e+00,1.9000e+00,1.2653e+00,1.0753e+00,1.7650e+00,1.2653e+00,1.0753e+00,1.9000e+00,1.2745e+00,1.0648e+00,1.7650e+00,1.2745e+00,1.0648e+00,1.9000e+00,1.2822e+00,1.0533e+00,1.7650e+00,1.2822e+00,1.0533e+00,1.9000e+00,1.2884e+00,1.0408e+00,1.7650e+00,1.2884e+00,1.0408e+00,1.9000e+00,1.2929e+00,1.0276e+00,1.7650e+00,1.2929e+00,1.0276e+00,1.9000e+00,1.2956e+00,1.0139e+00,1.7650e+00,1.2956e+00,1.0139e+00,1.9000e+00,1.2965e+00,1.0000e+00,1.7650e+00,1.2965e+00,1.0000e+00,1.9000e+00,1.2956e+00,9.8610e-01,1.7650e+00,1.2956e+00,9.8610e-01,1.9000e+00,1.2929e+00,9.7244e-01,1.7650e+00,1.2929e+00,9.7244e-01,1.9000e+00,1.2884e+00,9.5924e-01,1.7650e+00,1.2884e+00,9.5924e-01,1.9000e+00,1.2822e+00,9.4675e-01,1.7650e+00,1.2822e+00,9.4675e-01,1.9000e+00,1.2745e+00,9.3517e-01,1.7650e+00,1.2745e+00,9.3517e-01,1.9000e+00,1.2653e+00,9.2469e-01,1.7650e+00,1.2653e+00,9.2469e-01,1.9000e+00,1.2548e+00,9.1551e-01,1.7650e+00,1.2548e+00,9.1551e-01,1.9000e+00,1.2432e+00,9.0777e-01,1.7650e+00,1.2432e+00,9.0777e-01,1.9000e+00,1.2308e+00,9.0161e-01,1.7650e+00,1.2308e+00,9.0161e-01,1.9000e+00,1.2176e+00,8.9713e-01,1.7650e+00,1.2176e+00,8.9713e-01,1.9000e+00,1.2039e+00,8.9441e-01,1.7650e+00,1.2039e+00,8.9441e-01,1.9000e+00});
			return Coordinate_7_413_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #414, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_414_vector()
		{
			MFVec3f Normal_7_414_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_414_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #420, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_420_point()
		{
			MFVec3f Coordinate_7_420_point = new MFVec3f(new double[] {1.1900e+00,-1.1065e+00,1.7650e+00,1.1900e+00,-1.1065e+00,1.9000e+00,1.1761e+00,-1.1056e+00,1.7650e+00,1.1761e+00,-1.1056e+00,1.9000e+00,1.1624e+00,-1.1029e+00,1.7650e+00,1.1624e+00,-1.1029e+00,1.9000e+00,1.1492e+00,-1.0984e+00,1.7650e+00,1.1492e+00,-1.0984e+00,1.9000e+00,1.1367e+00,-1.0922e+00,1.7650e+00,1.1367e+00,-1.0922e+00,1.9000e+00,1.1252e+00,-1.0845e+00,1.7650e+00,1.1252e+00,-1.0845e+00,1.9000e+00,1.1147e+00,-1.0753e+00,1.7650e+00,1.1147e+00,-1.0753e+00,1.9000e+00,1.1055e+00,-1.0648e+00,1.7650e+00,1.1055e+00,-1.0648e+00,1.9000e+00,1.0978e+00,-1.0533e+00,1.7650e+00,1.0978e+00,-1.0533e+00,1.9000e+00,1.0916e+00,-1.0408e+00,1.7650e+00,1.0916e+00,-1.0408e+00,1.9000e+00,1.0871e+00,-1.0276e+00,1.7650e+00,1.0871e+00,-1.0276e+00,1.9000e+00,1.0844e+00,-1.0139e+00,1.7650e+00,1.0844e+00,-1.0139e+00,1.9000e+00,1.0835e+00,-1.0000e+00,1.7650e+00,1.0835e+00,-1.0000e+00,1.9000e+00,1.0844e+00,-9.8610e-01,1.7650e+00,1.0844e+00,-9.8610e-01,1.9000e+00,1.0871e+00,-9.7244e-01,1.7650e+00,1.0871e+00,-9.7244e-01,1.9000e+00,1.0916e+00,-9.5924e-01,1.7650e+00,1.0916e+00,-9.5924e-01,1.9000e+00,1.0978e+00,-9.4675e-01,1.7650e+00,1.0978e+00,-9.4675e-01,1.9000e+00,1.1055e+00,-9.3517e-01,1.7650e+00,1.1055e+00,-9.3517e-01,1.9000e+00,1.1147e+00,-9.2469e-01,1.7650e+00,1.1147e+00,-9.2469e-01,1.9000e+00,1.1252e+00,-9.1551e-01,1.7650e+00,1.1252e+00,-9.1551e-01,1.9000e+00,1.1367e+00,-9.0777e-01,1.7650e+00,1.1367e+00,-9.0777e-01,1.9000e+00,1.1492e+00,-9.0161e-01,1.7650e+00,1.1492e+00,-9.0161e-01,1.9000e+00,1.1624e+00,-8.9713e-01,1.7650e+00,1.1624e+00,-8.9713e-01,1.9000e+00,1.1761e+00,-8.9441e-01,1.7650e+00,1.1761e+00,-8.9441e-01,1.9000e+00,1.1900e+00,-8.9350e-01,1.7650e+00,1.1900e+00,-8.9350e-01,1.9000e+00,1.2039e+00,-8.9441e-01,1.7650e+00,1.2039e+00,-8.9441e-01,1.9000e+00,1.2176e+00,-8.9713e-01,1.7650e+00,1.2176e+00,-8.9713e-01,1.9000e+00,1.2308e+00,-9.0161e-01,1.7650e+00,1.2308e+00,-9.0161e-01,1.9000e+00,1.2432e+00,-9.0777e-01,1.7650e+00,1.2432e+00,-9.0777e-01,1.9000e+00,1.2548e+00,-9.1551e-01,1.7650e+00,1.2548e+00,-9.1551e-01,1.9000e+00,1.2653e+00,-9.2469e-01,1.7650e+00,1.2653e+00,-9.2469e-01,1.9000e+00,1.2745e+00,-9.3517e-01,1.7650e+00,1.2745e+00,-9.3517e-01,1.9000e+00,1.2822e+00,-9.4675e-01,1.7650e+00,1.2822e+00,-9.4675e-01,1.9000e+00,1.2884e+00,-9.5924e-01,1.7650e+00,1.2884e+00,-9.5924e-01,1.9000e+00,1.2929e+00,-9.7244e-01,1.7650e+00,1.2929e+00,-9.7244e-01,1.9000e+00,1.2956e+00,-9.8610e-01,1.7650e+00,1.2956e+00,-9.8610e-01,1.9000e+00,1.2965e+00,-1.0000e+00,1.7650e+00,1.2965e+00,-1.0000e+00,1.9000e+00,1.2956e+00,-1.0139e+00,1.7650e+00,1.2956e+00,-1.0139e+00,1.9000e+00,1.2929e+00,-1.0276e+00,1.7650e+00,1.2929e+00,-1.0276e+00,1.9000e+00,1.2884e+00,-1.0408e+00,1.7650e+00,1.2884e+00,-1.0408e+00,1.9000e+00,1.2822e+00,-1.0533e+00,1.7650e+00,1.2822e+00,-1.0533e+00,1.9000e+00,1.2745e+00,-1.0648e+00,1.7650e+00,1.2745e+00,-1.0648e+00,1.9000e+00,1.2653e+00,-1.0753e+00,1.7650e+00,1.2653e+00,-1.0753e+00,1.9000e+00,1.2548e+00,-1.0845e+00,1.7650e+00,1.2548e+00,-1.0845e+00,1.9000e+00,1.2432e+00,-1.0922e+00,1.7650e+00,1.2432e+00,-1.0922e+00,1.9000e+00,1.2308e+00,-1.0984e+00,1.7650e+00,1.2308e+00,-1.0984e+00,1.9000e+00,1.2176e+00,-1.1029e+00,1.7650e+00,1.2176e+00,-1.1029e+00,1.9000e+00,1.2039e+00,-1.1056e+00,1.7650e+00,1.2039e+00,-1.1056e+00,1.9000e+00});
			return Coordinate_7_420_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #421, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_421_vector()
		{
			MFVec3f Normal_7_421_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_421_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #427, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_427_point()
		{
			MFVec3f Coordinate_7_427_point = new MFVec3f(new double[] {2.5000e-01,-2.2965e+00,1.7650e+00,2.5000e-01,-2.2965e+00,1.9000e+00,2.3610e-01,-2.2956e+00,1.7650e+00,2.3610e-01,-2.2956e+00,1.9000e+00,2.2244e-01,-2.2929e+00,1.7650e+00,2.2244e-01,-2.2929e+00,1.9000e+00,2.0924e-01,-2.2884e+00,1.7650e+00,2.0924e-01,-2.2884e+00,1.9000e+00,1.9675e-01,-2.2822e+00,1.7650e+00,1.9675e-01,-2.2822e+00,1.9000e+00,1.8517e-01,-2.2745e+00,1.7650e+00,1.8517e-01,-2.2745e+00,1.9000e+00,1.7469e-01,-2.2653e+00,1.7650e+00,1.7469e-01,-2.2653e+00,1.9000e+00,1.6551e-01,-2.2548e+00,1.7650e+00,1.6551e-01,-2.2548e+00,1.9000e+00,1.5777e-01,-2.2432e+00,1.7650e+00,1.5777e-01,-2.2432e+00,1.9000e+00,1.5161e-01,-2.2308e+00,1.7650e+00,1.5161e-01,-2.2308e+00,1.9000e+00,1.4713e-01,-2.2176e+00,1.7650e+00,1.4713e-01,-2.2176e+00,1.9000e+00,1.4441e-01,-2.2039e+00,1.7650e+00,1.4441e-01,-2.2039e+00,1.9000e+00,1.4350e-01,-2.1900e+00,1.7650e+00,1.4350e-01,-2.1900e+00,1.9000e+00,1.4441e-01,-2.1761e+00,1.7650e+00,1.4441e-01,-2.1761e+00,1.9000e+00,1.4713e-01,-2.1624e+00,1.7650e+00,1.4713e-01,-2.1624e+00,1.9000e+00,1.5161e-01,-2.1492e+00,1.7650e+00,1.5161e-01,-2.1492e+00,1.9000e+00,1.5777e-01,-2.1368e+00,1.7650e+00,1.5777e-01,-2.1368e+00,1.9000e+00,1.6551e-01,-2.1252e+00,1.7650e+00,1.6551e-01,-2.1252e+00,1.9000e+00,1.7469e-01,-2.1147e+00,1.7650e+00,1.7469e-01,-2.1147e+00,1.9000e+00,1.8517e-01,-2.1055e+00,1.7650e+00,1.8517e-01,-2.1055e+00,1.9000e+00,1.9675e-01,-2.0978e+00,1.7650e+00,1.9675e-01,-2.0978e+00,1.9000e+00,2.0924e-01,-2.0916e+00,1.7650e+00,2.0924e-01,-2.0916e+00,1.9000e+00,2.2244e-01,-2.0871e+00,1.7650e+00,2.2244e-01,-2.0871e+00,1.9000e+00,2.3610e-01,-2.0844e+00,1.7650e+00,2.3610e-01,-2.0844e+00,1.9000e+00,2.5000e-01,-2.0835e+00,1.7650e+00,2.5000e-01,-2.0835e+00,1.9000e+00,2.6390e-01,-2.0844e+00,1.7650e+00,2.6390e-01,-2.0844e+00,1.9000e+00,2.7756e-01,-2.0871e+00,1.7650e+00,2.7756e-01,-2.0871e+00,1.9000e+00,2.9076e-01,-2.0916e+00,1.7650e+00,2.9076e-01,-2.0916e+00,1.9000e+00,3.0325e-01,-2.0978e+00,1.7650e+00,3.0325e-01,-2.0978e+00,1.9000e+00,3.1483e-01,-2.1055e+00,1.7650e+00,3.1483e-01,-2.1055e+00,1.9000e+00,3.2531e-01,-2.1147e+00,1.7650e+00,3.2531e-01,-2.1147e+00,1.9000e+00,3.3449e-01,-2.1252e+00,1.7650e+00,3.3449e-01,-2.1252e+00,1.9000e+00,3.4223e-01,-2.1367e+00,1.7650e+00,3.4223e-01,-2.1367e+00,1.9000e+00,3.4839e-01,-2.1492e+00,1.7650e+00,3.4839e-01,-2.1492e+00,1.9000e+00,3.5287e-01,-2.1624e+00,1.7650e+00,3.5287e-01,-2.1624e+00,1.9000e+00,3.5559e-01,-2.1761e+00,1.7650e+00,3.5559e-01,-2.1761e+00,1.9000e+00,3.5650e-01,-2.1900e+00,1.7650e+00,3.5650e-01,-2.1900e+00,1.9000e+00,3.5559e-01,-2.2039e+00,1.7650e+00,3.5559e-01,-2.2039e+00,1.9000e+00,3.5287e-01,-2.2176e+00,1.7650e+00,3.5287e-01,-2.2176e+00,1.9000e+00,3.4839e-01,-2.2308e+00,1.7650e+00,3.4839e-01,-2.2308e+00,1.9000e+00,3.4223e-01,-2.2432e+00,1.7650e+00,3.4223e-01,-2.2432e+00,1.9000e+00,3.3449e-01,-2.2548e+00,1.7650e+00,3.3449e-01,-2.2548e+00,1.9000e+00,3.2531e-01,-2.2653e+00,1.7650e+00,3.2531e-01,-2.2653e+00,1.9000e+00,3.1483e-01,-2.2745e+00,1.7650e+00,3.1483e-01,-2.2745e+00,1.9000e+00,3.0325e-01,-2.2822e+00,1.7650e+00,3.0325e-01,-2.2822e+00,1.9000e+00,2.9076e-01,-2.2884e+00,1.7650e+00,2.9076e-01,-2.2884e+00,1.9000e+00,2.7756e-01,-2.2929e+00,1.7650e+00,2.7756e-01,-2.2929e+00,1.9000e+00,2.6390e-01,-2.2956e+00,1.7650e+00,2.6390e-01,-2.2956e+00,1.9000e+00});
			return Coordinate_7_427_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #428, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_428_vector()
		{
			MFVec3f Normal_7_428_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_428_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #434, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_434_point()
		{
			MFVec3f Coordinate_7_434_point = new MFVec3f(new double[] {-1.5000e+00,-2.2965e+00,1.7650e+00,-1.5000e+00,-2.2965e+00,1.9000e+00,-1.5139e+00,-2.2956e+00,1.7650e+00,-1.5139e+00,-2.2956e+00,1.9000e+00,-1.5276e+00,-2.2929e+00,1.7650e+00,-1.5276e+00,-2.2929e+00,1.9000e+00,-1.5408e+00,-2.2884e+00,1.7650e+00,-1.5408e+00,-2.2884e+00,1.9000e+00,-1.5533e+00,-2.2822e+00,1.7650e+00,-1.5533e+00,-2.2822e+00,1.9000e+00,-1.5648e+00,-2.2745e+00,1.7650e+00,-1.5648e+00,-2.2745e+00,1.9000e+00,-1.5753e+00,-2.2653e+00,1.7650e+00,-1.5753e+00,-2.2653e+00,1.9000e+00,-1.5845e+00,-2.2548e+00,1.7650e+00,-1.5845e+00,-2.2548e+00,1.9000e+00,-1.5922e+00,-2.2432e+00,1.7650e+00,-1.5922e+00,-2.2432e+00,1.9000e+00,-1.5984e+00,-2.2308e+00,1.7650e+00,-1.5984e+00,-2.2308e+00,1.9000e+00,-1.6029e+00,-2.2176e+00,1.7650e+00,-1.6029e+00,-2.2176e+00,1.9000e+00,-1.6056e+00,-2.2039e+00,1.7650e+00,-1.6056e+00,-2.2039e+00,1.9000e+00,-1.6065e+00,-2.1900e+00,1.7650e+00,-1.6065e+00,-2.1900e+00,1.9000e+00,-1.6056e+00,-2.1761e+00,1.7650e+00,-1.6056e+00,-2.1761e+00,1.9000e+00,-1.6029e+00,-2.1624e+00,1.7650e+00,-1.6029e+00,-2.1624e+00,1.9000e+00,-1.5984e+00,-2.1492e+00,1.7650e+00,-1.5984e+00,-2.1492e+00,1.9000e+00,-1.5922e+00,-2.1368e+00,1.7650e+00,-1.5922e+00,-2.1368e+00,1.9000e+00,-1.5845e+00,-2.1252e+00,1.7650e+00,-1.5845e+00,-2.1252e+00,1.9000e+00,-1.5753e+00,-2.1147e+00,1.7650e+00,-1.5753e+00,-2.1147e+00,1.9000e+00,-1.5648e+00,-2.1055e+00,1.7650e+00,-1.5648e+00,-2.1055e+00,1.9000e+00,-1.5533e+00,-2.0978e+00,1.7650e+00,-1.5533e+00,-2.0978e+00,1.9000e+00,-1.5408e+00,-2.0916e+00,1.7650e+00,-1.5408e+00,-2.0916e+00,1.9000e+00,-1.5276e+00,-2.0871e+00,1.7650e+00,-1.5276e+00,-2.0871e+00,1.9000e+00,-1.5139e+00,-2.0844e+00,1.7650e+00,-1.5139e+00,-2.0844e+00,1.9000e+00,-1.5000e+00,-2.0835e+00,1.7650e+00,-1.5000e+00,-2.0835e+00,1.9000e+00,-1.4861e+00,-2.0844e+00,1.7650e+00,-1.4861e+00,-2.0844e+00,1.9000e+00,-1.4724e+00,-2.0871e+00,1.7650e+00,-1.4724e+00,-2.0871e+00,1.9000e+00,-1.4592e+00,-2.0916e+00,1.7650e+00,-1.4592e+00,-2.0916e+00,1.9000e+00,-1.4467e+00,-2.0978e+00,1.7650e+00,-1.4467e+00,-2.0978e+00,1.9000e+00,-1.4352e+00,-2.1055e+00,1.7650e+00,-1.4352e+00,-2.1055e+00,1.9000e+00,-1.4247e+00,-2.1147e+00,1.7650e+00,-1.4247e+00,-2.1147e+00,1.9000e+00,-1.4155e+00,-2.1252e+00,1.7650e+00,-1.4155e+00,-2.1252e+00,1.9000e+00,-1.4078e+00,-2.1367e+00,1.7650e+00,-1.4078e+00,-2.1367e+00,1.9000e+00,-1.4016e+00,-2.1492e+00,1.7650e+00,-1.4016e+00,-2.1492e+00,1.9000e+00,-1.3971e+00,-2.1624e+00,1.7650e+00,-1.3971e+00,-2.1624e+00,1.9000e+00,-1.3944e+00,-2.1761e+00,1.7650e+00,-1.3944e+00,-2.1761e+00,1.9000e+00,-1.3935e+00,-2.1900e+00,1.7650e+00,-1.3935e+00,-2.1900e+00,1.9000e+00,-1.3944e+00,-2.2039e+00,1.7650e+00,-1.3944e+00,-2.2039e+00,1.9000e+00,-1.3971e+00,-2.2176e+00,1.7650e+00,-1.3971e+00,-2.2176e+00,1.9000e+00,-1.4016e+00,-2.2308e+00,1.7650e+00,-1.4016e+00,-2.2308e+00,1.9000e+00,-1.4078e+00,-2.2432e+00,1.7650e+00,-1.4078e+00,-2.2432e+00,1.9000e+00,-1.4155e+00,-2.2548e+00,1.7650e+00,-1.4155e+00,-2.2548e+00,1.9000e+00,-1.4247e+00,-2.2653e+00,1.7650e+00,-1.4247e+00,-2.2653e+00,1.9000e+00,-1.4352e+00,-2.2745e+00,1.7650e+00,-1.4352e+00,-2.2745e+00,1.9000e+00,-1.4467e+00,-2.2822e+00,1.7650e+00,-1.4467e+00,-2.2822e+00,1.9000e+00,-1.4592e+00,-2.2884e+00,1.7650e+00,-1.4592e+00,-2.2884e+00,1.9000e+00,-1.4724e+00,-2.2929e+00,1.7650e+00,-1.4724e+00,-2.2929e+00,1.9000e+00,-1.4861e+00,-2.2956e+00,1.7650e+00,-1.4861e+00,-2.2956e+00,1.9000e+00});
			return Coordinate_7_434_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #435, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_435_vector()
		{
			MFVec3f Normal_7_435_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_435_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #465, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_465_point()
		{
			MFVec3f Coordinate_7_465_point = new MFVec3f(new double[] {4.3000e+00,-9.5000e-01,1.7650e+00,4.3000e+00,-9.5000e-01,1.9000e+00,4.2837e+00,-9.4893e-01,1.7650e+00,4.2837e+00,-9.4893e-01,1.9000e+00,4.2676e+00,-9.4574e-01,1.7650e+00,4.2676e+00,-9.4574e-01,1.9000e+00,4.2522e+00,-9.4048e-01,1.7650e+00,4.2522e+00,-9.4048e-01,1.9000e+00,4.2375e+00,-9.3325e-01,1.7650e+00,4.2375e+00,-9.3325e-01,1.9000e+00,4.2239e+00,-9.2417e-01,1.7650e+00,4.2239e+00,-9.2417e-01,1.9000e+00,4.2116e+00,-9.1339e-01,1.7650e+00,4.2116e+00,-9.1339e-01,1.9000e+00,4.2008e+00,-9.0110e-01,1.7650e+00,4.2008e+00,-9.0110e-01,1.9000e+00,4.1917e+00,-8.8750e-01,1.7650e+00,4.1917e+00,-8.8750e-01,1.9000e+00,4.1845e+00,-8.7284e-01,1.7650e+00,4.1845e+00,-8.7284e-01,1.9000e+00,4.1793e+00,-8.5735e-01,1.7650e+00,4.1793e+00,-8.5735e-01,1.9000e+00,4.1761e+00,-8.4132e-01,1.7650e+00,4.1761e+00,-8.4132e-01,1.9000e+00,4.1750e+00,-8.2500e-01,1.7650e+00,4.1750e+00,-8.2500e-01,1.9000e+00,4.1761e+00,-8.0868e-01,1.7650e+00,4.1761e+00,-8.0868e-01,1.9000e+00,4.1793e+00,-7.9265e-01,1.7650e+00,4.1793e+00,-7.9265e-01,1.9000e+00,4.1845e+00,-7.7716e-01,1.7650e+00,4.1845e+00,-7.7716e-01,1.9000e+00,4.1917e+00,-7.6250e-01,1.7650e+00,4.1917e+00,-7.6250e-01,1.9000e+00,4.2008e+00,-7.4890e-01,1.7650e+00,4.2008e+00,-7.4890e-01,1.9000e+00,4.2116e+00,-7.3661e-01,1.7650e+00,4.2116e+00,-7.3661e-01,1.9000e+00,4.2239e+00,-7.2583e-01,1.7650e+00,4.2239e+00,-7.2583e-01,1.9000e+00,4.2375e+00,-7.1675e-01,1.7650e+00,4.2375e+00,-7.1675e-01,1.9000e+00,4.2522e+00,-7.0952e-01,1.7650e+00,4.2522e+00,-7.0952e-01,1.9000e+00,4.2676e+00,-7.0426e-01,1.7650e+00,4.2676e+00,-7.0426e-01,1.9000e+00,4.2837e+00,-7.0107e-01,1.7650e+00,4.2837e+00,-7.0107e-01,1.9000e+00,4.3000e+00,-7.0000e-01,1.7650e+00,4.3000e+00,-7.0000e-01,1.9000e+00,4.3163e+00,-7.0107e-01,1.7650e+00,4.3163e+00,-7.0107e-01,1.9000e+00,4.3324e+00,-7.0426e-01,1.7650e+00,4.3324e+00,-7.0426e-01,1.9000e+00,4.3478e+00,-7.0952e-01,1.7650e+00,4.3478e+00,-7.0952e-01,1.9000e+00,4.3625e+00,-7.1675e-01,1.7650e+00,4.3625e+00,-7.1675e-01,1.9000e+00,4.3761e+00,-7.2583e-01,1.7650e+00,4.3761e+00,-7.2583e-01,1.9000e+00,4.3884e+00,-7.3661e-01,1.7650e+00,4.3884e+00,-7.3661e-01,1.9000e+00,4.3992e+00,-7.4890e-01,1.7650e+00,4.3992e+00,-7.4890e-01,1.9000e+00,4.4083e+00,-7.6250e-01,1.7650e+00,4.4083e+00,-7.6250e-01,1.9000e+00,4.4155e+00,-7.7716e-01,1.7650e+00,4.4155e+00,-7.7716e-01,1.9000e+00,4.4207e+00,-7.9265e-01,1.7650e+00,4.4207e+00,-7.9265e-01,1.9000e+00,4.4239e+00,-8.0868e-01,1.7650e+00,4.4239e+00,-8.0868e-01,1.9000e+00,4.4250e+00,-8.2500e-01,1.7650e+00,4.4250e+00,-8.2500e-01,1.9000e+00,4.4239e+00,-8.4132e-01,1.7650e+00,4.4239e+00,-8.4132e-01,1.9000e+00,4.4207e+00,-8.5735e-01,1.7650e+00,4.4207e+00,-8.5735e-01,1.9000e+00,4.4155e+00,-8.7284e-01,1.7650e+00,4.4155e+00,-8.7284e-01,1.9000e+00,4.4083e+00,-8.8750e-01,1.7650e+00,4.4083e+00,-8.8750e-01,1.9000e+00,4.3992e+00,-9.0110e-01,1.7650e+00,4.3992e+00,-9.0110e-01,1.9000e+00,4.3884e+00,-9.1339e-01,1.7650e+00,4.3884e+00,-9.1339e-01,1.9000e+00,4.3761e+00,-9.2417e-01,1.7650e+00,4.3761e+00,-9.2417e-01,1.9000e+00,4.3625e+00,-9.3325e-01,1.7650e+00,4.3625e+00,-9.3325e-01,1.9000e+00,4.3478e+00,-9.4048e-01,1.7650e+00,4.3478e+00,-9.4048e-01,1.9000e+00,4.3324e+00,-9.4574e-01,1.7650e+00,4.3324e+00,-9.4574e-01,1.9000e+00,4.3163e+00,-9.4893e-01,1.7650e+00,4.3163e+00,-9.4893e-01,1.9000e+00});
			return Coordinate_7_465_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #466, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_466_vector()
		{
			MFVec3f Normal_7_466_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_466_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #472, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_472_point()
		{
			MFVec3f Coordinate_7_472_point = new MFVec3f(new double[] {4.3000e+00,-3.2000e+00,1.7650e+00,4.3000e+00,-3.2000e+00,1.9000e+00,4.2837e+00,-3.1989e+00,1.7650e+00,4.2837e+00,-3.1989e+00,1.9000e+00,4.2676e+00,-3.1957e+00,1.7650e+00,4.2676e+00,-3.1957e+00,1.9000e+00,4.2522e+00,-3.1905e+00,1.7650e+00,4.2522e+00,-3.1905e+00,1.9000e+00,4.2375e+00,-3.1833e+00,1.7650e+00,4.2375e+00,-3.1833e+00,1.9000e+00,4.2239e+00,-3.1742e+00,1.7650e+00,4.2239e+00,-3.1742e+00,1.9000e+00,4.2116e+00,-3.1634e+00,1.7650e+00,4.2116e+00,-3.1634e+00,1.9000e+00,4.2008e+00,-3.1511e+00,1.7650e+00,4.2008e+00,-3.1511e+00,1.9000e+00,4.1917e+00,-3.1375e+00,1.7650e+00,4.1917e+00,-3.1375e+00,1.9000e+00,4.1845e+00,-3.1228e+00,1.7650e+00,4.1845e+00,-3.1228e+00,1.9000e+00,4.1793e+00,-3.1074e+00,1.7650e+00,4.1793e+00,-3.1074e+00,1.9000e+00,4.1761e+00,-3.0913e+00,1.7650e+00,4.1761e+00,-3.0913e+00,1.9000e+00,4.1750e+00,-3.0750e+00,1.7650e+00,4.1750e+00,-3.0750e+00,1.9000e+00,4.1761e+00,-3.0587e+00,1.7650e+00,4.1761e+00,-3.0587e+00,1.9000e+00,4.1793e+00,-3.0426e+00,1.7650e+00,4.1793e+00,-3.0426e+00,1.9000e+00,4.1845e+00,-3.0272e+00,1.7650e+00,4.1845e+00,-3.0272e+00,1.9000e+00,4.1917e+00,-3.0125e+00,1.7650e+00,4.1917e+00,-3.0125e+00,1.9000e+00,4.2008e+00,-2.9989e+00,1.7650e+00,4.2008e+00,-2.9989e+00,1.9000e+00,4.2116e+00,-2.9866e+00,1.7650e+00,4.2116e+00,-2.9866e+00,1.9000e+00,4.2239e+00,-2.9758e+00,1.7650e+00,4.2239e+00,-2.9758e+00,1.9000e+00,4.2375e+00,-2.9667e+00,1.7650e+00,4.2375e+00,-2.9667e+00,1.9000e+00,4.2522e+00,-2.9595e+00,1.7650e+00,4.2522e+00,-2.9595e+00,1.9000e+00,4.2676e+00,-2.9543e+00,1.7650e+00,4.2676e+00,-2.9543e+00,1.9000e+00,4.2837e+00,-2.9511e+00,1.7650e+00,4.2837e+00,-2.9511e+00,1.9000e+00,4.3000e+00,-2.9500e+00,1.7650e+00,4.3000e+00,-2.9500e+00,1.9000e+00,4.3163e+00,-2.9511e+00,1.7650e+00,4.3163e+00,-2.9511e+00,1.9000e+00,4.3324e+00,-2.9543e+00,1.7650e+00,4.3324e+00,-2.9543e+00,1.9000e+00,4.3478e+00,-2.9595e+00,1.7650e+00,4.3478e+00,-2.9595e+00,1.9000e+00,4.3625e+00,-2.9667e+00,1.7650e+00,4.3625e+00,-2.9667e+00,1.9000e+00,4.3761e+00,-2.9758e+00,1.7650e+00,4.3761e+00,-2.9758e+00,1.9000e+00,4.3884e+00,-2.9866e+00,1.7650e+00,4.3884e+00,-2.9866e+00,1.9000e+00,4.3992e+00,-2.9989e+00,1.7650e+00,4.3992e+00,-2.9989e+00,1.9000e+00,4.4083e+00,-3.0125e+00,1.7650e+00,4.4083e+00,-3.0125e+00,1.9000e+00,4.4155e+00,-3.0272e+00,1.7650e+00,4.4155e+00,-3.0272e+00,1.9000e+00,4.4207e+00,-3.0426e+00,1.7650e+00,4.4207e+00,-3.0426e+00,1.9000e+00,4.4239e+00,-3.0587e+00,1.7650e+00,4.4239e+00,-3.0587e+00,1.9000e+00,4.4250e+00,-3.0750e+00,1.7650e+00,4.4250e+00,-3.0750e+00,1.9000e+00,4.4239e+00,-3.0913e+00,1.7650e+00,4.4239e+00,-3.0913e+00,1.9000e+00,4.4207e+00,-3.1074e+00,1.7650e+00,4.4207e+00,-3.1074e+00,1.9000e+00,4.4155e+00,-3.1228e+00,1.7650e+00,4.4155e+00,-3.1228e+00,1.9000e+00,4.4083e+00,-3.1375e+00,1.7650e+00,4.4083e+00,-3.1375e+00,1.9000e+00,4.3992e+00,-3.1511e+00,1.7650e+00,4.3992e+00,-3.1511e+00,1.9000e+00,4.3884e+00,-3.1634e+00,1.7650e+00,4.3884e+00,-3.1634e+00,1.9000e+00,4.3761e+00,-3.1742e+00,1.7650e+00,4.3761e+00,-3.1742e+00,1.9000e+00,4.3625e+00,-3.1833e+00,1.7650e+00,4.3625e+00,-3.1833e+00,1.9000e+00,4.3478e+00,-3.1905e+00,1.7650e+00,4.3478e+00,-3.1905e+00,1.9000e+00,4.3324e+00,-3.1957e+00,1.7650e+00,4.3324e+00,-3.1957e+00,1.9000e+00,4.3163e+00,-3.1989e+00,1.7650e+00,4.3163e+00,-3.1989e+00,1.9000e+00});
			return Coordinate_7_472_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #473, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_473_vector()
		{
			MFVec3f Normal_7_473_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_473_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #479, 132 total numbers made up of 44 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_479_point()
		{
			MFVec3f Coordinate_7_479_point = new MFVec3f(new double[] {3.8110e+00,2.6222e+00,1.9000e+00,3.8110e+00,2.6222e+00,1.7650e+00,3.7955e+00,2.6177e+00,1.9000e+00,3.7955e+00,2.6177e+00,1.7650e+00,3.7806e+00,2.6113e+00,1.9000e+00,3.7806e+00,2.6113e+00,1.7650e+00,3.7668e+00,2.6031e+00,1.9000e+00,3.7668e+00,2.6031e+00,1.7650e+00,3.7541e+00,2.5931e+00,1.9000e+00,3.7541e+00,2.5931e+00,1.7650e+00,3.7428e+00,2.5816e+00,1.9000e+00,3.7428e+00,2.5816e+00,1.7650e+00,3.7331e+00,2.5687e+00,1.9000e+00,3.7331e+00,2.5687e+00,1.7650e+00,3.7251e+00,2.5546e+00,1.9000e+00,3.7251e+00,2.5546e+00,1.7650e+00,3.7190e+00,2.5397e+00,1.9000e+00,3.7190e+00,2.5397e+00,1.7650e+00,3.7148e+00,2.5241e+00,1.9000e+00,3.7148e+00,2.5241e+00,1.7650e+00,3.7128e+00,2.5081e+00,1.9000e+00,3.7128e+00,2.5081e+00,1.7650e+00,3.7128e+00,2.4919e+00,1.9000e+00,3.7128e+00,2.4919e+00,1.7650e+00,3.7148e+00,2.4759e+00,1.9000e+00,3.7148e+00,2.4759e+00,1.7650e+00,3.7190e+00,2.4603e+00,1.9000e+00,3.7190e+00,2.4603e+00,1.7650e+00,3.7251e+00,2.4454e+00,1.9000e+00,3.7251e+00,2.4454e+00,1.7650e+00,3.7331e+00,2.4313e+00,1.9000e+00,3.7331e+00,2.4313e+00,1.7650e+00,3.7428e+00,2.4184e+00,1.9000e+00,3.7428e+00,2.4184e+00,1.7650e+00,3.7541e+00,2.4069e+00,1.9000e+00,3.7541e+00,2.4069e+00,1.7650e+00,3.7668e+00,2.3969e+00,1.9000e+00,3.7668e+00,2.3969e+00,1.7650e+00,3.7806e+00,2.3887e+00,1.9000e+00,3.7806e+00,2.3887e+00,1.7650e+00,3.7955e+00,2.3823e+00,1.9000e+00,3.7955e+00,2.3823e+00,1.7650e+00,3.8110e+00,2.3778e+00,1.9000e+00,3.8110e+00,2.3778e+00,1.7650e+00});
			return Coordinate_7_479_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #480, 132 total numbers made up of 44 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_480_vector()
		{
			MFVec3f Normal_7_480_vector = new MFVec3f(new double[] {2.1213e-01,-9.7724e-01,-0.0000e+00,2.1213e-01,-9.7724e-01,-0.0000e+00,3.3631e-01,-9.4175e-01,-0.0000e+00,3.3631e-01,-9.4175e-01,-0.0000e+00,4.5488e-01,-8.9055e-01,-0.0000e+00,4.5488e-01,-8.9055e-01,-0.0000e+00,5.6587e-01,-8.2450e-01,-0.0000e+00,5.6587e-01,-8.2450e-01,-0.0000e+00,6.6741e-01,-7.4469e-01,-0.0000e+00,6.6741e-01,-7.4469e-01,-0.0000e+00,7.5782e-01,-6.5246e-01,-0.0000e+00,7.5782e-01,-6.5246e-01,-0.0000e+00,8.3559e-01,-5.4935e-01,-0.0000e+00,8.3559e-01,-5.4935e-01,-0.0000e+00,8.9942e-01,-4.3708e-01,-0.0000e+00,8.9942e-01,-4.3708e-01,-0.0000e+00,9.4825e-01,-3.1751e-01,-0.0000e+00,9.4825e-01,-3.1751e-01,-0.0000e+00,9.8127e-01,-1.9265e-01,-0.0000e+00,9.8127e-01,-1.9265e-01,-0.0000e+00,9.9791e-01,-6.4576e-02,-0.0000e+00,9.9791e-01,-6.4576e-02,-0.0000e+00,9.9791e-01,6.4576e-02,-0.0000e+00,9.9791e-01,6.4576e-02,-0.0000e+00,9.8127e-01,1.9265e-01,-0.0000e+00,9.8127e-01,1.9265e-01,-0.0000e+00,9.4825e-01,3.1751e-01,-0.0000e+00,9.4825e-01,3.1751e-01,-0.0000e+00,8.9942e-01,4.3708e-01,-0.0000e+00,8.9942e-01,4.3708e-01,-0.0000e+00,8.3559e-01,5.4935e-01,-0.0000e+00,8.3559e-01,5.4935e-01,-0.0000e+00,7.5782e-01,6.5246e-01,-0.0000e+00,7.5782e-01,6.5246e-01,-0.0000e+00,6.6741e-01,7.4469e-01,-0.0000e+00,6.6741e-01,7.4469e-01,-0.0000e+00,5.6587e-01,8.2450e-01,-0.0000e+00,5.6587e-01,8.2450e-01,-0.0000e+00,4.5488e-01,8.9055e-01,-0.0000e+00,4.5488e-01,8.9055e-01,-0.0000e+00,3.3631e-01,9.4175e-01,-0.0000e+00,3.3631e-01,9.4175e-01,-0.0000e+00,2.1213e-01,9.7724e-01,-0.0000e+00,2.1213e-01,9.7724e-01,-0.0000e+00});
			return Normal_7_480_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #486, 276 total numbers made up of 92 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_486_point()
		{
			MFVec3f Coordinate_7_486_point = new MFVec3f(new double[] {3.8110e+00,2.3778e+00,1.9000e+00,3.8110e+00,2.3778e+00,1.7650e+00,3.8319e+00,2.3022e+00,1.9000e+00,3.8319e+00,2.3022e+00,1.7650e+00,3.8625e+00,2.2299e+00,1.9000e+00,3.8625e+00,2.2299e+00,1.7650e+00,3.9022e+00,2.1623e+00,1.9000e+00,3.9022e+00,2.1623e+00,1.7650e+00,3.9504e+00,2.1004e+00,1.9000e+00,3.9504e+00,2.1004e+00,1.7650e+00,4.0062e+00,2.0452e+00,1.9000e+00,4.0062e+00,2.0452e+00,1.7650e+00,4.0688e+00,1.9978e+00,1.9000e+00,4.0688e+00,1.9978e+00,1.7650e+00,4.1370e+00,1.9590e+00,1.9000e+00,4.1370e+00,1.9590e+00,1.7650e+00,4.2096e+00,1.9294e+00,1.9000e+00,4.2096e+00,1.9294e+00,1.7650e+00,4.2855e+00,1.9094e+00,1.9000e+00,4.2855e+00,1.9094e+00,1.7650e+00,4.3634e+00,1.8996e+00,1.9000e+00,4.3634e+00,1.8996e+00,1.7650e+00,4.4418e+00,1.8999e+00,1.9000e+00,4.4418e+00,1.8999e+00,1.7650e+00,4.5196e+00,1.9105e+00,1.9000e+00,4.5196e+00,1.9105e+00,1.7650e+00,4.5953e+00,1.9310e+00,1.9000e+00,4.5953e+00,1.9310e+00,1.7650e+00,4.6677e+00,1.9613e+00,1.9000e+00,4.6677e+00,1.9613e+00,1.7650e+00,4.7356e+00,2.0007e+00,1.9000e+00,4.7356e+00,2.0007e+00,1.7650e+00,4.7977e+00,2.0487e+00,1.9000e+00,4.7977e+00,2.0487e+00,1.7650e+00,4.8531e+00,2.1043e+00,1.9000e+00,4.8531e+00,2.1043e+00,1.7650e+00,4.9007e+00,2.1666e+00,1.9000e+00,4.9007e+00,2.1666e+00,1.7650e+00,4.9399e+00,2.2346e+00,1.9000e+00,4.9399e+00,2.2346e+00,1.7650e+00,4.9698e+00,2.3072e+00,1.9000e+00,4.9698e+00,2.3072e+00,1.7650e+00,4.9901e+00,2.3830e+00,1.9000e+00,4.9901e+00,2.3830e+00,1.7650e+00,5.0003e+00,2.4608e+00,1.9000e+00,5.0003e+00,2.4608e+00,1.7650e+00,5.0003e+00,2.5392e+00,1.9000e+00,5.0003e+00,2.5392e+00,1.7650e+00,4.9901e+00,2.6170e+00,1.9000e+00,4.9901e+00,2.6170e+00,1.7650e+00,4.9698e+00,2.6928e+00,1.9000e+00,4.9698e+00,2.6928e+00,1.7650e+00,4.9399e+00,2.7654e+00,1.9000e+00,4.9399e+00,2.7654e+00,1.7650e+00,4.9007e+00,2.8334e+00,1.9000e+00,4.9007e+00,2.8334e+00,1.7650e+00,4.8531e+00,2.8957e+00,1.9000e+00,4.8531e+00,2.8957e+00,1.7650e+00,4.7977e+00,2.9513e+00,1.9000e+00,4.7977e+00,2.9513e+00,1.7650e+00,4.7356e+00,2.9993e+00,1.9000e+00,4.7356e+00,2.9993e+00,1.7650e+00,4.6677e+00,3.0387e+00,1.9000e+00,4.6677e+00,3.0387e+00,1.7650e+00,4.5953e+00,3.0690e+00,1.9000e+00,4.5953e+00,3.0690e+00,1.7650e+00,4.5196e+00,3.0895e+00,1.9000e+00,4.5196e+00,3.0895e+00,1.7650e+00,4.4418e+00,3.1001e+00,1.9000e+00,4.4418e+00,3.1001e+00,1.7650e+00,4.3634e+00,3.1004e+00,1.9000e+00,4.3634e+00,3.1004e+00,1.7650e+00,4.2855e+00,3.0906e+00,1.9000e+00,4.2855e+00,3.0906e+00,1.7650e+00,4.2096e+00,3.0706e+00,1.9000e+00,4.2096e+00,3.0706e+00,1.7650e+00,4.1370e+00,3.0410e+00,1.9000e+00,4.1370e+00,3.0410e+00,1.7650e+00,4.0688e+00,3.0022e+00,1.9000e+00,4.0688e+00,3.0022e+00,1.7650e+00,4.0062e+00,2.9548e+00,1.9000e+00,4.0062e+00,2.9548e+00,1.7650e+00,3.9504e+00,2.8996e+00,1.9000e+00,3.9504e+00,2.8996e+00,1.7650e+00,3.9022e+00,2.8377e+00,1.9000e+00,3.9022e+00,2.8377e+00,1.7650e+00,3.8625e+00,2.7701e+00,1.9000e+00,3.8625e+00,2.7701e+00,1.7650e+00,3.8319e+00,2.6978e+00,1.9000e+00,3.8319e+00,2.6978e+00,1.7650e+00,3.8110e+00,2.6222e+00,1.9000e+00,3.8110e+00,2.6222e+00,1.7650e+00});
			return Coordinate_7_486_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #487, 276 total numbers made up of 92 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_487_vector()
		{
			MFVec3f Normal_7_487_vector = new MFVec3f(new double[] {9.7916e-01,2.0307e-01,-0.0000e+00,9.7916e-01,2.0307e-01,-0.0000e+00,9.4440e-01,3.2880e-01,-0.0000e+00,9.4440e-01,3.2880e-01,-0.0000e+00,8.9357e-01,4.4893e-01,-0.0000e+00,8.9357e-01,4.4893e-01,-0.0000e+00,8.2753e-01,5.6142e-01,-0.0000e+00,8.2753e-01,5.6142e-01,-0.0000e+00,7.4741e-01,6.6436e-01,-0.0000e+00,7.4741e-01,6.6436e-01,-0.0000e+00,6.5457e-01,7.5600e-01,-0.0000e+00,6.5457e-01,7.5600e-01,-0.0000e+00,5.5060e-01,8.3477e-01,-0.0000e+00,5.5060e-01,8.3477e-01,-0.0000e+00,4.3725e-01,8.9934e-01,-0.0000e+00,4.3725e-01,8.9934e-01,-0.0000e+00,3.1647e-01,9.4860e-01,-0.0000e+00,3.1647e-01,9.4860e-01,-0.0000e+00,1.9030e-01,9.8173e-01,-0.0000e+00,1.9030e-01,9.8173e-01,-0.0000e+00,6.0890e-02,9.9814e-01,-0.0000e+00,6.0890e-02,9.9814e-01,-0.0000e+00,-6.9554e-02,9.9758e-01,-0.0000e+00,-6.9554e-02,9.9758e-01,-0.0000e+00,-1.9881e-01,9.8004e-01,-0.0000e+00,-1.9881e-01,9.8004e-01,-0.0000e+00,-3.2469e-01,9.4582e-01,-0.0000e+00,-3.2469e-01,9.4582e-01,-0.0000e+00,-4.4504e-01,8.9551e-01,-0.0000e+00,-4.4504e-01,8.9551e-01,-0.0000e+00,-5.5782e-01,8.2996e-01,-0.0000e+00,-5.5782e-01,8.2996e-01,-0.0000e+00,-6.6111e-01,7.5029e-01,-0.0000e+00,-6.6111e-01,7.5029e-01,-0.0000e+00,-7.5315e-01,6.5785e-01,-0.0000e+00,-7.5315e-01,6.5785e-01,-0.0000e+00,-8.3237e-01,5.5422e-01,-0.0000e+00,-8.3237e-01,5.5422e-01,-0.0000e+00,-8.9743e-01,4.4115e-01,-0.0000e+00,-8.9743e-01,4.4115e-01,-0.0000e+00,-9.4722e-01,3.2058e-01,-0.0000e+00,-9.4722e-01,3.2058e-01,-0.0000e+00,-9.8089e-01,1.9456e-01,-0.0000e+00,-9.8089e-01,1.9456e-01,-0.0000e+00,-9.9787e-01,6.5223e-02,-0.0000e+00,-9.9787e-01,6.5223e-02,-0.0000e+00,-9.9787e-01,-6.5223e-02,-0.0000e+00,-9.9787e-01,-6.5223e-02,-0.0000e+00,-9.8089e-01,-1.9456e-01,-0.0000e+00,-9.8089e-01,-1.9456e-01,-0.0000e+00,-9.4722e-01,-3.2058e-01,-0.0000e+00,-9.4722e-01,-3.2058e-01,-0.0000e+00,-8.9743e-01,-4.4115e-01,-0.0000e+00,-8.9743e-01,-4.4115e-01,-0.0000e+00,-8.3237e-01,-5.5422e-01,-0.0000e+00,-8.3237e-01,-5.5422e-01,-0.0000e+00,-7.5315e-01,-6.5785e-01,-0.0000e+00,-7.5315e-01,-6.5785e-01,-0.0000e+00,-6.6111e-01,-7.5029e-01,-0.0000e+00,-6.6111e-01,-7.5029e-01,-0.0000e+00,-5.5782e-01,-8.2996e-01,-0.0000e+00,-5.5782e-01,-8.2996e-01,-0.0000e+00,-4.4504e-01,-8.9551e-01,-0.0000e+00,-4.4504e-01,-8.9551e-01,-0.0000e+00,-3.2469e-01,-9.4582e-01,-0.0000e+00,-3.2469e-01,-9.4582e-01,-0.0000e+00,-1.9881e-01,-9.8004e-01,-0.0000e+00,-1.9881e-01,-9.8004e-01,-0.0000e+00,-6.9554e-02,-9.9758e-01,-0.0000e+00,-6.9554e-02,-9.9758e-01,-0.0000e+00,6.0890e-02,-9.9814e-01,-0.0000e+00,6.0890e-02,-9.9814e-01,-0.0000e+00,1.9030e-01,-9.8173e-01,-0.0000e+00,1.9030e-01,-9.8173e-01,-0.0000e+00,3.1647e-01,-9.4860e-01,-0.0000e+00,3.1647e-01,-9.4860e-01,-0.0000e+00,4.3725e-01,-8.9934e-01,-0.0000e+00,4.3725e-01,-8.9934e-01,-0.0000e+00,5.5060e-01,-8.3477e-01,-0.0000e+00,5.5060e-01,-8.3477e-01,-0.0000e+00,6.5457e-01,-7.5600e-01,-0.0000e+00,6.5457e-01,-7.5600e-01,-0.0000e+00,7.4741e-01,-6.6436e-01,-0.0000e+00,7.4741e-01,-6.6436e-01,-0.0000e+00,8.2753e-01,-5.6142e-01,-0.0000e+00,8.2753e-01,-5.6142e-01,-0.0000e+00,8.9357e-01,-4.4893e-01,-0.0000e+00,8.9357e-01,-4.4893e-01,-0.0000e+00,9.4440e-01,-3.2880e-01,-0.0000e+00,9.4440e-01,-3.2880e-01,-0.0000e+00,9.7916e-01,-2.0307e-01,-0.0000e+00,9.7916e-01,-2.0307e-01,-0.0000e+00});
			return Normal_7_487_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #493, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_493_point()
		{
			MFVec3f Coordinate_7_493_point = new MFVec3f(new double[] {2.7500e+00,8.8600e-01,1.7650e+00,2.7500e+00,8.8600e-01,1.9000e+00,2.7351e+00,8.8698e-01,1.7650e+00,2.7351e+00,8.8698e-01,1.9000e+00,2.7205e+00,8.8988e-01,1.7650e+00,2.7205e+00,8.8988e-01,1.9000e+00,2.7064e+00,8.9468e-01,1.7650e+00,2.7064e+00,8.9468e-01,1.9000e+00,2.6930e+00,9.0127e-01,1.7650e+00,2.6930e+00,9.0127e-01,1.9000e+00,2.6806e+00,9.0956e-01,1.7650e+00,2.6806e+00,9.0956e-01,1.9000e+00,2.6694e+00,9.1939e-01,1.7650e+00,2.6694e+00,9.1939e-01,1.9000e+00,2.6596e+00,9.3060e-01,1.7650e+00,2.6596e+00,9.3060e-01,1.9000e+00,2.6513e+00,9.4300e-01,1.7650e+00,2.6513e+00,9.4300e-01,1.9000e+00,2.6447e+00,9.5637e-01,1.7650e+00,2.6447e+00,9.5637e-01,1.9000e+00,2.6399e+00,9.7049e-01,1.7650e+00,2.6399e+00,9.7049e-01,1.9000e+00,2.6370e+00,9.8512e-01,1.7650e+00,2.6370e+00,9.8512e-01,1.9000e+00,2.6360e+00,1.0000e+00,1.7650e+00,2.6360e+00,1.0000e+00,1.9000e+00,2.6370e+00,1.0149e+00,1.7650e+00,2.6370e+00,1.0149e+00,1.9000e+00,2.6399e+00,1.0295e+00,1.7650e+00,2.6399e+00,1.0295e+00,1.9000e+00,2.6447e+00,1.0436e+00,1.7650e+00,2.6447e+00,1.0436e+00,1.9000e+00,2.6513e+00,1.0570e+00,1.7650e+00,2.6513e+00,1.0570e+00,1.9000e+00,2.6596e+00,1.0694e+00,1.7650e+00,2.6596e+00,1.0694e+00,1.9000e+00,2.6694e+00,1.0806e+00,1.7650e+00,2.6694e+00,1.0806e+00,1.9000e+00,2.6806e+00,1.0904e+00,1.7650e+00,2.6806e+00,1.0904e+00,1.9000e+00,2.6930e+00,1.0987e+00,1.7650e+00,2.6930e+00,1.0987e+00,1.9000e+00,2.7064e+00,1.1053e+00,1.7650e+00,2.7064e+00,1.1053e+00,1.9000e+00,2.7205e+00,1.1101e+00,1.7650e+00,2.7205e+00,1.1101e+00,1.9000e+00,2.7351e+00,1.1130e+00,1.7650e+00,2.7351e+00,1.1130e+00,1.9000e+00,2.7500e+00,1.1140e+00,1.7650e+00,2.7500e+00,1.1140e+00,1.9000e+00,2.7649e+00,1.1130e+00,1.7650e+00,2.7649e+00,1.1130e+00,1.9000e+00,2.7795e+00,1.1101e+00,1.7650e+00,2.7795e+00,1.1101e+00,1.9000e+00,2.7936e+00,1.1053e+00,1.7650e+00,2.7936e+00,1.1053e+00,1.9000e+00,2.8070e+00,1.0987e+00,1.7650e+00,2.8070e+00,1.0987e+00,1.9000e+00,2.8194e+00,1.0904e+00,1.7650e+00,2.8194e+00,1.0904e+00,1.9000e+00,2.8306e+00,1.0806e+00,1.7650e+00,2.8306e+00,1.0806e+00,1.9000e+00,2.8404e+00,1.0694e+00,1.7650e+00,2.8404e+00,1.0694e+00,1.9000e+00,2.8487e+00,1.0570e+00,1.7650e+00,2.8487e+00,1.0570e+00,1.9000e+00,2.8553e+00,1.0436e+00,1.7650e+00,2.8553e+00,1.0436e+00,1.9000e+00,2.8601e+00,1.0295e+00,1.7650e+00,2.8601e+00,1.0295e+00,1.9000e+00,2.8630e+00,1.0149e+00,1.7650e+00,2.8630e+00,1.0149e+00,1.9000e+00,2.8640e+00,1.0000e+00,1.7650e+00,2.8640e+00,1.0000e+00,1.9000e+00,2.8630e+00,9.8512e-01,1.7650e+00,2.8630e+00,9.8512e-01,1.9000e+00,2.8601e+00,9.7049e-01,1.7650e+00,2.8601e+00,9.7049e-01,1.9000e+00,2.8553e+00,9.5637e-01,1.7650e+00,2.8553e+00,9.5637e-01,1.9000e+00,2.8487e+00,9.4300e-01,1.7650e+00,2.8487e+00,9.4300e-01,1.9000e+00,2.8404e+00,9.3060e-01,1.7650e+00,2.8404e+00,9.3060e-01,1.9000e+00,2.8306e+00,9.1939e-01,1.7650e+00,2.8306e+00,9.1939e-01,1.9000e+00,2.8194e+00,9.0956e-01,1.7650e+00,2.8194e+00,9.0956e-01,1.9000e+00,2.8070e+00,9.0127e-01,1.7650e+00,2.8070e+00,9.0127e-01,1.9000e+00,2.7936e+00,8.9468e-01,1.7650e+00,2.7936e+00,8.9468e-01,1.9000e+00,2.7795e+00,8.8988e-01,1.7650e+00,2.7795e+00,8.8988e-01,1.9000e+00,2.7649e+00,8.8698e-01,1.7650e+00,2.7649e+00,8.8698e-01,1.9000e+00});
			return Coordinate_7_493_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #494, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_494_vector()
		{
			MFVec3f Normal_7_494_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_494_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #500, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_500_point()
		{
			MFVec3f Coordinate_7_500_point = new MFVec3f(new double[] {2.7500e+00,-2.7640e+00,1.7650e+00,2.7500e+00,-2.7640e+00,1.9000e+00,2.7351e+00,-2.7630e+00,1.7650e+00,2.7351e+00,-2.7630e+00,1.9000e+00,2.7205e+00,-2.7601e+00,1.7650e+00,2.7205e+00,-2.7601e+00,1.9000e+00,2.7064e+00,-2.7553e+00,1.7650e+00,2.7064e+00,-2.7553e+00,1.9000e+00,2.6930e+00,-2.7487e+00,1.7650e+00,2.6930e+00,-2.7487e+00,1.9000e+00,2.6806e+00,-2.7404e+00,1.7650e+00,2.6806e+00,-2.7404e+00,1.9000e+00,2.6694e+00,-2.7306e+00,1.7650e+00,2.6694e+00,-2.7306e+00,1.9000e+00,2.6596e+00,-2.7194e+00,1.7650e+00,2.6596e+00,-2.7194e+00,1.9000e+00,2.6513e+00,-2.7070e+00,1.7650e+00,2.6513e+00,-2.7070e+00,1.9000e+00,2.6447e+00,-2.6936e+00,1.7650e+00,2.6447e+00,-2.6936e+00,1.9000e+00,2.6399e+00,-2.6795e+00,1.7650e+00,2.6399e+00,-2.6795e+00,1.9000e+00,2.6370e+00,-2.6649e+00,1.7650e+00,2.6370e+00,-2.6649e+00,1.9000e+00,2.6360e+00,-2.6500e+00,1.7650e+00,2.6360e+00,-2.6500e+00,1.9000e+00,2.6370e+00,-2.6351e+00,1.7650e+00,2.6370e+00,-2.6351e+00,1.9000e+00,2.6399e+00,-2.6205e+00,1.7650e+00,2.6399e+00,-2.6205e+00,1.9000e+00,2.6447e+00,-2.6064e+00,1.7650e+00,2.6447e+00,-2.6064e+00,1.9000e+00,2.6513e+00,-2.5930e+00,1.7650e+00,2.6513e+00,-2.5930e+00,1.9000e+00,2.6596e+00,-2.5806e+00,1.7650e+00,2.6596e+00,-2.5806e+00,1.9000e+00,2.6694e+00,-2.5694e+00,1.7650e+00,2.6694e+00,-2.5694e+00,1.9000e+00,2.6806e+00,-2.5596e+00,1.7650e+00,2.6806e+00,-2.5596e+00,1.9000e+00,2.6930e+00,-2.5513e+00,1.7650e+00,2.6930e+00,-2.5513e+00,1.9000e+00,2.7064e+00,-2.5447e+00,1.7650e+00,2.7064e+00,-2.5447e+00,1.9000e+00,2.7205e+00,-2.5399e+00,1.7650e+00,2.7205e+00,-2.5399e+00,1.9000e+00,2.7351e+00,-2.5370e+00,1.7650e+00,2.7351e+00,-2.5370e+00,1.9000e+00,2.7500e+00,-2.5360e+00,1.7650e+00,2.7500e+00,-2.5360e+00,1.9000e+00,2.7649e+00,-2.5370e+00,1.7650e+00,2.7649e+00,-2.5370e+00,1.9000e+00,2.7795e+00,-2.5399e+00,1.7650e+00,2.7795e+00,-2.5399e+00,1.9000e+00,2.7936e+00,-2.5447e+00,1.7650e+00,2.7936e+00,-2.5447e+00,1.9000e+00,2.8070e+00,-2.5513e+00,1.7650e+00,2.8070e+00,-2.5513e+00,1.9000e+00,2.8194e+00,-2.5596e+00,1.7650e+00,2.8194e+00,-2.5596e+00,1.9000e+00,2.8306e+00,-2.5694e+00,1.7650e+00,2.8306e+00,-2.5694e+00,1.9000e+00,2.8404e+00,-2.5806e+00,1.7650e+00,2.8404e+00,-2.5806e+00,1.9000e+00,2.8487e+00,-2.5930e+00,1.7650e+00,2.8487e+00,-2.5930e+00,1.9000e+00,2.8553e+00,-2.6064e+00,1.7650e+00,2.8553e+00,-2.6064e+00,1.9000e+00,2.8601e+00,-2.6205e+00,1.7650e+00,2.8601e+00,-2.6205e+00,1.9000e+00,2.8630e+00,-2.6351e+00,1.7650e+00,2.8630e+00,-2.6351e+00,1.9000e+00,2.8640e+00,-2.6500e+00,1.7650e+00,2.8640e+00,-2.6500e+00,1.9000e+00,2.8630e+00,-2.6649e+00,1.7650e+00,2.8630e+00,-2.6649e+00,1.9000e+00,2.8601e+00,-2.6795e+00,1.7650e+00,2.8601e+00,-2.6795e+00,1.9000e+00,2.8553e+00,-2.6936e+00,1.7650e+00,2.8553e+00,-2.6936e+00,1.9000e+00,2.8487e+00,-2.7070e+00,1.7650e+00,2.8487e+00,-2.7070e+00,1.9000e+00,2.8404e+00,-2.7194e+00,1.7650e+00,2.8404e+00,-2.7194e+00,1.9000e+00,2.8306e+00,-2.7306e+00,1.7650e+00,2.8306e+00,-2.7306e+00,1.9000e+00,2.8194e+00,-2.7404e+00,1.7650e+00,2.8194e+00,-2.7404e+00,1.9000e+00,2.8070e+00,-2.7487e+00,1.7650e+00,2.8070e+00,-2.7487e+00,1.9000e+00,2.7936e+00,-2.7553e+00,1.7650e+00,2.7936e+00,-2.7553e+00,1.9000e+00,2.7795e+00,-2.7601e+00,1.7650e+00,2.7795e+00,-2.7601e+00,1.9000e+00,2.7649e+00,-2.7630e+00,1.7650e+00,2.7649e+00,-2.7630e+00,1.9000e+00});
			return Coordinate_7_500_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #501, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_501_vector()
		{
			MFVec3f Normal_7_501_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_501_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #507, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_507_point()
		{
			MFVec3f Coordinate_7_507_point = new MFVec3f(new double[] {2.7500e+00,2.5290e+00,1.7650e+00,2.7500e+00,2.5290e+00,1.9000e+00,2.7342e+00,2.5300e+00,1.7650e+00,2.7342e+00,2.5300e+00,1.9000e+00,2.7187e+00,2.5331e+00,1.7650e+00,2.7187e+00,2.5331e+00,1.9000e+00,2.7037e+00,2.5382e+00,1.7650e+00,2.7037e+00,2.5382e+00,1.9000e+00,2.6895e+00,2.5452e+00,1.7650e+00,2.6895e+00,2.5452e+00,1.9000e+00,2.6763e+00,2.5540e+00,1.7650e+00,2.6763e+00,2.5540e+00,1.9000e+00,2.6644e+00,2.5644e+00,1.7650e+00,2.6644e+00,2.5644e+00,1.9000e+00,2.6540e+00,2.5763e+00,1.7650e+00,2.6540e+00,2.5763e+00,1.9000e+00,2.6452e+00,2.5895e+00,1.7650e+00,2.6452e+00,2.5895e+00,1.9000e+00,2.6382e+00,2.6037e+00,1.7650e+00,2.6382e+00,2.6037e+00,1.9000e+00,2.6331e+00,2.6187e+00,1.7650e+00,2.6331e+00,2.6187e+00,1.9000e+00,2.6300e+00,2.6342e+00,1.7650e+00,2.6300e+00,2.6342e+00,1.9000e+00,2.6290e+00,2.6500e+00,1.7650e+00,2.6290e+00,2.6500e+00,1.9000e+00,2.6300e+00,2.6658e+00,1.7650e+00,2.6300e+00,2.6658e+00,1.9000e+00,2.6331e+00,2.6813e+00,1.7650e+00,2.6331e+00,2.6813e+00,1.9000e+00,2.6382e+00,2.6963e+00,1.7650e+00,2.6382e+00,2.6963e+00,1.9000e+00,2.6452e+00,2.7105e+00,1.7650e+00,2.6452e+00,2.7105e+00,1.9000e+00,2.6540e+00,2.7237e+00,1.7650e+00,2.6540e+00,2.7237e+00,1.9000e+00,2.6644e+00,2.7356e+00,1.7650e+00,2.6644e+00,2.7356e+00,1.9000e+00,2.6763e+00,2.7460e+00,1.7650e+00,2.6763e+00,2.7460e+00,1.9000e+00,2.6895e+00,2.7548e+00,1.7650e+00,2.6895e+00,2.7548e+00,1.9000e+00,2.7037e+00,2.7618e+00,1.7650e+00,2.7037e+00,2.7618e+00,1.9000e+00,2.7187e+00,2.7669e+00,1.7650e+00,2.7187e+00,2.7669e+00,1.9000e+00,2.7342e+00,2.7700e+00,1.7650e+00,2.7342e+00,2.7700e+00,1.9000e+00,2.7500e+00,2.7710e+00,1.7650e+00,2.7500e+00,2.7710e+00,1.9000e+00,2.7658e+00,2.7700e+00,1.7650e+00,2.7658e+00,2.7700e+00,1.9000e+00,2.7813e+00,2.7669e+00,1.7650e+00,2.7813e+00,2.7669e+00,1.9000e+00,2.7963e+00,2.7618e+00,1.7650e+00,2.7963e+00,2.7618e+00,1.9000e+00,2.8105e+00,2.7548e+00,1.7650e+00,2.8105e+00,2.7548e+00,1.9000e+00,2.8237e+00,2.7460e+00,1.7650e+00,2.8237e+00,2.7460e+00,1.9000e+00,2.8356e+00,2.7356e+00,1.7650e+00,2.8356e+00,2.7356e+00,1.9000e+00,2.8460e+00,2.7237e+00,1.7650e+00,2.8460e+00,2.7237e+00,1.9000e+00,2.8548e+00,2.7105e+00,1.7650e+00,2.8548e+00,2.7105e+00,1.9000e+00,2.8618e+00,2.6963e+00,1.7650e+00,2.8618e+00,2.6963e+00,1.9000e+00,2.8669e+00,2.6813e+00,1.7650e+00,2.8669e+00,2.6813e+00,1.9000e+00,2.8700e+00,2.6658e+00,1.7650e+00,2.8700e+00,2.6658e+00,1.9000e+00,2.8710e+00,2.6500e+00,1.7650e+00,2.8710e+00,2.6500e+00,1.9000e+00,2.8700e+00,2.6342e+00,1.7650e+00,2.8700e+00,2.6342e+00,1.9000e+00,2.8669e+00,2.6187e+00,1.7650e+00,2.8669e+00,2.6187e+00,1.9000e+00,2.8618e+00,2.6037e+00,1.7650e+00,2.8618e+00,2.6037e+00,1.9000e+00,2.8548e+00,2.5895e+00,1.7650e+00,2.8548e+00,2.5895e+00,1.9000e+00,2.8460e+00,2.5763e+00,1.7650e+00,2.8460e+00,2.5763e+00,1.9000e+00,2.8356e+00,2.5644e+00,1.7650e+00,2.8356e+00,2.5644e+00,1.9000e+00,2.8237e+00,2.5540e+00,1.7650e+00,2.8237e+00,2.5540e+00,1.9000e+00,2.8105e+00,2.5452e+00,1.7650e+00,2.8105e+00,2.5452e+00,1.9000e+00,2.7963e+00,2.5382e+00,1.7650e+00,2.7963e+00,2.5382e+00,1.9000e+00,2.7813e+00,2.5331e+00,1.7650e+00,2.7813e+00,2.5331e+00,1.9000e+00,2.7658e+00,2.5300e+00,1.7650e+00,2.7658e+00,2.5300e+00,1.9000e+00});
			return Coordinate_7_507_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #508, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_508_vector()
		{
			MFVec3f Normal_7_508_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_508_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #514, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_514_point()
		{
			MFVec3f Coordinate_7_514_point = new MFVec3f(new double[] {2.7500e+00,-1.1210e+00,1.7650e+00,2.7500e+00,-1.1210e+00,1.9000e+00,2.7342e+00,-1.1200e+00,1.7650e+00,2.7342e+00,-1.1200e+00,1.9000e+00,2.7187e+00,-1.1169e+00,1.7650e+00,2.7187e+00,-1.1169e+00,1.9000e+00,2.7037e+00,-1.1118e+00,1.7650e+00,2.7037e+00,-1.1118e+00,1.9000e+00,2.6895e+00,-1.1048e+00,1.7650e+00,2.6895e+00,-1.1048e+00,1.9000e+00,2.6763e+00,-1.0960e+00,1.7650e+00,2.6763e+00,-1.0960e+00,1.9000e+00,2.6644e+00,-1.0856e+00,1.7650e+00,2.6644e+00,-1.0856e+00,1.9000e+00,2.6540e+00,-1.0737e+00,1.7650e+00,2.6540e+00,-1.0737e+00,1.9000e+00,2.6452e+00,-1.0605e+00,1.7650e+00,2.6452e+00,-1.0605e+00,1.9000e+00,2.6382e+00,-1.0463e+00,1.7650e+00,2.6382e+00,-1.0463e+00,1.9000e+00,2.6331e+00,-1.0313e+00,1.7650e+00,2.6331e+00,-1.0313e+00,1.9000e+00,2.6300e+00,-1.0158e+00,1.7650e+00,2.6300e+00,-1.0158e+00,1.9000e+00,2.6290e+00,-1.0000e+00,1.7650e+00,2.6290e+00,-1.0000e+00,1.9000e+00,2.6300e+00,-9.8421e-01,1.7650e+00,2.6300e+00,-9.8421e-01,1.9000e+00,2.6331e+00,-9.6868e-01,1.7650e+00,2.6331e+00,-9.6868e-01,1.9000e+00,2.6382e+00,-9.5370e-01,1.7650e+00,2.6382e+00,-9.5370e-01,1.9000e+00,2.6452e+00,-9.3950e-01,1.7650e+00,2.6452e+00,-9.3950e-01,1.9000e+00,2.6540e+00,-9.2634e-01,1.7650e+00,2.6540e+00,-9.2634e-01,1.9000e+00,2.6644e+00,-9.1444e-01,1.7650e+00,2.6644e+00,-9.1444e-01,1.9000e+00,2.6763e+00,-9.0400e-01,1.7650e+00,2.6763e+00,-9.0400e-01,1.9000e+00,2.6895e+00,-8.9521e-01,1.7650e+00,2.6895e+00,-8.9521e-01,1.9000e+00,2.7037e+00,-8.8821e-01,1.7650e+00,2.7037e+00,-8.8821e-01,1.9000e+00,2.7187e+00,-8.8312e-01,1.7650e+00,2.7187e+00,-8.8312e-01,1.9000e+00,2.7342e+00,-8.8004e-01,1.7650e+00,2.7342e+00,-8.8004e-01,1.9000e+00,2.7500e+00,-8.7900e-01,1.7650e+00,2.7500e+00,-8.7900e-01,1.9000e+00,2.7658e+00,-8.8004e-01,1.7650e+00,2.7658e+00,-8.8004e-01,1.9000e+00,2.7813e+00,-8.8312e-01,1.7650e+00,2.7813e+00,-8.8312e-01,1.9000e+00,2.7963e+00,-8.8821e-01,1.7650e+00,2.7963e+00,-8.8821e-01,1.9000e+00,2.8105e+00,-8.9521e-01,1.7650e+00,2.8105e+00,-8.9521e-01,1.9000e+00,2.8237e+00,-9.0400e-01,1.7650e+00,2.8237e+00,-9.0400e-01,1.9000e+00,2.8356e+00,-9.1444e-01,1.7650e+00,2.8356e+00,-9.1444e-01,1.9000e+00,2.8460e+00,-9.2634e-01,1.7650e+00,2.8460e+00,-9.2634e-01,1.9000e+00,2.8548e+00,-9.3950e-01,1.7650e+00,2.8548e+00,-9.3950e-01,1.9000e+00,2.8618e+00,-9.5370e-01,1.7650e+00,2.8618e+00,-9.5370e-01,1.9000e+00,2.8669e+00,-9.6868e-01,1.7650e+00,2.8669e+00,-9.6868e-01,1.9000e+00,2.8700e+00,-9.8421e-01,1.7650e+00,2.8700e+00,-9.8421e-01,1.9000e+00,2.8710e+00,-1.0000e+00,1.7650e+00,2.8710e+00,-1.0000e+00,1.9000e+00,2.8700e+00,-1.0158e+00,1.7650e+00,2.8700e+00,-1.0158e+00,1.9000e+00,2.8669e+00,-1.0313e+00,1.7650e+00,2.8669e+00,-1.0313e+00,1.9000e+00,2.8618e+00,-1.0463e+00,1.7650e+00,2.8618e+00,-1.0463e+00,1.9000e+00,2.8548e+00,-1.0605e+00,1.7650e+00,2.8548e+00,-1.0605e+00,1.9000e+00,2.8460e+00,-1.0737e+00,1.7650e+00,2.8460e+00,-1.0737e+00,1.9000e+00,2.8356e+00,-1.0856e+00,1.7650e+00,2.8356e+00,-1.0856e+00,1.9000e+00,2.8237e+00,-1.0960e+00,1.7650e+00,2.8237e+00,-1.0960e+00,1.9000e+00,2.8105e+00,-1.1048e+00,1.7650e+00,2.8105e+00,-1.1048e+00,1.9000e+00,2.7963e+00,-1.1118e+00,1.7650e+00,2.7963e+00,-1.1118e+00,1.9000e+00,2.7813e+00,-1.1169e+00,1.7650e+00,2.7813e+00,-1.1169e+00,1.9000e+00,2.7658e+00,-1.1200e+00,1.7650e+00,2.7658e+00,-1.1200e+00,1.9000e+00});
			return Coordinate_7_514_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #515, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_515_vector()
		{
			MFVec3f Normal_7_515_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_515_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #527, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_527_point()
		{
			MFVec3f Coordinate_7_527_point = new MFVec3f(new double[] {2.6500e+00,-2.1500e+00,1.7650e+00,2.6500e+00,-2.1500e+00,1.9000e+00,2.6474e+00,-2.1892e+00,1.7650e+00,2.6474e+00,-2.1892e+00,1.9000e+00,2.6398e+00,-2.2276e+00,1.7650e+00,2.6398e+00,-2.2276e+00,1.9000e+00,2.6272e+00,-2.2648e+00,1.7650e+00,2.6272e+00,-2.2648e+00,1.9000e+00,2.6098e+00,-2.3000e+00,1.7650e+00,2.6098e+00,-2.3000e+00,1.9000e+00,2.5880e+00,-2.3326e+00,1.7650e+00,2.5880e+00,-2.3326e+00,1.9000e+00,2.5621e+00,-2.3621e+00,1.7650e+00,2.5621e+00,-2.3621e+00,1.9000e+00,2.5326e+00,-2.3880e+00,1.7650e+00,2.5326e+00,-2.3880e+00,1.9000e+00,2.5000e+00,-2.4098e+00,1.7650e+00,2.5000e+00,-2.4098e+00,1.9000e+00,2.4648e+00,-2.4272e+00,1.7650e+00,2.4648e+00,-2.4272e+00,1.9000e+00,2.4276e+00,-2.4398e+00,1.7650e+00,2.4276e+00,-2.4398e+00,1.9000e+00,2.3892e+00,-2.4474e+00,1.7650e+00,2.3892e+00,-2.4474e+00,1.9000e+00,2.3500e+00,-2.4500e+00,1.7650e+00,2.3500e+00,-2.4500e+00,1.9000e+00,2.3108e+00,-2.4474e+00,1.7650e+00,2.3108e+00,-2.4474e+00,1.9000e+00,2.2724e+00,-2.4398e+00,1.7650e+00,2.2724e+00,-2.4398e+00,1.9000e+00,2.2352e+00,-2.4272e+00,1.7650e+00,2.2352e+00,-2.4272e+00,1.9000e+00,2.2000e+00,-2.4098e+00,1.7650e+00,2.2000e+00,-2.4098e+00,1.9000e+00,2.1674e+00,-2.3880e+00,1.7650e+00,2.1674e+00,-2.3880e+00,1.9000e+00,2.1379e+00,-2.3621e+00,1.7650e+00,2.1379e+00,-2.3621e+00,1.9000e+00,2.1120e+00,-2.3326e+00,1.7650e+00,2.1120e+00,-2.3326e+00,1.9000e+00,2.0902e+00,-2.3000e+00,1.7650e+00,2.0902e+00,-2.3000e+00,1.9000e+00,2.0728e+00,-2.2648e+00,1.7650e+00,2.0728e+00,-2.2648e+00,1.9000e+00,2.0602e+00,-2.2276e+00,1.7650e+00,2.0602e+00,-2.2276e+00,1.9000e+00,2.0526e+00,-2.1892e+00,1.7650e+00,2.0526e+00,-2.1892e+00,1.9000e+00,2.0500e+00,-2.1500e+00,1.7650e+00,2.0500e+00,-2.1500e+00,1.9000e+00});
			return Coordinate_7_527_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #528, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_528_vector()
		{
			MFVec3f Normal_7_528_vector = new MFVec3f(new double[] {-1.0000e+00,6.1232e-17,-0.0000e+00,-1.0000e+00,6.1232e-17,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00});
			return Normal_7_528_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #540, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_540_point()
		{
			MFVec3f Coordinate_7_540_point = new MFVec3f(new double[] {2.6500e+00,-1.6250e+00,1.7650e+00,2.6500e+00,-1.6250e+00,1.9000e+00,2.6761e+00,-1.6267e+00,1.7650e+00,2.6761e+00,-1.6267e+00,1.9000e+00,2.7018e+00,-1.6318e+00,1.7650e+00,2.7018e+00,-1.6318e+00,1.9000e+00,2.7265e+00,-1.6402e+00,1.7650e+00,2.7265e+00,-1.6402e+00,1.9000e+00,2.7500e+00,-1.6518e+00,1.7650e+00,2.7500e+00,-1.6518e+00,1.9000e+00,2.7718e+00,-1.6663e+00,1.7650e+00,2.7718e+00,-1.6663e+00,1.9000e+00,2.7914e+00,-1.6836e+00,1.7650e+00,2.7914e+00,-1.6836e+00,1.9000e+00,2.8087e+00,-1.7032e+00,1.7650e+00,2.8087e+00,-1.7032e+00,1.9000e+00,2.8232e+00,-1.7250e+00,1.7650e+00,2.8232e+00,-1.7250e+00,1.9000e+00,2.8348e+00,-1.7485e+00,1.7650e+00,2.8348e+00,-1.7485e+00,1.9000e+00,2.8432e+00,-1.7732e+00,1.7650e+00,2.8432e+00,-1.7732e+00,1.9000e+00,2.8483e+00,-1.7989e+00,1.7650e+00,2.8483e+00,-1.7989e+00,1.9000e+00,2.8500e+00,-1.8250e+00,1.7650e+00,2.8500e+00,-1.8250e+00,1.9000e+00,2.8483e+00,-1.8511e+00,1.7650e+00,2.8483e+00,-1.8511e+00,1.9000e+00,2.8432e+00,-1.8768e+00,1.7650e+00,2.8432e+00,-1.8768e+00,1.9000e+00,2.8348e+00,-1.9015e+00,1.7650e+00,2.8348e+00,-1.9015e+00,1.9000e+00,2.8232e+00,-1.9250e+00,1.7650e+00,2.8232e+00,-1.9250e+00,1.9000e+00,2.8087e+00,-1.9468e+00,1.7650e+00,2.8087e+00,-1.9468e+00,1.9000e+00,2.7914e+00,-1.9664e+00,1.7650e+00,2.7914e+00,-1.9664e+00,1.9000e+00,2.7718e+00,-1.9837e+00,1.7650e+00,2.7718e+00,-1.9837e+00,1.9000e+00,2.7500e+00,-1.9982e+00,1.7650e+00,2.7500e+00,-1.9982e+00,1.9000e+00,2.7265e+00,-2.0098e+00,1.7650e+00,2.7265e+00,-2.0098e+00,1.9000e+00,2.7018e+00,-2.0182e+00,1.7650e+00,2.7018e+00,-2.0182e+00,1.9000e+00,2.6761e+00,-2.0233e+00,1.7650e+00,2.6761e+00,-2.0233e+00,1.9000e+00,2.6500e+00,-2.0250e+00,1.7650e+00,2.6500e+00,-2.0250e+00,1.9000e+00});
			return Coordinate_7_540_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #541, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_541_vector()
		{
			MFVec3f Normal_7_541_vector = new MFVec3f(new double[] {1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.4493e-16,1.0000e+00,-0.0000e+00,-2.4493e-16,1.0000e+00,-0.0000e+00});
			return Normal_7_541_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #553, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_553_point()
		{
			MFVec3f Coordinate_7_553_point = new MFVec3f(new double[] {2.0500e+00,-1.5000e+00,1.7650e+00,2.0500e+00,-1.5000e+00,1.9000e+00,2.0526e+00,-1.4608e+00,1.7650e+00,2.0526e+00,-1.4608e+00,1.9000e+00,2.0602e+00,-1.4224e+00,1.7650e+00,2.0602e+00,-1.4224e+00,1.9000e+00,2.0728e+00,-1.3852e+00,1.7650e+00,2.0728e+00,-1.3852e+00,1.9000e+00,2.0902e+00,-1.3500e+00,1.7650e+00,2.0902e+00,-1.3500e+00,1.9000e+00,2.1120e+00,-1.3174e+00,1.7650e+00,2.1120e+00,-1.3174e+00,1.9000e+00,2.1379e+00,-1.2879e+00,1.7650e+00,2.1379e+00,-1.2879e+00,1.9000e+00,2.1674e+00,-1.2620e+00,1.7650e+00,2.1674e+00,-1.2620e+00,1.9000e+00,2.2000e+00,-1.2402e+00,1.7650e+00,2.2000e+00,-1.2402e+00,1.9000e+00,2.2352e+00,-1.2228e+00,1.7650e+00,2.2352e+00,-1.2228e+00,1.9000e+00,2.2724e+00,-1.2102e+00,1.7650e+00,2.2724e+00,-1.2102e+00,1.9000e+00,2.3108e+00,-1.2026e+00,1.7650e+00,2.3108e+00,-1.2026e+00,1.9000e+00,2.3500e+00,-1.2000e+00,1.7650e+00,2.3500e+00,-1.2000e+00,1.9000e+00,2.3892e+00,-1.2026e+00,1.7650e+00,2.3892e+00,-1.2026e+00,1.9000e+00,2.4276e+00,-1.2102e+00,1.7650e+00,2.4276e+00,-1.2102e+00,1.9000e+00,2.4648e+00,-1.2228e+00,1.7650e+00,2.4648e+00,-1.2228e+00,1.9000e+00,2.5000e+00,-1.2402e+00,1.7650e+00,2.5000e+00,-1.2402e+00,1.9000e+00,2.5326e+00,-1.2620e+00,1.7650e+00,2.5326e+00,-1.2620e+00,1.9000e+00,2.5621e+00,-1.2879e+00,1.7650e+00,2.5621e+00,-1.2879e+00,1.9000e+00,2.5880e+00,-1.3174e+00,1.7650e+00,2.5880e+00,-1.3174e+00,1.9000e+00,2.6098e+00,-1.3500e+00,1.7650e+00,2.6098e+00,-1.3500e+00,1.9000e+00,2.6272e+00,-1.3852e+00,1.7650e+00,2.6272e+00,-1.3852e+00,1.9000e+00,2.6398e+00,-1.4224e+00,1.7650e+00,2.6398e+00,-1.4224e+00,1.9000e+00,2.6474e+00,-1.4608e+00,1.7650e+00,2.6474e+00,-1.4608e+00,1.9000e+00,2.6500e+00,-1.5000e+00,1.7650e+00,2.6500e+00,-1.5000e+00,1.9000e+00});
			return Coordinate_7_553_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #554, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_554_vector()
		{
			MFVec3f Normal_7_554_vector = new MFVec3f(new double[] {1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00});
			return Normal_7_554_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #578, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_578_point()
		{
			MFVec3f Coordinate_7_578_point = new MFVec3f(new double[] {2.6500e+00,1.5000e+00,1.7650e+00,2.6500e+00,1.5000e+00,1.9000e+00,2.6474e+00,1.4608e+00,1.7650e+00,2.6474e+00,1.4608e+00,1.9000e+00,2.6398e+00,1.4224e+00,1.7650e+00,2.6398e+00,1.4224e+00,1.9000e+00,2.6272e+00,1.3852e+00,1.7650e+00,2.6272e+00,1.3852e+00,1.9000e+00,2.6098e+00,1.3500e+00,1.7650e+00,2.6098e+00,1.3500e+00,1.9000e+00,2.5880e+00,1.3174e+00,1.7650e+00,2.5880e+00,1.3174e+00,1.9000e+00,2.5621e+00,1.2879e+00,1.7650e+00,2.5621e+00,1.2879e+00,1.9000e+00,2.5326e+00,1.2620e+00,1.7650e+00,2.5326e+00,1.2620e+00,1.9000e+00,2.5000e+00,1.2402e+00,1.7650e+00,2.5000e+00,1.2402e+00,1.9000e+00,2.4648e+00,1.2228e+00,1.7650e+00,2.4648e+00,1.2228e+00,1.9000e+00,2.4276e+00,1.2102e+00,1.7650e+00,2.4276e+00,1.2102e+00,1.9000e+00,2.3892e+00,1.2026e+00,1.7650e+00,2.3892e+00,1.2026e+00,1.9000e+00,2.3500e+00,1.2000e+00,1.7650e+00,2.3500e+00,1.2000e+00,1.9000e+00,2.3108e+00,1.2026e+00,1.7650e+00,2.3108e+00,1.2026e+00,1.9000e+00,2.2724e+00,1.2102e+00,1.7650e+00,2.2724e+00,1.2102e+00,1.9000e+00,2.2352e+00,1.2228e+00,1.7650e+00,2.2352e+00,1.2228e+00,1.9000e+00,2.2000e+00,1.2402e+00,1.7650e+00,2.2000e+00,1.2402e+00,1.9000e+00,2.1674e+00,1.2620e+00,1.7650e+00,2.1674e+00,1.2620e+00,1.9000e+00,2.1379e+00,1.2879e+00,1.7650e+00,2.1379e+00,1.2879e+00,1.9000e+00,2.1120e+00,1.3174e+00,1.7650e+00,2.1120e+00,1.3174e+00,1.9000e+00,2.0902e+00,1.3500e+00,1.7650e+00,2.0902e+00,1.3500e+00,1.9000e+00,2.0728e+00,1.3852e+00,1.7650e+00,2.0728e+00,1.3852e+00,1.9000e+00,2.0602e+00,1.4224e+00,1.7650e+00,2.0602e+00,1.4224e+00,1.9000e+00,2.0526e+00,1.4608e+00,1.7650e+00,2.0526e+00,1.4608e+00,1.9000e+00,2.0500e+00,1.5000e+00,1.7650e+00,2.0500e+00,1.5000e+00,1.9000e+00});
			return Coordinate_7_578_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #579, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_579_vector()
		{
			MFVec3f Normal_7_579_vector = new MFVec3f(new double[] {-1.0000e+00,6.1232e-17,-0.0000e+00,-1.0000e+00,6.1232e-17,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00});
			return Normal_7_579_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #591, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_591_point()
		{
			MFVec3f Coordinate_7_591_point = new MFVec3f(new double[] {2.6500e+00,2.0250e+00,1.7650e+00,2.6500e+00,2.0250e+00,1.9000e+00,2.6761e+00,2.0233e+00,1.7650e+00,2.6761e+00,2.0233e+00,1.9000e+00,2.7018e+00,2.0182e+00,1.7650e+00,2.7018e+00,2.0182e+00,1.9000e+00,2.7265e+00,2.0098e+00,1.7650e+00,2.7265e+00,2.0098e+00,1.9000e+00,2.7500e+00,1.9982e+00,1.7650e+00,2.7500e+00,1.9982e+00,1.9000e+00,2.7718e+00,1.9837e+00,1.7650e+00,2.7718e+00,1.9837e+00,1.9000e+00,2.7914e+00,1.9664e+00,1.7650e+00,2.7914e+00,1.9664e+00,1.9000e+00,2.8087e+00,1.9468e+00,1.7650e+00,2.8087e+00,1.9468e+00,1.9000e+00,2.8232e+00,1.9250e+00,1.7650e+00,2.8232e+00,1.9250e+00,1.9000e+00,2.8348e+00,1.9015e+00,1.7650e+00,2.8348e+00,1.9015e+00,1.9000e+00,2.8432e+00,1.8768e+00,1.7650e+00,2.8432e+00,1.8768e+00,1.9000e+00,2.8483e+00,1.8511e+00,1.7650e+00,2.8483e+00,1.8511e+00,1.9000e+00,2.8500e+00,1.8250e+00,1.7650e+00,2.8500e+00,1.8250e+00,1.9000e+00,2.8483e+00,1.7989e+00,1.7650e+00,2.8483e+00,1.7989e+00,1.9000e+00,2.8432e+00,1.7732e+00,1.7650e+00,2.8432e+00,1.7732e+00,1.9000e+00,2.8348e+00,1.7485e+00,1.7650e+00,2.8348e+00,1.7485e+00,1.9000e+00,2.8232e+00,1.7250e+00,1.7650e+00,2.8232e+00,1.7250e+00,1.9000e+00,2.8087e+00,1.7032e+00,1.7650e+00,2.8087e+00,1.7032e+00,1.9000e+00,2.7914e+00,1.6836e+00,1.7650e+00,2.7914e+00,1.6836e+00,1.9000e+00,2.7718e+00,1.6663e+00,1.7650e+00,2.7718e+00,1.6663e+00,1.9000e+00,2.7500e+00,1.6518e+00,1.7650e+00,2.7500e+00,1.6518e+00,1.9000e+00,2.7265e+00,1.6402e+00,1.7650e+00,2.7265e+00,1.6402e+00,1.9000e+00,2.7018e+00,1.6318e+00,1.7650e+00,2.7018e+00,1.6318e+00,1.9000e+00,2.6761e+00,1.6267e+00,1.7650e+00,2.6761e+00,1.6267e+00,1.9000e+00,2.6500e+00,1.6250e+00,1.7650e+00,2.6500e+00,1.6250e+00,1.9000e+00});
			return Coordinate_7_591_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #592, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_592_vector()
		{
			MFVec3f Normal_7_592_vector = new MFVec3f(new double[] {1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.4493e-16,1.0000e+00,-0.0000e+00,-2.4493e-16,1.0000e+00,-0.0000e+00});
			return Normal_7_592_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #604, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_604_point()
		{
			MFVec3f Coordinate_7_604_point = new MFVec3f(new double[] {2.0500e+00,2.1500e+00,1.7650e+00,2.0500e+00,2.1500e+00,1.9000e+00,2.0526e+00,2.1892e+00,1.7650e+00,2.0526e+00,2.1892e+00,1.9000e+00,2.0602e+00,2.2276e+00,1.7650e+00,2.0602e+00,2.2276e+00,1.9000e+00,2.0728e+00,2.2648e+00,1.7650e+00,2.0728e+00,2.2648e+00,1.9000e+00,2.0902e+00,2.3000e+00,1.7650e+00,2.0902e+00,2.3000e+00,1.9000e+00,2.1120e+00,2.3326e+00,1.7650e+00,2.1120e+00,2.3326e+00,1.9000e+00,2.1379e+00,2.3621e+00,1.7650e+00,2.1379e+00,2.3621e+00,1.9000e+00,2.1674e+00,2.3880e+00,1.7650e+00,2.1674e+00,2.3880e+00,1.9000e+00,2.2000e+00,2.4098e+00,1.7650e+00,2.2000e+00,2.4098e+00,1.9000e+00,2.2352e+00,2.4272e+00,1.7650e+00,2.2352e+00,2.4272e+00,1.9000e+00,2.2724e+00,2.4398e+00,1.7650e+00,2.2724e+00,2.4398e+00,1.9000e+00,2.3108e+00,2.4474e+00,1.7650e+00,2.3108e+00,2.4474e+00,1.9000e+00,2.3500e+00,2.4500e+00,1.7650e+00,2.3500e+00,2.4500e+00,1.9000e+00,2.3892e+00,2.4474e+00,1.7650e+00,2.3892e+00,2.4474e+00,1.9000e+00,2.4276e+00,2.4398e+00,1.7650e+00,2.4276e+00,2.4398e+00,1.9000e+00,2.4648e+00,2.4272e+00,1.7650e+00,2.4648e+00,2.4272e+00,1.9000e+00,2.5000e+00,2.4098e+00,1.7650e+00,2.5000e+00,2.4098e+00,1.9000e+00,2.5326e+00,2.3880e+00,1.7650e+00,2.5326e+00,2.3880e+00,1.9000e+00,2.5621e+00,2.3621e+00,1.7650e+00,2.5621e+00,2.3621e+00,1.9000e+00,2.5880e+00,2.3326e+00,1.7650e+00,2.5880e+00,2.3326e+00,1.9000e+00,2.6098e+00,2.3000e+00,1.7650e+00,2.6098e+00,2.3000e+00,1.9000e+00,2.6272e+00,2.2648e+00,1.7650e+00,2.6272e+00,2.2648e+00,1.9000e+00,2.6398e+00,2.2276e+00,1.7650e+00,2.6398e+00,2.2276e+00,1.9000e+00,2.6474e+00,2.1892e+00,1.7650e+00,2.6474e+00,2.1892e+00,1.9000e+00,2.6500e+00,2.1500e+00,1.7650e+00,2.6500e+00,2.1500e+00,1.9000e+00});
			return Coordinate_7_604_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #605, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_605_vector()
		{
			MFVec3f Normal_7_605_vector = new MFVec3f(new double[] {1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00});
			return Normal_7_605_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #647, 108 total numbers made up of 36 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_647_point()
		{
			MFVec3f Coordinate_7_647_point = new MFVec3f(new double[] {-4.6818e+00,3.0185e+00,1.8500e+00,-4.6872e+00,3.0364e+00,1.8500e+00,-4.6960e+00,3.0528e+00,1.8500e+00,-4.7078e+00,3.0672e+00,1.8500e+00,-4.7222e+00,3.0790e+00,1.8500e+00,-4.7386e+00,3.0878e+00,1.8500e+00,-4.7565e+00,3.0932e+00,1.8500e+00,-4.7750e+00,3.0950e+00,1.8500e+00,-5.0250e+00,3.0950e+00,1.8500e+00,-5.0435e+00,3.0932e+00,1.8500e+00,-5.0614e+00,3.0878e+00,1.8500e+00,-5.0778e+00,3.0790e+00,1.8500e+00,-5.0922e+00,3.0672e+00,1.8500e+00,-5.1040e+00,3.0528e+00,1.8500e+00,-5.1128e+00,3.0364e+00,1.8500e+00,-5.1182e+00,3.0185e+00,1.8500e+00,-5.1200e+00,3.0000e+00,1.8500e+00,-5.1200e+00,-3.0000e+00,1.8500e+00,-5.1182e+00,-3.0185e+00,1.8500e+00,-5.1128e+00,-3.0364e+00,1.8500e+00,-5.1040e+00,-3.0528e+00,1.8500e+00,-5.0922e+00,-3.0672e+00,1.8500e+00,-5.0778e+00,-3.0790e+00,1.8500e+00,-5.0614e+00,-3.0878e+00,1.8500e+00,-5.0435e+00,-3.0932e+00,1.8500e+00,-5.0250e+00,-3.0950e+00,1.8500e+00,-4.7750e+00,-3.0950e+00,1.8500e+00,-4.7565e+00,-3.0932e+00,1.8500e+00,-4.7386e+00,-3.0878e+00,1.8500e+00,-4.7222e+00,-3.0790e+00,1.8500e+00,-4.7078e+00,-3.0672e+00,1.8500e+00,-4.6960e+00,-3.0528e+00,1.8500e+00,-4.6872e+00,-3.0364e+00,1.8500e+00,-4.6818e+00,-3.0185e+00,1.8500e+00,-4.6800e+00,-3.0000e+00,1.8500e+00,-4.6800e+00,3.0000e+00,1.8500e+00});
			return Coordinate_7_647_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #856, 384 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_856_index()
		{
			MFInt32 IndexedTriangleSet_6_856_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_856_index_1()));
			return IndexedTriangleSet_6_856_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #856, 243 total numbers made up of 81 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_856_point()
		{
			MFVec3f Coordinate_7_856_point = new MFVec3f(new double[] {-4.7750e+00,-3.1250e+00,1.8800e+00,-4.7750e+00,-3.1244e+00,1.8741e+00,-4.7750e+00,-3.1227e+00,1.8685e+00,-4.7750e+00,-3.1199e+00,1.8633e+00,-4.7750e+00,-3.1162e+00,1.8588e+00,-4.7750e+00,-3.1117e+00,1.8551e+00,-4.7750e+00,-3.1065e+00,1.8523e+00,-4.7750e+00,-3.1009e+00,1.8506e+00,-4.7750e+00,-3.0950e+00,1.8500e+00,-4.7506e+00,-3.1226e+00,1.8800e+00,-4.7507e+00,-3.1220e+00,1.8741e+00,-4.7511e+00,-3.1204e+00,1.8685e+00,-4.7516e+00,-3.1176e+00,1.8633e+00,-4.7523e+00,-3.1140e+00,1.8588e+00,-4.7532e+00,-3.1095e+00,1.8551e+00,-4.7542e+00,-3.1044e+00,1.8523e+00,-4.7553e+00,-3.0989e+00,1.8506e+00,-4.7565e+00,-3.0932e+00,1.8500e+00,-4.7272e+00,-3.1155e+00,1.8800e+00,-4.7274e+00,-3.1150e+00,1.8741e+00,-4.7280e+00,-3.1134e+00,1.8685e+00,-4.7291e+00,-3.1108e+00,1.8633e+00,-4.7305e+00,-3.1074e+00,1.8588e+00,-4.7323e+00,-3.1032e+00,1.8551e+00,-4.7343e+00,-3.0984e+00,1.8523e+00,-4.7364e+00,-3.0932e+00,1.8506e+00,-4.7386e+00,-3.0878e+00,1.8500e+00,-4.7056e+00,-3.1039e+00,1.8800e+00,-4.7059e+00,-3.1035e+00,1.8741e+00,-4.7068e+00,-3.1020e+00,1.8685e+00,-4.7084e+00,-3.0997e+00,1.8633e+00,-4.7104e+00,-3.0966e+00,1.8588e+00,-4.7130e+00,-3.0928e+00,1.8551e+00,-4.7158e+00,-3.0885e+00,1.8523e+00,-4.7190e+00,-3.0839e+00,1.8506e+00,-4.7222e+00,-3.0790e+00,1.8500e+00,-4.6866e+00,-3.0884e+00,1.8800e+00,-4.6870e+00,-3.0880e+00,1.8741e+00,-4.6882e+00,-3.0868e+00,1.8685e+00,-4.6902e+00,-3.0848e+00,1.8633e+00,-4.6928e+00,-3.0822e+00,1.8588e+00,-4.6960e+00,-3.0790e+00,1.8551e+00,-4.6997e+00,-3.0753e+00,1.8523e+00,-4.7037e+00,-3.0713e+00,1.8506e+00,-4.7078e+00,-3.0672e+00,1.8500e+00,-4.6711e+00,-3.0694e+00,1.8800e+00,-4.6715e+00,-3.0691e+00,1.8741e+00,-4.6730e+00,-3.0682e+00,1.8685e+00,-4.6753e+00,-3.0666e+00,1.8633e+00,-4.6784e+00,-3.0646e+00,1.8588e+00,-4.6822e+00,-3.0620e+00,1.8551e+00,-4.6865e+00,-3.0592e+00,1.8523e+00,-4.6911e+00,-3.0560e+00,1.8506e+00,-4.6960e+00,-3.0528e+00,1.8500e+00,-4.6595e+00,-3.0478e+00,1.8800e+00,-4.6600e+00,-3.0476e+00,1.8741e+00,-4.6616e+00,-3.0470e+00,1.8685e+00,-4.6642e+00,-3.0459e+00,1.8633e+00,-4.6676e+00,-3.0445e+00,1.8588e+00,-4.6718e+00,-3.0427e+00,1.8551e+00,-4.6766e+00,-3.0407e+00,1.8523e+00,-4.6818e+00,-3.0386e+00,1.8506e+00,-4.6872e+00,-3.0364e+00,1.8500e+00,-4.6524e+00,-3.0244e+00,1.8800e+00,-4.6530e+00,-3.0243e+00,1.8741e+00,-4.6546e+00,-3.0239e+00,1.8685e+00,-4.6574e+00,-3.0234e+00,1.8633e+00,-4.6610e+00,-3.0227e+00,1.8588e+00,-4.6655e+00,-3.0218e+00,1.8551e+00,-4.6706e+00,-3.0208e+00,1.8523e+00,-4.6761e+00,-3.0197e+00,1.8506e+00,-4.6818e+00,-3.0185e+00,1.8500e+00,-4.6500e+00,-3.0000e+00,1.8800e+00,-4.6506e+00,-3.0000e+00,1.8741e+00,-4.6523e+00,-3.0000e+00,1.8685e+00,-4.6551e+00,-3.0000e+00,1.8633e+00,-4.6588e+00,-3.0000e+00,1.8588e+00,-4.6633e+00,-3.0000e+00,1.8551e+00,-4.6685e+00,-3.0000e+00,1.8523e+00,-4.6741e+00,-3.0000e+00,1.8506e+00,-4.6800e+00,-3.0000e+00,1.8500e+00});
			return Coordinate_7_856_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #857, 243 total numbers made up of 81 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_857_vector()
		{
			MFVec3f Normal_7_857_vector = new MFVec3f(new double[] {1.2246e-16,1.0000e+00,-6.1232e-17,1.2011e-16,9.8079e-01,1.9509e-01,1.1314e-16,9.2388e-01,3.8268e-01,1.0183e-16,8.3147e-01,5.5557e-01,8.6596e-17,7.0711e-01,7.0711e-01,6.8038e-17,5.5557e-01,8.3147e-01,4.6865e-17,3.8268e-01,9.2388e-01,2.3892e-17,1.9509e-01,9.8079e-01,2.6255e-30,2.1439e-14,1.0000e+00,-1.9509e-01,9.8079e-01,-6.1232e-17,-1.9134e-01,9.6194e-01,1.9509e-01,-1.8024e-01,9.0613e-01,3.8268e-01,-1.6221e-01,8.1549e-01,5.5557e-01,-1.3795e-01,6.9352e-01,7.0711e-01,-1.0839e-01,5.4490e-01,8.3147e-01,-7.4658e-02,3.7533e-01,9.2388e-01,-3.8060e-02,1.9134e-01,9.8079e-01,-4.1825e-15,2.1027e-14,1.0000e+00,-3.8268e-01,9.2388e-01,-6.1232e-17,-3.7533e-01,9.0613e-01,1.9509e-01,-3.5355e-01,8.5355e-01,3.8268e-01,-3.1819e-01,7.6818e-01,5.5557e-01,-2.7060e-01,6.5328e-01,7.0711e-01,-2.1261e-01,5.1328e-01,8.3147e-01,-1.4645e-01,3.5355e-01,9.2388e-01,-7.4658e-02,1.8024e-01,9.8079e-01,-8.2043e-15,1.9807e-14,1.0000e+00,-5.5557e-01,8.3147e-01,-6.1232e-17,-5.4490e-01,8.1549e-01,1.9509e-01,-5.1328e-01,7.6818e-01,3.8268e-01,-4.6194e-01,6.9134e-01,5.5557e-01,-3.9285e-01,5.8794e-01,7.0711e-01,-3.0866e-01,4.6194e-01,8.3147e-01,-2.1261e-01,3.1819e-01,9.2388e-01,-1.0839e-01,1.6221e-01,9.8079e-01,-1.1911e-14,1.7826e-14,1.0000e+00,-7.0711e-01,7.0711e-01,-6.1232e-17,-6.9352e-01,6.9352e-01,1.9509e-01,-6.5328e-01,6.5328e-01,3.8268e-01,-5.8794e-01,5.8794e-01,5.5557e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-3.9285e-01,3.9285e-01,8.3147e-01,-2.7060e-01,2.7060e-01,9.2388e-01,-1.3795e-01,1.3795e-01,9.8079e-01,-1.5159e-14,1.5159e-14,1.0000e+00,-8.3147e-01,5.5557e-01,-6.1232e-17,-8.1549e-01,5.4490e-01,1.9509e-01,-7.6818e-01,5.1328e-01,3.8268e-01,-6.9134e-01,4.6194e-01,5.5557e-01,-5.8794e-01,3.9285e-01,7.0711e-01,-4.6194e-01,3.0866e-01,8.3147e-01,-3.1819e-01,2.1261e-01,9.2388e-01,-1.6221e-01,1.0839e-01,9.8079e-01,-1.7826e-14,1.1911e-14,1.0000e+00,-9.2388e-01,3.8268e-01,-6.1232e-17,-9.0613e-01,3.7533e-01,1.9509e-01,-8.5355e-01,3.5355e-01,3.8268e-01,-7.6818e-01,3.1819e-01,5.5557e-01,-6.5328e-01,2.7060e-01,7.0711e-01,-5.1328e-01,2.1261e-01,8.3147e-01,-3.5355e-01,1.4645e-01,9.2388e-01,-1.8024e-01,7.4658e-02,9.8079e-01,-1.9807e-14,8.2043e-15,1.0000e+00,-9.8079e-01,1.9509e-01,-6.1232e-17,-9.6194e-01,1.9134e-01,1.9509e-01,-9.0613e-01,1.8024e-01,3.8268e-01,-8.1549e-01,1.6221e-01,5.5557e-01,-6.9352e-01,1.3795e-01,7.0711e-01,-5.4490e-01,1.0839e-01,8.3147e-01,-3.7533e-01,7.4658e-02,9.2388e-01,-1.9134e-01,3.8060e-02,9.8079e-01,-2.1027e-14,4.1825e-15,1.0000e+00,-1.0000e+00,1.8370e-16,-6.1232e-17,-9.8079e-01,1.8017e-16,1.9509e-01,-9.2388e-01,1.6971e-16,3.8268e-01,-8.3147e-01,1.5274e-16,5.5557e-01,-7.0711e-01,1.2989e-16,7.0711e-01,-5.5557e-01,1.0206e-16,8.3147e-01,-3.8268e-01,7.0298e-17,9.2388e-01,-1.9509e-01,3.5838e-17,9.8079e-01,-2.1439e-14,3.9382e-30,1.0000e+00});
			return Normal_7_857_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #863, 384 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_863_index()
		{
			MFInt32 IndexedTriangleSet_6_863_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_863_index_1()));
			return IndexedTriangleSet_6_863_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #863, 243 total numbers made up of 81 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_863_point()
		{
			MFVec3f Coordinate_7_863_point = new MFVec3f(new double[] {-5.1500e+00,-3.0000e+00,1.8800e+00,-5.1494e+00,-3.0000e+00,1.8741e+00,-5.1477e+00,-3.0000e+00,1.8685e+00,-5.1449e+00,-3.0000e+00,1.8633e+00,-5.1412e+00,-3.0000e+00,1.8588e+00,-5.1367e+00,-3.0000e+00,1.8551e+00,-5.1315e+00,-3.0000e+00,1.8523e+00,-5.1259e+00,-3.0000e+00,1.8506e+00,-5.1200e+00,-3.0000e+00,1.8500e+00,-5.1476e+00,-3.0244e+00,1.8800e+00,-5.1470e+00,-3.0243e+00,1.8741e+00,-5.1454e+00,-3.0239e+00,1.8685e+00,-5.1426e+00,-3.0234e+00,1.8633e+00,-5.1390e+00,-3.0227e+00,1.8588e+00,-5.1345e+00,-3.0218e+00,1.8551e+00,-5.1294e+00,-3.0208e+00,1.8523e+00,-5.1239e+00,-3.0197e+00,1.8506e+00,-5.1182e+00,-3.0185e+00,1.8500e+00,-5.1405e+00,-3.0478e+00,1.8800e+00,-5.1400e+00,-3.0476e+00,1.8741e+00,-5.1384e+00,-3.0470e+00,1.8685e+00,-5.1358e+00,-3.0459e+00,1.8633e+00,-5.1324e+00,-3.0445e+00,1.8588e+00,-5.1282e+00,-3.0427e+00,1.8551e+00,-5.1234e+00,-3.0407e+00,1.8523e+00,-5.1182e+00,-3.0386e+00,1.8506e+00,-5.1128e+00,-3.0364e+00,1.8500e+00,-5.1289e+00,-3.0694e+00,1.8800e+00,-5.1285e+00,-3.0691e+00,1.8741e+00,-5.1270e+00,-3.0682e+00,1.8685e+00,-5.1247e+00,-3.0666e+00,1.8633e+00,-5.1216e+00,-3.0646e+00,1.8588e+00,-5.1178e+00,-3.0620e+00,1.8551e+00,-5.1135e+00,-3.0592e+00,1.8523e+00,-5.1089e+00,-3.0560e+00,1.8506e+00,-5.1040e+00,-3.0528e+00,1.8500e+00,-5.1134e+00,-3.0884e+00,1.8800e+00,-5.1130e+00,-3.0880e+00,1.8741e+00,-5.1118e+00,-3.0868e+00,1.8685e+00,-5.1098e+00,-3.0848e+00,1.8633e+00,-5.1072e+00,-3.0822e+00,1.8588e+00,-5.1040e+00,-3.0790e+00,1.8551e+00,-5.1003e+00,-3.0753e+00,1.8523e+00,-5.0963e+00,-3.0713e+00,1.8506e+00,-5.0922e+00,-3.0672e+00,1.8500e+00,-5.0944e+00,-3.1039e+00,1.8800e+00,-5.0941e+00,-3.1035e+00,1.8741e+00,-5.0932e+00,-3.1020e+00,1.8685e+00,-5.0916e+00,-3.0997e+00,1.8633e+00,-5.0896e+00,-3.0966e+00,1.8588e+00,-5.0870e+00,-3.0928e+00,1.8551e+00,-5.0842e+00,-3.0885e+00,1.8523e+00,-5.0810e+00,-3.0839e+00,1.8506e+00,-5.0778e+00,-3.0790e+00,1.8500e+00,-5.0728e+00,-3.1155e+00,1.8800e+00,-5.0726e+00,-3.1150e+00,1.8741e+00,-5.0720e+00,-3.1134e+00,1.8685e+00,-5.0709e+00,-3.1108e+00,1.8633e+00,-5.0695e+00,-3.1074e+00,1.8588e+00,-5.0677e+00,-3.1032e+00,1.8551e+00,-5.0657e+00,-3.0984e+00,1.8523e+00,-5.0636e+00,-3.0932e+00,1.8506e+00,-5.0614e+00,-3.0878e+00,1.8500e+00,-5.0494e+00,-3.1226e+00,1.8800e+00,-5.0493e+00,-3.1220e+00,1.8741e+00,-5.0489e+00,-3.1204e+00,1.8685e+00,-5.0484e+00,-3.1176e+00,1.8633e+00,-5.0477e+00,-3.1140e+00,1.8588e+00,-5.0468e+00,-3.1095e+00,1.8551e+00,-5.0458e+00,-3.1044e+00,1.8523e+00,-5.0447e+00,-3.0989e+00,1.8506e+00,-5.0435e+00,-3.0932e+00,1.8500e+00,-5.0250e+00,-3.1250e+00,1.8800e+00,-5.0250e+00,-3.1244e+00,1.8741e+00,-5.0250e+00,-3.1227e+00,1.8685e+00,-5.0250e+00,-3.1199e+00,1.8633e+00,-5.0250e+00,-3.1162e+00,1.8588e+00,-5.0250e+00,-3.1117e+00,1.8551e+00,-5.0250e+00,-3.1065e+00,1.8523e+00,-5.0250e+00,-3.1009e+00,1.8506e+00,-5.0250e+00,-3.0950e+00,1.8500e+00});
			return Coordinate_7_863_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #864, 243 total numbers made up of 81 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_864_vector()
		{
			MFVec3f Normal_7_864_vector = new MFVec3f(new double[] {1.0000e+00,-6.1232e-17,-6.1232e-17,9.8079e-01,-6.0056e-17,1.9509e-01,9.2388e-01,-5.6571e-17,3.8268e-01,8.3147e-01,-5.0913e-17,5.5557e-01,7.0711e-01,-4.3298e-17,7.0711e-01,5.5557e-01,-3.4019e-17,8.3147e-01,3.8268e-01,-2.3433e-17,9.2388e-01,1.9509e-01,-1.1946e-17,9.8079e-01,6.7838e-15,-4.1539e-31,1.0000e+00,9.8079e-01,1.9509e-01,-6.1232e-17,9.6194e-01,1.9134e-01,1.9509e-01,9.0613e-01,1.8024e-01,3.8268e-01,8.1549e-01,1.6221e-01,5.5557e-01,6.9352e-01,1.3795e-01,7.0711e-01,5.4490e-01,1.0839e-01,8.3147e-01,3.7533e-01,7.4658e-02,9.2388e-01,1.9134e-01,3.8060e-02,9.8079e-01,6.6535e-15,1.3235e-15,1.0000e+00,9.2388e-01,3.8268e-01,-6.1232e-17,9.0613e-01,3.7533e-01,1.9509e-01,8.5355e-01,3.5355e-01,3.8268e-01,7.6818e-01,3.1819e-01,5.5557e-01,6.5328e-01,2.7060e-01,7.0711e-01,5.1328e-01,2.1261e-01,8.3147e-01,3.5355e-01,1.4645e-01,9.2388e-01,1.8024e-01,7.4658e-02,9.8079e-01,6.2674e-15,2.5960e-15,1.0000e+00,8.3147e-01,5.5557e-01,-6.1232e-17,8.1549e-01,5.4490e-01,1.9509e-01,7.6818e-01,5.1328e-01,3.8268e-01,6.9134e-01,4.6194e-01,5.5557e-01,5.8794e-01,3.9285e-01,7.0711e-01,4.6194e-01,3.0866e-01,8.3147e-01,3.1819e-01,2.1261e-01,9.2388e-01,1.6221e-01,1.0839e-01,9.8079e-01,5.6405e-15,3.7689e-15,1.0000e+00,7.0711e-01,7.0711e-01,-6.1232e-17,6.9352e-01,6.9352e-01,1.9509e-01,6.5328e-01,6.5328e-01,3.8268e-01,5.8794e-01,5.8794e-01,5.5557e-01,5.0000e-01,5.0000e-01,7.0711e-01,3.9285e-01,3.9285e-01,8.3147e-01,2.7060e-01,2.7060e-01,9.2388e-01,1.3795e-01,1.3795e-01,9.8079e-01,4.7969e-15,4.7969e-15,1.0000e+00,5.5557e-01,8.3147e-01,-6.1232e-17,5.4490e-01,8.1549e-01,1.9509e-01,5.1328e-01,7.6818e-01,3.8268e-01,4.6194e-01,6.9134e-01,5.5557e-01,3.9285e-01,5.8794e-01,7.0711e-01,3.0866e-01,4.6194e-01,8.3147e-01,2.1261e-01,3.1819e-01,9.2388e-01,1.0839e-01,1.6221e-01,9.8079e-01,3.7689e-15,5.6405e-15,1.0000e+00,3.8268e-01,9.2388e-01,-6.1232e-17,3.7533e-01,9.0613e-01,1.9509e-01,3.5355e-01,8.5355e-01,3.8268e-01,3.1819e-01,7.6818e-01,5.5557e-01,2.7060e-01,6.5328e-01,7.0711e-01,2.1261e-01,5.1328e-01,8.3147e-01,1.4645e-01,3.5355e-01,9.2388e-01,7.4658e-02,1.8024e-01,9.8079e-01,2.5960e-15,6.2674e-15,1.0000e+00,1.9509e-01,9.8079e-01,-6.1232e-17,1.9134e-01,9.6194e-01,1.9509e-01,1.8024e-01,9.0613e-01,3.8268e-01,1.6221e-01,8.1549e-01,5.5557e-01,1.3795e-01,6.9352e-01,7.0711e-01,1.0839e-01,5.4490e-01,8.3147e-01,7.4658e-02,3.7533e-01,9.2388e-01,3.8060e-02,1.9134e-01,9.8079e-01,1.3235e-15,6.6535e-15,1.0000e+00,1.2246e-16,1.0000e+00,-6.1232e-17,1.2011e-16,9.8079e-01,1.9509e-01,1.1314e-16,9.2388e-01,3.8268e-01,1.0183e-16,8.3147e-01,5.5557e-01,8.6596e-17,7.0711e-01,7.0711e-01,6.8038e-17,5.5557e-01,8.3147e-01,4.6865e-17,3.8268e-01,9.2388e-01,2.3892e-17,1.9509e-01,9.8079e-01,8.3078e-31,6.7838e-15,1.0000e+00});
			return Normal_7_864_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #884, 384 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_884_index()
		{
			MFInt32 IndexedTriangleSet_6_884_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_884_index_1()));
			return IndexedTriangleSet_6_884_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #884, 243 total numbers made up of 81 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_884_point()
		{
			MFVec3f Coordinate_7_884_point = new MFVec3f(new double[] {-4.6500e+00,3.0000e+00,1.8800e+00,-4.6506e+00,3.0000e+00,1.8741e+00,-4.6523e+00,3.0000e+00,1.8685e+00,-4.6551e+00,3.0000e+00,1.8633e+00,-4.6588e+00,3.0000e+00,1.8588e+00,-4.6633e+00,3.0000e+00,1.8551e+00,-4.6685e+00,3.0000e+00,1.8523e+00,-4.6741e+00,3.0000e+00,1.8506e+00,-4.6800e+00,3.0000e+00,1.8500e+00,-4.6524e+00,3.0244e+00,1.8800e+00,-4.6530e+00,3.0243e+00,1.8741e+00,-4.6546e+00,3.0239e+00,1.8685e+00,-4.6574e+00,3.0234e+00,1.8633e+00,-4.6610e+00,3.0227e+00,1.8588e+00,-4.6655e+00,3.0218e+00,1.8551e+00,-4.6706e+00,3.0208e+00,1.8523e+00,-4.6761e+00,3.0197e+00,1.8506e+00,-4.6818e+00,3.0185e+00,1.8500e+00,-4.6595e+00,3.0478e+00,1.8800e+00,-4.6600e+00,3.0476e+00,1.8741e+00,-4.6616e+00,3.0470e+00,1.8685e+00,-4.6642e+00,3.0459e+00,1.8633e+00,-4.6676e+00,3.0445e+00,1.8588e+00,-4.6718e+00,3.0427e+00,1.8551e+00,-4.6766e+00,3.0407e+00,1.8523e+00,-4.6818e+00,3.0386e+00,1.8506e+00,-4.6872e+00,3.0364e+00,1.8500e+00,-4.6711e+00,3.0694e+00,1.8800e+00,-4.6715e+00,3.0691e+00,1.8741e+00,-4.6730e+00,3.0682e+00,1.8685e+00,-4.6753e+00,3.0666e+00,1.8633e+00,-4.6784e+00,3.0646e+00,1.8588e+00,-4.6822e+00,3.0620e+00,1.8551e+00,-4.6865e+00,3.0592e+00,1.8523e+00,-4.6911e+00,3.0560e+00,1.8506e+00,-4.6960e+00,3.0528e+00,1.8500e+00,-4.6866e+00,3.0884e+00,1.8800e+00,-4.6870e+00,3.0880e+00,1.8741e+00,-4.6882e+00,3.0868e+00,1.8685e+00,-4.6902e+00,3.0848e+00,1.8633e+00,-4.6928e+00,3.0822e+00,1.8588e+00,-4.6960e+00,3.0790e+00,1.8551e+00,-4.6997e+00,3.0753e+00,1.8523e+00,-4.7037e+00,3.0713e+00,1.8506e+00,-4.7078e+00,3.0672e+00,1.8500e+00,-4.7056e+00,3.1039e+00,1.8800e+00,-4.7059e+00,3.1035e+00,1.8741e+00,-4.7068e+00,3.1020e+00,1.8685e+00,-4.7084e+00,3.0997e+00,1.8633e+00,-4.7104e+00,3.0966e+00,1.8588e+00,-4.7130e+00,3.0928e+00,1.8551e+00,-4.7158e+00,3.0885e+00,1.8523e+00,-4.7190e+00,3.0839e+00,1.8506e+00,-4.7222e+00,3.0790e+00,1.8500e+00,-4.7272e+00,3.1155e+00,1.8800e+00,-4.7274e+00,3.1150e+00,1.8741e+00,-4.7280e+00,3.1134e+00,1.8685e+00,-4.7291e+00,3.1108e+00,1.8633e+00,-4.7305e+00,3.1074e+00,1.8588e+00,-4.7323e+00,3.1032e+00,1.8551e+00,-4.7343e+00,3.0984e+00,1.8523e+00,-4.7364e+00,3.0932e+00,1.8506e+00,-4.7386e+00,3.0878e+00,1.8500e+00,-4.7506e+00,3.1226e+00,1.8800e+00,-4.7507e+00,3.1220e+00,1.8741e+00,-4.7511e+00,3.1204e+00,1.8685e+00,-4.7516e+00,3.1176e+00,1.8633e+00,-4.7523e+00,3.1140e+00,1.8588e+00,-4.7532e+00,3.1095e+00,1.8551e+00,-4.7542e+00,3.1044e+00,1.8523e+00,-4.7553e+00,3.0989e+00,1.8506e+00,-4.7565e+00,3.0932e+00,1.8500e+00,-4.7750e+00,3.1250e+00,1.8800e+00,-4.7750e+00,3.1244e+00,1.8741e+00,-4.7750e+00,3.1227e+00,1.8685e+00,-4.7750e+00,3.1199e+00,1.8633e+00,-4.7750e+00,3.1162e+00,1.8588e+00,-4.7750e+00,3.1117e+00,1.8551e+00,-4.7750e+00,3.1065e+00,1.8523e+00,-4.7750e+00,3.1009e+00,1.8506e+00,-4.7750e+00,3.0950e+00,1.8500e+00});
			return Coordinate_7_884_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #885, 243 total numbers made up of 81 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_885_vector()
		{
			MFVec3f Normal_7_885_vector = new MFVec3f(new double[] {-1.0000e+00,-6.1232e-17,-6.1232e-17,-9.8079e-01,-6.0056e-17,1.9509e-01,-9.2388e-01,-5.6571e-17,3.8268e-01,-8.3147e-01,-5.0913e-17,5.5557e-01,-7.0711e-01,-4.3298e-17,7.0711e-01,-5.5557e-01,-3.4019e-17,8.3147e-01,-3.8268e-01,-2.3433e-17,9.2388e-01,-1.9509e-01,-1.1946e-17,9.8079e-01,-6.7838e-15,-4.1539e-31,1.0000e+00,-9.8079e-01,-1.9509e-01,-6.1232e-17,-9.6194e-01,-1.9134e-01,1.9509e-01,-9.0613e-01,-1.8024e-01,3.8268e-01,-8.1549e-01,-1.6221e-01,5.5557e-01,-6.9352e-01,-1.3795e-01,7.0711e-01,-5.4490e-01,-1.0839e-01,8.3147e-01,-3.7533e-01,-7.4658e-02,9.2388e-01,-1.9134e-01,-3.8060e-02,9.8079e-01,-6.6535e-15,-1.3235e-15,1.0000e+00,-9.2388e-01,-3.8268e-01,-6.1232e-17,-9.0613e-01,-3.7533e-01,1.9509e-01,-8.5355e-01,-3.5355e-01,3.8268e-01,-7.6818e-01,-3.1819e-01,5.5557e-01,-6.5328e-01,-2.7060e-01,7.0711e-01,-5.1328e-01,-2.1261e-01,8.3147e-01,-3.5355e-01,-1.4645e-01,9.2388e-01,-1.8024e-01,-7.4658e-02,9.8079e-01,-6.2674e-15,-2.5960e-15,1.0000e+00,-8.3147e-01,-5.5557e-01,-6.1232e-17,-8.1549e-01,-5.4490e-01,1.9509e-01,-7.6818e-01,-5.1328e-01,3.8268e-01,-6.9134e-01,-4.6194e-01,5.5557e-01,-5.8794e-01,-3.9285e-01,7.0711e-01,-4.6194e-01,-3.0866e-01,8.3147e-01,-3.1819e-01,-2.1261e-01,9.2388e-01,-1.6221e-01,-1.0839e-01,9.8079e-01,-5.6405e-15,-3.7689e-15,1.0000e+00,-7.0711e-01,-7.0711e-01,-6.1232e-17,-6.9352e-01,-6.9352e-01,1.9509e-01,-6.5328e-01,-6.5328e-01,3.8268e-01,-5.8794e-01,-5.8794e-01,5.5557e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-3.9285e-01,-3.9285e-01,8.3147e-01,-2.7060e-01,-2.7060e-01,9.2388e-01,-1.3795e-01,-1.3795e-01,9.8079e-01,-4.7969e-15,-4.7969e-15,1.0000e+00,-5.5557e-01,-8.3147e-01,-6.1232e-17,-5.4490e-01,-8.1549e-01,1.9509e-01,-5.1328e-01,-7.6818e-01,3.8268e-01,-4.6194e-01,-6.9134e-01,5.5557e-01,-3.9285e-01,-5.8794e-01,7.0711e-01,-3.0866e-01,-4.6194e-01,8.3147e-01,-2.1261e-01,-3.1819e-01,9.2388e-01,-1.0839e-01,-1.6221e-01,9.8079e-01,-3.7689e-15,-5.6405e-15,1.0000e+00,-3.8268e-01,-9.2388e-01,-6.1232e-17,-3.7533e-01,-9.0613e-01,1.9509e-01,-3.5355e-01,-8.5355e-01,3.8268e-01,-3.1819e-01,-7.6818e-01,5.5557e-01,-2.7060e-01,-6.5328e-01,7.0711e-01,-2.1261e-01,-5.1328e-01,8.3147e-01,-1.4645e-01,-3.5355e-01,9.2388e-01,-7.4658e-02,-1.8024e-01,9.8079e-01,-2.5960e-15,-6.2674e-15,1.0000e+00,-1.9509e-01,-9.8079e-01,-6.1232e-17,-1.9134e-01,-9.6194e-01,1.9509e-01,-1.8024e-01,-9.0613e-01,3.8268e-01,-1.6221e-01,-8.1549e-01,5.5557e-01,-1.3795e-01,-6.9352e-01,7.0711e-01,-1.0839e-01,-5.4490e-01,8.3147e-01,-7.4658e-02,-3.7533e-01,9.2388e-01,-3.8060e-02,-1.9134e-01,9.8079e-01,-1.3235e-15,-6.6535e-15,1.0000e+00,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-9.8079e-01,1.9509e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.3147e-01,5.5557e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-5.5557e-01,8.3147e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-1.9509e-01,9.8079e-01,-0.0000e+00,-6.7838e-15,1.0000e+00});
			return Normal_7_885_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #891, 432 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_891_index()
		{
			MFInt32 IndexedTriangleSet_6_891_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_891_index_1()));
			return IndexedTriangleSet_6_891_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #891, 270 total numbers made up of 90 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_891_point()
		{
			MFVec3f Coordinate_7_891_point = new MFVec3f(new double[] {-5.0250e+00,3.1250e+00,1.8800e+00,-5.0250e+00,3.1245e+00,1.8748e+00,-5.0250e+00,3.1232e+00,1.8697e+00,-5.0250e+00,3.1210e+00,1.8650e+00,-5.0250e+00,3.1180e+00,1.8607e+00,-5.0250e+00,3.1143e+00,1.8570e+00,-5.0250e+00,3.1100e+00,1.8540e+00,-5.0250e+00,3.1053e+00,1.8518e+00,-5.0250e+00,3.1002e+00,1.8505e+00,-5.0250e+00,3.0950e+00,1.8500e+00,-5.0494e+00,3.1226e+00,1.8800e+00,-5.0493e+00,3.1222e+00,1.8748e+00,-5.0490e+00,3.1208e+00,1.8697e+00,-5.0486e+00,3.1187e+00,1.8650e+00,-5.0480e+00,3.1157e+00,1.8607e+00,-5.0473e+00,3.1121e+00,1.8570e+00,-5.0465e+00,3.1079e+00,1.8540e+00,-5.0455e+00,3.1032e+00,1.8518e+00,-5.0445e+00,3.0983e+00,1.8505e+00,-5.0435e+00,3.0932e+00,1.8500e+00,-5.0728e+00,3.1155e+00,1.8800e+00,-5.0727e+00,3.1151e+00,1.8748e+00,-5.0721e+00,3.1138e+00,1.8697e+00,-5.0713e+00,3.1118e+00,1.8650e+00,-5.0701e+00,3.1090e+00,1.8607e+00,-5.0687e+00,3.1056e+00,1.8570e+00,-5.0671e+00,3.1016e+00,1.8540e+00,-5.0653e+00,3.0972e+00,1.8518e+00,-5.0633e+00,3.0926e+00,1.8505e+00,-5.0614e+00,3.0878e+00,1.8500e+00,-5.0944e+00,3.1039e+00,1.8800e+00,-5.0942e+00,3.1036e+00,1.8748e+00,-5.0934e+00,3.1024e+00,1.8697e+00,-5.0922e+00,3.1006e+00,1.8650e+00,-5.0905e+00,3.0981e+00,1.8607e+00,-5.0885e+00,3.0950e+00,1.8570e+00,-5.0861e+00,3.0915e+00,1.8540e+00,-5.0835e+00,3.0875e+00,1.8518e+00,-5.0807e+00,3.0833e+00,1.8505e+00,-5.0778e+00,3.0790e+00,1.8500e+00,-5.1134e+00,3.0884e+00,1.8800e+00,-5.1131e+00,3.0881e+00,1.8748e+00,-5.1121e+00,3.0871e+00,1.8697e+00,-5.1105e+00,3.0855e+00,1.8650e+00,-5.1084e+00,3.0834e+00,1.8607e+00,-5.1058e+00,3.0808e+00,1.8570e+00,-5.1028e+00,3.0778e+00,1.8540e+00,-5.0994e+00,3.0744e+00,1.8518e+00,-5.0959e+00,3.0709e+00,1.8505e+00,-5.0922e+00,3.0672e+00,1.8500e+00,-5.1289e+00,3.0694e+00,1.8800e+00,-5.1286e+00,3.0692e+00,1.8748e+00,-5.1274e+00,3.0684e+00,1.8697e+00,-5.1256e+00,3.0672e+00,1.8650e+00,-5.1231e+00,3.0655e+00,1.8607e+00,-5.1200e+00,3.0635e+00,1.8570e+00,-5.1165e+00,3.0611e+00,1.8540e+00,-5.1125e+00,3.0585e+00,1.8518e+00,-5.1083e+00,3.0557e+00,1.8505e+00,-5.1040e+00,3.0528e+00,1.8500e+00,-5.1405e+00,3.0478e+00,1.8800e+00,-5.1401e+00,3.0477e+00,1.8748e+00,-5.1388e+00,3.0471e+00,1.8697e+00,-5.1368e+00,3.0463e+00,1.8650e+00,-5.1340e+00,3.0451e+00,1.8607e+00,-5.1306e+00,3.0437e+00,1.8570e+00,-5.1266e+00,3.0421e+00,1.8540e+00,-5.1222e+00,3.0403e+00,1.8518e+00,-5.1176e+00,3.0383e+00,1.8505e+00,-5.1128e+00,3.0364e+00,1.8500e+00,-5.1476e+00,3.0244e+00,1.8800e+00,-5.1472e+00,3.0243e+00,1.8748e+00,-5.1458e+00,3.0240e+00,1.8697e+00,-5.1437e+00,3.0236e+00,1.8650e+00,-5.1407e+00,3.0230e+00,1.8607e+00,-5.1371e+00,3.0223e+00,1.8570e+00,-5.1329e+00,3.0215e+00,1.8540e+00,-5.1282e+00,3.0205e+00,1.8518e+00,-5.1233e+00,3.0195e+00,1.8505e+00,-5.1182e+00,3.0185e+00,1.8500e+00,-5.1500e+00,3.0000e+00,1.8800e+00,-5.1495e+00,3.0000e+00,1.8748e+00,-5.1482e+00,3.0000e+00,1.8697e+00,-5.1460e+00,3.0000e+00,1.8650e+00,-5.1430e+00,3.0000e+00,1.8607e+00,-5.1393e+00,3.0000e+00,1.8570e+00,-5.1350e+00,3.0000e+00,1.8540e+00,-5.1303e+00,3.0000e+00,1.8518e+00,-5.1252e+00,3.0000e+00,1.8505e+00,-5.1200e+00,3.0000e+00,1.8500e+00});
			return Coordinate_7_891_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #892, 270 total numbers made up of 90 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_892_vector()
		{
			MFVec3f Normal_7_892_vector = new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,1.8370e-16,-0.0000e+00,-9.8481e-01,1.7365e-01,-0.0000e+00,-9.3969e-01,3.4202e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.6604e-01,6.4279e-01,-0.0000e+00,-6.4279e-01,7.6604e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.4202e-01,9.3969e-01,-0.0000e+00,-1.7365e-01,9.8481e-01,-0.0000e+00,8.5602e-15,1.0000e+00,1.9509e-01,-9.8079e-01,1.8370e-16,1.9213e-01,-9.6588e-01,1.7365e-01,1.8332e-01,-9.2164e-01,3.4202e-01,1.6895e-01,-8.4938e-01,5.0000e-01,1.4945e-01,-7.5133e-01,6.4279e-01,1.2540e-01,-6.3044e-01,7.6604e-01,9.7545e-02,-4.9039e-01,8.6603e-01,6.6725e-02,-3.3545e-01,9.3969e-01,3.3877e-02,-1.7031e-01,9.8481e-01,-1.6700e-15,8.3957e-15,1.0000e+00,3.8268e-01,-9.2388e-01,1.8370e-16,3.7687e-01,-9.0984e-01,1.7365e-01,3.5960e-01,-8.6816e-01,3.4202e-01,3.3141e-01,-8.0010e-01,5.0000e-01,2.9315e-01,-7.0773e-01,6.4279e-01,2.4598e-01,-5.9386e-01,7.6604e-01,1.9134e-01,-4.6194e-01,8.6603e-01,1.3089e-01,-3.1599e-01,9.3969e-01,6.6452e-02,-1.6043e-01,9.8481e-01,-3.2758e-15,7.9086e-15,1.0000e+00,5.5557e-01,-8.3147e-01,1.8370e-16,5.4713e-01,-8.1884e-01,1.7365e-01,5.2207e-01,-7.8133e-01,3.4202e-01,4.8114e-01,-7.2007e-01,5.0000e-01,4.2559e-01,-6.3694e-01,6.4279e-01,3.5711e-01,-5.3446e-01,7.6604e-01,2.7779e-01,-4.1573e-01,8.6603e-01,1.9002e-01,-2.8438e-01,9.3969e-01,9.6474e-02,-1.4438e-01,9.8481e-01,-4.7558e-15,7.1175e-15,1.0000e+00,7.0711e-01,-7.0711e-01,1.8370e-16,6.9636e-01,-6.9636e-01,1.7365e-01,6.6446e-01,-6.6446e-01,3.4202e-01,6.1237e-01,-6.1237e-01,5.0000e-01,5.4168e-01,-5.4168e-01,6.4279e-01,4.5452e-01,-4.5452e-01,7.6604e-01,3.5355e-01,-3.5355e-01,8.6603e-01,2.4184e-01,-2.4184e-01,9.3969e-01,1.2279e-01,-1.2279e-01,9.8481e-01,-6.0529e-15,6.0529e-15,1.0000e+00,8.3147e-01,-5.5557e-01,1.8370e-16,8.1884e-01,-5.4713e-01,1.7365e-01,7.8133e-01,-5.2207e-01,3.4202e-01,7.2007e-01,-4.8114e-01,5.0000e-01,6.3694e-01,-4.2559e-01,6.4279e-01,5.3446e-01,-3.5711e-01,7.6604e-01,4.1573e-01,-2.7779e-01,8.6603e-01,2.8438e-01,-1.9002e-01,9.3969e-01,1.4438e-01,-9.6474e-02,9.8481e-01,-7.1175e-15,4.7558e-15,1.0000e+00,9.2388e-01,-3.8268e-01,1.8370e-16,9.0984e-01,-3.7687e-01,1.7365e-01,8.6816e-01,-3.5960e-01,3.4202e-01,8.0010e-01,-3.3141e-01,5.0000e-01,7.0773e-01,-2.9315e-01,6.4279e-01,5.9386e-01,-2.4598e-01,7.6604e-01,4.6194e-01,-1.9134e-01,8.6603e-01,3.1599e-01,-1.3089e-01,9.3969e-01,1.6043e-01,-6.6452e-02,9.8481e-01,-7.9086e-15,3.2758e-15,1.0000e+00,9.8079e-01,-1.9509e-01,1.8370e-16,9.6588e-01,-1.9213e-01,1.7365e-01,9.2164e-01,-1.8332e-01,3.4202e-01,8.4938e-01,-1.6895e-01,5.0000e-01,7.5133e-01,-1.4945e-01,6.4279e-01,6.3044e-01,-1.2540e-01,7.6604e-01,4.9039e-01,-9.7545e-02,8.6603e-01,3.3545e-01,-6.6725e-02,9.3969e-01,1.7031e-01,-3.3877e-02,9.8481e-01,-8.3957e-15,1.6700e-15,1.0000e+00,1.0000e+00,-6.1232e-17,1.8370e-16,9.8481e-01,-6.0302e-17,1.7365e-01,9.3969e-01,-5.7540e-17,3.4202e-01,8.6603e-01,-5.3029e-17,5.0000e-01,7.6604e-01,-4.6907e-17,6.4279e-01,6.4279e-01,-3.9359e-17,7.6604e-01,5.0000e-01,-3.0616e-17,8.6603e-01,3.4202e-01,-2.0943e-17,9.3969e-01,1.7365e-01,-1.0633e-17,9.8481e-01,-8.5602e-15,5.2416e-31,1.0000e+00});
			return Normal_7_892_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #968, 360 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_968_index()
		{
			MFInt32 IndexedTriangleSet_6_968_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_968_index_1()));
			return IndexedTriangleSet_6_968_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #968, 219 total numbers made up of 73 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_968_point()
		{
			MFVec3f Coordinate_7_968_point = new MFVec3f(new double[] {-6.0374e+00,-4.2640e+00,3.9769e-01,-6.0599e+00,-4.2640e+00,3.9087e-01,-6.0807e+00,-4.2640e+00,3.7978e-01,-6.0989e+00,-4.2640e+00,3.6485e-01,-6.1138e+00,-4.2640e+00,3.4667e-01,-6.1249e+00,-4.2640e+00,3.2592e-01,-6.1317e+00,-4.2640e+00,3.0341e-01,-6.1340e+00,-4.2640e+00,2.8000e-01,-6.0370e+00,-4.2686e+00,3.9769e-01,-6.0590e+00,-4.2730e+00,3.9087e-01,-6.0794e+00,-4.2770e+00,3.7978e-01,-6.0972e+00,-4.2806e+00,3.6485e-01,-6.1119e+00,-4.2835e+00,3.4667e-01,-6.1227e+00,-4.2856e+00,3.2592e-01,-6.1294e+00,-4.2870e+00,3.0341e-01,-6.1317e+00,-4.2874e+00,2.8000e-01,-6.0356e+00,-4.2730e+00,3.9769e-01,-6.0564e+00,-4.2816e+00,3.9087e-01,-6.0756e+00,-4.2895e+00,3.7978e-01,-6.0924e+00,-4.2965e+00,3.6485e-01,-6.1062e+00,-4.3022e+00,3.4667e-01,-6.1164e+00,-4.3064e+00,3.2592e-01,-6.1227e+00,-4.3090e+00,3.0341e-01,-6.1249e+00,-4.3099e+00,2.8000e-01,-6.0335e+00,-4.2770e+00,3.9769e-01,-6.0522e+00,-4.2895e+00,3.9087e-01,-6.0694e+00,-4.3010e+00,3.7978e-01,-6.0846e+00,-4.3111e+00,3.6485e-01,-6.0970e+00,-4.3194e+00,3.4667e-01,-6.1062e+00,-4.3256e+00,3.2592e-01,-6.1119e+00,-4.3294e+00,3.0341e-01,-6.1138e+00,-4.3307e+00,2.8000e-01,-6.0306e+00,-4.2806e+00,3.9769e-01,-6.0465e+00,-4.2965e+00,3.9087e-01,-6.0611e+00,-4.3111e+00,3.7978e-01,-6.0740e+00,-4.3240e+00,3.6485e-01,-6.0846e+00,-4.3346e+00,3.4667e-01,-6.0924e+00,-4.3424e+00,3.2592e-01,-6.0972e+00,-4.3472e+00,3.0341e-01,-6.0989e+00,-4.3489e+00,2.8000e-01,-6.0270e+00,-4.2835e+00,3.9769e-01,-6.0395e+00,-4.3022e+00,3.9087e-01,-6.0510e+00,-4.3194e+00,3.7978e-01,-6.0611e+00,-4.3346e+00,3.6485e-01,-6.0694e+00,-4.3470e+00,3.4667e-01,-6.0756e+00,-4.3562e+00,3.2592e-01,-6.0794e+00,-4.3619e+00,3.0341e-01,-6.0807e+00,-4.3638e+00,2.8000e-01,-6.0230e+00,-4.2856e+00,3.9769e-01,-6.0316e+00,-4.3064e+00,3.9087e-01,-6.0395e+00,-4.3256e+00,3.7978e-01,-6.0465e+00,-4.3424e+00,3.6485e-01,-6.0522e+00,-4.3562e+00,3.4667e-01,-6.0564e+00,-4.3664e+00,3.2592e-01,-6.0590e+00,-4.3727e+00,3.0341e-01,-6.0599e+00,-4.3749e+00,2.8000e-01,-6.0186e+00,-4.2870e+00,3.9769e-01,-6.0230e+00,-4.3090e+00,3.9087e-01,-6.0270e+00,-4.3294e+00,3.7978e-01,-6.0306e+00,-4.3472e+00,3.6485e-01,-6.0335e+00,-4.3619e+00,3.4667e-01,-6.0356e+00,-4.3727e+00,3.2592e-01,-6.0370e+00,-4.3794e+00,3.0341e-01,-6.0374e+00,-4.3817e+00,2.8000e-01,-6.0140e+00,-4.2874e+00,3.9769e-01,-6.0140e+00,-4.3099e+00,3.9087e-01,-6.0140e+00,-4.3307e+00,3.7978e-01,-6.0140e+00,-4.3489e+00,3.6485e-01,-6.0140e+00,-4.3638e+00,3.4667e-01,-6.0140e+00,-4.3749e+00,3.2592e-01,-6.0140e+00,-4.3817e+00,3.0341e-01,-6.0140e+00,-4.3840e+00,2.8000e-01,-6.0140e+00,-4.2640e+00,4.0000e-01});
			return Coordinate_7_968_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #969, 219 total numbers made up of 73 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_969_vector()
		{
			MFVec3f Normal_7_969_vector = new MFVec3f(new double[] {-1.9509e-01,0.0000e+00,9.8079e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-5.5557e-01,0.0000e+00,8.3147e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-8.3147e-01,0.0000e+00,5.5557e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.8079e-01,0.0000e+00,1.9509e-01,-1.0000e+00,0.0000e+00,6.1232e-17,-1.9134e-01,-3.8060e-02,9.8079e-01,-3.7533e-01,-7.4658e-02,9.2388e-01,-5.4490e-01,-1.0839e-01,8.3147e-01,-6.9352e-01,-1.3795e-01,7.0711e-01,-8.1549e-01,-1.6221e-01,5.5557e-01,-9.0613e-01,-1.8024e-01,3.8268e-01,-9.6194e-01,-1.9134e-01,1.9509e-01,-9.8079e-01,-1.9509e-01,6.1232e-17,-1.8024e-01,-7.4658e-02,9.8079e-01,-3.5355e-01,-1.4645e-01,9.2388e-01,-5.1328e-01,-2.1261e-01,8.3147e-01,-6.5328e-01,-2.7060e-01,7.0711e-01,-7.6818e-01,-3.1819e-01,5.5557e-01,-8.5355e-01,-3.5355e-01,3.8268e-01,-9.0613e-01,-3.7533e-01,1.9509e-01,-9.2388e-01,-3.8268e-01,6.1232e-17,-1.6221e-01,-1.0839e-01,9.8079e-01,-3.1819e-01,-2.1261e-01,9.2388e-01,-4.6194e-01,-3.0866e-01,8.3147e-01,-5.8794e-01,-3.9285e-01,7.0711e-01,-6.9134e-01,-4.6194e-01,5.5557e-01,-7.6818e-01,-5.1328e-01,3.8268e-01,-8.1549e-01,-5.4490e-01,1.9509e-01,-8.3147e-01,-5.5557e-01,6.1232e-17,-1.3795e-01,-1.3795e-01,9.8079e-01,-2.7060e-01,-2.7060e-01,9.2388e-01,-3.9285e-01,-3.9285e-01,8.3147e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.8794e-01,-5.8794e-01,5.5557e-01,-6.5328e-01,-6.5328e-01,3.8268e-01,-6.9352e-01,-6.9352e-01,1.9509e-01,-7.0711e-01,-7.0711e-01,6.1232e-17,-1.0839e-01,-1.6221e-01,9.8079e-01,-2.1261e-01,-3.1819e-01,9.2388e-01,-3.0866e-01,-4.6194e-01,8.3147e-01,-3.9285e-01,-5.8794e-01,7.0711e-01,-4.6194e-01,-6.9134e-01,5.5557e-01,-5.1328e-01,-7.6818e-01,3.8268e-01,-5.4490e-01,-8.1549e-01,1.9509e-01,-5.5557e-01,-8.3147e-01,6.1232e-17,-7.4658e-02,-1.8024e-01,9.8079e-01,-1.4645e-01,-3.5355e-01,9.2388e-01,-2.1261e-01,-5.1328e-01,8.3147e-01,-2.7060e-01,-6.5328e-01,7.0711e-01,-3.1819e-01,-7.6818e-01,5.5557e-01,-3.5355e-01,-8.5355e-01,3.8268e-01,-3.7533e-01,-9.0613e-01,1.9509e-01,-3.8268e-01,-9.2388e-01,6.1232e-17,-3.8060e-02,-1.9134e-01,9.8079e-01,-7.4658e-02,-3.7533e-01,9.2388e-01,-1.0839e-01,-5.4490e-01,8.3147e-01,-1.3795e-01,-6.9352e-01,7.0711e-01,-1.6221e-01,-8.1549e-01,5.5557e-01,-1.8024e-01,-9.0613e-01,3.8268e-01,-1.9134e-01,-9.6194e-01,1.9509e-01,-1.9509e-01,-9.8079e-01,6.1232e-17,-1.1946e-17,-1.9509e-01,9.8079e-01,-2.3433e-17,-3.8268e-01,9.2388e-01,-3.4019e-17,-5.5557e-01,8.3147e-01,-4.3298e-17,-7.0711e-01,7.0711e-01,-5.0913e-17,-8.3147e-01,5.5557e-01,-5.6571e-17,-9.2388e-01,3.8268e-01,-6.0056e-17,-9.8079e-01,1.9509e-01,-6.1232e-17,-1.0000e+00,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_969_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #975, 360 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_975_index()
		{
			MFInt32 IndexedTriangleSet_6_975_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_975_index_1()));
			return IndexedTriangleSet_6_975_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #975, 219 total numbers made up of 73 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_975_point()
		{
			MFVec3f Coordinate_7_975_point = new MFVec3f(new double[] {-6.0374e+00,4.3817e+00,2.8000e-01,-6.0599e+00,4.3749e+00,2.8000e-01,-6.0807e+00,4.3638e+00,2.8000e-01,-6.0989e+00,4.3489e+00,2.8000e-01,-6.1138e+00,4.3307e+00,2.8000e-01,-6.1249e+00,4.3099e+00,2.8000e-01,-6.1317e+00,4.2874e+00,2.8000e-01,-6.1340e+00,4.2640e+00,2.8000e-01,-6.0370e+00,4.3817e+00,2.8457e-01,-6.0590e+00,4.3749e+00,2.8896e-01,-6.0794e+00,4.3638e+00,2.9301e-01,-6.0972e+00,4.3489e+00,2.9655e-01,-6.1119e+00,4.3307e+00,2.9947e-01,-6.1227e+00,4.3099e+00,3.0163e-01,-6.1294e+00,4.2874e+00,3.0296e-01,-6.1317e+00,4.2640e+00,3.0341e-01,-6.0356e+00,4.3817e+00,2.8896e-01,-6.0564e+00,4.3749e+00,2.9757e-01,-6.0756e+00,4.3638e+00,3.0551e-01,-6.0924e+00,4.3489e+00,3.1247e-01,-6.1062e+00,4.3307e+00,3.1818e-01,-6.1164e+00,4.3099e+00,3.2243e-01,-6.1227e+00,4.2874e+00,3.2504e-01,-6.1249e+00,4.2640e+00,3.2592e-01,-6.0335e+00,4.3817e+00,2.9301e-01,-6.0522e+00,4.3749e+00,3.0551e-01,-6.0694e+00,4.3638e+00,3.1704e-01,-6.0846e+00,4.3489e+00,3.2714e-01,-6.0970e+00,4.3307e+00,3.3543e-01,-6.1062e+00,4.3099e+00,3.4159e-01,-6.1119e+00,4.2874e+00,3.4539e-01,-6.1138e+00,4.2640e+00,3.4667e-01,-6.0306e+00,4.3817e+00,2.9655e-01,-6.0465e+00,4.3749e+00,3.1247e-01,-6.0611e+00,4.3638e+00,3.2714e-01,-6.0740e+00,4.3489e+00,3.4000e-01,-6.0846e+00,4.3307e+00,3.5055e-01,-6.0924e+00,4.3099e+00,3.5839e-01,-6.0972e+00,4.2874e+00,3.6322e-01,-6.0989e+00,4.2640e+00,3.6485e-01,-6.0270e+00,4.3817e+00,2.9947e-01,-6.0395e+00,4.3749e+00,3.1818e-01,-6.0510e+00,4.3638e+00,3.3543e-01,-6.0611e+00,4.3489e+00,3.5055e-01,-6.0694e+00,4.3307e+00,3.6296e-01,-6.0756e+00,4.3099e+00,3.7218e-01,-6.0794e+00,4.2874e+00,3.7786e-01,-6.0807e+00,4.2640e+00,3.7978e-01,-6.0230e+00,4.3817e+00,3.0163e-01,-6.0316e+00,4.3749e+00,3.2243e-01,-6.0395e+00,4.3638e+00,3.4159e-01,-6.0465e+00,4.3489e+00,3.5839e-01,-6.0522e+00,4.3307e+00,3.7218e-01,-6.0564e+00,4.3099e+00,3.8243e-01,-6.0590e+00,4.2874e+00,3.8874e-01,-6.0599e+00,4.2640e+00,3.9087e-01,-6.0186e+00,4.3817e+00,3.0296e-01,-6.0230e+00,4.3749e+00,3.2504e-01,-6.0270e+00,4.3638e+00,3.4539e-01,-6.0306e+00,4.3489e+00,3.6322e-01,-6.0335e+00,4.3307e+00,3.7786e-01,-6.0356e+00,4.3099e+00,3.8874e-01,-6.0370e+00,4.2874e+00,3.9543e-01,-6.0374e+00,4.2640e+00,3.9769e-01,-6.0140e+00,4.3817e+00,3.0341e-01,-6.0140e+00,4.3749e+00,3.2592e-01,-6.0140e+00,4.3638e+00,3.4667e-01,-6.0140e+00,4.3489e+00,3.6485e-01,-6.0140e+00,4.3307e+00,3.7978e-01,-6.0140e+00,4.3099e+00,3.9087e-01,-6.0140e+00,4.2874e+00,3.9769e-01,-6.0140e+00,4.2640e+00,4.0000e-01,-6.0140e+00,4.3840e+00,2.8000e-01});
			return Coordinate_7_975_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #976, 219 total numbers made up of 73 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_976_vector()
		{
			MFVec3f Normal_7_976_vector = new MFVec3f(new double[] {-1.9509e-01,9.8079e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-5.5557e-01,8.3147e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-8.3147e-01,5.5557e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.8079e-01,1.9509e-01,0.0000e+00,-1.0000e+00,6.1232e-17,0.0000e+00,-1.9134e-01,9.8079e-01,3.8060e-02,-3.7533e-01,9.2388e-01,7.4658e-02,-5.4490e-01,8.3147e-01,1.0839e-01,-6.9352e-01,7.0711e-01,1.3795e-01,-8.1549e-01,5.5557e-01,1.6221e-01,-9.0613e-01,3.8268e-01,1.8024e-01,-9.6194e-01,1.9509e-01,1.9134e-01,-9.8079e-01,6.1232e-17,1.9509e-01,-1.8024e-01,9.8079e-01,7.4658e-02,-3.5355e-01,9.2388e-01,1.4645e-01,-5.1328e-01,8.3147e-01,2.1261e-01,-6.5328e-01,7.0711e-01,2.7060e-01,-7.6818e-01,5.5557e-01,3.1819e-01,-8.5355e-01,3.8268e-01,3.5355e-01,-9.0613e-01,1.9509e-01,3.7533e-01,-9.2388e-01,6.1232e-17,3.8268e-01,-1.6221e-01,9.8079e-01,1.0839e-01,-3.1819e-01,9.2388e-01,2.1261e-01,-4.6194e-01,8.3147e-01,3.0866e-01,-5.8794e-01,7.0711e-01,3.9285e-01,-6.9134e-01,5.5557e-01,4.6194e-01,-7.6818e-01,3.8268e-01,5.1328e-01,-8.1549e-01,1.9509e-01,5.4490e-01,-8.3147e-01,6.1232e-17,5.5557e-01,-1.3795e-01,9.8079e-01,1.3795e-01,-2.7060e-01,9.2388e-01,2.7060e-01,-3.9285e-01,8.3147e-01,3.9285e-01,-5.0000e-01,7.0711e-01,5.0000e-01,-5.8794e-01,5.5557e-01,5.8794e-01,-6.5328e-01,3.8268e-01,6.5328e-01,-6.9352e-01,1.9509e-01,6.9352e-01,-7.0711e-01,6.1232e-17,7.0711e-01,-1.0839e-01,9.8079e-01,1.6221e-01,-2.1261e-01,9.2388e-01,3.1819e-01,-3.0866e-01,8.3147e-01,4.6194e-01,-3.9285e-01,7.0711e-01,5.8794e-01,-4.6194e-01,5.5557e-01,6.9134e-01,-5.1328e-01,3.8268e-01,7.6818e-01,-5.4490e-01,1.9509e-01,8.1549e-01,-5.5557e-01,6.1232e-17,8.3147e-01,-7.4658e-02,9.8079e-01,1.8024e-01,-1.4645e-01,9.2388e-01,3.5355e-01,-2.1261e-01,8.3147e-01,5.1328e-01,-2.7060e-01,7.0711e-01,6.5328e-01,-3.1819e-01,5.5557e-01,7.6818e-01,-3.5355e-01,3.8268e-01,8.5355e-01,-3.7533e-01,1.9509e-01,9.0613e-01,-3.8268e-01,6.1232e-17,9.2388e-01,-3.8060e-02,9.8079e-01,1.9134e-01,-7.4658e-02,9.2388e-01,3.7533e-01,-1.0839e-01,8.3147e-01,5.4490e-01,-1.3795e-01,7.0711e-01,6.9352e-01,-1.6221e-01,5.5557e-01,8.1549e-01,-1.8024e-01,3.8268e-01,9.0613e-01,-1.9134e-01,1.9509e-01,9.6194e-01,-1.9509e-01,6.1232e-17,9.8079e-01,-1.1946e-17,9.8079e-01,1.9509e-01,-2.3433e-17,9.2388e-01,3.8268e-01,-3.4019e-17,8.3147e-01,5.5557e-01,-4.3298e-17,7.0711e-01,7.0711e-01,-5.0913e-17,5.5557e-01,8.3147e-01,-5.6571e-17,3.8268e-01,9.2388e-01,-6.0056e-17,1.9509e-01,9.8079e-01,-6.1232e-17,6.1232e-17,1.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00});
			return Normal_7_976_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #1010, 360 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_1010_index()
		{
			MFInt32 IndexedTriangleSet_6_1010_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_1010_index_1()));
			return IndexedTriangleSet_6_1010_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1010, 219 total numbers made up of 73 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1010_point()
		{
			MFVec3f Coordinate_7_1010_point = new MFVec3f(new double[] {6.0140e+00,-4.2874e+00,3.9769e-01,6.0140e+00,-4.3099e+00,3.9087e-01,6.0140e+00,-4.3307e+00,3.7978e-01,6.0140e+00,-4.3489e+00,3.6485e-01,6.0140e+00,-4.3638e+00,3.4667e-01,6.0140e+00,-4.3749e+00,3.2592e-01,6.0140e+00,-4.3817e+00,3.0341e-01,6.0140e+00,-4.3840e+00,2.8000e-01,6.0186e+00,-4.2870e+00,3.9769e-01,6.0230e+00,-4.3090e+00,3.9087e-01,6.0270e+00,-4.3294e+00,3.7978e-01,6.0306e+00,-4.3472e+00,3.6485e-01,6.0335e+00,-4.3619e+00,3.4667e-01,6.0356e+00,-4.3727e+00,3.2592e-01,6.0370e+00,-4.3794e+00,3.0341e-01,6.0374e+00,-4.3817e+00,2.8000e-01,6.0230e+00,-4.2856e+00,3.9769e-01,6.0316e+00,-4.3064e+00,3.9087e-01,6.0395e+00,-4.3256e+00,3.7978e-01,6.0465e+00,-4.3424e+00,3.6485e-01,6.0522e+00,-4.3562e+00,3.4667e-01,6.0564e+00,-4.3664e+00,3.2592e-01,6.0590e+00,-4.3727e+00,3.0341e-01,6.0599e+00,-4.3749e+00,2.8000e-01,6.0270e+00,-4.2835e+00,3.9769e-01,6.0395e+00,-4.3022e+00,3.9087e-01,6.0510e+00,-4.3194e+00,3.7978e-01,6.0611e+00,-4.3346e+00,3.6485e-01,6.0694e+00,-4.3470e+00,3.4667e-01,6.0756e+00,-4.3562e+00,3.2592e-01,6.0794e+00,-4.3619e+00,3.0341e-01,6.0807e+00,-4.3638e+00,2.8000e-01,6.0306e+00,-4.2806e+00,3.9769e-01,6.0465e+00,-4.2965e+00,3.9087e-01,6.0611e+00,-4.3111e+00,3.7978e-01,6.0740e+00,-4.3240e+00,3.6485e-01,6.0846e+00,-4.3346e+00,3.4667e-01,6.0924e+00,-4.3424e+00,3.2592e-01,6.0972e+00,-4.3472e+00,3.0341e-01,6.0989e+00,-4.3489e+00,2.8000e-01,6.0335e+00,-4.2770e+00,3.9769e-01,6.0522e+00,-4.2895e+00,3.9087e-01,6.0694e+00,-4.3010e+00,3.7978e-01,6.0846e+00,-4.3111e+00,3.6485e-01,6.0970e+00,-4.3194e+00,3.4667e-01,6.1062e+00,-4.3256e+00,3.2592e-01,6.1119e+00,-4.3294e+00,3.0341e-01,6.1138e+00,-4.3307e+00,2.8000e-01,6.0356e+00,-4.2730e+00,3.9769e-01,6.0564e+00,-4.2816e+00,3.9087e-01,6.0756e+00,-4.2895e+00,3.7978e-01,6.0924e+00,-4.2965e+00,3.6485e-01,6.1062e+00,-4.3022e+00,3.4667e-01,6.1164e+00,-4.3064e+00,3.2592e-01,6.1227e+00,-4.3090e+00,3.0341e-01,6.1249e+00,-4.3099e+00,2.8000e-01,6.0370e+00,-4.2686e+00,3.9769e-01,6.0590e+00,-4.2730e+00,3.9087e-01,6.0794e+00,-4.2770e+00,3.7978e-01,6.0972e+00,-4.2806e+00,3.6485e-01,6.1119e+00,-4.2835e+00,3.4667e-01,6.1227e+00,-4.2856e+00,3.2592e-01,6.1294e+00,-4.2870e+00,3.0341e-01,6.1317e+00,-4.2874e+00,2.8000e-01,6.0374e+00,-4.2640e+00,3.9769e-01,6.0599e+00,-4.2640e+00,3.9087e-01,6.0807e+00,-4.2640e+00,3.7978e-01,6.0989e+00,-4.2640e+00,3.6485e-01,6.1138e+00,-4.2640e+00,3.4667e-01,6.1249e+00,-4.2640e+00,3.2592e-01,6.1317e+00,-4.2640e+00,3.0341e-01,6.1340e+00,-4.2640e+00,2.8000e-01,6.0140e+00,-4.2640e+00,4.0000e-01});
			return Coordinate_7_1010_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1011, 219 total numbers made up of 73 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1011_vector()
		{
			MFVec3f Normal_7_1011_vector = new MFVec3f(new double[] {0.0000e+00,-1.9509e-01,9.8079e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-5.5557e-01,8.3147e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-8.3147e-01,5.5557e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.8079e-01,1.9509e-01,0.0000e+00,-1.0000e+00,6.1232e-17,3.8060e-02,-1.9134e-01,9.8079e-01,7.4658e-02,-3.7533e-01,9.2388e-01,1.0839e-01,-5.4490e-01,8.3147e-01,1.3795e-01,-6.9352e-01,7.0711e-01,1.6221e-01,-8.1549e-01,5.5557e-01,1.8024e-01,-9.0613e-01,3.8268e-01,1.9134e-01,-9.6194e-01,1.9509e-01,1.9509e-01,-9.8079e-01,6.1232e-17,7.4658e-02,-1.8024e-01,9.8079e-01,1.4645e-01,-3.5355e-01,9.2388e-01,2.1261e-01,-5.1328e-01,8.3147e-01,2.7060e-01,-6.5328e-01,7.0711e-01,3.1819e-01,-7.6818e-01,5.5557e-01,3.5355e-01,-8.5355e-01,3.8268e-01,3.7533e-01,-9.0613e-01,1.9509e-01,3.8268e-01,-9.2388e-01,6.1232e-17,1.0839e-01,-1.6221e-01,9.8079e-01,2.1261e-01,-3.1819e-01,9.2388e-01,3.0866e-01,-4.6194e-01,8.3147e-01,3.9285e-01,-5.8794e-01,7.0711e-01,4.6194e-01,-6.9134e-01,5.5557e-01,5.1328e-01,-7.6818e-01,3.8268e-01,5.4490e-01,-8.1549e-01,1.9509e-01,5.5557e-01,-8.3147e-01,6.1232e-17,1.3795e-01,-1.3795e-01,9.8079e-01,2.7060e-01,-2.7060e-01,9.2388e-01,3.9285e-01,-3.9285e-01,8.3147e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.8794e-01,-5.8794e-01,5.5557e-01,6.5328e-01,-6.5328e-01,3.8268e-01,6.9352e-01,-6.9352e-01,1.9509e-01,7.0711e-01,-7.0711e-01,6.1232e-17,1.6221e-01,-1.0839e-01,9.8079e-01,3.1819e-01,-2.1261e-01,9.2388e-01,4.6194e-01,-3.0866e-01,8.3147e-01,5.8794e-01,-3.9285e-01,7.0711e-01,6.9134e-01,-4.6194e-01,5.5557e-01,7.6818e-01,-5.1328e-01,3.8268e-01,8.1549e-01,-5.4490e-01,1.9509e-01,8.3147e-01,-5.5557e-01,6.1232e-17,1.8024e-01,-7.4658e-02,9.8079e-01,3.5355e-01,-1.4645e-01,9.2388e-01,5.1328e-01,-2.1261e-01,8.3147e-01,6.5328e-01,-2.7060e-01,7.0711e-01,7.6818e-01,-3.1819e-01,5.5557e-01,8.5355e-01,-3.5355e-01,3.8268e-01,9.0613e-01,-3.7533e-01,1.9509e-01,9.2388e-01,-3.8268e-01,6.1232e-17,1.9134e-01,-3.8060e-02,9.8079e-01,3.7533e-01,-7.4658e-02,9.2388e-01,5.4490e-01,-1.0839e-01,8.3147e-01,6.9352e-01,-1.3795e-01,7.0711e-01,8.1549e-01,-1.6221e-01,5.5557e-01,9.0613e-01,-1.8024e-01,3.8268e-01,9.6194e-01,-1.9134e-01,1.9509e-01,9.8079e-01,-1.9509e-01,6.1232e-17,1.9509e-01,-1.1946e-17,9.8079e-01,3.8268e-01,-2.3433e-17,9.2388e-01,5.5557e-01,-3.4019e-17,8.3147e-01,7.0711e-01,-4.3298e-17,7.0711e-01,8.3147e-01,-5.0913e-17,5.5557e-01,9.2388e-01,-5.6571e-17,3.8268e-01,9.8079e-01,-6.0056e-17,1.9509e-01,1.0000e+00,-6.1232e-17,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1011_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #1017, 360 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_1017_index()
		{
			MFInt32 IndexedTriangleSet_6_1017_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_1017_index_1()));
			return IndexedTriangleSet_6_1017_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1017, 219 total numbers made up of 73 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1017_point()
		{
			MFVec3f Coordinate_7_1017_point = new MFVec3f(new double[] {6.1317e+00,4.2874e+00,2.8000e-01,6.1249e+00,4.3099e+00,2.8000e-01,6.1138e+00,4.3307e+00,2.8000e-01,6.0989e+00,4.3489e+00,2.8000e-01,6.0807e+00,4.3638e+00,2.8000e-01,6.0599e+00,4.3749e+00,2.8000e-01,6.0374e+00,4.3817e+00,2.8000e-01,6.0140e+00,4.3840e+00,2.8000e-01,6.1317e+00,4.2870e+00,2.8457e-01,6.1249e+00,4.3090e+00,2.8896e-01,6.1138e+00,4.3294e+00,2.9301e-01,6.0989e+00,4.3472e+00,2.9655e-01,6.0807e+00,4.3619e+00,2.9947e-01,6.0599e+00,4.3727e+00,3.0163e-01,6.0374e+00,4.3794e+00,3.0296e-01,6.0140e+00,4.3817e+00,3.0341e-01,6.1317e+00,4.2856e+00,2.8896e-01,6.1249e+00,4.3064e+00,2.9757e-01,6.1138e+00,4.3256e+00,3.0551e-01,6.0989e+00,4.3424e+00,3.1247e-01,6.0807e+00,4.3562e+00,3.1818e-01,6.0599e+00,4.3664e+00,3.2243e-01,6.0374e+00,4.3727e+00,3.2504e-01,6.0140e+00,4.3749e+00,3.2592e-01,6.1317e+00,4.2835e+00,2.9301e-01,6.1249e+00,4.3022e+00,3.0551e-01,6.1138e+00,4.3194e+00,3.1704e-01,6.0989e+00,4.3346e+00,3.2714e-01,6.0807e+00,4.3470e+00,3.3543e-01,6.0599e+00,4.3562e+00,3.4159e-01,6.0374e+00,4.3619e+00,3.4539e-01,6.0140e+00,4.3638e+00,3.4667e-01,6.1317e+00,4.2806e+00,2.9655e-01,6.1249e+00,4.2965e+00,3.1247e-01,6.1138e+00,4.3111e+00,3.2714e-01,6.0989e+00,4.3240e+00,3.4000e-01,6.0807e+00,4.3346e+00,3.5055e-01,6.0599e+00,4.3424e+00,3.5839e-01,6.0374e+00,4.3472e+00,3.6322e-01,6.0140e+00,4.3489e+00,3.6485e-01,6.1317e+00,4.2770e+00,2.9947e-01,6.1249e+00,4.2895e+00,3.1818e-01,6.1138e+00,4.3010e+00,3.3543e-01,6.0989e+00,4.3111e+00,3.5055e-01,6.0807e+00,4.3194e+00,3.6296e-01,6.0599e+00,4.3256e+00,3.7218e-01,6.0374e+00,4.3294e+00,3.7786e-01,6.0140e+00,4.3307e+00,3.7978e-01,6.1317e+00,4.2730e+00,3.0163e-01,6.1249e+00,4.2816e+00,3.2243e-01,6.1138e+00,4.2895e+00,3.4159e-01,6.0989e+00,4.2965e+00,3.5839e-01,6.0807e+00,4.3022e+00,3.7218e-01,6.0599e+00,4.3064e+00,3.8243e-01,6.0374e+00,4.3090e+00,3.8874e-01,6.0140e+00,4.3099e+00,3.9087e-01,6.1317e+00,4.2686e+00,3.0296e-01,6.1249e+00,4.2730e+00,3.2504e-01,6.1138e+00,4.2770e+00,3.4539e-01,6.0989e+00,4.2806e+00,3.6322e-01,6.0807e+00,4.2835e+00,3.7786e-01,6.0599e+00,4.2856e+00,3.8874e-01,6.0374e+00,4.2870e+00,3.9543e-01,6.0140e+00,4.2874e+00,3.9769e-01,6.1317e+00,4.2640e+00,3.0341e-01,6.1249e+00,4.2640e+00,3.2592e-01,6.1138e+00,4.2640e+00,3.4667e-01,6.0989e+00,4.2640e+00,3.6485e-01,6.0807e+00,4.2640e+00,3.7978e-01,6.0599e+00,4.2640e+00,3.9087e-01,6.0374e+00,4.2640e+00,3.9769e-01,6.0140e+00,4.2640e+00,4.0000e-01,6.1340e+00,4.2640e+00,2.8000e-01});
			return Coordinate_7_1017_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1018, 219 total numbers made up of 73 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1018_vector()
		{
			MFVec3f Normal_7_1018_vector = new MFVec3f(new double[] {9.8079e-01,1.9509e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,8.3147e-01,5.5557e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,5.5557e-01,8.3147e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,1.9509e-01,9.8079e-01,0.0000e+00,6.1232e-17,1.0000e+00,0.0000e+00,9.8079e-01,1.9134e-01,3.8060e-02,9.2388e-01,3.7533e-01,7.4658e-02,8.3147e-01,5.4490e-01,1.0839e-01,7.0711e-01,6.9352e-01,1.3795e-01,5.5557e-01,8.1549e-01,1.6221e-01,3.8268e-01,9.0613e-01,1.8024e-01,1.9509e-01,9.6194e-01,1.9134e-01,6.1232e-17,9.8079e-01,1.9509e-01,9.8079e-01,1.8024e-01,7.4658e-02,9.2388e-01,3.5355e-01,1.4645e-01,8.3147e-01,5.1328e-01,2.1261e-01,7.0711e-01,6.5328e-01,2.7060e-01,5.5557e-01,7.6818e-01,3.1819e-01,3.8268e-01,8.5355e-01,3.5355e-01,1.9509e-01,9.0613e-01,3.7533e-01,6.1232e-17,9.2388e-01,3.8268e-01,9.8079e-01,1.6221e-01,1.0839e-01,9.2388e-01,3.1819e-01,2.1261e-01,8.3147e-01,4.6194e-01,3.0866e-01,7.0711e-01,5.8794e-01,3.9285e-01,5.5557e-01,6.9134e-01,4.6194e-01,3.8268e-01,7.6818e-01,5.1328e-01,1.9509e-01,8.1549e-01,5.4490e-01,6.1232e-17,8.3147e-01,5.5557e-01,9.8079e-01,1.3795e-01,1.3795e-01,9.2388e-01,2.7060e-01,2.7060e-01,8.3147e-01,3.9285e-01,3.9285e-01,7.0711e-01,5.0000e-01,5.0000e-01,5.5557e-01,5.8794e-01,5.8794e-01,3.8268e-01,6.5328e-01,6.5328e-01,1.9509e-01,6.9352e-01,6.9352e-01,6.1232e-17,7.0711e-01,7.0711e-01,9.8079e-01,1.0839e-01,1.6221e-01,9.2388e-01,2.1261e-01,3.1819e-01,8.3147e-01,3.0866e-01,4.6194e-01,7.0711e-01,3.9285e-01,5.8794e-01,5.5557e-01,4.6194e-01,6.9134e-01,3.8268e-01,5.1328e-01,7.6818e-01,1.9509e-01,5.4490e-01,8.1549e-01,6.1232e-17,5.5557e-01,8.3147e-01,9.8079e-01,7.4658e-02,1.8024e-01,9.2388e-01,1.4645e-01,3.5355e-01,8.3147e-01,2.1261e-01,5.1328e-01,7.0711e-01,2.7060e-01,6.5328e-01,5.5557e-01,3.1819e-01,7.6818e-01,3.8268e-01,3.5355e-01,8.5355e-01,1.9509e-01,3.7533e-01,9.0613e-01,6.1232e-17,3.8268e-01,9.2388e-01,9.8079e-01,3.8060e-02,1.9134e-01,9.2388e-01,7.4658e-02,3.7533e-01,8.3147e-01,1.0839e-01,5.4490e-01,7.0711e-01,1.3795e-01,6.9352e-01,5.5557e-01,1.6221e-01,8.1549e-01,3.8268e-01,1.8024e-01,9.0613e-01,1.9509e-01,1.9134e-01,9.6194e-01,6.1232e-17,1.9509e-01,9.8079e-01,9.8079e-01,1.1946e-17,1.9509e-01,9.2388e-01,2.3433e-17,3.8268e-01,8.3147e-01,3.4019e-17,5.5557e-01,7.0711e-01,4.3298e-17,7.0711e-01,5.5557e-01,5.0913e-17,8.3147e-01,3.8268e-01,5.6571e-17,9.2388e-01,1.9509e-01,6.0056e-17,9.8079e-01,6.1232e-17,6.1232e-17,1.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00});
			return Normal_7_1018_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1052, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1052_point()
		{
			MFVec3f Coordinate_7_1052_point = new MFVec3f(new double[] {5.3556e+00,2.9807e+00,1.7627e+00,5.3331e+00,2.9807e+00,1.7559e+00,5.3123e+00,2.9807e+00,1.7448e+00,5.2941e+00,2.9807e+00,1.7299e+00,5.2792e+00,2.9807e+00,1.7117e+00,5.2681e+00,2.9807e+00,1.6909e+00,5.2613e+00,2.9807e+00,1.6684e+00,5.2590e+00,2.9807e+00,1.6450e+00,5.3560e+00,2.9762e+00,1.7627e+00,5.3340e+00,2.9718e+00,1.7559e+00,5.3136e+00,2.9677e+00,1.7448e+00,5.2958e+00,2.9642e+00,1.7299e+00,5.2811e+00,2.9613e+00,1.7117e+00,5.2703e+00,2.9591e+00,1.6909e+00,5.2636e+00,2.9578e+00,1.6684e+00,5.2613e+00,2.9573e+00,1.6450e+00,5.3574e+00,2.9718e+00,1.7627e+00,5.3366e+00,2.9632e+00,1.7559e+00,5.3174e+00,2.9552e+00,1.7448e+00,5.3006e+00,2.9483e+00,1.7299e+00,5.2868e+00,2.9426e+00,1.7117e+00,5.2766e+00,2.9383e+00,1.6909e+00,5.2703e+00,2.9357e+00,1.6684e+00,5.2681e+00,2.9348e+00,1.6450e+00,5.3595e+00,2.9677e+00,1.7627e+00,5.3408e+00,2.9552e+00,1.7559e+00,5.3236e+00,2.9437e+00,1.7448e+00,5.3084e+00,2.9336e+00,1.7299e+00,5.2960e+00,2.9253e+00,1.7117e+00,5.2868e+00,2.9191e+00,1.6909e+00,5.2811e+00,2.9154e+00,1.6684e+00,5.2792e+00,2.9141e+00,1.6450e+00,5.3624e+00,2.9642e+00,1.7627e+00,5.3465e+00,2.9483e+00,1.7559e+00,5.3319e+00,2.9336e+00,1.7448e+00,5.3190e+00,2.9207e+00,1.7299e+00,5.3084e+00,2.9102e+00,1.7117e+00,5.3006e+00,2.9023e+00,1.6909e+00,5.2958e+00,2.8975e+00,1.6684e+00,5.2941e+00,2.8959e+00,1.6450e+00,5.3790e+00,2.9807e+00,1.7650e+00});
			return Coordinate_7_1052_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1053, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1053_vector()
		{
			MFVec3f Normal_7_1053_vector = new MFVec3f(new double[] {1.9509e-01,-2.3892e-17,-9.8079e-01,3.8268e-01,-4.6865e-17,-9.2388e-01,5.5557e-01,-6.8038e-17,-8.3147e-01,7.0711e-01,-8.6596e-17,-7.0711e-01,8.3147e-01,-1.0183e-16,-5.5557e-01,9.2388e-01,-1.1314e-16,-3.8268e-01,9.8079e-01,-1.2011e-16,-1.9509e-01,1.0000e+00,-1.2246e-16,-6.1232e-17,1.9134e-01,3.8060e-02,-9.8079e-01,3.7533e-01,7.4658e-02,-9.2388e-01,5.4490e-01,1.0839e-01,-8.3147e-01,6.9352e-01,1.3795e-01,-7.0711e-01,8.1549e-01,1.6221e-01,-5.5557e-01,9.0613e-01,1.8024e-01,-3.8268e-01,9.6194e-01,1.9134e-01,-1.9509e-01,9.8079e-01,1.9509e-01,-6.1232e-17,1.8024e-01,7.4658e-02,-9.8079e-01,3.5355e-01,1.4645e-01,-9.2388e-01,5.1328e-01,2.1261e-01,-8.3147e-01,6.5328e-01,2.7060e-01,-7.0711e-01,7.6818e-01,3.1819e-01,-5.5557e-01,8.5355e-01,3.5355e-01,-3.8268e-01,9.0613e-01,3.7533e-01,-1.9509e-01,9.2388e-01,3.8268e-01,-6.1232e-17,1.6221e-01,1.0839e-01,-9.8079e-01,3.1819e-01,2.1261e-01,-9.2388e-01,4.6194e-01,3.0866e-01,-8.3147e-01,5.8794e-01,3.9285e-01,-7.0711e-01,6.9134e-01,4.6194e-01,-5.5557e-01,7.6818e-01,5.1328e-01,-3.8268e-01,8.1549e-01,5.4490e-01,-1.9509e-01,8.3147e-01,5.5557e-01,-6.1232e-17,1.3795e-01,1.3795e-01,-9.8079e-01,2.7060e-01,2.7060e-01,-9.2388e-01,3.9285e-01,3.9285e-01,-8.3147e-01,5.0000e-01,5.0000e-01,-7.0711e-01,5.8794e-01,5.8794e-01,-5.5557e-01,6.5328e-01,6.5328e-01,-3.8268e-01,6.9352e-01,6.9352e-01,-1.9509e-01,7.0711e-01,7.0711e-01,-6.1232e-17,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1053_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1059, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1059_point()
		{
			MFVec3f Coordinate_7_1059_point = new MFVec3f(new double[] {5.3624e+00,-2.9642e+00,1.7627e+00,5.3465e+00,-2.9483e+00,1.7559e+00,5.3319e+00,-2.9336e+00,1.7448e+00,5.3190e+00,-2.9207e+00,1.7299e+00,5.3084e+00,-2.9102e+00,1.7117e+00,5.3006e+00,-2.9023e+00,1.6909e+00,5.2958e+00,-2.8975e+00,1.6684e+00,5.2941e+00,-2.8959e+00,1.6450e+00,5.3595e+00,-2.9677e+00,1.7627e+00,5.3408e+00,-2.9552e+00,1.7559e+00,5.3236e+00,-2.9437e+00,1.7448e+00,5.3084e+00,-2.9336e+00,1.7299e+00,5.2960e+00,-2.9253e+00,1.7117e+00,5.2868e+00,-2.9191e+00,1.6909e+00,5.2811e+00,-2.9154e+00,1.6684e+00,5.2792e+00,-2.9141e+00,1.6450e+00,5.3574e+00,-2.9718e+00,1.7627e+00,5.3366e+00,-2.9632e+00,1.7559e+00,5.3174e+00,-2.9552e+00,1.7448e+00,5.3006e+00,-2.9483e+00,1.7299e+00,5.2868e+00,-2.9426e+00,1.7117e+00,5.2766e+00,-2.9383e+00,1.6909e+00,5.2703e+00,-2.9357e+00,1.6684e+00,5.2681e+00,-2.9348e+00,1.6450e+00,5.3560e+00,-2.9762e+00,1.7627e+00,5.3340e+00,-2.9718e+00,1.7559e+00,5.3136e+00,-2.9677e+00,1.7448e+00,5.2958e+00,-2.9642e+00,1.7299e+00,5.2811e+00,-2.9613e+00,1.7117e+00,5.2703e+00,-2.9591e+00,1.6909e+00,5.2636e+00,-2.9578e+00,1.6684e+00,5.2613e+00,-2.9573e+00,1.6450e+00,5.3556e+00,-2.9807e+00,1.7627e+00,5.3331e+00,-2.9807e+00,1.7559e+00,5.3123e+00,-2.9807e+00,1.7448e+00,5.2941e+00,-2.9807e+00,1.7299e+00,5.2792e+00,-2.9807e+00,1.7117e+00,5.2681e+00,-2.9807e+00,1.6909e+00,5.2613e+00,-2.9807e+00,1.6684e+00,5.2590e+00,-2.9807e+00,1.6450e+00,5.3790e+00,-2.9807e+00,1.7650e+00});
			return Coordinate_7_1059_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1060, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1060_vector()
		{
			MFVec3f Normal_7_1060_vector = new MFVec3f(new double[] {1.3795e-01,-1.3795e-01,-9.8079e-01,2.7060e-01,-2.7060e-01,-9.2388e-01,3.9285e-01,-3.9285e-01,-8.3147e-01,5.0000e-01,-5.0000e-01,-7.0711e-01,5.8794e-01,-5.8794e-01,-5.5557e-01,6.5328e-01,-6.5328e-01,-3.8268e-01,6.9352e-01,-6.9352e-01,-1.9509e-01,7.0711e-01,-7.0711e-01,-6.1232e-17,1.6221e-01,-1.0839e-01,-9.8079e-01,3.1819e-01,-2.1261e-01,-9.2388e-01,4.6194e-01,-3.0866e-01,-8.3147e-01,5.8794e-01,-3.9285e-01,-7.0711e-01,6.9134e-01,-4.6194e-01,-5.5557e-01,7.6818e-01,-5.1328e-01,-3.8268e-01,8.1549e-01,-5.4490e-01,-1.9509e-01,8.3147e-01,-5.5557e-01,-6.1232e-17,1.8024e-01,-7.4658e-02,-9.8079e-01,3.5355e-01,-1.4645e-01,-9.2388e-01,5.1328e-01,-2.1261e-01,-8.3147e-01,6.5328e-01,-2.7060e-01,-7.0711e-01,7.6818e-01,-3.1819e-01,-5.5557e-01,8.5355e-01,-3.5355e-01,-3.8268e-01,9.0613e-01,-3.7533e-01,-1.9509e-01,9.2388e-01,-3.8268e-01,-6.1232e-17,1.9134e-01,-3.8060e-02,-9.8079e-01,3.7533e-01,-7.4658e-02,-9.2388e-01,5.4490e-01,-1.0839e-01,-8.3147e-01,6.9352e-01,-1.3795e-01,-7.0711e-01,8.1549e-01,-1.6221e-01,-5.5557e-01,9.0613e-01,-1.8024e-01,-3.8268e-01,9.6194e-01,-1.9134e-01,-1.9509e-01,9.8079e-01,-1.9509e-01,-6.1232e-17,1.9509e-01,-4.1633e-17,-9.8079e-01,3.8268e-01,-8.3267e-17,-9.2388e-01,5.5557e-01,-5.5511e-17,-8.3147e-01,7.0711e-01,-1.1102e-16,-7.0711e-01,8.3147e-01,-1.6653e-16,-5.5557e-01,9.2388e-01,-1.6653e-16,-3.8268e-01,9.8079e-01,-1.6653e-16,-1.9509e-01,1.0000e+00,-2.2204e-16,-6.1232e-17,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1060_vector;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1067, 84 total numbers made up of 28 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1067_vector()
		{
			MFVec3f Normal_7_1067_vector = new MFVec3f(new double[] {4.1667e-08,4.1667e-08,-1.0000e+00,4.1667e-08,4.1667e-08,-1.0000e+00,-8.5232e-02,-8.5232e-02,-9.9271e-01,-8.5232e-02,-8.5232e-02,-9.9271e-01,-1.6922e-01,-1.6922e-01,-9.7094e-01,-1.6922e-01,-1.6922e-01,-9.7094e-01,-2.5074e-01,-2.5074e-01,-9.3502e-01,-2.5074e-01,-2.5074e-01,-9.3502e-01,-3.2861e-01,-3.2861e-01,-8.8546e-01,-3.2861e-01,-3.2861e-01,-8.8546e-01,-4.0168e-01,-4.0168e-01,-8.2298e-01,-4.0168e-01,-4.0168e-01,-8.2298e-01,-4.6890e-01,-4.6890e-01,-7.4851e-01,-4.6890e-01,-4.6890e-01,-7.4851e-01,-5.2928e-01,-5.2928e-01,-6.6312e-01,-5.2928e-01,-5.2928e-01,-6.6312e-01,-5.8194e-01,-5.8194e-01,-5.6806e-01,-5.8194e-01,-5.8194e-01,-5.6806e-01,-6.2611e-01,-6.2611e-01,-4.6472e-01,-6.2611e-01,-6.2611e-01,-4.6472e-01,-6.6116e-01,-6.6116e-01,-3.5460e-01,-6.6116e-01,-6.6116e-01,-3.5460e-01,-6.8656e-01,-6.8656e-01,-2.3932e-01,-6.8656e-01,-6.8656e-01,-2.3932e-01,-7.0195e-01,-7.0195e-01,-1.2054e-01,-7.0195e-01,-7.0195e-01,-1.2054e-01,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00});
			return Normal_7_1067_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1094, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1094_point()
		{
			MFVec3f Coordinate_7_1094_point = new MFVec3f(new double[] {4.6792e+00,3.6474e+00,1.7627e+00,4.6633e+00,3.6315e+00,1.7559e+00,4.6486e+00,3.6169e+00,1.7448e+00,4.6357e+00,3.6040e+00,1.7299e+00,4.6252e+00,3.5934e+00,1.7117e+00,4.6173e+00,3.5856e+00,1.6909e+00,4.6125e+00,3.5808e+00,1.6684e+00,4.6109e+00,3.5791e+00,1.6450e+00,4.6827e+00,3.6445e+00,1.7627e+00,4.6702e+00,3.6258e+00,1.7559e+00,4.6587e+00,3.6086e+00,1.7448e+00,4.6486e+00,3.5934e+00,1.7299e+00,4.6403e+00,3.5810e+00,1.7117e+00,4.6341e+00,3.5718e+00,1.6909e+00,4.6304e+00,3.5661e+00,1.6684e+00,4.6291e+00,3.5642e+00,1.6450e+00,4.6868e+00,3.6424e+00,1.7627e+00,4.6782e+00,3.6216e+00,1.7559e+00,4.6702e+00,3.6024e+00,1.7448e+00,4.6633e+00,3.5856e+00,1.7299e+00,4.6576e+00,3.5718e+00,1.7117e+00,4.6533e+00,3.5616e+00,1.6909e+00,4.6507e+00,3.5553e+00,1.6684e+00,4.6498e+00,3.5531e+00,1.6450e+00,4.6912e+00,3.6410e+00,1.7627e+00,4.6868e+00,3.6190e+00,1.7559e+00,4.6827e+00,3.5986e+00,1.7448e+00,4.6792e+00,3.5808e+00,1.7299e+00,4.6763e+00,3.5661e+00,1.7117e+00,4.6741e+00,3.5553e+00,1.6909e+00,4.6728e+00,3.5486e+00,1.6684e+00,4.6723e+00,3.5463e+00,1.6450e+00,4.6957e+00,3.6406e+00,1.7627e+00,4.6957e+00,3.6181e+00,1.7559e+00,4.6957e+00,3.5973e+00,1.7448e+00,4.6957e+00,3.5791e+00,1.7299e+00,4.6957e+00,3.5642e+00,1.7117e+00,4.6957e+00,3.5531e+00,1.6909e+00,4.6957e+00,3.5463e+00,1.6684e+00,4.6957e+00,3.5440e+00,1.6450e+00,4.6957e+00,3.6640e+00,1.7650e+00});
			return Coordinate_7_1094_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1095, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1095_vector()
		{
			MFVec3f Normal_7_1095_vector = new MFVec3f(new double[] {1.3795e-01,1.3795e-01,-9.8079e-01,2.7060e-01,2.7060e-01,-9.2388e-01,3.9285e-01,3.9285e-01,-8.3147e-01,5.0000e-01,5.0000e-01,-7.0711e-01,5.8794e-01,5.8794e-01,-5.5557e-01,6.5328e-01,6.5328e-01,-3.8268e-01,6.9352e-01,6.9352e-01,-1.9509e-01,7.0711e-01,7.0711e-01,-6.1232e-17,1.0839e-01,1.6221e-01,-9.8079e-01,2.1261e-01,3.1819e-01,-9.2388e-01,3.0866e-01,4.6194e-01,-8.3147e-01,3.9285e-01,5.8794e-01,-7.0711e-01,4.6194e-01,6.9134e-01,-5.5557e-01,5.1328e-01,7.6818e-01,-3.8268e-01,5.4490e-01,8.1549e-01,-1.9509e-01,5.5557e-01,8.3147e-01,-6.1232e-17,7.4658e-02,1.8024e-01,-9.8079e-01,1.4645e-01,3.5355e-01,-9.2388e-01,2.1261e-01,5.1328e-01,-8.3147e-01,2.7060e-01,6.5328e-01,-7.0711e-01,3.1819e-01,7.6818e-01,-5.5557e-01,3.5355e-01,8.5355e-01,-3.8268e-01,3.7533e-01,9.0613e-01,-1.9509e-01,3.8268e-01,9.2388e-01,-6.1232e-17,3.8060e-02,1.9134e-01,-9.8079e-01,7.4658e-02,3.7533e-01,-9.2388e-01,1.0839e-01,5.4490e-01,-8.3147e-01,1.3795e-01,6.9352e-01,-7.0711e-01,1.6221e-01,8.1549e-01,-5.5557e-01,1.8024e-01,9.0613e-01,-3.8268e-01,1.9134e-01,9.6194e-01,-1.9509e-01,1.9509e-01,9.8079e-01,-6.1232e-17,4.1633e-17,1.9509e-01,-9.8079e-01,8.3267e-17,3.8268e-01,-9.2388e-01,5.5511e-17,5.5557e-01,-8.3147e-01,1.1102e-16,7.0711e-01,-7.0711e-01,1.6653e-16,8.3147e-01,-5.5557e-01,1.6653e-16,9.2388e-01,-3.8268e-01,1.6653e-16,9.8079e-01,-1.9509e-01,2.2204e-16,1.0000e+00,-6.1232e-17,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1095_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1101, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1101_point()
		{
			MFVec3f Coordinate_7_1101_point = new MFVec3f(new double[] {4.6957e+00,-3.6406e+00,1.7627e+00,4.6957e+00,-3.6181e+00,1.7559e+00,4.6957e+00,-3.5973e+00,1.7448e+00,4.6957e+00,-3.5791e+00,1.7299e+00,4.6957e+00,-3.5642e+00,1.7117e+00,4.6957e+00,-3.5531e+00,1.6909e+00,4.6957e+00,-3.5463e+00,1.6684e+00,4.6957e+00,-3.5440e+00,1.6450e+00,4.6912e+00,-3.6410e+00,1.7627e+00,4.6868e+00,-3.6190e+00,1.7559e+00,4.6827e+00,-3.5986e+00,1.7448e+00,4.6792e+00,-3.5808e+00,1.7299e+00,4.6763e+00,-3.5661e+00,1.7117e+00,4.6741e+00,-3.5553e+00,1.6909e+00,4.6728e+00,-3.5486e+00,1.6684e+00,4.6723e+00,-3.5463e+00,1.6450e+00,4.6868e+00,-3.6424e+00,1.7627e+00,4.6782e+00,-3.6216e+00,1.7559e+00,4.6702e+00,-3.6024e+00,1.7448e+00,4.6633e+00,-3.5856e+00,1.7299e+00,4.6576e+00,-3.5718e+00,1.7117e+00,4.6533e+00,-3.5616e+00,1.6909e+00,4.6507e+00,-3.5553e+00,1.6684e+00,4.6498e+00,-3.5531e+00,1.6450e+00,4.6827e+00,-3.6445e+00,1.7627e+00,4.6702e+00,-3.6258e+00,1.7559e+00,4.6587e+00,-3.6086e+00,1.7448e+00,4.6486e+00,-3.5934e+00,1.7299e+00,4.6403e+00,-3.5810e+00,1.7117e+00,4.6341e+00,-3.5718e+00,1.6909e+00,4.6304e+00,-3.5661e+00,1.6684e+00,4.6291e+00,-3.5642e+00,1.6450e+00,4.6792e+00,-3.6474e+00,1.7627e+00,4.6633e+00,-3.6315e+00,1.7559e+00,4.6486e+00,-3.6169e+00,1.7448e+00,4.6357e+00,-3.6040e+00,1.7299e+00,4.6252e+00,-3.5934e+00,1.7117e+00,4.6173e+00,-3.5856e+00,1.6909e+00,4.6125e+00,-3.5808e+00,1.6684e+00,4.6109e+00,-3.5791e+00,1.6450e+00,4.6957e+00,-3.6640e+00,1.7650e+00});
			return Coordinate_7_1101_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1102, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1102_vector()
		{
			MFVec3f Normal_7_1102_vector = new MFVec3f(new double[] {-2.3892e-17,-1.9509e-01,-9.8079e-01,-4.6865e-17,-3.8268e-01,-9.2388e-01,-6.8038e-17,-5.5557e-01,-8.3147e-01,-8.6596e-17,-7.0711e-01,-7.0711e-01,-1.0183e-16,-8.3147e-01,-5.5557e-01,-1.1314e-16,-9.2388e-01,-3.8268e-01,-1.2011e-16,-9.8079e-01,-1.9509e-01,-1.2246e-16,-1.0000e+00,-6.1232e-17,3.8060e-02,-1.9134e-01,-9.8079e-01,7.4658e-02,-3.7533e-01,-9.2388e-01,1.0839e-01,-5.4490e-01,-8.3147e-01,1.3795e-01,-6.9352e-01,-7.0711e-01,1.6221e-01,-8.1549e-01,-5.5557e-01,1.8024e-01,-9.0613e-01,-3.8268e-01,1.9134e-01,-9.6194e-01,-1.9509e-01,1.9509e-01,-9.8079e-01,-6.1232e-17,7.4658e-02,-1.8024e-01,-9.8079e-01,1.4645e-01,-3.5355e-01,-9.2388e-01,2.1261e-01,-5.1328e-01,-8.3147e-01,2.7060e-01,-6.5328e-01,-7.0711e-01,3.1819e-01,-7.6818e-01,-5.5557e-01,3.5355e-01,-8.5355e-01,-3.8268e-01,3.7533e-01,-9.0613e-01,-1.9509e-01,3.8268e-01,-9.2388e-01,-6.1232e-17,1.0839e-01,-1.6221e-01,-9.8079e-01,2.1261e-01,-3.1819e-01,-9.2388e-01,3.0866e-01,-4.6194e-01,-8.3147e-01,3.9285e-01,-5.8794e-01,-7.0711e-01,4.6194e-01,-6.9134e-01,-5.5557e-01,5.1328e-01,-7.6818e-01,-3.8268e-01,5.4490e-01,-8.1549e-01,-1.9509e-01,5.5557e-01,-8.3147e-01,-6.1232e-17,1.3795e-01,-1.3795e-01,-9.8079e-01,2.7060e-01,-2.7060e-01,-9.2388e-01,3.9285e-01,-3.9285e-01,-8.3147e-01,5.0000e-01,-5.0000e-01,-7.0711e-01,5.8794e-01,-5.8794e-01,-5.5557e-01,6.5328e-01,-6.5328e-01,-3.8268e-01,6.9352e-01,-6.9352e-01,-1.9509e-01,7.0711e-01,-7.0711e-01,-6.1232e-17,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1102_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1136, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1136_point()
		{
			MFVec3f Coordinate_7_1136_point = new MFVec3f(new double[] {-4.6957e+00,3.6406e+00,1.7627e+00,-4.6957e+00,3.6181e+00,1.7559e+00,-4.6957e+00,3.5973e+00,1.7448e+00,-4.6957e+00,3.5791e+00,1.7299e+00,-4.6957e+00,3.5642e+00,1.7117e+00,-4.6957e+00,3.5531e+00,1.6909e+00,-4.6957e+00,3.5463e+00,1.6684e+00,-4.6957e+00,3.5440e+00,1.6450e+00,-4.6912e+00,3.6410e+00,1.7627e+00,-4.6868e+00,3.6190e+00,1.7559e+00,-4.6827e+00,3.5986e+00,1.7448e+00,-4.6792e+00,3.5808e+00,1.7299e+00,-4.6763e+00,3.5661e+00,1.7117e+00,-4.6741e+00,3.5553e+00,1.6909e+00,-4.6728e+00,3.5486e+00,1.6684e+00,-4.6723e+00,3.5463e+00,1.6450e+00,-4.6868e+00,3.6424e+00,1.7627e+00,-4.6782e+00,3.6216e+00,1.7559e+00,-4.6702e+00,3.6024e+00,1.7448e+00,-4.6633e+00,3.5856e+00,1.7299e+00,-4.6576e+00,3.5718e+00,1.7117e+00,-4.6533e+00,3.5616e+00,1.6909e+00,-4.6507e+00,3.5553e+00,1.6684e+00,-4.6498e+00,3.5531e+00,1.6450e+00,-4.6827e+00,3.6445e+00,1.7627e+00,-4.6702e+00,3.6258e+00,1.7559e+00,-4.6587e+00,3.6086e+00,1.7448e+00,-4.6486e+00,3.5934e+00,1.7299e+00,-4.6403e+00,3.5810e+00,1.7117e+00,-4.6341e+00,3.5718e+00,1.6909e+00,-4.6304e+00,3.5661e+00,1.6684e+00,-4.6291e+00,3.5642e+00,1.6450e+00,-4.6792e+00,3.6474e+00,1.7627e+00,-4.6633e+00,3.6315e+00,1.7559e+00,-4.6486e+00,3.6169e+00,1.7448e+00,-4.6357e+00,3.6040e+00,1.7299e+00,-4.6252e+00,3.5934e+00,1.7117e+00,-4.6173e+00,3.5856e+00,1.6909e+00,-4.6125e+00,3.5808e+00,1.6684e+00,-4.6109e+00,3.5791e+00,1.6450e+00,-4.6957e+00,3.6640e+00,1.7650e+00});
			return Coordinate_7_1136_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1137, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1137_vector()
		{
			MFVec3f Normal_7_1137_vector = new MFVec3f(new double[] {2.3892e-17,1.9509e-01,-9.8079e-01,4.6865e-17,3.8268e-01,-9.2388e-01,6.8038e-17,5.5557e-01,-8.3147e-01,8.6596e-17,7.0711e-01,-7.0711e-01,1.0183e-16,8.3147e-01,-5.5557e-01,1.1314e-16,9.2388e-01,-3.8268e-01,1.2011e-16,9.8079e-01,-1.9509e-01,1.2246e-16,1.0000e+00,-6.1232e-17,-3.8060e-02,1.9134e-01,-9.8079e-01,-7.4658e-02,3.7533e-01,-9.2388e-01,-1.0839e-01,5.4490e-01,-8.3147e-01,-1.3795e-01,6.9352e-01,-7.0711e-01,-1.6221e-01,8.1549e-01,-5.5557e-01,-1.8024e-01,9.0613e-01,-3.8268e-01,-1.9134e-01,9.6194e-01,-1.9509e-01,-1.9509e-01,9.8079e-01,-6.1232e-17,-7.4658e-02,1.8024e-01,-9.8079e-01,-1.4645e-01,3.5355e-01,-9.2388e-01,-2.1261e-01,5.1328e-01,-8.3147e-01,-2.7060e-01,6.5328e-01,-7.0711e-01,-3.1819e-01,7.6818e-01,-5.5557e-01,-3.5355e-01,8.5355e-01,-3.8268e-01,-3.7533e-01,9.0613e-01,-1.9509e-01,-3.8268e-01,9.2388e-01,-6.1232e-17,-1.0839e-01,1.6221e-01,-9.8079e-01,-2.1261e-01,3.1819e-01,-9.2388e-01,-3.0866e-01,4.6194e-01,-8.3147e-01,-3.9285e-01,5.8794e-01,-7.0711e-01,-4.6194e-01,6.9134e-01,-5.5557e-01,-5.1328e-01,7.6818e-01,-3.8268e-01,-5.4490e-01,8.1549e-01,-1.9509e-01,-5.5557e-01,8.3147e-01,-6.1232e-17,-1.3795e-01,1.3795e-01,-9.8079e-01,-2.7060e-01,2.7060e-01,-9.2388e-01,-3.9285e-01,3.9285e-01,-8.3147e-01,-5.0000e-01,5.0000e-01,-7.0711e-01,-5.8794e-01,5.8794e-01,-5.5557e-01,-6.5328e-01,6.5328e-01,-3.8268e-01,-6.9352e-01,6.9352e-01,-1.9509e-01,-7.0711e-01,7.0711e-01,-6.1232e-17,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1137_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1143, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1143_point()
		{
			MFVec3f Coordinate_7_1143_point = new MFVec3f(new double[] {-4.6792e+00,-3.6474e+00,1.7627e+00,-4.6633e+00,-3.6315e+00,1.7559e+00,-4.6486e+00,-3.6169e+00,1.7448e+00,-4.6357e+00,-3.6040e+00,1.7299e+00,-4.6252e+00,-3.5934e+00,1.7117e+00,-4.6173e+00,-3.5856e+00,1.6909e+00,-4.6125e+00,-3.5808e+00,1.6684e+00,-4.6109e+00,-3.5791e+00,1.6450e+00,-4.6827e+00,-3.6445e+00,1.7627e+00,-4.6702e+00,-3.6258e+00,1.7559e+00,-4.6587e+00,-3.6086e+00,1.7448e+00,-4.6486e+00,-3.5934e+00,1.7299e+00,-4.6403e+00,-3.5810e+00,1.7117e+00,-4.6341e+00,-3.5718e+00,1.6909e+00,-4.6304e+00,-3.5661e+00,1.6684e+00,-4.6291e+00,-3.5642e+00,1.6450e+00,-4.6868e+00,-3.6424e+00,1.7627e+00,-4.6782e+00,-3.6216e+00,1.7559e+00,-4.6702e+00,-3.6024e+00,1.7448e+00,-4.6633e+00,-3.5856e+00,1.7299e+00,-4.6576e+00,-3.5718e+00,1.7117e+00,-4.6533e+00,-3.5616e+00,1.6909e+00,-4.6507e+00,-3.5553e+00,1.6684e+00,-4.6498e+00,-3.5531e+00,1.6450e+00,-4.6912e+00,-3.6410e+00,1.7627e+00,-4.6868e+00,-3.6190e+00,1.7559e+00,-4.6827e+00,-3.5986e+00,1.7448e+00,-4.6792e+00,-3.5808e+00,1.7299e+00,-4.6763e+00,-3.5661e+00,1.7117e+00,-4.6741e+00,-3.5553e+00,1.6909e+00,-4.6728e+00,-3.5486e+00,1.6684e+00,-4.6723e+00,-3.5463e+00,1.6450e+00,-4.6957e+00,-3.6406e+00,1.7627e+00,-4.6957e+00,-3.6181e+00,1.7559e+00,-4.6957e+00,-3.5973e+00,1.7448e+00,-4.6957e+00,-3.5791e+00,1.7299e+00,-4.6957e+00,-3.5642e+00,1.7117e+00,-4.6957e+00,-3.5531e+00,1.6909e+00,-4.6957e+00,-3.5463e+00,1.6684e+00,-4.6957e+00,-3.5440e+00,1.6450e+00,-4.6957e+00,-3.6640e+00,1.7650e+00});
			return Coordinate_7_1143_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1144, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1144_vector()
		{
			MFVec3f Normal_7_1144_vector = new MFVec3f(new double[] {-1.3795e-01,-1.3795e-01,-9.8079e-01,-2.7060e-01,-2.7060e-01,-9.2388e-01,-3.9285e-01,-3.9285e-01,-8.3147e-01,-5.0000e-01,-5.0000e-01,-7.0711e-01,-5.8794e-01,-5.8794e-01,-5.5557e-01,-6.5328e-01,-6.5328e-01,-3.8268e-01,-6.9352e-01,-6.9352e-01,-1.9509e-01,-7.0711e-01,-7.0711e-01,-6.1232e-17,-1.0839e-01,-1.6221e-01,-9.8079e-01,-2.1261e-01,-3.1819e-01,-9.2388e-01,-3.0866e-01,-4.6194e-01,-8.3147e-01,-3.9285e-01,-5.8794e-01,-7.0711e-01,-4.6194e-01,-6.9134e-01,-5.5557e-01,-5.1328e-01,-7.6818e-01,-3.8268e-01,-5.4490e-01,-8.1549e-01,-1.9509e-01,-5.5557e-01,-8.3147e-01,-6.1232e-17,-7.4658e-02,-1.8024e-01,-9.8079e-01,-1.4645e-01,-3.5355e-01,-9.2388e-01,-2.1261e-01,-5.1328e-01,-8.3147e-01,-2.7060e-01,-6.5328e-01,-7.0711e-01,-3.1819e-01,-7.6818e-01,-5.5557e-01,-3.5355e-01,-8.5355e-01,-3.8268e-01,-3.7533e-01,-9.0613e-01,-1.9509e-01,-3.8268e-01,-9.2388e-01,-6.1232e-17,-3.8060e-02,-1.9134e-01,-9.8079e-01,-7.4658e-02,-3.7533e-01,-9.2388e-01,-1.0839e-01,-5.4490e-01,-8.3147e-01,-1.3795e-01,-6.9352e-01,-7.0711e-01,-1.6221e-01,-8.1549e-01,-5.5557e-01,-1.8024e-01,-9.0613e-01,-3.8268e-01,-1.9134e-01,-9.6194e-01,-1.9509e-01,-1.9509e-01,-9.8079e-01,-6.1232e-17,-4.1633e-17,-1.9509e-01,-9.8079e-01,-8.3267e-17,-3.8268e-01,-9.2388e-01,-5.5511e-17,-5.5557e-01,-8.3147e-01,-1.1102e-16,-7.0711e-01,-7.0711e-01,-1.6653e-16,-8.3147e-01,-5.5557e-01,-1.6653e-16,-9.2388e-01,-3.8268e-01,-1.6653e-16,-9.8079e-01,-1.9509e-01,-2.2204e-16,-1.0000e+00,-6.1232e-17,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1144_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1178, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1178_point()
		{
			MFVec3f Coordinate_7_1178_point = new MFVec3f(new double[] {-5.3624e+00,2.9642e+00,1.7627e+00,-5.3465e+00,2.9483e+00,1.7559e+00,-5.3319e+00,2.9336e+00,1.7448e+00,-5.3190e+00,2.9207e+00,1.7299e+00,-5.3084e+00,2.9102e+00,1.7117e+00,-5.3006e+00,2.9023e+00,1.6909e+00,-5.2958e+00,2.8975e+00,1.6684e+00,-5.2941e+00,2.8959e+00,1.6450e+00,-5.3595e+00,2.9677e+00,1.7627e+00,-5.3408e+00,2.9552e+00,1.7559e+00,-5.3236e+00,2.9437e+00,1.7448e+00,-5.3084e+00,2.9336e+00,1.7299e+00,-5.2960e+00,2.9253e+00,1.7117e+00,-5.2868e+00,2.9191e+00,1.6909e+00,-5.2811e+00,2.9154e+00,1.6684e+00,-5.2792e+00,2.9141e+00,1.6450e+00,-5.3574e+00,2.9718e+00,1.7627e+00,-5.3366e+00,2.9632e+00,1.7559e+00,-5.3174e+00,2.9552e+00,1.7448e+00,-5.3006e+00,2.9483e+00,1.7299e+00,-5.2868e+00,2.9426e+00,1.7117e+00,-5.2766e+00,2.9383e+00,1.6909e+00,-5.2703e+00,2.9357e+00,1.6684e+00,-5.2681e+00,2.9348e+00,1.6450e+00,-5.3560e+00,2.9762e+00,1.7627e+00,-5.3340e+00,2.9718e+00,1.7559e+00,-5.3136e+00,2.9677e+00,1.7448e+00,-5.2958e+00,2.9642e+00,1.7299e+00,-5.2811e+00,2.9613e+00,1.7117e+00,-5.2703e+00,2.9591e+00,1.6909e+00,-5.2636e+00,2.9578e+00,1.6684e+00,-5.2613e+00,2.9573e+00,1.6450e+00,-5.3556e+00,2.9807e+00,1.7627e+00,-5.3331e+00,2.9807e+00,1.7559e+00,-5.3123e+00,2.9807e+00,1.7448e+00,-5.2941e+00,2.9807e+00,1.7299e+00,-5.2792e+00,2.9807e+00,1.7117e+00,-5.2681e+00,2.9807e+00,1.6909e+00,-5.2613e+00,2.9807e+00,1.6684e+00,-5.2590e+00,2.9807e+00,1.6450e+00,-5.3790e+00,2.9807e+00,1.7650e+00});
			return Coordinate_7_1178_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1179, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1179_vector()
		{
			MFVec3f Normal_7_1179_vector = new MFVec3f(new double[] {-1.3795e-01,1.3795e-01,-9.8079e-01,-2.7060e-01,2.7060e-01,-9.2388e-01,-3.9285e-01,3.9285e-01,-8.3147e-01,-5.0000e-01,5.0000e-01,-7.0711e-01,-5.8794e-01,5.8794e-01,-5.5557e-01,-6.5328e-01,6.5328e-01,-3.8268e-01,-6.9352e-01,6.9352e-01,-1.9509e-01,-7.0711e-01,7.0711e-01,-6.1232e-17,-1.6221e-01,1.0839e-01,-9.8079e-01,-3.1819e-01,2.1261e-01,-9.2388e-01,-4.6194e-01,3.0866e-01,-8.3147e-01,-5.8794e-01,3.9285e-01,-7.0711e-01,-6.9134e-01,4.6194e-01,-5.5557e-01,-7.6818e-01,5.1328e-01,-3.8268e-01,-8.1549e-01,5.4490e-01,-1.9509e-01,-8.3147e-01,5.5557e-01,-6.1232e-17,-1.8024e-01,7.4658e-02,-9.8079e-01,-3.5355e-01,1.4645e-01,-9.2388e-01,-5.1328e-01,2.1261e-01,-8.3147e-01,-6.5328e-01,2.7060e-01,-7.0711e-01,-7.6818e-01,3.1819e-01,-5.5557e-01,-8.5355e-01,3.5355e-01,-3.8268e-01,-9.0613e-01,3.7533e-01,-1.9509e-01,-9.2388e-01,3.8268e-01,-6.1232e-17,-1.9134e-01,3.8060e-02,-9.8079e-01,-3.7533e-01,7.4658e-02,-9.2388e-01,-5.4490e-01,1.0839e-01,-8.3147e-01,-6.9352e-01,1.3795e-01,-7.0711e-01,-8.1549e-01,1.6221e-01,-5.5557e-01,-9.0613e-01,1.8024e-01,-3.8268e-01,-9.6194e-01,1.9134e-01,-1.9509e-01,-9.8079e-01,1.9509e-01,-6.1232e-17,-1.9509e-01,4.1633e-17,-9.8079e-01,-3.8268e-01,8.3267e-17,-9.2388e-01,-5.5557e-01,5.5511e-17,-8.3147e-01,-7.0711e-01,1.1102e-16,-7.0711e-01,-8.3147e-01,1.6653e-16,-5.5557e-01,-9.2388e-01,1.6653e-16,-3.8268e-01,-9.8079e-01,1.6653e-16,-1.9509e-01,-1.0000e+00,2.2204e-16,-6.1232e-17,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1179_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1185, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1185_point()
		{
			MFVec3f Coordinate_7_1185_point = new MFVec3f(new double[] {-5.3556e+00,-2.9807e+00,1.7627e+00,-5.3331e+00,-2.9807e+00,1.7559e+00,-5.3123e+00,-2.9807e+00,1.7448e+00,-5.2941e+00,-2.9807e+00,1.7299e+00,-5.2792e+00,-2.9807e+00,1.7117e+00,-5.2681e+00,-2.9807e+00,1.6909e+00,-5.2613e+00,-2.9807e+00,1.6684e+00,-5.2590e+00,-2.9807e+00,1.6450e+00,-5.3560e+00,-2.9762e+00,1.7627e+00,-5.3340e+00,-2.9718e+00,1.7559e+00,-5.3136e+00,-2.9677e+00,1.7448e+00,-5.2958e+00,-2.9642e+00,1.7299e+00,-5.2811e+00,-2.9613e+00,1.7117e+00,-5.2703e+00,-2.9591e+00,1.6909e+00,-5.2636e+00,-2.9578e+00,1.6684e+00,-5.2613e+00,-2.9573e+00,1.6450e+00,-5.3574e+00,-2.9718e+00,1.7627e+00,-5.3366e+00,-2.9632e+00,1.7559e+00,-5.3174e+00,-2.9552e+00,1.7448e+00,-5.3006e+00,-2.9483e+00,1.7299e+00,-5.2868e+00,-2.9426e+00,1.7117e+00,-5.2766e+00,-2.9383e+00,1.6909e+00,-5.2703e+00,-2.9357e+00,1.6684e+00,-5.2681e+00,-2.9348e+00,1.6450e+00,-5.3595e+00,-2.9677e+00,1.7627e+00,-5.3408e+00,-2.9552e+00,1.7559e+00,-5.3236e+00,-2.9437e+00,1.7448e+00,-5.3084e+00,-2.9336e+00,1.7299e+00,-5.2960e+00,-2.9253e+00,1.7117e+00,-5.2868e+00,-2.9191e+00,1.6909e+00,-5.2811e+00,-2.9154e+00,1.6684e+00,-5.2792e+00,-2.9141e+00,1.6450e+00,-5.3624e+00,-2.9642e+00,1.7627e+00,-5.3465e+00,-2.9483e+00,1.7559e+00,-5.3319e+00,-2.9336e+00,1.7448e+00,-5.3190e+00,-2.9207e+00,1.7299e+00,-5.3084e+00,-2.9102e+00,1.7117e+00,-5.3006e+00,-2.9023e+00,1.6909e+00,-5.2958e+00,-2.8975e+00,1.6684e+00,-5.2941e+00,-2.8959e+00,1.6450e+00,-5.3790e+00,-2.9807e+00,1.7650e+00});
			return Coordinate_7_1185_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1186, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1186_vector()
		{
			MFVec3f Normal_7_1186_vector = new MFVec3f(new double[] {-1.9509e-01,2.3892e-17,-9.8079e-01,-3.8268e-01,4.6865e-17,-9.2388e-01,-5.5557e-01,6.8038e-17,-8.3147e-01,-7.0711e-01,8.6596e-17,-7.0711e-01,-8.3147e-01,1.0183e-16,-5.5557e-01,-9.2388e-01,1.1314e-16,-3.8268e-01,-9.8079e-01,1.2011e-16,-1.9509e-01,-1.0000e+00,1.2246e-16,-6.1232e-17,-1.9134e-01,-3.8060e-02,-9.8079e-01,-3.7533e-01,-7.4658e-02,-9.2388e-01,-5.4490e-01,-1.0839e-01,-8.3147e-01,-6.9352e-01,-1.3795e-01,-7.0711e-01,-8.1549e-01,-1.6221e-01,-5.5557e-01,-9.0613e-01,-1.8024e-01,-3.8268e-01,-9.6194e-01,-1.9134e-01,-1.9509e-01,-9.8079e-01,-1.9509e-01,-6.1232e-17,-1.8024e-01,-7.4658e-02,-9.8079e-01,-3.5355e-01,-1.4645e-01,-9.2388e-01,-5.1328e-01,-2.1261e-01,-8.3147e-01,-6.5328e-01,-2.7060e-01,-7.0711e-01,-7.6818e-01,-3.1819e-01,-5.5557e-01,-8.5355e-01,-3.5355e-01,-3.8268e-01,-9.0613e-01,-3.7533e-01,-1.9509e-01,-9.2388e-01,-3.8268e-01,-6.1232e-17,-1.6221e-01,-1.0839e-01,-9.8079e-01,-3.1819e-01,-2.1261e-01,-9.2388e-01,-4.6194e-01,-3.0866e-01,-8.3147e-01,-5.8794e-01,-3.9285e-01,-7.0711e-01,-6.9134e-01,-4.6194e-01,-5.5557e-01,-7.6818e-01,-5.1328e-01,-3.8268e-01,-8.1549e-01,-5.4490e-01,-1.9509e-01,-8.3147e-01,-5.5557e-01,-6.1232e-17,-1.3795e-01,-1.3795e-01,-9.8079e-01,-2.7060e-01,-2.7060e-01,-9.2388e-01,-3.9285e-01,-3.9285e-01,-8.3147e-01,-5.0000e-01,-5.0000e-01,-7.0711e-01,-5.8794e-01,-5.8794e-01,-5.5557e-01,-6.5328e-01,-6.5328e-01,-3.8268e-01,-6.9352e-01,-6.9352e-01,-1.9509e-01,-7.0711e-01,-7.0711e-01,-6.1232e-17,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1186_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1220, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1220_point()
		{
			MFVec3f Coordinate_7_1220_point = new MFVec3f(new double[] {5.6524e+00,3.0843e+00,1.8977e+00,5.6749e+00,3.0843e+00,1.8909e+00,5.6957e+00,3.0843e+00,1.8798e+00,5.7139e+00,3.0843e+00,1.8649e+00,5.7288e+00,3.0843e+00,1.8467e+00,5.7399e+00,3.0843e+00,1.8259e+00,5.7467e+00,3.0843e+00,1.8034e+00,5.7490e+00,3.0843e+00,1.7800e+00,5.6520e+00,3.0889e+00,1.8977e+00,5.6740e+00,3.0933e+00,1.8909e+00,5.6944e+00,3.0973e+00,1.8798e+00,5.7122e+00,3.1008e+00,1.8649e+00,5.7269e+00,3.1038e+00,1.8467e+00,5.7377e+00,3.1059e+00,1.8259e+00,5.7444e+00,3.1073e+00,1.8034e+00,5.7467e+00,3.1077e+00,1.7800e+00,5.6506e+00,3.0933e+00,1.8977e+00,5.6714e+00,3.1019e+00,1.8909e+00,5.6906e+00,3.1098e+00,1.8798e+00,5.7074e+00,3.1168e+00,1.8649e+00,5.7212e+00,3.1225e+00,1.8467e+00,5.7314e+00,3.1267e+00,1.8259e+00,5.7377e+00,3.1293e+00,1.8034e+00,5.7399e+00,3.1302e+00,1.7800e+00,5.6485e+00,3.0973e+00,1.8977e+00,5.6672e+00,3.1098e+00,1.8909e+00,5.6844e+00,3.1213e+00,1.8798e+00,5.6996e+00,3.1314e+00,1.8649e+00,5.7120e+00,3.1397e+00,1.8467e+00,5.7212e+00,3.1459e+00,1.8259e+00,5.7269e+00,3.1497e+00,1.8034e+00,5.7288e+00,3.1510e+00,1.7800e+00,5.6456e+00,3.1008e+00,1.8977e+00,5.6615e+00,3.1168e+00,1.8909e+00,5.6761e+00,3.1314e+00,1.8798e+00,5.6890e+00,3.1443e+00,1.8649e+00,5.6996e+00,3.1548e+00,1.8467e+00,5.7074e+00,3.1627e+00,1.8259e+00,5.7122e+00,3.1675e+00,1.8034e+00,5.7139e+00,3.1691e+00,1.7800e+00,5.6290e+00,3.0843e+00,1.9000e+00});
			return Coordinate_7_1220_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1221, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1221_vector()
		{
			MFVec3f Normal_7_1221_vector = new MFVec3f(new double[] {1.9509e-01,0.0000e+00,9.8079e-01,3.8268e-01,0.0000e+00,9.2388e-01,5.5557e-01,0.0000e+00,8.3147e-01,7.0711e-01,0.0000e+00,7.0711e-01,8.3147e-01,0.0000e+00,5.5557e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.8079e-01,0.0000e+00,1.9509e-01,1.0000e+00,0.0000e+00,6.1232e-17,1.9134e-01,3.8060e-02,9.8079e-01,3.7533e-01,7.4658e-02,9.2388e-01,5.4490e-01,1.0839e-01,8.3147e-01,6.9352e-01,1.3795e-01,7.0711e-01,8.1549e-01,1.6221e-01,5.5557e-01,9.0613e-01,1.8024e-01,3.8268e-01,9.6194e-01,1.9134e-01,1.9509e-01,9.8079e-01,1.9509e-01,6.1232e-17,1.8024e-01,7.4658e-02,9.8079e-01,3.5355e-01,1.4645e-01,9.2388e-01,5.1328e-01,2.1261e-01,8.3147e-01,6.5328e-01,2.7060e-01,7.0711e-01,7.6818e-01,3.1819e-01,5.5557e-01,8.5355e-01,3.5355e-01,3.8268e-01,9.0613e-01,3.7533e-01,1.9509e-01,9.2388e-01,3.8268e-01,6.1232e-17,1.6221e-01,1.0839e-01,9.8079e-01,3.1819e-01,2.1261e-01,9.2388e-01,4.6194e-01,3.0866e-01,8.3147e-01,5.8794e-01,3.9285e-01,7.0711e-01,6.9134e-01,4.6194e-01,5.5557e-01,7.6818e-01,5.1328e-01,3.8268e-01,8.1549e-01,5.4490e-01,1.9509e-01,8.3147e-01,5.5557e-01,6.1232e-17,1.3795e-01,1.3795e-01,9.8079e-01,2.7060e-01,2.7060e-01,9.2388e-01,3.9285e-01,3.9285e-01,8.3147e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.8794e-01,5.8794e-01,5.5557e-01,6.5328e-01,6.5328e-01,3.8268e-01,6.9352e-01,6.9352e-01,1.9509e-01,7.0711e-01,7.0711e-01,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1221_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1227, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1227_point()
		{
			MFVec3f Coordinate_7_1227_point = new MFVec3f(new double[] {4.8158e+00,3.9306e+00,1.8977e+00,4.8318e+00,3.9465e+00,1.8909e+00,4.8464e+00,3.9611e+00,1.8798e+00,4.8593e+00,3.9740e+00,1.8649e+00,4.8698e+00,3.9846e+00,1.8467e+00,4.8777e+00,3.9924e+00,1.8259e+00,4.8825e+00,3.9972e+00,1.8034e+00,4.8841e+00,3.9989e+00,1.7800e+00,4.8123e+00,3.9335e+00,1.8977e+00,4.8248e+00,3.9522e+00,1.8909e+00,4.8363e+00,3.9694e+00,1.8798e+00,4.8464e+00,3.9846e+00,1.8649e+00,4.8547e+00,3.9970e+00,1.8467e+00,4.8609e+00,4.0062e+00,1.8259e+00,4.8647e+00,4.0119e+00,1.8034e+00,4.8660e+00,4.0138e+00,1.7800e+00,4.8083e+00,3.9356e+00,1.8977e+00,4.8169e+00,3.9564e+00,1.8909e+00,4.8248e+00,3.9756e+00,1.8798e+00,4.8318e+00,3.9924e+00,1.8649e+00,4.8375e+00,4.0062e+00,1.8467e+00,4.8417e+00,4.0164e+00,1.8259e+00,4.8443e+00,4.0227e+00,1.8034e+00,4.8452e+00,4.0249e+00,1.7800e+00,4.8039e+00,3.9370e+00,1.8977e+00,4.8083e+00,3.9590e+00,1.8909e+00,4.8123e+00,3.9794e+00,1.8798e+00,4.8158e+00,3.9972e+00,1.8649e+00,4.8188e+00,4.0119e+00,1.8467e+00,4.8209e+00,4.0227e+00,1.8259e+00,4.8223e+00,4.0294e+00,1.8034e+00,4.8227e+00,4.0317e+00,1.7800e+00,4.7993e+00,3.9374e+00,1.8977e+00,4.7993e+00,3.9599e+00,1.8909e+00,4.7993e+00,3.9807e+00,1.8798e+00,4.7993e+00,3.9989e+00,1.8649e+00,4.7993e+00,4.0138e+00,1.8467e+00,4.7993e+00,4.0249e+00,1.8259e+00,4.7993e+00,4.0317e+00,1.8034e+00,4.7993e+00,4.0340e+00,1.7800e+00,4.7993e+00,3.9140e+00,1.9000e+00});
			return Coordinate_7_1227_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1228, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1228_vector()
		{
			MFVec3f Normal_7_1228_vector = new MFVec3f(new double[] {1.3795e-01,1.3795e-01,9.8079e-01,2.7060e-01,2.7060e-01,9.2388e-01,3.9285e-01,3.9285e-01,8.3147e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.8794e-01,5.8794e-01,5.5557e-01,6.5328e-01,6.5328e-01,3.8268e-01,6.9352e-01,6.9352e-01,1.9509e-01,7.0711e-01,7.0711e-01,6.1232e-17,1.0839e-01,1.6221e-01,9.8079e-01,2.1261e-01,3.1819e-01,9.2388e-01,3.0866e-01,4.6194e-01,8.3147e-01,3.9285e-01,5.8794e-01,7.0711e-01,4.6194e-01,6.9134e-01,5.5557e-01,5.1328e-01,7.6818e-01,3.8268e-01,5.4490e-01,8.1549e-01,1.9509e-01,5.5557e-01,8.3147e-01,6.1232e-17,7.4658e-02,1.8024e-01,9.8079e-01,1.4645e-01,3.5355e-01,9.2388e-01,2.1261e-01,5.1328e-01,8.3147e-01,2.7060e-01,6.5328e-01,7.0711e-01,3.1819e-01,7.6818e-01,5.5557e-01,3.5355e-01,8.5355e-01,3.8268e-01,3.7533e-01,9.0613e-01,1.9509e-01,3.8268e-01,9.2388e-01,6.1232e-17,3.8060e-02,1.9134e-01,9.8079e-01,7.4658e-02,3.7533e-01,9.2388e-01,1.0839e-01,5.4490e-01,8.3147e-01,1.3795e-01,6.9352e-01,7.0711e-01,1.6221e-01,8.1549e-01,5.5557e-01,1.8024e-01,9.0613e-01,3.8268e-01,1.9134e-01,9.6194e-01,1.9509e-01,1.9509e-01,9.8079e-01,6.1232e-17,2.7756e-17,1.9509e-01,9.8079e-01,5.5511e-17,3.8268e-01,9.2388e-01,5.5511e-17,5.5557e-01,8.3147e-01,5.5511e-17,7.0711e-01,7.0711e-01,1.1102e-16,8.3147e-01,5.5557e-01,1.1102e-16,9.2388e-01,3.8268e-01,1.1102e-16,9.8079e-01,1.9509e-01,1.1102e-16,1.0000e+00,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1228_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1262, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1262_point()
		{
			MFVec3f Coordinate_7_1262_point = new MFVec3f(new double[] {5.6456e+00,-3.1008e+00,1.8977e+00,5.6615e+00,-3.1168e+00,1.8909e+00,5.6761e+00,-3.1314e+00,1.8798e+00,5.6890e+00,-3.1443e+00,1.8649e+00,5.6996e+00,-3.1548e+00,1.8467e+00,5.7074e+00,-3.1627e+00,1.8259e+00,5.7122e+00,-3.1675e+00,1.8034e+00,5.7139e+00,-3.1691e+00,1.7800e+00,5.6485e+00,-3.0973e+00,1.8977e+00,5.6672e+00,-3.1098e+00,1.8909e+00,5.6844e+00,-3.1213e+00,1.8798e+00,5.6996e+00,-3.1314e+00,1.8649e+00,5.7120e+00,-3.1397e+00,1.8467e+00,5.7212e+00,-3.1459e+00,1.8259e+00,5.7269e+00,-3.1497e+00,1.8034e+00,5.7288e+00,-3.1510e+00,1.7800e+00,5.6506e+00,-3.0933e+00,1.8977e+00,5.6714e+00,-3.1019e+00,1.8909e+00,5.6906e+00,-3.1098e+00,1.8798e+00,5.7074e+00,-3.1168e+00,1.8649e+00,5.7212e+00,-3.1225e+00,1.8467e+00,5.7314e+00,-3.1267e+00,1.8259e+00,5.7377e+00,-3.1293e+00,1.8034e+00,5.7399e+00,-3.1302e+00,1.7800e+00,5.6520e+00,-3.0889e+00,1.8977e+00,5.6740e+00,-3.0933e+00,1.8909e+00,5.6944e+00,-3.0973e+00,1.8798e+00,5.7122e+00,-3.1008e+00,1.8649e+00,5.7269e+00,-3.1038e+00,1.8467e+00,5.7377e+00,-3.1059e+00,1.8259e+00,5.7444e+00,-3.1073e+00,1.8034e+00,5.7467e+00,-3.1077e+00,1.7800e+00,5.6524e+00,-3.0843e+00,1.8977e+00,5.6749e+00,-3.0843e+00,1.8909e+00,5.6957e+00,-3.0843e+00,1.8798e+00,5.7139e+00,-3.0843e+00,1.8649e+00,5.7288e+00,-3.0843e+00,1.8467e+00,5.7399e+00,-3.0843e+00,1.8259e+00,5.7467e+00,-3.0843e+00,1.8034e+00,5.7490e+00,-3.0843e+00,1.7800e+00,5.6290e+00,-3.0843e+00,1.9000e+00});
			return Coordinate_7_1262_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1263, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1263_vector()
		{
			MFVec3f Normal_7_1263_vector = new MFVec3f(new double[] {1.3795e-01,-1.3795e-01,9.8079e-01,2.7060e-01,-2.7060e-01,9.2388e-01,3.9285e-01,-3.9285e-01,8.3147e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.8794e-01,-5.8794e-01,5.5557e-01,6.5328e-01,-6.5328e-01,3.8268e-01,6.9352e-01,-6.9352e-01,1.9509e-01,7.0711e-01,-7.0711e-01,6.1232e-17,1.6221e-01,-1.0839e-01,9.8079e-01,3.1819e-01,-2.1261e-01,9.2388e-01,4.6194e-01,-3.0866e-01,8.3147e-01,5.8794e-01,-3.9285e-01,7.0711e-01,6.9134e-01,-4.6194e-01,5.5557e-01,7.6818e-01,-5.1328e-01,3.8268e-01,8.1549e-01,-5.4490e-01,1.9509e-01,8.3147e-01,-5.5557e-01,6.1232e-17,1.8024e-01,-7.4658e-02,9.8079e-01,3.5355e-01,-1.4645e-01,9.2388e-01,5.1328e-01,-2.1261e-01,8.3147e-01,6.5328e-01,-2.7060e-01,7.0711e-01,7.6818e-01,-3.1819e-01,5.5557e-01,8.5355e-01,-3.5355e-01,3.8268e-01,9.0613e-01,-3.7533e-01,1.9509e-01,9.2388e-01,-3.8268e-01,6.1232e-17,1.9134e-01,-3.8060e-02,9.8079e-01,3.7533e-01,-7.4658e-02,9.2388e-01,5.4490e-01,-1.0839e-01,8.3147e-01,6.9352e-01,-1.3795e-01,7.0711e-01,8.1549e-01,-1.6221e-01,5.5557e-01,9.0613e-01,-1.8024e-01,3.8268e-01,9.6194e-01,-1.9134e-01,1.9509e-01,9.8079e-01,-1.9509e-01,6.1232e-17,1.9509e-01,-2.7756e-17,9.8079e-01,3.8268e-01,-5.5511e-17,9.2388e-01,5.5557e-01,-5.5511e-17,8.3147e-01,7.0711e-01,-5.5511e-17,7.0711e-01,8.3147e-01,-1.1102e-16,5.5557e-01,9.2388e-01,-1.1102e-16,3.8268e-01,9.8079e-01,-1.1102e-16,1.9509e-01,1.0000e+00,-1.1102e-16,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1263_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1269, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1269_point()
		{
			MFVec3f Coordinate_7_1269_point = new MFVec3f(new double[] {-4.7993e+00,3.9374e+00,1.8977e+00,-4.7993e+00,3.9599e+00,1.8909e+00,-4.7993e+00,3.9807e+00,1.8798e+00,-4.7993e+00,3.9989e+00,1.8649e+00,-4.7993e+00,4.0138e+00,1.8467e+00,-4.7993e+00,4.0249e+00,1.8259e+00,-4.7993e+00,4.0317e+00,1.8034e+00,-4.7993e+00,4.0340e+00,1.7800e+00,-4.8039e+00,3.9370e+00,1.8977e+00,-4.8083e+00,3.9590e+00,1.8909e+00,-4.8123e+00,3.9794e+00,1.8798e+00,-4.8158e+00,3.9972e+00,1.8649e+00,-4.8188e+00,4.0119e+00,1.8467e+00,-4.8209e+00,4.0227e+00,1.8259e+00,-4.8223e+00,4.0294e+00,1.8034e+00,-4.8227e+00,4.0317e+00,1.7800e+00,-4.8083e+00,3.9356e+00,1.8977e+00,-4.8169e+00,3.9564e+00,1.8909e+00,-4.8248e+00,3.9756e+00,1.8798e+00,-4.8318e+00,3.9924e+00,1.8649e+00,-4.8375e+00,4.0062e+00,1.8467e+00,-4.8417e+00,4.0164e+00,1.8259e+00,-4.8443e+00,4.0227e+00,1.8034e+00,-4.8452e+00,4.0249e+00,1.7800e+00,-4.8123e+00,3.9335e+00,1.8977e+00,-4.8248e+00,3.9522e+00,1.8909e+00,-4.8363e+00,3.9694e+00,1.8798e+00,-4.8464e+00,3.9846e+00,1.8649e+00,-4.8547e+00,3.9970e+00,1.8467e+00,-4.8609e+00,4.0062e+00,1.8259e+00,-4.8647e+00,4.0119e+00,1.8034e+00,-4.8660e+00,4.0138e+00,1.7800e+00,-4.8158e+00,3.9306e+00,1.8977e+00,-4.8318e+00,3.9465e+00,1.8909e+00,-4.8464e+00,3.9611e+00,1.8798e+00,-4.8593e+00,3.9740e+00,1.8649e+00,-4.8698e+00,3.9846e+00,1.8467e+00,-4.8777e+00,3.9924e+00,1.8259e+00,-4.8825e+00,3.9972e+00,1.8034e+00,-4.8841e+00,3.9989e+00,1.7800e+00,-4.7993e+00,3.9140e+00,1.9000e+00});
			return Coordinate_7_1269_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1270, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1270_vector()
		{
			MFVec3f Normal_7_1270_vector = new MFVec3f(new double[] {0.0000e+00,1.9509e-01,9.8079e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,5.5557e-01,8.3147e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,8.3147e-01,5.5557e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.8079e-01,1.9509e-01,0.0000e+00,1.0000e+00,6.1232e-17,-3.8060e-02,1.9134e-01,9.8079e-01,-7.4658e-02,3.7533e-01,9.2388e-01,-1.0839e-01,5.4490e-01,8.3147e-01,-1.3795e-01,6.9352e-01,7.0711e-01,-1.6221e-01,8.1549e-01,5.5557e-01,-1.8024e-01,9.0613e-01,3.8268e-01,-1.9134e-01,9.6194e-01,1.9509e-01,-1.9509e-01,9.8079e-01,6.1232e-17,-7.4658e-02,1.8024e-01,9.8079e-01,-1.4645e-01,3.5355e-01,9.2388e-01,-2.1261e-01,5.1328e-01,8.3147e-01,-2.7060e-01,6.5328e-01,7.0711e-01,-3.1819e-01,7.6818e-01,5.5557e-01,-3.5355e-01,8.5355e-01,3.8268e-01,-3.7533e-01,9.0613e-01,1.9509e-01,-3.8268e-01,9.2388e-01,6.1232e-17,-1.0839e-01,1.6221e-01,9.8079e-01,-2.1261e-01,3.1819e-01,9.2388e-01,-3.0866e-01,4.6194e-01,8.3147e-01,-3.9285e-01,5.8794e-01,7.0711e-01,-4.6194e-01,6.9134e-01,5.5557e-01,-5.1328e-01,7.6818e-01,3.8268e-01,-5.4490e-01,8.1549e-01,1.9509e-01,-5.5557e-01,8.3147e-01,6.1232e-17,-1.3795e-01,1.3795e-01,9.8079e-01,-2.7060e-01,2.7060e-01,9.2388e-01,-3.9285e-01,3.9285e-01,8.3147e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-5.8794e-01,5.8794e-01,5.5557e-01,-6.5328e-01,6.5328e-01,3.8268e-01,-6.9352e-01,6.9352e-01,1.9509e-01,-7.0711e-01,7.0711e-01,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1270_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1304, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1304_point()
		{
			MFVec3f Coordinate_7_1304_point = new MFVec3f(new double[] {4.7993e+00,-3.9374e+00,1.8977e+00,4.7993e+00,-3.9599e+00,1.8909e+00,4.7993e+00,-3.9807e+00,1.8798e+00,4.7993e+00,-3.9989e+00,1.8649e+00,4.7993e+00,-4.0138e+00,1.8467e+00,4.7993e+00,-4.0249e+00,1.8259e+00,4.7993e+00,-4.0317e+00,1.8034e+00,4.7993e+00,-4.0340e+00,1.7800e+00,4.8039e+00,-3.9370e+00,1.8977e+00,4.8083e+00,-3.9590e+00,1.8909e+00,4.8123e+00,-3.9794e+00,1.8798e+00,4.8158e+00,-3.9972e+00,1.8649e+00,4.8188e+00,-4.0119e+00,1.8467e+00,4.8209e+00,-4.0227e+00,1.8259e+00,4.8223e+00,-4.0294e+00,1.8034e+00,4.8227e+00,-4.0317e+00,1.7800e+00,4.8083e+00,-3.9356e+00,1.8977e+00,4.8169e+00,-3.9564e+00,1.8909e+00,4.8248e+00,-3.9756e+00,1.8798e+00,4.8318e+00,-3.9924e+00,1.8649e+00,4.8375e+00,-4.0062e+00,1.8467e+00,4.8417e+00,-4.0164e+00,1.8259e+00,4.8443e+00,-4.0227e+00,1.8034e+00,4.8452e+00,-4.0249e+00,1.7800e+00,4.8123e+00,-3.9335e+00,1.8977e+00,4.8248e+00,-3.9522e+00,1.8909e+00,4.8363e+00,-3.9694e+00,1.8798e+00,4.8464e+00,-3.9846e+00,1.8649e+00,4.8547e+00,-3.9970e+00,1.8467e+00,4.8609e+00,-4.0062e+00,1.8259e+00,4.8647e+00,-4.0119e+00,1.8034e+00,4.8660e+00,-4.0138e+00,1.7800e+00,4.8158e+00,-3.9306e+00,1.8977e+00,4.8318e+00,-3.9465e+00,1.8909e+00,4.8464e+00,-3.9611e+00,1.8798e+00,4.8593e+00,-3.9740e+00,1.8649e+00,4.8698e+00,-3.9846e+00,1.8467e+00,4.8777e+00,-3.9924e+00,1.8259e+00,4.8825e+00,-3.9972e+00,1.8034e+00,4.8841e+00,-3.9989e+00,1.7800e+00,4.7993e+00,-3.9140e+00,1.9000e+00});
			return Coordinate_7_1304_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1305, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1305_vector()
		{
			MFVec3f Normal_7_1305_vector = new MFVec3f(new double[] {0.0000e+00,-1.9509e-01,9.8079e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-5.5557e-01,8.3147e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-8.3147e-01,5.5557e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.8079e-01,1.9509e-01,0.0000e+00,-1.0000e+00,6.1232e-17,3.8060e-02,-1.9134e-01,9.8079e-01,7.4658e-02,-3.7533e-01,9.2388e-01,1.0839e-01,-5.4490e-01,8.3147e-01,1.3795e-01,-6.9352e-01,7.0711e-01,1.6221e-01,-8.1549e-01,5.5557e-01,1.8024e-01,-9.0613e-01,3.8268e-01,1.9134e-01,-9.6194e-01,1.9509e-01,1.9509e-01,-9.8079e-01,6.1232e-17,7.4658e-02,-1.8024e-01,9.8079e-01,1.4645e-01,-3.5355e-01,9.2388e-01,2.1261e-01,-5.1328e-01,8.3147e-01,2.7060e-01,-6.5328e-01,7.0711e-01,3.1819e-01,-7.6818e-01,5.5557e-01,3.5355e-01,-8.5355e-01,3.8268e-01,3.7533e-01,-9.0613e-01,1.9509e-01,3.8268e-01,-9.2388e-01,6.1232e-17,1.0839e-01,-1.6221e-01,9.8079e-01,2.1261e-01,-3.1819e-01,9.2388e-01,3.0866e-01,-4.6194e-01,8.3147e-01,3.9285e-01,-5.8794e-01,7.0711e-01,4.6194e-01,-6.9134e-01,5.5557e-01,5.1328e-01,-7.6818e-01,3.8268e-01,5.4490e-01,-8.1549e-01,1.9509e-01,5.5557e-01,-8.3147e-01,6.1232e-17,1.3795e-01,-1.3795e-01,9.8079e-01,2.7060e-01,-2.7060e-01,9.2388e-01,3.9285e-01,-3.9285e-01,8.3147e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.8794e-01,-5.8794e-01,5.5557e-01,6.5328e-01,-6.5328e-01,3.8268e-01,6.9352e-01,-6.9352e-01,1.9509e-01,7.0711e-01,-7.0711e-01,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1305_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1311, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1311_point()
		{
			MFVec3f Coordinate_7_1311_point = new MFVec3f(new double[] {-5.6456e+00,3.1008e+00,1.8977e+00,-5.6615e+00,3.1168e+00,1.8909e+00,-5.6761e+00,3.1314e+00,1.8798e+00,-5.6890e+00,3.1443e+00,1.8649e+00,-5.6996e+00,3.1548e+00,1.8467e+00,-5.7074e+00,3.1627e+00,1.8259e+00,-5.7122e+00,3.1675e+00,1.8034e+00,-5.7139e+00,3.1691e+00,1.7800e+00,-5.6485e+00,3.0973e+00,1.8977e+00,-5.6672e+00,3.1098e+00,1.8909e+00,-5.6844e+00,3.1213e+00,1.8798e+00,-5.6996e+00,3.1314e+00,1.8649e+00,-5.7120e+00,3.1397e+00,1.8467e+00,-5.7212e+00,3.1459e+00,1.8259e+00,-5.7269e+00,3.1497e+00,1.8034e+00,-5.7288e+00,3.1510e+00,1.7800e+00,-5.6506e+00,3.0933e+00,1.8977e+00,-5.6714e+00,3.1019e+00,1.8909e+00,-5.6906e+00,3.1098e+00,1.8798e+00,-5.7074e+00,3.1168e+00,1.8649e+00,-5.7212e+00,3.1225e+00,1.8467e+00,-5.7314e+00,3.1267e+00,1.8259e+00,-5.7377e+00,3.1293e+00,1.8034e+00,-5.7399e+00,3.1302e+00,1.7800e+00,-5.6520e+00,3.0889e+00,1.8977e+00,-5.6740e+00,3.0933e+00,1.8909e+00,-5.6944e+00,3.0973e+00,1.8798e+00,-5.7122e+00,3.1008e+00,1.8649e+00,-5.7269e+00,3.1038e+00,1.8467e+00,-5.7377e+00,3.1059e+00,1.8259e+00,-5.7444e+00,3.1073e+00,1.8034e+00,-5.7467e+00,3.1077e+00,1.7800e+00,-5.6524e+00,3.0843e+00,1.8977e+00,-5.6749e+00,3.0843e+00,1.8909e+00,-5.6957e+00,3.0843e+00,1.8798e+00,-5.7139e+00,3.0843e+00,1.8649e+00,-5.7288e+00,3.0843e+00,1.8467e+00,-5.7399e+00,3.0843e+00,1.8259e+00,-5.7467e+00,3.0843e+00,1.8034e+00,-5.7490e+00,3.0843e+00,1.7800e+00,-5.6290e+00,3.0843e+00,1.9000e+00});
			return Coordinate_7_1311_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1312, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1312_vector()
		{
			MFVec3f Normal_7_1312_vector = new MFVec3f(new double[] {-1.3795e-01,1.3795e-01,9.8079e-01,-2.7060e-01,2.7060e-01,9.2388e-01,-3.9285e-01,3.9285e-01,8.3147e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-5.8794e-01,5.8794e-01,5.5557e-01,-6.5328e-01,6.5328e-01,3.8268e-01,-6.9352e-01,6.9352e-01,1.9509e-01,-7.0711e-01,7.0711e-01,6.1232e-17,-1.6221e-01,1.0839e-01,9.8079e-01,-3.1819e-01,2.1261e-01,9.2388e-01,-4.6194e-01,3.0866e-01,8.3147e-01,-5.8794e-01,3.9285e-01,7.0711e-01,-6.9134e-01,4.6194e-01,5.5557e-01,-7.6818e-01,5.1328e-01,3.8268e-01,-8.1549e-01,5.4490e-01,1.9509e-01,-8.3147e-01,5.5557e-01,6.1232e-17,-1.8024e-01,7.4658e-02,9.8079e-01,-3.5355e-01,1.4645e-01,9.2388e-01,-5.1328e-01,2.1261e-01,8.3147e-01,-6.5328e-01,2.7060e-01,7.0711e-01,-7.6818e-01,3.1819e-01,5.5557e-01,-8.5355e-01,3.5355e-01,3.8268e-01,-9.0613e-01,3.7533e-01,1.9509e-01,-9.2388e-01,3.8268e-01,6.1232e-17,-1.9134e-01,3.8060e-02,9.8079e-01,-3.7533e-01,7.4658e-02,9.2388e-01,-5.4490e-01,1.0839e-01,8.3147e-01,-6.9352e-01,1.3795e-01,7.0711e-01,-8.1549e-01,1.6221e-01,5.5557e-01,-9.0613e-01,1.8024e-01,3.8268e-01,-9.6194e-01,1.9134e-01,1.9509e-01,-9.8079e-01,1.9509e-01,6.1232e-17,-1.9509e-01,2.7756e-17,9.8079e-01,-3.8268e-01,5.5511e-17,9.2388e-01,-5.5557e-01,5.5511e-17,8.3147e-01,-7.0711e-01,5.5511e-17,7.0711e-01,-8.3147e-01,1.1102e-16,5.5557e-01,-9.2388e-01,1.1102e-16,3.8268e-01,-9.8079e-01,1.1102e-16,1.9509e-01,-1.0000e+00,1.1102e-16,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1312_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1346, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1346_point()
		{
			MFVec3f Coordinate_7_1346_point = new MFVec3f(new double[] {-4.8158e+00,-3.9306e+00,1.8977e+00,-4.8318e+00,-3.9465e+00,1.8909e+00,-4.8464e+00,-3.9611e+00,1.8798e+00,-4.8593e+00,-3.9740e+00,1.8649e+00,-4.8698e+00,-3.9846e+00,1.8467e+00,-4.8777e+00,-3.9924e+00,1.8259e+00,-4.8825e+00,-3.9972e+00,1.8034e+00,-4.8841e+00,-3.9989e+00,1.7800e+00,-4.8123e+00,-3.9335e+00,1.8977e+00,-4.8248e+00,-3.9522e+00,1.8909e+00,-4.8363e+00,-3.9694e+00,1.8798e+00,-4.8464e+00,-3.9846e+00,1.8649e+00,-4.8547e+00,-3.9970e+00,1.8467e+00,-4.8609e+00,-4.0062e+00,1.8259e+00,-4.8647e+00,-4.0119e+00,1.8034e+00,-4.8660e+00,-4.0138e+00,1.7800e+00,-4.8083e+00,-3.9356e+00,1.8977e+00,-4.8169e+00,-3.9564e+00,1.8909e+00,-4.8248e+00,-3.9756e+00,1.8798e+00,-4.8318e+00,-3.9924e+00,1.8649e+00,-4.8375e+00,-4.0062e+00,1.8467e+00,-4.8417e+00,-4.0164e+00,1.8259e+00,-4.8443e+00,-4.0227e+00,1.8034e+00,-4.8452e+00,-4.0249e+00,1.7800e+00,-4.8039e+00,-3.9370e+00,1.8977e+00,-4.8083e+00,-3.9590e+00,1.8909e+00,-4.8123e+00,-3.9794e+00,1.8798e+00,-4.8158e+00,-3.9972e+00,1.8649e+00,-4.8188e+00,-4.0119e+00,1.8467e+00,-4.8209e+00,-4.0227e+00,1.8259e+00,-4.8223e+00,-4.0294e+00,1.8034e+00,-4.8227e+00,-4.0317e+00,1.7800e+00,-4.7993e+00,-3.9374e+00,1.8977e+00,-4.7993e+00,-3.9599e+00,1.8909e+00,-4.7993e+00,-3.9807e+00,1.8798e+00,-4.7993e+00,-3.9989e+00,1.8649e+00,-4.7993e+00,-4.0138e+00,1.8467e+00,-4.7993e+00,-4.0249e+00,1.8259e+00,-4.7993e+00,-4.0317e+00,1.8034e+00,-4.7993e+00,-4.0340e+00,1.7800e+00,-4.7993e+00,-3.9140e+00,1.9000e+00});
			return Coordinate_7_1346_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1347, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1347_vector()
		{
			MFVec3f Normal_7_1347_vector = new MFVec3f(new double[] {-1.3795e-01,-1.3795e-01,9.8079e-01,-2.7060e-01,-2.7060e-01,9.2388e-01,-3.9285e-01,-3.9285e-01,8.3147e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.8794e-01,-5.8794e-01,5.5557e-01,-6.5328e-01,-6.5328e-01,3.8268e-01,-6.9352e-01,-6.9352e-01,1.9509e-01,-7.0711e-01,-7.0711e-01,6.1232e-17,-1.0839e-01,-1.6221e-01,9.8079e-01,-2.1261e-01,-3.1819e-01,9.2388e-01,-3.0866e-01,-4.6194e-01,8.3147e-01,-3.9285e-01,-5.8794e-01,7.0711e-01,-4.6194e-01,-6.9134e-01,5.5557e-01,-5.1328e-01,-7.6818e-01,3.8268e-01,-5.4490e-01,-8.1549e-01,1.9509e-01,-5.5557e-01,-8.3147e-01,6.1232e-17,-7.4658e-02,-1.8024e-01,9.8079e-01,-1.4645e-01,-3.5355e-01,9.2388e-01,-2.1261e-01,-5.1328e-01,8.3147e-01,-2.7060e-01,-6.5328e-01,7.0711e-01,-3.1819e-01,-7.6818e-01,5.5557e-01,-3.5355e-01,-8.5355e-01,3.8268e-01,-3.7533e-01,-9.0613e-01,1.9509e-01,-3.8268e-01,-9.2388e-01,6.1232e-17,-3.8060e-02,-1.9134e-01,9.8079e-01,-7.4658e-02,-3.7533e-01,9.2388e-01,-1.0839e-01,-5.4490e-01,8.3147e-01,-1.3795e-01,-6.9352e-01,7.0711e-01,-1.6221e-01,-8.1549e-01,5.5557e-01,-1.8024e-01,-9.0613e-01,3.8268e-01,-1.9134e-01,-9.6194e-01,1.9509e-01,-1.9509e-01,-9.8079e-01,6.1232e-17,-2.7756e-17,-1.9509e-01,9.8079e-01,-5.5511e-17,-3.8268e-01,9.2388e-01,-5.5511e-17,-5.5557e-01,8.3147e-01,-5.5511e-17,-7.0711e-01,7.0711e-01,-1.1102e-16,-8.3147e-01,5.5557e-01,-1.1102e-16,-9.2388e-01,3.8268e-01,-1.1102e-16,-9.8079e-01,1.9509e-01,-1.1102e-16,-1.0000e+00,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1347_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1353, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1353_point()
		{
			MFVec3f Coordinate_7_1353_point = new MFVec3f(new double[] {-5.6524e+00,-3.0843e+00,1.8977e+00,-5.6749e+00,-3.0843e+00,1.8909e+00,-5.6957e+00,-3.0843e+00,1.8798e+00,-5.7139e+00,-3.0843e+00,1.8649e+00,-5.7288e+00,-3.0843e+00,1.8467e+00,-5.7399e+00,-3.0843e+00,1.8259e+00,-5.7467e+00,-3.0843e+00,1.8034e+00,-5.7490e+00,-3.0843e+00,1.7800e+00,-5.6520e+00,-3.0889e+00,1.8977e+00,-5.6740e+00,-3.0933e+00,1.8909e+00,-5.6944e+00,-3.0973e+00,1.8798e+00,-5.7122e+00,-3.1008e+00,1.8649e+00,-5.7269e+00,-3.1038e+00,1.8467e+00,-5.7377e+00,-3.1059e+00,1.8259e+00,-5.7444e+00,-3.1073e+00,1.8034e+00,-5.7467e+00,-3.1077e+00,1.7800e+00,-5.6506e+00,-3.0933e+00,1.8977e+00,-5.6714e+00,-3.1019e+00,1.8909e+00,-5.6906e+00,-3.1098e+00,1.8798e+00,-5.7074e+00,-3.1168e+00,1.8649e+00,-5.7212e+00,-3.1225e+00,1.8467e+00,-5.7314e+00,-3.1267e+00,1.8259e+00,-5.7377e+00,-3.1293e+00,1.8034e+00,-5.7399e+00,-3.1302e+00,1.7800e+00,-5.6485e+00,-3.0973e+00,1.8977e+00,-5.6672e+00,-3.1098e+00,1.8909e+00,-5.6844e+00,-3.1213e+00,1.8798e+00,-5.6996e+00,-3.1314e+00,1.8649e+00,-5.7120e+00,-3.1397e+00,1.8467e+00,-5.7212e+00,-3.1459e+00,1.8259e+00,-5.7269e+00,-3.1497e+00,1.8034e+00,-5.7288e+00,-3.1510e+00,1.7800e+00,-5.6456e+00,-3.1008e+00,1.8977e+00,-5.6615e+00,-3.1168e+00,1.8909e+00,-5.6761e+00,-3.1314e+00,1.8798e+00,-5.6890e+00,-3.1443e+00,1.8649e+00,-5.6996e+00,-3.1548e+00,1.8467e+00,-5.7074e+00,-3.1627e+00,1.8259e+00,-5.7122e+00,-3.1675e+00,1.8034e+00,-5.7139e+00,-3.1691e+00,1.7800e+00,-5.6290e+00,-3.0843e+00,1.9000e+00});
			return Coordinate_7_1353_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1354, 123 total numbers made up of 41 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1354_vector()
		{
			MFVec3f Normal_7_1354_vector = new MFVec3f(new double[] {-1.9509e-01,0.0000e+00,9.8079e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-5.5557e-01,0.0000e+00,8.3147e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-8.3147e-01,0.0000e+00,5.5557e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.8079e-01,0.0000e+00,1.9509e-01,-1.0000e+00,0.0000e+00,6.1232e-17,-1.9134e-01,-3.8060e-02,9.8079e-01,-3.7533e-01,-7.4658e-02,9.2388e-01,-5.4490e-01,-1.0839e-01,8.3147e-01,-6.9352e-01,-1.3795e-01,7.0711e-01,-8.1549e-01,-1.6221e-01,5.5557e-01,-9.0613e-01,-1.8024e-01,3.8268e-01,-9.6194e-01,-1.9134e-01,1.9509e-01,-9.8079e-01,-1.9509e-01,6.1232e-17,-1.8024e-01,-7.4658e-02,9.8079e-01,-3.5355e-01,-1.4645e-01,9.2388e-01,-5.1328e-01,-2.1261e-01,8.3147e-01,-6.5328e-01,-2.7060e-01,7.0711e-01,-7.6818e-01,-3.1819e-01,5.5557e-01,-8.5355e-01,-3.5355e-01,3.8268e-01,-9.0613e-01,-3.7533e-01,1.9509e-01,-9.2388e-01,-3.8268e-01,6.1232e-17,-1.6221e-01,-1.0839e-01,9.8079e-01,-3.1819e-01,-2.1261e-01,9.2388e-01,-4.6194e-01,-3.0866e-01,8.3147e-01,-5.8794e-01,-3.9285e-01,7.0711e-01,-6.9134e-01,-4.6194e-01,5.5557e-01,-7.6818e-01,-5.1328e-01,3.8268e-01,-8.1549e-01,-5.4490e-01,1.9509e-01,-8.3147e-01,-5.5557e-01,6.1232e-17,-1.3795e-01,-1.3795e-01,9.8079e-01,-2.7060e-01,-2.7060e-01,9.2388e-01,-3.9285e-01,-3.9285e-01,8.3147e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.8794e-01,-5.8794e-01,5.5557e-01,-6.5328e-01,-6.5328e-01,3.8268e-01,-6.9352e-01,-6.9352e-01,1.9509e-01,-7.0711e-01,-7.0711e-01,6.1232e-17,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1354_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1367, 162 total numbers made up of 54 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1367_point()
		{
			MFVec3f Coordinate_7_1367_point = new MFVec3f(new double[] {4.9266e+00,4.0413e+00,4.0000e-01,4.9183e+00,4.0330e+00,4.0115e-01,4.9103e+00,4.0250e+00,4.0457e-01,4.9030e+00,4.0177e+00,4.1011e-01,4.8966e+00,4.0113e+00,4.1757e-01,4.8913e+00,4.0060e+00,4.2667e-01,4.8874e+00,4.0021e+00,4.3704e-01,4.8850e+00,3.9997e+00,4.4829e-01,4.8841e+00,3.9989e+00,4.6000e-01,4.9051e+00,4.0596e+00,4.0000e-01,4.8982e+00,4.0502e+00,4.0115e-01,4.8916e+00,4.0410e+00,4.0457e-01,4.8855e+00,4.0327e+00,4.1011e-01,4.8802e+00,4.0253e+00,4.1757e-01,4.8758e+00,4.0193e+00,4.2667e-01,4.8725e+00,4.0148e+00,4.3704e-01,4.8705e+00,4.0120e+00,4.4829e-01,4.8698e+00,4.0111e+00,4.6000e-01,4.8810e+00,4.0744e+00,4.0000e-01,4.8757e+00,4.0640e+00,4.0115e-01,4.8706e+00,4.0539e+00,4.0457e-01,4.8659e+00,4.0447e+00,4.1011e-01,4.8618e+00,4.0366e+00,4.1757e-01,4.8584e+00,4.0299e+00,4.2667e-01,4.8558e+00,4.0250e+00,4.3704e-01,4.8543e+00,4.0219e+00,4.4829e-01,4.8538e+00,4.0209e+00,4.6000e-01,4.8549e+00,4.0852e+00,4.0000e-01,4.8513e+00,4.0741e+00,4.0115e-01,4.8478e+00,4.0634e+00,4.0457e-01,4.8446e+00,4.0535e+00,4.1011e-01,4.8418e+00,4.0448e+00,4.1757e-01,4.8395e+00,4.0377e+00,4.2667e-01,4.8378e+00,4.0325e+00,4.3704e-01,4.8367e+00,4.0292e+00,4.4829e-01,4.8364e+00,4.0281e+00,4.6000e-01,4.8275e+00,4.0918e+00,4.0000e-01,4.8256e+00,4.0802e+00,4.0115e-01,4.8239e+00,4.0691e+00,4.0457e-01,4.8222e+00,4.0589e+00,4.1011e-01,4.8208e+00,4.0499e+00,4.1757e-01,4.8196e+00,4.0425e+00,4.2667e-01,4.8188e+00,4.0370e+00,4.3704e-01,4.8182e+00,4.0337e+00,4.4829e-01,4.8181e+00,4.0325e+00,4.6000e-01,4.7993e+00,4.0940e+00,4.0000e-01,4.7993e+00,4.0823e+00,4.0115e-01,4.7993e+00,4.0710e+00,4.0457e-01,4.7993e+00,4.0607e+00,4.1011e-01,4.7993e+00,4.0516e+00,4.1757e-01,4.7993e+00,4.0441e+00,4.2667e-01,4.7993e+00,4.0386e+00,4.3704e-01,4.7993e+00,4.0352e+00,4.4829e-01,4.7993e+00,4.0340e+00,4.6000e-01});
			return Coordinate_7_1367_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1368, 162 total numbers made up of 54 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1368_vector()
		{
			MFVec3f Normal_7_1368_vector = new MFVec3f(new double[] {1.0226e-08,1.0226e-08,1.0000e+00,1.3795e-01,1.3795e-01,9.8079e-01,2.7060e-01,2.7060e-01,9.2388e-01,3.9285e-01,3.9285e-01,8.3147e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.8794e-01,5.8794e-01,5.5557e-01,6.5328e-01,6.5328e-01,3.8268e-01,6.9352e-01,6.9352e-01,1.9509e-01,7.0711e-01,7.0711e-01,-6.1232e-17,8.5007e-09,1.1700e-08,1.0000e+00,1.1467e-01,1.5783e-01,9.8079e-01,2.2494e-01,3.0960e-01,9.2388e-01,3.2656e-01,4.4947e-01,8.3147e-01,4.1563e-01,5.7206e-01,7.0711e-01,4.8873e-01,6.7267e-01,5.5557e-01,5.4304e-01,7.4743e-01,3.8268e-01,5.7649e-01,7.9347e-01,1.9509e-01,5.8779e-01,8.0902e-01,-6.1232e-17,6.5657e-09,1.2886e-08,1.0000e+00,8.8569e-02,1.7383e-01,9.8079e-01,1.7373e-01,3.4097e-01,9.2388e-01,2.5222e-01,4.9502e-01,8.3147e-01,3.2102e-01,6.3004e-01,7.0711e-01,3.7748e-01,7.4084e-01,5.5557e-01,4.1943e-01,8.2318e-01,3.8268e-01,4.4527e-01,8.7389e-01,1.9509e-01,4.5399e-01,8.9101e-01,-6.1232e-17,4.4691e-09,1.3754e-08,1.0000e+00,6.0286e-02,1.8554e-01,9.8079e-01,1.1826e-01,3.6395e-01,9.2388e-01,1.7168e-01,5.2838e-01,8.3147e-01,2.1851e-01,6.7250e-01,7.0711e-01,2.5694e-01,7.9077e-01,5.5557e-01,2.8549e-01,8.7866e-01,3.8268e-01,3.0308e-01,9.3278e-01,1.9509e-01,3.0902e-01,9.5106e-01,-6.1232e-17,2.2624e-09,1.4284e-08,1.0000e+00,3.0519e-02,1.9269e-01,9.8079e-01,5.9865e-02,3.7797e-01,9.2388e-01,8.6910e-02,5.4873e-01,8.3147e-01,1.1062e-01,6.9840e-01,7.0711e-01,1.3007e-01,8.2123e-01,5.5557e-01,1.4453e-01,9.1251e-01,3.8268e-01,1.5343e-01,9.6871e-01,1.9509e-01,1.5643e-01,9.8769e-01,-6.1232e-17,-0.0000e+00,1.4462e-08,1.0000e+00,-0.0000e+00,1.9509e-01,9.8079e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.5557e-01,8.3147e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,8.3147e-01,5.5557e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.8079e-01,1.9509e-01,-0.0000e+00,1.0000e+00,-6.1232e-17});
			return Normal_7_1368_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1388, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1388_point()
		{
			MFVec3f Coordinate_7_1388_point = new MFVec3f(new double[] {5.8090e+00,3.0843e+00,4.0000e-01,5.7986e+00,3.0843e+00,4.0091e-01,5.7885e+00,3.0843e+00,4.0362e-01,5.7790e+00,3.0843e+00,4.0804e-01,5.7704e+00,3.0843e+00,4.1404e-01,5.7630e+00,3.0843e+00,4.2143e-01,5.7570e+00,3.0843e+00,4.3000e-01,5.7526e+00,3.0843e+00,4.3948e-01,5.7499e+00,3.0843e+00,4.4958e-01,5.7490e+00,3.0843e+00,4.6000e-01,5.8055e+00,3.1194e+00,4.0000e-01,5.7953e+00,3.1174e+00,4.0091e-01,5.7854e+00,3.1154e+00,4.0362e-01,5.7761e+00,3.1136e+00,4.0804e-01,5.7677e+00,3.1119e+00,4.1404e-01,5.7605e+00,3.1104e+00,4.2143e-01,5.7546e+00,3.1093e+00,4.3000e-01,5.7502e+00,3.1084e+00,4.3948e-01,5.7476e+00,3.1079e+00,4.4958e-01,5.7467e+00,3.1077e+00,4.6000e-01,5.7953e+00,3.1532e+00,4.0000e-01,5.7857e+00,3.1492e+00,4.0091e-01,5.7763e+00,3.1453e+00,4.0362e-01,5.7676e+00,3.1417e+00,4.0804e-01,5.7597e+00,3.1384e+00,4.1404e-01,5.7528e+00,3.1356e+00,4.2143e-01,5.7473e+00,3.1333e+00,4.3000e-01,5.7432e+00,3.1316e+00,4.3948e-01,5.7407e+00,3.1306e+00,4.4958e-01,5.7399e+00,3.1302e+00,4.6000e-01,5.7787e+00,3.1843e+00,4.0000e-01,5.7700e+00,3.1785e+00,4.0091e-01,5.7616e+00,3.1729e+00,4.0362e-01,5.7537e+00,3.1676e+00,4.0804e-01,5.7466e+00,3.1629e+00,4.1404e-01,5.7404e+00,3.1588e+00,4.2143e-01,5.7355e+00,3.1554e+00,4.3000e-01,5.7318e+00,3.1530e+00,4.3948e-01,5.7295e+00,3.1515e+00,4.4958e-01,5.7288e+00,3.1510e+00,4.6000e-01,5.7563e+00,3.2116e+00,4.0000e-01,5.7489e+00,3.2042e+00,4.0091e-01,5.7418e+00,3.1971e+00,4.0362e-01,5.7351e+00,3.1904e+00,4.0804e-01,5.7290e+00,3.1843e+00,4.1404e-01,5.7238e+00,3.1791e+00,4.2143e-01,5.7195e+00,3.1748e+00,4.3000e-01,5.7164e+00,3.1717e+00,4.3948e-01,5.7145e+00,3.1698e+00,4.4958e-01,5.7139e+00,3.1691e+00,4.6000e-01});
			return Coordinate_7_1388_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1389, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1389_vector()
		{
			MFVec3f Normal_7_1389_vector = new MFVec3f(new double[] {-1.0092e-14,-6.1793e-31,1.0000e+00,1.7365e-01,1.0633e-17,9.8481e-01,3.4202e-01,2.0943e-17,9.3969e-01,5.0000e-01,3.0616e-17,8.6603e-01,6.4279e-01,3.9359e-17,7.6604e-01,7.6604e-01,4.6907e-17,6.4279e-01,8.6603e-01,5.3029e-17,5.0000e-01,9.3969e-01,5.7540e-17,3.4202e-01,9.8481e-01,6.0302e-17,1.7365e-01,1.0000e+00,6.1232e-17,-6.1232e-17,-9.8977e-15,-1.9688e-15,1.0000e+00,1.7031e-01,3.3877e-02,9.8481e-01,3.3545e-01,6.6725e-02,9.3969e-01,4.9039e-01,9.7545e-02,8.6603e-01,6.3044e-01,1.2540e-01,7.6604e-01,7.5133e-01,1.4945e-01,6.4279e-01,8.4938e-01,1.6895e-01,5.0000e-01,9.2164e-01,1.8332e-01,3.4202e-01,9.6588e-01,1.9213e-01,1.7365e-01,9.8079e-01,1.9509e-01,-6.1232e-17,-9.3234e-15,-3.8619e-15,1.0000e+00,1.6043e-01,6.6452e-02,9.8481e-01,3.1599e-01,1.3089e-01,9.3969e-01,4.6194e-01,1.9134e-01,8.6603e-01,5.9386e-01,2.4598e-01,7.6604e-01,7.0773e-01,2.9315e-01,6.4279e-01,8.0010e-01,3.3141e-01,5.0000e-01,8.6816e-01,3.5960e-01,3.4202e-01,9.0984e-01,3.7687e-01,1.7365e-01,9.2388e-01,3.8268e-01,-6.1232e-17,-8.3908e-15,-5.6066e-15,1.0000e+00,1.4438e-01,9.6474e-02,9.8481e-01,2.8438e-01,1.9002e-01,9.3969e-01,4.1573e-01,2.7779e-01,8.6603e-01,5.3446e-01,3.5711e-01,7.6604e-01,6.3694e-01,4.2559e-01,6.4279e-01,7.2007e-01,4.8114e-01,5.0000e-01,7.8133e-01,5.2207e-01,3.4202e-01,8.1884e-01,5.4713e-01,1.7365e-01,8.3147e-01,5.5557e-01,-6.1232e-17,-7.1358e-15,-7.1358e-15,1.0000e+00,1.2279e-01,1.2279e-01,9.8481e-01,2.4184e-01,2.4184e-01,9.3969e-01,3.5355e-01,3.5355e-01,8.6603e-01,4.5452e-01,4.5452e-01,7.6604e-01,5.4168e-01,5.4168e-01,6.4279e-01,6.1237e-01,6.1237e-01,5.0000e-01,6.6446e-01,6.6446e-01,3.4202e-01,6.9636e-01,6.9636e-01,1.7365e-01,7.0711e-01,7.0711e-01,-6.1232e-17});
			return Normal_7_1389_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1395, 180 total numbers made up of 60 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1395_point()
		{
			MFVec3f Coordinate_7_1395_point = new MFVec3f(new double[] {-4.7993e+00,4.0940e+00,4.0000e-01,-4.7993e+00,4.0836e+00,4.0091e-01,-4.7993e+00,4.0735e+00,4.0362e-01,-4.7993e+00,4.0640e+00,4.0804e-01,-4.7993e+00,4.0554e+00,4.1404e-01,-4.7993e+00,4.0480e+00,4.2143e-01,-4.7993e+00,4.0420e+00,4.3000e-01,-4.7993e+00,4.0376e+00,4.3948e-01,-4.7993e+00,4.0349e+00,4.4958e-01,-4.7993e+00,4.0340e+00,4.6000e-01,-4.8275e+00,4.0918e+00,4.0000e-01,-4.8258e+00,4.0815e+00,4.0091e-01,-4.8242e+00,4.0715e+00,4.0362e-01,-4.8228e+00,4.0622e+00,4.0804e-01,-4.8214e+00,4.0537e+00,4.1404e-01,-4.8203e+00,4.0464e+00,4.2143e-01,-4.8193e+00,4.0405e+00,4.3000e-01,-4.8186e+00,4.0361e+00,4.3948e-01,-4.8182e+00,4.0334e+00,4.4958e-01,-4.8181e+00,4.0325e+00,4.6000e-01,-4.8549e+00,4.0852e+00,4.0000e-01,-4.8517e+00,4.0753e+00,4.0091e-01,-4.8486e+00,4.0657e+00,4.0362e-01,-4.8456e+00,4.0567e+00,4.0804e-01,-4.8430e+00,4.0485e+00,4.1404e-01,-4.8407e+00,4.0415e+00,4.2143e-01,-4.8389e+00,4.0358e+00,4.3000e-01,-4.8375e+00,4.0316e+00,4.3948e-01,-4.8367e+00,4.0290e+00,4.4958e-01,-4.8364e+00,4.0281e+00,4.6000e-01,-4.8810e+00,4.0744e+00,4.0000e-01,-4.8763e+00,4.0651e+00,4.0091e-01,-4.8717e+00,4.0561e+00,4.0362e-01,-4.8674e+00,4.0477e+00,4.0804e-01,-4.8635e+00,4.0400e+00,4.1404e-01,-4.8601e+00,4.0334e+00,4.2143e-01,-4.8574e+00,4.0281e+00,4.3000e-01,-4.8554e+00,4.0241e+00,4.3948e-01,-4.8542e+00,4.0217e+00,4.4958e-01,-4.8538e+00,4.0209e+00,4.6000e-01,-4.9051e+00,4.0596e+00,4.0000e-01,-4.8990e+00,4.0512e+00,4.0091e-01,-4.8930e+00,4.0430e+00,4.0362e-01,-4.8875e+00,4.0354e+00,4.0804e-01,-4.8824e+00,4.0284e+00,4.1404e-01,-4.8781e+00,4.0224e+00,4.2143e-01,-4.8746e+00,4.0176e+00,4.3000e-01,-4.8720e+00,4.0140e+00,4.3948e-01,-4.8704e+00,4.0118e+00,4.4958e-01,-4.8698e+00,4.0111e+00,4.6000e-01,-4.9266e+00,4.0413e+00,4.0000e-01,-4.9192e+00,4.0339e+00,4.0091e-01,-4.9121e+00,4.0268e+00,4.0362e-01,-4.9054e+00,4.0201e+00,4.0804e-01,-4.8993e+00,4.0140e+00,4.1404e-01,-4.8941e+00,4.0088e+00,4.2143e-01,-4.8898e+00,4.0045e+00,4.3000e-01,-4.8867e+00,4.0014e+00,4.3948e-01,-4.8848e+00,3.9995e+00,4.4958e-01,-4.8841e+00,3.9989e+00,4.6000e-01});
			return Coordinate_7_1395_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1396, 180 total numbers made up of 60 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1396_vector()
		{
			MFVec3f Normal_7_1396_vector = new MFVec3f(new double[] {-0.0000e+00,-2.7870e-15,1.0000e+00,-0.0000e+00,1.7365e-01,9.8481e-01,-0.0000e+00,3.4202e-01,9.3969e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.4279e-01,7.6604e-01,-0.0000e+00,7.6604e-01,6.4279e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.3969e-01,3.4202e-01,-0.0000e+00,9.8481e-01,1.7365e-01,-0.0000e+00,1.0000e+00,1.8370e-16,4.3598e-16,-2.7527e-15,1.0000e+00,-2.7165e-02,1.7151e-01,9.8481e-01,-5.3504e-02,3.3781e-01,9.3969e-01,-7.8217e-02,4.9384e-01,8.6603e-01,-1.0055e-01,6.3487e-01,7.6604e-01,-1.1984e-01,7.5661e-01,6.4279e-01,-1.3548e-01,8.5536e-01,5.0000e-01,-1.4700e-01,9.2812e-01,3.4202e-01,-1.5406e-01,9.7268e-01,1.7365e-01,-1.5643e-01,9.8769e-01,1.8370e-16,8.6123e-16,-2.6506e-15,1.0000e+00,-5.3660e-02,1.6515e-01,9.8481e-01,-1.0569e-01,3.2528e-01,9.3969e-01,-1.5451e-01,4.7553e-01,8.6603e-01,-1.9863e-01,6.1133e-01,7.6604e-01,-2.3672e-01,7.2855e-01,6.4279e-01,-2.6762e-01,8.2364e-01,5.0000e-01,-2.9038e-01,8.9370e-01,3.4202e-01,-3.0432e-01,9.3661e-01,1.7365e-01,-3.0902e-01,9.5106e-01,1.8370e-16,1.2653e-15,-2.4832e-15,1.0000e+00,-7.8835e-02,1.5472e-01,9.8481e-01,-1.5527e-01,3.0474e-01,9.3969e-01,-2.2700e-01,4.4550e-01,8.6603e-01,-2.9182e-01,5.7273e-01,7.6604e-01,-3.4778e-01,6.8255e-01,6.4279e-01,-3.9317e-01,7.7163e-01,5.0000e-01,-4.2661e-01,8.3727e-01,3.4202e-01,-4.4709e-01,8.7747e-01,1.7365e-01,-4.5399e-01,8.9101e-01,1.8370e-16,1.6382e-15,-2.2547e-15,1.0000e+00,-1.0207e-01,1.4048e-01,9.8481e-01,-2.0103e-01,2.7670e-01,9.3969e-01,-2.9389e-01,4.0451e-01,8.6603e-01,-3.7782e-01,5.2003e-01,7.6604e-01,-4.5027e-01,6.1974e-01,6.4279e-01,-5.0904e-01,7.0063e-01,5.0000e-01,-5.5234e-01,7.6023e-01,3.4202e-01,-5.7886e-01,7.9673e-01,1.7365e-01,-5.8779e-01,8.0902e-01,1.8370e-16,1.9707e-15,-1.9707e-15,1.0000e+00,-1.2279e-01,1.2279e-01,9.8481e-01,-2.4184e-01,2.4184e-01,9.3969e-01,-3.5355e-01,3.5355e-01,8.6603e-01,-4.5452e-01,4.5452e-01,7.6604e-01,-5.4168e-01,5.4168e-01,6.4279e-01,-6.1237e-01,6.1237e-01,5.0000e-01,-6.6446e-01,6.6446e-01,3.4202e-01,-6.9636e-01,6.9636e-01,1.7365e-01,-7.0711e-01,7.0711e-01,1.8370e-16});
			return Normal_7_1396_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1416, 135 total numbers made up of 45 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1416_point()
		{
			MFVec3f Coordinate_7_1416_point = new MFVec3f(new double[] {5.7563e+00,-3.2116e+00,4.0000e-01,5.7480e+00,-3.2033e+00,4.0115e-01,5.7400e+00,-3.1953e+00,4.0457e-01,5.7327e+00,-3.1880e+00,4.1011e-01,5.7263e+00,-3.1816e+00,4.1757e-01,5.7210e+00,-3.1763e+00,4.2667e-01,5.7171e+00,-3.1724e+00,4.3704e-01,5.7147e+00,-3.1700e+00,4.4829e-01,5.7139e+00,-3.1691e+00,4.6000e-01,5.7787e+00,-3.1843e+00,4.0000e-01,5.7689e+00,-3.1778e+00,4.0115e-01,5.7596e+00,-3.1715e+00,4.0457e-01,5.7509e+00,-3.1658e+00,4.1011e-01,5.7434e+00,-3.1607e+00,4.1757e-01,5.7372e+00,-3.1566e+00,4.2667e-01,5.7326e+00,-3.1535e+00,4.3704e-01,5.7297e+00,-3.1516e+00,4.4829e-01,5.7288e+00,-3.1510e+00,4.6000e-01,5.7953e+00,-3.1532e+00,4.0000e-01,5.7845e+00,-3.1487e+00,4.0115e-01,5.7741e+00,-3.1444e+00,4.0457e-01,5.7645e+00,-3.1404e+00,4.1011e-01,5.7561e+00,-3.1369e+00,4.1757e-01,5.7492e+00,-3.1341e+00,4.2667e-01,5.7441e+00,-3.1320e+00,4.3704e-01,5.7409e+00,-3.1307e+00,4.4829e-01,5.7399e+00,-3.1302e+00,4.6000e-01,5.8055e+00,-3.1194e+00,4.0000e-01,5.7941e+00,-3.1171e+00,4.0115e-01,5.7830e+00,-3.1149e+00,4.0457e-01,5.7728e+00,-3.1129e+00,4.1011e-01,5.7639e+00,-3.1111e+00,4.1757e-01,5.7566e+00,-3.1097e+00,4.2667e-01,5.7512e+00,-3.1086e+00,4.3704e-01,5.7478e+00,-3.1079e+00,4.4829e-01,5.7467e+00,-3.1077e+00,4.6000e-01,5.8090e+00,-3.0843e+00,4.0000e-01,5.7973e+00,-3.0843e+00,4.0115e-01,5.7860e+00,-3.0843e+00,4.0457e-01,5.7757e+00,-3.0843e+00,4.1011e-01,5.7666e+00,-3.0843e+00,4.1757e-01,5.7591e+00,-3.0843e+00,4.2667e-01,5.7536e+00,-3.0843e+00,4.3704e-01,5.7502e+00,-3.0843e+00,4.4829e-01,5.7490e+00,-3.0843e+00,4.6000e-01});
			return Coordinate_7_1416_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1417, 135 total numbers made up of 45 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1417_vector()
		{
			MFVec3f Normal_7_1417_vector = new MFVec3f(new double[] {1.0226e-08,-1.0226e-08,1.0000e+00,1.3795e-01,-1.3795e-01,9.8079e-01,2.7060e-01,-2.7060e-01,9.2388e-01,3.9285e-01,-3.9285e-01,8.3147e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.8794e-01,-5.8794e-01,5.5557e-01,6.5328e-01,-6.5328e-01,3.8268e-01,6.9352e-01,-6.9352e-01,1.9509e-01,7.0711e-01,-7.0711e-01,-6.1232e-17,1.2025e-08,-8.0348e-09,1.0000e+00,1.6221e-01,-1.0839e-01,9.8079e-01,3.1819e-01,-2.1261e-01,9.2388e-01,4.6194e-01,-3.0866e-01,8.3147e-01,5.8794e-01,-3.9285e-01,7.0711e-01,6.9134e-01,-4.6194e-01,5.5557e-01,7.6818e-01,-5.1328e-01,3.8268e-01,8.1549e-01,-5.4490e-01,1.9509e-01,8.3147e-01,-5.5557e-01,-6.1232e-17,1.3361e-08,-5.5344e-09,1.0000e+00,1.8024e-01,-7.4658e-02,9.8079e-01,3.5355e-01,-1.4645e-01,9.2388e-01,5.1328e-01,-2.1261e-01,8.3147e-01,6.5328e-01,-2.7060e-01,7.0711e-01,7.6818e-01,-3.1819e-01,5.5557e-01,8.5355e-01,-3.5355e-01,3.8268e-01,9.0613e-01,-3.7533e-01,1.9509e-01,9.2388e-01,-3.8268e-01,-6.1232e-17,1.4184e-08,-2.8214e-09,1.0000e+00,1.9134e-01,-3.8060e-02,9.8079e-01,3.7533e-01,-7.4658e-02,9.2388e-01,5.4490e-01,-1.0839e-01,8.3147e-01,6.9352e-01,-1.3795e-01,7.0711e-01,8.1549e-01,-1.6221e-01,5.5557e-01,9.0613e-01,-1.8024e-01,3.8268e-01,9.6194e-01,-1.9134e-01,1.9509e-01,9.8079e-01,-1.9509e-01,-6.1232e-17,1.4462e-08,8.8555e-25,1.0000e+00,1.9509e-01,1.1946e-17,9.8079e-01,3.8268e-01,2.3433e-17,9.2388e-01,5.5557e-01,3.4019e-17,8.3147e-01,7.0711e-01,4.3298e-17,7.0711e-01,8.3147e-01,5.0913e-17,5.5557e-01,9.2388e-01,5.6571e-17,3.8268e-01,9.8079e-01,6.0056e-17,1.9509e-01,1.0000e+00,6.1232e-17,-6.1232e-17});
			return Normal_7_1417_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1423, 135 total numbers made up of 45 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1423_point()
		{
			MFVec3f Coordinate_7_1423_point = new MFVec3f(new double[] {-5.7563e+00,3.2116e+00,4.0000e-01,-5.7480e+00,3.2033e+00,4.0115e-01,-5.7400e+00,3.1953e+00,4.0457e-01,-5.7327e+00,3.1880e+00,4.1011e-01,-5.7263e+00,3.1816e+00,4.1757e-01,-5.7210e+00,3.1763e+00,4.2667e-01,-5.7171e+00,3.1724e+00,4.3704e-01,-5.7147e+00,3.1700e+00,4.4829e-01,-5.7139e+00,3.1691e+00,4.6000e-01,-5.7787e+00,3.1843e+00,4.0000e-01,-5.7689e+00,3.1778e+00,4.0115e-01,-5.7596e+00,3.1715e+00,4.0457e-01,-5.7509e+00,3.1658e+00,4.1011e-01,-5.7434e+00,3.1607e+00,4.1757e-01,-5.7372e+00,3.1566e+00,4.2667e-01,-5.7326e+00,3.1535e+00,4.3704e-01,-5.7297e+00,3.1516e+00,4.4829e-01,-5.7288e+00,3.1510e+00,4.6000e-01,-5.7953e+00,3.1532e+00,4.0000e-01,-5.7845e+00,3.1487e+00,4.0115e-01,-5.7741e+00,3.1444e+00,4.0457e-01,-5.7645e+00,3.1404e+00,4.1011e-01,-5.7561e+00,3.1369e+00,4.1757e-01,-5.7492e+00,3.1341e+00,4.2667e-01,-5.7441e+00,3.1320e+00,4.3704e-01,-5.7409e+00,3.1307e+00,4.4829e-01,-5.7399e+00,3.1302e+00,4.6000e-01,-5.8055e+00,3.1194e+00,4.0000e-01,-5.7941e+00,3.1171e+00,4.0115e-01,-5.7830e+00,3.1149e+00,4.0457e-01,-5.7728e+00,3.1129e+00,4.1011e-01,-5.7639e+00,3.1111e+00,4.1757e-01,-5.7566e+00,3.1097e+00,4.2667e-01,-5.7512e+00,3.1086e+00,4.3704e-01,-5.7478e+00,3.1079e+00,4.4829e-01,-5.7467e+00,3.1077e+00,4.6000e-01,-5.8090e+00,3.0843e+00,4.0000e-01,-5.7973e+00,3.0843e+00,4.0115e-01,-5.7860e+00,3.0843e+00,4.0457e-01,-5.7757e+00,3.0843e+00,4.1011e-01,-5.7666e+00,3.0843e+00,4.1757e-01,-5.7591e+00,3.0843e+00,4.2667e-01,-5.7536e+00,3.0843e+00,4.3704e-01,-5.7502e+00,3.0843e+00,4.4829e-01,-5.7490e+00,3.0843e+00,4.6000e-01});
			return Coordinate_7_1423_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1424, 135 total numbers made up of 45 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1424_vector()
		{
			MFVec3f Normal_7_1424_vector = new MFVec3f(new double[] {-1.0226e-08,1.0226e-08,1.0000e+00,-1.3795e-01,1.3795e-01,9.8079e-01,-2.7060e-01,2.7060e-01,9.2388e-01,-3.9285e-01,3.9285e-01,8.3147e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-5.8794e-01,5.8794e-01,5.5557e-01,-6.5328e-01,6.5328e-01,3.8268e-01,-6.9352e-01,6.9352e-01,1.9509e-01,-7.0711e-01,7.0711e-01,-6.1232e-17,-1.2025e-08,8.0348e-09,1.0000e+00,-1.6221e-01,1.0839e-01,9.8079e-01,-3.1819e-01,2.1261e-01,9.2388e-01,-4.6194e-01,3.0866e-01,8.3147e-01,-5.8794e-01,3.9285e-01,7.0711e-01,-6.9134e-01,4.6194e-01,5.5557e-01,-7.6818e-01,5.1328e-01,3.8268e-01,-8.1549e-01,5.4490e-01,1.9509e-01,-8.3147e-01,5.5557e-01,-6.1232e-17,-1.3361e-08,5.5344e-09,1.0000e+00,-1.8024e-01,7.4658e-02,9.8079e-01,-3.5355e-01,1.4645e-01,9.2388e-01,-5.1328e-01,2.1261e-01,8.3147e-01,-6.5328e-01,2.7060e-01,7.0711e-01,-7.6818e-01,3.1819e-01,5.5557e-01,-8.5355e-01,3.5355e-01,3.8268e-01,-9.0613e-01,3.7533e-01,1.9509e-01,-9.2388e-01,3.8268e-01,-6.1232e-17,-1.4184e-08,2.8214e-09,1.0000e+00,-1.9134e-01,3.8060e-02,9.8079e-01,-3.7533e-01,7.4658e-02,9.2388e-01,-5.4490e-01,1.0839e-01,8.3147e-01,-6.9352e-01,1.3795e-01,7.0711e-01,-8.1549e-01,1.6221e-01,5.5557e-01,-9.0613e-01,1.8024e-01,3.8268e-01,-9.6194e-01,1.9134e-01,1.9509e-01,-9.8079e-01,1.9509e-01,-6.1232e-17,-1.4462e-08,8.8555e-25,1.0000e+00,-1.9509e-01,1.1946e-17,9.8079e-01,-3.8268e-01,2.3433e-17,9.2388e-01,-5.5557e-01,3.4019e-17,8.3147e-01,-7.0711e-01,4.3298e-17,7.0711e-01,-8.3147e-01,5.0913e-17,5.5557e-01,-9.2388e-01,5.6571e-17,3.8268e-01,-9.8079e-01,6.0056e-17,1.9509e-01,-1.0000e+00,6.1232e-17,-6.1232e-17});
			return Normal_7_1424_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1444, 180 total numbers made up of 60 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1444_point()
		{
			MFVec3f Coordinate_7_1444_point = new MFVec3f(new double[] {4.7993e+00,-4.0940e+00,4.0000e-01,4.7993e+00,-4.0836e+00,4.0091e-01,4.7993e+00,-4.0735e+00,4.0362e-01,4.7993e+00,-4.0640e+00,4.0804e-01,4.7993e+00,-4.0554e+00,4.1404e-01,4.7993e+00,-4.0480e+00,4.2143e-01,4.7993e+00,-4.0420e+00,4.3000e-01,4.7993e+00,-4.0376e+00,4.3948e-01,4.7993e+00,-4.0349e+00,4.4958e-01,4.7993e+00,-4.0340e+00,4.6000e-01,4.8275e+00,-4.0918e+00,4.0000e-01,4.8258e+00,-4.0815e+00,4.0091e-01,4.8242e+00,-4.0715e+00,4.0362e-01,4.8228e+00,-4.0622e+00,4.0804e-01,4.8214e+00,-4.0537e+00,4.1404e-01,4.8203e+00,-4.0464e+00,4.2143e-01,4.8193e+00,-4.0405e+00,4.3000e-01,4.8186e+00,-4.0361e+00,4.3948e-01,4.8182e+00,-4.0334e+00,4.4958e-01,4.8181e+00,-4.0325e+00,4.6000e-01,4.8549e+00,-4.0852e+00,4.0000e-01,4.8517e+00,-4.0753e+00,4.0091e-01,4.8486e+00,-4.0657e+00,4.0362e-01,4.8456e+00,-4.0567e+00,4.0804e-01,4.8430e+00,-4.0485e+00,4.1404e-01,4.8407e+00,-4.0415e+00,4.2143e-01,4.8389e+00,-4.0358e+00,4.3000e-01,4.8375e+00,-4.0316e+00,4.3948e-01,4.8367e+00,-4.0290e+00,4.4958e-01,4.8364e+00,-4.0281e+00,4.6000e-01,4.8810e+00,-4.0744e+00,4.0000e-01,4.8763e+00,-4.0651e+00,4.0091e-01,4.8717e+00,-4.0561e+00,4.0362e-01,4.8674e+00,-4.0477e+00,4.0804e-01,4.8635e+00,-4.0400e+00,4.1404e-01,4.8601e+00,-4.0334e+00,4.2143e-01,4.8574e+00,-4.0281e+00,4.3000e-01,4.8554e+00,-4.0241e+00,4.3948e-01,4.8542e+00,-4.0217e+00,4.4958e-01,4.8538e+00,-4.0209e+00,4.6000e-01,4.9051e+00,-4.0596e+00,4.0000e-01,4.8990e+00,-4.0512e+00,4.0091e-01,4.8930e+00,-4.0430e+00,4.0362e-01,4.8875e+00,-4.0354e+00,4.0804e-01,4.8824e+00,-4.0284e+00,4.1404e-01,4.8781e+00,-4.0224e+00,4.2143e-01,4.8746e+00,-4.0176e+00,4.3000e-01,4.8720e+00,-4.0140e+00,4.3948e-01,4.8704e+00,-4.0118e+00,4.4958e-01,4.8698e+00,-4.0111e+00,4.6000e-01,4.9266e+00,-4.0413e+00,4.0000e-01,4.9192e+00,-4.0339e+00,4.0091e-01,4.9121e+00,-4.0268e+00,4.0362e-01,4.9054e+00,-4.0201e+00,4.0804e-01,4.8993e+00,-4.0140e+00,4.1404e-01,4.8941e+00,-4.0088e+00,4.2143e-01,4.8898e+00,-4.0045e+00,4.3000e-01,4.8867e+00,-4.0014e+00,4.3948e-01,4.8848e+00,-3.9995e+00,4.4958e-01,4.8841e+00,-3.9989e+00,4.6000e-01});
			return Coordinate_7_1444_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1445, 180 total numbers made up of 60 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1445_vector()
		{
			MFVec3f Normal_7_1445_vector = new MFVec3f(new double[] {-3.1131e-31,2.5421e-15,1.0000e+00,2.1266e-17,-1.7365e-01,9.8481e-01,4.1885e-17,-3.4202e-01,9.3969e-01,6.1232e-17,-5.0000e-01,8.6603e-01,7.8719e-17,-6.4279e-01,7.6604e-01,9.3813e-17,-7.6604e-01,6.4279e-01,1.0606e-16,-8.6603e-01,5.0000e-01,1.1508e-16,-9.3969e-01,3.4202e-01,1.2060e-16,-9.8481e-01,1.7365e-01,1.2246e-16,-1.0000e+00,-6.1232e-17,-3.9767e-16,2.5108e-15,1.0000e+00,2.7165e-02,-1.7151e-01,9.8481e-01,5.3504e-02,-3.3781e-01,9.3969e-01,7.8217e-02,-4.9384e-01,8.6603e-01,1.0055e-01,-6.3487e-01,7.6604e-01,1.1984e-01,-7.5661e-01,6.4279e-01,1.3548e-01,-8.5536e-01,5.0000e-01,1.4700e-01,-9.2812e-01,3.4202e-01,1.5406e-01,-9.7268e-01,1.7365e-01,1.5643e-01,-9.8769e-01,-6.1232e-17,-7.8554e-16,2.4177e-15,1.0000e+00,5.3660e-02,-1.6515e-01,9.8481e-01,1.0569e-01,-3.2528e-01,9.3969e-01,1.5451e-01,-4.7553e-01,8.6603e-01,1.9863e-01,-6.1133e-01,7.6604e-01,2.3672e-01,-7.2855e-01,6.4279e-01,2.6762e-01,-8.2364e-01,5.0000e-01,2.9038e-01,-8.9370e-01,3.4202e-01,3.0432e-01,-9.3661e-01,1.7365e-01,3.0902e-01,-9.5106e-01,-6.1232e-17,-1.1541e-15,2.2650e-15,1.0000e+00,7.8835e-02,-1.5472e-01,9.8481e-01,1.5527e-01,-3.0474e-01,9.3969e-01,2.2700e-01,-4.4550e-01,8.6603e-01,2.9182e-01,-5.7273e-01,7.6604e-01,3.4778e-01,-6.8255e-01,6.4279e-01,3.9317e-01,-7.7163e-01,5.0000e-01,4.2661e-01,-8.3727e-01,3.4202e-01,4.4709e-01,-8.7747e-01,1.7365e-01,4.5399e-01,-8.9101e-01,-6.1232e-17,-1.4942e-15,2.0566e-15,1.0000e+00,1.0207e-01,-1.4048e-01,9.8481e-01,2.0103e-01,-2.7670e-01,9.3969e-01,2.9389e-01,-4.0451e-01,8.6603e-01,3.7782e-01,-5.2003e-01,7.6604e-01,4.5027e-01,-6.1974e-01,6.4279e-01,5.0904e-01,-7.0063e-01,5.0000e-01,5.5234e-01,-7.6023e-01,3.4202e-01,5.7886e-01,-7.9673e-01,1.7365e-01,5.8779e-01,-8.0902e-01,-6.1232e-17,-1.7975e-15,1.7975e-15,1.0000e+00,1.2279e-01,-1.2279e-01,9.8481e-01,2.4184e-01,-2.4184e-01,9.3969e-01,3.5355e-01,-3.5355e-01,8.6603e-01,4.5452e-01,-4.5452e-01,7.6604e-01,5.4168e-01,-5.4168e-01,6.4279e-01,6.1237e-01,-6.1237e-01,5.0000e-01,6.6446e-01,-6.6446e-01,3.4202e-01,6.9636e-01,-6.9636e-01,1.7365e-01,7.0711e-01,-7.0711e-01,-6.1232e-17});
			return Normal_7_1445_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1451, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1451_point()
		{
			MFVec3f Coordinate_7_1451_point = new MFVec3f(new double[] {-5.8090e+00,-3.0843e+00,4.0000e-01,-5.7986e+00,-3.0843e+00,4.0091e-01,-5.7885e+00,-3.0843e+00,4.0362e-01,-5.7790e+00,-3.0843e+00,4.0804e-01,-5.7704e+00,-3.0843e+00,4.1404e-01,-5.7630e+00,-3.0843e+00,4.2143e-01,-5.7570e+00,-3.0843e+00,4.3000e-01,-5.7526e+00,-3.0843e+00,4.3948e-01,-5.7499e+00,-3.0843e+00,4.4958e-01,-5.7490e+00,-3.0843e+00,4.6000e-01,-5.8055e+00,-3.1194e+00,4.0000e-01,-5.7953e+00,-3.1174e+00,4.0091e-01,-5.7854e+00,-3.1154e+00,4.0362e-01,-5.7761e+00,-3.1136e+00,4.0804e-01,-5.7677e+00,-3.1119e+00,4.1404e-01,-5.7605e+00,-3.1104e+00,4.2143e-01,-5.7546e+00,-3.1093e+00,4.3000e-01,-5.7502e+00,-3.1084e+00,4.3948e-01,-5.7476e+00,-3.1079e+00,4.4958e-01,-5.7467e+00,-3.1077e+00,4.6000e-01,-5.7953e+00,-3.1532e+00,4.0000e-01,-5.7857e+00,-3.1492e+00,4.0091e-01,-5.7763e+00,-3.1453e+00,4.0362e-01,-5.7676e+00,-3.1417e+00,4.0804e-01,-5.7597e+00,-3.1384e+00,4.1404e-01,-5.7528e+00,-3.1356e+00,4.2143e-01,-5.7473e+00,-3.1333e+00,4.3000e-01,-5.7432e+00,-3.1316e+00,4.3948e-01,-5.7407e+00,-3.1306e+00,4.4958e-01,-5.7399e+00,-3.1302e+00,4.6000e-01,-5.7787e+00,-3.1843e+00,4.0000e-01,-5.7700e+00,-3.1785e+00,4.0091e-01,-5.7616e+00,-3.1729e+00,4.0362e-01,-5.7537e+00,-3.1676e+00,4.0804e-01,-5.7466e+00,-3.1629e+00,4.1404e-01,-5.7404e+00,-3.1588e+00,4.2143e-01,-5.7355e+00,-3.1554e+00,4.3000e-01,-5.7318e+00,-3.1530e+00,4.3948e-01,-5.7295e+00,-3.1515e+00,4.4958e-01,-5.7288e+00,-3.1510e+00,4.6000e-01,-5.7563e+00,-3.2116e+00,4.0000e-01,-5.7489e+00,-3.2042e+00,4.0091e-01,-5.7418e+00,-3.1971e+00,4.0362e-01,-5.7351e+00,-3.1904e+00,4.0804e-01,-5.7290e+00,-3.1843e+00,4.1404e-01,-5.7238e+00,-3.1791e+00,4.2143e-01,-5.7195e+00,-3.1748e+00,4.3000e-01,-5.7164e+00,-3.1717e+00,4.3948e-01,-5.7145e+00,-3.1698e+00,4.4958e-01,-5.7139e+00,-3.1691e+00,4.6000e-01});
			return Coordinate_7_1451_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1452, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1452_vector()
		{
			MFVec3f Normal_7_1452_vector = new MFVec3f(new double[] {1.0337e-14,-6.3293e-31,1.0000e+00,-1.7365e-01,1.0633e-17,9.8481e-01,-3.4202e-01,2.0943e-17,9.3969e-01,-5.0000e-01,3.0616e-17,8.6603e-01,-6.4279e-01,3.9359e-17,7.6604e-01,-7.6604e-01,4.6907e-17,6.4279e-01,-8.6603e-01,5.3029e-17,5.0000e-01,-9.3969e-01,5.7540e-17,3.4202e-01,-9.8481e-01,6.0302e-17,1.7365e-01,-1.0000e+00,6.1232e-17,1.8370e-16,1.0138e-14,2.0166e-15,1.0000e+00,-1.7031e-01,-3.3877e-02,9.8481e-01,-3.3545e-01,-6.6725e-02,9.3969e-01,-4.9039e-01,-9.7545e-02,8.6603e-01,-6.3044e-01,-1.2540e-01,7.6604e-01,-7.5133e-01,-1.4945e-01,6.4279e-01,-8.4938e-01,-1.6895e-01,5.0000e-01,-9.2164e-01,-1.8332e-01,3.4202e-01,-9.6588e-01,-1.9213e-01,1.7365e-01,-9.8079e-01,-1.9509e-01,1.8370e-16,9.5497e-15,3.9556e-15,1.0000e+00,-1.6043e-01,-6.6452e-02,9.8481e-01,-3.1599e-01,-1.3089e-01,9.3969e-01,-4.6194e-01,-1.9134e-01,8.6603e-01,-5.9386e-01,-2.4598e-01,7.6604e-01,-7.0773e-01,-2.9315e-01,6.4279e-01,-8.0010e-01,-3.3141e-01,5.0000e-01,-8.6816e-01,-3.5960e-01,3.4202e-01,-9.0984e-01,-3.7687e-01,1.7365e-01,-9.2388e-01,-3.8268e-01,1.8370e-16,8.5945e-15,5.7427e-15,1.0000e+00,-1.4438e-01,-9.6474e-02,9.8481e-01,-2.8438e-01,-1.9002e-01,9.3969e-01,-4.1573e-01,-2.7779e-01,8.6603e-01,-5.3446e-01,-3.5711e-01,7.6604e-01,-6.3694e-01,-4.2559e-01,6.4279e-01,-7.2007e-01,-4.8114e-01,5.0000e-01,-7.8133e-01,-5.2207e-01,3.4202e-01,-8.1884e-01,-5.4713e-01,1.7365e-01,-8.3147e-01,-5.5557e-01,1.8370e-16,7.3090e-15,7.3090e-15,1.0000e+00,-1.2279e-01,-1.2279e-01,9.8481e-01,-2.4184e-01,-2.4184e-01,9.3969e-01,-3.5355e-01,-3.5355e-01,8.6603e-01,-4.5452e-01,-4.5452e-01,7.6604e-01,-5.4168e-01,-5.4168e-01,6.4279e-01,-6.1237e-01,-6.1237e-01,5.0000e-01,-6.6446e-01,-6.6446e-01,3.4202e-01,-6.9636e-01,-6.9636e-01,1.7365e-01,-7.0711e-01,-7.0711e-01,1.8370e-16});
			return Normal_7_1452_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1472, 162 total numbers made up of 54 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1472_point()
		{
			MFVec3f Coordinate_7_1472_point = new MFVec3f(new double[] {-4.9266e+00,-4.0413e+00,4.0000e-01,-4.9183e+00,-4.0330e+00,4.0115e-01,-4.9103e+00,-4.0250e+00,4.0457e-01,-4.9030e+00,-4.0177e+00,4.1011e-01,-4.8966e+00,-4.0113e+00,4.1757e-01,-4.8913e+00,-4.0060e+00,4.2667e-01,-4.8874e+00,-4.0021e+00,4.3704e-01,-4.8850e+00,-3.9997e+00,4.4829e-01,-4.8841e+00,-3.9989e+00,4.6000e-01,-4.9051e+00,-4.0596e+00,4.0000e-01,-4.8982e+00,-4.0502e+00,4.0115e-01,-4.8916e+00,-4.0410e+00,4.0457e-01,-4.8855e+00,-4.0327e+00,4.1011e-01,-4.8802e+00,-4.0253e+00,4.1757e-01,-4.8758e+00,-4.0193e+00,4.2667e-01,-4.8725e+00,-4.0148e+00,4.3704e-01,-4.8705e+00,-4.0120e+00,4.4829e-01,-4.8698e+00,-4.0111e+00,4.6000e-01,-4.8810e+00,-4.0744e+00,4.0000e-01,-4.8757e+00,-4.0640e+00,4.0115e-01,-4.8706e+00,-4.0539e+00,4.0457e-01,-4.8659e+00,-4.0447e+00,4.1011e-01,-4.8618e+00,-4.0366e+00,4.1757e-01,-4.8584e+00,-4.0299e+00,4.2667e-01,-4.8558e+00,-4.0250e+00,4.3704e-01,-4.8543e+00,-4.0219e+00,4.4829e-01,-4.8538e+00,-4.0209e+00,4.6000e-01,-4.8549e+00,-4.0852e+00,4.0000e-01,-4.8513e+00,-4.0741e+00,4.0115e-01,-4.8478e+00,-4.0634e+00,4.0457e-01,-4.8446e+00,-4.0535e+00,4.1011e-01,-4.8418e+00,-4.0448e+00,4.1757e-01,-4.8395e+00,-4.0377e+00,4.2667e-01,-4.8378e+00,-4.0325e+00,4.3704e-01,-4.8367e+00,-4.0292e+00,4.4829e-01,-4.8364e+00,-4.0281e+00,4.6000e-01,-4.8275e+00,-4.0918e+00,4.0000e-01,-4.8256e+00,-4.0802e+00,4.0115e-01,-4.8239e+00,-4.0691e+00,4.0457e-01,-4.8222e+00,-4.0589e+00,4.1011e-01,-4.8208e+00,-4.0499e+00,4.1757e-01,-4.8196e+00,-4.0425e+00,4.2667e-01,-4.8188e+00,-4.0370e+00,4.3704e-01,-4.8182e+00,-4.0337e+00,4.4829e-01,-4.8181e+00,-4.0325e+00,4.6000e-01,-4.7993e+00,-4.0940e+00,4.0000e-01,-4.7993e+00,-4.0823e+00,4.0115e-01,-4.7993e+00,-4.0710e+00,4.0457e-01,-4.7993e+00,-4.0607e+00,4.1011e-01,-4.7993e+00,-4.0516e+00,4.1757e-01,-4.7993e+00,-4.0441e+00,4.2667e-01,-4.7993e+00,-4.0386e+00,4.3704e-01,-4.7993e+00,-4.0352e+00,4.4829e-01,-4.7993e+00,-4.0340e+00,4.6000e-01});
			return Coordinate_7_1472_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1473, 162 total numbers made up of 54 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1473_vector()
		{
			MFVec3f Normal_7_1473_vector = new MFVec3f(new double[] {-1.0226e-08,-1.0226e-08,1.0000e+00,-1.3795e-01,-1.3795e-01,9.8079e-01,-2.7060e-01,-2.7060e-01,9.2388e-01,-3.9285e-01,-3.9285e-01,8.3147e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.8794e-01,-5.8794e-01,5.5557e-01,-6.5328e-01,-6.5328e-01,3.8268e-01,-6.9352e-01,-6.9352e-01,1.9509e-01,-7.0711e-01,-7.0711e-01,-6.1232e-17,-8.5007e-09,-1.1700e-08,1.0000e+00,-1.1467e-01,-1.5783e-01,9.8079e-01,-2.2494e-01,-3.0960e-01,9.2388e-01,-3.2656e-01,-4.4947e-01,8.3147e-01,-4.1563e-01,-5.7206e-01,7.0711e-01,-4.8873e-01,-6.7267e-01,5.5557e-01,-5.4304e-01,-7.4743e-01,3.8268e-01,-5.7649e-01,-7.9347e-01,1.9509e-01,-5.8779e-01,-8.0902e-01,-6.1232e-17,-6.5657e-09,-1.2886e-08,1.0000e+00,-8.8569e-02,-1.7383e-01,9.8079e-01,-1.7373e-01,-3.4097e-01,9.2388e-01,-2.5222e-01,-4.9502e-01,8.3147e-01,-3.2102e-01,-6.3004e-01,7.0711e-01,-3.7748e-01,-7.4084e-01,5.5557e-01,-4.1943e-01,-8.2318e-01,3.8268e-01,-4.4527e-01,-8.7389e-01,1.9509e-01,-4.5399e-01,-8.9101e-01,-6.1232e-17,-4.4691e-09,-1.3754e-08,1.0000e+00,-6.0286e-02,-1.8554e-01,9.8079e-01,-1.1826e-01,-3.6395e-01,9.2388e-01,-1.7168e-01,-5.2838e-01,8.3147e-01,-2.1851e-01,-6.7250e-01,7.0711e-01,-2.5694e-01,-7.9077e-01,5.5557e-01,-2.8549e-01,-8.7866e-01,3.8268e-01,-3.0308e-01,-9.3278e-01,1.9509e-01,-3.0902e-01,-9.5106e-01,-6.1232e-17,-2.2624e-09,-1.4284e-08,1.0000e+00,-3.0519e-02,-1.9269e-01,9.8079e-01,-5.9865e-02,-3.7797e-01,9.2388e-01,-8.6910e-02,-5.4873e-01,8.3147e-01,-1.1062e-01,-6.9840e-01,7.0711e-01,-1.3007e-01,-8.2123e-01,5.5557e-01,-1.4453e-01,-9.1251e-01,3.8268e-01,-1.5343e-01,-9.6871e-01,1.9509e-01,-1.5643e-01,-9.8769e-01,-6.1232e-17,-1.7711e-24,-1.4462e-08,1.0000e+00,-2.3892e-17,-1.9509e-01,9.8079e-01,-4.6865e-17,-3.8268e-01,9.2388e-01,-6.8038e-17,-5.5557e-01,8.3147e-01,-8.6596e-17,-7.0711e-01,7.0711e-01,-1.0183e-16,-8.3147e-01,5.5557e-01,-1.1314e-16,-9.2388e-01,3.8268e-01,-1.2011e-16,-9.8079e-01,1.9509e-01,-1.2246e-16,-1.0000e+00,-6.1232e-17});
			return Normal_7_1473_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1492, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1492_point()
		{
			MFVec3f Coordinate_7_1492_point = new MFVec3f(new double[] {5.7490e+00,5.2115e-01,1.0000e+00,5.6490e+00,5.2115e-01,1.0000e+00,5.7490e+00,5.4367e-01,1.0051e+00,5.6490e+00,5.4367e-01,1.0051e+00,5.7490e+00,5.6535e-01,1.0130e+00,5.6490e+00,5.6535e-01,1.0130e+00,5.7490e+00,5.8584e-01,1.0237e+00,5.6490e+00,5.8584e-01,1.0237e+00,5.7490e+00,6.0480e-01,1.0368e+00,5.6490e+00,6.0480e-01,1.0368e+00,5.7490e+00,6.2191e-01,1.0523e+00,5.6490e+00,6.2191e-01,1.0523e+00,5.7490e+00,6.3689e-01,1.0699e+00,5.6490e+00,6.3689e-01,1.0699e+00,5.7490e+00,6.4950e-01,1.0892e+00,5.6490e+00,6.4950e-01,1.0892e+00,5.7490e+00,6.5954e-01,1.1100e+00,5.6490e+00,6.5954e-01,1.1100e+00,5.7490e+00,6.6682e-01,1.1319e+00,5.6490e+00,6.6682e-01,1.1319e+00,5.7490e+00,6.7124e-01,1.1546e+00,5.6490e+00,6.7124e-01,1.1546e+00,5.7490e+00,6.7272e-01,1.1776e+00,5.6490e+00,6.7272e-01,1.1776e+00,5.7490e+00,6.7124e-01,1.2007e+00,5.6490e+00,6.7124e-01,1.2007e+00,5.7490e+00,6.6682e-01,1.2233e+00,5.6490e+00,6.6682e-01,1.2233e+00,5.7490e+00,6.5954e-01,1.2452e+00,5.6490e+00,6.5954e-01,1.2452e+00,5.7490e+00,6.4950e-01,1.2660e+00,5.6490e+00,6.4950e-01,1.2660e+00,5.7490e+00,6.3689e-01,1.2853e+00,5.6490e+00,6.3689e-01,1.2853e+00,5.7490e+00,6.2191e-01,1.3029e+00,5.6490e+00,6.2191e-01,1.3029e+00,5.7490e+00,6.0480e-01,1.3184e+00,5.6490e+00,6.0480e-01,1.3184e+00,5.7490e+00,5.8584e-01,1.3316e+00,5.6490e+00,5.8584e-01,1.3316e+00,5.7490e+00,5.6535e-01,1.3422e+00,5.6490e+00,5.6535e-01,1.3422e+00,5.7490e+00,5.4367e-01,1.3501e+00,5.6490e+00,5.4367e-01,1.3501e+00,5.7490e+00,5.2115e-01,1.3552e+00,5.6490e+00,5.2115e-01,1.3552e+00});
			return Coordinate_7_1492_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1493, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1493_vector()
		{
			MFVec3f Normal_7_1493_vector = new MFVec3f(new double[] {-0.0000e+00,-1.5726e-01,9.8756e-01,-0.0000e+00,-1.5726e-01,9.8756e-01,-0.0000e+00,-2.8246e-01,9.5928e-01,-0.0000e+00,-2.8246e-01,9.5928e-01,-0.0000e+00,-4.0301e-01,9.1519e-01,-0.0000e+00,-4.0301e-01,9.1519e-01,-0.0000e+00,-5.1692e-01,8.5603e-01,-0.0000e+00,-5.1692e-01,8.5603e-01,-0.0000e+00,-6.2231e-01,7.8277e-01,-0.0000e+00,-6.2231e-01,7.8277e-01,-0.0000e+00,-7.1745e-01,6.9661e-01,-0.0000e+00,-7.1745e-01,6.9661e-01,-0.0000e+00,-8.0077e-01,5.9897e-01,-0.0000e+00,-8.0077e-01,5.9897e-01,-0.0000e+00,-8.7090e-01,4.9147e-01,-0.0000e+00,-8.7090e-01,4.9147e-01,-0.0000e+00,-9.2667e-01,3.7587e-01,-0.0000e+00,-9.2667e-01,3.7587e-01,-0.0000e+00,-9.6719e-01,2.5407e-01,-0.0000e+00,-9.6719e-01,2.5407e-01,-0.0000e+00,-9.9176e-01,1.2809e-01,-0.0000e+00,-9.9176e-01,1.2809e-01,-0.0000e+00,-1.0000e+00,4.3719e-09,-0.0000e+00,-1.0000e+00,4.3719e-09,-0.0000e+00,-9.9176e-01,-1.2809e-01,-0.0000e+00,-9.9176e-01,-1.2809e-01,-0.0000e+00,-9.6719e-01,-2.5407e-01,-0.0000e+00,-9.6719e-01,-2.5407e-01,-0.0000e+00,-9.2667e-01,-3.7587e-01,-0.0000e+00,-9.2667e-01,-3.7587e-01,-0.0000e+00,-8.7090e-01,-4.9147e-01,-0.0000e+00,-8.7090e-01,-4.9147e-01,-0.0000e+00,-8.0077e-01,-5.9897e-01,-0.0000e+00,-8.0077e-01,-5.9897e-01,-0.0000e+00,-7.1745e-01,-6.9661e-01,-0.0000e+00,-7.1745e-01,-6.9661e-01,-0.0000e+00,-6.2231e-01,-7.8277e-01,-0.0000e+00,-6.2231e-01,-7.8277e-01,-0.0000e+00,-5.1692e-01,-8.5603e-01,-0.0000e+00,-5.1692e-01,-8.5603e-01,-0.0000e+00,-4.0301e-01,-9.1519e-01,-0.0000e+00,-4.0301e-01,-9.1519e-01,-0.0000e+00,-2.8246e-01,-9.5928e-01,-0.0000e+00,-2.8246e-01,-9.5928e-01,-0.0000e+00,-1.5726e-01,-9.8756e-01,-0.0000e+00,-1.5726e-01,-9.8756e-01});
			return Normal_7_1493_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1505, 156 total numbers made up of 52 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1505_point()
		{
			MFVec3f Coordinate_7_1505_point = new MFVec3f(new double[] {5.7490e+00,1.4667e-01,1.4661e+00,5.6490e+00,1.4667e-01,1.4661e+00,5.7490e+00,1.3952e-01,1.4662e+00,5.6490e+00,1.3952e-01,1.4662e+00,5.7490e+00,1.3241e-01,1.4654e+00,5.6490e+00,1.3241e-01,1.4654e+00,5.7490e+00,1.2546e-01,1.4637e+00,5.6490e+00,1.2546e-01,1.4637e+00,5.7490e+00,1.1879e-01,1.4611e+00,5.6490e+00,1.1879e-01,1.4611e+00,5.7490e+00,1.1251e-01,1.4577e+00,5.6490e+00,1.1251e-01,1.4577e+00,5.7490e+00,1.0672e-01,1.4535e+00,5.6490e+00,1.0672e-01,1.4535e+00,5.7490e+00,1.0152e-01,1.4486e+00,5.6490e+00,1.0152e-01,1.4486e+00,5.7490e+00,9.6988e-02,1.4431e+00,5.6490e+00,9.6988e-02,1.4431e+00,5.7490e+00,9.3209e-02,1.4370e+00,5.6490e+00,9.3209e-02,1.4370e+00,5.7490e+00,9.0242e-02,1.4305e+00,5.6490e+00,9.0242e-02,1.4305e+00,5.7490e+00,8.8137e-02,1.4236e+00,5.6490e+00,8.8137e-02,1.4236e+00,5.7490e+00,8.6929e-02,1.4166e+00,5.6490e+00,8.6929e-02,1.4166e+00,5.7490e+00,8.6637e-02,1.4094e+00,5.6490e+00,8.6637e-02,1.4094e+00,5.7490e+00,8.7267e-02,1.4023e+00,5.6490e+00,8.7267e-02,1.4023e+00,5.7490e+00,8.8807e-02,1.3953e+00,5.6490e+00,8.8807e-02,1.3953e+00,5.7490e+00,9.1233e-02,1.3886e+00,5.6490e+00,9.1233e-02,1.3886e+00,5.7490e+00,9.4504e-02,1.3822e+00,5.6490e+00,9.4504e-02,1.3822e+00,5.7490e+00,9.8566e-02,1.3764e+00,5.6490e+00,9.8566e-02,1.3764e+00,5.7490e+00,1.0335e-01,1.3710e+00,5.6490e+00,1.0335e-01,1.3710e+00,5.7490e+00,1.0878e-01,1.3664e+00,5.6490e+00,1.0878e-01,1.3664e+00,5.7490e+00,1.1476e-01,1.3625e+00,5.6490e+00,1.1476e-01,1.3625e+00,5.7490e+00,1.2120e-01,1.3593e+00,5.6490e+00,1.2120e-01,1.3593e+00,5.7490e+00,1.2799e-01,1.3571e+00,5.6490e+00,1.2799e-01,1.3571e+00,5.7490e+00,1.3501e-01,1.3557e+00,5.6490e+00,1.3501e-01,1.3557e+00,5.7490e+00,1.4215e-01,1.3552e+00,5.6490e+00,1.4215e-01,1.3552e+00});
			return Coordinate_7_1505_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1506, 156 total numbers made up of 52 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1506_vector()
		{
			MFVec3f Normal_7_1506_vector = new MFVec3f(new double[] {0.0000e+00,8.1527e-02,9.9667e-01,0.0000e+00,8.1527e-02,9.9667e-01,0.0000e+00,-4.7294e-02,9.9888e-01,0.0000e+00,-4.7294e-02,9.9888e-01,0.0000e+00,-1.7533e-01,9.8451e-01,0.0000e+00,-1.7533e-01,9.8451e-01,0.0000e+00,-3.0045e-01,9.5380e-01,0.0000e+00,-3.0045e-01,9.5380e-01,0.0000e+00,-4.2059e-01,9.0725e-01,0.0000e+00,-4.2059e-01,9.0725e-01,0.0000e+00,-5.3375e-01,8.4564e-01,0.0000e+00,-5.3375e-01,8.4564e-01,0.0000e+00,-6.3804e-01,7.7000e-01,0.0000e+00,-6.3804e-01,7.7000e-01,0.0000e+00,-7.3175e-01,6.8158e-01,0.0000e+00,-7.3175e-01,6.8158e-01,0.0000e+00,-8.1330e-01,5.8184e-01,0.0000e+00,-8.1330e-01,5.8184e-01,0.0000e+00,-8.8136e-01,4.7244e-01,0.0000e+00,-8.8136e-01,4.7244e-01,0.0000e+00,-9.3479e-01,3.5520e-01,0.0000e+00,-9.3479e-01,3.5520e-01,0.0000e+00,-9.7270e-01,2.3207e-01,0.0000e+00,-9.7270e-01,2.3207e-01,0.0000e+00,-9.9446e-01,1.0508e-01,0.0000e+00,-9.9446e-01,1.0508e-01,0.0000e+00,-9.9972e-01,-2.3653e-02,0.0000e+00,-9.9972e-01,-2.3653e-02,0.0000e+00,-9.8838e-01,-1.5199e-01,0.0000e+00,-9.8838e-01,-1.5199e-01,0.0000e+00,-9.6064e-01,-2.7781e-01,0.0000e+00,-9.6064e-01,-2.7781e-01,0.0000e+00,-9.1695e-01,-3.9901e-01,0.0000e+00,-9.1695e-01,-3.9901e-01,0.0000e+00,-8.5803e-01,-5.1359e-01,0.0000e+00,-8.5803e-01,-5.1359e-01,0.0000e+00,-7.8488e-01,-6.1965e-01,0.0000e+00,-7.8488e-01,-6.1965e-01,0.0000e+00,-6.9869e-01,-7.1542e-01,0.0000e+00,-6.9869e-01,-7.1542e-01,0.0000e+00,-6.0091e-01,-7.9931e-01,0.0000e+00,-6.0091e-01,-7.9931e-01,0.0000e+00,-4.9316e-01,-8.6994e-01,0.0000e+00,-4.9316e-01,-8.6994e-01,0.0000e+00,-3.7721e-01,-9.2613e-01,0.0000e+00,-3.7721e-01,-9.2613e-01,0.0000e+00,-2.5501e-01,-9.6694e-01,0.0000e+00,-2.5501e-01,-9.6694e-01,0.0000e+00,-1.2857e-01,-9.9170e-01,0.0000e+00,-1.2857e-01,-9.9170e-01,0.0000e+00,-1.2246e-16,-1.0000e+00,0.0000e+00,-1.2246e-16,-1.0000e+00});
			return Normal_7_1506_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1554, 156 total numbers made up of 52 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1554_point()
		{
			MFVec3f Coordinate_7_1554_point = new MFVec3f(new double[] {5.7490e+00,1.3087e-01,1.5906e+00,5.6490e+00,1.3087e-01,1.5906e+00,5.7490e+00,1.0790e-01,1.5891e+00,5.6490e+00,1.0790e-01,1.5891e+00,5.7490e+00,8.5305e-02,1.5847e+00,5.6490e+00,8.5305e-02,1.5847e+00,5.7490e+00,6.3466e-02,1.5774e+00,5.6490e+00,6.3466e-02,1.5774e+00,5.7490e+00,4.2741e-02,1.5674e+00,5.6490e+00,4.2741e-02,1.5674e+00,5.7490e+00,2.3474e-02,1.5548e+00,5.6490e+00,2.3474e-02,1.5548e+00,5.7490e+00,5.9832e-03,1.5398e+00,5.6490e+00,5.9832e-03,1.5398e+00,5.7490e+00,-9.4421e-03,1.5227e+00,5.6490e+00,-9.4421e-03,1.5227e+00,5.7490e+00,-2.2547e-02,1.5038e+00,5.6490e+00,-2.2547e-02,1.5038e+00,5.7490e+00,-3.3114e-02,1.4833e+00,5.6490e+00,-3.3114e-02,1.4833e+00,5.7490e+00,-4.0969e-02,1.4617e+00,5.6490e+00,-4.0969e-02,1.4617e+00,5.7490e+00,-4.5983e-02,1.4392e+00,5.6490e+00,-4.5983e-02,1.4392e+00,5.7490e+00,-4.8071e-02,1.4163e+00,5.6490e+00,-4.8071e-02,1.4163e+00,5.7490e+00,-4.7199e-02,1.3933e+00,5.6490e+00,-4.7199e-02,1.3933e+00,5.7490e+00,-4.3383e-02,1.3706e+00,5.6490e+00,-4.3383e-02,1.3706e+00,5.7490e+00,-3.6685e-02,1.3486e+00,5.6490e+00,-3.6685e-02,1.3486e+00,5.7490e+00,-2.7215e-02,1.3276e+00,5.6490e+00,-2.7215e-02,1.3276e+00,5.7490e+00,-1.5131e-02,1.3080e+00,5.6490e+00,-1.5131e-02,1.3080e+00,5.7490e+00,-6.3232e-04,1.2901e+00,5.6490e+00,-6.3232e-04,1.2901e+00,5.7490e+00,1.6041e-02,1.2742e+00,5.6490e+00,1.6041e-02,1.2742e+00,5.7490e+00,3.4614e-02,1.2606e+00,5.6490e+00,3.4614e-02,1.2606e+00,5.7490e+00,5.4779e-02,1.2495e+00,5.6490e+00,5.4779e-02,1.2495e+00,5.7490e+00,7.6203e-02,1.2411e+00,5.6490e+00,7.6203e-02,1.2411e+00,5.7490e+00,9.8530e-02,1.2355e+00,5.6490e+00,9.8530e-02,1.2355e+00,5.7490e+00,1.2139e-01,1.2328e+00,5.6490e+00,1.2139e-01,1.2328e+00,5.7490e+00,1.4441e-01,1.2331e+00,5.6490e+00,1.4441e-01,1.2331e+00});
			return Coordinate_7_1554_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1555, 156 total numbers made up of 52 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1555_vector()
		{
			MFVec3f Normal_7_1555_vector = new MFVec3f(new double[] {-0.0000e+00,2.4493e-16,-1.0000e+00,-0.0000e+00,2.4493e-16,-1.0000e+00,-0.0000e+00,1.2834e-01,-9.9173e-01,-0.0000e+00,1.2834e-01,-9.9173e-01,-0.0000e+00,2.5455e-01,-9.6706e-01,-0.0000e+00,2.5455e-01,-9.6706e-01,-0.0000e+00,3.7656e-01,-9.2639e-01,-0.0000e+00,3.7656e-01,-9.2639e-01,-0.0000e+00,4.9233e-01,-8.7041e-01,-0.0000e+00,4.9233e-01,-8.7041e-01,-0.0000e+00,5.9997e-01,-8.0002e-01,-0.0000e+00,5.9997e-01,-8.0002e-01,-0.0000e+00,6.9768e-01,-7.1641e-01,-0.0000e+00,6.9768e-01,-7.1641e-01,-0.0000e+00,7.8385e-01,-6.2095e-01,-0.0000e+00,7.8385e-01,-6.2095e-01,-0.0000e+00,8.5706e-01,-5.1521e-01,-0.0000e+00,8.5706e-01,-5.1521e-01,-0.0000e+00,9.1610e-01,-4.0096e-01,-0.0000e+00,9.1610e-01,-4.0096e-01,-0.0000e+00,9.5998e-01,-2.8008e-01,-0.0000e+00,9.5998e-01,-2.8008e-01,-0.0000e+00,9.8798e-01,-1.5456e-01,-0.0000e+00,9.8798e-01,-1.5456e-01,-0.0000e+00,9.9965e-01,-2.6486e-02,-0.0000e+00,9.9965e-01,-2.6486e-02,-0.0000e+00,9.9478e-01,1.0203e-01,-0.0000e+00,9.9478e-01,1.0203e-01,-0.0000e+00,9.7346e-01,2.2885e-01,-0.0000e+00,9.7346e-01,2.2885e-01,-0.0000e+00,9.3604e-01,3.5189e-01,-0.0000e+00,9.3604e-01,3.5189e-01,-0.0000e+00,8.8314e-01,4.6911e-01,-0.0000e+00,8.8314e-01,4.6911e-01,-0.0000e+00,8.1563e-01,5.7857e-01,-0.0000e+00,8.1563e-01,5.7857e-01,-0.0000e+00,7.3464e-01,6.7846e-01,-0.0000e+00,7.3464e-01,6.7846e-01,-0.0000e+00,6.4149e-01,7.6713e-01,-0.0000e+00,6.4149e-01,7.6713e-01,-0.0000e+00,5.3773e-01,8.4311e-01,-0.0000e+00,5.3773e-01,8.4311e-01,-0.0000e+00,4.2508e-01,9.0515e-01,-0.0000e+00,4.2508e-01,9.0515e-01,-0.0000e+00,3.0540e-01,9.5222e-01,-0.0000e+00,3.0540e-01,9.5222e-01,-0.0000e+00,1.8067e-01,9.8354e-01,-0.0000e+00,1.8067e-01,9.8354e-01,-0.0000e+00,5.2953e-02,9.9860e-01,-0.0000e+00,5.2953e-02,9.9860e-01,-0.0000e+00,-7.5642e-02,9.9714e-01,-0.0000e+00,-7.5642e-02,9.9714e-01});
			return Normal_7_1555_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1567, 144 total numbers made up of 48 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1567_point()
		{
			MFVec3f Coordinate_7_1567_point = new MFVec3f(new double[] {5.7490e+00,5.0305e-01,1.1222e+00,5.6490e+00,5.0305e-01,1.1222e+00,5.7490e+00,5.1001e-01,1.1235e+00,5.6490e+00,5.1001e-01,1.1235e+00,5.7490e+00,5.1675e-01,1.1257e+00,5.6490e+00,5.1675e-01,1.1257e+00,5.7490e+00,5.2315e-01,1.1288e+00,5.6490e+00,5.2315e-01,1.1288e+00,5.7490e+00,5.2911e-01,1.1326e+00,5.6490e+00,5.2911e-01,1.1326e+00,5.7490e+00,5.3453e-01,1.1372e+00,5.6490e+00,5.3453e-01,1.1372e+00,5.7490e+00,5.3933e-01,1.1424e+00,5.6490e+00,5.3933e-01,1.1424e+00,5.7490e+00,5.4343e-01,1.1482e+00,5.6490e+00,5.4343e-01,1.1482e+00,5.7490e+00,5.4676e-01,1.1545e+00,5.6490e+00,5.4676e-01,1.1545e+00,5.7490e+00,5.4927e-01,1.1611e+00,5.6490e+00,5.4927e-01,1.1611e+00,5.7490e+00,5.5092e-01,1.1680e+00,5.6490e+00,5.5092e-01,1.1680e+00,5.7490e+00,5.5167e-01,1.1751e+00,5.6490e+00,5.5167e-01,1.1751e+00,5.7490e+00,5.5153e-01,1.1822e+00,5.6490e+00,5.5153e-01,1.1822e+00,5.7490e+00,5.5048e-01,1.1892e+00,5.6490e+00,5.5048e-01,1.1892e+00,5.7490e+00,5.4856e-01,1.1960e+00,5.6490e+00,5.4856e-01,1.1960e+00,5.7490e+00,5.4578e-01,1.2025e+00,5.6490e+00,5.4578e-01,1.2025e+00,5.7490e+00,5.4220e-01,1.2087e+00,5.6490e+00,5.4220e-01,1.2087e+00,5.7490e+00,5.3787e-01,1.2143e+00,5.6490e+00,5.3787e-01,1.2143e+00,5.7490e+00,5.3286e-01,1.2193e+00,5.6490e+00,5.3286e-01,1.2193e+00,5.7490e+00,5.2725e-01,1.2237e+00,5.6490e+00,5.2725e-01,1.2237e+00,5.7490e+00,5.2114e-01,1.2273e+00,5.6490e+00,5.2114e-01,1.2273e+00,5.7490e+00,5.1462e-01,1.2300e+00,5.6490e+00,5.1462e-01,1.2300e+00,5.7490e+00,5.0780e-01,1.2320e+00,5.6490e+00,5.0780e-01,1.2320e+00,5.7490e+00,5.0078e-01,1.2331e+00,5.6490e+00,5.0078e-01,1.2331e+00});
			return Coordinate_7_1567_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1568, 144 total numbers made up of 48 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1568_vector()
		{
			MFVec3f Normal_7_1568_vector = new MFVec3f(new double[] {0.0000e+00,1.2721e-01,-9.9188e-01,0.0000e+00,1.2721e-01,-9.9188e-01,0.0000e+00,2.5208e-01,-9.6771e-01,0.0000e+00,2.5208e-01,-9.6771e-01,0.0000e+00,3.7287e-01,-9.2788e-01,0.0000e+00,3.7287e-01,-9.2788e-01,0.0000e+00,4.8763e-01,-8.7305e-01,0.0000e+00,4.8763e-01,-8.7305e-01,0.0000e+00,5.9450e-01,-8.0409e-01,0.0000e+00,5.9450e-01,-8.0409e-01,0.0000e+00,6.9176e-01,-7.2213e-01,0.0000e+00,6.9176e-01,-7.2213e-01,0.0000e+00,7.7783e-01,-6.2848e-01,0.0000e+00,7.7783e-01,-6.2848e-01,0.0000e+00,8.5131e-01,-5.2467e-01,0.0000e+00,8.5131e-01,-5.2467e-01,0.0000e+00,9.1102e-01,-4.1237e-01,0.0000e+00,9.1102e-01,-4.1237e-01,0.0000e+00,9.5599e-01,-2.9339e-01,0.0000e+00,9.5599e-01,-2.9339e-01,0.0000e+00,9.8550e-01,-1.6968e-01,0.0000e+00,9.8550e-01,-1.6968e-01,0.0000e+00,9.9907e-01,-4.3213e-02,0.0000e+00,9.9907e-01,-4.3213e-02,0.0000e+00,9.9647e-01,8.3948e-02,0.0000e+00,9.9647e-01,8.3948e-02,0.0000e+00,9.7775e-01,2.0975e-01,0.0000e+00,9.7775e-01,2.0975e-01,0.0000e+00,9.4322e-01,3.3216e-01,0.0000e+00,9.4322e-01,3.3216e-01,0.0000e+00,8.9343e-01,4.4920e-01,0.0000e+00,8.9343e-01,4.4920e-01,0.0000e+00,8.2919e-01,5.5897e-01,0.0000e+00,8.2919e-01,5.5897e-01,0.0000e+00,7.5153e-01,6.5970e-01,0.0000e+00,7.5153e-01,6.5970e-01,0.0000e+00,6.6171e-01,7.4976e-01,0.0000e+00,6.6171e-01,7.4976e-01,0.0000e+00,5.6120e-01,8.2768e-01,0.0000e+00,5.6120e-01,8.2768e-01,0.0000e+00,4.5160e-01,8.9222e-01,0.0000e+00,4.5160e-01,8.9222e-01,0.0000e+00,3.3469e-01,9.4233e-01,0.0000e+00,3.3469e-01,9.4233e-01,0.0000e+00,2.1238e-01,9.7719e-01,0.0000e+00,2.1238e-01,9.7719e-01,0.0000e+00,8.6624e-02,9.9624e-01,0.0000e+00,8.6624e-02,9.9624e-01});
			return Normal_7_1568_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1605, 273 total numbers made up of 91 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1605_point()
		{
			MFVec3f Coordinate_7_1605_point = new MFVec3f(new double[] {5.6490e+00,-2.3930e-01,1.1330e+00,5.6490e+00,-2.2990e-01,1.1020e+00,5.6490e+00,-2.1464e-01,1.0734e+00,5.6490e+00,-1.9409e-01,1.0484e+00,5.6490e+00,-1.6906e-01,1.0278e+00,5.6490e+00,-1.4050e-01,1.0126e+00,5.6490e+00,-1.0952e-01,1.0032e+00,5.6490e+00,-7.7290e-02,1.0000e+00,5.6490e+00,5.2115e-01,1.0000e+00,5.6490e+00,5.5619e-01,1.0093e+00,5.6490e+00,5.8865e-01,1.0254e+00,5.6490e+00,6.1722e-01,1.0477e+00,5.6490e+00,6.4075e-01,1.0752e+00,5.6490e+00,6.5827e-01,1.1070e+00,5.6490e+00,6.6907e-01,1.1416e+00,5.6490e+00,6.7272e-01,1.1776e+00,5.6490e+00,6.6907e-01,1.2137e+00,5.6490e+00,6.5827e-01,1.2483e+00,5.6490e+00,6.4075e-01,1.2800e+00,5.6490e+00,6.1722e-01,1.3076e+00,5.6490e+00,5.8865e-01,1.3298e+00,5.6490e+00,5.5619e-01,1.3460e+00,5.6490e+00,5.2115e-01,1.3552e+00,5.6490e+00,1.4215e-01,1.3552e+00,5.6490e+00,1.3104e-01,1.3564e+00,5.6490e+00,1.2038e-01,1.3597e+00,5.6490e+00,1.1060e-01,1.3651e+00,5.6490e+00,1.0209e-01,1.3723e+00,5.6490e+00,9.5208e-02,1.3811e+00,5.6490e+00,9.0222e-02,1.3911e+00,5.6490e+00,8.7336e-02,1.4019e+00,5.6490e+00,8.6668e-02,1.4130e+00,5.6490e+00,8.8243e-02,1.4241e+00,5.6490e+00,9.1998e-02,1.4346e+00,5.6490e+00,9.7782e-02,1.4441e+00,5.6490e+00,1.0536e-01,1.4524e+00,5.6490e+00,1.1443e-01,1.4589e+00,5.6490e+00,1.2461e-01,1.4634e+00,5.6490e+00,1.3551e-01,1.4659e+00,5.6490e+00,1.4667e-01,1.4661e+00,5.6490e+00,7.6439e-01,1.4661e+00,5.6490e+00,7.6439e-01,1.0000e+00,5.6490e+00,8.8654e-01,1.0000e+00,5.6490e+00,8.8654e-01,1.4661e+00,5.6490e+00,1.1389e+00,1.4661e+00,5.6490e+00,1.1389e+00,1.5906e+00,5.6490e+00,1.3087e-01,1.5906e+00,5.6490e+00,9.5119e-02,1.5869e+00,5.6490e+00,6.0807e-02,1.5763e+00,5.6490e+00,2.9319e-02,1.5590e+00,5.6490e+00,1.9227e-03,1.5357e+00,5.6490e+00,-2.0277e-02,1.5074e+00,5.6490e+00,-3.6386e-02,1.4753e+00,5.6490e+00,-4.5754e-02,1.4406e+00,5.6490e+00,-4.8005e-02,1.4048e+00,5.6490e+00,-4.3048e-02,1.3692e+00,5.6490e+00,-3.1082e-02,1.3353e+00,5.6490e+00,-1.2590e-02,1.3045e+00,5.6490e+00,1.1684e-02,1.2780e+00,5.6490e+00,4.0760e-02,1.2569e+00,5.6490e+00,7.3468e-02,1.2420e+00,5.6490e+00,1.0849e-01,1.2339e+00,5.6490e+00,1.4441e-01,1.2331e+00,5.6490e+00,5.0078e-01,1.2331e+00,5.6490e+00,5.1147e-01,1.2311e+00,5.6490e+00,5.2156e-01,1.2270e+00,5.6490e+00,5.3068e-01,1.2211e+00,5.6490e+00,5.3849e-01,1.2136e+00,5.6490e+00,5.4467e-01,1.2046e+00,5.6490e+00,5.4901e-01,1.1947e+00,5.6490e+00,5.5134e-01,1.1841e+00,5.6490e+00,5.5156e-01,1.1732e+00,5.6490e+00,5.4967e-01,1.1625e+00,5.6490e+00,5.4574e-01,1.1524e+00,5.6490e+00,5.3992e-01,1.1432e+00,5.6490e+00,5.3243e-01,1.1353e+00,5.6490e+00,5.2356e-01,1.1290e+00,5.6490e+00,5.1364e-01,1.1246e+00,5.6490e+00,5.0305e-01,1.1222e+00,5.6490e+00,-7.6145e-02,1.1222e+00,5.6490e+00,-8.4536e-02,1.1230e+00,5.6490e+00,-9.2606e-02,1.1254e+00,5.6490e+00,-1.0004e-01,1.1294e+00,5.6490e+00,-1.0656e-01,1.1348e+00,5.6490e+00,-1.1191e-01,1.1413e+00,5.6490e+00,-1.1588e-01,1.1487e+00,5.6490e+00,-1.1833e-01,1.1568e+00,5.6490e+00,-1.1916e-01,1.1652e+00,5.6490e+00,-1.1916e-01,1.5906e+00,5.6490e+00,-2.4248e-01,1.5906e+00,5.6490e+00,-2.4248e-01,1.1652e+00});
			return Coordinate_7_1605_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1629, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1629_point()
		{
			MFVec3f Coordinate_7_1629_point = new MFVec3f(new double[] {5.7490e+00,-4.7323e-01,1.1290e+00,5.6490e+00,-4.7323e-01,1.1290e+00,5.7490e+00,-4.7168e-01,1.1275e+00,5.6490e+00,-4.7168e-01,1.1275e+00,5.7490e+00,-4.6996e-01,1.1262e+00,5.6490e+00,-4.6996e-01,1.1262e+00,5.7490e+00,-4.6809e-01,1.1252e+00,5.6490e+00,-4.6809e-01,1.1252e+00,5.7490e+00,-4.6611e-01,1.1245e+00,5.6490e+00,-4.6611e-01,1.1245e+00,5.7490e+00,-4.6404e-01,1.1240e+00,5.6490e+00,-4.6404e-01,1.1240e+00,5.7490e+00,-4.6192e-01,1.1237e+00,5.6490e+00,-4.6192e-01,1.1237e+00,5.7490e+00,-4.5979e-01,1.1238e+00,5.6490e+00,-4.5979e-01,1.1238e+00,5.7490e+00,-4.5769e-01,1.1241e+00,5.6490e+00,-4.5769e-01,1.1241e+00,5.7490e+00,-4.5565e-01,1.1247e+00,5.6490e+00,-4.5565e-01,1.1247e+00,5.7490e+00,-4.5370e-01,1.1256e+00,5.6490e+00,-4.5370e-01,1.1256e+00,5.7490e+00,-4.5188e-01,1.1267e+00,5.6490e+00,-4.5188e-01,1.1267e+00,5.7490e+00,-4.5022e-01,1.1280e+00,5.6490e+00,-4.5022e-01,1.1280e+00,5.7490e+00,-4.4875e-01,1.1295e+00,5.6490e+00,-4.4875e-01,1.1295e+00,5.7490e+00,-4.4749e-01,1.1313e+00,5.6490e+00,-4.4749e-01,1.1313e+00,5.7490e+00,-4.4646e-01,1.1331e+00,5.6490e+00,-4.4646e-01,1.1331e+00,5.7490e+00,-4.4568e-01,1.1351e+00,5.6490e+00,-4.4568e-01,1.1351e+00,5.7490e+00,-4.4517e-01,1.1372e+00,5.6490e+00,-4.4517e-01,1.1372e+00,5.7490e+00,-4.4493e-01,1.1393e+00,5.6490e+00,-4.4493e-01,1.1393e+00,5.7490e+00,-4.4497e-01,1.1414e+00,5.6490e+00,-4.4497e-01,1.1414e+00});
			return Coordinate_7_1629_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1630, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1630_vector()
		{
			MFVec3f Normal_7_1630_vector = new MFVec3f(new double[] {0.0000e+00,-7.3420e-01,-6.7893e-01,0.0000e+00,-7.3420e-01,-6.7893e-01,0.0000e+00,-6.3963e-01,-7.6869e-01,0.0000e+00,-6.3963e-01,-7.6869e-01,0.0000e+00,-5.3418e-01,-8.4537e-01,0.0000e+00,-5.3418e-01,-8.4537e-01,0.0000e+00,-4.1965e-01,-9.0769e-01,0.0000e+00,-4.1965e-01,-9.0769e-01,0.0000e+00,-2.9799e-01,-9.5457e-01,0.0000e+00,-2.9799e-01,-9.5457e-01,0.0000e+00,-1.7126e-01,-9.8523e-01,0.0000e+00,-1.7126e-01,-9.8523e-01,0.0000e+00,-4.1620e-02,-9.9913e-01,0.0000e+00,-4.1620e-02,-9.9913e-01,0.0000e+00,8.8728e-02,-9.9606e-01,0.0000e+00,8.8728e-02,-9.9606e-01,0.0000e+00,2.1757e-01,-9.7605e-01,0.0000e+00,2.1757e-01,-9.7605e-01,0.0000e+00,3.4271e-01,-9.3944e-01,0.0000e+00,3.4271e-01,-9.3944e-01,0.0000e+00,4.6202e-01,-8.8687e-01,0.0000e+00,4.6202e-01,-8.8687e-01,0.0000e+00,5.7348e-01,-8.1922e-01,0.0000e+00,5.7348e-01,-8.1922e-01,0.0000e+00,6.7519e-01,-7.3764e-01,0.0000e+00,6.7519e-01,-7.3764e-01,0.0000e+00,7.6542e-01,-6.4353e-01,0.0000e+00,7.6542e-01,-6.4353e-01,0.0000e+00,8.4264e-01,-5.3847e-01,0.0000e+00,8.4264e-01,-5.3847e-01,0.0000e+00,9.0554e-01,-4.2426e-01,0.0000e+00,9.0554e-01,-4.2426e-01,0.0000e+00,9.5304e-01,-3.0284e-01,0.0000e+00,9.5304e-01,-3.0284e-01,0.0000e+00,9.8434e-01,-1.7627e-01,0.0000e+00,9.8434e-01,-1.7627e-01,0.0000e+00,9.9891e-01,-4.6700e-02,0.0000e+00,9.9891e-01,-4.6700e-02,0.0000e+00,9.9649e-01,8.3661e-02,0.0000e+00,9.9649e-01,8.3661e-02});
			return Normal_7_1630_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1642, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1642_point()
		{
			MFVec3f Coordinate_7_1642_point = new MFVec3f(new double[] {5.7490e+00,-8.7735e-01,1.5660e+00,5.6490e+00,-8.7735e-01,1.5660e+00,5.7490e+00,-8.8906e-01,1.5771e+00,5.6490e+00,-8.8906e-01,1.5771e+00,5.7490e+00,-9.0208e-01,1.5867e+00,5.6490e+00,-9.0208e-01,1.5867e+00,5.7490e+00,-9.1620e-01,1.5946e+00,5.6490e+00,-9.1620e-01,1.5946e+00,5.7490e+00,-9.3120e-01,1.6007e+00,5.6490e+00,-9.3120e-01,1.6007e+00,5.7490e+00,-9.4685e-01,1.6048e+00,5.6490e+00,-9.4685e-01,1.6048e+00,5.7490e+00,-9.6288e-01,1.6069e+00,5.6490e+00,-9.6288e-01,1.6069e+00,5.7490e+00,-9.7906e-01,1.6070e+00,5.6490e+00,-9.7906e-01,1.6070e+00,5.7490e+00,-9.9511e-01,1.6050e+00,5.6490e+00,-9.9511e-01,1.6050e+00,5.7490e+00,-1.0108e+00,1.6011e+00,5.6490e+00,-1.0108e+00,1.6011e+00,5.7490e+00,-1.0259e+00,1.5952e+00,5.6490e+00,-1.0259e+00,1.5952e+00,5.7490e+00,-1.0401e+00,1.5874e+00,5.6490e+00,-1.0401e+00,1.5874e+00,5.7490e+00,-1.0532e+00,1.5780e+00,5.6490e+00,-1.0532e+00,1.5780e+00,5.7490e+00,-1.0650e+00,1.5669e+00,5.6490e+00,-1.0650e+00,1.5669e+00,5.7490e+00,-1.0753e+00,1.5545e+00,5.6490e+00,-1.0753e+00,1.5545e+00,5.7490e+00,-1.0840e+00,1.5409e+00,5.6490e+00,-1.0840e+00,1.5409e+00,5.7490e+00,-1.0909e+00,1.5262e+00,5.6490e+00,-1.0909e+00,1.5262e+00,5.7490e+00,-1.0959e+00,1.5109e+00,5.6490e+00,-1.0959e+00,1.5109e+00,5.7490e+00,-1.0990e+00,1.4950e+00,5.6490e+00,-1.0990e+00,1.4950e+00,5.7490e+00,-1.1000e+00,1.4788e+00,5.6490e+00,-1.1000e+00,1.4788e+00});
			return Coordinate_7_1642_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1643, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1643_vector()
		{
			MFVec3f Normal_7_1643_vector = new MFVec3f(new double[] {-0.0000e+00,-7.3420e-01,-6.7893e-01,-0.0000e+00,-7.3420e-01,-6.7893e-01,-0.0000e+00,-6.4301e-01,-7.6586e-01,-0.0000e+00,-6.4301e-01,-7.6586e-01,-0.0000e+00,-5.4161e-01,-8.4063e-01,-0.0000e+00,-5.4161e-01,-8.4063e-01,-0.0000e+00,-4.3162e-01,-9.0206e-01,-0.0000e+00,-4.3162e-01,-9.0206e-01,-0.0000e+00,-3.1477e-01,-9.4917e-01,-0.0000e+00,-3.1477e-01,-9.4917e-01,-0.0000e+00,-1.9293e-01,-9.8121e-01,-0.0000e+00,-1.9293e-01,-9.8121e-01,-0.0000e+00,-6.8029e-02,-9.9768e-01,-0.0000e+00,-6.8029e-02,-9.9768e-01,-0.0000e+00,5.7953e-02,-9.9832e-01,-0.0000e+00,5.7953e-02,-9.9832e-01,-0.0000e+00,1.8302e-01,-9.8311e-01,-0.0000e+00,1.8302e-01,-9.8311e-01,-0.0000e+00,3.0517e-01,-9.5230e-01,-0.0000e+00,3.0517e-01,-9.5230e-01,-0.0000e+00,4.2249e-01,-9.0637e-01,-0.0000e+00,4.2249e-01,-9.0637e-01,-0.0000e+00,5.3310e-01,-8.4605e-01,-0.0000e+00,5.3310e-01,-8.4605e-01,-0.0000e+00,6.3524e-01,-7.7231e-01,-0.0000e+00,6.3524e-01,-7.7231e-01,-0.0000e+00,7.2731e-01,-6.8631e-01,-0.0000e+00,7.2731e-01,-6.8631e-01,-0.0000e+00,8.0783e-01,-5.8942e-01,-0.0000e+00,8.0783e-01,-5.8942e-01,-0.0000e+00,8.7553e-01,-4.8317e-01,-0.0000e+00,8.7553e-01,-4.8317e-01,-0.0000e+00,9.2933e-01,-3.6925e-01,-0.0000e+00,9.2933e-01,-3.6925e-01,-0.0000e+00,9.6838e-01,-2.4947e-01,-0.0000e+00,9.6838e-01,-2.4947e-01,-0.0000e+00,9.9206e-01,-1.2573e-01,-0.0000e+00,9.9206e-01,-1.2573e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17});
			return Normal_7_1643_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1667, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1667_point()
		{
			MFVec3f Coordinate_7_1667_point = new MFVec3f(new double[] {5.7490e+00,-9.4096e-01,1.4570e+00,5.6490e+00,-9.4096e-01,1.4570e+00,5.7490e+00,-9.4289e-01,1.4589e+00,5.6490e+00,-9.4289e-01,1.4589e+00,5.7490e+00,-9.4505e-01,1.4605e+00,5.6490e+00,-9.4505e-01,1.4605e+00,5.7490e+00,-9.4739e-01,1.4618e+00,5.6490e+00,-9.4739e-01,1.4618e+00,5.7490e+00,-9.4987e-01,1.4628e+00,5.6490e+00,-9.4987e-01,1.4628e+00,5.7490e+00,-9.5246e-01,1.4635e+00,5.6490e+00,-9.5246e-01,1.4635e+00,5.7490e+00,-9.5512e-01,1.4639e+00,5.6490e+00,-9.5512e-01,1.4639e+00,5.7490e+00,-9.5780e-01,1.4639e+00,5.6490e+00,-9.5780e-01,1.4639e+00,5.7490e+00,-9.6046e-01,1.4636e+00,5.6490e+00,-9.6046e-01,1.4636e+00,5.7490e+00,-9.6306e-01,1.4629e+00,5.6490e+00,-9.6306e-01,1.4629e+00,5.7490e+00,-9.6556e-01,1.4619e+00,5.6490e+00,-9.6556e-01,1.4619e+00,5.7490e+00,-9.6791e-01,1.4607e+00,5.6490e+00,-9.6791e-01,1.4607e+00,5.7490e+00,-9.7009e-01,1.4591e+00,5.6490e+00,-9.7009e-01,1.4591e+00,5.7490e+00,-9.7205e-01,1.4573e+00,5.6490e+00,-9.7205e-01,1.4573e+00,5.7490e+00,-9.7376e-01,1.4552e+00,5.6490e+00,-9.7376e-01,1.4552e+00,5.7490e+00,-9.7520e-01,1.4529e+00,5.6490e+00,-9.7520e-01,1.4529e+00,5.7490e+00,-9.7635e-01,1.4505e+00,5.6490e+00,-9.7635e-01,1.4505e+00,5.7490e+00,-9.7718e-01,1.4480e+00,5.6490e+00,-9.7718e-01,1.4480e+00,5.7490e+00,-9.7769e-01,1.4453e+00,5.6490e+00,-9.7769e-01,1.4453e+00,5.7490e+00,-9.7785e-01,1.4427e+00,5.6490e+00,-9.7785e-01,1.4427e+00});
			return Coordinate_7_1667_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1668, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1668_vector()
		{
			MFVec3f Normal_7_1668_vector = new MFVec3f(new double[] {0.0000e+00,7.3591e-01,6.7708e-01,0.0000e+00,7.3591e-01,6.7708e-01,0.0000e+00,6.4483e-01,7.6432e-01,0.0000e+00,6.4483e-01,7.6432e-01,0.0000e+00,5.4350e-01,8.3941e-01,0.0000e+00,5.4350e-01,8.3941e-01,0.0000e+00,4.3353e-01,9.0114e-01,0.0000e+00,4.3353e-01,9.0114e-01,0.0000e+00,3.1666e-01,9.4854e-01,0.0000e+00,3.1666e-01,9.4854e-01,0.0000e+00,1.9475e-01,9.8085e-01,0.0000e+00,1.9475e-01,9.8085e-01,0.0000e+00,6.9746e-02,9.9756e-01,0.0000e+00,6.9746e-02,9.9756e-01,0.0000e+00,-5.6367e-02,9.9841e-01,0.0000e+00,-5.6367e-02,9.9841e-01,0.0000e+00,-1.8158e-01,9.8338e-01,0.0000e+00,-1.8158e-01,9.8338e-01,0.0000e+00,-3.0391e-01,9.5270e-01,0.0000e+00,-3.0391e-01,9.5270e-01,0.0000e+00,-4.2141e-01,9.0687e-01,0.0000e+00,-4.2141e-01,9.0687e-01,0.0000e+00,-5.3220e-01,8.4662e-01,0.0000e+00,-5.3220e-01,8.4662e-01,0.0000e+00,-6.3453e-01,7.7290e-01,0.0000e+00,-6.3453e-01,7.7290e-01,0.0000e+00,-7.2676e-01,6.8689e-01,0.0000e+00,-7.2676e-01,6.8689e-01,0.0000e+00,-8.0744e-01,5.8995e-01,0.0000e+00,-8.0744e-01,5.8995e-01,0.0000e+00,-8.7527e-01,4.8363e-01,0.0000e+00,-8.7527e-01,4.8363e-01,0.0000e+00,-9.2918e-01,3.6962e-01,0.0000e+00,-9.2918e-01,3.6962e-01,0.0000e+00,-9.6832e-01,2.4973e-01,0.0000e+00,-9.6832e-01,2.4973e-01,0.0000e+00,-9.9205e-01,1.2587e-01,0.0000e+00,-9.9205e-01,1.2587e-01,0.0000e+00,-1.0000e+00,6.1232e-17,0.0000e+00,-1.0000e+00,6.1232e-17});
			return Normal_7_1668_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1680, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1680_point()
		{
			MFVec3f Coordinate_7_1680_point = new MFVec3f(new double[] {5.7490e+00,-5.6824e-01,1.0519e+00,5.6490e+00,-5.6824e-01,1.0519e+00,5.7490e+00,-5.5612e-01,1.0387e+00,5.6490e+00,-5.5612e-01,1.0387e+00,5.7490e+00,-5.4240e-01,1.0271e+00,5.6490e+00,-5.4240e-01,1.0271e+00,5.7490e+00,-5.2729e-01,1.0174e+00,5.6490e+00,-5.2729e-01,1.0174e+00,5.7490e+00,-5.1104e-01,1.0097e+00,5.6490e+00,-5.1104e-01,1.0097e+00,5.7490e+00,-4.9395e-01,1.0042e+00,5.6490e+00,-4.9395e-01,1.0042e+00,5.7490e+00,-4.7628e-01,1.0009e+00,5.6490e+00,-4.7628e-01,1.0009e+00,5.7490e+00,-4.5834e-01,1.0000e+00,5.6490e+00,-4.5834e-01,1.0000e+00,5.7490e+00,-4.4043e-01,1.0014e+00,5.6490e+00,-4.4043e-01,1.0014e+00,5.7490e+00,-4.2285e-01,1.0051e+00,5.6490e+00,-4.2285e-01,1.0051e+00,5.7490e+00,-4.0590e-01,1.0111e+00,5.6490e+00,-4.0590e-01,1.0111e+00,5.7490e+00,-3.8986e-01,1.0192e+00,5.6490e+00,-3.8986e-01,1.0192e+00,5.7490e+00,-3.7501e-01,1.0293e+00,5.6490e+00,-3.7501e-01,1.0293e+00,5.7490e+00,-3.6158e-01,1.0412e+00,5.6490e+00,-3.6158e-01,1.0412e+00,5.7490e+00,-3.4982e-01,1.0548e+00,5.6490e+00,-3.4982e-01,1.0548e+00,5.7490e+00,-3.3991e-01,1.0698e+00,5.6490e+00,-3.3991e-01,1.0698e+00,5.7490e+00,-3.3203e-01,1.0859e+00,5.6490e+00,-3.3203e-01,1.0859e+00,5.7490e+00,-3.2630e-01,1.1029e+00,5.6490e+00,-3.2630e-01,1.1029e+00,5.7490e+00,-3.2282e-01,1.1205e+00,5.6490e+00,-3.2282e-01,1.1205e+00,5.7490e+00,-3.2166e-01,1.1385e+00,5.6490e+00,-3.2166e-01,1.1385e+00});
			return Coordinate_7_1680_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1681, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1681_vector()
		{
			MFVec3f Normal_7_1681_vector = new MFVec3f(new double[] {-0.0000e+00,7.8074e-01,6.2486e-01,-0.0000e+00,7.8074e-01,6.2486e-01,-0.0000e+00,6.9327e-01,7.2067e-01,-0.0000e+00,6.9327e-01,7.2067e-01,-0.0000e+00,5.9414e-01,8.0436e-01,-0.0000e+00,5.9414e-01,8.0436e-01,-0.0000e+00,4.8501e-01,8.7451e-01,-0.0000e+00,4.8501e-01,8.7451e-01,-0.0000e+00,3.6772e-01,9.2994e-01,-0.0000e+00,3.6772e-01,9.2994e-01,-0.0000e+00,2.4423e-01,9.6972e-01,-0.0000e+00,2.4423e-01,9.6972e-01,-0.0000e+00,1.1664e-01,9.9317e-01,-0.0000e+00,1.1664e-01,9.9317e-01,-0.0000e+00,-1.2917e-02,9.9992e-01,-0.0000e+00,-1.2917e-02,9.9992e-01,-0.0000e+00,-1.4226e-01,9.8983e-01,-0.0000e+00,-1.4226e-01,9.8983e-01,-0.0000e+00,-2.6920e-01,9.6308e-01,-0.0000e+00,-2.6920e-01,9.6308e-01,-0.0000e+00,-3.9162e-01,9.2013e-01,-0.0000e+00,-3.9162e-01,9.2013e-01,-0.0000e+00,-5.0744e-01,8.6169e-01,-0.0000e+00,-5.0744e-01,8.6169e-01,-0.0000e+00,-6.1472e-01,7.8874e-01,-0.0000e+00,-6.1472e-01,7.8874e-01,-0.0000e+00,-7.1166e-01,7.0253e-01,-0.0000e+00,-7.1166e-01,7.0253e-01,-0.0000e+00,-7.9662e-01,6.0448e-01,-0.0000e+00,-7.9662e-01,6.0448e-01,-0.0000e+00,-8.6817e-01,4.9627e-01,-0.0000e+00,-8.6817e-01,4.9627e-01,-0.0000e+00,-9.2511e-01,3.7970e-01,-0.0000e+00,-9.2511e-01,3.7970e-01,-0.0000e+00,-9.6648e-01,2.5674e-01,-0.0000e+00,-9.6648e-01,2.5674e-01,-0.0000e+00,-9.9158e-01,1.2946e-01,-0.0000e+00,-9.9158e-01,1.2946e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17});
			return Normal_7_1681_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1687, 174 total numbers made up of 58 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1687_point()
		{
			MFVec3f Coordinate_7_1687_point = new MFVec3f(new double[] {5.6490e+00,-3.2166e-01,1.5906e+00,5.6490e+00,-4.4497e-01,1.5906e+00,5.6490e+00,-4.4497e-01,1.1414e+00,5.6490e+00,-4.4501e-01,1.1383e+00,5.6490e+00,-4.4563e-01,1.1353e+00,5.6490e+00,-4.4683e-01,1.1324e+00,5.6490e+00,-4.4854e-01,1.1298e+00,5.6490e+00,-4.5071e-01,1.1276e+00,5.6490e+00,-4.5327e-01,1.1258e+00,5.6490e+00,-4.5611e-01,1.1245e+00,5.6490e+00,-4.5914e-01,1.1239e+00,5.6490e+00,-4.6225e-01,1.1238e+00,5.6490e+00,-4.6532e-01,1.1242e+00,5.6490e+00,-4.6824e-01,1.1253e+00,5.6490e+00,-4.7091e-01,1.1269e+00,5.6490e+00,-4.7323e-01,1.1290e+00,5.6490e+00,-8.7735e-01,1.5660e+00,5.6490e+00,-8.9651e-01,1.5829e+00,5.6490e+00,-9.1865e-01,1.5958e+00,5.6490e+00,-9.4289e-01,1.6040e+00,5.6490e+00,-9.6827e-01,1.6072e+00,5.6490e+00,-9.9378e-01,1.6053e+00,5.6490e+00,-1.0184e+00,1.5984e+00,5.6490e+00,-1.0412e+00,1.5867e+00,5.6490e+00,-1.0612e+00,1.5708e+00,5.6490e+00,-1.0777e+00,1.5512e+00,5.6490e+00,-1.0899e+00,1.5287e+00,5.6490e+00,-1.0975e+00,1.5043e+00,5.6490e+00,-1.1000e+00,1.4788e+00,5.6490e+00,-1.1000e+00,1.0000e+00,5.6490e+00,-9.7785e-01,1.0000e+00,5.6490e+00,-9.7785e-01,1.4427e+00,5.6490e+00,-9.7743e-01,1.4469e+00,5.6490e+00,-9.7618e-01,1.4509e+00,5.6490e+00,-9.7415e-01,1.4546e+00,5.6490e+00,-9.7142e-01,1.4579e+00,5.6490e+00,-9.6810e-01,1.4605e+00,5.6490e+00,-9.6432e-01,1.4625e+00,5.6490e+00,-9.6024e-01,1.4636e+00,5.6490e+00,-9.5601e-01,1.4639e+00,5.6490e+00,-9.5180e-01,1.4634e+00,5.6490e+00,-9.4779e-01,1.4620e+00,5.6490e+00,-9.4413e-01,1.4599e+00,5.6490e+00,-9.4096e-01,1.4570e+00,5.6490e+00,-5.6824e-01,1.0519e+00,5.6490e+00,-5.4998e-01,1.0331e+00,5.6490e+00,-5.2849e-01,1.0181e+00,5.6490e+00,-5.0455e-01,1.0073e+00,5.6490e+00,-4.7902e-01,1.0013e+00,5.6490e+00,-4.5281e-01,1.0002e+00,5.6490e+00,-4.2686e-01,1.0041e+00,5.6490e+00,-4.0211e-01,1.0127e+00,5.6490e+00,-3.7944e-01,1.0259e+00,5.6490e+00,-3.5966e-01,1.0432e+00,5.6490e+00,-3.4349e-01,1.0638e+00,5.6490e+00,-3.3151e-01,1.0872e+00,5.6490e+00,-3.2414e-01,1.1124e+00,5.6490e+00,-3.2166e-01,1.1385e+00});
			return Coordinate_7_1687_point;
		}

	/** The initialized model object, created within initialize() method. */
	private X3D x3dModel;

	/** 
	 * Provide a 
	 * <a href="https://dzone.com/articles/java-copy-shallow-vs-deep-in-which-you-will-swim" target="_blank">shallow copy</a>
	 * of the X3D model.
	 * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/Core/X3D.html">X3D</a>
	 * @return NistFtc08Asme1Ap242Spri model
	 */
	public X3D getX3dModel()
	{	  
		return x3dModel;
	}
	   
    /** 
	 * Default main() method provided for test purposes, uses CommandLine to set global ConfigurationProperties for this object.
     * @param args array of input parameters, provided as arguments
	 * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/Core/X3D.html#handleArguments-java.lang.String:A-">X3D.handleArguments(args)</a>
	 * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/Core/X3D.html#validationReport--">X3D.validationReport()</a>
     * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/CommandLine.html">CommandLine</a>
     * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/CommandLine.html#USAGE">CommandLine.USAGE</a>
     * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/ConfigurationProperties.html">ConfigurationProperties</a>
     */
    public static void main(String args[])
    {
        X3D thisExampleX3dModel = new NistFtc08Asme1Ap242Spri().getX3dModel();

		boolean hasArguments = (args != null) && (args.length > 0);
		boolean validate = true; // default
		boolean argumentsLoadNewModel = false;
		String  fileName = new String();

		if (args != null)
		{
			for (String arg : args)
			{
				if (arg.toLowerCase().startsWith("-v") || arg.toLowerCase().contains("validate"))
				{
					validate = true; // making sure
				}
				if (arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_X3D) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_CLASSICVRML) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_X3DB) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_VRML97) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_EXI) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_GZIP) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_ZIP) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_HTML) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_XHTML))
				{
					argumentsLoadNewModel = true;
					fileName = arg;
				}
			}
		}
		if      (argumentsLoadNewModel)
			System.out.println("WARNING: \"net.x3djsonld.data.NistFtc08Asme1Ap242Spri\" model invocation is attempting to load file \"" + fileName + "\" instead of simply validating itself... file loading ignored.");
		else if (hasArguments) // if no arguments provided, this method produces usage warning
			thisExampleX3dModel.handleArguments(args);

		if (validate)
		{
			System.out.print("Java program \"net.x3djsonld.data.NistFtc08Asme1Ap242Spri\" self-validation test results: ");
			String validationResults = thisExampleX3dModel.validationReport();
            if (validationResults.startsWith("\n"))
                System.out.println();
			System.out.println(validationResults.trim());
		}
    }
}
