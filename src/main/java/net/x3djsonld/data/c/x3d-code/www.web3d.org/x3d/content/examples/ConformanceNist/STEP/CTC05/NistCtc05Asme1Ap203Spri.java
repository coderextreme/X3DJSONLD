package net.x3djsonld.data;

import org.web3d.x3d.jsail.Core.*;
import org.web3d.x3d.jsail.CADGeometry.*;
import org.web3d.x3d.jsail.EnvironmentalEffects.*;
import org.web3d.x3d.jsail.fields.*;
import org.web3d.x3d.jsail.Lighting.*;
import org.web3d.x3d.jsail.Navigation.*;
import org.web3d.x3d.jsail.Rendering.*;
import org.web3d.x3d.jsail.Shape.*;

// Javadoc annotations follow, see below for source.
/**
 * <p> NIST Product and Manufacturing Information (PMI) Complex Test Case 5. </p>
 <p> Related links: <a href="../../../../STEP/FTC05/NistCtc05Asme1Ap203Spri.java">NistCtc05Asme1Ap203Spri.java</a> source, <a href="../../../../STEP/FTC05/NistCtc05Asme1Ap203SpriIndex.html" target="_top">NistCtc05Asme1Ap203Spri catalog page</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a>, and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;">
        <caption>Scene Meta Information</caption>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="../../../../STEP/FTC05/NistCtc05Asme1Ap203Spri.x3d">NistCtc05Asme1Ap203Spri.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 24 February 2018 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 11 October 2019 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translator </i> </td>
			<td> Vince Marchetti </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Robert Lipman </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> NIST Product and Manufacturing Information (PMI) Complex Test Case 5. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://pages.nist.gov/CAD-PMI-Testing/models.html" target="_blank">https://pages.nist.gov/CAD-PMI-Testing/models.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://en.wikipedia.org/wiki/Product_and_manufacturing_information" target="_blank">https://en.wikipedia.org/wiki/Product_and_manufacturing_information</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project/download" target="_blank">https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project/download</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://s3.amazonaws.com/nist-el/mfg_digitalthread/nist_ftc_09_asme1_rd.pdf" target="_blank">https://s3.amazonaws.com/nist-el/mfg_digitalthread/nist_ftc_09_asme1_rd.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://pages.nist.gov/CAD-PMI-Testing/tessellated-part-geometry.html" target="_blank">https://pages.nist.gov/CAD-PMI-Testing/tessellated-part-geometry.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://pages.nist.gov/CAD-PMI-Testing/graphical-pmi-viewer.html" target="_blank">https://pages.nist.gov/CAD-PMI-Testing/graphical-pmi-viewer.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://pages.nist.gov/CAD-PMI-Testing/ap209-viewer.html" target="_blank">https://pages.nist.gov/CAD-PMI-Testing/ap209-viewer.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.nist.gov/services-resources/software/step-file-analyzer" target="_blank">https://www.nist.gov/services-resources/software/step-file-analyzer</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.nist.gov/publications/guide-nist-pmi-cad-models-and-cad-system-pmi-modeling-capability-verification-testing" target="_blank">https://www.nist.gov/publications/guide-nist-pmi-cad-models-and-cad-system-pmi-modeling-capability-verification-testing</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project" target="_blank">https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> STEP AP242 Project, <a href="http://www.ap242.org" target="_blank">http://www.ap242.org</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> ASME standard Y14.46-2017: Product Definition for Additive Manufacturing </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.asme.org/products/codes-standards/y1446-2017-product-definition-additive" target="_blank">https://www.asme.org/products/codes-standards/y1446-2017-product-definition-additive</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> STEP to X3D conversion code: kshell/step_x3d/branches/basic_cad </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> info </i> </td>
			<td> Correct definition and compliance of this conformance scene is maintained by the Web3D Design Printing and Scanning Working Group, <a href="https://www.web3d.org/working-groups/cad" target="_blank">https://www.web3d.org/working-groups/cad</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/ConformanceNist/STEP/FTC05/NistCtc05Asme1Ap203Spri.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/ConformanceNist/STEP/FTC05/NistCtc05Asme1Ap203Spri.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="../../../../STEP/FTC05/../../license.html">../../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToJava.xslt" target="_blank">X3dToJava.xslt</a>
		stylesheet to create Java source code from an <code>.x3d</code> model.
	</p>

	* @author Robert Lipman
 */

public class NistCtc05Asme1Ap203Spri
{
	/** Default constructor to create this object. */
	public NistCtc05Asme1Ap203Spri ()
	{
	  initialize();
	}

	/** Create and initialize the X3D model for this object. */
	public final void initialize()
	{
  x3dModel = new X3D().setProfile(X3D.PROFILE_CADINTERCHANGE).setVersion(X3D.VERSION_3_3)
  .setHead(new head()
    .addComponent(new component().setName("EnvironmentalEffects").setLevel(1))
    .addComponent(new component().setName("Navigation").setLevel(1))
    .addUnit(new unit().setName("INCH").setCategory("length").setConversionFactor(0.0254))
    .addMeta(new meta().setName(meta.NAME_TITLE      ).setContent("NistCtc05Asme1Ap203Spri.x3d"))
    .addMeta(new meta().setName(meta.NAME_CREATED    ).setContent("24 February 2018"))
    .addMeta(new meta().setName(meta.NAME_CREATED    ).setContent("11 October 2019"))
    .addMeta(new meta().setName(meta.NAME_TRANSLATOR ).setContent("Vince Marchetti"))
    .addMeta(new meta().setName(meta.NAME_CREATOR    ).setContent("Robert Lipman"))
    .addMeta(new meta().setName(meta.NAME_DESCRIPTION).setContent("NIST Product and Manufacturing Information (PMI) Complex Test Case 5."))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://pages.nist.gov/CAD-PMI-Testing/models.html"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://en.wikipedia.org/wiki/Product_and_manufacturing_information"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project/download"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://s3.amazonaws.com/nist-el/mfg_digitalthread/nist_ftc_09_asme1_rd.pdf"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://pages.nist.gov/CAD-PMI-Testing/tessellated-part-geometry.html"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://pages.nist.gov/CAD-PMI-Testing/graphical-pmi-viewer.html"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://pages.nist.gov/CAD-PMI-Testing/ap209-viewer.html"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.nist.gov/services-resources/software/step-file-analyzer"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.nist.gov/publications/guide-nist-pmi-cad-models-and-cad-system-pmi-modeling-capability-verification-testing"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.nist.gov/el/systems-integration-division-73400/mbe-pmi-validation-and-conformance-testing-project"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("STEP AP242 Project, http://www.ap242.org"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("ASME standard Y14.46-2017: Product Definition for Additive Manufacturing"))
    .addMeta(new meta().setName(meta.NAME_REFERENCE  ).setContent("https://www.asme.org/products/codes-standards/y1446-2017-product-definition-additive"))
    .addMeta(new meta().setName(meta.NAME_GENERATOR  ).setContent("STEP to X3D conversion code: kshell/step_x3d/branches/basic_cad"))
    .addMeta(new meta().setName(meta.NAME_GENERATOR  ).setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName(meta.NAME_INFO       ).setContent("Correct definition and compliance of this conformance scene is maintained by the Web3D Design Printing and Scanning Working Group, https://www.web3d.org/working-groups/cad"))
    .addMeta(new meta().setName(meta.NAME_IDENTIFIER ).setContent("https://www.web3d.org/x3d/content/examples/ConformanceNist/STEP/FTC05/NistCtc05Asme1Ap203Spri.x3d"))
    .addMeta(new meta().setName(meta.NAME_LICENSE    ).setContent("../../license.html")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setTitle("NistCtc05Asme1Ap203Spri.x3d"))
    .addChild(new Background().setSkyColor(new MFColor(new double[] {0.094100,0.137300,0.498000}))
      .setMetadata(new MetadataString().setName("color").setReference("http://www.colourlovers.com/color/18237F/tienen_miedo").setValue(new String[] {"tienen miedo"})))
    .addChild(new DirectionalLight().setColor(1.000000,1.000000,1.000000).setDirection(-3.5355e-01,-3.5355e-01,-8.6603e-01))
    .addChild(new Viewpoint().setDescription("Oblique view").setCenterOfRotation(0.0000e+00,0.0000e+00,9.5000e+00).setFieldOfView(1.6628e-01).setOrientation(0.901,0.241,0.361,1.277).setPosition(1.6485e+02,-2.8553e+02,1.4607e+02))
    .addChild(new Viewpoint().setDescription("Top").setCenterOfRotation(0.0000e+00,0.0000e+00,9.5000e+00).setFieldOfView(1.6628e-01).setOrientation(1.000,0.000,0.000,0.000).setPosition(0.0000e+00,0.0000e+00,3.6637e+02))
    .addChild(new Viewpoint().setDescription("Bottom").setCenterOfRotation(0.0000e+00,0.0000e+00,9.5000e+00).setFieldOfView(1.6628e-01).setOrientation(1.000,0.000,0.000,3.142).setPosition(0.0000e+00,-4.3703e-14,-3.4737e+02))
    .addChild(new Viewpoint().setDescription("Right side").setCenterOfRotation(0.0000e+00,0.0000e+00,9.5000e+00).setFieldOfView(1.6628e-01).setOrientation(0.577,0.577,0.577,2.094).setPosition(3.5687e+02,-2.1852e-14,9.5000e+00))
    .addChild(new CADPart().setName("nist_ctc_05_asme1").setBboxCenter(0.000000,0.000000,9.500000).setBboxSize(20.750000,21.953761,19.000000)
      .setMetadata(new MetadataSet().setName("_collection")
        .setMetadata(new MetadataString().setName("version").setValue(new String[] {"#207"}))
        .setMetadata(new MetadataSet().setName("STEP:length_unit")
          .setMetadata(new MetadataString().setName("name").setValue(new String[] {"INCH"}))
          .setMetadata(new MetadataFloat().setName("conversionFactor").setValue(new double[] {0.0254}))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#478"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,37,38,0,38,39,0,39,40,40,41,42,40,42,43,40,43,44,40,44,45,40,45,46,40,46,32,32,33,34,35,36,37,35,37,0,35,0,1,35,1,2,35,2,3,35,3,4,35,4,5,35,5,6,35,6,7,34,35,7,34,7,8,34,8,9,34,9,10,34,10,11,32,34,11,32,11,12,32,12,13,32,13,14,32,14,15,32,15,16,32,16,17,32,17,18,32,18,19,32,19,20,40,32,20,40,20,21,40,21,22,40,22,23,40,23,24,40,24,25,40,25,26,40,26,27,40,27,28,40,28,29,40,29,30,0,40,30}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_43_point())))
          .setAppearance(new Appearance("partcolor")
            .setMaterial(new Material().setAmbientIntensity(0.5).setDiffuseColor(0.651000,0.654900,0.721600)
              .setMetadata(new MetadataString().setName("color").setReference("http://www.colourlovers.com/color/A6A7B8/cool_silver").setValue(new String[] {"cool silver"}))))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#479"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_51_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_51_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#480"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,2,3,1,3,4,1,4,5,1,5,6,1,6,7,1,7,8,1,8,9,1,9,10,1,10,11,0,1,11,0,11,12,0,12,13,0,13,14,0,14,15,0,15,16,0,16,17,0,17,18,0,18,19,20,21,22,19,20,22,0,19,22,0,22,23,43,0,23,23,24,25,23,25,26,23,26,27,43,23,27,43,27,28,43,28,29,43,29,30,43,30,31,43,31,32,43,32,33,43,33,34,43,34,35,43,35,36,43,36,37,43,37,38,43,38,39,43,39,40,43,40,41,43,41,42}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_57_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#481"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {29,0,1,29,1,2,7,8,9,6,7,9,9,10,11,6,9,11,6,11,12,5,6,12,5,12,13,4,5,13,4,13,14,3,4,14,3,14,15,2,3,15,2,15,16,2,16,17,2,17,18,2,18,19,2,19,20,2,20,21,2,21,22,2,22,23,2,23,24,2,24,25,2,25,26,29,2,26,29,26,27,29,27,28}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_63_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#482"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_69_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_69_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#483"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_75_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_75_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#484"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_81_point()))
            .setNormal(new Normal().setVector(getNormal_7_82_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#485"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_88_point()))
            .setNormal(new Normal().setVector(getNormal_7_89_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#486"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_95_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_95_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#487"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {43,0,1,43,1,2,3,4,5,3,5,6,3,6,7,3,7,8,3,8,9,3,9,10,3,10,11,3,11,12,3,12,13,2,3,13,2,13,14,2,14,15,2,15,16,2,16,17,2,17,18,2,18,19,2,19,20,2,20,21,22,23,24,21,22,24,2,21,24,2,24,25,43,2,25,25,26,27,25,27,28,25,28,29,25,29,30,43,25,30,43,30,31,43,31,32,43,32,33,43,33,34,43,34,35,43,35,36,43,36,37,43,37,38,43,38,39,43,39,40,43,40,41,43,41,42}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_101_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#488"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_107_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_107_point()))
            .setNormal(new Normal().setVector(getNormal_7_108_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#489"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {12,34,35,12,35,36,12,36,37,12,37,38,12,38,39,12,39,40,12,40,41,12,41,42,42,43,44,42,44,45,42,45,15,42,15,16,42,16,17,42,17,18,42,18,19,19,20,21,19,21,22,19,22,23,19,23,24,19,24,25,19,25,26,19,26,27,19,27,28,28,29,30,28,30,31,28,31,32,28,32,33,28,33,34,28,34,12,28,12,13,28,13,14,28,14,0,28,0,1,28,1,2,28,2,3,19,28,3,19,3,4,19,4,5,19,5,6,19,6,7,19,7,8,19,8,9,19,9,10,42,19,10,42,10,11,12,42,11}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_114_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#490"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,0,2,3,0,3,4,5,0,4}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.4829e+00,2.7500e+00,1.2500e+00,-1.0375e+01,2.7500e+00,1.2500e+00,-1.0375e+01,2.7500e+00,1.7625e+00,-5.5696e+00,2.7500e+00,1.7625e+00,-5.5257e+00,2.7500e+00,1.7659e+00,-5.4829e+00,2.7500e+00,1.7765e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#491"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {9,3,4,5,6,7,5,7,8,4,5,8,9,4,8,17,10,14,17,14,15,17,15,16}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.0375e+01,1.2601e+00,2.1501e+00,-5.5696e+00,1.2601e+00,2.1501e+00,-5.5696e+00,2.0144e+00,1.9922e+00,-1.0375e+01,2.0144e+00,1.9922e+00,-1.0375e+01,1.2610e+00,2.1500e+00,-6.1215e+00,1.2610e+00,2.1500e+00,-6.1174e+00,1.2601e+00,2.1501e+00,-6.1134e+00,1.2601e+00,2.1501e+00,-5.9747e+00,1.7788e+00,2.0497e+00,-5.8888e+00,2.0144e+00,1.9922e+00,-1.0375e+01,2.0144e+00,1.9922e+00,-5.5696e+00,2.0144e+00,1.9922e+00,-5.5696e+00,2.7500e+00,1.7625e+00,-1.0375e+01,2.7500e+00,1.7625e+00,-5.8888e+00,2.0144e+00,1.9922e+00,-5.7924e+00,2.2763e+00,1.9193e+00,-5.5696e+00,2.7500e+00,1.7625e+00,-1.0375e+01,2.7500e+00,1.7625e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,1.5752e-01,9.8752e-01,0.0000e+00,1.5752e-01,9.8752e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,1.5762e-01,9.8750e-01,0.0000e+00,1.5762e-01,9.8750e-01,0.0000e+00,1.5752e-01,9.8752e-01,0.0000e+00,1.5752e-01,9.8752e-01,0.0000e+00,2.2236e-01,9.7497e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,3.4375e-01,9.3906e-01,0.0000e+00,3.4375e-01,9.3906e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,2.8454e-01,9.5866e-01,0.0000e+00,3.4375e-01,9.3906e-01,0.0000e+00,3.4375e-01,9.3906e-01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#492"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {29,0,1,29,1,2,7,8,9,6,7,9,9,10,11,6,9,11,6,11,12,5,6,12,5,12,13,4,5,13,4,13,14,3,4,14,3,14,15,2,3,15,2,15,16,2,16,17,2,17,18,2,18,19,2,19,20,2,20,21,2,21,22,2,22,23,2,23,24,2,24,25,2,25,26,29,2,26,29,26,27,29,27,28}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_133_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#493"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {7,3,4,4,5,6,7,4,6,17,8,12,17,12,13,13,14,15,13,15,16,17,13,16}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.0375e+01,-2.7500e+00,1.7625e+00,-5.5696e+00,-2.7500e+00,1.7625e+00,-5.5696e+00,-2.0144e+00,1.9922e+00,-1.0375e+01,-2.0144e+00,1.9922e+00,-1.0375e+01,-2.7500e+00,1.7625e+00,-5.5696e+00,-2.7500e+00,1.7625e+00,-5.7924e+00,-2.2763e+00,1.9193e+00,-5.8888e+00,-2.0144e+00,1.9922e+00,-1.0375e+01,-2.0144e+00,1.9922e+00,-5.5696e+00,-2.0144e+00,1.9922e+00,-5.5696e+00,-1.2601e+00,2.1501e+00,-1.0375e+01,-1.2601e+00,2.1501e+00,-5.8888e+00,-2.0144e+00,1.9922e+00,-5.9747e+00,-1.7788e+00,2.0497e+00,-6.1134e+00,-1.2601e+00,2.1501e+00,-6.1174e+00,-1.2601e+00,2.1501e+00,-6.1215e+00,-1.2610e+00,2.1500e+00,-1.0375e+01,-1.2610e+00,2.1500e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,-3.4375e-01,9.3906e-01,0.0000e+00,-3.4375e-01,9.3906e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-3.4375e-01,9.3906e-01,0.0000e+00,-3.4375e-01,9.3906e-01,0.0000e+00,-2.8454e-01,9.5866e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-1.5752e-01,9.8752e-01,0.0000e+00,-1.5752e-01,9.8752e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-2.2236e-01,9.7497e-01,0.0000e+00,-1.5752e-01,9.8752e-01,0.0000e+00,-1.5752e-01,9.8752e-01,0.0000e+00,-1.5762e-01,9.8750e-01,0.0000e+00,-1.5762e-01,9.8750e-01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#494"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {5,0,1,1,2,3,1,3,4,5,1,4}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.0375e+01,-2.7500e+00,1.2500e+00,-5.4829e+00,-2.7500e+00,1.2500e+00,-5.4829e+00,-2.7500e+00,1.7765e+00,-5.5257e+00,-2.7500e+00,1.7659e+00,-5.5696e+00,-2.7500e+00,1.7625e+00,-1.0375e+01,-2.7500e+00,1.7625e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#495"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,0,2,3,0,3,4,5,0,4}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.4829e+00,-2.7500e+00,1.2500e+00,1.0375e+01,-2.7500e+00,1.2500e+00,1.0375e+01,-2.7500e+00,1.7625e+00,5.5696e+00,-2.7500e+00,1.7625e+00,5.5257e+00,-2.7500e+00,1.7659e+00,5.4829e+00,-2.7500e+00,1.7765e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#496"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {7,2,4,7,4,5,7,5,6,17,9,12,13,14,15,13,15,16,12,13,16,17,12,16}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.5696e+00,-2.7500e+00,1.7625e+00,1.0375e+01,-2.7500e+00,1.7625e+00,1.0375e+01,-2.0144e+00,1.9922e+00,5.5696e+00,-2.0144e+00,1.9922e+00,5.8888e+00,-2.0144e+00,1.9922e+00,5.7924e+00,-2.2763e+00,1.9193e+00,5.5696e+00,-2.7500e+00,1.7625e+00,1.0375e+01,-2.7500e+00,1.7625e+00,5.5696e+00,-2.0144e+00,1.9922e+00,1.0375e+01,-2.0144e+00,1.9922e+00,1.0375e+01,-1.2601e+00,2.1501e+00,5.5696e+00,-1.2601e+00,2.1501e+00,1.0375e+01,-1.2610e+00,2.1500e+00,6.1215e+00,-1.2610e+00,2.1500e+00,6.1174e+00,-1.2601e+00,2.1501e+00,6.1134e+00,-1.2601e+00,2.1501e+00,5.9747e+00,-1.7788e+00,2.0497e+00,5.8888e+00,-2.0144e+00,1.9922e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,-3.4375e-01,9.3906e-01,0.0000e+00,-3.4375e-01,9.3906e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-2.8454e-01,9.5866e-01,0.0000e+00,-3.4375e-01,9.3906e-01,0.0000e+00,-3.4375e-01,9.3906e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-2.5180e-01,9.6778e-01,0.0000e+00,-1.5752e-01,9.8752e-01,0.0000e+00,-1.5752e-01,9.8752e-01,0.0000e+00,-1.5762e-01,9.8750e-01,0.0000e+00,-1.5762e-01,9.8750e-01,0.0000e+00,-1.5752e-01,9.8752e-01,0.0000e+00,-1.5752e-01,9.8752e-01,0.0000e+00,-2.2236e-01,9.7497e-01,0.0000e+00,-2.5180e-01,9.6778e-01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#497"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {9,2,4,9,4,5,5,6,7,5,7,8,9,5,8,17,11,14,14,15,16,17,14,16}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {5.5696e+00,1.2601e+00,2.1501e+00,1.0375e+01,1.2601e+00,2.1501e+00,1.0375e+01,2.0144e+00,1.9922e+00,5.5696e+00,2.0144e+00,1.9922e+00,5.8888e+00,2.0144e+00,1.9922e+00,5.9747e+00,1.7788e+00,2.0497e+00,6.1134e+00,1.2601e+00,2.1501e+00,6.1174e+00,1.2601e+00,2.1501e+00,6.1215e+00,1.2610e+00,2.1500e+00,1.0375e+01,1.2610e+00,2.1500e+00,5.5696e+00,2.0144e+00,1.9922e+00,1.0375e+01,2.0144e+00,1.9922e+00,1.0375e+01,2.7500e+00,1.7625e+00,5.5696e+00,2.7500e+00,1.7625e+00,1.0375e+01,2.7500e+00,1.7625e+00,5.5696e+00,2.7500e+00,1.7625e+00,5.7924e+00,2.2763e+00,1.9193e+00,5.8888e+00,2.0144e+00,1.9922e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,1.5752e-01,9.8752e-01,0.0000e+00,1.5752e-01,9.8752e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,2.2236e-01,9.7497e-01,0.0000e+00,1.5752e-01,9.8752e-01,0.0000e+00,1.5752e-01,9.8752e-01,0.0000e+00,1.5762e-01,9.8750e-01,0.0000e+00,1.5762e-01,9.8750e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,2.5180e-01,9.6778e-01,0.0000e+00,3.4375e-01,9.3906e-01,0.0000e+00,3.4375e-01,9.3906e-01,0.0000e+00,3.4375e-01,9.3906e-01,0.0000e+00,3.4375e-01,9.3906e-01,0.0000e+00,2.8454e-01,9.5866e-01,0.0000e+00,2.5180e-01,9.6778e-01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#498"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {5,0,1,1,2,3,1,3,4,5,1,4}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.0375e+01,2.7500e+00,1.2500e+00,5.4829e+00,2.7500e+00,1.2500e+00,5.4829e+00,2.7500e+00,1.7765e+00,5.5257e+00,2.7500e+00,1.7659e+00,5.5696e+00,2.7500e+00,1.7625e+00,1.0375e+01,2.7500e+00,1.7625e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#499"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.0375e+01,-7.5000e-01,2.1500e+00,-8.0000e+00,-7.5000e-01,2.1500e+00,-8.0000e+00,-7.5000e-01,1.8000e+00,-1.0375e+01,-7.5000e-01,2.1500e+00,-8.0000e+00,-7.5000e-01,1.8000e+00,-1.0375e+01,-7.5000e-01,1.8000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#500"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-1.0375e+01,7.5000e-01,1.8000e+00,-8.0000e+00,7.5000e-01,1.8000e+00,-8.0000e+00,7.5000e-01,2.1500e+00,-1.0375e+01,7.5000e-01,1.8000e+00,-8.0000e+00,7.5000e-01,2.1500e+00,-1.0375e+01,7.5000e-01,2.1500e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#501"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {47,0,1,47,1,2,47,2,3,47,3,4,47,4,5,47,5,6,47,6,7,22,23,65,21,22,65,20,21,65,19,20,65,18,19,65,17,18,65,17,65,66,16,17,66,16,66,67,15,16,67,15,67,68,14,15,68,14,68,69,13,14,69,13,69,70,12,13,70,12,70,71,11,12,71,11,71,72,10,11,72,10,72,73,9,10,73,9,73,74,8,9,74,8,74,75,7,8,75,47,7,75,47,75,76,47,76,77,47,77,78,47,78,79,47,79,80,47,80,81,64,65,23,64,23,24,64,24,25,64,25,26,64,26,27,64,27,28,64,28,29,64,29,30,64,30,0,0,47,48,0,48,49,0,49,50,0,50,51,0,51,52,0,52,53,64,0,53,64,53,54,64,54,55,64,55,56,64,56,57,64,57,58,64,58,59,82,64,59,82,59,60,82,60,61,82,61,62,82,62,32,82,32,33,82,33,34,82,34,35,82,35,36,82,36,37,82,37,38,81,82,38,81,38,39,81,39,40,81,40,41,81,41,42,81,42,43,81,43,44,81,44,45,81,45,46,47,81,46}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_190_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#502"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_196_point()))
            .setNormal(new Normal().setVector(getNormal_7_197_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#503"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.0375e+01,7.5000e-01,1.8000e+00,1.0375e+01,7.5000e-01,2.1500e+00,8.0000e+00,7.5000e-01,2.1500e+00,1.0375e+01,7.5000e-01,1.8000e+00,8.0000e+00,7.5000e-01,2.1500e+00,8.0000e+00,7.5000e-01,1.8000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#504"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.0375e+01,-7.5000e-01,2.1500e+00,1.0375e+01,-7.5000e-01,1.8000e+00,8.0000e+00,-7.5000e-01,1.8000e+00,1.0375e+01,-7.5000e-01,2.1500e+00,8.0000e+00,-7.5000e-01,1.8000e+00,8.0000e+00,-7.5000e-01,2.1500e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#505"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,47,48,0,48,49,0,49,50,0,50,51,0,51,52,0,52,53,0,53,54,0,54,55,62,32,72,61,62,72,60,61,72,59,60,72,58,59,72,57,58,72,56,57,72,56,72,73,55,56,73,55,73,74,0,55,74,0,74,75,0,75,76,0,76,77,0,77,78,0,78,79,0,79,80,82,64,65,82,65,66,82,66,67,82,67,68,82,68,69,82,69,70,82,70,71,82,71,72,72,32,33,72,33,34,72,34,35,72,35,36,72,36,37,72,37,38,72,38,39,82,72,39,82,39,40,82,40,41,82,41,42,82,42,43,82,43,44,82,44,45,82,45,46,82,46,47,47,0,1,47,1,2,47,2,3,47,3,4,47,4,5,82,47,5,82,5,6,82,6,7,82,7,8,82,8,9,82,9,10,82,10,11,81,82,11,81,11,12,81,12,13,81,13,14,81,14,15,81,15,16,81,16,17,81,17,18,81,18,19,81,19,20,81,20,21,80,81,21,80,21,22,80,22,23,80,23,24,80,24,25,80,25,26,80,26,27,80,27,28,80,28,29,80,29,30,0,80,30}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_215_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#506"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_221_point()))
            .setNormal(new Normal().setVector(getNormal_7_222_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#507"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_228_point()))
            .setNormal(new Normal().setVector(getNormal_7_229_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#508"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_235_point()))
            .setNormal(new Normal().setVector(getNormal_7_236_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#509"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_242_point()))
            .setNormal(new Normal().setVector(getNormal_7_243_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#510"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_249_point()))
            .setNormal(new Normal().setVector(getNormal_7_250_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#511"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_256_point()))
            .setNormal(new Normal().setVector(getNormal_7_257_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#512"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_263_point()))
            .setNormal(new Normal().setVector(getNormal_7_264_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#513"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_270_point()))
            .setNormal(new Normal().setVector(getNormal_7_271_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#514"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_277_point()))
            .setNormal(new Normal().setVector(getNormal_7_278_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#515"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_284_point()))
            .setNormal(new Normal().setVector(getNormal_7_285_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#516"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,0,2,3,0,3,4,0,4,5,0,5,6,0,6,7,0,7,8,0,8,9,0,9,10,0,10,11,0,11,12,0,12,13,0,13,14,0,14,15,0,15,16,0,16,17,0,17,18,0,18,19,0,19,20,0,20,21,0,21,22,0,22,23,0,23,24,0,24,25,0,25,26,0,26,27,0,27,28,0,28,29,0,29,30,0,30,31,0,31,32,0,32,1}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_291_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#517"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_297_point()))
            .setNormal(new Normal().setVector(getNormal_7_298_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#518"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_304_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#519"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_310_point()))
            .setNormal(new Normal().setVector(getNormal_7_311_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#520"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_317_point()))
            .setNormal(new Normal().setVector(getNormal_7_318_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#521"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_324_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#522"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_330_point()))
            .setNormal(new Normal().setVector(getNormal_7_331_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#523"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_337_point()))
            .setNormal(new Normal().setVector(getNormal_7_338_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#524"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_344_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#525"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_350_point()))
            .setNormal(new Normal().setVector(getNormal_7_351_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#526"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_357_point()))
            .setNormal(new Normal().setVector(getNormal_7_358_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#527"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_364_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#528"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_370_point()))
            .setNormal(new Normal().setVector(getNormal_7_371_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#529"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_377_point()))
            .setNormal(new Normal().setVector(getNormal_7_378_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#530"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_384_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#531"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_390_point()))
            .setNormal(new Normal().setVector(getNormal_7_391_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#532"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_397_point()))
            .setNormal(new Normal().setVector(getNormal_7_398_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#533"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_404_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#534"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_410_point()))
            .setNormal(new Normal().setVector(getNormal_7_411_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#535"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_417_point()))
            .setNormal(new Normal().setVector(getNormal_7_418_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#536"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_424_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#537"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_430_point()))
            .setNormal(new Normal().setVector(getNormal_7_431_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#538"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_437_point()))
            .setNormal(new Normal().setVector(getNormal_7_438_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#539"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_444_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#540"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_450_point()))
            .setNormal(new Normal().setVector(getNormal_7_451_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#541"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_457_point()))
            .setNormal(new Normal().setVector(getNormal_7_458_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#542"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_464_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#543"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_470_point()))
            .setNormal(new Normal().setVector(getNormal_7_471_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#544"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_477_point()))
            .setNormal(new Normal().setVector(getNormal_7_478_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#545"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,32,33,0,33,1,1,33,34,1,34,2,2,34,35,2,35,3,3,35,36,3,36,4,4,36,37,4,37,5,5,37,38,5,38,6,6,38,39,6,39,7,7,39,40,7,40,8,8,40,41,8,41,9,9,41,42,9,42,10,10,42,43,10,43,11,11,43,44,11,44,12,12,44,45,12,45,13,13,45,46,13,46,14,14,46,47,14,47,15,15,47,48,15,48,16,16,48,49,16,49,17,17,49,50,17,50,18,18,50,51,18,51,19,19,51,52,19,52,20,20,52,53,20,53,21,21,53,54,21,54,22,22,54,55,22,55,23,23,55,56,23,56,24,24,56,57,24,57,25,25,57,58,25,58,26,26,58,59,26,59,27,27,59,60,27,60,28,28,60,61,28,61,29,29,61,62,29,62,30,30,62,63,30,63,31,31,63,32,31,32,0}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_484_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#546"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_490_point()))
            .setNormal(new Normal().setVector(getNormal_7_491_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#547"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,2,3,0,1,3,7,0,3,7,3,4,7,4,5,7,5,6}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-3.5000e+00,-3.2746e+00,5.2500e+00,-3.5015e+00,-3.2806e+00,5.2228e+00,-3.5059e+00,-3.2866e+00,5.1959e+00,3.5059e+00,-3.2866e+00,5.1959e+00,3.5015e+00,-3.2806e+00,5.2228e+00,3.5000e+00,-3.2746e+00,5.2500e+00,3.5000e+00,-1.9998e+00,1.1000e+01,-3.5000e+00,-1.9998e+00,1.1000e+01,-3.5000e+00,-3.2746e+00,5.2500e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#548"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {102,74,75,102,75,76,102,76,77,102,77,78,102,78,79,102,79,80,102,80,81,92,62,47,91,92,47,90,91,47,89,90,47,88,89,47,87,88,47,86,87,47,86,47,48,86,48,49,86,49,50,86,50,51,86,51,52,85,86,52,85,52,53,85,53,54,61,31,16,60,61,16,59,60,16,58,59,16,57,58,16,56,57,16,55,56,16,55,16,17,55,17,18,55,18,19,55,19,20,55,20,21,54,55,21,54,21,22,54,22,23,85,54,23,15,16,31,14,15,31,13,14,31,12,13,31,11,12,31,10,11,31,9,10,31,9,31,32,9,32,33,8,9,33,8,33,34,8,34,35,8,35,36,8,36,37,8,37,38,8,38,39,46,47,62,45,46,62,44,45,62,43,44,62,42,43,62,41,42,62,40,41,62,40,62,63,40,63,64,39,40,64,39,64,65,39,65,66,39,66,67,39,67,68,39,68,69,39,69,70,73,74,102,72,73,102,71,72,102,70,71,102,39,70,102,8,39,102,7,8,102,7,102,103,6,7,103,5,6,103,4,5,103,3,4,103,2,3,103,1,2,103,0,1,103,30,0,103,29,30,103,28,29,103,27,28,103,26,27,103,26,103,104,25,26,104,24,25,104,23,24,104,85,23,104,84,85,104,84,104,93,83,84,93,82,83,93,81,82,93,102,81,93,93,94,95,93,95,96,93,96,97,93,97,98,93,98,99,93,99,100,93,100,101,102,93,101}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_503_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#549"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-2.5000e+00,2.3301e+00,5.2500e+00,-2.5000e+00,2.3301e+00,1.1000e+01,-1.9134e+00,2.6194e+00,5.2500e+00,-1.9134e+00,2.6194e+00,1.1000e+01,-1.2941e+00,2.8296e+00,5.2500e+00,-1.2941e+00,2.8296e+00,1.1000e+01,-6.5263e-01,2.9572e+00,5.2500e+00,-6.5263e-01,2.9572e+00,1.1000e+01,-6.1232e-16,3.0000e+00,5.2500e+00,-6.1232e-16,3.0000e+00,1.1000e+01,6.5263e-01,2.9572e+00,5.2500e+00,6.5263e-01,2.9572e+00,1.1000e+01,1.2941e+00,2.8296e+00,5.2500e+00,1.2941e+00,2.8296e+00,1.1000e+01,1.9134e+00,2.6194e+00,5.2500e+00,1.9134e+00,2.6194e+00,1.1000e+01,2.5000e+00,2.3301e+00,5.2500e+00,2.5000e+00,2.3301e+00,1.1000e+01})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#550"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45,46,44,45,46,45,47,48,46,47,48,47,49,50,48,49,50,49,51,52,50,51,52,51,53,54,52,53,54,53,55,56,54,55,56,55,57,58,56,57,58,57,59,60,58,59,60,59,61,62,60,61,62,61,63,64,62,63,64,63,65,66,64,65,66,65,67,68,66,67,68,67,69,70,68,69,70,69,71,72,70,71,72,71,73,74,72,73,74,73,75,76,74,75,76,75,77,78,76,77,78,77,79,80,78,79,80,79,81,82,80,81,82,81,83,84,82,83,84,83,85,86,84,85,86,85,87,88,86,87,88,87,89,90,88,89,90,89,91,92,90,91,92,91,93,94,92,93,94,93,95,0,94,95,0,95,1}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_516_point()))
            .setNormal(new Normal().setVector(getNormal_7_517_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#551"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,0,2,3,0,3,4,0,4,5,0,5,6,0,6,7,0,7,8,0,8,9,0,9,10,0,10,11,0,11,12,0,12,13,0,13,14,0,14,15,0,15,16,0,16,17,0,17,18,0,18,19,0,19,20,0,20,21,0,21,22,0,22,23,0,23,24,0,24,25,0,25,26,0,26,27,0,27,28,0,28,29,0,29,30,0,30,31,0,31,32,0,32,1}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_523_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#552"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_529_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_529_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#553"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {3.5000e+00,4.8727e-02,1.1000e+01,3.5000e+00,-1.2140e+00,5.3041e+00,2.5000e+00,-1.2140e+00,5.3041e+00,3.5000e+00,4.8727e-02,1.1000e+01,2.5000e+00,-1.2140e+00,5.3041e+00,2.5000e+00,4.8727e-02,1.1000e+01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#554"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-2.5000e+00,4.8727e-02,1.1000e+01,-2.5000e+00,-1.2140e+00,5.3041e+00,-3.5000e+00,-1.2140e+00,5.3041e+00,-2.5000e+00,4.8727e-02,1.1000e+01,-3.5000e+00,-1.2140e+00,5.3041e+00,-3.5000e+00,4.8727e-02,1.1000e+01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#555"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {11,0,1,11,1,2,11,2,3,11,3,4,11,4,5,11,5,6,11,6,7,11,7,8,11,8,9,11,9,10}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-2.5000e+00,-1.2199e+00,5.2500e+00,-2.5000e+00,-1.2199e+00,5.2568e+00,-2.5000e+00,-1.2196e+00,5.2636e+00,-2.5000e+00,-1.2191e+00,5.2704e+00,-2.5000e+00,-1.2185e+00,5.2772e+00,-2.5000e+00,-1.2176e+00,5.2840e+00,-2.5000e+00,-1.2166e+00,5.2907e+00,-2.5000e+00,-1.2154e+00,5.2974e+00,-2.5000e+00,-1.2140e+00,5.3041e+00,-2.5000e+00,4.8727e-02,1.1000e+01,-2.5000e+00,2.3301e+00,1.1000e+01,-2.5000e+00,2.3301e+00,5.2500e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#556"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_553_point()))
            .setNormal(new Normal().setVector(getNormal_7_554_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#557"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_560_point()))
            .setNormal(new Normal().setVector(getNormal_7_561_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#558"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_567_point()))
            .setNormal(new Normal().setVector(getNormal_7_568_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#559"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_574_point()))
            .setNormal(new Normal().setVector(getNormal_7_575_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#560"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_581_point()))
            .setNormal(new Normal().setVector(getNormal_7_582_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#561"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_588_point()))
            .setNormal(new Normal().setVector(getNormal_7_589_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#562"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_595_point()))
            .setNormal(new Normal().setVector(getNormal_7_596_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#563"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_602_point()))
            .setNormal(new Normal().setVector(getNormal_7_603_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#564"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_609_point()))
            .setNormal(new Normal().setVector(getNormal_7_610_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#565"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_616_point()))
            .setNormal(new Normal().setVector(getNormal_7_617_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#566"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {48,0,1,49,1,2,50,2,3,51,3,4,52,4,5,53,5,6,54,6,7,55,7,8,56,8,9,57,9,10,58,10,11,59,11,12,60,12,13,61,13,14,62,14,15,63,15,16,64,16,17,65,17,18,66,18,19,67,19,20,68,20,21,69,21,22,70,22,23,71,23,24,72,24,25,73,25,26,74,26,27,75,27,28,76,28,29,77,29,30,78,30,31,79,31,32,80,32,33,81,33,34,82,34,35,83,35,36,84,36,37,85,37,38,86,38,39,87,39,40,88,40,41,89,41,42,90,42,43,91,43,44,92,44,45,93,45,46,94,46,47,95,47,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_623_point()))
            .setNormal(new Normal().setVector(getNormal_7_624_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#567"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_630_point()))
            .setNormal(new Normal().setVector(getNormal_7_631_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#568"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45,46,44,45,46,45,47,48,46,47,48,47,49,50,48,49,50,49,51,52,50,51,52,51,53,54,52,53,54,53,55,56,54,55,56,55,57,58,56,57,58,57,59,60,58,59,60,59,61,62,60,61,62,61,63,64,62,63,64,63,65,66,64,65,66,65,67,68,66,67,68,67,69,70,68,69,70,69,71,72,70,71,72,71,73,74,72,73,74,73,75,76,74,75,76,75,77,78,76,77,78,77,79,80,78,79,80,79,81,82,80,81,82,81,83,84,82,83,84,83,85,86,84,85,86,85,87,88,86,87,88,87,89,90,88,89,90,89,91,92,90,91,92,91,93,94,92,93,94,93,95,0,94,95,0,95,1}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_637_point()))
            .setNormal(new Normal().setVector(getNormal_7_638_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#569"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45,46,44,45,46,45,47,48,46,47,48,47,49,50,48,49,50,49,51,52,50,51,52,51,53,54,52,53,54,53,55,56,54,55,56,55,57,58,56,57,58,57,59,60,58,59,60,59,61,62,60,61,62,61,63,64,62,63,64,63,65,66,64,65,66,65,67,68,66,67,68,67,69,70,68,69,70,69,71,72,70,71,72,71,73,74,72,73,74,73,75,76,74,75,76,75,77,78,76,77,78,77,79,80,78,79,80,79,81,82,80,81,82,81,83,84,82,83,84,83,85,86,84,85,86,85,87,88,86,87,88,87,89,90,88,89,90,89,91,92,90,91,92,91,93,94,92,93,94,93,95,0,94,95,0,95,1}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_644_point()))
            .setNormal(new Normal().setVector(getNormal_7_645_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#570"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50,51,50,52,53,51,52,53,52,54,55,53,54,55,54,56,57,55,56,57,56,58,59,57,58,59,58,60,61,59,60,61,60,62,63,61,62,63,62,64,65,63,64,65,64,66,67,65,66,67,66,68,69,67,68,69,68,70,71,69,70,71,70,72,73,71,72,73,72,74,75,73,74,75,74,76,77,75,76,77,76,78,79,77,78,79,78,80,81,79,80,81,80,82,83,81,82,83,82,84,85,83,84,85,84,86,87,85,86,87,86,88,89,87,88,89,88,90,91,89,90,91,90,92,93,91,92,93,92,94,95,93,94,95,94,0,1,95,0}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_651_point()))
            .setNormal(new Normal().setVector(getNormal_7_652_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#571"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {7,1,2,7,2,4,7,4,5,7,5,6,15,9,10,10,12,13,15,10,13,15,13,14,23,17,18,18,20,21,18,21,22,23,18,22,31,25,26,26,28,29,26,29,30,31,26,30,39,33,34,34,36,37,34,37,38,39,34,38,47,41,42,47,42,44,44,45,46,47,44,46,55,51,48,55,48,52,55,52,53,55,53,54,63,59,56,56,60,61,56,61,62,63,56,62,71,67,64,64,68,69,64,69,70,71,64,70,79,75,72,72,76,77,72,77,78,79,72,78,86,83,80,80,84,85,86,80,85,95,90,87,95,87,91,95,91,92,95,92,93,95,93,94}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_658_point()))
            .setNormal(new Normal().setVector(getNormal_7_659_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#572"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_665_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_665_point()))
            .setNormal(new Normal().setVector(getNormal_7_666_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#573"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {4,3,6,5,4,6,7,10,13,12,11,7,12,7,13,14,17,20,19,18,14,19,14,20,21,24,27,26,25,21,26,21,27,28,31,34,33,32,28,33,28,34,35,38,41,40,39,35,40,35,41,42,45,48,47,46,42,47,42,48,49,52,55,54,53,49,54,49,55,60,56,62,61,60,62}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_672_point()))
            .setNormal(new Normal().setVector(getNormal_7_673_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#574"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.4829e+00,2.7500e+00,1.2500e+00,-1.0375e+01,2.7500e+00,1.2500e+00,-5.4829e+00,2.7521e+00,1.2174e+00,-1.0375e+01,2.7521e+00,1.2174e+00,-5.4829e+00,2.7585e+00,1.1853e+00,-1.0375e+01,2.7585e+00,1.1853e+00,-5.4829e+00,2.7690e+00,1.1543e+00,-1.0375e+01,2.7690e+00,1.1543e+00,-5.4829e+00,2.7835e+00,1.1250e+00,-1.0375e+01,2.7835e+00,1.1250e+00,-5.4829e+00,2.8017e+00,1.0978e+00,-1.0375e+01,2.8017e+00,1.0978e+00,-5.4829e+00,2.8232e+00,1.0732e+00,-1.0375e+01,2.8232e+00,1.0732e+00,-5.4829e+00,2.8478e+00,1.0517e+00,-1.0375e+01,2.8478e+00,1.0517e+00,-5.4829e+00,2.8750e+00,1.0335e+00,-1.0375e+01,2.8750e+00,1.0335e+00,-5.4829e+00,2.9043e+00,1.0190e+00,-1.0375e+01,2.9043e+00,1.0190e+00,-5.4829e+00,2.9353e+00,1.0085e+00,-1.0375e+01,2.9353e+00,1.0085e+00,-5.4829e+00,2.9674e+00,1.0021e+00,-1.0375e+01,2.9674e+00,1.0021e+00,-5.4829e+00,3.0000e+00,1.0000e+00,-1.0375e+01,3.0000e+00,1.0000e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#575"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {7,1,2,7,2,4,7,4,5,7,5,6,15,9,10,10,12,13,10,13,14,15,10,14,23,17,18,18,20,21,18,21,22,23,18,22,31,25,26,26,28,29,26,29,30,31,26,30,39,33,34,34,36,37,34,37,38,39,34,38,47,41,42,47,42,44,47,44,45,47,45,46,56,51,48,56,48,52,56,52,53,56,53,54,56,54,55,63,60,57,57,61,62,63,57,62,71,67,64,64,68,69,64,69,70,71,64,70,79,75,72,72,76,77,72,77,78,79,72,78,87,83,80,80,84,85,87,80,85,87,85,86,95,91,88,95,88,92,95,92,93,95,93,94}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_686_point()))
            .setNormal(new Normal().setVector(getNormal_7_687_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#576"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,56,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,56,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,56,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,56,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38,40,32,56,40,33,32,41,33,40,41,34,33,42,34,41,42,35,34,43,35,42,43,36,35,44,36,43,44,37,36,45,37,44,45,38,37,46,38,45,46,39,38,47,39,46,48,40,56,48,41,40,49,41,48,49,42,41,50,42,49,50,43,42,51,43,50,51,44,43,52,44,51,52,45,44,53,45,52,53,46,45,54,46,53,54,47,46,55,47,54}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_693_point()))
            .setNormal(new Normal().setVector(getNormal_7_694_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#577"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {-5.4829e+00,-3.0000e+00,1.0000e+00,-1.0375e+01,-3.0000e+00,1.0000e+00,-5.4829e+00,-2.9674e+00,1.0021e+00,-1.0375e+01,-2.9674e+00,1.0021e+00,-5.4829e+00,-2.9353e+00,1.0085e+00,-1.0375e+01,-2.9353e+00,1.0085e+00,-5.4829e+00,-2.9043e+00,1.0190e+00,-1.0375e+01,-2.9043e+00,1.0190e+00,-5.4829e+00,-2.8750e+00,1.0335e+00,-1.0375e+01,-2.8750e+00,1.0335e+00,-5.4829e+00,-2.8478e+00,1.0517e+00,-1.0375e+01,-2.8478e+00,1.0517e+00,-5.4829e+00,-2.8232e+00,1.0732e+00,-1.0375e+01,-2.8232e+00,1.0732e+00,-5.4829e+00,-2.8017e+00,1.0978e+00,-1.0375e+01,-2.8017e+00,1.0978e+00,-5.4829e+00,-2.7835e+00,1.1250e+00,-1.0375e+01,-2.7835e+00,1.1250e+00,-5.4829e+00,-2.7690e+00,1.1543e+00,-1.0375e+01,-2.7690e+00,1.1543e+00,-5.4829e+00,-2.7585e+00,1.1853e+00,-1.0375e+01,-2.7585e+00,1.1853e+00,-5.4829e+00,-2.7521e+00,1.2174e+00,-1.0375e+01,-2.7521e+00,1.2174e+00,-5.4829e+00,-2.7500e+00,1.2500e+00,-1.0375e+01,-2.7500e+00,1.2500e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-1.0000e+00,1.8370e-16,-0.0000e+00,-1.0000e+00,1.8370e-16}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#578"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {4,3,6,5,4,6,7,10,13,12,11,7,12,7,13,14,17,20,19,18,14,19,14,20,21,24,27,26,25,21,26,21,27,28,31,34,33,32,28,33,28,34,35,38,41,40,39,35,40,35,41,42,45,48,47,46,42,47,42,48,49,52,55,54,53,49,54,49,55,60,56,62,61,60,62}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_707_point()))
            .setNormal(new Normal().setVector(getNormal_7_708_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#579"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_714_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_714_point()))
            .setNormal(new Normal().setVector(getNormal_7_715_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#580"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.0375e+01,2.7500e+00,1.2500e+00,5.4829e+00,2.7500e+00,1.2500e+00,1.0375e+01,2.7521e+00,1.2174e+00,5.4829e+00,2.7521e+00,1.2174e+00,1.0375e+01,2.7585e+00,1.1853e+00,5.4829e+00,2.7585e+00,1.1853e+00,1.0375e+01,2.7690e+00,1.1543e+00,5.4829e+00,2.7690e+00,1.1543e+00,1.0375e+01,2.7835e+00,1.1250e+00,5.4829e+00,2.7835e+00,1.1250e+00,1.0375e+01,2.8017e+00,1.0978e+00,5.4829e+00,2.8017e+00,1.0978e+00,1.0375e+01,2.8232e+00,1.0732e+00,5.4829e+00,2.8232e+00,1.0732e+00,1.0375e+01,2.8478e+00,1.0517e+00,5.4829e+00,2.8478e+00,1.0517e+00,1.0375e+01,2.8750e+00,1.0335e+00,5.4829e+00,2.8750e+00,1.0335e+00,1.0375e+01,2.9043e+00,1.0190e+00,5.4829e+00,2.9043e+00,1.0190e+00,1.0375e+01,2.9353e+00,1.0085e+00,5.4829e+00,2.9353e+00,1.0085e+00,1.0375e+01,2.9674e+00,1.0021e+00,5.4829e+00,2.9674e+00,1.0021e+00,1.0375e+01,3.0000e+00,1.0000e+00,5.4829e+00,3.0000e+00,1.0000e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#581"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,56,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,56,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,56,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,56,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38,40,32,56,40,33,32,41,33,40,41,34,33,42,34,41,42,35,34,43,35,42,43,36,35,44,36,43,44,37,36,45,37,44,45,38,37,46,38,45,46,39,38,47,39,46,48,40,56,48,41,40,49,41,48,49,42,41,50,42,49,50,43,42,51,43,50,51,44,43,52,44,51,52,45,44,53,45,52,53,46,45,54,46,53,54,47,46,55,47,54}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_728_point()))
            .setNormal(new Normal().setVector(getNormal_7_729_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#582"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,56,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,56,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,56,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,56,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38,40,32,56,40,33,32,41,33,40,41,34,33,42,34,41,42,35,34,43,35,42,43,36,35,44,36,43,44,37,36,45,37,44,45,38,37,46,38,45,46,39,38,47,39,46,48,40,56,48,41,40,49,41,48,49,42,41,50,42,49,50,43,42,51,43,50,51,44,43,52,44,51,52,45,44,53,45,52,53,46,45,54,46,53,54,47,46,55,47,54}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_735_point()))
            .setNormal(new Normal().setVector(getNormal_7_736_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#583"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {1.0375e+01,-3.0000e+00,1.0000e+00,5.4829e+00,-3.0000e+00,1.0000e+00,1.0375e+01,-2.9674e+00,1.0021e+00,5.4829e+00,-2.9674e+00,1.0021e+00,1.0375e+01,-2.9353e+00,1.0085e+00,5.4829e+00,-2.9353e+00,1.0085e+00,1.0375e+01,-2.9043e+00,1.0190e+00,5.4829e+00,-2.9043e+00,1.0190e+00,1.0375e+01,-2.8750e+00,1.0335e+00,5.4829e+00,-2.8750e+00,1.0335e+00,1.0375e+01,-2.8478e+00,1.0517e+00,5.4829e+00,-2.8478e+00,1.0517e+00,1.0375e+01,-2.8232e+00,1.0732e+00,5.4829e+00,-2.8232e+00,1.0732e+00,1.0375e+01,-2.8017e+00,1.0978e+00,5.4829e+00,-2.8017e+00,1.0978e+00,1.0375e+01,-2.7835e+00,1.1250e+00,5.4829e+00,-2.7835e+00,1.1250e+00,1.0375e+01,-2.7690e+00,1.1543e+00,5.4829e+00,-2.7690e+00,1.1543e+00,1.0375e+01,-2.7585e+00,1.1853e+00,5.4829e+00,-2.7585e+00,1.1853e+00,1.0375e+01,-2.7521e+00,1.2174e+00,5.4829e+00,-2.7521e+00,1.2174e+00,1.0375e+01,-2.7500e+00,1.2500e+00,5.4829e+00,-2.7500e+00,1.2500e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#584"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_749_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_749_point()))
            .setNormal(new Normal().setVector(getNormal_7_750_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#585"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {4,3,6,5,4,6,7,10,13,12,11,7,12,7,13,14,17,20,19,18,14,19,14,20,21,24,27,26,25,21,26,21,27,28,31,34,33,32,28,33,28,34,35,38,41,40,39,35,40,35,41,42,45,48,47,46,42,47,42,48,49,52,55,54,53,49,54,49,55,60,56,62,61,60,62}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_756_point()))
            .setNormal(new Normal().setVector(getNormal_7_757_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#586"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {8,0,56,8,1,0,9,1,8,9,2,1,10,2,9,10,3,2,11,3,10,11,4,3,12,4,11,12,5,4,13,5,12,13,6,5,14,6,13,14,7,6,15,7,14,16,8,56,16,9,8,17,9,16,17,10,9,18,10,17,18,11,10,19,11,18,19,12,11,20,12,19,20,13,12,21,13,20,21,14,13,22,14,21,22,15,14,23,15,22,24,16,56,24,17,16,25,17,24,25,18,17,26,18,25,26,19,18,27,19,26,27,20,19,28,20,27,28,21,20,29,21,28,29,22,21,30,22,29,30,23,22,31,23,30,32,24,56,32,25,24,33,25,32,33,26,25,34,26,33,34,27,26,35,27,34,35,28,27,36,28,35,36,29,28,37,29,36,37,30,29,38,30,37,38,31,30,39,31,38,40,32,56,40,33,32,41,33,40,41,34,33,42,34,41,42,35,34,43,35,42,43,36,35,44,36,43,44,37,36,45,37,44,45,38,37,46,38,45,46,39,38,47,39,46,48,40,56,48,41,40,49,41,48,49,42,41,50,42,49,50,43,42,51,43,50,51,44,43,52,44,51,52,45,44,53,45,52,53,46,45,54,46,53,54,47,46,55,47,54}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_763_point()))
            .setNormal(new Normal().setVector(getNormal_7_764_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#587"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {7,1,2,7,2,4,7,4,5,7,5,6,15,9,10,10,12,13,10,13,14,15,10,14,23,17,18,18,20,21,18,21,22,23,18,22,31,25,26,26,28,29,26,29,30,31,26,30,39,33,34,34,36,37,34,37,38,39,34,38,47,41,42,47,42,44,47,44,45,47,45,46,56,51,48,56,48,52,56,52,53,56,53,54,56,54,55,63,60,57,57,61,62,63,57,62,71,67,64,64,68,69,64,69,70,71,64,70,79,75,72,72,76,77,72,77,78,79,72,78,87,83,80,80,84,85,87,80,85,87,85,86,95,91,88,95,88,92,95,92,93,95,93,94}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_770_point()))
            .setNormal(new Normal().setVector(getNormal_7_771_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#588"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {4,3,6,5,4,6,7,10,13,12,11,7,12,7,13,14,17,20,19,18,14,19,14,20,21,24,27,26,25,21,26,21,27,28,31,34,33,32,28,33,28,34,35,38,41,40,39,35,40,35,41,42,45,48,47,46,42,47,42,48,49,52,55,54,53,49,54,49,55,60,56,62,61,60,62}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_777_point()))
            .setNormal(new Normal().setVector(getNormal_7_778_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#589"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_784_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_784_point()))
            .setNormal(new Normal().setVector(getNormal_7_785_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#590"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {7,1,2,7,2,4,7,4,5,7,5,6,15,9,10,10,12,13,15,10,13,15,13,14,23,17,18,18,20,21,18,21,22,23,18,22,31,25,26,26,28,29,26,29,30,31,26,30,39,33,34,34,36,37,34,37,38,39,34,38,47,41,42,47,42,44,44,45,46,47,44,46,55,51,48,55,48,52,55,52,53,55,53,54,63,59,56,56,60,61,56,61,62,63,56,62,71,67,64,64,68,69,64,69,70,71,64,70,79,75,72,72,76,77,72,77,78,79,72,78,86,83,80,80,84,85,86,80,85,95,90,87,95,87,91,95,91,92,95,92,93,95,93,94}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_791_point()))
            .setNormal(new Normal().setVector(getNormal_7_792_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#591"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {5,4,7,6,5,7,13,12,17,14,13,17,16,15,14,16,14,17,23,22,27,24,23,27,26,25,24,26,24,27,33,32,37,34,33,37,36,35,34,36,34,37,43,42,47,44,43,47,46,45,44,46,44,47,53,52,55,54,53,55,61,60,67,62,61,67,63,62,67,65,64,63,66,65,63,66,63,67,73,72,77,74,73,77,76,75,74,76,74,77,83,82,87,84,83,87,86,85,84,86,84,87,93,92,99,94,93,99,95,94,99,97,96,95,98,97,95,98,95,99,105,104,109,106,105,109,108,107,106,108,106,109,115,114,119,116,115,119,118,117,116,118,116,119,125,124,128,126,125,128,123,126,128,127,123,128,133,129,135,134,133,135}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_798_point()))
            .setNormal(new Normal().setVector(getNormal_7_799_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#592"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {5,4,9,6,5,9,8,7,6,8,6,9,15,14,19,16,15,19,17,16,19,18,17,19,25,24,29,26,25,29,27,26,29,28,27,29,35,34,39,36,35,39,37,36,39,38,37,39,45,44,49,46,45,49,47,46,49,48,47,49,55,54,59,56,55,59,57,56,59,58,57,59,65,64,68,66,65,68,67,66,68,74,73,78,75,74,78,76,75,78,77,76,78,84,83,88,85,84,88,86,85,88,87,86,88,94,93,98,95,94,98,96,95,98,97,96,98,104,103,108,105,104,108,106,105,108,107,106,108,114,113,117,115,114,117,116,115,117}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_805_point()))
            .setNormal(new Normal().setVector(getNormal_7_806_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#593"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {5,4,8,7,6,5,7,5,8,14,13,18,15,14,18,17,16,15,17,15,18,24,23,27,25,24,27,26,25,27,33,32,37,34,33,37,36,35,34,36,34,37,43,42,47,44,43,47,46,45,44,46,44,47,53,52,56,55,54,53,55,53,56,62,61,66,63,62,66,65,64,63,65,63,66,72,71,76,73,72,76,75,74,73,75,73,76,82,81,86,83,82,86,85,84,83,85,83,86,92,91,96,93,92,96,95,94,93,95,93,96,102,101,106,103,102,106,105,104,103,105,103,106,112,111,116,113,112,116,115,114,113,115,113,116}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_812_point()))
            .setNormal(new Normal().setVector(getNormal_7_813_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#594"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_819_index()).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_819_point()))
            .setNormal(new Normal().setVector(getNormal_7_820_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#595"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {5,4,7,6,5,7,13,12,17,14,13,17,16,15,14,16,14,17,23,22,27,24,23,27,26,25,24,26,24,27,33,32,37,34,33,37,36,35,34,36,34,37,43,42,47,44,43,47,46,45,44,46,44,47,53,52,57,54,53,57,56,55,54,56,54,57,63,62,67,64,63,67,66,65,64,66,64,67,73,72,77,74,73,77,76,75,74,76,74,77,83,82,87,84,83,87,86,85,84,86,84,87,93,92,97,94,93,97,96,95,94,96,94,97,103,102,105,104,103,105}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_826_point()))
            .setNormal(new Normal().setVector(getNormal_7_827_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#596"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {5,4,9,6,5,9,7,6,9,8,7,9,15,14,19,16,15,19,18,17,16,18,16,19,25,24,29,26,25,29,28,27,26,28,26,29,35,34,39,36,35,39,38,37,36,38,36,39,45,44,49,46,45,49,48,47,46,48,46,49,55,54,59,56,55,59,58,57,56,58,56,59,65,64,68,67,66,65,67,65,68,74,73,78,75,74,78,77,76,75,77,75,78,84,83,88,85,84,88,87,86,85,87,85,88,94,93,98,95,94,98,97,96,95,97,95,98,104,103,108,105,104,108,107,106,105,107,105,108,114,113,117,116,115,114,116,114,117}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_833_point()))
            .setNormal(new Normal().setVector(getNormal_7_834_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#597"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {5,4,8,6,5,8,7,6,8,14,13,18,15,14,18,17,16,15,17,15,18,24,23,27,26,25,24,26,24,27,33,32,37,34,33,37,36,35,34,36,34,37,43,42,47,44,43,47,46,45,44,46,44,47,53,52,56,54,53,56,55,54,56,62,61,66,63,62,66,65,64,63,65,63,66,72,71,76,73,72,76,75,74,73,75,73,76,82,81,86,83,82,86,85,84,83,85,83,86,92,91,96,93,92,96,95,94,93,95,93,96,102,101,106,103,102,106,105,104,103,105,103,106,112,111,116,113,112,116,114,113,116,115,114,116}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_840_point()))
            .setNormal(new Normal().setVector(getNormal_7_841_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#598"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {4,3,6,5,4,6,12,11,15,7,12,15,14,13,7,14,7,15,21,20,25,22,21,25,23,22,25,24,23,25,31,30,35,32,31,35,33,32,35,34,33,35,41,40,47,42,41,47,43,42,47,44,43,47,45,44,47,46,45,47,53,52,57,54,53,57,55,54,57,56,55,57,63,62,67,64,63,67,65,64,67,66,65,67,73,72,79,74,73,79,75,74,79,76,75,79,77,76,79,78,77,79,85,84,87,86,85,87,93,92,97,94,93,97,95,94,97,96,95,97,103,102,107,104,103,107,105,104,107,106,105,107,113,112,117,114,113,117,115,114,117,116,115,117,123,122,127,124,123,127,125,124,127,126,125,127,133,132,135,134,133,135}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_847_point()))
            .setNormal(new Normal().setVector(getNormal_7_848_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#599"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(getIndexedTriangleSet_6_854_index()).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_854_point()))
            .setNormal(new Normal().setVector(getNormal_7_855_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#600"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.2500e+00,8.6356e+00,2.5000e+00,1.2500e+00,8.5135e+00,2.4200e+00,1.2500e+00,8.5135e+00,2.5000e+00,1.2500e+00,8.6356e+00,2.4200e+00,1.2500e+00,8.5135e+00,2.4200e+00,1.2500e+00,8.6356e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#601"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.7161e+00,8.6356e+00,2.5000e+00,1.2500e+00,8.6356e+00,2.4200e+00,1.2500e+00,8.6356e+00,2.5000e+00,1.7161e+00,8.6356e+00,2.4200e+00,1.2500e+00,8.6356e+00,2.4200e+00,1.7161e+00,8.6356e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#602"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.7161e+00,9.2533e+00,2.5000e+00,1.7161e+00,8.6356e+00,2.4200e+00,1.7161e+00,8.6356e+00,2.5000e+00,1.7161e+00,9.2533e+00,2.4200e+00,1.7161e+00,8.6356e+00,2.4200e+00,1.7161e+00,9.2533e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#603"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45,46,44,45,46,45,47,48,46,47,48,47,49,50,48,49,50,49,51}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_879_point()))
            .setNormal(new Normal().setVector(getNormal_7_880_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#604"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.6052e+00,8.8788e+00,2.5000e+00,1.6052e+00,9.2579e+00,2.4200e+00,1.6052e+00,9.2579e+00,2.5000e+00,1.6052e+00,8.8788e+00,2.4200e+00,1.6052e+00,9.2579e+00,2.4200e+00,1.6052e+00,8.8788e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#605"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_892_point()))
            .setNormal(new Normal().setVector(getNormal_7_893_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#606"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.2500e+00,9.4773e+00,2.5000e+00,1.2500e+00,8.8788e+00,2.4200e+00,1.2500e+00,8.8788e+00,2.5000e+00,1.2500e+00,9.4773e+00,2.4200e+00,1.2500e+00,8.8788e+00,2.4200e+00,1.2500e+00,9.4773e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#607"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.4152e+00,9.6425e+00,2.4200e+00,1.4152e+00,9.6425e+00,2.5000e+00,1.3936e+00,9.6411e+00,2.4200e+00,1.3936e+00,9.6411e+00,2.5000e+00,1.3724e+00,9.6368e+00,2.4200e+00,1.3724e+00,9.6368e+00,2.5000e+00,1.3520e+00,9.6299e+00,2.4200e+00,1.3520e+00,9.6299e+00,2.5000e+00,1.3326e+00,9.6203e+00,2.4200e+00,1.3326e+00,9.6203e+00,2.5000e+00,1.3146e+00,9.6083e+00,2.4200e+00,1.3146e+00,9.6083e+00,2.5000e+00,1.2984e+00,9.5941e+00,2.4200e+00,1.2984e+00,9.5941e+00,2.5000e+00,1.2841e+00,9.5778e+00,2.4200e+00,1.2841e+00,9.5778e+00,2.5000e+00,1.2721e+00,9.5599e+00,2.4200e+00,1.2721e+00,9.5599e+00,2.5000e+00,1.2626e+00,9.5405e+00,2.4200e+00,1.2626e+00,9.5405e+00,2.5000e+00,1.2556e+00,9.5200e+00,2.4200e+00,1.2556e+00,9.5200e+00,2.5000e+00,1.2514e+00,9.4989e+00,2.4200e+00,1.2514e+00,9.4989e+00,2.5000e+00,1.2500e+00,9.4773e+00,2.4200e+00,1.2500e+00,9.4773e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#608"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.8406e+00,9.6425e+00,2.5000e+00,1.4152e+00,9.6425e+00,2.4200e+00,1.4152e+00,9.6425e+00,2.5000e+00,1.8406e+00,9.6425e+00,2.4200e+00,1.4152e+00,9.6425e+00,2.4200e+00,1.8406e+00,9.6425e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#609"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.8406e+00,9.5192e+00,2.5000e+00,1.8406e+00,9.6425e+00,2.4200e+00,1.8406e+00,9.6425e+00,2.5000e+00,1.8406e+00,9.5192e+00,2.4200e+00,1.8406e+00,9.6425e+00,2.4200e+00,1.8406e+00,9.5192e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#610"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.4152e+00,9.5192e+00,2.5000e+00,1.8406e+00,9.5192e+00,2.4200e+00,1.8406e+00,9.5192e+00,2.5000e+00,1.4152e+00,9.5192e+00,2.4200e+00,1.8406e+00,9.5192e+00,2.4200e+00,1.4152e+00,9.5192e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#611"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.4152e+00,9.5192e+00,2.4200e+00,1.4152e+00,9.5192e+00,2.5000e+00,1.4096e+00,9.5188e+00,2.4200e+00,1.4096e+00,9.5188e+00,2.5000e+00,1.4041e+00,9.5177e+00,2.4200e+00,1.4041e+00,9.5177e+00,2.5000e+00,1.3987e+00,9.5159e+00,2.4200e+00,1.3987e+00,9.5159e+00,2.5000e+00,1.3937e+00,9.5134e+00,2.4200e+00,1.3937e+00,9.5134e+00,2.5000e+00,1.3890e+00,9.5103e+00,2.4200e+00,1.3890e+00,9.5103e+00,2.5000e+00,1.3848e+00,9.5066e+00,2.4200e+00,1.3848e+00,9.5066e+00,2.5000e+00,1.3811e+00,9.5023e+00,2.4200e+00,1.3811e+00,9.5023e+00,2.5000e+00,1.3779e+00,9.4977e+00,2.4200e+00,1.3779e+00,9.4977e+00,2.5000e+00,1.3754e+00,9.4926e+00,2.4200e+00,1.3754e+00,9.4926e+00,2.5000e+00,1.3736e+00,9.4873e+00,2.4200e+00,1.3736e+00,9.4873e+00,2.5000e+00,1.3725e+00,9.4818e+00,2.4200e+00,1.3725e+00,9.4818e+00,2.5000e+00,1.3722e+00,9.4761e+00,2.4200e+00,1.3722e+00,9.4761e+00})))
            .setNormal(new Normal().setVector(new MFVec3f(new double[] {0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-1.0000e+00,6.1232e-17,0.0000e+00,-1.0000e+00,6.1232e-17}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#612"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.3722e+00,8.8970e+00,2.5000e+00,1.3722e+00,9.4761e+00,2.4200e+00,1.3722e+00,9.4761e+00,2.5000e+00,1.3722e+00,8.8970e+00,2.4200e+00,1.3722e+00,9.4761e+00,2.4200e+00,1.3722e+00,8.8970e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#613"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39,40,38,39,40,39,41,42,40,41,42,41,43,44,42,43,44,43,45,46,44,45,46,45,47}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_943_point()))
            .setNormal(new Normal().setVector(getNormal_7_944_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#614"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.4831e+00,9.2556e+00,2.5000e+00,1.4831e+00,8.8992e+00,2.4200e+00,1.4831e+00,8.8992e+00,2.5000e+00,1.4831e+00,9.2556e+00,2.4200e+00,1.4831e+00,8.8992e+00,2.4200e+00,1.4831e+00,9.2556e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#615"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38,39,38,40,41,39,40,41,40,42,43,41,42,43,42,44,45,43,44,45,44,46,47,45,46,47,46,48,49,47,48,49,48,50,51,49,50}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_956_point()))
            .setNormal(new Normal().setVector(getNormal_7_957_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#616"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.8406e+00,8.2611e+00,2.5000e+00,1.8406e+00,9.2691e+00,2.4200e+00,1.8406e+00,9.2691e+00,2.5000e+00,1.8406e+00,8.2611e+00,2.4200e+00,1.8406e+00,9.2691e+00,2.4200e+00,1.8406e+00,8.2611e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#617"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.7161e+00,8.2611e+00,2.5000e+00,1.8406e+00,8.2611e+00,2.4200e+00,1.8406e+00,8.2611e+00,2.5000e+00,1.7161e+00,8.2611e+00,2.4200e+00,1.8406e+00,8.2611e+00,2.4200e+00,1.7161e+00,8.2611e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#618"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.7161e+00,8.5135e+00,2.5000e+00,1.7161e+00,8.2611e+00,2.4200e+00,1.7161e+00,8.2611e+00,2.5000e+00,1.7161e+00,8.5135e+00,2.4200e+00,1.7161e+00,8.2611e+00,2.4200e+00,1.7161e+00,8.5135e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#619"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.2500e+00,8.5135e+00,2.5000e+00,1.7161e+00,8.5135e+00,2.4200e+00,1.7161e+00,8.5135e+00,2.5000e+00,1.2500e+00,8.5135e+00,2.4200e+00,1.7161e+00,8.5135e+00,2.4200e+00,1.2500e+00,8.5135e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#620"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {90,0,1,1,2,3,1,3,4,1,4,5,1,5,6,1,6,7,1,7,8,1,8,9,1,9,10,10,11,12,10,12,13,10,13,14,10,14,15,10,15,16,10,16,17,10,17,18,10,18,19,10,19,20,45,46,47,44,45,47,44,47,48,43,44,48,42,43,48,41,42,48,40,41,48,39,40,48,38,39,48,38,48,49,37,38,49,37,49,50,36,37,50,36,50,51,36,51,52,36,52,53,36,53,54,36,54,55,36,55,56,36,56,57,35,36,57,34,35,57,33,34,57,32,33,57,31,32,57,30,31,57,29,30,57,29,57,58,28,29,58,28,58,59,27,28,59,27,59,60,26,27,60,26,60,61,25,26,61,25,61,62,24,25,62,24,62,63,23,24,63,23,63,64,22,23,64,22,64,65,21,22,65,21,65,66,20,21,66,20,66,67,20,67,68,20,68,69,20,69,70,20,70,71,20,71,72,20,72,73,20,73,74,20,74,75,10,20,75,10,75,76,10,76,77,10,77,78,10,78,79,10,79,80,10,80,81,10,81,82,10,82,83,10,83,84,10,84,85,10,85,86,10,86,87,10,87,88,1,10,88,1,88,89,90,1,89}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_987_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#621"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.2500e+00,1.0500e+01,2.5000e+00,1.2500e+00,1.0378e+01,2.4200e+00,1.2500e+00,1.0378e+01,2.5000e+00,1.2500e+00,1.0500e+01,2.4200e+00,1.2500e+00,1.0378e+01,2.4200e+00,1.2500e+00,1.0500e+01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#622"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.7288e+00,1.0500e+01,2.5000e+00,1.2500e+00,1.0500e+01,2.4200e+00,1.2500e+00,1.0500e+01,2.5000e+00,1.7288e+00,1.0500e+01,2.4200e+00,1.2500e+00,1.0500e+01,2.4200e+00,1.7288e+00,1.0500e+01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#623"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1005_point()))
            .setNormal(new Normal().setVector(getNormal_7_1006_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#624"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.3790e+00,9.8732e+00,2.5000e+00,1.8160e+00,1.0277e+01,2.4200e+00,1.8160e+00,1.0277e+01,2.5000e+00,1.3790e+00,9.8732e+00,2.4200e+00,1.8160e+00,1.0277e+01,2.4200e+00,1.3790e+00,9.8732e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#625"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1018_point()))
            .setNormal(new Normal().setVector(getNormal_7_1019_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#626"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.8406e+00,9.8450e+00,2.5000e+00,1.3914e+00,9.8450e+00,2.4200e+00,1.3914e+00,9.8450e+00,2.5000e+00,1.8406e+00,9.8450e+00,2.4200e+00,1.3914e+00,9.8450e+00,2.4200e+00,1.8406e+00,9.8450e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#627"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.8406e+00,9.7217e+00,2.5000e+00,1.8406e+00,9.8450e+00,2.4200e+00,1.8406e+00,9.8450e+00,2.5000e+00,1.8406e+00,9.7217e+00,2.4200e+00,1.8406e+00,9.8450e+00,2.4200e+00,1.8406e+00,9.7217e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#628"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.3885e+00,9.7217e+00,2.5000e+00,1.8406e+00,9.7217e+00,2.4200e+00,1.8406e+00,9.7217e+00,2.5000e+00,1.3885e+00,9.7217e+00,2.4200e+00,1.8406e+00,9.7217e+00,2.4200e+00,1.3885e+00,9.7217e+00}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#629"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {1,0,2,3,1,2,3,2,4,5,3,4,5,4,6,7,5,6,7,6,8,9,7,8,9,8,10,11,9,10,11,10,12,13,11,12,13,12,14,15,13,14,15,14,16,17,15,16,17,16,18,19,17,18,19,18,20,21,19,20,21,20,22,23,21,22,23,22,24,25,23,24,25,24,26,27,25,26,27,26,28,29,27,28,29,28,30,31,29,30,31,30,32,33,31,32,33,32,34,35,33,34,35,34,36,37,35,36,37,36,38,39,37,38}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1043_point()))
            .setNormal(new Normal().setVector(getNormal_7_1044_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#630"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.7070e+00,1.0341e+01,2.5000e+00,1.3019e+00,9.9682e+00,2.4200e+00,1.3019e+00,9.9682e+00,2.5000e+00,1.7070e+00,1.0341e+01,2.4200e+00,1.3019e+00,9.9682e+00,2.4200e+00,1.7070e+00,1.0341e+01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#631"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {2,0,1,2,1,3,4,2,3,4,3,5,6,4,5,6,5,7,8,6,7,8,7,9,10,8,9,10,9,11,12,10,11,12,11,13,14,12,13,14,13,15,16,14,15,16,15,17,18,16,17,18,17,19,20,18,19,20,19,21,22,20,21,22,21,23,24,22,23,24,23,25,26,24,25,26,25,27,28,26,27,28,27,29,30,28,29,30,29,31,32,30,31,32,31,33,34,32,33,34,33,35,36,34,35,36,35,37,38,36,37,38,37,39}).setNormalPerVertex(true).setSolid(false)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1056_point()))
            .setNormal(new Normal().setVector(getNormal_7_1057_vector())))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#632"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {0,1,2,3,4,5}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(new MFVec3f(new double[] {2.5000e+00,1.2500e+00,1.0378e+01,2.5000e+00,1.6927e+00,1.0378e+01,2.4200e+00,1.6927e+00,1.0378e+01,2.5000e+00,1.2500e+00,1.0378e+01,2.4200e+00,1.6927e+00,1.0378e+01,2.4200e+00,1.2500e+00,1.0378e+01}))))
          .setAppearance(new Appearance().setUSE("partcolor"))))
      .addChild(new CADFace()
        .setShape(new Shape()
          .setMetadata(new MetadataString().setName("instance").setValue(new String[] {"#633"}))
          .setGeometry(new IndexedTriangleSet().setCcw(true).setColorPerVertex(true).setIndex(new int[] {57,0,1,57,1,2,13,14,15,13,15,16,13,16,17,13,17,18,13,18,19,13,19,20,12,13,20,12,20,21,12,21,22,12,22,23,23,24,25,23,25,26,23,26,27,23,27,28,23,28,29,23,29,30,23,30,31,23,31,32,23,32,33,23,33,34,23,34,35,23,35,36,23,36,37,23,37,38,23,38,39,23,39,40,23,40,41,23,41,42,12,23,42,12,42,43,12,43,44,11,12,44,10,11,44,9,10,44,8,9,44,7,8,44,6,7,44,5,6,44,5,44,45,4,5,45,4,45,46,3,4,46,3,46,47,2,3,47,57,2,47,57,47,48,57,48,49,57,49,50,57,50,51,57,51,52,57,52,53,57,53,54,57,54,55,57,55,56}).setNormalPerVertex(true).setSolid(true)
            .setCoord(new Coordinate().setPoint(getCoordinate_7_1069_point())))
          .setAppearance(new Appearance().setUSE("partcolor"))))));
    }
	// end of initialize() method


		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_51_index_1()
		{
			int[] value = {104,86,87,104,87,88,104,88,89,104,89,90,104,90,91,104,91,92,104,92,62,104,62,63,67,68,52,66,67,52,65,66,52,64,65,52,63,64,52,104,63,52,104,52,53,104,53,54,104,54,55,104,55,56,104,56,57,104,57,58,104,58,59,104,59,60,104,60,61,36,37,21,35,36,21,34,35,21,33,34,21,32,33,21,31,32,21,61,31,21,104,61,21,104,21,22,104,22,23,104,23,24,104,24,25,104,25,26,104,26,27,104,27,28,104,28,29,104,29,30,20,21,37,19,20,37,18,19,37,17,18,37,16,17,37,15,16,37,14,15,37,14,37,38,14,38,39,14,39,40,14,40,41,14,41,42,14,42,43,13,14,43,13,43,44,51,52,68,50,51,68,49,50,68,48,49,68,47,48,68,46,47,68,45,46,68,45,68,69,45,69,70,45,70,71,45,71,72,45,72,73,45,73,74,44,45,74,44,74,75,13,44,75,85,86,104,84,85,104,83,84,104,82,83,104,81,82,104,80,81,104,79,80,104,79,104,93,79,93,94,79,94,95,79,95,96,79,96,97,79,97,98,79,98,99,79,99,100,79,100,101,78,79,101,77,78,101,76,77,101,75,76,101,13,75,101,13,101,102,12,13,102,11,12,102,10,11,102,9,10,102,8,9,102,7,8,102,6,7,102,5,6,102,4,5,102,3,4,102,2,3,102,2,102,103,1,2,103,0,1,103,30,0,103,104,30,103};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_51_point_1()
		{
			double[] value = {-3.5000e+00,-1.1015e+00,9.5425e+00,-3.5000e+00,-1.1142e+00,9.5832e+00,-3.5000e+00,-1.1350e+00,9.6205e+00,-3.5000e+00,-1.1628e+00,9.6529e+00,-3.5000e+00,-1.1965e+00,9.6790e+00,-3.5000e+00,-1.2348e+00,9.6978e+00,-3.5000e+00,-1.2762e+00,9.7085e+00,-3.5000e+00,-1.3188e+00,9.7107e+00,-3.5000e+00,-1.3610e+00,9.7042e+00,-3.5000e+00,-1.4010e+00,9.6894e+00,-3.5000e+00,-1.4372e+00,9.6668e+00,-3.5000e+00,-1.4682e+00,9.6374e+00,-3.5000e+00,-1.4925e+00,9.6024e+00,-3.5000e+00,-1.5094e+00,9.5632e+00,-3.5000e+00,-1.5180e+00,9.5213e+00,-3.5000e+00,-1.5180e+00,9.4787e+00,-3.5000e+00,-1.5094e+00,9.4368e+00,-3.5000e+00,-1.4925e+00,9.3976e+00,-3.5000e+00,-1.4682e+00,9.3626e+00,-3.5000e+00,-1.4372e+00,9.3332e+00,-3.5000e+00,-1.4010e+00,9.3106e+00,-3.5000e+00,-1.3610e+00,9.2958e+00,-3.5000e+00,-1.3188e+00,9.2893e+00,-3.5000e+00,-1.2762e+00,9.2915e+00,-3.5000e+00,-1.2348e+00,9.3022e+00,-3.5000e+00,-1.1965e+00,9.3210e+00,-3.5000e+00,-1.1628e+00,9.3471e+00,-3.5000e+00,-1.1350e+00,9.3795e+00,-3.5000e+00,-1.1142e+00,9.4168e+00,-3.5000e+00,-1.1015e+00,9.4575e+00,-3.5000e+00,-1.0971e+00,9.5000e+00,-3.5000e+00,-1.4063e+00,8.1675e+00,-3.5000e+00,-1.4191e+00,8.2082e+00,-3.5000e+00,-1.4398e+00,8.2455e+00,-3.5000e+00,-1.4676e+00,8.2779e+00,-3.5000e+00,-1.5013e+00,8.3040e+00,-3.5000e+00,-1.5397e+00,8.3228e+00,-3.5000e+00,-1.5810e+00,8.3335e+00,-3.5000e+00,-1.6236e+00,8.3357e+00,-3.5000e+00,-1.6658e+00,8.3292e+00,-3.5000e+00,-1.7058e+00,8.3144e+00,-3.5000e+00,-1.7420e+00,8.2918e+00,-3.5000e+00,-1.7730e+00,8.2624e+00,-3.5000e+00,-1.7974e+00,8.2274e+00,-3.5000e+00,-1.8142e+00,8.1882e+00,-3.5000e+00,-1.8228e+00,8.1463e+00,-3.5000e+00,-1.8228e+00,8.1037e+00,-3.5000e+00,-1.8142e+00,8.0618e+00,-3.5000e+00,-1.7974e+00,8.0226e+00,-3.5000e+00,-1.7730e+00,7.9876e+00,-3.5000e+00,-1.7420e+00,7.9582e+00,-3.5000e+00,-1.7058e+00,7.9356e+00,-3.5000e+00,-1.6658e+00,7.9208e+00,-3.5000e+00,-1.6236e+00,7.9143e+00,-3.5000e+00,-1.5810e+00,7.9165e+00,-3.5000e+00,-1.5397e+00,7.9272e+00,-3.5000e+00,-1.5013e+00,7.9460e+00,-3.5000e+00,-1.4676e+00,7.9721e+00,-3.5000e+00,-1.4398e+00,8.0045e+00,-3.5000e+00,-1.4191e+00,8.0418e+00,-3.5000e+00,-1.4063e+00,8.0825e+00,-3.5000e+00,-1.4020e+00,8.1250e+00,-3.5000e+00,-1.7111e+00,6.7925e+00,-3.5000e+00,-1.7239e+00,6.8332e+00,-3.5000e+00,-1.7446e+00,6.8705e+00,-3.5000e+00,-1.7724e+00,6.9029e+00,-3.5000e+00,-1.8062e+00,6.9290e+00,-3.5000e+00,-1.8445e+00,6.9478e+00,-3.5000e+00,-1.8858e+00,6.9585e+00,-3.5000e+00,-1.9284e+00,6.9607e+00,-3.5000e+00,-1.9706e+00,6.9542e+00,-3.5000e+00,-2.0107e+00,6.9394e+00,-3.5000e+00,-2.0469e+00,6.9168e+00,-3.5000e+00,-2.0778e+00,6.8874e+00,-3.5000e+00,-2.1022e+00,6.8524e+00,-3.5000e+00,-2.1190e+00,6.8132e+00,-3.5000e+00,-2.1276e+00,6.7713e+00,-3.5000e+00,-2.1276e+00,6.7287e+00,-3.5000e+00,-2.1190e+00,6.6868e+00,-3.5000e+00,-2.1022e+00,6.6476e+00,-3.5000e+00,-2.0778e+00,6.6126e+00,-3.5000e+00,-2.0469e+00,6.5832e+00,-3.5000e+00,-2.0107e+00,6.5606e+00,-3.5000e+00,-1.9706e+00,6.5458e+00,-3.5000e+00,-1.9284e+00,6.5393e+00,-3.5000e+00,-1.8858e+00,6.5415e+00,-3.5000e+00,-1.8445e+00,6.5522e+00,-3.5000e+00,-1.8062e+00,6.5710e+00,-3.5000e+00,-1.7724e+00,6.5971e+00,-3.5000e+00,-1.7446e+00,6.6295e+00,-3.5000e+00,-1.7239e+00,6.6668e+00,-3.5000e+00,-1.7111e+00,6.7075e+00,-3.5000e+00,-1.7068e+00,6.7500e+00,-3.5000e+00,-1.2154e+00,5.2974e+00,-3.5000e+00,-1.2166e+00,5.2907e+00,-3.5000e+00,-1.2176e+00,5.2840e+00,-3.5000e+00,-1.2185e+00,5.2772e+00,-3.5000e+00,-1.2191e+00,5.2704e+00,-3.5000e+00,-1.2196e+00,5.2636e+00,-3.5000e+00,-1.2199e+00,5.2568e+00};
			return value;
		}
		private double[] getCoordinate_7_51_point_2()
		{
			double[] value = {-3.5000e+00,-1.2199e+00,5.2500e+00,-3.5000e+00,-3.2746e+00,5.2500e+00,-3.5000e+00,-1.9998e+00,1.1000e+01,-3.5000e+00,4.8727e-02,1.1000e+01,-3.5000e+00,-1.2140e+00,5.3041e+00};
			return value;
		}




		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_69_index_1()
		{
			int[] value = {71,173,174,174,175,176,174,176,98,174,98,99,174,99,100,174,100,101,174,101,102,174,102,103,174,103,104,174,104,105,174,105,106,174,106,107,174,107,108,174,108,109,174,109,110,174,110,111,97,98,176,96,97,176,95,96,176,94,95,176,93,94,176,123,93,176,123,176,177,122,123,177,121,122,177,120,121,177,119,120,177,119,177,178,118,119,178,117,118,178,116,117,178,116,178,179,115,116,179,114,115,179,179,126,127,179,127,128,179,128,129,114,179,129,113,114,129,113,129,130,113,130,131,113,131,132,113,132,133,113,133,134,112,113,134,112,134,135,112,135,136,112,136,137,112,137,138,112,138,139,112,139,140,111,112,140,111,140,141,111,141,142,125,126,179,124,125,179,154,124,179,153,154,179,152,153,179,151,152,179,151,179,180,150,151,180,149,150,180,148,149,180,147,148,180,146,147,180,146,180,181,145,146,181,145,181,182,144,145,182,143,144,182,142,143,182,111,142,182,174,111,182,174,182,155,174,155,156,174,156,157,174,157,158,174,158,159,164,165,166,166,167,168,166,168,12,166,12,13,166,13,14,166,14,15,166,15,16,166,16,17,166,17,18,166,18,19,166,19,20,166,20,21,166,21,22,166,22,23,164,166,23,164,23,24,163,164,24,162,163,24,162,24,25,162,25,26,161,162,26,161,26,27,161,27,28,161,28,29,161,29,30,161,30,0,161,0,1,161,1,2,161,2,3,161,3,4,160,161,4,160,4,5,160,5,6,160,6,7,160,7,8,11,12,168,10,11,168,9,10,168,8,9,168,160,8,168,160,168,169,159,160,169,169,170,171,169,171,39,169,39,40,169,40,41,169,41,42,169,42,43,169,43,44,169,44,45,169,45,46,169,46,47,169,47,48,169,48,49,169,49,50,169,50,51,169,51,52,169,52,53,159,169,53,159,53,54,159,54,55,159,55,56,159,56,57,159,57,58,159,58,59,159,59,60,159,60,61,159,61,31,159,31,32,159,32,33,159,33,34,159,34,35,159,35,36,38,39,171,37,38,171,36,37,171,159,36,171,159,171,172,172,173,71,172,71,72,172,72,73,172,73,74,172,74,75,172,75,76,172,76,77,172,77,78,172,78,79,159,172,79,159,79,80,159,80,81,159,81,82,159,82,83,159,83,84,159,84,85,159,85,86,159,86,87,159,87,88,159,88,89,159,89,90,159,90,91,174,159,91,174,91,92,174,92,62,174,62,63,174,63,64,174,64,65,174,65,66,174,66,67,174,67,68,174,68,69,174,69,70,71,174,70};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_69_point_1()
		{
			double[] value = {6.8431e+00,4.5260e+00,1.0000e+00,6.8885e+00,4.6708e+00,1.0000e+00,6.9621e+00,4.8035e+00,1.0000e+00,7.0610e+00,4.9186e+00,1.0000e+00,7.1810e+00,5.0115e+00,1.0000e+00,7.3172e+00,5.0783e+00,1.0000e+00,7.4642e+00,5.1164e+00,1.0000e+00,7.6157e+00,5.1240e+00,1.0000e+00,7.7657e+00,5.1011e+00,1.0000e+00,7.9080e+00,5.0484e+00,1.0000e+00,8.0368e+00,4.9681e+00,1.0000e+00,8.1468e+00,4.8635e+00,1.0000e+00,8.2335e+00,4.7390e+00,1.0000e+00,8.2933e+00,4.5995e+00,1.0000e+00,8.3239e+00,4.4509e+00,1.0000e+00,8.3239e+00,4.2991e+00,1.0000e+00,8.2933e+00,4.1505e+00,1.0000e+00,8.2335e+00,4.0110e+00,1.0000e+00,8.1468e+00,3.8865e+00,1.0000e+00,8.0368e+00,3.7819e+00,1.0000e+00,7.9080e+00,3.7016e+00,1.0000e+00,7.7657e+00,3.6489e+00,1.0000e+00,7.6157e+00,3.6260e+00,1.0000e+00,7.4642e+00,3.6336e+00,1.0000e+00,7.3172e+00,3.6717e+00,1.0000e+00,7.1810e+00,3.7385e+00,1.0000e+00,7.0610e+00,3.8314e+00,1.0000e+00,6.9621e+00,3.9465e+00,1.0000e+00,6.8885e+00,4.0792e+00,1.0000e+00,6.8431e+00,4.2240e+00,1.0000e+00,6.8277e+00,4.3750e+00,1.0000e+00,3.6399e+00,7.7290e+00,1.0000e+00,3.6853e+00,7.8738e+00,1.0000e+00,3.7589e+00,8.0065e+00,1.0000e+00,3.8578e+00,8.1216e+00,1.0000e+00,3.9778e+00,8.2145e+00,1.0000e+00,4.1140e+00,8.2813e+00,1.0000e+00,4.2609e+00,8.3194e+00,1.0000e+00,4.4125e+00,8.3270e+00,1.0000e+00,4.5625e+00,8.3041e+00,1.0000e+00,4.7048e+00,8.2514e+00,1.0000e+00,4.8336e+00,8.1711e+00,1.0000e+00,4.9436e+00,8.0665e+00,1.0000e+00,5.0303e+00,7.9420e+00,1.0000e+00,5.0901e+00,7.8025e+00,1.0000e+00,5.1207e+00,7.6539e+00,1.0000e+00,5.1207e+00,7.5021e+00,1.0000e+00,5.0901e+00,7.3535e+00,1.0000e+00,5.0303e+00,7.2140e+00,1.0000e+00,4.9436e+00,7.0895e+00,1.0000e+00,4.8336e+00,6.9849e+00,1.0000e+00,4.7048e+00,6.9046e+00,1.0000e+00,4.5625e+00,6.8519e+00,1.0000e+00,4.4125e+00,6.8290e+00,1.0000e+00,4.2609e+00,6.8366e+00,1.0000e+00,4.1140e+00,6.8747e+00,1.0000e+00,3.9778e+00,6.9415e+00,1.0000e+00,3.8578e+00,7.0344e+00,1.0000e+00,3.7589e+00,7.1495e+00,1.0000e+00,3.6853e+00,7.2822e+00,1.0000e+00,3.6399e+00,7.4270e+00,1.0000e+00,3.6245e+00,7.5780e+00,1.0000e+00,-7.3465e-01,8.9010e+00,1.0000e+00,-6.8922e-01,9.0458e+00,1.0000e+00,-6.1557e-01,9.1785e+00,1.0000e+00,-5.1673e-01,9.2936e+00,1.0000e+00,-3.9672e-01,9.3865e+00,1.0000e+00,-2.6048e-01,9.4533e+00,1.0000e+00,-1.1357e-01,9.4914e+00,1.0000e+00,3.7987e-02,9.4990e+00,1.0000e+00,1.8799e-01,9.4761e+00,1.0000e+00,3.3030e-01,9.4234e+00,1.0000e+00,4.5908e-01,9.3431e+00,1.0000e+00,5.6907e-01,9.2385e+00,1.0000e+00,6.5576e-01,9.1140e+00,1.0000e+00,7.1560e-01,8.9745e+00,1.0000e+00,7.4615e-01,8.8259e+00,1.0000e+00,7.4615e-01,8.6741e+00,1.0000e+00,7.1560e-01,8.5255e+00,1.0000e+00,6.5576e-01,8.3860e+00,1.0000e+00,5.6907e-01,8.2615e+00,1.0000e+00,4.5908e-01,8.1569e+00,1.0000e+00,3.3030e-01,8.0766e+00,1.0000e+00,1.8799e-01,8.0239e+00,1.0000e+00,3.7987e-02,8.0010e+00,1.0000e+00,-1.1357e-01,8.0086e+00,1.0000e+00,-2.6048e-01,8.0467e+00,1.0000e+00,-3.9672e-01,8.1135e+00,1.0000e+00,-5.1673e-01,8.2064e+00,1.0000e+00,-6.1557e-01,8.3215e+00,1.0000e+00,-6.8922e-01,8.4542e+00,1.0000e+00,-7.3465e-01,8.5990e+00,1.0000e+00,-7.5000e-01,8.7500e+00,1.0000e+00,-5.1092e+00,7.7290e+00,1.0000e+00,-5.0637e+00,7.8738e+00,1.0000e+00,-4.9901e+00,8.0065e+00,1.0000e+00,-4.8912e+00,8.1216e+00,1.0000e+00,-4.7712e+00,8.2145e+00,1.0000e+00,-4.6350e+00,8.2813e+00,1.0000e+00,-4.4881e+00,8.3194e+00,1.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_69_point_2()
		{
			double[] value = {-4.3365e+00,8.3270e+00,1.0000e+00,-4.1865e+00,8.3041e+00,1.0000e+00,-4.0442e+00,8.2514e+00,1.0000e+00,-3.9154e+00,8.1711e+00,1.0000e+00,-3.8055e+00,8.0665e+00,1.0000e+00,-3.7188e+00,7.9420e+00,1.0000e+00,-3.6589e+00,7.8025e+00,1.0000e+00,-3.6284e+00,7.6539e+00,1.0000e+00,-3.6284e+00,7.5021e+00,1.0000e+00,-3.6589e+00,7.3535e+00,1.0000e+00,-3.7188e+00,7.2140e+00,1.0000e+00,-3.8055e+00,7.0895e+00,1.0000e+00,-3.9154e+00,6.9849e+00,1.0000e+00,-4.0442e+00,6.9046e+00,1.0000e+00,-4.1865e+00,6.8519e+00,1.0000e+00,-4.3365e+00,6.8290e+00,1.0000e+00,-4.4881e+00,6.8366e+00,1.0000e+00,-4.6350e+00,6.8747e+00,1.0000e+00,-4.7712e+00,6.9415e+00,1.0000e+00,-4.8912e+00,7.0344e+00,1.0000e+00,-4.9901e+00,7.1495e+00,1.0000e+00,-5.0637e+00,7.2822e+00,1.0000e+00,-5.1092e+00,7.4270e+00,1.0000e+00,-5.1245e+00,7.5780e+00,1.0000e+00,-8.3124e+00,4.5260e+00,1.0000e+00,-8.2669e+00,4.6708e+00,1.0000e+00,-8.1933e+00,4.8035e+00,1.0000e+00,-8.0944e+00,4.9186e+00,1.0000e+00,-7.9744e+00,5.0115e+00,1.0000e+00,-7.8382e+00,5.0783e+00,1.0000e+00,-7.6913e+00,5.1164e+00,1.0000e+00,-7.5397e+00,5.1240e+00,1.0000e+00,-7.3897e+00,5.1011e+00,1.0000e+00,-7.2474e+00,5.0484e+00,1.0000e+00,-7.1186e+00,4.9681e+00,1.0000e+00,-7.0087e+00,4.8635e+00,1.0000e+00,-6.9220e+00,4.7390e+00,1.0000e+00,-6.8621e+00,4.5995e+00,1.0000e+00,-6.8316e+00,4.4509e+00,1.0000e+00,-6.8316e+00,4.2991e+00,1.0000e+00,-6.8621e+00,4.1505e+00,1.0000e+00,-6.9220e+00,4.0110e+00,1.0000e+00,-7.0087e+00,3.8865e+00,1.0000e+00,-7.1186e+00,3.7819e+00,1.0000e+00,-7.2474e+00,3.7016e+00,1.0000e+00,-7.3897e+00,3.6489e+00,1.0000e+00,-7.5397e+00,3.6260e+00,1.0000e+00,-7.6913e+00,3.6336e+00,1.0000e+00,-7.8382e+00,3.6717e+00,1.0000e+00,-7.9744e+00,3.7385e+00,1.0000e+00,-8.0944e+00,3.8314e+00,1.0000e+00,-8.1933e+00,3.9465e+00,1.0000e+00,-8.2669e+00,4.0792e+00,1.0000e+00,-8.3124e+00,4.2240e+00,1.0000e+00,-8.3277e+00,4.3750e+00,1.0000e+00,-4.7994e+00,4.0035e+00,1.0000e+00,-3.9348e+00,4.8559e+00,1.0000e+00,-2.9217e+00,5.5251e+00,1.0000e+00,-1.7983e+00,5.9857e+00,1.0000e+00,-6.0708e-01,6.2204e+00,1.0000e+00,6.0708e-01,6.2204e+00,1.0000e+00,1.7983e+00,5.9857e+00,1.0000e+00,2.9217e+00,5.5251e+00,1.0000e+00,3.9348e+00,4.8559e+00,1.0000e+00,4.7994e+00,4.0035e+00,1.0000e+00,5.4829e+00,3.0000e+00,1.0000e+00,1.0375e+01,3.0000e+00,1.0000e+00,1.0375e+01,3.6550e+00,1.0000e+00,9.5005e+00,5.5444e+00,1.0000e+00,8.2857e+00,7.2352e+00,1.0000e+00,6.7740e+00,8.6667e+00,1.0000e+00,5.0197e+00,9.7879e+00,1.0000e+00,3.0856e+00,1.0558e+01,1.0000e+00,1.0410e+00,1.0951e+01,1.0000e+00,-1.0410e+00,1.0951e+01,1.0000e+00,-3.0856e+00,1.0558e+01,1.0000e+00,-5.0197e+00,9.7879e+00,1.0000e+00,-6.7740e+00,8.6667e+00,1.0000e+00,-8.2857e+00,7.2352e+00,1.0000e+00,-9.5005e+00,5.5444e+00,1.0000e+00,-1.0375e+01,3.6550e+00,1.0000e+00,-1.0375e+01,3.0000e+00,1.0000e+00,-5.4829e+00,3.0000e+00,1.0000e+00};
			return value;
		}


		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_75_index_1()
		{
			int[] value = {110,22,23,110,23,24,110,24,80,110,80,81,110,81,82,110,82,83,110,83,84,110,84,85,110,85,86,110,86,87,110,87,88,110,88,89,110,89,59,79,80,24,78,79,24,77,78,24,76,77,24,75,76,24,74,75,24,74,24,25,73,74,25,72,73,25,71,72,25,70,71,25,69,70,25,69,25,26,68,69,26,67,68,26,66,67,26,66,26,27,65,66,27,27,45,46,27,46,47,27,47,48,65,27,48,64,65,48,64,48,49,64,49,50,63,64,50,63,50,51,63,51,52,63,52,53,63,53,54,63,54,55,63,55,56,62,63,56,62,56,57,62,57,58,62,58,28,62,28,29,62,29,30,62,30,31,44,45,27,43,44,27,42,43,27,41,42,27,40,41,27,39,40,27,39,27,0,38,39,0,37,38,0,36,37,0,35,36,0,35,0,1,34,35,1,34,1,2,33,34,2,32,33,2,31,32,2,62,31,2,61,62,2,60,61,2,60,2,3,60,3,4,59,60,4,59,4,5,59,5,6,59,6,7,59,7,8,59,8,9,12,13,14,14,15,16,14,16,179,14,179,180,14,180,181,14,181,182,14,182,152,14,152,153,14,153,154,14,154,155,14,155,156,14,156,157,14,157,158,14,158,159,12,14,159,12,159,160,11,12,160,11,160,161,10,11,161,10,161,162,10,162,163,9,10,163,9,163,164,9,164,165,9,165,166,9,166,167,9,167,168,9,168,169,59,9,169,59,169,170,59,170,171,59,171,172,59,172,173,59,173,174,59,174,175,178,179,16,177,178,16,176,177,16,175,176,16,59,175,16,16,17,18,16,18,19,19,145,146,16,19,146,16,146,147,16,147,148,16,148,149,16,149,150,16,150,151,16,151,121,16,121,122,16,122,123,16,123,124,16,124,125,16,125,126,16,126,127,16,127,128,59,16,128,59,128,129,59,129,130,59,130,131,59,131,132,59,132,133,59,133,134,59,134,135,59,135,136,59,136,137,59,137,138,59,138,139,59,139,140,59,140,141,59,141,142,59,142,143,144,145,19,143,144,19,143,19,20,143,20,21,143,21,22,22,110,111,22,111,112,22,112,113,22,113,114,143,22,114,143,114,115,143,115,116,143,116,117,143,117,118,143,118,119,143,119,120,143,120,90,143,90,91,143,91,92,143,92,93,143,93,94,143,94,95,143,95,96,59,143,96,59,96,97,59,97,98,59,98,99,59,99,100,59,100,101,59,101,102,59,102,103,59,103,104,59,104,105,59,105,106,59,106,107,59,107,108,59,108,109,110,59,109};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_75_point_1()
		{
			double[] value = {1.0375e+01,-3.6550e+00,1.0000e+00,1.0375e+01,-3.0000e+00,1.0000e+00,5.4829e+00,-3.0000e+00,1.0000e+00,4.7994e+00,-4.0035e+00,1.0000e+00,3.9348e+00,-4.8559e+00,1.0000e+00,2.9217e+00,-5.5251e+00,1.0000e+00,1.7983e+00,-5.9857e+00,1.0000e+00,6.0708e-01,-6.2204e+00,1.0000e+00,-6.0708e-01,-6.2204e+00,1.0000e+00,-1.7983e+00,-5.9857e+00,1.0000e+00,-2.9217e+00,-5.5251e+00,1.0000e+00,-3.9348e+00,-4.8559e+00,1.0000e+00,-4.7994e+00,-4.0035e+00,1.0000e+00,-5.4829e+00,-3.0000e+00,1.0000e+00,-1.0375e+01,-3.0000e+00,1.0000e+00,-1.0375e+01,-3.6550e+00,1.0000e+00,-9.5005e+00,-5.5444e+00,1.0000e+00,-8.2857e+00,-7.2352e+00,1.0000e+00,-6.7740e+00,-8.6667e+00,1.0000e+00,-5.0197e+00,-9.7879e+00,1.0000e+00,-3.0856e+00,-1.0558e+01,1.0000e+00,-1.0410e+00,-1.0951e+01,1.0000e+00,1.0410e+00,-1.0951e+01,1.0000e+00,3.0856e+00,-1.0558e+01,1.0000e+00,5.0197e+00,-9.7879e+00,1.0000e+00,6.7740e+00,-8.6667e+00,1.0000e+00,8.2857e+00,-7.2352e+00,1.0000e+00,9.5005e+00,-5.5444e+00,1.0000e+00,6.8431e+00,-4.2240e+00,1.0000e+00,6.8885e+00,-4.0792e+00,1.0000e+00,6.9621e+00,-3.9465e+00,1.0000e+00,7.0610e+00,-3.8314e+00,1.0000e+00,7.1810e+00,-3.7385e+00,1.0000e+00,7.3172e+00,-3.6717e+00,1.0000e+00,7.4642e+00,-3.6336e+00,1.0000e+00,7.6157e+00,-3.6260e+00,1.0000e+00,7.7657e+00,-3.6489e+00,1.0000e+00,7.9080e+00,-3.7016e+00,1.0000e+00,8.0368e+00,-3.7819e+00,1.0000e+00,8.1468e+00,-3.8865e+00,1.0000e+00,8.2335e+00,-4.0110e+00,1.0000e+00,8.2933e+00,-4.1505e+00,1.0000e+00,8.3239e+00,-4.2991e+00,1.0000e+00,8.3239e+00,-4.4509e+00,1.0000e+00,8.2933e+00,-4.5995e+00,1.0000e+00,8.2335e+00,-4.7390e+00,1.0000e+00,8.1468e+00,-4.8635e+00,1.0000e+00,8.0368e+00,-4.9681e+00,1.0000e+00,7.9080e+00,-5.0484e+00,1.0000e+00,7.7657e+00,-5.1011e+00,1.0000e+00,7.6157e+00,-5.1240e+00,1.0000e+00,7.4642e+00,-5.1164e+00,1.0000e+00,7.3172e+00,-5.0783e+00,1.0000e+00,7.1810e+00,-5.0115e+00,1.0000e+00,7.0610e+00,-4.9186e+00,1.0000e+00,6.9621e+00,-4.8035e+00,1.0000e+00,6.8885e+00,-4.6708e+00,1.0000e+00,6.8431e+00,-4.5260e+00,1.0000e+00,6.8277e+00,-4.3750e+00,1.0000e+00,3.6399e+00,-7.4270e+00,1.0000e+00,3.6853e+00,-7.2822e+00,1.0000e+00,3.7589e+00,-7.1495e+00,1.0000e+00,3.8578e+00,-7.0344e+00,1.0000e+00,3.9778e+00,-6.9415e+00,1.0000e+00,4.1140e+00,-6.8747e+00,1.0000e+00,4.2609e+00,-6.8366e+00,1.0000e+00,4.4125e+00,-6.8290e+00,1.0000e+00,4.5625e+00,-6.8519e+00,1.0000e+00,4.7048e+00,-6.9046e+00,1.0000e+00,4.8336e+00,-6.9849e+00,1.0000e+00,4.9436e+00,-7.0895e+00,1.0000e+00,5.0303e+00,-7.2140e+00,1.0000e+00,5.0901e+00,-7.3535e+00,1.0000e+00,5.1207e+00,-7.5021e+00,1.0000e+00,5.1207e+00,-7.6539e+00,1.0000e+00,5.0901e+00,-7.8025e+00,1.0000e+00,5.0303e+00,-7.9420e+00,1.0000e+00,4.9436e+00,-8.0665e+00,1.0000e+00,4.8336e+00,-8.1711e+00,1.0000e+00,4.7048e+00,-8.2514e+00,1.0000e+00,4.5625e+00,-8.3041e+00,1.0000e+00,4.4125e+00,-8.3270e+00,1.0000e+00,4.2609e+00,-8.3194e+00,1.0000e+00,4.1140e+00,-8.2813e+00,1.0000e+00,3.9778e+00,-8.2145e+00,1.0000e+00,3.8578e+00,-8.1216e+00,1.0000e+00,3.7589e+00,-8.0065e+00,1.0000e+00,3.6853e+00,-7.8738e+00,1.0000e+00,3.6399e+00,-7.7290e+00,1.0000e+00,3.6245e+00,-7.5780e+00,1.0000e+00,-7.3465e-01,-8.5990e+00,1.0000e+00,-6.8922e-01,-8.4542e+00,1.0000e+00,-6.1557e-01,-8.3215e+00,1.0000e+00,-5.1673e-01,-8.2064e+00,1.0000e+00,-3.9672e-01,-8.1135e+00,1.0000e+00,-2.6048e-01,-8.0467e+00,1.0000e+00,-1.1357e-01,-8.0086e+00,1.0000e+00,3.7987e-02,-8.0010e+00,1.0000e+00,1.8799e-01,-8.0239e+00,1.0000e+00,3.3030e-01,-8.0766e+00,1.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_75_point_2()
		{
			double[] value = {4.5908e-01,-8.1569e+00,1.0000e+00,5.6907e-01,-8.2615e+00,1.0000e+00,6.5576e-01,-8.3860e+00,1.0000e+00,7.1560e-01,-8.5255e+00,1.0000e+00,7.4615e-01,-8.6741e+00,1.0000e+00,7.4615e-01,-8.8259e+00,1.0000e+00,7.1560e-01,-8.9745e+00,1.0000e+00,6.5576e-01,-9.1140e+00,1.0000e+00,5.6907e-01,-9.2385e+00,1.0000e+00,4.5908e-01,-9.3431e+00,1.0000e+00,3.3030e-01,-9.4234e+00,1.0000e+00,1.8799e-01,-9.4761e+00,1.0000e+00,3.7987e-02,-9.4990e+00,1.0000e+00,-1.1357e-01,-9.4914e+00,1.0000e+00,-2.6048e-01,-9.4533e+00,1.0000e+00,-3.9672e-01,-9.3865e+00,1.0000e+00,-5.1673e-01,-9.2936e+00,1.0000e+00,-6.1557e-01,-9.1785e+00,1.0000e+00,-6.8922e-01,-9.0458e+00,1.0000e+00,-7.3465e-01,-8.9010e+00,1.0000e+00,-7.5000e-01,-8.7500e+00,1.0000e+00,-5.1092e+00,-7.4270e+00,1.0000e+00,-5.0637e+00,-7.2822e+00,1.0000e+00,-4.9901e+00,-7.1495e+00,1.0000e+00,-4.8912e+00,-7.0344e+00,1.0000e+00,-4.7712e+00,-6.9415e+00,1.0000e+00,-4.6350e+00,-6.8747e+00,1.0000e+00,-4.4881e+00,-6.8366e+00,1.0000e+00,-4.3365e+00,-6.8290e+00,1.0000e+00,-4.1865e+00,-6.8519e+00,1.0000e+00,-4.0442e+00,-6.9046e+00,1.0000e+00,-3.9154e+00,-6.9849e+00,1.0000e+00,-3.8055e+00,-7.0895e+00,1.0000e+00,-3.7188e+00,-7.2140e+00,1.0000e+00,-3.6589e+00,-7.3535e+00,1.0000e+00,-3.6284e+00,-7.5021e+00,1.0000e+00,-3.6284e+00,-7.6539e+00,1.0000e+00,-3.6589e+00,-7.8025e+00,1.0000e+00,-3.7188e+00,-7.9420e+00,1.0000e+00,-3.8055e+00,-8.0665e+00,1.0000e+00,-3.9154e+00,-8.1711e+00,1.0000e+00,-4.0442e+00,-8.2514e+00,1.0000e+00,-4.1865e+00,-8.3041e+00,1.0000e+00,-4.3365e+00,-8.3270e+00,1.0000e+00,-4.4881e+00,-8.3194e+00,1.0000e+00,-4.6350e+00,-8.2813e+00,1.0000e+00,-4.7712e+00,-8.2145e+00,1.0000e+00,-4.8912e+00,-8.1216e+00,1.0000e+00,-4.9901e+00,-8.0065e+00,1.0000e+00,-5.0637e+00,-7.8738e+00,1.0000e+00,-5.1092e+00,-7.7290e+00,1.0000e+00,-5.1245e+00,-7.5780e+00,1.0000e+00,-8.3124e+00,-4.2240e+00,1.0000e+00,-8.2669e+00,-4.0792e+00,1.0000e+00,-8.1933e+00,-3.9465e+00,1.0000e+00,-8.0944e+00,-3.8314e+00,1.0000e+00,-7.9744e+00,-3.7385e+00,1.0000e+00,-7.8382e+00,-3.6717e+00,1.0000e+00,-7.6913e+00,-3.6336e+00,1.0000e+00,-7.5397e+00,-3.6260e+00,1.0000e+00,-7.3897e+00,-3.6489e+00,1.0000e+00,-7.2474e+00,-3.7016e+00,1.0000e+00,-7.1186e+00,-3.7819e+00,1.0000e+00,-7.0087e+00,-3.8865e+00,1.0000e+00,-6.9220e+00,-4.0110e+00,1.0000e+00,-6.8621e+00,-4.1505e+00,1.0000e+00,-6.8316e+00,-4.2991e+00,1.0000e+00,-6.8316e+00,-4.4509e+00,1.0000e+00,-6.8621e+00,-4.5995e+00,1.0000e+00,-6.9220e+00,-4.7390e+00,1.0000e+00,-7.0087e+00,-4.8635e+00,1.0000e+00,-7.1186e+00,-4.9681e+00,1.0000e+00,-7.2474e+00,-5.0484e+00,1.0000e+00,-7.3897e+00,-5.1011e+00,1.0000e+00,-7.5397e+00,-5.1240e+00,1.0000e+00,-7.6913e+00,-5.1164e+00,1.0000e+00,-7.8382e+00,-5.0783e+00,1.0000e+00,-7.9744e+00,-5.0115e+00,1.0000e+00,-8.0944e+00,-4.9186e+00,1.0000e+00,-8.1933e+00,-4.8035e+00,1.0000e+00,-8.2669e+00,-4.6708e+00,1.0000e+00,-8.3124e+00,-4.5260e+00,1.0000e+00,-8.3277e+00,-4.3750e+00,1.0000e+00};
			return value;
		}






		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_95_index_1()
		{
			int[] value = {18,34,35,18,35,36,18,36,37,18,37,38,18,38,39,18,39,40,18,40,41,48,49,355,47,48,355,46,47,355,45,46,355,44,45,355,43,44,355,42,43,355,42,355,356,41,42,356,18,41,356,18,356,357,18,357,358,358,75,76,358,76,77,358,77,78,358,78,79,358,79,80,18,358,80,18,80,81,18,81,82,18,82,83,18,83,84,18,84,85,74,75,358,73,74,358,72,73,358,71,72,358,70,71,358,69,70,358,68,69,358,68,358,359,67,68,359,66,67,359,65,66,359,64,65,359,64,359,360,63,64,360,93,63,360,93,360,361,92,93,361,91,92,361,361,102,103,361,103,104,361,104,105,91,361,105,90,91,105,90,105,106,90,106,107,90,107,108,90,108,109,90,109,110,90,110,111,90,111,112,90,112,113,90,113,114,89,90,114,89,114,115,89,115,116,89,116,117,89,117,118,89,118,119,89,119,120,101,102,361,100,101,361,99,100,361,98,99,361,97,98,361,96,97,361,95,96,361,95,361,362,94,95,362,124,94,362,123,124,362,123,362,363,122,123,363,121,122,363,121,363,196,120,121,196,120,196,197,89,120,197,88,89,197,88,197,198,88,198,199,88,199,200,88,200,201,88,201,202,88,202,203,88,203,204,88,204,205,88,205,206,88,206,207,88,207,208,88,208,209,88,209,210,88,210,211,88,211,212,195,196,363,194,195,363,193,194,363,192,193,363,191,192,363,190,191,363,189,190,363,189,363,364,188,189,364,187,188,364,217,187,364,216,217,364,216,364,365,215,216,365,214,215,365,213,214,365,212,213,365,212,365,366,88,212,366,87,88,366,366,254,255,366,255,256,366,256,257,87,366,257,87,257,258,87,258,259,87,259,260,87,260,261,87,261,262,87,262,263,87,263,264,87,264,265,87,265,266,87,266,267,87,267,268,87,268,269,87,269,270,87,270,271,87,271,272,87,272,273,253,254,366,252,253,366,251,252,366,250,251,366,249,250,366,279,249,366,278,279,366,278,366,367,277,278,367,276,277,367,275,276,367,274,275,367,274,367,368,273,274,368,87,273,368,86,87,368,368,369,313,368,313,314,368,314,315,368,315,316,368,316,317,368,317,318,368,318,319,368,319,320,368,320,321,368,321,322,368,322,323,368,323,324,312,313,369,311,312,369,341,311,369,340,341,369,339,340,369,338,339,369,337,338,369,337,369,342,336,337,342,335,336,342,334,335,342,333,334,342,333,342,343,332,333,343,331,332,343,330,331,343,329,330,343,328,329,343,327,328,343,327,343,344,344,307,308,344,308,309,344,309,310,327,344,310,326,327,310,326,310,280,326,280,281,326,281,282,326,282,283,326,283,284,326,284,285,326,285,286,326,286,287,326,287,288,326,288,289,326,289,290,326,290,291,326,291,292,326,292,293,326,293,294,306,307,344,305,306,344,304,305,344,303,304,344,302,303,344,301,302,344,300,301,344,300,344,345,299,300,345,298,299,345,297,298,345,296,297,345,296,345,346,295,296,346,325,295,346,325,346,347,347,242,243,347,243,244,347,244,245,347,245,246,347,246,247,325,347,247,325,247,248,325,248,218,324,325,218,324,218,219,324,219,220,324,220,221,324,221,222,324,222,223,324,223,224,324,224,225,324,225,226,324,226,227,324,227,228,324,228,229,324,229,230,324,230,231,241,242,347,240,241,347,239,240,347,238,239,347,237,238,347,236,237,347,235,236,347,235,347,348,234,235,348,233,234,348,232,233,348,231,232,348,324,231,348,348,349,350,348,350,176,348,176,177,348,177,178,348,178,179,348,179,180,348,180,181,348,181,182,348,182,183,348,183,184,348,184,185,348,185,186,348,186,156,348,156,157,348,157,158,348,158,159,348,159,160,175,176,350,174,175,350,173,174,350,172,173,350,171,172,350,170,171,350,169,170,350,169,350,351,168,169,351,167,168,351,166,167,351,166,351,352,165,166,352,164,165,352,352,146,147,164,352,147,163,164,147,162,163,147,162,147,148,162,148,149,162,149,150,162,150,151,162,151,152,162,152,153,162,153,154,162,154,155,162,155,125,162,125,126,162,126,127,162,127,128,162,128,129,161,162,129,161,129,130,145,146,352,144,145,352,143,144,352,142,143,352,141,142,352,140,141,352,139,140,352,139,352,353,138,139,353,137,138,353,136,137,353,135,136,353,135,353,354,134,135,354,133,134,354,132,133,354,132,354,355,131,132,355,130,131,355,161,130,355,355,49,50,355};
			return value;
		}
		private int[] getIndexedTriangleSet_6_95_index_2()
		{
			int[] value = {50,51,355,51,52,161,355,52,161,52,53,161,53,54,161,54,55,161,55,56,161,56,57,160,161,57,160,57,58,160,58,59,160,59,60,160,60,61,160,61,62,160,62,32,160,32,33,160,33,34,34,18,19,160,34,19,348,160,19,348,19,20,348,20,21,348,21,22,348,22,23,348,23,24,348,24,25,348,25,26,348,26,27,348,27,28,348,28,29,324,348,29,324,29,30,324,30,0,368,324,0,368,0,1,368,1,2,368,2,3,368,3,4,368,4,5,368,5,6,368,6,7,368,7,8,368,8,9,86,368,9,86,9,10,86,10,11,86,11,12,85,86,12,85,12,13,85,13,14,85,14,15,85,15,16,85,16,17,18,85,17};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_95_point_1()
		{
			double[] value = {-5.3750e+00,0.0000e+00,0.0000e+00,-5.2650e+00,-1.0820e+00,0.0000e+00,-4.9394e+00,-2.1197e+00,0.0000e+00,-4.4116e+00,-3.0706e+00,0.0000e+00,-3.7032e+00,-3.8958e+00,0.0000e+00,-2.8432e+00,-4.5615e+00,0.0000e+00,-1.8668e+00,-5.0404e+00,0.0000e+00,-8.1392e-01,-5.3130e+00,0.0000e+00,2.7224e-01,-5.3681e+00,0.0000e+00,1.3473e+00,-5.2034e+00,0.0000e+00,2.3671e+00,-4.8257e+00,0.0000e+00,3.2901e+00,-4.2504e+00,0.0000e+00,4.0783e+00,-3.5011e+00,0.0000e+00,4.6996e+00,-2.6085e+00,0.0000e+00,5.1285e+00,-1.6091e+00,0.0000e+00,5.3474e+00,-5.4378e-01,0.0000e+00,5.3474e+00,5.4378e-01,0.0000e+00,5.1285e+00,1.6091e+00,0.0000e+00,4.6996e+00,2.6085e+00,0.0000e+00,4.0783e+00,3.5011e+00,0.0000e+00,3.2901e+00,4.2504e+00,0.0000e+00,2.3671e+00,4.8257e+00,0.0000e+00,1.3473e+00,5.2034e+00,0.0000e+00,2.7224e-01,5.3681e+00,0.0000e+00,-8.1392e-01,5.3130e+00,0.0000e+00,-1.8668e+00,5.0404e+00,0.0000e+00,-2.8432e+00,4.5615e+00,0.0000e+00,-3.7032e+00,3.8958e+00,0.0000e+00,-4.4116e+00,3.0706e+00,0.0000e+00,-4.9394e+00,2.1197e+00,0.0000e+00,-5.2650e+00,1.0820e+00,0.0000e+00,-5.3750e+00,1.3165e-15,0.0000e+00,7.2104e+00,4.2995e+00,0.0000e+00,7.2331e+00,4.2271e+00,0.0000e+00,7.2699e+00,4.1608e+00,0.0000e+00,7.3194e+00,4.1032e+00,0.0000e+00,7.3794e+00,4.0568e+00,0.0000e+00,7.4475e+00,4.0233e+00,0.0000e+00,7.5209e+00,4.0043e+00,0.0000e+00,7.5967e+00,4.0005e+00,0.0000e+00,7.6717e+00,4.0120e+00,0.0000e+00,7.7429e+00,4.0383e+00,0.0000e+00,7.8073e+00,4.0785e+00,0.0000e+00,7.8623e+00,4.1307e+00,0.0000e+00,7.9056e+00,4.1930e+00,0.0000e+00,7.9355e+00,4.2627e+00,0.0000e+00,7.9508e+00,4.3371e+00,0.0000e+00,7.9508e+00,4.4129e+00,0.0000e+00,7.9355e+00,4.4873e+00,0.0000e+00,7.9056e+00,4.5570e+00,0.0000e+00,7.8623e+00,4.6193e+00,0.0000e+00,7.8073e+00,4.6715e+00,0.0000e+00,7.7429e+00,4.7117e+00,0.0000e+00,7.6717e+00,4.7380e+00,0.0000e+00,7.5967e+00,4.7495e+00,0.0000e+00,7.5209e+00,4.7457e+00,0.0000e+00,7.4475e+00,4.7267e+00,0.0000e+00,7.3794e+00,4.6932e+00,0.0000e+00,7.3194e+00,4.6468e+00,0.0000e+00,7.2699e+00,4.5892e+00,0.0000e+00,7.2331e+00,4.5229e+00,0.0000e+00,7.2104e+00,4.4505e+00,0.0000e+00,7.2027e+00,4.3750e+00,0.0000e+00,7.2104e+00,-4.4505e+00,0.0000e+00,7.2331e+00,-4.5229e+00,0.0000e+00,7.2699e+00,-4.5892e+00,0.0000e+00,7.3194e+00,-4.6468e+00,0.0000e+00,7.3794e+00,-4.6932e+00,0.0000e+00,7.4475e+00,-4.7267e+00,0.0000e+00,7.5209e+00,-4.7457e+00,0.0000e+00,7.5967e+00,-4.7495e+00,0.0000e+00,7.6717e+00,-4.7380e+00,0.0000e+00,7.7429e+00,-4.7117e+00,0.0000e+00,7.8073e+00,-4.6715e+00,0.0000e+00,7.8623e+00,-4.6193e+00,0.0000e+00,7.9056e+00,-4.5570e+00,0.0000e+00,7.9355e+00,-4.4873e+00,0.0000e+00,7.9508e+00,-4.4129e+00,0.0000e+00,7.9508e+00,-4.3371e+00,0.0000e+00,7.9355e+00,-4.2627e+00,0.0000e+00,7.9056e+00,-4.1930e+00,0.0000e+00,7.8623e+00,-4.1307e+00,0.0000e+00,7.8073e+00,-4.0785e+00,0.0000e+00,7.7429e+00,-4.0383e+00,0.0000e+00,7.6717e+00,-4.0120e+00,0.0000e+00,7.5967e+00,-4.0005e+00,0.0000e+00,7.5209e+00,-4.0043e+00,0.0000e+00,7.4475e+00,-4.0233e+00,0.0000e+00,7.3794e+00,-4.0568e+00,0.0000e+00,7.3194e+00,-4.1032e+00,0.0000e+00,7.2699e+00,-4.1608e+00,0.0000e+00,7.2331e+00,-4.2271e+00,0.0000e+00,7.2104e+00,-4.2995e+00,0.0000e+00,7.2027e+00,-4.3750e+00,0.0000e+00,4.0072e+00,-7.6535e+00,0.0000e+00,4.0299e+00,-7.7259e+00,0.0000e+00,4.0667e+00,-7.7922e+00,0.0000e+00,4.1162e+00,-7.8498e+00,0.0000e+00,4.1762e+00,-7.8962e+00,0.0000e+00,4.2443e+00,-7.9297e+00,0.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_95_point_2()
		{
			double[] value = {4.3177e+00,-7.9487e+00,0.0000e+00,4.3935e+00,-7.9525e+00,0.0000e+00,4.4685e+00,-7.9410e+00,0.0000e+00,4.5397e+00,-7.9147e+00,0.0000e+00,4.6041e+00,-7.8745e+00,0.0000e+00,4.6591e+00,-7.8223e+00,0.0000e+00,4.7024e+00,-7.7600e+00,0.0000e+00,4.7323e+00,-7.6903e+00,0.0000e+00,4.7476e+00,-7.6159e+00,0.0000e+00,4.7476e+00,-7.5401e+00,0.0000e+00,4.7323e+00,-7.4657e+00,0.0000e+00,4.7024e+00,-7.3960e+00,0.0000e+00,4.6591e+00,-7.3337e+00,0.0000e+00,4.6041e+00,-7.2815e+00,0.0000e+00,4.5397e+00,-7.2413e+00,0.0000e+00,4.4685e+00,-7.2150e+00,0.0000e+00,4.3935e+00,-7.2035e+00,0.0000e+00,4.3177e+00,-7.2073e+00,0.0000e+00,4.2443e+00,-7.2263e+00,0.0000e+00,4.1762e+00,-7.2598e+00,0.0000e+00,4.1162e+00,-7.3062e+00,0.0000e+00,4.0667e+00,-7.3638e+00,0.0000e+00,4.0299e+00,-7.4301e+00,0.0000e+00,4.0072e+00,-7.5025e+00,0.0000e+00,3.9995e+00,-7.5780e+00,0.0000e+00,4.0072e+00,7.5025e+00,0.0000e+00,4.0299e+00,7.4301e+00,0.0000e+00,4.0667e+00,7.3638e+00,0.0000e+00,4.1162e+00,7.3062e+00,0.0000e+00,4.1762e+00,7.2598e+00,0.0000e+00,4.2443e+00,7.2263e+00,0.0000e+00,4.3177e+00,7.2073e+00,0.0000e+00,4.3935e+00,7.2035e+00,0.0000e+00,4.4685e+00,7.2150e+00,0.0000e+00,4.5397e+00,7.2413e+00,0.0000e+00,4.6041e+00,7.2815e+00,0.0000e+00,4.6591e+00,7.3337e+00,0.0000e+00,4.7024e+00,7.3960e+00,0.0000e+00,4.7323e+00,7.4657e+00,0.0000e+00,4.7476e+00,7.5401e+00,0.0000e+00,4.7476e+00,7.6159e+00,0.0000e+00,4.7323e+00,7.6903e+00,0.0000e+00,4.7024e+00,7.7600e+00,0.0000e+00,4.6591e+00,7.8223e+00,0.0000e+00,4.6041e+00,7.8745e+00,0.0000e+00,4.5397e+00,7.9147e+00,0.0000e+00,4.4685e+00,7.9410e+00,0.0000e+00,4.3935e+00,7.9525e+00,0.0000e+00,4.3177e+00,7.9487e+00,0.0000e+00,4.2443e+00,7.9297e+00,0.0000e+00,4.1762e+00,7.8962e+00,0.0000e+00,4.1162e+00,7.8498e+00,0.0000e+00,4.0667e+00,7.7922e+00,0.0000e+00,4.0299e+00,7.7259e+00,0.0000e+00,4.0072e+00,7.6535e+00,0.0000e+00,3.9995e+00,7.5780e+00,0.0000e+00,-3.6732e-01,8.6745e+00,0.0000e+00,-3.4461e-01,8.6021e+00,0.0000e+00,-3.0779e-01,8.5358e+00,0.0000e+00,-2.5836e-01,8.4782e+00,0.0000e+00,-1.9836e-01,8.4318e+00,0.0000e+00,-1.3024e-01,8.3983e+00,0.0000e+00,-5.6785e-02,8.3793e+00,0.0000e+00,1.8993e-02,8.3755e+00,0.0000e+00,9.3995e-02,8.3870e+00,0.0000e+00,1.6515e-01,8.4133e+00,0.0000e+00,2.2954e-01,8.4535e+00,0.0000e+00,2.8453e-01,8.5057e+00,0.0000e+00,3.2788e-01,8.5680e+00,0.0000e+00,3.5780e-01,8.6377e+00,0.0000e+00,3.7308e-01,8.7121e+00,0.0000e+00,3.7308e-01,8.7879e+00,0.0000e+00,3.5780e-01,8.8623e+00,0.0000e+00,3.2788e-01,8.9320e+00,0.0000e+00,2.8453e-01,8.9943e+00,0.0000e+00,2.2954e-01,9.0465e+00,0.0000e+00,1.6515e-01,9.0867e+00,0.0000e+00,9.3995e-02,9.1130e+00,0.0000e+00,1.8993e-02,9.1245e+00,0.0000e+00,-5.6785e-02,9.1207e+00,0.0000e+00,-1.3024e-01,9.1017e+00,0.0000e+00,-1.9836e-01,9.0682e+00,0.0000e+00,-2.5836e-01,9.0218e+00,0.0000e+00,-3.0779e-01,8.9642e+00,0.0000e+00,-3.4461e-01,8.8979e+00,0.0000e+00,-3.6732e-01,8.8255e+00,0.0000e+00,-3.7500e-01,8.7500e+00,0.0000e+00,-3.6732e-01,-8.8255e+00,0.0000e+00,-3.4461e-01,-8.8979e+00,0.0000e+00,-3.0779e-01,-8.9642e+00,0.0000e+00,-2.5836e-01,-9.0218e+00,0.0000e+00,-1.9836e-01,-9.0682e+00,0.0000e+00,-1.3024e-01,-9.1017e+00,0.0000e+00,-5.6785e-02,-9.1207e+00,0.0000e+00,1.8993e-02,-9.1245e+00,0.0000e+00,9.3995e-02,-9.1130e+00,0.0000e+00,1.6515e-01,-9.0867e+00,0.0000e+00,2.2954e-01,-9.0465e+00,0.0000e+00,2.8453e-01,-8.9943e+00,0.0000e+00,3.2788e-01,-8.9320e+00,0.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_95_point_3()
		{
			double[] value = {3.5780e-01,-8.8623e+00,0.0000e+00,3.7308e-01,-8.7879e+00,0.0000e+00,3.7308e-01,-8.7121e+00,0.0000e+00,3.5780e-01,-8.6377e+00,0.0000e+00,3.2788e-01,-8.5680e+00,0.0000e+00,2.8453e-01,-8.5057e+00,0.0000e+00,2.2954e-01,-8.4535e+00,0.0000e+00,1.6515e-01,-8.4133e+00,0.0000e+00,9.3995e-02,-8.3870e+00,0.0000e+00,1.8993e-02,-8.3755e+00,0.0000e+00,-5.6785e-02,-8.3793e+00,0.0000e+00,-1.3024e-01,-8.3983e+00,0.0000e+00,-1.9836e-01,-8.4318e+00,0.0000e+00,-2.5836e-01,-8.4782e+00,0.0000e+00,-3.0779e-01,-8.5358e+00,0.0000e+00,-3.4461e-01,-8.6021e+00,0.0000e+00,-3.6732e-01,-8.6745e+00,0.0000e+00,-3.7500e-01,-8.7500e+00,0.0000e+00,-4.7418e+00,7.5025e+00,0.0000e+00,-4.7191e+00,7.4301e+00,0.0000e+00,-4.6823e+00,7.3638e+00,0.0000e+00,-4.6329e+00,7.3062e+00,0.0000e+00,-4.5729e+00,7.2598e+00,0.0000e+00,-4.5048e+00,7.2263e+00,0.0000e+00,-4.4313e+00,7.2073e+00,0.0000e+00,-4.3555e+00,7.2035e+00,0.0000e+00,-4.2805e+00,7.2150e+00,0.0000e+00,-4.2094e+00,7.2413e+00,0.0000e+00,-4.1450e+00,7.2815e+00,0.0000e+00,-4.0900e+00,7.3337e+00,0.0000e+00,-4.0466e+00,7.3960e+00,0.0000e+00,-4.0167e+00,7.4657e+00,0.0000e+00,-4.0014e+00,7.5401e+00,0.0000e+00,-4.0014e+00,7.6159e+00,0.0000e+00,-4.0167e+00,7.6903e+00,0.0000e+00,-4.0466e+00,7.7600e+00,0.0000e+00,-4.0900e+00,7.8223e+00,0.0000e+00,-4.1450e+00,7.8745e+00,0.0000e+00,-4.2094e+00,7.9147e+00,0.0000e+00,-4.2805e+00,7.9410e+00,0.0000e+00,-4.3555e+00,7.9525e+00,0.0000e+00,-4.4313e+00,7.9487e+00,0.0000e+00,-4.5048e+00,7.9297e+00,0.0000e+00,-4.5729e+00,7.8962e+00,0.0000e+00,-4.6329e+00,7.8498e+00,0.0000e+00,-4.6823e+00,7.7922e+00,0.0000e+00,-4.7191e+00,7.7259e+00,0.0000e+00,-4.7418e+00,7.6535e+00,0.0000e+00,-4.7495e+00,7.5780e+00,0.0000e+00,-4.7418e+00,-7.6535e+00,0.0000e+00,-4.7191e+00,-7.7259e+00,0.0000e+00,-4.6823e+00,-7.7922e+00,0.0000e+00,-4.6329e+00,-7.8498e+00,0.0000e+00,-4.5729e+00,-7.8962e+00,0.0000e+00,-4.5048e+00,-7.9297e+00,0.0000e+00,-4.4313e+00,-7.9487e+00,0.0000e+00,-4.3555e+00,-7.9525e+00,0.0000e+00,-4.2805e+00,-7.9410e+00,0.0000e+00,-4.2094e+00,-7.9147e+00,0.0000e+00,-4.1450e+00,-7.8745e+00,0.0000e+00,-4.0900e+00,-7.8223e+00,0.0000e+00,-4.0466e+00,-7.7600e+00,0.0000e+00,-4.0167e+00,-7.6903e+00,0.0000e+00,-4.0014e+00,-7.6159e+00,0.0000e+00,-4.0014e+00,-7.5401e+00,0.0000e+00,-4.0167e+00,-7.4657e+00,0.0000e+00,-4.0466e+00,-7.3960e+00,0.0000e+00,-4.0900e+00,-7.3337e+00,0.0000e+00,-4.1450e+00,-7.2815e+00,0.0000e+00,-4.2094e+00,-7.2413e+00,0.0000e+00,-4.2805e+00,-7.2150e+00,0.0000e+00,-4.3555e+00,-7.2035e+00,0.0000e+00,-4.4313e+00,-7.2073e+00,0.0000e+00,-4.5048e+00,-7.2263e+00,0.0000e+00,-4.5729e+00,-7.2598e+00,0.0000e+00,-4.6329e+00,-7.3062e+00,0.0000e+00,-4.6823e+00,-7.3638e+00,0.0000e+00,-4.7191e+00,-7.4301e+00,0.0000e+00,-4.7418e+00,-7.5025e+00,0.0000e+00,-4.7495e+00,-7.5780e+00,0.0000e+00,-7.9450e+00,4.2995e+00,0.0000e+00,-7.9223e+00,4.2271e+00,0.0000e+00,-7.8855e+00,4.1608e+00,0.0000e+00,-7.8361e+00,4.1032e+00,0.0000e+00,-7.7761e+00,4.0568e+00,0.0000e+00,-7.7080e+00,4.0233e+00,0.0000e+00,-7.6345e+00,4.0043e+00,0.0000e+00,-7.5587e+00,4.0005e+00,0.0000e+00,-7.4837e+00,4.0120e+00,0.0000e+00,-7.4126e+00,4.0383e+00,0.0000e+00,-7.3482e+00,4.0785e+00,0.0000e+00,-7.2932e+00,4.1307e+00,0.0000e+00,-7.2498e+00,4.1930e+00,0.0000e+00,-7.2199e+00,4.2627e+00,0.0000e+00,-7.2046e+00,4.3371e+00,0.0000e+00,-7.2046e+00,4.4129e+00,0.0000e+00,-7.2199e+00,4.4873e+00,0.0000e+00,-7.2498e+00,4.5570e+00,0.0000e+00,-7.2932e+00,4.6193e+00,0.0000e+00,-7.3482e+00,4.6715e+00,0.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_95_point_4()
		{
			double[] value = {-7.4126e+00,4.7117e+00,0.0000e+00,-7.4837e+00,4.7380e+00,0.0000e+00,-7.5587e+00,4.7495e+00,0.0000e+00,-7.6345e+00,4.7457e+00,0.0000e+00,-7.7080e+00,4.7267e+00,0.0000e+00,-7.7761e+00,4.6932e+00,0.0000e+00,-7.8361e+00,4.6468e+00,0.0000e+00,-7.8855e+00,4.5892e+00,0.0000e+00,-7.9223e+00,4.5229e+00,0.0000e+00,-7.9450e+00,4.4505e+00,0.0000e+00,-7.9527e+00,4.3750e+00,0.0000e+00,-7.9450e+00,-4.4505e+00,0.0000e+00,-7.9223e+00,-4.5229e+00,0.0000e+00,-7.8855e+00,-4.5892e+00,0.0000e+00,-7.8361e+00,-4.6468e+00,0.0000e+00,-7.7761e+00,-4.6932e+00,0.0000e+00,-7.7080e+00,-4.7267e+00,0.0000e+00,-7.6345e+00,-4.7457e+00,0.0000e+00,-7.5587e+00,-4.7495e+00,0.0000e+00,-7.4837e+00,-4.7380e+00,0.0000e+00,-7.4126e+00,-4.7117e+00,0.0000e+00,-7.3482e+00,-4.6715e+00,0.0000e+00,-7.2932e+00,-4.6193e+00,0.0000e+00,-7.2498e+00,-4.5570e+00,0.0000e+00,-7.2199e+00,-4.4873e+00,0.0000e+00,-7.2046e+00,-4.4129e+00,0.0000e+00,-7.2046e+00,-4.3371e+00,0.0000e+00,-7.2199e+00,-4.2627e+00,0.0000e+00,-7.2498e+00,-4.1930e+00,0.0000e+00,-7.2932e+00,-4.1307e+00,0.0000e+00,-7.3482e+00,-4.0785e+00,0.0000e+00,-7.4126e+00,-4.0383e+00,0.0000e+00,-7.4837e+00,-4.0120e+00,0.0000e+00,-7.5587e+00,-4.0005e+00,0.0000e+00,-7.6345e+00,-4.0043e+00,0.0000e+00,-7.7080e+00,-4.0233e+00,0.0000e+00,-7.7761e+00,-4.0568e+00,0.0000e+00,-7.8361e+00,-4.1032e+00,0.0000e+00,-7.8855e+00,-4.1608e+00,0.0000e+00,-7.9223e+00,-4.2271e+00,0.0000e+00,-7.9450e+00,-4.2995e+00,0.0000e+00,-7.9527e+00,-4.3750e+00,0.0000e+00,-1.0375e+01,-3.6550e+00,0.0000e+00,-1.0375e+01,3.6550e+00,0.0000e+00,-9.5005e+00,5.5444e+00,0.0000e+00,-8.2857e+00,7.2352e+00,0.0000e+00,-6.7740e+00,8.6667e+00,0.0000e+00,-5.0197e+00,9.7879e+00,0.0000e+00,-3.0856e+00,1.0558e+01,0.0000e+00,-1.0410e+00,1.0951e+01,0.0000e+00,1.0410e+00,1.0951e+01,0.0000e+00,3.0856e+00,1.0558e+01,0.0000e+00,5.0197e+00,9.7879e+00,0.0000e+00,6.7740e+00,8.6667e+00,0.0000e+00,8.2857e+00,7.2352e+00,0.0000e+00,9.5005e+00,5.5444e+00,0.0000e+00,1.0375e+01,3.6550e+00,0.0000e+00,1.0375e+01,-3.6550e+00,0.0000e+00,9.5005e+00,-5.5444e+00,0.0000e+00,8.2857e+00,-7.2352e+00,0.0000e+00,6.7740e+00,-8.6667e+00,0.0000e+00,5.0197e+00,-9.7879e+00,0.0000e+00,3.0856e+00,-1.0558e+01,0.0000e+00,1.0410e+00,-1.0951e+01,0.0000e+00,-1.0410e+00,-1.0951e+01,0.0000e+00,-3.0856e+00,-1.0558e+01,0.0000e+00,-5.0197e+00,-9.7879e+00,0.0000e+00,-6.7740e+00,-8.6667e+00,0.0000e+00,-8.2857e+00,-7.2352e+00,0.0000e+00,-9.5005e+00,-5.5444e+00,0.0000e+00};
			return value;
		}



		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_107_index_1()
		{
			int[] value = {5,2,3,5,3,4,7,8,9,7,9,6,11,12,13,11,13,10,15,16,17,15,17,14,19,20,21,19,21,18,23,24,25,23,25,22,27,28,29,27,29,26,31,32,33,31,33,30,35,36,38,35,38,39,35,39,40,35,40,41,35,41,34,43,44,46,43,46,47,43,47,48,50,51,53,50,53,54,50,54,55,57,58,60,57,60,61,63,64,66,63,66,67,69,70,72,69,72,73,69,73,74,76,77,79,76,79,80,76,80,81,84,85,86,84,86,87,83,84,87,83,87,88,83,88,89,91,92,93,91,93,90,95,96,97,95,97,94,99,100,101,99,101,98,103,104,105,103,105,102,107,108,109,107,109,106,111,112,113,111,113,110,115,116,117,115,117,114,119,120,121,119,121,118,123,124,125,123,125,122,127,128,129,127,129,126,131,132,133,131,133,130,135,136,137,135,137,134,139,140,141,139,141,138,143,144,145,143,145,142,147,148,149,147,149,146,151,152,153,151,153,150,155,156,158,155,158,159,155,159,160,155,160,161,155,161,154,163,164,166,163,166,167,163,167,168,170,171,173,170,173,174,170,174,175,177,178,180,177,180,181,183,184,186,183,186,187,189,190,192,189,192,193,189,193,194,196,197,199,196,199,200,196,200,201,204,205,206,204,206,207,203,204,207,203,207,208,203,208,209,211,212,213,211,213,210,215,216,217,215,217,214,219,220,221,219,221,218,223,224,225,223,225,222,227,228,229,227,229,226,231,232,233,231,233,230,235,236,237,235,237,234,243,238,239,243,239,242};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_107_point_1()
		{
			double[] value = {7.3479e-16,6.0000e+00,1.2500e+00,7.3479e-16,6.0000e+00,4.7500e+00,7.8316e-01,5.9487e+00,4.7500e+00,7.8316e-01,5.9487e+00,1.2500e+00,7.3479e-16,6.0000e+00,1.2500e+00,7.3479e-16,6.0000e+00,4.7500e+00,7.8316e-01,5.9487e+00,1.2500e+00,7.8316e-01,5.9487e+00,4.7500e+00,1.5529e+00,5.7956e+00,4.7500e+00,1.5529e+00,5.7956e+00,1.2500e+00,1.5529e+00,5.7956e+00,1.2500e+00,1.5529e+00,5.7956e+00,4.7500e+00,2.2961e+00,5.5433e+00,4.7500e+00,2.2961e+00,5.5433e+00,1.2500e+00,2.2961e+00,5.5433e+00,1.2500e+00,2.2961e+00,5.5433e+00,4.7500e+00,3.0000e+00,5.1962e+00,4.7500e+00,3.0000e+00,5.1962e+00,1.2500e+00,3.0000e+00,5.1962e+00,1.2500e+00,3.0000e+00,5.1962e+00,4.7500e+00,3.6526e+00,4.7601e+00,4.7500e+00,3.6526e+00,4.7601e+00,1.2500e+00,3.6526e+00,4.7601e+00,1.2500e+00,3.6526e+00,4.7601e+00,4.7500e+00,4.2426e+00,4.2426e+00,4.7500e+00,4.2426e+00,4.2426e+00,1.2500e+00,4.2426e+00,4.2426e+00,1.2500e+00,4.2426e+00,4.2426e+00,4.7500e+00,4.7601e+00,3.6526e+00,4.7500e+00,4.7601e+00,3.6526e+00,1.2500e+00,4.7601e+00,3.6526e+00,1.2500e+00,4.7601e+00,3.6526e+00,4.7500e+00,5.1962e+00,3.0000e+00,4.7500e+00,5.1962e+00,3.0000e+00,1.2500e+00,5.1962e+00,3.0000e+00,1.2500e+00,5.1962e+00,3.0000e+00,4.7500e+00,5.5433e+00,2.2961e+00,4.7500e+00,5.5433e+00,2.2961e+00,1.2500e+00,5.5433e+00,2.2961e+00,2.1436e+00,5.5168e+00,2.3590e+00,2.1254e+00,5.2636e+00,2.8800e+00,1.9352e+00,5.2636e+00,2.8800e+00,1.2500e+00,5.5433e+00,2.2961e+00,1.2500e+00,5.5433e+00,2.2961e+00,4.7500e+00,5.7956e+00,1.5529e+00,4.7500e+00,5.7956e+00,1.5529e+00,1.2500e+00,5.7956e+00,1.5529e+00,2.3344e+00,5.7212e+00,1.8077e+00,2.2821e+00,5.5433e+00,2.2961e+00,2.1436e+00,5.7956e+00,1.5529e+00,1.2500e+00,5.7956e+00,1.5529e+00,4.7500e+00,5.9487e+00,7.8316e-01,4.7500e+00,5.9487e+00,7.8316e-01,1.2500e+00,5.9487e+00,7.8316e-01,2.4000e+00,5.8727e+00,1.2294e+00,2.4000e+00,5.7956e+00,1.5529e+00,2.3344e+00,5.9487e+00,7.8316e-01,1.2500e+00,5.9487e+00,7.8316e-01,4.7500e+00,6.0000e+00,-3.6739e-16,4.7500e+00,6.0000e+00,-3.6739e-16,1.2500e+00,6.0000e+00,-3.6739e-16,2.4000e+00,5.9487e+00,7.8316e-01,2.4000e+00,6.0000e+00,-3.6739e-16,1.2500e+00,6.0000e+00,-3.6739e-16,4.7500e+00,5.9487e+00,-7.8316e-01,4.7500e+00,5.9487e+00,-7.8316e-01,1.2500e+00,5.9487e+00,-7.8316e-01,2.4000e+00,6.0000e+00,-3.6739e-16,2.4000e+00,5.9487e+00,-7.8316e-01,1.2500e+00,5.9487e+00,-7.8316e-01,4.7500e+00,5.7956e+00,-1.5529e+00,4.7500e+00,5.7956e+00,-1.5529e+00,1.2500e+00,5.7956e+00,-1.5529e+00,2.3344e+00,5.8727e+00,-1.2294e+00,2.4000e+00,5.9487e+00,-7.8316e-01,2.4000e+00,5.7956e+00,-1.5529e+00,1.2500e+00,5.7956e+00,-1.5529e+00,4.7500e+00,5.5433e+00,-2.2961e+00,4.7500e+00,5.5433e+00,-2.2961e+00,1.2500e+00,5.5433e+00,-2.2961e+00,2.1436e+00,5.7212e+00,-1.8077e+00,2.2821e+00,5.7956e+00,-1.5529e+00,2.3344e+00,5.5433e+00,-2.2961e+00,1.2500e+00,5.5433e+00,-2.2961e+00,4.7500e+00,5.1962e+00,-3.0000e+00,4.7500e+00,5.1962e+00,-3.0000e+00,1.2500e+00,5.2636e+00,-2.8800e+00,1.2500e+00,5.2636e+00,-2.8800e+00,1.9352e+00,5.5168e+00,-2.3590e+00,2.1254e+00,5.5433e+00,-2.2961e+00,2.1436e+00,5.1962e+00,-3.0000e+00,1.2500e+00,5.1962e+00,-3.0000e+00,4.7500e+00,4.7601e+00,-3.6526e+00,4.7500e+00,4.7601e+00,-3.6526e+00,1.2500e+00,4.7601e+00,-3.6526e+00,1.2500e+00,4.7601e+00,-3.6526e+00,4.7500e+00,4.2426e+00,-4.2426e+00,4.7500e+00,4.2426e+00,-4.2426e+00,1.2500e+00,4.2426e+00,-4.2426e+00,1.2500e+00,4.2426e+00,-4.2426e+00,4.7500e+00};
			return value;
		}
		private double[] getCoordinate_7_107_point_2()
		{
			double[] value = {3.6526e+00,-4.7601e+00,4.7500e+00,3.6526e+00,-4.7601e+00,1.2500e+00,3.6526e+00,-4.7601e+00,1.2500e+00,3.6526e+00,-4.7601e+00,4.7500e+00,3.0000e+00,-5.1962e+00,4.7500e+00,3.0000e+00,-5.1962e+00,1.2500e+00,3.0000e+00,-5.1962e+00,1.2500e+00,3.0000e+00,-5.1962e+00,4.7500e+00,2.2961e+00,-5.5433e+00,4.7500e+00,2.2961e+00,-5.5433e+00,1.2500e+00,2.2961e+00,-5.5433e+00,1.2500e+00,2.2961e+00,-5.5433e+00,4.7500e+00,1.5529e+00,-5.7956e+00,4.7500e+00,1.5529e+00,-5.7956e+00,1.2500e+00,1.5529e+00,-5.7956e+00,1.2500e+00,1.5529e+00,-5.7956e+00,4.7500e+00,7.8316e-01,-5.9487e+00,4.7500e+00,7.8316e-01,-5.9487e+00,1.2500e+00,7.8316e-01,-5.9487e+00,1.2500e+00,7.8316e-01,-5.9487e+00,4.7500e+00,0.0000e+00,-6.0000e+00,4.7500e+00,0.0000e+00,-6.0000e+00,1.2500e+00,0.0000e+00,-6.0000e+00,1.2500e+00,0.0000e+00,-6.0000e+00,4.7500e+00,-7.8316e-01,-5.9487e+00,4.7500e+00,-7.8316e-01,-5.9487e+00,1.2500e+00,-7.8316e-01,-5.9487e+00,1.2500e+00,-7.8316e-01,-5.9487e+00,4.7500e+00,-1.5529e+00,-5.7956e+00,4.7500e+00,-1.5529e+00,-5.7956e+00,1.2500e+00,-1.5529e+00,-5.7956e+00,1.2500e+00,-1.5529e+00,-5.7956e+00,4.7500e+00,-2.2961e+00,-5.5433e+00,4.7500e+00,-2.2961e+00,-5.5433e+00,1.2500e+00,-2.2961e+00,-5.5433e+00,1.2500e+00,-2.2961e+00,-5.5433e+00,4.7500e+00,-3.0000e+00,-5.1962e+00,4.7500e+00,-3.0000e+00,-5.1962e+00,1.2500e+00,-3.0000e+00,-5.1962e+00,1.2500e+00,-3.0000e+00,-5.1962e+00,4.7500e+00,-3.6526e+00,-4.7601e+00,4.7500e+00,-3.6526e+00,-4.7601e+00,1.2500e+00,-3.6526e+00,-4.7601e+00,1.2500e+00,-3.6526e+00,-4.7601e+00,4.7500e+00,-4.2426e+00,-4.2426e+00,4.7500e+00,-4.2426e+00,-4.2426e+00,1.2500e+00,-4.2426e+00,-4.2426e+00,1.2500e+00,-4.2426e+00,-4.2426e+00,4.7500e+00,-4.7601e+00,-3.6526e+00,4.7500e+00,-4.7601e+00,-3.6526e+00,1.2500e+00,-4.7601e+00,-3.6526e+00,1.2500e+00,-4.7601e+00,-3.6526e+00,4.7500e+00,-5.1962e+00,-3.0000e+00,4.7500e+00,-5.1962e+00,-3.0000e+00,1.2500e+00,-5.1962e+00,-3.0000e+00,1.2500e+00,-5.1962e+00,-3.0000e+00,4.7500e+00,-5.5433e+00,-2.2961e+00,4.7500e+00,-5.5433e+00,-2.2961e+00,1.2500e+00,-5.5433e+00,-2.2961e+00,2.1436e+00,-5.5168e+00,-2.3590e+00,2.1254e+00,-5.2636e+00,-2.8800e+00,1.9352e+00,-5.2636e+00,-2.8800e+00,1.2500e+00,-5.5433e+00,-2.2961e+00,1.2500e+00,-5.5433e+00,-2.2961e+00,4.7500e+00,-5.7956e+00,-1.5529e+00,4.7500e+00,-5.7956e+00,-1.5529e+00,1.2500e+00,-5.7956e+00,-1.5529e+00,2.3344e+00,-5.7212e+00,-1.8077e+00,2.2821e+00,-5.5433e+00,-2.2961e+00,2.1436e+00,-5.7956e+00,-1.5529e+00,1.2500e+00,-5.7956e+00,-1.5529e+00,4.7500e+00,-5.9487e+00,-7.8316e-01,4.7500e+00,-5.9487e+00,-7.8316e-01,1.2500e+00,-5.9487e+00,-7.8316e-01,2.4000e+00,-5.8727e+00,-1.2294e+00,2.4000e+00,-5.7956e+00,-1.5529e+00,2.3344e+00,-5.9487e+00,-7.8316e-01,1.2500e+00,-5.9487e+00,-7.8316e-01,4.7500e+00,-6.0000e+00,-3.6739e-16,4.7500e+00,-6.0000e+00,-3.6739e-16,1.2500e+00,-6.0000e+00,-3.6739e-16,2.4000e+00,-5.9487e+00,-7.8316e-01,2.4000e+00,-6.0000e+00,-3.6739e-16,1.2500e+00,-6.0000e+00,-3.6739e-16,4.7500e+00,-5.9487e+00,7.8316e-01,4.7500e+00,-5.9487e+00,7.8316e-01,1.2500e+00,-5.9487e+00,7.8316e-01,2.4000e+00,-6.0000e+00,-3.6739e-16,2.4000e+00,-5.9487e+00,7.8316e-01,1.2500e+00,-5.9487e+00,7.8316e-01,4.7500e+00,-5.7956e+00,1.5529e+00,4.7500e+00,-5.7956e+00,1.5529e+00,1.2500e+00,-5.7956e+00,1.5529e+00,2.3344e+00,-5.8727e+00,1.2294e+00,2.4000e+00,-5.9487e+00,7.8316e-01,2.4000e+00,-5.7956e+00,1.5529e+00,1.2500e+00,-5.7956e+00,1.5529e+00,4.7500e+00,-5.5433e+00,2.2961e+00,4.7500e+00,-5.5433e+00,2.2961e+00,1.2500e+00,-5.5433e+00,2.2961e+00,2.1436e+00};
			return value;
		}
		private double[] getCoordinate_7_107_point_3()
		{
			double[] value = {-5.7212e+00,1.8077e+00,2.2821e+00,-5.7956e+00,1.5529e+00,2.3344e+00,-5.5433e+00,2.2961e+00,1.2500e+00,-5.5433e+00,2.2961e+00,4.7500e+00,-5.1962e+00,3.0000e+00,4.7500e+00,-5.1962e+00,3.0000e+00,1.2500e+00,-5.2636e+00,2.8800e+00,1.2500e+00,-5.2636e+00,2.8800e+00,1.9352e+00,-5.5168e+00,2.3590e+00,2.1254e+00,-5.5433e+00,2.2961e+00,2.1436e+00,-5.1962e+00,3.0000e+00,1.2500e+00,-5.1962e+00,3.0000e+00,4.7500e+00,-4.7601e+00,3.6526e+00,4.7500e+00,-4.7601e+00,3.6526e+00,1.2500e+00,-4.7601e+00,3.6526e+00,1.2500e+00,-4.7601e+00,3.6526e+00,4.7500e+00,-4.2426e+00,4.2426e+00,4.7500e+00,-4.2426e+00,4.2426e+00,1.2500e+00,-4.2426e+00,4.2426e+00,1.2500e+00,-4.2426e+00,4.2426e+00,4.7500e+00,-3.6526e+00,4.7601e+00,4.7500e+00,-3.6526e+00,4.7601e+00,1.2500e+00,-3.6526e+00,4.7601e+00,1.2500e+00,-3.6526e+00,4.7601e+00,4.7500e+00,-3.0000e+00,5.1962e+00,4.7500e+00,-3.0000e+00,5.1962e+00,1.2500e+00,-3.0000e+00,5.1962e+00,1.2500e+00,-3.0000e+00,5.1962e+00,4.7500e+00,-2.2961e+00,5.5433e+00,4.7500e+00,-2.2961e+00,5.5433e+00,1.2500e+00,-2.2961e+00,5.5433e+00,1.2500e+00,-2.2961e+00,5.5433e+00,4.7500e+00,-1.5529e+00,5.7956e+00,4.7500e+00,-1.5529e+00,5.7956e+00,1.2500e+00,-1.5529e+00,5.7956e+00,1.2500e+00,-1.5529e+00,5.7956e+00,4.7500e+00,-7.8316e-01,5.9487e+00,4.7500e+00,-7.8316e-01,5.9487e+00,1.2500e+00,-7.8316e-01,5.9487e+00,1.2500e+00,-7.8316e-01,5.9487e+00,4.7500e+00,-7.3479e-16,6.0000e+00,4.7500e+00,-7.3479e-16,6.0000e+00,1.2500e+00,-7.3479e-16,6.0000e+00,4.7500e+00,-7.3479e-16,6.0000e+00,1.2500e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_108_vector_1()
		{
			double[] value = {1.2246e-16,1.0000e+00,0.0000e+00,1.2246e-16,1.0000e+00,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.2246e-16,1.0000e+00,0.0000e+00,1.2246e-16,1.0000e+00,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.1947e-01,3.9317e-01,0.0000e+00,8.7727e-01,4.8000e-01,0.0000e+00,8.7727e-01,4.8000e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.5354e-01,3.0128e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.7878e-01,2.0490e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,1.0000e+00,-6.1232e-17,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.7878e-01,-2.0490e-01,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,9.5354e-01,-3.0128e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,8.7727e-01,-4.8000e-01,0.0000e+00,8.7727e-01,-4.8000e-01,0.0000e+00,9.1947e-01,-3.9317e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00};
			return value;
		}
		private double[] getNormal_7_108_vector_2()
		{
			double[] value = {6.0876e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.1947e-01,-3.9317e-01,0.0000e+00,-8.7727e-01,-4.8000e-01,0.0000e+00,-8.7727e-01,-4.8000e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.5354e-01,-3.0128e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-9.7878e-01,-2.0490e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.7878e-01,2.0490e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00};
			return value;
		}
		private double[] getNormal_7_108_vector_3()
		{
			double[] value = {-9.5354e-01,3.0128e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-8.7727e-01,4.8000e-01,0.0000e+00,-8.7727e-01,4.8000e-01,0.0000e+00,-9.1947e-01,3.9317e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00};
			return value;
		}















































































		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_503_point_1()
		{
			double[] value = {3.5000e+00,-1.2656e+00,9.7066e+00,3.5000e+00,-1.2249e+00,9.6939e+00,3.5000e+00,-1.1876e+00,9.6731e+00,3.5000e+00,-1.1552e+00,9.6453e+00,3.5000e+00,-1.1291e+00,9.6116e+00,3.5000e+00,-1.1103e+00,9.5733e+00,3.5000e+00,-1.0996e+00,9.5319e+00,3.5000e+00,-1.0974e+00,9.4893e+00,3.5000e+00,-1.1039e+00,9.4471e+00,3.5000e+00,-1.1187e+00,9.4071e+00,3.5000e+00,-1.1413e+00,9.3709e+00,3.5000e+00,-1.1707e+00,9.3399e+00,3.5000e+00,-1.2057e+00,9.3156e+00,3.5000e+00,-1.2449e+00,9.2987e+00,3.5000e+00,-1.2868e+00,9.2901e+00,3.5000e+00,-1.3294e+00,9.2901e+00,3.5000e+00,-1.3712e+00,9.2987e+00,3.5000e+00,-1.4105e+00,9.3156e+00,3.5000e+00,-1.4455e+00,9.3399e+00,3.5000e+00,-1.4749e+00,9.3709e+00,3.5000e+00,-1.4975e+00,9.4071e+00,3.5000e+00,-1.5123e+00,9.4471e+00,3.5000e+00,-1.5188e+00,9.4893e+00,3.5000e+00,-1.5166e+00,9.5319e+00,3.5000e+00,-1.5059e+00,9.5733e+00,3.5000e+00,-1.4871e+00,9.6116e+00,3.5000e+00,-1.4610e+00,9.6453e+00,3.5000e+00,-1.4286e+00,9.6731e+00,3.5000e+00,-1.3913e+00,9.6939e+00,3.5000e+00,-1.3506e+00,9.7066e+00,3.5000e+00,-1.3081e+00,9.7110e+00,3.5000e+00,-1.5705e+00,8.3316e+00,3.5000e+00,-1.5297e+00,8.3189e+00,3.5000e+00,-1.4924e+00,8.2981e+00,3.5000e+00,-1.4600e+00,8.2703e+00,3.5000e+00,-1.4339e+00,8.2366e+00,3.5000e+00,-1.4151e+00,8.1983e+00,3.5000e+00,-1.4044e+00,8.1569e+00,3.5000e+00,-1.4022e+00,8.1143e+00,3.5000e+00,-1.4087e+00,8.0721e+00,3.5000e+00,-1.4235e+00,8.0321e+00,3.5000e+00,-1.4461e+00,7.9959e+00,3.5000e+00,-1.4755e+00,7.9649e+00,3.5000e+00,-1.5106e+00,7.9406e+00,3.5000e+00,-1.5498e+00,7.9237e+00,3.5000e+00,-1.5916e+00,7.9151e+00,3.5000e+00,-1.6343e+00,7.9151e+00,3.5000e+00,-1.6761e+00,7.9237e+00,3.5000e+00,-1.7153e+00,7.9406e+00,3.5000e+00,-1.7503e+00,7.9649e+00,3.5000e+00,-1.7797e+00,7.9959e+00,3.5000e+00,-1.8023e+00,8.0321e+00,3.5000e+00,-1.8171e+00,8.0721e+00,3.5000e+00,-1.8236e+00,8.1143e+00,3.5000e+00,-1.8214e+00,8.1569e+00,3.5000e+00,-1.8107e+00,8.1983e+00,3.5000e+00,-1.7919e+00,8.2366e+00,3.5000e+00,-1.7658e+00,8.2703e+00,3.5000e+00,-1.7334e+00,8.2981e+00,3.5000e+00,-1.6961e+00,8.3189e+00,3.5000e+00,-1.6554e+00,8.3316e+00,3.5000e+00,-1.6129e+00,8.3360e+00,3.5000e+00,-1.8753e+00,6.9566e+00,3.5000e+00,-1.8346e+00,6.9439e+00,3.5000e+00,-1.7972e+00,6.9231e+00,3.5000e+00,-1.7649e+00,6.8953e+00,3.5000e+00,-1.7387e+00,6.8616e+00,3.5000e+00,-1.7199e+00,6.8233e+00,3.5000e+00,-1.7092e+00,6.7819e+00,3.5000e+00,-1.7071e+00,6.7393e+00,3.5000e+00,-1.7135e+00,6.6971e+00,3.5000e+00,-1.7284e+00,6.6571e+00,3.5000e+00,-1.7509e+00,6.6209e+00,3.5000e+00,-1.7803e+00,6.5899e+00,3.5000e+00,-1.8154e+00,6.5656e+00,3.5000e+00,-1.8546e+00,6.5487e+00,3.5000e+00,-1.8964e+00,6.5401e+00,3.5000e+00,-1.9391e+00,6.5401e+00,3.5000e+00,-1.9809e+00,6.5487e+00,3.5000e+00,-2.0201e+00,6.5656e+00,3.5000e+00,-2.0552e+00,6.5899e+00,3.5000e+00,-2.0846e+00,6.6209e+00,3.5000e+00,-2.1071e+00,6.6571e+00,3.5000e+00,-2.1220e+00,6.6971e+00,3.5000e+00,-2.1284e+00,6.7393e+00,3.5000e+00,-2.1263e+00,6.7819e+00,3.5000e+00,-2.1156e+00,6.8233e+00,3.5000e+00,-2.0968e+00,6.8616e+00,3.5000e+00,-2.0706e+00,6.8953e+00,3.5000e+00,-2.0383e+00,6.9231e+00,3.5000e+00,-2.0009e+00,6.9439e+00,3.5000e+00,-1.9602e+00,6.9566e+00,3.5000e+00,-1.9178e+00,6.9610e+00,3.5000e+00,-3.2746e+00,5.2500e+00,3.5000e+00,-1.2199e+00,5.2500e+00,3.5000e+00,-1.2199e+00,5.2568e+00,3.5000e+00,-1.2196e+00,5.2636e+00,3.5000e+00,-1.2191e+00,5.2704e+00,3.5000e+00,-1.2185e+00,5.2772e+00,3.5000e+00,-1.2176e+00,5.2840e+00};
			return value;
		}
		private double[] getCoordinate_7_503_point_2()
		{
			double[] value = {3.5000e+00,-1.2166e+00,5.2907e+00,3.5000e+00,-1.2154e+00,5.2974e+00,3.5000e+00,-1.2140e+00,5.3041e+00,3.5000e+00,4.8727e-02,1.1000e+01,3.5000e+00,-1.9998e+00,1.1000e+01};
			return value;
		}





		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_529_index_1()
		{
			int[] value = {160,7,8,160,8,9,160,9,10,160,10,11,160,11,12,160,12,13,160,13,14,15,16,17,15,17,18,15,18,19,15,19,20,15,20,21,15,21,22,15,22,23,15,23,24,15,24,25,15,25,26,15,26,27,15,27,28,15,28,29,15,29,30,14,15,30,160,14,30,160,30,31,160,31,103,160,103,104,104,105,106,104,106,107,104,107,108,104,108,109,104,109,110,104,110,111,104,111,112,104,112,113,113,114,115,113,115,116,113,116,117,113,117,118,113,118,119,113,119,120,113,120,121,113,121,122,113,122,123,113,123,124,113,124,125,113,125,126,113,126,127,113,127,128,113,128,129,113,129,130,113,130,131,113,131,132,113,132,133,113,133,134,113,134,135,113,135,136,113,136,137,104,113,137,104,137,138,104,138,139,104,139,140,104,140,141,104,141,142,104,142,143,160,104,143,160,143,144,160,144,145,160,145,146,160,146,147,148,149,59,61,62,63,61,63,64,61,64,65,61,65,66,61,66,67,61,67,68,61,68,69,61,69,70,61,70,71,61,71,72,61,72,73,61,73,74,61,74,75,61,75,76,61,76,77,61,77,78,61,78,79,61,79,80,61,80,81,61,81,82,61,82,83,61,83,84,60,61,84,60,84,85,60,85,86,60,86,87,60,87,88,60,88,89,60,89,90,60,90,91,60,91,92,60,92,93,60,93,94,102,103,31,101,102,31,101,31,32,100,101,32,99,100,32,98,99,32,97,98,32,97,32,33,97,33,34,96,97,34,96,34,35,95,96,35,95,35,36,95,36,37,94,95,37,94,37,38,94,38,39,94,39,40,45,46,47,45,47,48,45,48,49,45,49,50,45,50,51,45,51,52,45,52,53,44,45,53,44,53,54,44,54,55,44,55,56,44,56,57,44,57,0,44,0,1,43,44,1,42,43,1,41,42,1,40,41,1,94,40,1,6,7,160,5,6,160,4,5,160,3,4,160,2,3,160,2,160,161,59,2,161,59,161,150,148,59,150,147,148,150,147,150,151,147,151,152,147,152,153,147,153,154,147,154,155,147,155,156,147,156,157,147,157,158,147,158,159,160,147,159};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_529_point_1()
		{
			double[] value = {2.5000e+00,1.6927e+00,1.0378e+01,2.5000e+00,1.2500e+00,1.0378e+01,2.5000e+00,1.2500e+00,1.0500e+01,2.5000e+00,1.7288e+00,1.0500e+01,2.5000e+00,1.7543e+00,1.0497e+01,2.5000e+00,1.7787e+00,1.0490e+01,2.5000e+00,1.8012e+00,1.0478e+01,2.5000e+00,1.8208e+00,1.0461e+01,2.5000e+00,1.8367e+00,1.0441e+01,2.5000e+00,1.8484e+00,1.0418e+01,2.5000e+00,1.8553e+00,1.0394e+01,2.5000e+00,1.8572e+00,1.0368e+01,2.5000e+00,1.8540e+00,1.0343e+01,2.5000e+00,1.8458e+00,1.0319e+01,2.5000e+00,1.8329e+00,1.0297e+01,2.5000e+00,1.8160e+00,1.0277e+01,2.5000e+00,1.3790e+00,9.8732e+00,2.5000e+00,1.3769e+00,9.8709e+00,2.5000e+00,1.3753e+00,9.8682e+00,2.5000e+00,1.3742e+00,9.8653e+00,2.5000e+00,1.3738e+00,9.8622e+00,2.5000e+00,1.3739e+00,9.8591e+00,2.5000e+00,1.3745e+00,9.8561e+00,2.5000e+00,1.3758e+00,9.8533e+00,2.5000e+00,1.3776e+00,9.8507e+00,2.5000e+00,1.3798e+00,9.8485e+00,2.5000e+00,1.3824e+00,9.8468e+00,2.5000e+00,1.3853e+00,9.8456e+00,2.5000e+00,1.3883e+00,9.8450e+00,2.5000e+00,1.3914e+00,9.8450e+00,2.5000e+00,1.8406e+00,9.8450e+00,2.5000e+00,1.8406e+00,9.7217e+00,2.5000e+00,1.3885e+00,9.7217e+00,2.5000e+00,1.3624e+00,9.7241e+00,2.5000e+00,1.3372e+00,9.7315e+00,2.5000e+00,1.3138e+00,9.7435e+00,2.5000e+00,1.2932e+00,9.7597e+00,2.5000e+00,1.2759e+00,9.7794e+00,2.5000e+00,1.2627e+00,9.8021e+00,2.5000e+00,1.2541e+00,9.8269e+00,2.5000e+00,1.2502e+00,9.8528e+00,2.5000e+00,1.2513e+00,9.8790e+00,2.5000e+00,1.2573e+00,9.9046e+00,2.5000e+00,1.2681e+00,9.9285e+00,2.5000e+00,1.2831e+00,9.9500e+00,2.5000e+00,1.3019e+00,9.9682e+00,2.5000e+00,1.7070e+00,1.0341e+01,2.5000e+00,1.7099e+00,1.0344e+01,2.5000e+00,1.7120e+00,1.0348e+01,2.5000e+00,1.7134e+00,1.0352e+01,2.5000e+00,1.7139e+00,1.0356e+01,2.5000e+00,1.7136e+00,1.0360e+01,2.5000e+00,1.7125e+00,1.0364e+01,2.5000e+00,1.7105e+00,1.0368e+01,2.5000e+00,1.7079e+00,1.0371e+01,2.5000e+00,1.7046e+00,1.0374e+01,2.5000e+00,1.7009e+00,1.0376e+01,2.5000e+00,1.6969e+00,1.0377e+01,2.5000e+00,1.6927e+00,1.0378e+01,2.5000e+00,1.2500e+00,8.5135e+00,2.5000e+00,1.2500e+00,8.6356e+00,2.5000e+00,1.7161e+00,8.6356e+00,2.5000e+00,1.7161e+00,9.2533e+00,2.5000e+00,1.7159e+00,9.2645e+00,2.5000e+00,1.7134e+00,9.2754e+00,2.5000e+00,1.7089e+00,9.2856e+00,2.5000e+00,1.7024e+00,9.2946e+00,2.5000e+00,1.6941e+00,9.3022e+00,2.5000e+00,1.6846e+00,9.3080e+00,2.5000e+00,1.6741e+00,9.3118e+00,2.5000e+00,1.6630e+00,9.3133e+00,2.5000e+00,1.6519e+00,9.3127e+00,2.5000e+00,1.6411e+00,9.3098e+00,2.5000e+00,1.6311e+00,9.3048e+00,2.5000e+00,1.6223e+00,9.2979e+00,2.5000e+00,1.6151e+00,9.2894e+00,2.5000e+00,1.6097e+00,9.2796e+00,2.5000e+00,1.6064e+00,9.2690e+00,2.5000e+00,1.6052e+00,9.2579e+00,2.5000e+00,1.6052e+00,8.8788e+00,2.5000e+00,1.5960e+00,8.8438e+00,2.5000e+00,1.5798e+00,8.8114e+00,2.5000e+00,1.5576e+00,8.7828e+00,2.5000e+00,1.5300e+00,8.7593e+00,2.5000e+00,1.4983e+00,8.7417e+00,2.5000e+00,1.4637e+00,8.7309e+00,2.5000e+00,1.4276e+00,8.7273e+00,2.5000e+00,1.3916e+00,8.7309e+00,2.5000e+00,1.3570e+00,8.7417e+00,2.5000e+00,1.3252e+00,8.7593e+00,2.5000e+00,1.2977e+00,8.7828e+00,2.5000e+00,1.2754e+00,8.8114e+00,2.5000e+00,1.2593e+00,8.8438e+00,2.5000e+00,1.2500e+00,8.8788e+00,2.5000e+00,1.2500e+00,9.4773e+00,2.5000e+00,1.2532e+00,9.5095e+00,2.5000e+00,1.2626e+00,9.5405e+00,2.5000e+00,1.2778e+00,9.5691e+00,2.5000e+00,1.2984e+00,9.5941e+00,2.5000e+00,1.3234e+00,9.6146e+00};
			return value;
		}
		private double[] getCoordinate_7_529_point_2()
		{
			double[] value = {2.5000e+00,1.3520e+00,9.6299e+00,2.5000e+00,1.3830e+00,9.6393e+00,2.5000e+00,1.4152e+00,9.6425e+00,2.5000e+00,1.8406e+00,9.6425e+00,2.5000e+00,1.8406e+00,9.5192e+00,2.5000e+00,1.4152e+00,9.5192e+00,2.5000e+00,1.4068e+00,9.5183e+00,2.5000e+00,1.3987e+00,9.5159e+00,2.5000e+00,1.3913e+00,9.5119e+00,2.5000e+00,1.3848e+00,9.5066e+00,2.5000e+00,1.3794e+00,9.5000e+00,2.5000e+00,1.3754e+00,9.4926e+00,2.5000e+00,1.3730e+00,9.4845e+00,2.5000e+00,1.3722e+00,9.4761e+00,2.5000e+00,1.3722e+00,8.8970e+00,2.5000e+00,1.3746e+00,8.8864e+00,2.5000e+00,1.3790e+00,8.8764e+00,2.5000e+00,1.3853e+00,8.8676e+00,2.5000e+00,1.3932e+00,8.8601e+00,2.5000e+00,1.4024e+00,8.8543e+00,2.5000e+00,1.4125e+00,8.8503e+00,2.5000e+00,1.4232e+00,8.8484e+00,2.5000e+00,1.4341e+00,8.8487e+00,2.5000e+00,1.4447e+00,8.8510e+00,2.5000e+00,1.4546e+00,8.8553e+00,2.5000e+00,1.4636e+00,8.8615e+00,2.5000e+00,1.4711e+00,8.8693e+00,2.5000e+00,1.4770e+00,8.8784e+00,2.5000e+00,1.4811e+00,8.8885e+00,2.5000e+00,1.4831e+00,8.8992e+00,2.5000e+00,1.4831e+00,9.2556e+00,2.5000e+00,1.4839e+00,9.2915e+00,2.5000e+00,1.4920e+00,9.3265e+00,2.5000e+00,1.5069e+00,9.3592e+00,2.5000e+00,1.5280e+00,9.3883e+00,2.5000e+00,1.5545e+00,9.4126e+00,2.5000e+00,1.5853e+00,9.4311e+00,2.5000e+00,1.6192e+00,9.4430e+00,2.5000e+00,1.6548e+00,9.4480e+00,2.5000e+00,1.6906e+00,9.4458e+00,2.5000e+00,1.7253e+00,9.4364e+00,2.5000e+00,1.7574e+00,9.4203e+00,2.5000e+00,1.7857e+00,9.3981e+00,2.5000e+00,1.8090e+00,9.3707e+00,2.5000e+00,1.8263e+00,9.3392e+00,2.5000e+00,1.8369e+00,9.3049e+00,2.5000e+00,1.8406e+00,9.2691e+00,2.5000e+00,1.8406e+00,8.2611e+00,2.5000e+00,1.7161e+00,8.2611e+00,2.5000e+00,1.7161e+00,8.5135e+00,2.5000e+00,-1.2140e+00,5.3041e+00,2.5000e+00,-1.2154e+00,5.2974e+00,2.5000e+00,-1.2166e+00,5.2907e+00,2.5000e+00,-1.2176e+00,5.2840e+00,2.5000e+00,-1.2185e+00,5.2772e+00,2.5000e+00,-1.2191e+00,5.2704e+00,2.5000e+00,-1.2196e+00,5.2636e+00,2.5000e+00,-1.2199e+00,5.2568e+00,2.5000e+00,-1.2199e+00,5.2500e+00,2.5000e+00,2.3301e+00,5.2500e+00,2.5000e+00,2.3301e+00,1.1000e+01,2.5000e+00,4.8727e-02,1.1000e+01};
			return value;
		}


































		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_665_index_1()
		{
			int[] value = {3,2,8,5,3,8,6,5,8,7,6,8,10,9,12,11,10,12,14,13,16,15,14,16,18,17,25,21,18,25,22,21,25,23,22,25,29,28,32,31,30,29,31,29,32,34,33,36,35,34,36,38,37,40,39,38,40,42,41,47,46,45,42,46,42,47,51,50,54,53,52,51,53,51,54,56,55,58,57,56,58,60,59,62,61,60,62,64,63,69,68,67,64,68,64,69,73,72,76,75,74,73,75,73,76,78,77,80,79,78,80,82,81,84,83,82,84,86,85,91,90,89,86,90,86,91,95,94,98,97,96,95,97,95,98,100,99,102,101,100,102,104,103,106,105,104,106,108,107,113,112,111,108,112,108,113,117,116,120,119,118,117,119,117,120,122,121,124,123,122,124,126,125,128,127,126,128,130,129,135,134,133,130,134,130,135,139,138,142,141,140,139,141,139,142,144,143,146,145,144,146,148,147,150,149,148,150,152,151,157,156,155,152,156,152,157,161,160,164,163,162,161,163,161,164,166,165,168,167,166,168,170,169,172,171,170,172,174,173,179,178,177,174,178,174,179,183,182,186,185,184,183,185,183,186,188,187,190,189,188,190,192,191,194,193,192,194,196,195,201,200,199,196,200,196,201,205,204,208,207,206,205,207,205,208,210,209,212,211,210,212,214,213,216,215,214,216,218,217,223,222,221,218,222,218,223,227,226,230,229,228,227,229,227,230,232,231,234,233,232,234,236,235,238,237,236,238,240,239,245,244,243,240,244,240,245,249,248,252,251,250,249,251,249,252,256,255,254,253,256,254,260,259,258,257,260,258,262,261,267,266,265,262,266,262,267};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_665_point_1()
		{
			double[] value = {-6.1174e+00,1.2806e+00,2.1500e+00,-6.0855e+00,1.2739e+00,2.1521e+00,-6.1843e+00,6.4038e-01,2.1521e+00,-6.2168e+00,6.4374e-01,2.1500e+00,-6.1215e+00,1.2610e+00,2.1500e+00,-6.1215e+00,1.2610e+00,2.1500e+00,-6.1174e+00,1.2607e+00,2.1500e+00,-6.1134e+00,1.2601e+00,2.1501e+00,-6.0893e+00,1.2553e+00,2.1521e+00,-6.2168e+00,6.4374e-01,2.1500e+00,-6.1843e+00,6.4038e-01,2.1521e+00,-6.2174e+00,3.8070e-16,2.1521e+00,-6.2500e+00,3.8270e-16,2.1500e+00,-6.2500e+00,3.8270e-16,2.1500e+00,-6.2174e+00,3.8070e-16,2.1521e+00,-6.1843e+00,-6.4038e-01,2.1521e+00,-6.2168e+00,-6.4374e-01,2.1500e+00,-6.2168e+00,-6.4374e-01,2.1500e+00,-6.1843e+00,-6.4038e-01,2.1521e+00,-6.0855e+00,-1.2739e+00,2.1521e+00,-6.1174e+00,-1.2806e+00,2.1500e+00,-6.0893e+00,-1.2553e+00,2.1521e+00,-6.1134e+00,-1.2601e+00,2.1501e+00,-6.1174e+00,-1.2607e+00,2.1500e+00,-6.1215e+00,-1.2610e+00,2.1500e+00,-6.1215e+00,-1.2610e+00,2.1500e+00,-6.0855e+00,1.2739e+00,2.1521e+00,-6.0541e+00,1.2674e+00,2.1585e+00,-6.1524e+00,6.3707e-01,2.1585e+00,-6.1843e+00,6.4038e-01,2.1521e+00,-6.0893e+00,1.2553e+00,2.1521e+00,-6.0819e+00,1.2538e+00,2.1532e+00,-6.0578e+00,1.2492e+00,2.1585e+00,-6.1843e+00,6.4038e-01,2.1521e+00,-6.1524e+00,6.3707e-01,2.1585e+00,-6.1853e+00,3.7874e-16,2.1585e+00,-6.2174e+00,3.8070e-16,2.1521e+00,-6.2174e+00,3.8070e-16,2.1521e+00,-6.1853e+00,3.7874e-16,2.1585e+00,-6.1524e+00,-6.3707e-01,2.1585e+00,-6.1843e+00,-6.4038e-01,2.1521e+00,-6.1843e+00,-6.4038e-01,2.1521e+00,-6.1524e+00,-6.3707e-01,2.1585e+00,-6.0541e+00,-1.2674e+00,2.1585e+00,-6.0855e+00,-1.2739e+00,2.1521e+00,-6.0578e+00,-1.2492e+00,2.1585e+00,-6.0819e+00,-1.2538e+00,2.1532e+00,-6.0893e+00,-1.2553e+00,2.1521e+00,-6.0541e+00,1.2674e+00,2.1585e+00,-6.0238e+00,1.2610e+00,2.1690e+00,-6.1216e+00,6.3388e-01,2.1690e+00,-6.1524e+00,6.3707e-01,2.1585e+00,-6.0578e+00,1.2492e+00,2.1585e+00,-6.0512e+00,1.2479e+00,2.1604e+00,-6.0274e+00,1.2437e+00,2.1690e+00,-6.1524e+00,6.3707e-01,2.1585e+00,-6.1216e+00,6.3388e-01,2.1690e+00,-6.1543e+00,3.7684e-16,2.1690e+00,-6.1853e+00,3.7874e-16,2.1585e+00,-6.1853e+00,3.7874e-16,2.1585e+00,-6.1543e+00,3.7684e-16,2.1690e+00,-6.1216e+00,-6.3388e-01,2.1690e+00,-6.1524e+00,-6.3707e-01,2.1585e+00,-6.1524e+00,-6.3707e-01,2.1585e+00,-6.1216e+00,-6.3388e-01,2.1690e+00,-6.0238e+00,-1.2610e+00,2.1690e+00,-6.0541e+00,-1.2674e+00,2.1585e+00,-6.0274e+00,-1.2437e+00,2.1690e+00,-6.0512e+00,-1.2479e+00,2.1604e+00,-6.0578e+00,-1.2492e+00,2.1585e+00,-6.0238e+00,1.2610e+00,2.1690e+00,-5.9950e+00,1.2550e+00,2.1835e+00,-6.0924e+00,6.3086e-01,2.1835e+00,-6.1216e+00,6.3388e-01,2.1690e+00,-6.0274e+00,1.2437e+00,2.1690e+00,-6.0216e+00,1.2426e+00,2.1716e+00,-5.9984e+00,1.2387e+00,2.1835e+00,-6.1216e+00,6.3388e-01,2.1690e+00,-6.0924e+00,6.3086e-01,2.1835e+00,-6.1250e+00,3.7505e-16,2.1835e+00,-6.1543e+00,3.7684e-16,2.1690e+00,-6.1543e+00,3.7684e-16,2.1690e+00,-6.1250e+00,3.7505e-16,2.1835e+00,-6.0924e+00,-6.3086e-01,2.1835e+00,-6.1216e+00,-6.3388e-01,2.1690e+00,-6.1216e+00,-6.3388e-01,2.1690e+00,-6.0924e+00,-6.3086e-01,2.1835e+00,-5.9950e+00,-1.2550e+00,2.1835e+00,-6.0238e+00,-1.2610e+00,2.1690e+00,-5.9984e+00,-1.2387e+00,2.1835e+00,-6.0216e+00,-1.2426e+00,2.1716e+00,-6.0274e+00,-1.2437e+00,2.1690e+00,-5.9950e+00,1.2550e+00,2.1835e+00,-5.9684e+00,1.2494e+00,2.2017e+00,-6.0654e+00,6.2806e-01,2.2017e+00,-6.0924e+00,6.3086e-01,2.1835e+00,-5.9984e+00,1.2387e+00,2.1835e+00,-5.9936e+00,1.2379e+00,2.1864e+00,-5.9715e+00,1.2345e+00,2.2017e+00,-6.0924e+00,6.3086e-01,2.1835e+00};
			return value;
		}
		private double[] getCoordinate_7_665_point_2()
		{
			double[] value = {-6.0654e+00,6.2806e-01,2.2017e+00,-6.0978e+00,3.7338e-16,2.2017e+00,-6.1250e+00,3.7505e-16,2.1835e+00,-6.1250e+00,3.7505e-16,2.1835e+00,-6.0978e+00,3.7338e-16,2.2017e+00,-6.0654e+00,-6.2806e-01,2.2017e+00,-6.0924e+00,-6.3086e-01,2.1835e+00,-6.0924e+00,-6.3086e-01,2.1835e+00,-6.0654e+00,-6.2806e-01,2.2017e+00,-5.9684e+00,-1.2494e+00,2.2017e+00,-5.9950e+00,-1.2550e+00,2.1835e+00,-5.9715e+00,-1.2345e+00,2.2017e+00,-5.9936e+00,-1.2379e+00,2.1864e+00,-5.9984e+00,-1.2387e+00,2.1835e+00,-5.9684e+00,1.2494e+00,2.2017e+00,-5.9444e+00,1.2444e+00,2.2232e+00,-6.0409e+00,6.2553e-01,2.2232e+00,-6.0654e+00,6.2806e-01,2.2017e+00,-5.9715e+00,1.2345e+00,2.2017e+00,-5.9677e+00,1.2340e+00,2.2047e+00,-5.9471e+00,1.2311e+00,2.2232e+00,-6.0654e+00,6.2806e-01,2.2017e+00,-6.0409e+00,6.2553e-01,2.2232e+00,-6.0732e+00,3.7188e-16,2.2232e+00,-6.0978e+00,3.7338e-16,2.2017e+00,-6.0978e+00,3.7338e-16,2.2017e+00,-6.0732e+00,3.7188e-16,2.2232e+00,-6.0409e+00,-6.2553e-01,2.2232e+00,-6.0654e+00,-6.2806e-01,2.2017e+00,-6.0654e+00,-6.2806e-01,2.2017e+00,-6.0409e+00,-6.2553e-01,2.2232e+00,-5.9444e+00,-1.2444e+00,2.2232e+00,-5.9684e+00,-1.2494e+00,2.2017e+00,-5.9471e+00,-1.2311e+00,2.2232e+00,-5.9677e+00,-1.2340e+00,2.2047e+00,-5.9715e+00,-1.2345e+00,2.2017e+00,-5.9444e+00,1.2444e+00,2.2232e+00,-5.9233e+00,1.2400e+00,2.2478e+00,-6.0195e+00,6.2331e-01,2.2478e+00,-6.0409e+00,6.2553e-01,2.2232e+00,-5.9471e+00,1.2311e+00,2.2232e+00,-5.9443e+00,1.2307e+00,2.2262e+00,-5.9256e+00,1.2286e+00,2.2478e+00,-6.0409e+00,6.2553e-01,2.2232e+00,-6.0195e+00,6.2331e-01,2.2478e+00,-6.0517e+00,3.7056e-16,2.2478e+00,-6.0732e+00,3.7188e-16,2.2232e+00,-6.0732e+00,3.7188e-16,2.2232e+00,-6.0517e+00,3.7056e-16,2.2478e+00,-6.0195e+00,-6.2331e-01,2.2478e+00,-6.0409e+00,-6.2553e-01,2.2232e+00,-6.0409e+00,-6.2553e-01,2.2232e+00,-6.0195e+00,-6.2331e-01,2.2478e+00,-5.9233e+00,-1.2400e+00,2.2478e+00,-5.9444e+00,-1.2444e+00,2.2232e+00,-5.9256e+00,-1.2286e+00,2.2478e+00,-5.9443e+00,-1.2307e+00,2.2262e+00,-5.9471e+00,-1.2311e+00,2.2232e+00,-5.9233e+00,1.2400e+00,2.2478e+00,-5.9055e+00,1.2363e+00,2.2750e+00,-6.0014e+00,6.2144e-01,2.2750e+00,-6.0195e+00,6.2331e-01,2.2478e+00,-5.9256e+00,1.2286e+00,2.2478e+00,-5.9236e+00,1.2283e+00,2.2505e+00,-5.9074e+00,1.2269e+00,2.2750e+00,-6.0195e+00,6.2331e-01,2.2478e+00,-6.0014e+00,6.2144e-01,2.2750e+00,-6.0335e+00,3.6944e-16,2.2750e+00,-6.0517e+00,3.7056e-16,2.2478e+00,-6.0517e+00,3.7056e-16,2.2478e+00,-6.0335e+00,3.6944e-16,2.2750e+00,-6.0014e+00,-6.2144e-01,2.2750e+00,-6.0195e+00,-6.2331e-01,2.2478e+00,-6.0195e+00,-6.2331e-01,2.2478e+00,-6.0014e+00,-6.2144e-01,2.2750e+00,-5.9055e+00,-1.2363e+00,2.2750e+00,-5.9233e+00,-1.2400e+00,2.2478e+00,-5.9074e+00,-1.2269e+00,2.2750e+00,-5.9236e+00,-1.2283e+00,2.2505e+00,-5.9256e+00,-1.2286e+00,2.2478e+00,-5.9055e+00,1.2363e+00,2.2750e+00,-5.8913e+00,1.2333e+00,2.3043e+00,-5.9870e+00,6.1995e-01,2.3043e+00,-6.0014e+00,6.2144e-01,2.2750e+00,-5.9074e+00,1.2269e+00,2.2750e+00,-5.9061e+00,1.2268e+00,2.2774e+00,-5.8928e+00,1.2261e+00,2.3043e+00,-6.0014e+00,6.2144e-01,2.2750e+00,-5.9870e+00,6.1995e-01,2.3043e+00,-6.0190e+00,3.6856e-16,2.3043e+00,-6.0335e+00,3.6944e-16,2.2750e+00,-6.0335e+00,3.6944e-16,2.2750e+00,-6.0190e+00,3.6856e-16,2.3043e+00,-5.9870e+00,-6.1995e-01,2.3043e+00,-6.0014e+00,-6.2144e-01,2.2750e+00,-6.0014e+00,-6.2144e-01,2.2750e+00,-5.9870e+00,-6.1995e-01,2.3043e+00,-5.8913e+00,-1.2333e+00,2.3043e+00,-5.9055e+00,-1.2363e+00,2.2750e+00,-5.8928e+00,-1.2261e+00,2.3043e+00};
			return value;
		}
		private double[] getCoordinate_7_665_point_3()
		{
			double[] value = {-5.9061e+00,-1.2268e+00,2.2774e+00,-5.9074e+00,-1.2269e+00,2.2750e+00,-5.8913e+00,1.2333e+00,2.3043e+00,-5.8810e+00,1.2311e+00,2.3353e+00,-5.9766e+00,6.1886e-01,2.3353e+00,-5.9870e+00,6.1995e-01,2.3043e+00,-5.8928e+00,1.2261e+00,2.3043e+00,-5.8920e+00,1.2261e+00,2.3063e+00,-5.8820e+00,1.2263e+00,2.3353e+00,-5.9870e+00,6.1995e-01,2.3043e+00,-5.9766e+00,6.1886e-01,2.3353e+00,-6.0085e+00,3.6792e-16,2.3353e+00,-6.0190e+00,3.6856e-16,2.3043e+00,-6.0190e+00,3.6856e-16,2.3043e+00,-6.0085e+00,3.6792e-16,2.3353e+00,-5.9766e+00,-6.1886e-01,2.3353e+00,-5.9870e+00,-6.1995e-01,2.3043e+00,-5.9870e+00,-6.1995e-01,2.3043e+00,-5.9766e+00,-6.1886e-01,2.3353e+00,-5.8810e+00,-1.2311e+00,2.3353e+00,-5.8913e+00,-1.2333e+00,2.3043e+00,-5.8820e+00,-1.2263e+00,2.3353e+00,-5.8920e+00,-1.2261e+00,2.3063e+00,-5.8928e+00,-1.2261e+00,2.3043e+00,-5.8810e+00,1.2311e+00,2.3353e+00,-5.8748e+00,1.2298e+00,2.3674e+00,-5.9702e+00,6.1821e-01,2.3674e+00,-5.9766e+00,6.1886e-01,2.3353e+00,-5.8820e+00,1.2263e+00,2.3353e+00,-5.8816e+00,1.2263e+00,2.3368e+00,-5.8753e+00,1.2274e+00,2.3674e+00,-5.9766e+00,6.1886e-01,2.3353e+00,-5.9702e+00,6.1821e-01,2.3674e+00,-6.0021e+00,3.6753e-16,2.3674e+00,-6.0085e+00,3.6792e-16,2.3353e+00,-6.0085e+00,3.6792e-16,2.3353e+00,-6.0021e+00,3.6753e-16,2.3674e+00,-5.9702e+00,-6.1821e-01,2.3674e+00,-5.9766e+00,-6.1886e-01,2.3353e+00,-5.9766e+00,-6.1886e-01,2.3353e+00,-5.9702e+00,-6.1821e-01,2.3674e+00,-5.8748e+00,-1.2298e+00,2.3674e+00,-5.8810e+00,-1.2311e+00,2.3353e+00,-5.8753e+00,-1.2274e+00,2.3674e+00,-5.8816e+00,-1.2263e+00,2.3368e+00,-5.8820e+00,-1.2263e+00,2.3353e+00,-5.8748e+00,1.2298e+00,2.3674e+00,-5.8727e+00,1.2294e+00,2.4000e+00,-5.9681e+00,6.1799e-01,2.4000e+00,-5.9702e+00,6.1821e-01,2.3674e+00,-5.8753e+00,1.2274e+00,2.3674e+00,-5.8752e+00,1.2274e+00,2.3682e+00,-5.8727e+00,1.2294e+00,2.4000e+00,-5.9702e+00,6.1821e-01,2.3674e+00,-5.9681e+00,6.1799e-01,2.4000e+00,-6.0000e+00,3.6739e-16,2.4000e+00,-6.0021e+00,3.6753e-16,2.3674e+00,-6.0021e+00,3.6753e-16,2.3674e+00,-6.0000e+00,3.6739e-16,2.4000e+00,-5.9681e+00,-6.1799e-01,2.4000e+00,-5.9702e+00,-6.1821e-01,2.3674e+00,-5.9702e+00,-6.1821e-01,2.3674e+00,-5.9681e+00,-6.1799e-01,2.4000e+00,-5.8727e+00,-1.2294e+00,2.4000e+00,-5.8748e+00,-1.2298e+00,2.3674e+00,-5.8727e+00,-1.2294e+00,2.4000e+00,-5.8752e+00,-1.2274e+00,2.3682e+00,-5.8753e+00,-1.2274e+00,2.3674e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_666_vector_1()
		{
			double[] value = {-1.1987e-16,2.5093e-17,1.0000e+00,-1.2776e-01,2.6745e-02,9.9144e-01,-1.2983e-01,1.3444e-02,9.9144e-01,-1.2181e-16,1.2614e-17,1.0000e+00,-1.1995e-16,2.4708e-17,1.0000e+00,-1.1995e-16,2.4708e-17,1.0000e+00,-1.5726e-02,3.2410e-03,9.9987e-01,-3.1611e-02,6.5159e-03,9.9948e-01,-1.2784e-01,2.6353e-02,9.9144e-01,-1.2181e-16,1.2614e-17,1.0000e+00,-1.2983e-01,1.3444e-02,9.9144e-01,-1.3053e-01,7.9924e-18,9.9144e-01,-1.2246e-16,7.4988e-33,1.0000e+00,-1.2246e-16,7.4988e-33,1.0000e+00,-1.3053e-01,7.9924e-18,9.9144e-01,-1.2983e-01,-1.3444e-02,9.9144e-01,-1.2181e-16,-1.2614e-17,1.0000e+00,-1.2181e-16,-1.2614e-17,1.0000e+00,-1.2983e-01,-1.3444e-02,9.9144e-01,-1.2776e-01,-2.6745e-02,9.9144e-01,-1.1987e-16,-2.5093e-17,1.0000e+00,-1.2784e-01,-2.6353e-02,9.9144e-01,-3.1611e-02,-6.5159e-03,9.9948e-01,-1.5726e-02,-3.2410e-03,9.9987e-01,-1.1995e-16,-2.4708e-17,1.0000e+00,-1.1995e-16,-2.4708e-17,1.0000e+00,-1.2776e-01,2.6745e-02,9.9144e-01,-2.5333e-01,5.3032e-02,9.6593e-01,-2.5744e-01,2.6658e-02,9.6593e-01,-1.2983e-01,1.3444e-02,9.9144e-01,-1.2784e-01,2.6353e-02,9.9144e-01,-1.5740e-01,3.2449e-02,9.8700e-01,-2.5349e-01,5.2272e-02,9.6593e-01,-1.2983e-01,1.3444e-02,9.9144e-01,-2.5744e-01,2.6658e-02,9.6593e-01,-2.5882e-01,1.5848e-17,9.6593e-01,-1.3053e-01,7.9924e-18,9.9144e-01,-1.3053e-01,7.9924e-18,9.9144e-01,-2.5882e-01,1.5848e-17,9.6593e-01,-2.5744e-01,-2.6658e-02,9.6593e-01,-1.2983e-01,-1.3444e-02,9.9144e-01,-1.2983e-01,-1.3444e-02,9.9144e-01,-2.5744e-01,-2.6658e-02,9.6593e-01,-2.5333e-01,-5.3032e-02,9.6593e-01,-1.2776e-01,-2.6745e-02,9.9144e-01,-2.5349e-01,-5.2272e-02,9.6593e-01,-1.5740e-01,-3.2449e-02,9.8700e-01,-1.2784e-01,-2.6353e-02,9.9144e-01,-2.5333e-01,5.3032e-02,9.6593e-01,-3.7456e-01,7.8412e-02,9.2388e-01,-3.8065e-01,3.9416e-02,9.2388e-01,-2.5744e-01,2.6658e-02,9.6593e-01,-2.5349e-01,5.2272e-02,9.6593e-01,-2.8007e-01,5.7758e-02,9.5824e-01,-3.7479e-01,7.7332e-02,9.2388e-01,-2.5744e-01,2.6658e-02,9.6593e-01,-3.8065e-01,3.9416e-02,9.2388e-01,-3.8268e-01,2.3433e-17,9.2388e-01,-2.5882e-01,1.5848e-17,9.6593e-01,-2.5882e-01,1.5848e-17,9.6593e-01,-3.8268e-01,2.3433e-17,9.2388e-01,-3.8065e-01,-3.9416e-02,9.2388e-01,-2.5744e-01,-2.6658e-02,9.6593e-01,-2.5744e-01,-2.6658e-02,9.6593e-01,-3.8065e-01,-3.9416e-02,9.2388e-01,-3.7456e-01,-7.8412e-02,9.2388e-01,-2.5333e-01,-5.3032e-02,9.6593e-01,-3.7479e-01,-7.7332e-02,9.2388e-01,-2.8007e-01,-5.7758e-02,9.5824e-01,-2.5349e-01,-5.2272e-02,9.6593e-01,-3.7456e-01,7.8412e-02,9.2388e-01,-4.8939e-01,1.0245e-01,8.6603e-01,-4.9734e-01,5.1499e-02,8.6603e-01,-3.8065e-01,3.9416e-02,9.2388e-01,-3.7479e-01,7.7332e-02,9.2388e-01,-3.9781e-01,8.2094e-02,9.1379e-01,-4.8967e-01,1.0112e-01,8.6603e-01,-3.8065e-01,3.9416e-02,9.2388e-01,-4.9734e-01,5.1499e-02,8.6603e-01,-5.0000e-01,3.0616e-17,8.6603e-01,-3.8268e-01,2.3433e-17,9.2388e-01,-3.8268e-01,2.3433e-17,9.2388e-01,-5.0000e-01,3.0616e-17,8.6603e-01,-4.9734e-01,-5.1499e-02,8.6603e-01,-3.8065e-01,-3.9416e-02,9.2388e-01,-3.8065e-01,-3.9416e-02,9.2388e-01,-4.9734e-01,-5.1499e-02,8.6603e-01,-4.8939e-01,-1.0245e-01,8.6603e-01,-3.7456e-01,-7.8412e-02,9.2388e-01,-4.8967e-01,-1.0112e-01,8.6603e-01,-3.9781e-01,-8.2094e-02,9.1379e-01,-3.7479e-01,-7.7332e-02,9.2388e-01,-4.8939e-01,1.0245e-01,8.6603e-01,-5.9585e-01,1.2474e-01,7.9335e-01,-6.0552e-01,6.2701e-02,7.9335e-01,-4.9734e-01,5.1499e-02,8.6603e-01,-4.8967e-01,1.0112e-01,8.6603e-01,-5.0881e-01,1.0509e-01,8.5444e-01,-5.9615e-01,1.2325e-01,7.9335e-01,-4.9734e-01,5.1499e-02,8.6603e-01};
			return value;
		}
		private double[] getNormal_7_666_vector_2()
		{
			double[] value = {-6.0552e-01,6.2701e-02,7.9335e-01,-6.0876e-01,3.7276e-17,7.9335e-01,-5.0000e-01,3.0616e-17,8.6603e-01,-5.0000e-01,3.0616e-17,8.6603e-01,-6.0876e-01,3.7276e-17,7.9335e-01,-6.0552e-01,-6.2701e-02,7.9335e-01,-4.9734e-01,-5.1499e-02,8.6603e-01,-4.9734e-01,-5.1499e-02,8.6603e-01,-6.0552e-01,-6.2701e-02,7.9335e-01,-5.9585e-01,-1.2474e-01,7.9335e-01,-4.8939e-01,-1.0245e-01,8.6603e-01,-5.9615e-01,-1.2325e-01,7.9335e-01,-5.0881e-01,-1.0509e-01,8.5444e-01,-4.8967e-01,-1.0112e-01,8.6603e-01,-5.9585e-01,1.2474e-01,7.9335e-01,-6.9210e-01,1.4489e-01,7.0711e-01,-7.0335e-01,7.2830e-02,7.0711e-01,-6.0552e-01,6.2701e-02,7.9335e-01,-5.9615e-01,1.2325e-01,7.9335e-01,-6.1131e-01,1.2640e-01,7.8123e-01,-6.9243e-01,1.4334e-01,7.0711e-01,-6.0552e-01,6.2701e-02,7.9335e-01,-7.0335e-01,7.2830e-02,7.0711e-01,-7.0711e-01,4.3298e-17,7.0711e-01,-6.0876e-01,3.7276e-17,7.9335e-01,-6.0876e-01,3.7276e-17,7.9335e-01,-7.0711e-01,4.3298e-17,7.0711e-01,-7.0335e-01,-7.2830e-02,7.0711e-01,-6.0552e-01,-6.2701e-02,7.9335e-01,-6.0552e-01,-6.2701e-02,7.9335e-01,-7.0335e-01,-7.2830e-02,7.0711e-01,-6.9210e-01,-1.4489e-01,7.0711e-01,-5.9585e-01,-1.2474e-01,7.9335e-01,-6.9243e-01,-1.4334e-01,7.0711e-01,-6.1131e-01,-1.2640e-01,7.8123e-01,-5.9615e-01,-1.2325e-01,7.9335e-01,-6.9210e-01,1.4489e-01,7.0711e-01,-7.7652e-01,1.6256e-01,6.0876e-01,-7.8913e-01,8.1714e-02,6.0876e-01,-7.0335e-01,7.2830e-02,7.0711e-01,-6.9243e-01,1.4334e-01,7.0711e-01,-7.0378e-01,1.4572e-01,6.9531e-01,-7.7683e-01,1.6106e-01,6.0876e-01,-7.0335e-01,7.2830e-02,7.0711e-01,-7.8913e-01,8.1714e-02,6.0876e-01,-7.9335e-01,4.8579e-17,6.0876e-01,-7.0711e-01,4.3298e-17,7.0711e-01,-7.0711e-01,4.3298e-17,7.0711e-01,-7.9335e-01,4.8579e-17,6.0876e-01,-7.8913e-01,-8.1714e-02,6.0876e-01,-7.0335e-01,-7.2830e-02,7.0711e-01,-7.0335e-01,-7.2830e-02,7.0711e-01,-7.8913e-01,-8.1714e-02,6.0876e-01,-7.7652e-01,-1.6256e-01,6.0876e-01,-6.9210e-01,-1.4489e-01,7.0711e-01,-7.7683e-01,-1.6106e-01,6.0876e-01,-7.0378e-01,-1.4572e-01,6.9531e-01,-6.9243e-01,-1.4334e-01,7.0711e-01,-7.7652e-01,1.6256e-01,6.0876e-01,-8.4765e-01,1.7745e-01,5.0000e-01,-8.6142e-01,8.9199e-02,5.0000e-01,-7.8913e-01,8.1714e-02,6.0876e-01,-7.7683e-01,1.6106e-01,6.0876e-01,-7.8487e-01,1.6275e-01,5.9791e-01,-8.4793e-01,1.7610e-01,5.0000e-01,-7.8913e-01,8.1714e-02,6.0876e-01,-8.6142e-01,8.9199e-02,5.0000e-01,-8.6603e-01,5.3029e-17,5.0000e-01,-7.9335e-01,4.8579e-17,6.0876e-01,-7.9335e-01,4.8579e-17,6.0876e-01,-8.6603e-01,5.3029e-17,5.0000e-01,-8.6142e-01,-8.9199e-02,5.0000e-01,-7.8913e-01,-8.1714e-02,6.0876e-01,-7.8913e-01,-8.1714e-02,6.0876e-01,-8.6142e-01,-8.9199e-02,5.0000e-01,-8.4765e-01,-1.7745e-01,5.0000e-01,-7.7652e-01,-1.6256e-01,6.0876e-01,-8.4793e-01,-1.7610e-01,5.0000e-01,-7.8487e-01,-1.6275e-01,5.9791e-01,-7.7683e-01,-1.6106e-01,6.0876e-01,-8.4765e-01,1.7745e-01,5.0000e-01,-9.0428e-01,1.8930e-01,3.8268e-01,-9.1897e-01,9.5158e-02,3.8268e-01,-8.6142e-01,8.9199e-02,5.0000e-01,-8.4793e-01,1.7610e-01,5.0000e-01,-8.5327e-01,1.7724e-01,4.9043e-01,-9.0451e-01,1.8820e-01,3.8268e-01,-8.6142e-01,8.9199e-02,5.0000e-01,-9.1897e-01,9.5158e-02,3.8268e-01,-9.2388e-01,5.6571e-17,3.8268e-01,-8.6603e-01,5.3029e-17,5.0000e-01,-8.6603e-01,5.3029e-17,5.0000e-01,-9.2388e-01,5.6571e-17,3.8268e-01,-9.1897e-01,-9.5158e-02,3.8268e-01,-8.6142e-01,-8.9199e-02,5.0000e-01,-8.6142e-01,-8.9199e-02,5.0000e-01,-9.1897e-01,-9.5158e-02,3.8268e-01,-9.0428e-01,-1.8930e-01,3.8268e-01,-8.4765e-01,-1.7745e-01,5.0000e-01,-9.0451e-01,-1.8820e-01,3.8268e-01};
			return value;
		}
		private double[] getNormal_7_666_vector_3()
		{
			double[] value = {-8.5327e-01,-1.7724e-01,4.9043e-01,-8.4793e-01,-1.7610e-01,5.0000e-01,-9.0428e-01,1.8930e-01,3.8268e-01,-9.4543e-01,1.9792e-01,2.5882e-01,-9.6079e-01,9.9488e-02,2.5882e-01,-9.1897e-01,9.5158e-02,3.8268e-01,-9.0451e-01,1.8820e-01,3.8268e-01,-9.0770e-01,1.8889e-01,3.7469e-01,-9.4559e-01,1.9714e-01,2.5882e-01,-9.1897e-01,9.5158e-02,3.8268e-01,-9.6079e-01,9.9488e-02,2.5882e-01,-9.6593e-01,5.9146e-17,2.5882e-01,-9.2388e-01,5.6571e-17,3.8268e-01,-9.2388e-01,5.6571e-17,3.8268e-01,-9.6593e-01,5.9146e-17,2.5882e-01,-9.6079e-01,-9.9488e-02,2.5882e-01,-9.1897e-01,-9.5158e-02,3.8268e-01,-9.1897e-01,-9.5158e-02,3.8268e-01,-9.6079e-01,-9.9488e-02,2.5882e-01,-9.4543e-01,-1.9792e-01,2.5882e-01,-9.0428e-01,-1.8930e-01,3.8268e-01,-9.4559e-01,-1.9714e-01,2.5882e-01,-9.0770e-01,-1.8889e-01,3.7469e-01,-9.0451e-01,-1.8820e-01,3.8268e-01,-9.4543e-01,1.9792e-01,2.5882e-01,-9.7041e-01,2.0315e-01,1.3053e-01,-9.8617e-01,1.0212e-01,1.3053e-01,-9.6079e-01,9.9488e-02,2.5882e-01,-9.4559e-01,1.9714e-01,2.5882e-01,-9.4714e-01,1.9748e-01,2.5285e-01,-9.7049e-01,2.0274e-01,1.3053e-01,-9.6079e-01,9.9488e-02,2.5882e-01,-9.8617e-01,1.0212e-01,1.3053e-01,-9.9144e-01,6.0708e-17,1.3053e-01,-9.6593e-01,5.9146e-17,2.5882e-01,-9.6593e-01,5.9146e-17,2.5882e-01,-9.9144e-01,6.0708e-17,1.3053e-01,-9.8617e-01,-1.0212e-01,1.3053e-01,-9.6079e-01,-9.9488e-02,2.5882e-01,-9.6079e-01,-9.9488e-02,2.5882e-01,-9.8617e-01,-1.0212e-01,1.3053e-01,-9.7041e-01,-2.0315e-01,1.3053e-01,-9.4543e-01,-1.9792e-01,2.5882e-01,-9.7049e-01,-2.0274e-01,1.3053e-01,-9.4714e-01,-1.9748e-01,2.5285e-01,-9.4559e-01,-1.9714e-01,2.5882e-01,-9.7041e-01,2.0315e-01,1.3053e-01,-9.7878e-01,2.0490e-01,-6.1232e-17,-9.9468e-01,1.0300e-01,-6.1232e-17,-9.8617e-01,1.0212e-01,1.3053e-01,-9.7049e-01,2.0274e-01,1.3053e-01,-9.7091e-01,2.0284e-01,1.2721e-01,-9.7878e-01,2.0490e-01,-6.1232e-17,-9.8617e-01,1.0212e-01,1.3053e-01,-9.9468e-01,1.0300e-01,-6.1232e-17,-1.0000e+00,6.1232e-17,-6.1232e-17,-9.9144e-01,6.0708e-17,1.3053e-01,-9.9144e-01,6.0708e-17,1.3053e-01,-1.0000e+00,6.1232e-17,-6.1232e-17,-9.9468e-01,-1.0300e-01,-6.1232e-17,-9.8617e-01,-1.0212e-01,1.3053e-01,-9.8617e-01,-1.0212e-01,1.3053e-01,-9.9468e-01,-1.0300e-01,-6.1232e-17,-9.7878e-01,-2.0490e-01,-6.1232e-17,-9.7041e-01,-2.0315e-01,1.3053e-01,-9.7878e-01,-2.0490e-01,-6.1232e-17,-9.7091e-01,-2.0284e-01,1.2721e-01,-9.7049e-01,-2.0274e-01,1.3053e-01};
			return value;
		}










		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_714_index_1()
		{
			int[] value = {10,1,0,11,1,10,11,2,1,12,2,11,12,3,2,13,3,12,13,4,3,14,4,13,14,5,4,15,5,14,15,6,5,16,6,15,16,7,6,17,7,16,17,8,7,18,8,17,18,9,8,19,9,18,20,11,10,21,11,20,21,12,11,22,12,21,22,13,12,23,13,22,23,14,13,24,14,23,24,15,14,25,15,24,25,16,15,26,16,25,26,17,16,27,17,26,27,18,17,28,18,27,28,19,18,29,19,28,30,21,20,31,21,30,31,22,21,32,22,31,32,23,22,33,23,32,33,24,23,34,24,33,34,25,24,35,25,34,35,26,25,36,26,35,36,27,26,37,27,36,37,28,27,38,28,37,38,29,28,39,29,38,40,31,30,41,31,40,41,32,31,42,32,41,42,33,32,43,33,42,43,34,33,44,34,43,44,35,34,45,35,44,45,36,35,46,36,45,46,37,36,47,37,46,47,38,37,48,38,47,48,39,38,49,39,48,50,41,40,51,41,50,51,42,41,52,42,51,52,43,42,53,43,52,53,44,43,54,44,53,54,45,44,55,45,54,55,46,45,56,46,55,56,47,46,57,47,56,57,48,47,58,48,57,58,49,48,59,49,58,60,51,50,61,51,60,61,52,51,62,52,61,62,53,52,63,53,62,63,54,53,64,54,63,64,55,54,65,55,64,65,56,55,66,56,65,66,57,56,67,57,66,67,58,57,68,58,67,68,59,58,69,59,68,70,61,60,71,61,70,71,62,61,72,62,71,72,63,62,73,63,72,73,64,63,74,64,73,74,65,64,75,65,74,75,66,65,76,66,75,76,67,66,77,67,76,77,68,67,78,68,77,78,69,68,79,69,78,80,71,70,81,71,80,81,72,71,82,72,81,82,73,72,83,73,82,83,74,73,84,74,83,84,75,74,85,75,84,85,76,75,86,76,85,86,77,76,87,77,86,87,78,77,88,78,87,88,79,78,89,79,88,90,81,80,91,81,90,91,82,81,92,82,91,92,83,82,93,83,92,93,84,83,94,84,93,94,85,84,95,85,94,95,86,85,96,86,95,96,87,86,97,87,96,97,88,87,98,88,97,98,89,88,99,89,98,100,91,90,101,91,100,101,92,91,102,92,101,102,93,92,103,93,102,103,94,93,104,94,103,104,95,94,105,95,104,105,96,95,106,96,105,106,97,96,107,97,106,107,98,97,108,98,107,108,99,98,109,99,108,110,101,100,111,101,110,111,102,101,112,102,111,112,103,102,113,103,112,113,104,103,114,104,113,114,105,104,115,105,114,115,106,105,116,106,115,116,107,106,117,107,116,117,108,107,118,108,117,118,109,108,119,109,118};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_714_point_1()
		{
			double[] value = {-5.2636e+00,2.8800e+00,1.2500e+00,-5.2669e+00,2.8818e+00,1.2066e+00,-5.2768e+00,2.8872e+00,1.1645e+00,-5.2930e+00,2.8961e+00,1.1250e+00,-5.3149e+00,2.9081e+00,1.0893e+00,-5.3420e+00,2.9229e+00,1.0585e+00,-5.3733e+00,2.9400e+00,1.0335e+00,-5.4079e+00,2.9590e+00,1.0151e+00,-5.4448e+00,2.9792e+00,1.0038e+00,-5.4829e+00,3.0000e+00,1.0000e+00,-4.6075e+00,3.8434e+00,1.2500e+00,-4.6104e+00,3.8458e+00,1.2066e+00,-4.6190e+00,3.8530e+00,1.1645e+00,-4.6332e+00,3.8648e+00,1.1250e+00,-4.6524e+00,3.8808e+00,1.0893e+00,-4.6760e+00,3.9006e+00,1.0585e+00,-4.7034e+00,3.9234e+00,1.0335e+00,-4.7338e+00,3.9487e+00,1.0151e+00,-4.7661e+00,3.9757e+00,1.0038e+00,-4.7994e+00,4.0035e+00,1.0000e+00,-3.7774e+00,4.6617e+00,1.2500e+00,-3.7798e+00,4.6646e+00,1.2066e+00,-3.7869e+00,4.6734e+00,1.1645e+00,-3.7985e+00,4.6877e+00,1.1250e+00,-3.8142e+00,4.7071e+00,1.0893e+00,-3.8336e+00,4.7310e+00,1.0585e+00,-3.8561e+00,4.7588e+00,1.0335e+00,-3.8810e+00,4.7895e+00,1.0151e+00,-3.9075e+00,4.8222e+00,1.0038e+00,-3.9348e+00,4.8559e+00,1.0000e+00,-2.8048e+00,5.3040e+00,1.2500e+00,-2.8066e+00,5.3074e+00,1.2066e+00,-2.8119e+00,5.3174e+00,1.1645e+00,-2.8205e+00,5.3337e+00,1.1250e+00,-2.8322e+00,5.3558e+00,1.0893e+00,-2.8466e+00,5.3830e+00,1.0585e+00,-2.8633e+00,5.4146e+00,1.0335e+00,-2.8817e+00,5.4495e+00,1.0151e+00,-2.9014e+00,5.4867e+00,1.0038e+00,-2.9217e+00,5.5251e+00,1.0000e+00,-1.7264e+00,5.7463e+00,1.2500e+00,-1.7275e+00,5.7499e+00,1.2066e+00,-1.7307e+00,5.7607e+00,1.1645e+00,-1.7360e+00,5.7783e+00,1.1250e+00,-1.7432e+00,5.8023e+00,1.0893e+00,-1.7521e+00,5.8318e+00,1.0585e+00,-1.7624e+00,5.8660e+00,1.0335e+00,-1.7737e+00,5.9038e+00,1.0151e+00,-1.7858e+00,5.9441e+00,1.0038e+00,-1.7983e+00,5.9857e+00,1.0000e+00,-5.8279e-01,5.9716e+00,1.2500e+00,-5.8316e-01,5.9754e+00,1.2066e+00,-5.8426e-01,5.9866e+00,1.1645e+00,-5.8605e-01,6.0050e+00,1.1250e+00,-5.8847e-01,6.0298e+00,1.0893e+00,-5.9147e-01,6.0605e+00,1.0585e+00,-5.9493e-01,6.0960e+00,1.0335e+00,-5.9877e-01,6.1353e+00,1.0151e+00,-6.0286e-01,6.1772e+00,1.0038e+00,-6.0708e-01,6.2204e+00,1.0000e+00,5.8279e-01,5.9716e+00,1.2500e+00,5.8316e-01,5.9754e+00,1.2066e+00,5.8426e-01,5.9866e+00,1.1645e+00,5.8605e-01,6.0050e+00,1.1250e+00,5.8847e-01,6.0298e+00,1.0893e+00,5.9147e-01,6.0605e+00,1.0585e+00,5.9493e-01,6.0960e+00,1.0335e+00,5.9877e-01,6.1353e+00,1.0151e+00,6.0286e-01,6.1772e+00,1.0038e+00,6.0708e-01,6.2204e+00,1.0000e+00,1.7264e+00,5.7463e+00,1.2500e+00,1.7275e+00,5.7499e+00,1.2066e+00,1.7307e+00,5.7607e+00,1.1645e+00,1.7360e+00,5.7783e+00,1.1250e+00,1.7432e+00,5.8023e+00,1.0893e+00,1.7521e+00,5.8318e+00,1.0585e+00,1.7624e+00,5.8660e+00,1.0335e+00,1.7737e+00,5.9038e+00,1.0151e+00,1.7858e+00,5.9441e+00,1.0038e+00,1.7983e+00,5.9857e+00,1.0000e+00,2.8048e+00,5.3040e+00,1.2500e+00,2.8066e+00,5.3074e+00,1.2066e+00,2.8119e+00,5.3174e+00,1.1645e+00,2.8205e+00,5.3337e+00,1.1250e+00,2.8322e+00,5.3558e+00,1.0893e+00,2.8466e+00,5.3830e+00,1.0585e+00,2.8633e+00,5.4146e+00,1.0335e+00,2.8817e+00,5.4495e+00,1.0151e+00,2.9014e+00,5.4867e+00,1.0038e+00,2.9217e+00,5.5251e+00,1.0000e+00,3.7774e+00,4.6617e+00,1.2500e+00,3.7798e+00,4.6646e+00,1.2066e+00,3.7869e+00,4.6734e+00,1.1645e+00,3.7985e+00,4.6877e+00,1.1250e+00,3.8142e+00,4.7071e+00,1.0893e+00,3.8336e+00,4.7310e+00,1.0585e+00,3.8561e+00,4.7588e+00,1.0335e+00,3.8810e+00,4.7895e+00,1.0151e+00,3.9075e+00,4.8222e+00,1.0038e+00,3.9348e+00,4.8559e+00,1.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_714_point_2()
		{
			double[] value = {4.6075e+00,3.8434e+00,1.2500e+00,4.6104e+00,3.8458e+00,1.2066e+00,4.6190e+00,3.8530e+00,1.1645e+00,4.6332e+00,3.8648e+00,1.1250e+00,4.6524e+00,3.8808e+00,1.0893e+00,4.6760e+00,3.9006e+00,1.0585e+00,4.7034e+00,3.9234e+00,1.0335e+00,4.7338e+00,3.9487e+00,1.0151e+00,4.7661e+00,3.9757e+00,1.0038e+00,4.7994e+00,4.0035e+00,1.0000e+00,5.2636e+00,2.8800e+00,1.2500e+00,5.2669e+00,2.8818e+00,1.2066e+00,5.2768e+00,2.8872e+00,1.1645e+00,5.2930e+00,2.8961e+00,1.1250e+00,5.3149e+00,2.9081e+00,1.0893e+00,5.3420e+00,2.9229e+00,1.0585e+00,5.3733e+00,2.9400e+00,1.0335e+00,5.4079e+00,2.9590e+00,1.0151e+00,5.4448e+00,2.9792e+00,1.0038e+00,5.4829e+00,3.0000e+00,1.0000e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_715_vector_1()
		{
			double[] value = {-8.7727e-01,4.8000e-01,6.1232e-17,-8.6394e-01,4.7271e-01,1.7365e-01,-8.2436e-01,4.5105e-01,3.4202e-01,-7.5974e-01,4.1569e-01,5.0000e-01,-6.7203e-01,3.6770e-01,6.4279e-01,-5.6390e-01,3.0854e-01,7.6604e-01,-4.3863e-01,2.4000e-01,8.6603e-01,-3.0004e-01,1.6417e-01,9.3969e-01,-1.5234e-01,8.3351e-02,9.8481e-01,4.1458e-10,-2.2684e-10,1.0000e+00,-7.6791e-01,6.4056e-01,6.1232e-17,-7.5624e-01,6.3083e-01,1.7365e-01,-7.2160e-01,6.0193e-01,3.4202e-01,-6.6503e-01,5.5474e-01,5.0000e-01,-5.8825e-01,4.9070e-01,6.4279e-01,-4.9360e-01,4.1174e-01,7.6604e-01,-3.8395e-01,3.2028e-01,8.6603e-01,-2.6264e-01,2.1908e-01,9.3969e-01,-1.3335e-01,1.1123e-01,9.8481e-01,3.6290e-10,-3.0271e-10,1.0000e+00,-6.2957e-01,7.7694e-01,6.1232e-17,-6.2001e-01,7.6514e-01,1.7365e-01,-5.9160e-01,7.3009e-01,3.4202e-01,-5.4522e-01,6.7285e-01,5.0000e-01,-4.8228e-01,5.9517e-01,6.4279e-01,-4.0468e-01,4.9941e-01,7.6604e-01,-3.1478e-01,3.8847e-01,8.6603e-01,-2.1533e-01,2.6573e-01,9.3969e-01,-1.0932e-01,1.3491e-01,9.8481e-01,2.9752e-10,-3.6717e-10,1.0000e+00,-4.6747e-01,8.8401e-01,6.1232e-17,-4.6037e-01,8.7058e-01,1.7365e-01,-4.3928e-01,8.3070e-01,3.4202e-01,-4.0484e-01,7.6557e-01,5.0000e-01,-3.5810e-01,6.7719e-01,6.4279e-01,-3.0048e-01,5.6823e-01,7.6604e-01,-2.3374e-01,4.4200e-01,8.6603e-01,-1.5988e-01,3.0235e-01,9.3969e-01,-8.1176e-02,1.5351e-01,9.8481e-01,2.2092e-10,-4.1776e-10,1.0000e+00,-2.8773e-01,9.5771e-01,6.1232e-17,-2.8336e-01,9.4316e-01,1.7365e-01,-2.7038e-01,8.9995e-01,3.4202e-01,-2.4918e-01,8.2940e-01,5.0000e-01,-2.2041e-01,7.3365e-01,6.4279e-01,-1.8495e-01,6.1560e-01,7.6604e-01,-1.4387e-01,4.7886e-01,8.6603e-01,-9.8410e-02,3.2756e-01,9.3969e-01,-4.9964e-02,1.6630e-01,9.8481e-01,1.3598e-10,-4.5259e-10,1.0000e+00,-9.7132e-02,9.9527e-01,6.1232e-17,-9.5657e-02,9.8015e-01,1.7365e-01,-9.1274e-02,9.3525e-01,3.4202e-01,-8.4119e-02,8.6193e-01,5.0000e-01,-7.4408e-02,7.6242e-01,6.4279e-01,-6.2435e-02,6.3975e-01,7.6604e-01,-4.8566e-02,4.9764e-01,8.6603e-01,-3.3221e-02,3.4040e-01,9.3969e-01,-1.6867e-02,1.7283e-01,9.8481e-01,4.5903e-11,-4.7034e-10,1.0000e+00,9.7132e-02,9.9527e-01,6.1232e-17,9.5657e-02,9.8015e-01,1.7365e-01,9.1274e-02,9.3525e-01,3.4202e-01,8.4119e-02,8.6193e-01,5.0000e-01,7.4408e-02,7.6242e-01,6.4279e-01,6.2435e-02,6.3975e-01,7.6604e-01,4.8566e-02,4.9764e-01,8.6603e-01,3.3221e-02,3.4040e-01,9.3969e-01,1.6867e-02,1.7283e-01,9.8481e-01,-4.5903e-11,-4.7034e-10,1.0000e+00,2.8773e-01,9.5771e-01,6.1232e-17,2.8336e-01,9.4316e-01,1.7365e-01,2.7038e-01,8.9995e-01,3.4202e-01,2.4918e-01,8.2940e-01,5.0000e-01,2.2041e-01,7.3365e-01,6.4279e-01,1.8495e-01,6.1560e-01,7.6604e-01,1.4387e-01,4.7886e-01,8.6603e-01,9.8410e-02,3.2756e-01,9.3969e-01,4.9964e-02,1.6630e-01,9.8481e-01,-1.3598e-10,-4.5259e-10,1.0000e+00,4.6747e-01,8.8401e-01,6.1232e-17,4.6037e-01,8.7058e-01,1.7365e-01,4.3928e-01,8.3070e-01,3.4202e-01,4.0484e-01,7.6557e-01,5.0000e-01,3.5810e-01,6.7719e-01,6.4279e-01,3.0048e-01,5.6823e-01,7.6604e-01,2.3374e-01,4.4200e-01,8.6603e-01,1.5988e-01,3.0235e-01,9.3969e-01,8.1176e-02,1.5351e-01,9.8481e-01,-2.2092e-10,-4.1776e-10,1.0000e+00,6.2957e-01,7.7694e-01,6.1232e-17,6.2001e-01,7.6514e-01,1.7365e-01,5.9160e-01,7.3009e-01,3.4202e-01,5.4522e-01,6.7285e-01,5.0000e-01,4.8228e-01,5.9517e-01,6.4279e-01,4.0468e-01,4.9941e-01,7.6604e-01,3.1478e-01,3.8847e-01,8.6603e-01,2.1533e-01,2.6573e-01,9.3969e-01,1.0932e-01,1.3491e-01,9.8481e-01,-2.9752e-10,-3.6717e-10,1.0000e+00};
			return value;
		}
		private double[] getNormal_7_715_vector_2()
		{
			double[] value = {7.6791e-01,6.4056e-01,6.1232e-17,7.5624e-01,6.3083e-01,1.7365e-01,7.2160e-01,6.0193e-01,3.4202e-01,6.6503e-01,5.5474e-01,5.0000e-01,5.8825e-01,4.9070e-01,6.4279e-01,4.9360e-01,4.1174e-01,7.6604e-01,3.8395e-01,3.2028e-01,8.6603e-01,2.6264e-01,2.1908e-01,9.3969e-01,1.3335e-01,1.1123e-01,9.8481e-01,-3.6290e-10,-3.0271e-10,1.0000e+00,8.7727e-01,4.8000e-01,6.1232e-17,8.6394e-01,4.7271e-01,1.7365e-01,8.2436e-01,4.5105e-01,3.4202e-01,7.5974e-01,4.1569e-01,5.0000e-01,6.7203e-01,3.6770e-01,6.4279e-01,5.6390e-01,3.0854e-01,7.6604e-01,4.3863e-01,2.4000e-01,8.6603e-01,3.0004e-01,1.6417e-01,9.3969e-01,1.5234e-01,8.3351e-02,9.8481e-01,-4.1458e-10,-2.2684e-10,1.0000e+00};
			return value;
		}






		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_749_index_1()
		{
			int[] value = {10,1,0,11,1,10,11,2,1,12,2,11,12,3,2,13,3,12,13,4,3,14,4,13,14,5,4,15,5,14,15,6,5,16,6,15,16,7,6,17,7,16,17,8,7,18,8,17,18,9,8,19,9,18,20,11,10,21,11,20,21,12,11,22,12,21,22,13,12,23,13,22,23,14,13,24,14,23,24,15,14,25,15,24,25,16,15,26,16,25,26,17,16,27,17,26,27,18,17,28,18,27,28,19,18,29,19,28,30,21,20,31,21,30,31,22,21,32,22,31,32,23,22,33,23,32,33,24,23,34,24,33,34,25,24,35,25,34,35,26,25,36,26,35,36,27,26,37,27,36,37,28,27,38,28,37,38,29,28,39,29,38,40,31,30,41,31,40,41,32,31,42,32,41,42,33,32,43,33,42,43,34,33,44,34,43,44,35,34,45,35,44,45,36,35,46,36,45,46,37,36,47,37,46,47,38,37,48,38,47,48,39,38,49,39,48,50,41,40,51,41,50,51,42,41,52,42,51,52,43,42,53,43,52,53,44,43,54,44,53,54,45,44,55,45,54,55,46,45,56,46,55,56,47,46,57,47,56,57,48,47,58,48,57,58,49,48,59,49,58,60,51,50,61,51,60,61,52,51,62,52,61,62,53,52,63,53,62,63,54,53,64,54,63,64,55,54,65,55,64,65,56,55,66,56,65,66,57,56,67,57,66,67,58,57,68,58,67,68,59,58,69,59,68,70,61,60,71,61,70,71,62,61,72,62,71,72,63,62,73,63,72,73,64,63,74,64,73,74,65,64,75,65,74,75,66,65,76,66,75,76,67,66,77,67,76,77,68,67,78,68,77,78,69,68,79,69,78,80,71,70,81,71,80,81,72,71,82,72,81,82,73,72,83,73,82,83,74,73,84,74,83,84,75,74,85,75,84,85,76,75,86,76,85,86,77,76,87,77,86,87,78,77,88,78,87,88,79,78,89,79,88,90,81,80,91,81,90,91,82,81,92,82,91,92,83,82,93,83,92,93,84,83,94,84,93,94,85,84,95,85,94,95,86,85,96,86,95,96,87,86,97,87,96,97,88,87,98,88,97,98,89,88,99,89,98,100,91,90,101,91,100,101,92,91,102,92,101,102,93,92,103,93,102,103,94,93,104,94,103,104,95,94,105,95,104,105,96,95,106,96,105,106,97,96,107,97,106,107,98,97,108,98,107,108,99,98,109,99,108,110,101,100,111,101,110,111,102,101,112,102,111,112,103,102,113,103,112,113,104,103,114,104,113,114,105,104,115,105,114,115,106,105,116,106,115,116,107,106,117,107,116,117,108,107,118,108,117,118,109,108,119,109,118};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_749_point_1()
		{
			double[] value = {5.2636e+00,-2.8800e+00,1.2500e+00,5.2669e+00,-2.8818e+00,1.2066e+00,5.2768e+00,-2.8872e+00,1.1645e+00,5.2930e+00,-2.8961e+00,1.1250e+00,5.3149e+00,-2.9081e+00,1.0893e+00,5.3420e+00,-2.9229e+00,1.0585e+00,5.3733e+00,-2.9400e+00,1.0335e+00,5.4079e+00,-2.9590e+00,1.0151e+00,5.4448e+00,-2.9792e+00,1.0038e+00,5.4829e+00,-3.0000e+00,1.0000e+00,4.6075e+00,-3.8434e+00,1.2500e+00,4.6104e+00,-3.8458e+00,1.2066e+00,4.6190e+00,-3.8530e+00,1.1645e+00,4.6332e+00,-3.8648e+00,1.1250e+00,4.6524e+00,-3.8808e+00,1.0893e+00,4.6760e+00,-3.9006e+00,1.0585e+00,4.7034e+00,-3.9234e+00,1.0335e+00,4.7338e+00,-3.9487e+00,1.0151e+00,4.7661e+00,-3.9757e+00,1.0038e+00,4.7994e+00,-4.0035e+00,1.0000e+00,3.7774e+00,-4.6617e+00,1.2500e+00,3.7798e+00,-4.6646e+00,1.2066e+00,3.7869e+00,-4.6734e+00,1.1645e+00,3.7985e+00,-4.6877e+00,1.1250e+00,3.8142e+00,-4.7071e+00,1.0893e+00,3.8336e+00,-4.7310e+00,1.0585e+00,3.8561e+00,-4.7588e+00,1.0335e+00,3.8810e+00,-4.7895e+00,1.0151e+00,3.9075e+00,-4.8222e+00,1.0038e+00,3.9348e+00,-4.8559e+00,1.0000e+00,2.8048e+00,-5.3040e+00,1.2500e+00,2.8066e+00,-5.3074e+00,1.2066e+00,2.8119e+00,-5.3174e+00,1.1645e+00,2.8205e+00,-5.3337e+00,1.1250e+00,2.8322e+00,-5.3558e+00,1.0893e+00,2.8466e+00,-5.3830e+00,1.0585e+00,2.8633e+00,-5.4146e+00,1.0335e+00,2.8817e+00,-5.4495e+00,1.0151e+00,2.9014e+00,-5.4867e+00,1.0038e+00,2.9217e+00,-5.5251e+00,1.0000e+00,1.7264e+00,-5.7463e+00,1.2500e+00,1.7275e+00,-5.7499e+00,1.2066e+00,1.7307e+00,-5.7607e+00,1.1645e+00,1.7360e+00,-5.7783e+00,1.1250e+00,1.7432e+00,-5.8023e+00,1.0893e+00,1.7521e+00,-5.8318e+00,1.0585e+00,1.7624e+00,-5.8660e+00,1.0335e+00,1.7737e+00,-5.9038e+00,1.0151e+00,1.7858e+00,-5.9441e+00,1.0038e+00,1.7983e+00,-5.9857e+00,1.0000e+00,5.8279e-01,-5.9716e+00,1.2500e+00,5.8316e-01,-5.9754e+00,1.2066e+00,5.8426e-01,-5.9866e+00,1.1645e+00,5.8605e-01,-6.0050e+00,1.1250e+00,5.8847e-01,-6.0298e+00,1.0893e+00,5.9147e-01,-6.0605e+00,1.0585e+00,5.9493e-01,-6.0960e+00,1.0335e+00,5.9877e-01,-6.1353e+00,1.0151e+00,6.0286e-01,-6.1772e+00,1.0038e+00,6.0708e-01,-6.2204e+00,1.0000e+00,-5.8279e-01,-5.9716e+00,1.2500e+00,-5.8316e-01,-5.9754e+00,1.2066e+00,-5.8426e-01,-5.9866e+00,1.1645e+00,-5.8605e-01,-6.0050e+00,1.1250e+00,-5.8847e-01,-6.0298e+00,1.0893e+00,-5.9147e-01,-6.0605e+00,1.0585e+00,-5.9493e-01,-6.0960e+00,1.0335e+00,-5.9877e-01,-6.1353e+00,1.0151e+00,-6.0286e-01,-6.1772e+00,1.0038e+00,-6.0708e-01,-6.2204e+00,1.0000e+00,-1.7264e+00,-5.7463e+00,1.2500e+00,-1.7275e+00,-5.7499e+00,1.2066e+00,-1.7307e+00,-5.7607e+00,1.1645e+00,-1.7360e+00,-5.7783e+00,1.1250e+00,-1.7432e+00,-5.8023e+00,1.0893e+00,-1.7521e+00,-5.8318e+00,1.0585e+00,-1.7624e+00,-5.8660e+00,1.0335e+00,-1.7737e+00,-5.9038e+00,1.0151e+00,-1.7858e+00,-5.9441e+00,1.0038e+00,-1.7983e+00,-5.9857e+00,1.0000e+00,-2.8048e+00,-5.3040e+00,1.2500e+00,-2.8066e+00,-5.3074e+00,1.2066e+00,-2.8119e+00,-5.3174e+00,1.1645e+00,-2.8205e+00,-5.3337e+00,1.1250e+00,-2.8322e+00,-5.3558e+00,1.0893e+00,-2.8466e+00,-5.3830e+00,1.0585e+00,-2.8633e+00,-5.4146e+00,1.0335e+00,-2.8817e+00,-5.4495e+00,1.0151e+00,-2.9014e+00,-5.4867e+00,1.0038e+00,-2.9217e+00,-5.5251e+00,1.0000e+00,-3.7774e+00,-4.6617e+00,1.2500e+00,-3.7798e+00,-4.6646e+00,1.2066e+00,-3.7869e+00,-4.6734e+00,1.1645e+00,-3.7985e+00,-4.6877e+00,1.1250e+00,-3.8142e+00,-4.7071e+00,1.0893e+00,-3.8336e+00,-4.7310e+00,1.0585e+00,-3.8561e+00,-4.7588e+00,1.0335e+00,-3.8810e+00,-4.7895e+00,1.0151e+00,-3.9075e+00,-4.8222e+00,1.0038e+00,-3.9348e+00,-4.8559e+00,1.0000e+00};
			return value;
		}
		private double[] getCoordinate_7_749_point_2()
		{
			double[] value = {-4.6075e+00,-3.8434e+00,1.2500e+00,-4.6104e+00,-3.8458e+00,1.2066e+00,-4.6190e+00,-3.8530e+00,1.1645e+00,-4.6332e+00,-3.8648e+00,1.1250e+00,-4.6524e+00,-3.8808e+00,1.0893e+00,-4.6760e+00,-3.9006e+00,1.0585e+00,-4.7034e+00,-3.9234e+00,1.0335e+00,-4.7338e+00,-3.9487e+00,1.0151e+00,-4.7661e+00,-3.9757e+00,1.0038e+00,-4.7994e+00,-4.0035e+00,1.0000e+00,-5.2636e+00,-2.8800e+00,1.2500e+00,-5.2669e+00,-2.8818e+00,1.2066e+00,-5.2768e+00,-2.8872e+00,1.1645e+00,-5.2930e+00,-2.8961e+00,1.1250e+00,-5.3149e+00,-2.9081e+00,1.0893e+00,-5.3420e+00,-2.9229e+00,1.0585e+00,-5.3733e+00,-2.9400e+00,1.0335e+00,-5.4079e+00,-2.9590e+00,1.0151e+00,-5.4448e+00,-2.9792e+00,1.0038e+00,-5.4829e+00,-3.0000e+00,1.0000e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_750_vector_1()
		{
			double[] value = {8.7727e-01,-4.8000e-01,6.1232e-17,8.6394e-01,-4.7271e-01,1.7365e-01,8.2436e-01,-4.5105e-01,3.4202e-01,7.5974e-01,-4.1569e-01,5.0000e-01,6.7203e-01,-3.6770e-01,6.4279e-01,5.6390e-01,-3.0854e-01,7.6604e-01,4.3863e-01,-2.4000e-01,8.6603e-01,3.0004e-01,-1.6417e-01,9.3969e-01,1.5234e-01,-8.3351e-02,9.8481e-01,-4.1458e-10,2.2684e-10,1.0000e+00,7.6791e-01,-6.4056e-01,6.1232e-17,7.5624e-01,-6.3083e-01,1.7365e-01,7.2160e-01,-6.0193e-01,3.4202e-01,6.6503e-01,-5.5474e-01,5.0000e-01,5.8825e-01,-4.9070e-01,6.4279e-01,4.9360e-01,-4.1174e-01,7.6604e-01,3.8395e-01,-3.2028e-01,8.6603e-01,2.6264e-01,-2.1908e-01,9.3969e-01,1.3335e-01,-1.1123e-01,9.8481e-01,-3.6290e-10,3.0271e-10,1.0000e+00,6.2957e-01,-7.7694e-01,6.1232e-17,6.2001e-01,-7.6514e-01,1.7365e-01,5.9160e-01,-7.3009e-01,3.4202e-01,5.4522e-01,-6.7285e-01,5.0000e-01,4.8228e-01,-5.9517e-01,6.4279e-01,4.0468e-01,-4.9941e-01,7.6604e-01,3.1478e-01,-3.8847e-01,8.6603e-01,2.1533e-01,-2.6573e-01,9.3969e-01,1.0932e-01,-1.3491e-01,9.8481e-01,-2.9752e-10,3.6717e-10,1.0000e+00,4.6747e-01,-8.8401e-01,6.1232e-17,4.6037e-01,-8.7058e-01,1.7365e-01,4.3928e-01,-8.3070e-01,3.4202e-01,4.0484e-01,-7.6557e-01,5.0000e-01,3.5810e-01,-6.7719e-01,6.4279e-01,3.0048e-01,-5.6823e-01,7.6604e-01,2.3374e-01,-4.4200e-01,8.6603e-01,1.5988e-01,-3.0235e-01,9.3969e-01,8.1176e-02,-1.5351e-01,9.8481e-01,-2.2092e-10,4.1776e-10,1.0000e+00,2.8773e-01,-9.5771e-01,6.1232e-17,2.8336e-01,-9.4316e-01,1.7365e-01,2.7038e-01,-8.9995e-01,3.4202e-01,2.4918e-01,-8.2940e-01,5.0000e-01,2.2041e-01,-7.3365e-01,6.4279e-01,1.8495e-01,-6.1560e-01,7.6604e-01,1.4387e-01,-4.7886e-01,8.6603e-01,9.8410e-02,-3.2756e-01,9.3969e-01,4.9964e-02,-1.6630e-01,9.8481e-01,-1.3598e-10,4.5259e-10,1.0000e+00,9.7132e-02,-9.9527e-01,6.1232e-17,9.5657e-02,-9.8015e-01,1.7365e-01,9.1274e-02,-9.3525e-01,3.4202e-01,8.4119e-02,-8.6193e-01,5.0000e-01,7.4408e-02,-7.6242e-01,6.4279e-01,6.2435e-02,-6.3975e-01,7.6604e-01,4.8566e-02,-4.9764e-01,8.6603e-01,3.3221e-02,-3.4040e-01,9.3969e-01,1.6867e-02,-1.7283e-01,9.8481e-01,-4.5903e-11,4.7034e-10,1.0000e+00,-9.7132e-02,-9.9527e-01,6.1232e-17,-9.5657e-02,-9.8015e-01,1.7365e-01,-9.1274e-02,-9.3525e-01,3.4202e-01,-8.4119e-02,-8.6193e-01,5.0000e-01,-7.4408e-02,-7.6242e-01,6.4279e-01,-6.2435e-02,-6.3975e-01,7.6604e-01,-4.8566e-02,-4.9764e-01,8.6603e-01,-3.3221e-02,-3.4040e-01,9.3969e-01,-1.6867e-02,-1.7283e-01,9.8481e-01,4.5903e-11,4.7034e-10,1.0000e+00,-2.8773e-01,-9.5771e-01,6.1232e-17,-2.8336e-01,-9.4316e-01,1.7365e-01,-2.7038e-01,-8.9995e-01,3.4202e-01,-2.4918e-01,-8.2940e-01,5.0000e-01,-2.2041e-01,-7.3365e-01,6.4279e-01,-1.8495e-01,-6.1560e-01,7.6604e-01,-1.4387e-01,-4.7886e-01,8.6603e-01,-9.8410e-02,-3.2756e-01,9.3969e-01,-4.9964e-02,-1.6630e-01,9.8481e-01,1.3598e-10,4.5259e-10,1.0000e+00,-4.6747e-01,-8.8401e-01,6.1232e-17,-4.6037e-01,-8.7058e-01,1.7365e-01,-4.3928e-01,-8.3070e-01,3.4202e-01,-4.0484e-01,-7.6557e-01,5.0000e-01,-3.5810e-01,-6.7719e-01,6.4279e-01,-3.0048e-01,-5.6823e-01,7.6604e-01,-2.3374e-01,-4.4200e-01,8.6603e-01,-1.5988e-01,-3.0235e-01,9.3969e-01,-8.1176e-02,-1.5351e-01,9.8481e-01,2.2092e-10,4.1776e-10,1.0000e+00,-6.2957e-01,-7.7694e-01,6.1232e-17,-6.2001e-01,-7.6514e-01,1.7365e-01,-5.9160e-01,-7.3009e-01,3.4202e-01,-5.4522e-01,-6.7285e-01,5.0000e-01,-4.8228e-01,-5.9517e-01,6.4279e-01,-4.0468e-01,-4.9941e-01,7.6604e-01,-3.1478e-01,-3.8847e-01,8.6603e-01,-2.1533e-01,-2.6573e-01,9.3969e-01,-1.0932e-01,-1.3491e-01,9.8481e-01,2.9752e-10,3.6717e-10,1.0000e+00};
			return value;
		}
		private double[] getNormal_7_750_vector_2()
		{
			double[] value = {-7.6791e-01,-6.4056e-01,6.1232e-17,-7.5624e-01,-6.3083e-01,1.7365e-01,-7.2160e-01,-6.0193e-01,3.4202e-01,-6.6503e-01,-5.5474e-01,5.0000e-01,-5.8825e-01,-4.9070e-01,6.4279e-01,-4.9360e-01,-4.1174e-01,7.6604e-01,-3.8395e-01,-3.2028e-01,8.6603e-01,-2.6264e-01,-2.1908e-01,9.3969e-01,-1.3335e-01,-1.1123e-01,9.8481e-01,3.6290e-10,3.0271e-10,1.0000e+00,-8.7727e-01,-4.8000e-01,6.1232e-17,-8.6394e-01,-4.7271e-01,1.7365e-01,-8.2436e-01,-4.5105e-01,3.4202e-01,-7.5974e-01,-4.1569e-01,5.0000e-01,-6.7203e-01,-3.6770e-01,6.4279e-01,-5.6390e-01,-3.0854e-01,7.6604e-01,-4.3863e-01,-2.4000e-01,8.6603e-01,-3.0004e-01,-1.6417e-01,9.3969e-01,-1.5234e-01,-8.3351e-02,9.8481e-01,4.1458e-10,2.2684e-10,1.0000e+00};
			return value;
		}










		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_784_index_1()
		{
			int[] value = {3,2,8,5,3,8,6,5,8,7,6,8,10,9,12,11,10,12,14,13,16,15,14,16,18,17,25,21,18,25,22,21,25,23,22,25,29,28,32,31,30,29,31,29,32,34,33,36,35,34,36,38,37,40,39,38,40,42,41,47,46,45,42,46,42,47,51,50,54,53,52,51,53,51,54,56,55,58,57,56,58,60,59,62,61,60,62,64,63,69,68,67,64,68,64,69,73,72,76,75,74,73,75,73,76,78,77,80,79,78,80,82,81,84,83,82,84,86,85,91,90,89,86,90,86,91,95,94,98,97,96,95,97,95,98,100,99,102,101,100,102,104,103,106,105,104,106,108,107,113,112,111,108,112,108,113,117,116,120,119,118,117,119,117,120,122,121,124,123,122,124,126,125,128,127,126,128,130,129,135,134,133,130,134,130,135,139,138,142,141,140,139,141,139,142,144,143,146,145,144,146,148,147,150,149,148,150,152,151,157,156,155,152,156,152,157,161,160,164,163,162,161,163,161,164,166,165,168,167,166,168,170,169,172,171,170,172,174,173,179,178,177,174,178,174,179,183,182,186,185,184,183,185,183,186,188,187,190,189,188,190,192,191,194,193,192,194,196,195,201,200,199,196,200,196,201,205,204,208,207,206,205,207,205,208,210,209,212,211,210,212,214,213,216,215,214,216,218,217,223,222,221,218,222,218,223,227,226,230,229,228,227,229,227,230,232,231,234,233,232,234,236,235,238,237,236,238,240,239,245,244,243,240,244,240,245,249,248,252,251,250,249,251,249,252,256,255,254,253,256,254,260,259,258,257,260,258,262,261,267,266,265,262,266,262,267};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_784_point_1()
		{
			double[] value = {6.1174e+00,-1.2806e+00,2.1500e+00,6.0855e+00,-1.2739e+00,2.1521e+00,6.1843e+00,-6.4038e-01,2.1521e+00,6.2168e+00,-6.4374e-01,2.1500e+00,6.1215e+00,-1.2610e+00,2.1500e+00,6.1215e+00,-1.2610e+00,2.1500e+00,6.1174e+00,-1.2607e+00,2.1500e+00,6.1134e+00,-1.2601e+00,2.1501e+00,6.0893e+00,-1.2553e+00,2.1521e+00,6.2168e+00,-6.4374e-01,2.1500e+00,6.1843e+00,-6.4038e-01,2.1521e+00,6.2174e+00,3.8070e-16,2.1521e+00,6.2500e+00,3.8270e-16,2.1500e+00,6.2500e+00,3.8270e-16,2.1500e+00,6.2174e+00,3.8070e-16,2.1521e+00,6.1843e+00,6.4038e-01,2.1521e+00,6.2168e+00,6.4374e-01,2.1500e+00,6.2168e+00,6.4374e-01,2.1500e+00,6.1843e+00,6.4038e-01,2.1521e+00,6.0855e+00,1.2739e+00,2.1521e+00,6.1174e+00,1.2806e+00,2.1500e+00,6.0893e+00,1.2553e+00,2.1521e+00,6.1134e+00,1.2601e+00,2.1501e+00,6.1174e+00,1.2607e+00,2.1500e+00,6.1215e+00,1.2610e+00,2.1500e+00,6.1215e+00,1.2610e+00,2.1500e+00,6.0855e+00,-1.2739e+00,2.1521e+00,6.0541e+00,-1.2674e+00,2.1585e+00,6.1524e+00,-6.3707e-01,2.1585e+00,6.1843e+00,-6.4038e-01,2.1521e+00,6.0893e+00,-1.2553e+00,2.1521e+00,6.0819e+00,-1.2538e+00,2.1532e+00,6.0578e+00,-1.2492e+00,2.1585e+00,6.1843e+00,-6.4038e-01,2.1521e+00,6.1524e+00,-6.3707e-01,2.1585e+00,6.1853e+00,3.7874e-16,2.1585e+00,6.2174e+00,3.8070e-16,2.1521e+00,6.2174e+00,3.8070e-16,2.1521e+00,6.1853e+00,3.7874e-16,2.1585e+00,6.1524e+00,6.3707e-01,2.1585e+00,6.1843e+00,6.4038e-01,2.1521e+00,6.1843e+00,6.4038e-01,2.1521e+00,6.1524e+00,6.3707e-01,2.1585e+00,6.0541e+00,1.2674e+00,2.1585e+00,6.0855e+00,1.2739e+00,2.1521e+00,6.0578e+00,1.2492e+00,2.1585e+00,6.0819e+00,1.2538e+00,2.1532e+00,6.0893e+00,1.2553e+00,2.1521e+00,6.0541e+00,-1.2674e+00,2.1585e+00,6.0238e+00,-1.2610e+00,2.1690e+00,6.1216e+00,-6.3388e-01,2.1690e+00,6.1524e+00,-6.3707e-01,2.1585e+00,6.0578e+00,-1.2492e+00,2.1585e+00,6.0512e+00,-1.2479e+00,2.1604e+00,6.0274e+00,-1.2437e+00,2.1690e+00,6.1524e+00,-6.3707e-01,2.1585e+00,6.1216e+00,-6.3388e-01,2.1690e+00,6.1543e+00,3.7684e-16,2.1690e+00,6.1853e+00,3.7874e-16,2.1585e+00,6.1853e+00,3.7874e-16,2.1585e+00,6.1543e+00,3.7684e-16,2.1690e+00,6.1216e+00,6.3388e-01,2.1690e+00,6.1524e+00,6.3707e-01,2.1585e+00,6.1524e+00,6.3707e-01,2.1585e+00,6.1216e+00,6.3388e-01,2.1690e+00,6.0238e+00,1.2610e+00,2.1690e+00,6.0541e+00,1.2674e+00,2.1585e+00,6.0274e+00,1.2437e+00,2.1690e+00,6.0512e+00,1.2479e+00,2.1604e+00,6.0578e+00,1.2492e+00,2.1585e+00,6.0238e+00,-1.2610e+00,2.1690e+00,5.9950e+00,-1.2550e+00,2.1835e+00,6.0924e+00,-6.3086e-01,2.1835e+00,6.1216e+00,-6.3388e-01,2.1690e+00,6.0274e+00,-1.2437e+00,2.1690e+00,6.0216e+00,-1.2426e+00,2.1716e+00,5.9984e+00,-1.2387e+00,2.1835e+00,6.1216e+00,-6.3388e-01,2.1690e+00,6.0924e+00,-6.3086e-01,2.1835e+00,6.1250e+00,3.7505e-16,2.1835e+00,6.1543e+00,3.7684e-16,2.1690e+00,6.1543e+00,3.7684e-16,2.1690e+00,6.1250e+00,3.7505e-16,2.1835e+00,6.0924e+00,6.3086e-01,2.1835e+00,6.1216e+00,6.3388e-01,2.1690e+00,6.1216e+00,6.3388e-01,2.1690e+00,6.0924e+00,6.3086e-01,2.1835e+00,5.9950e+00,1.2550e+00,2.1835e+00,6.0238e+00,1.2610e+00,2.1690e+00,5.9984e+00,1.2387e+00,2.1835e+00,6.0216e+00,1.2426e+00,2.1716e+00,6.0274e+00,1.2437e+00,2.1690e+00,5.9950e+00,-1.2550e+00,2.1835e+00,5.9684e+00,-1.2494e+00,2.2017e+00,6.0654e+00,-6.2806e-01,2.2017e+00,6.0924e+00,-6.3086e-01,2.1835e+00,5.9984e+00,-1.2387e+00,2.1835e+00,5.9936e+00,-1.2379e+00,2.1864e+00,5.9715e+00,-1.2345e+00,2.2017e+00,6.0924e+00,-6.3086e-01,2.1835e+00};
			return value;
		}
		private double[] getCoordinate_7_784_point_2()
		{
			double[] value = {6.0654e+00,-6.2806e-01,2.2017e+00,6.0978e+00,3.7338e-16,2.2017e+00,6.1250e+00,3.7505e-16,2.1835e+00,6.1250e+00,3.7505e-16,2.1835e+00,6.0978e+00,3.7338e-16,2.2017e+00,6.0654e+00,6.2806e-01,2.2017e+00,6.0924e+00,6.3086e-01,2.1835e+00,6.0924e+00,6.3086e-01,2.1835e+00,6.0654e+00,6.2806e-01,2.2017e+00,5.9684e+00,1.2494e+00,2.2017e+00,5.9950e+00,1.2550e+00,2.1835e+00,5.9715e+00,1.2345e+00,2.2017e+00,5.9936e+00,1.2379e+00,2.1864e+00,5.9984e+00,1.2387e+00,2.1835e+00,5.9684e+00,-1.2494e+00,2.2017e+00,5.9444e+00,-1.2444e+00,2.2232e+00,6.0409e+00,-6.2553e-01,2.2232e+00,6.0654e+00,-6.2806e-01,2.2017e+00,5.9715e+00,-1.2345e+00,2.2017e+00,5.9677e+00,-1.2340e+00,2.2047e+00,5.9471e+00,-1.2311e+00,2.2232e+00,6.0654e+00,-6.2806e-01,2.2017e+00,6.0409e+00,-6.2553e-01,2.2232e+00,6.0732e+00,3.7188e-16,2.2232e+00,6.0978e+00,3.7338e-16,2.2017e+00,6.0978e+00,3.7338e-16,2.2017e+00,6.0732e+00,3.7188e-16,2.2232e+00,6.0409e+00,6.2553e-01,2.2232e+00,6.0654e+00,6.2806e-01,2.2017e+00,6.0654e+00,6.2806e-01,2.2017e+00,6.0409e+00,6.2553e-01,2.2232e+00,5.9444e+00,1.2444e+00,2.2232e+00,5.9684e+00,1.2494e+00,2.2017e+00,5.9471e+00,1.2311e+00,2.2232e+00,5.9677e+00,1.2340e+00,2.2047e+00,5.9715e+00,1.2345e+00,2.2017e+00,5.9444e+00,-1.2444e+00,2.2232e+00,5.9233e+00,-1.2400e+00,2.2478e+00,6.0195e+00,-6.2331e-01,2.2478e+00,6.0409e+00,-6.2553e-01,2.2232e+00,5.9471e+00,-1.2311e+00,2.2232e+00,5.9443e+00,-1.2307e+00,2.2262e+00,5.9256e+00,-1.2286e+00,2.2478e+00,6.0409e+00,-6.2553e-01,2.2232e+00,6.0195e+00,-6.2331e-01,2.2478e+00,6.0517e+00,3.7056e-16,2.2478e+00,6.0732e+00,3.7188e-16,2.2232e+00,6.0732e+00,3.7188e-16,2.2232e+00,6.0517e+00,3.7056e-16,2.2478e+00,6.0195e+00,6.2331e-01,2.2478e+00,6.0409e+00,6.2553e-01,2.2232e+00,6.0409e+00,6.2553e-01,2.2232e+00,6.0195e+00,6.2331e-01,2.2478e+00,5.9233e+00,1.2400e+00,2.2478e+00,5.9444e+00,1.2444e+00,2.2232e+00,5.9256e+00,1.2286e+00,2.2478e+00,5.9443e+00,1.2307e+00,2.2262e+00,5.9471e+00,1.2311e+00,2.2232e+00,5.9233e+00,-1.2400e+00,2.2478e+00,5.9055e+00,-1.2363e+00,2.2750e+00,6.0014e+00,-6.2144e-01,2.2750e+00,6.0195e+00,-6.2331e-01,2.2478e+00,5.9256e+00,-1.2286e+00,2.2478e+00,5.9236e+00,-1.2283e+00,2.2505e+00,5.9074e+00,-1.2269e+00,2.2750e+00,6.0195e+00,-6.2331e-01,2.2478e+00,6.0014e+00,-6.2144e-01,2.2750e+00,6.0335e+00,3.6944e-16,2.2750e+00,6.0517e+00,3.7056e-16,2.2478e+00,6.0517e+00,3.7056e-16,2.2478e+00,6.0335e+00,3.6944e-16,2.2750e+00,6.0014e+00,6.2144e-01,2.2750e+00,6.0195e+00,6.2331e-01,2.2478e+00,6.0195e+00,6.2331e-01,2.2478e+00,6.0014e+00,6.2144e-01,2.2750e+00,5.9055e+00,1.2363e+00,2.2750e+00,5.9233e+00,1.2400e+00,2.2478e+00,5.9074e+00,1.2269e+00,2.2750e+00,5.9236e+00,1.2283e+00,2.2505e+00,5.9256e+00,1.2286e+00,2.2478e+00,5.9055e+00,-1.2363e+00,2.2750e+00,5.8913e+00,-1.2333e+00,2.3043e+00,5.9870e+00,-6.1995e-01,2.3043e+00,6.0014e+00,-6.2144e-01,2.2750e+00,5.9074e+00,-1.2269e+00,2.2750e+00,5.9061e+00,-1.2268e+00,2.2774e+00,5.8928e+00,-1.2261e+00,2.3043e+00,6.0014e+00,-6.2144e-01,2.2750e+00,5.9870e+00,-6.1995e-01,2.3043e+00,6.0190e+00,3.6856e-16,2.3043e+00,6.0335e+00,3.6944e-16,2.2750e+00,6.0335e+00,3.6944e-16,2.2750e+00,6.0190e+00,3.6856e-16,2.3043e+00,5.9870e+00,6.1995e-01,2.3043e+00,6.0014e+00,6.2144e-01,2.2750e+00,6.0014e+00,6.2144e-01,2.2750e+00,5.9870e+00,6.1995e-01,2.3043e+00,5.8913e+00,1.2333e+00,2.3043e+00,5.9055e+00,1.2363e+00,2.2750e+00,5.8928e+00,1.2261e+00,2.3043e+00};
			return value;
		}
		private double[] getCoordinate_7_784_point_3()
		{
			double[] value = {5.9061e+00,1.2268e+00,2.2774e+00,5.9074e+00,1.2269e+00,2.2750e+00,5.8913e+00,-1.2333e+00,2.3043e+00,5.8810e+00,-1.2311e+00,2.3353e+00,5.9766e+00,-6.1886e-01,2.3353e+00,5.9870e+00,-6.1995e-01,2.3043e+00,5.8928e+00,-1.2261e+00,2.3043e+00,5.8920e+00,-1.2261e+00,2.3063e+00,5.8820e+00,-1.2263e+00,2.3353e+00,5.9870e+00,-6.1995e-01,2.3043e+00,5.9766e+00,-6.1886e-01,2.3353e+00,6.0085e+00,3.6792e-16,2.3353e+00,6.0190e+00,3.6856e-16,2.3043e+00,6.0190e+00,3.6856e-16,2.3043e+00,6.0085e+00,3.6792e-16,2.3353e+00,5.9766e+00,6.1886e-01,2.3353e+00,5.9870e+00,6.1995e-01,2.3043e+00,5.9870e+00,6.1995e-01,2.3043e+00,5.9766e+00,6.1886e-01,2.3353e+00,5.8810e+00,1.2311e+00,2.3353e+00,5.8913e+00,1.2333e+00,2.3043e+00,5.8820e+00,1.2263e+00,2.3353e+00,5.8920e+00,1.2261e+00,2.3063e+00,5.8928e+00,1.2261e+00,2.3043e+00,5.8810e+00,-1.2311e+00,2.3353e+00,5.8748e+00,-1.2298e+00,2.3674e+00,5.9702e+00,-6.1821e-01,2.3674e+00,5.9766e+00,-6.1886e-01,2.3353e+00,5.8820e+00,-1.2263e+00,2.3353e+00,5.8816e+00,-1.2263e+00,2.3368e+00,5.8753e+00,-1.2274e+00,2.3674e+00,5.9766e+00,-6.1886e-01,2.3353e+00,5.9702e+00,-6.1821e-01,2.3674e+00,6.0021e+00,3.6753e-16,2.3674e+00,6.0085e+00,3.6792e-16,2.3353e+00,6.0085e+00,3.6792e-16,2.3353e+00,6.0021e+00,3.6753e-16,2.3674e+00,5.9702e+00,6.1821e-01,2.3674e+00,5.9766e+00,6.1886e-01,2.3353e+00,5.9766e+00,6.1886e-01,2.3353e+00,5.9702e+00,6.1821e-01,2.3674e+00,5.8748e+00,1.2298e+00,2.3674e+00,5.8810e+00,1.2311e+00,2.3353e+00,5.8753e+00,1.2274e+00,2.3674e+00,5.8816e+00,1.2263e+00,2.3368e+00,5.8820e+00,1.2263e+00,2.3353e+00,5.8748e+00,-1.2298e+00,2.3674e+00,5.8727e+00,-1.2294e+00,2.4000e+00,5.9681e+00,-6.1799e-01,2.4000e+00,5.9702e+00,-6.1821e-01,2.3674e+00,5.8753e+00,-1.2274e+00,2.3674e+00,5.8752e+00,-1.2274e+00,2.3682e+00,5.8727e+00,-1.2294e+00,2.4000e+00,5.9702e+00,-6.1821e-01,2.3674e+00,5.9681e+00,-6.1799e-01,2.4000e+00,6.0000e+00,3.6739e-16,2.4000e+00,6.0021e+00,3.6753e-16,2.3674e+00,6.0021e+00,3.6753e-16,2.3674e+00,6.0000e+00,3.6739e-16,2.4000e+00,5.9681e+00,6.1799e-01,2.4000e+00,5.9702e+00,6.1821e-01,2.3674e+00,5.9702e+00,6.1821e-01,2.3674e+00,5.9681e+00,6.1799e-01,2.4000e+00,5.8727e+00,1.2294e+00,2.4000e+00,5.8748e+00,1.2298e+00,2.3674e+00,5.8727e+00,1.2294e+00,2.4000e+00,5.8752e+00,1.2274e+00,2.3682e+00,5.8753e+00,1.2274e+00,2.3674e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_785_vector_1()
		{
			double[] value = {1.1987e-16,-2.5093e-17,1.0000e+00,1.2776e-01,-2.6745e-02,9.9144e-01,1.2983e-01,-1.3444e-02,9.9144e-01,1.2181e-16,-1.2614e-17,1.0000e+00,1.1995e-16,-2.4708e-17,1.0000e+00,1.1995e-16,-2.4708e-17,1.0000e+00,1.5726e-02,-3.2410e-03,9.9987e-01,3.1611e-02,-6.5159e-03,9.9948e-01,1.2784e-01,-2.6353e-02,9.9144e-01,1.2181e-16,-1.2614e-17,1.0000e+00,1.2983e-01,-1.3444e-02,9.9144e-01,1.3053e-01,7.9924e-18,9.9144e-01,1.2246e-16,7.4988e-33,1.0000e+00,1.2246e-16,7.4988e-33,1.0000e+00,1.3053e-01,7.9924e-18,9.9144e-01,1.2983e-01,1.3444e-02,9.9144e-01,1.2181e-16,1.2614e-17,1.0000e+00,1.2181e-16,1.2614e-17,1.0000e+00,1.2983e-01,1.3444e-02,9.9144e-01,1.2776e-01,2.6745e-02,9.9144e-01,1.1987e-16,2.5093e-17,1.0000e+00,1.2784e-01,2.6353e-02,9.9144e-01,3.1611e-02,6.5159e-03,9.9948e-01,1.5726e-02,3.2410e-03,9.9987e-01,1.1995e-16,2.4708e-17,1.0000e+00,1.1995e-16,2.4708e-17,1.0000e+00,1.2776e-01,-2.6745e-02,9.9144e-01,2.5333e-01,-5.3032e-02,9.6593e-01,2.5744e-01,-2.6658e-02,9.6593e-01,1.2983e-01,-1.3444e-02,9.9144e-01,1.2784e-01,-2.6353e-02,9.9144e-01,1.5740e-01,-3.2449e-02,9.8700e-01,2.5349e-01,-5.2272e-02,9.6593e-01,1.2983e-01,-1.3444e-02,9.9144e-01,2.5744e-01,-2.6658e-02,9.6593e-01,2.5882e-01,1.5848e-17,9.6593e-01,1.3053e-01,7.9924e-18,9.9144e-01,1.3053e-01,7.9924e-18,9.9144e-01,2.5882e-01,1.5848e-17,9.6593e-01,2.5744e-01,2.6658e-02,9.6593e-01,1.2983e-01,1.3444e-02,9.9144e-01,1.2983e-01,1.3444e-02,9.9144e-01,2.5744e-01,2.6658e-02,9.6593e-01,2.5333e-01,5.3032e-02,9.6593e-01,1.2776e-01,2.6745e-02,9.9144e-01,2.5349e-01,5.2272e-02,9.6593e-01,1.5740e-01,3.2449e-02,9.8700e-01,1.2784e-01,2.6353e-02,9.9144e-01,2.5333e-01,-5.3032e-02,9.6593e-01,3.7456e-01,-7.8412e-02,9.2388e-01,3.8065e-01,-3.9416e-02,9.2388e-01,2.5744e-01,-2.6658e-02,9.6593e-01,2.5349e-01,-5.2272e-02,9.6593e-01,2.8007e-01,-5.7758e-02,9.5824e-01,3.7479e-01,-7.7332e-02,9.2388e-01,2.5744e-01,-2.6658e-02,9.6593e-01,3.8065e-01,-3.9416e-02,9.2388e-01,3.8268e-01,2.3433e-17,9.2388e-01,2.5882e-01,1.5848e-17,9.6593e-01,2.5882e-01,1.5848e-17,9.6593e-01,3.8268e-01,2.3433e-17,9.2388e-01,3.8065e-01,3.9416e-02,9.2388e-01,2.5744e-01,2.6658e-02,9.6593e-01,2.5744e-01,2.6658e-02,9.6593e-01,3.8065e-01,3.9416e-02,9.2388e-01,3.7456e-01,7.8412e-02,9.2388e-01,2.5333e-01,5.3032e-02,9.6593e-01,3.7479e-01,7.7332e-02,9.2388e-01,2.8007e-01,5.7758e-02,9.5824e-01,2.5349e-01,5.2272e-02,9.6593e-01,3.7456e-01,-7.8412e-02,9.2388e-01,4.8939e-01,-1.0245e-01,8.6603e-01,4.9734e-01,-5.1499e-02,8.6603e-01,3.8065e-01,-3.9416e-02,9.2388e-01,3.7479e-01,-7.7332e-02,9.2388e-01,3.9781e-01,-8.2094e-02,9.1379e-01,4.8967e-01,-1.0112e-01,8.6603e-01,3.8065e-01,-3.9416e-02,9.2388e-01,4.9734e-01,-5.1499e-02,8.6603e-01,5.0000e-01,3.0616e-17,8.6603e-01,3.8268e-01,2.3433e-17,9.2388e-01,3.8268e-01,2.3433e-17,9.2388e-01,5.0000e-01,3.0616e-17,8.6603e-01,4.9734e-01,5.1499e-02,8.6603e-01,3.8065e-01,3.9416e-02,9.2388e-01,3.8065e-01,3.9416e-02,9.2388e-01,4.9734e-01,5.1499e-02,8.6603e-01,4.8939e-01,1.0245e-01,8.6603e-01,3.7456e-01,7.8412e-02,9.2388e-01,4.8967e-01,1.0112e-01,8.6603e-01,3.9781e-01,8.2094e-02,9.1379e-01,3.7479e-01,7.7332e-02,9.2388e-01,4.8939e-01,-1.0245e-01,8.6603e-01,5.9585e-01,-1.2474e-01,7.9335e-01,6.0552e-01,-6.2701e-02,7.9335e-01,4.9734e-01,-5.1499e-02,8.6603e-01,4.8967e-01,-1.0112e-01,8.6603e-01,5.0881e-01,-1.0509e-01,8.5444e-01,5.9615e-01,-1.2325e-01,7.9335e-01,4.9734e-01,-5.1499e-02,8.6603e-01};
			return value;
		}
		private double[] getNormal_7_785_vector_2()
		{
			double[] value = {6.0552e-01,-6.2701e-02,7.9335e-01,6.0876e-01,3.7276e-17,7.9335e-01,5.0000e-01,3.0616e-17,8.6603e-01,5.0000e-01,3.0616e-17,8.6603e-01,6.0876e-01,3.7276e-17,7.9335e-01,6.0552e-01,6.2701e-02,7.9335e-01,4.9734e-01,5.1499e-02,8.6603e-01,4.9734e-01,5.1499e-02,8.6603e-01,6.0552e-01,6.2701e-02,7.9335e-01,5.9585e-01,1.2474e-01,7.9335e-01,4.8939e-01,1.0245e-01,8.6603e-01,5.9615e-01,1.2325e-01,7.9335e-01,5.0881e-01,1.0509e-01,8.5444e-01,4.8967e-01,1.0112e-01,8.6603e-01,5.9585e-01,-1.2474e-01,7.9335e-01,6.9210e-01,-1.4489e-01,7.0711e-01,7.0335e-01,-7.2830e-02,7.0711e-01,6.0552e-01,-6.2701e-02,7.9335e-01,5.9615e-01,-1.2325e-01,7.9335e-01,6.1131e-01,-1.2640e-01,7.8123e-01,6.9243e-01,-1.4334e-01,7.0711e-01,6.0552e-01,-6.2701e-02,7.9335e-01,7.0335e-01,-7.2830e-02,7.0711e-01,7.0711e-01,4.3298e-17,7.0711e-01,6.0876e-01,3.7276e-17,7.9335e-01,6.0876e-01,3.7276e-17,7.9335e-01,7.0711e-01,4.3298e-17,7.0711e-01,7.0335e-01,7.2830e-02,7.0711e-01,6.0552e-01,6.2701e-02,7.9335e-01,6.0552e-01,6.2701e-02,7.9335e-01,7.0335e-01,7.2830e-02,7.0711e-01,6.9210e-01,1.4489e-01,7.0711e-01,5.9585e-01,1.2474e-01,7.9335e-01,6.9243e-01,1.4334e-01,7.0711e-01,6.1131e-01,1.2640e-01,7.8123e-01,5.9615e-01,1.2325e-01,7.9335e-01,6.9210e-01,-1.4489e-01,7.0711e-01,7.7652e-01,-1.6256e-01,6.0876e-01,7.8913e-01,-8.1714e-02,6.0876e-01,7.0335e-01,-7.2830e-02,7.0711e-01,6.9243e-01,-1.4334e-01,7.0711e-01,7.0378e-01,-1.4572e-01,6.9531e-01,7.7683e-01,-1.6106e-01,6.0876e-01,7.0335e-01,-7.2830e-02,7.0711e-01,7.8913e-01,-8.1714e-02,6.0876e-01,7.9335e-01,4.8579e-17,6.0876e-01,7.0711e-01,4.3298e-17,7.0711e-01,7.0711e-01,4.3298e-17,7.0711e-01,7.9335e-01,4.8579e-17,6.0876e-01,7.8913e-01,8.1714e-02,6.0876e-01,7.0335e-01,7.2830e-02,7.0711e-01,7.0335e-01,7.2830e-02,7.0711e-01,7.8913e-01,8.1714e-02,6.0876e-01,7.7652e-01,1.6256e-01,6.0876e-01,6.9210e-01,1.4489e-01,7.0711e-01,7.7683e-01,1.6106e-01,6.0876e-01,7.0378e-01,1.4572e-01,6.9531e-01,6.9243e-01,1.4334e-01,7.0711e-01,7.7652e-01,-1.6256e-01,6.0876e-01,8.4765e-01,-1.7745e-01,5.0000e-01,8.6142e-01,-8.9199e-02,5.0000e-01,7.8913e-01,-8.1714e-02,6.0876e-01,7.7683e-01,-1.6106e-01,6.0876e-01,7.8487e-01,-1.6275e-01,5.9791e-01,8.4793e-01,-1.7610e-01,5.0000e-01,7.8913e-01,-8.1714e-02,6.0876e-01,8.6142e-01,-8.9199e-02,5.0000e-01,8.6603e-01,5.3029e-17,5.0000e-01,7.9335e-01,4.8579e-17,6.0876e-01,7.9335e-01,4.8579e-17,6.0876e-01,8.6603e-01,5.3029e-17,5.0000e-01,8.6142e-01,8.9199e-02,5.0000e-01,7.8913e-01,8.1714e-02,6.0876e-01,7.8913e-01,8.1714e-02,6.0876e-01,8.6142e-01,8.9199e-02,5.0000e-01,8.4765e-01,1.7745e-01,5.0000e-01,7.7652e-01,1.6256e-01,6.0876e-01,8.4793e-01,1.7610e-01,5.0000e-01,7.8487e-01,1.6275e-01,5.9791e-01,7.7683e-01,1.6106e-01,6.0876e-01,8.4765e-01,-1.7745e-01,5.0000e-01,9.0428e-01,-1.8930e-01,3.8268e-01,9.1897e-01,-9.5158e-02,3.8268e-01,8.6142e-01,-8.9199e-02,5.0000e-01,8.4793e-01,-1.7610e-01,5.0000e-01,8.5327e-01,-1.7724e-01,4.9043e-01,9.0451e-01,-1.8820e-01,3.8268e-01,8.6142e-01,-8.9199e-02,5.0000e-01,9.1897e-01,-9.5158e-02,3.8268e-01,9.2388e-01,5.6571e-17,3.8268e-01,8.6603e-01,5.3029e-17,5.0000e-01,8.6603e-01,5.3029e-17,5.0000e-01,9.2388e-01,5.6571e-17,3.8268e-01,9.1897e-01,9.5158e-02,3.8268e-01,8.6142e-01,8.9199e-02,5.0000e-01,8.6142e-01,8.9199e-02,5.0000e-01,9.1897e-01,9.5158e-02,3.8268e-01,9.0428e-01,1.8930e-01,3.8268e-01,8.4765e-01,1.7745e-01,5.0000e-01,9.0451e-01,1.8820e-01,3.8268e-01};
			return value;
		}
		private double[] getNormal_7_785_vector_3()
		{
			double[] value = {8.5327e-01,1.7724e-01,4.9043e-01,8.4793e-01,1.7610e-01,5.0000e-01,9.0428e-01,-1.8930e-01,3.8268e-01,9.4543e-01,-1.9792e-01,2.5882e-01,9.6079e-01,-9.9488e-02,2.5882e-01,9.1897e-01,-9.5158e-02,3.8268e-01,9.0451e-01,-1.8820e-01,3.8268e-01,9.0770e-01,-1.8889e-01,3.7469e-01,9.4559e-01,-1.9714e-01,2.5882e-01,9.1897e-01,-9.5158e-02,3.8268e-01,9.6079e-01,-9.9488e-02,2.5882e-01,9.6593e-01,5.9146e-17,2.5882e-01,9.2388e-01,5.6571e-17,3.8268e-01,9.2388e-01,5.6571e-17,3.8268e-01,9.6593e-01,5.9146e-17,2.5882e-01,9.6079e-01,9.9488e-02,2.5882e-01,9.1897e-01,9.5158e-02,3.8268e-01,9.1897e-01,9.5158e-02,3.8268e-01,9.6079e-01,9.9488e-02,2.5882e-01,9.4543e-01,1.9792e-01,2.5882e-01,9.0428e-01,1.8930e-01,3.8268e-01,9.4559e-01,1.9714e-01,2.5882e-01,9.0770e-01,1.8889e-01,3.7469e-01,9.0451e-01,1.8820e-01,3.8268e-01,9.4543e-01,-1.9792e-01,2.5882e-01,9.7041e-01,-2.0315e-01,1.3053e-01,9.8617e-01,-1.0212e-01,1.3053e-01,9.6079e-01,-9.9488e-02,2.5882e-01,9.4559e-01,-1.9714e-01,2.5882e-01,9.4714e-01,-1.9748e-01,2.5285e-01,9.7049e-01,-2.0274e-01,1.3053e-01,9.6079e-01,-9.9488e-02,2.5882e-01,9.8617e-01,-1.0212e-01,1.3053e-01,9.9144e-01,6.0708e-17,1.3053e-01,9.6593e-01,5.9146e-17,2.5882e-01,9.6593e-01,5.9146e-17,2.5882e-01,9.9144e-01,6.0708e-17,1.3053e-01,9.8617e-01,1.0212e-01,1.3053e-01,9.6079e-01,9.9488e-02,2.5882e-01,9.6079e-01,9.9488e-02,2.5882e-01,9.8617e-01,1.0212e-01,1.3053e-01,9.7041e-01,2.0315e-01,1.3053e-01,9.4543e-01,1.9792e-01,2.5882e-01,9.7049e-01,2.0274e-01,1.3053e-01,9.4714e-01,1.9748e-01,2.5285e-01,9.4559e-01,1.9714e-01,2.5882e-01,9.7041e-01,-2.0315e-01,1.3053e-01,9.7878e-01,-2.0490e-01,-6.1232e-17,9.9468e-01,-1.0300e-01,-6.1232e-17,9.8617e-01,-1.0212e-01,1.3053e-01,9.7049e-01,-2.0274e-01,1.3053e-01,9.7091e-01,-2.0284e-01,1.2721e-01,9.7878e-01,-2.0490e-01,-6.1232e-17,9.8617e-01,-1.0212e-01,1.3053e-01,9.9468e-01,-1.0300e-01,-6.1232e-17,1.0000e+00,6.1232e-17,-6.1232e-17,9.9144e-01,6.0708e-17,1.3053e-01,9.9144e-01,6.0708e-17,1.3053e-01,1.0000e+00,6.1232e-17,-6.1232e-17,9.9468e-01,1.0300e-01,-6.1232e-17,9.8617e-01,1.0212e-01,1.3053e-01,9.8617e-01,1.0212e-01,1.3053e-01,9.9468e-01,1.0300e-01,-6.1232e-17,9.7878e-01,2.0490e-01,-6.1232e-17,9.7041e-01,2.0315e-01,1.3053e-01,9.7878e-01,2.0490e-01,-6.1232e-17,9.7091e-01,2.0284e-01,1.2721e-01,9.7049e-01,2.0274e-01,1.3053e-01};
			return value;
		}




		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_798_point_1()
		{
			double[] value = {2.5000e+00,-9.6995e-01,5.0000e+00,3.7500e+00,-9.6995e-01,5.0000e+00,3.7500e+00,-1.0018e+00,5.0020e+00,2.5000e+00,-1.0018e+00,5.0020e+00,2.7182e+00,-1.0018e+00,5.0020e+00,2.7500e+00,-9.6995e-01,5.0000e+00,3.7500e+00,-9.6995e-01,5.0000e+00,3.7182e+00,-1.0018e+00,5.0020e+00,2.5000e+00,-1.0018e+00,5.0020e+00,3.7500e+00,-1.0018e+00,5.0020e+00,3.7500e+00,-1.0331e+00,5.0081e+00,2.5000e+00,-1.0331e+00,5.0081e+00,2.6870e+00,-1.0331e+00,5.0081e+00,2.7114e+00,-1.0086e+00,5.0030e+00,2.7182e+00,-1.0018e+00,5.0020e+00,3.7182e+00,-1.0018e+00,5.0020e+00,3.7114e+00,-1.0086e+00,5.0030e+00,3.6870e+00,-1.0331e+00,5.0081e+00,2.5000e+00,-1.0331e+00,5.0081e+00,3.7500e+00,-1.0331e+00,5.0081e+00,3.7500e+00,-1.0635e+00,5.0181e+00,2.5000e+00,-1.0635e+00,5.0181e+00,2.6568e+00,-1.0635e+00,5.0181e+00,2.6730e+00,-1.0470e+00,5.0122e+00,2.6870e+00,-1.0331e+00,5.0081e+00,3.6870e+00,-1.0331e+00,5.0081e+00,3.6730e+00,-1.0470e+00,5.0122e+00,3.6568e+00,-1.0635e+00,5.0181e+00,2.5000e+00,-1.0635e+00,5.0181e+00,3.7500e+00,-1.0635e+00,5.0181e+00,3.7500e+00,-1.0922e+00,5.0320e+00,2.5000e+00,-1.0922e+00,5.0320e+00,2.6280e+00,-1.0922e+00,5.0320e+00,2.6363e+00,-1.0837e+00,5.0274e+00,2.6568e+00,-1.0635e+00,5.0181e+00,3.6568e+00,-1.0635e+00,5.0181e+00,3.6363e+00,-1.0837e+00,5.0274e+00,3.6280e+00,-1.0922e+00,5.0320e+00,2.5000e+00,-1.0922e+00,5.0320e+00,3.7500e+00,-1.0922e+00,5.0320e+00,3.7500e+00,-1.1190e+00,5.0493e+00,2.5000e+00,-1.1190e+00,5.0493e+00,2.6010e+00,-1.1190e+00,5.0493e+00,2.6027e+00,-1.1173e+00,5.0480e+00,2.6280e+00,-1.0922e+00,5.0320e+00,3.6280e+00,-1.0922e+00,5.0320e+00,3.6027e+00,-1.1173e+00,5.0480e+00,3.6010e+00,-1.1190e+00,5.0493e+00,2.5000e+00,-1.1190e+00,5.0493e+00,3.7500e+00,-1.1190e+00,5.0493e+00,3.7500e+00,-1.1434e+00,5.0699e+00,2.5000e+00,-1.1434e+00,5.0699e+00,2.5768e+00,-1.1434e+00,5.0699e+00,2.6010e+00,-1.1190e+00,5.0493e+00,3.6010e+00,-1.1190e+00,5.0493e+00,3.5768e+00,-1.1434e+00,5.0699e+00,2.5000e+00,-1.1434e+00,5.0699e+00,3.7500e+00,-1.1434e+00,5.0699e+00,3.7500e+00,-1.1649e+00,5.0935e+00,2.5000e+00,-1.1649e+00,5.0935e+00,2.5551e+00,-1.1649e+00,5.0935e+00,2.5570e+00,-1.1629e+00,5.0911e+00,2.5732e+00,-1.1467e+00,5.0732e+00,2.5768e+00,-1.1434e+00,5.0699e+00,3.5768e+00,-1.1434e+00,5.0699e+00,3.5732e+00,-1.1467e+00,5.0732e+00,3.5570e+00,-1.1629e+00,5.0911e+00,3.5551e+00,-1.1649e+00,5.0935e+00,2.5000e+00,-1.1649e+00,5.0935e+00,3.7500e+00,-1.1649e+00,5.0935e+00,3.7500e+00,-1.1833e+00,5.1196e+00,2.5000e+00,-1.1833e+00,5.1196e+00,2.5369e+00,-1.1833e+00,5.1196e+00,2.5424e+00,-1.1775e+00,5.1107e+00,2.5551e+00,-1.1649e+00,5.0935e+00,3.5551e+00,-1.1649e+00,5.0935e+00,3.5424e+00,-1.1775e+00,5.1107e+00,3.5369e+00,-1.1833e+00,5.1196e+00,2.5000e+00,-1.1833e+00,5.1196e+00,3.7500e+00,-1.1833e+00,5.1196e+00,3.7500e+00,-1.1981e+00,5.1479e+00,2.5000e+00,-1.1981e+00,5.1479e+00,2.5220e+00,-1.1981e+00,5.1479e+00,2.5297e+00,-1.1903e+00,5.1319e+00,2.5369e+00,-1.1833e+00,5.1196e+00,3.5369e+00,-1.1833e+00,5.1196e+00,3.5297e+00,-1.1903e+00,5.1319e+00,3.5220e+00,-1.1981e+00,5.1479e+00,2.5000e+00,-1.1981e+00,5.1479e+00,3.7500e+00,-1.1981e+00,5.1479e+00,3.7500e+00,-1.2093e+00,5.1778e+00,2.5000e+00,-1.2093e+00,5.1778e+00,2.5107e+00,-1.2093e+00,5.1778e+00,2.5107e+00,-1.2093e+00,5.1777e+00,2.5190e+00,-1.2009e+00,5.1543e+00,2.5220e+00,-1.1981e+00,5.1479e+00,3.5220e+00,-1.1981e+00,5.1479e+00,3.5190e+00,-1.2009e+00,5.1543e+00,3.5107e+00,-1.2093e+00,5.1777e+00,3.5107e+00,-1.2093e+00,5.1778e+00};
			return value;
		}
		private double[] getCoordinate_7_798_point_2()
		{
			double[] value = {2.5000e+00,-1.2093e+00,5.1778e+00,3.7500e+00,-1.2093e+00,5.1778e+00,3.7500e+00,-1.2165e+00,5.2089e+00,2.5000e+00,-1.2165e+00,5.2089e+00,2.5037e+00,-1.2165e+00,5.2089e+00,2.5047e+00,-1.2152e+00,5.2017e+00,2.5107e+00,-1.2093e+00,5.1778e+00,3.5107e+00,-1.2093e+00,5.1778e+00,3.5047e+00,-1.2152e+00,5.2017e+00,3.5037e+00,-1.2165e+00,5.2089e+00,2.5000e+00,-1.2165e+00,5.2089e+00,3.7500e+00,-1.2165e+00,5.2089e+00,3.7500e+00,-1.2198e+00,5.2407e+00,2.5000e+00,-1.2198e+00,5.2407e+00,2.5005e+00,-1.2198e+00,5.2407e+00,2.5012e+00,-1.2188e+00,5.2259e+00,2.5037e+00,-1.2165e+00,5.2089e+00,3.5037e+00,-1.2165e+00,5.2089e+00,3.5012e+00,-1.2188e+00,5.2259e+00,3.5005e+00,-1.2198e+00,5.2407e+00,2.5000e+00,-1.2198e+00,5.2407e+00,3.7500e+00,-1.2198e+00,5.2407e+00,3.7500e+00,-1.2189e+00,5.2726e+00,2.5000e+00,-1.2189e+00,5.2726e+00,3.5005e+00,-1.2198e+00,5.2407e+00,3.5000e+00,-1.2199e+00,5.2500e+00,3.5000e+00,-1.2189e+00,5.2726e+00,2.5000e+00,-1.2199e+00,5.2500e+00,2.5005e+00,-1.2198e+00,5.2407e+00,2.5000e+00,-1.2189e+00,5.2726e+00,3.7500e+00,-1.2189e+00,5.2726e+00,3.7500e+00,-1.2140e+00,5.3041e+00,2.5000e+00,-1.2140e+00,5.3041e+00,3.5000e+00,-1.2189e+00,5.2726e+00,3.5000e+00,-1.2140e+00,5.3041e+00,2.5000e+00,-1.2140e+00,5.3041e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_799_vector_1()
		{
			double[] value = {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,1.5451e-01,9.8799e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.5451e-01,9.8799e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.0808e-01,9.5136e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,3.0808e-01,9.5136e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.5487e-01,8.9056e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,4.5487e-01,8.9056e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.8936e-01,8.0787e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,5.8936e-01,8.0787e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7196e-01,6.3568e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.7196e-01,6.3568e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.3041e-01,5.5716e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,8.3041e-01,5.5716e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,8.8136e-01,4.7245e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.8136e-01,4.7245e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5729e-01,2.8914e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.5729e-01,2.8914e-01,-0.0000e+00,9.5739e-01,2.8879e-01};
			return value;
		}
		private double[] getNormal_7_799_vector_2()
		{
			double[] value = {-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8116e-01,1.9322e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.8116e-01,1.9322e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9535e-01,9.6365e-02,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.9535e-01,9.6365e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.7630e-01,-2.1644e-01,-0.0000e+00,9.7630e-01,-2.1644e-01,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.7630e-01,-2.1644e-01,-0.0000e+00,9.7630e-01,-2.1644e-01};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_805_point_1()
		{
			double[] value = {2.5000e+00,-1.2199e+00,5.2500e+00,2.5000e+00,2.4721e+00,5.2500e+00,2.5021e+00,2.4721e+00,5.2174e+00,2.5021e+00,-1.2199e+00,5.2174e+00,2.5021e+00,-1.2175e+00,5.2174e+00,2.5012e+00,-1.2188e+00,5.2259e+00,2.5000e+00,-1.2199e+00,5.2500e+00,2.5000e+00,2.3301e+00,5.2500e+00,2.5018e+00,2.3312e+00,5.2198e+00,2.5021e+00,2.3315e+00,5.2174e+00,2.5021e+00,-1.2199e+00,5.2174e+00,2.5021e+00,2.4721e+00,5.2174e+00,2.5085e+00,2.4721e+00,5.1853e+00,2.5085e+00,-1.2199e+00,5.1853e+00,2.5021e+00,2.3315e+00,5.2174e+00,2.5072e+00,2.3344e+00,5.1904e+00,2.5085e+00,2.3353e+00,5.1853e+00,2.5085e+00,-1.2112e+00,5.1853e+00,2.5047e+00,-1.2152e+00,5.2017e+00,2.5021e+00,-1.2175e+00,5.2174e+00,2.5085e+00,-1.2199e+00,5.1853e+00,2.5085e+00,2.4721e+00,5.1853e+00,2.5190e+00,2.4721e+00,5.1543e+00,2.5190e+00,-1.2199e+00,5.1543e+00,2.5085e+00,2.3353e+00,5.1853e+00,2.5160e+00,2.3395e+00,5.1621e+00,2.5190e+00,2.3415e+00,5.1543e+00,2.5190e+00,-1.2009e+00,5.1543e+00,2.5107e+00,-1.2093e+00,5.1777e+00,2.5085e+00,-1.2112e+00,5.1853e+00,2.5190e+00,-1.2199e+00,5.1543e+00,2.5190e+00,2.4721e+00,5.1543e+00,2.5335e+00,2.4721e+00,5.1250e+00,2.5335e+00,-1.2199e+00,5.1250e+00,2.5190e+00,2.3415e+00,5.1543e+00,2.5279e+00,2.3464e+00,5.1353e+00,2.5335e+00,2.3498e+00,5.1250e+00,2.5335e+00,-1.1862e+00,5.1250e+00,2.5297e+00,-1.1903e+00,5.1319e+00,2.5190e+00,-1.2009e+00,5.1543e+00,2.5335e+00,-1.2199e+00,5.1250e+00,2.5335e+00,2.4721e+00,5.1250e+00,2.5517e+00,2.4721e+00,5.0978e+00,2.5517e+00,-1.2199e+00,5.0978e+00,2.5335e+00,2.3498e+00,5.1250e+00,2.5427e+00,2.3548e+00,5.1103e+00,2.5517e+00,2.3601e+00,5.0978e+00,2.5517e+00,-1.1681e+00,5.0978e+00,2.5424e+00,-1.1775e+00,5.1107e+00,2.5335e+00,-1.1862e+00,5.1250e+00,2.5517e+00,-1.2199e+00,5.0978e+00,2.5517e+00,2.4721e+00,5.0978e+00,2.5732e+00,2.4721e+00,5.0732e+00,2.5732e+00,-1.2199e+00,5.0732e+00,2.5517e+00,2.3601e+00,5.0978e+00,2.5599e+00,2.3646e+00,5.0876e+00,2.5732e+00,2.3723e+00,5.0732e+00,2.5732e+00,-1.1467e+00,5.0732e+00,2.5570e+00,-1.1629e+00,5.0911e+00,2.5517e+00,-1.1681e+00,5.0978e+00,2.5732e+00,-1.2199e+00,5.0732e+00,2.5732e+00,2.4721e+00,5.0732e+00,2.5978e+00,2.4721e+00,5.0517e+00,2.5978e+00,-1.2199e+00,5.0517e+00,2.5732e+00,2.3723e+00,5.0732e+00,2.5794e+00,2.3757e+00,5.0673e+00,2.5978e+00,2.3864e+00,5.0517e+00,2.5978e+00,-1.1219e+00,5.0517e+00,2.5732e+00,-1.1467e+00,5.0732e+00,2.5978e+00,-1.2199e+00,5.0517e+00,2.5978e+00,2.4721e+00,5.0517e+00,2.6250e+00,2.4721e+00,5.0335e+00,2.6250e+00,-1.2199e+00,5.0335e+00,2.5978e+00,2.3864e+00,5.0517e+00,2.6042e+00,2.3899e+00,5.0469e+00,2.6250e+00,2.4018e+00,5.0335e+00,2.6250e+00,-1.0946e+00,5.0335e+00,2.6027e+00,-1.1173e+00,5.0480e+00,2.5978e+00,-1.1219e+00,5.0517e+00,2.6250e+00,-1.2199e+00,5.0335e+00,2.6250e+00,2.4721e+00,5.0335e+00,2.6543e+00,2.4721e+00,5.0190e+00,2.6543e+00,-1.2199e+00,5.0190e+00,2.6250e+00,2.4018e+00,5.0335e+00,2.6311e+00,2.4052e+00,5.0301e+00,2.6543e+00,2.4184e+00,5.0190e+00,2.6543e+00,-1.0653e+00,5.0190e+00,2.6363e+00,-1.0837e+00,5.0274e+00,2.6250e+00,-1.0946e+00,5.0335e+00,2.6543e+00,-1.2199e+00,5.0190e+00,2.6543e+00,2.4721e+00,5.0190e+00,2.6853e+00,2.4721e+00,5.0085e+00,2.6853e+00,-1.2199e+00,5.0085e+00,2.6543e+00,2.4184e+00,5.0190e+00,2.6595e+00,2.4213e+00,5.0169e+00,2.6853e+00,2.4358e+00,5.0085e+00,2.6853e+00,-1.0345e+00,5.0085e+00,2.6730e+00,-1.0470e+00,5.0122e+00,2.6543e+00,-1.0653e+00,5.0190e+00,2.6853e+00,-1.2199e+00,5.0085e+00};
			return value;
		}
		private double[] getCoordinate_7_805_point_2()
		{
			double[] value = {2.6853e+00,2.4721e+00,5.0085e+00,2.7174e+00,2.4721e+00,5.0021e+00,2.7174e+00,-1.2199e+00,5.0021e+00,2.6853e+00,2.4358e+00,5.0085e+00,2.6891e+00,2.4380e+00,5.0075e+00,2.7174e+00,2.4539e+00,5.0021e+00,2.7174e+00,-1.0025e+00,5.0021e+00,2.7114e+00,-1.0086e+00,5.0030e+00,2.6853e+00,-1.0345e+00,5.0085e+00,2.7174e+00,-1.2199e+00,5.0021e+00,2.7174e+00,2.4721e+00,5.0021e+00,2.7500e+00,2.4721e+00,5.0000e+00,2.7500e+00,-1.2199e+00,5.0000e+00,2.7174e+00,2.4539e+00,5.0021e+00,2.7194e+00,2.4550e+00,5.0019e+00,2.7500e+00,2.4721e+00,5.0000e+00,2.7500e+00,-9.6995e-01,5.0000e+00,2.7174e+00,-1.0025e+00,5.0021e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_806_vector_1()
		{
			double[] value = {1.0000e+00,-0.0000e+00,-6.1232e-17,1.0000e+00,-0.0000e+00,-6.1232e-17,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9535e-01,-0.0000e+00,9.6365e-02,1.0000e+00,-0.0000e+00,-6.1232e-17,1.0000e+00,-0.0000e+00,-6.1232e-17,9.9268e-01,-0.0000e+00,1.2081e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.7114e-01,-0.0000e+00,2.3852e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.8116e-01,-0.0000e+00,1.9322e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.3610e-01,-0.0000e+00,3.5174e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.5729e-01,-0.0000e+00,2.8914e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,9.2388e-01,-0.0000e+00,3.8268e-01,8.8846e-01,-0.0000e+00,4.5896e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.8136e-01,-0.0000e+00,4.7245e-01,9.2388e-01,-0.0000e+00,3.8268e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.2936e-01,-0.0000e+00,5.5871e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,8.3041e-01,-0.0000e+00,5.5716e-01,8.6603e-01,-0.0000e+00,5.0000e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.6021e-01,-0.0000e+00,6.4968e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.7196e-01,-0.0000e+00,6.3568e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,7.0711e-01,-0.0000e+00,7.0711e-01,6.8255e-01,-0.0000e+00,7.3084e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,7.0711e-01,-0.0000e+00,7.0711e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,6.0876e-01,-0.0000e+00,7.9335e-01,5.8307e-01,-0.0000e+00,8.1242e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.8936e-01,-0.0000e+00,8.0787e-01,6.0876e-01,-0.0000e+00,7.9335e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,5.0000e-01,-0.0000e+00,8.6603e-01,4.7563e-01,-0.0000e+00,8.7964e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,4.5487e-01,-0.0000e+00,8.9056e-01,5.0000e-01,-0.0000e+00,8.6603e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.6189e-01,-0.0000e+00,9.3222e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,3.0808e-01,-0.0000e+00,9.5136e-01,3.8268e-01,-0.0000e+00,9.2388e-01,2.5882e-01,-0.0000e+00,9.6593e-01};
			return value;
		}
		private double[] getNormal_7_806_vector_2()
		{
			double[] value = {2.5882e-01,-0.0000e+00,9.6593e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.4353e-01,-0.0000e+00,9.6989e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.5451e-01,-0.0000e+00,9.8799e-01,2.5882e-01,-0.0000e+00,9.6593e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.2246e-16,-0.0000e+00,1.0000e+00,1.2246e-16,-0.0000e+00,1.0000e+00,1.3053e-01,-0.0000e+00,9.9144e-01,1.2232e-01,-0.0000e+00,9.9249e-01,1.2246e-16,-0.0000e+00,1.0000e+00,1.2246e-16,-0.0000e+00,1.0000e+00,1.3053e-01,-0.0000e+00,9.9144e-01};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_812_point_1()
		{
			double[] value = {3.7500e+00,-9.6995e-01,5.0000e+00,3.7500e+00,-3.5306e+00,5.0000e+00,3.7174e+00,-3.5306e+00,5.0021e+00,3.7174e+00,-9.6995e-01,5.0021e+00,3.7174e+00,-1.0025e+00,5.0021e+00,3.7500e+00,-9.6995e-01,5.0000e+00,3.7500e+00,-3.5306e+00,5.0000e+00,3.7181e+00,-3.4988e+00,5.0020e+00,3.7174e+00,-3.4980e+00,5.0021e+00,3.7174e+00,-9.6995e-01,5.0021e+00,3.7174e+00,-3.5306e+00,5.0021e+00,3.6853e+00,-3.5306e+00,5.0085e+00,3.6853e+00,-9.6995e-01,5.0085e+00,3.6853e+00,-1.0345e+00,5.0085e+00,3.7114e+00,-1.0086e+00,5.0030e+00,3.7174e+00,-1.0025e+00,5.0021e+00,3.7174e+00,-3.4980e+00,5.0021e+00,3.6856e+00,-3.4663e+00,5.0084e+00,3.6853e+00,-3.4659e+00,5.0085e+00,3.6853e+00,-9.6995e-01,5.0085e+00,3.6853e+00,-3.5306e+00,5.0085e+00,3.6543e+00,-3.5306e+00,5.0190e+00,3.6543e+00,-9.6995e-01,5.0190e+00,3.6543e+00,-1.0653e+00,5.0190e+00,3.6730e+00,-1.0470e+00,5.0122e+00,3.6853e+00,-1.0345e+00,5.0085e+00,3.6853e+00,-3.4659e+00,5.0085e+00,3.6543e+00,-3.4350e+00,5.0190e+00,3.6543e+00,-9.6995e-01,5.0190e+00,3.6543e+00,-3.5306e+00,5.0190e+00,3.6250e+00,-3.5306e+00,5.0335e+00,3.6250e+00,-9.6995e-01,5.0335e+00,3.6250e+00,-1.0946e+00,5.0335e+00,3.6363e+00,-1.0837e+00,5.0274e+00,3.6543e+00,-1.0653e+00,5.0190e+00,3.6543e+00,-3.4350e+00,5.0190e+00,3.6534e+00,-3.4340e+00,5.0194e+00,3.6250e+00,-3.4057e+00,5.0335e+00,3.6250e+00,-9.6995e-01,5.0335e+00,3.6250e+00,-3.5306e+00,5.0335e+00,3.5978e+00,-3.5306e+00,5.0517e+00,3.5978e+00,-9.6995e-01,5.0517e+00,3.5978e+00,-1.1219e+00,5.0517e+00,3.6027e+00,-1.1173e+00,5.0480e+00,3.6250e+00,-1.0946e+00,5.0335e+00,3.6250e+00,-3.4057e+00,5.0335e+00,3.6224e+00,-3.4030e+00,5.0350e+00,3.5978e+00,-3.3786e+00,5.0517e+00,3.5978e+00,-9.6995e-01,5.0517e+00,3.5978e+00,-3.5306e+00,5.0517e+00,3.5732e+00,-3.5306e+00,5.0732e+00,3.5732e+00,-9.6995e-01,5.0732e+00,3.5732e+00,-1.1467e+00,5.0732e+00,3.5978e+00,-1.1219e+00,5.0517e+00,3.5978e+00,-3.3786e+00,5.0517e+00,3.5935e+00,-3.3742e+00,5.0550e+00,3.5732e+00,-3.3542e+00,5.0732e+00,3.5732e+00,-9.6995e-01,5.0732e+00,3.5732e+00,-3.5306e+00,5.0732e+00,3.5517e+00,-3.5306e+00,5.0978e+00,3.5517e+00,-9.6995e-01,5.0978e+00,3.5517e+00,-1.1681e+00,5.0978e+00,3.5570e+00,-1.1629e+00,5.0911e+00,3.5732e+00,-1.1467e+00,5.0732e+00,3.5732e+00,-3.3542e+00,5.0732e+00,3.5678e+00,-3.3484e+00,5.0789e+00,3.5517e+00,-3.3327e+00,5.0978e+00,3.5517e+00,-9.6995e-01,5.0978e+00,3.5517e+00,-3.5306e+00,5.0978e+00,3.5335e+00,-3.5306e+00,5.1250e+00,3.5335e+00,-9.6995e-01,5.1250e+00,3.5335e+00,-1.1862e+00,5.1250e+00,3.5424e+00,-1.1775e+00,5.1107e+00,3.5517e+00,-1.1681e+00,5.0978e+00,3.5517e+00,-3.3327e+00,5.0978e+00,3.5458e+00,-3.3265e+00,5.1058e+00,3.5335e+00,-3.3146e+00,5.1250e+00,3.5335e+00,-9.6995e-01,5.1250e+00,3.5335e+00,-3.5306e+00,5.1250e+00,3.5190e+00,-3.5306e+00,5.1543e+00,3.5190e+00,-9.6995e-01,5.1543e+00,3.5190e+00,-1.2009e+00,5.1543e+00,3.5297e+00,-1.1903e+00,5.1319e+00,3.5335e+00,-1.1862e+00,5.1250e+00,3.5335e+00,-3.3146e+00,5.1250e+00,3.5281e+00,-3.3087e+00,5.1349e+00,3.5190e+00,-3.3001e+00,5.1543e+00,3.5190e+00,-9.6995e-01,5.1543e+00,3.5190e+00,-3.5306e+00,5.1543e+00,3.5085e+00,-3.5306e+00,5.1853e+00,3.5085e+00,-9.6995e-01,5.1853e+00,3.5085e+00,-1.2112e+00,5.1853e+00,3.5107e+00,-1.2093e+00,5.1777e+00,3.5190e+00,-1.2009e+00,5.1543e+00,3.5190e+00,-3.3001e+00,5.1543e+00,3.5148e+00,-3.2955e+00,5.1652e+00,3.5085e+00,-3.2896e+00,5.1853e+00,3.5085e+00,-9.6995e-01,5.1853e+00,3.5085e+00,-3.5306e+00,5.1853e+00,3.5021e+00,-3.5306e+00,5.2174e+00};
			return value;
		}
		private double[] getCoordinate_7_812_point_2()
		{
			double[] value = {3.5021e+00,-9.6995e-01,5.2174e+00,3.5021e+00,-1.2175e+00,5.2174e+00,3.5047e+00,-1.2152e+00,5.2017e+00,3.5085e+00,-1.2112e+00,5.1853e+00,3.5085e+00,-3.2896e+00,5.1853e+00,3.5059e+00,-3.2866e+00,5.1959e+00,3.5021e+00,-3.2818e+00,5.2174e+00,3.5021e+00,-9.6995e-01,5.2174e+00,3.5021e+00,-3.5306e+00,5.2174e+00,3.5000e+00,-3.5306e+00,5.2500e+00,3.5000e+00,-9.6995e-01,5.2500e+00,3.5021e+00,-3.2818e+00,5.2174e+00,3.5015e+00,-3.2806e+00,5.2228e+00,3.5000e+00,-3.2746e+00,5.2500e+00,3.5000e+00,-1.2199e+00,5.2500e+00,3.5012e+00,-1.2188e+00,5.2259e+00,3.5021e+00,-1.2175e+00,5.2174e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_813_vector_1()
		{
			double[] value = {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,1.2748e-01,-0.0000e+00,9.9184e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,1.5451e-01,-0.0000e+00,9.8799e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,2.5748e-01,-0.0000e+00,9.6628e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.0808e-01,-0.0000e+00,9.5136e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,4.5487e-01,-0.0000e+00,8.9056e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8648e-01,-0.0000e+00,9.2230e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,5.8936e-01,-0.0000e+00,8.0787e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.1060e-01,-0.0000e+00,8.5982e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.2592e-01,-0.0000e+00,7.7988e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.7196e-01,-0.0000e+00,6.3568e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.2892e-01,-0.0000e+00,6.8459e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.3041e-01,-0.0000e+00,5.5716e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,8.1678e-01,-0.0000e+00,5.7694e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,8.8136e-01,-0.0000e+00,4.7245e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.8765e-01,-0.0000e+00,4.6052e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.5729e-01,-0.0000e+00,2.8914e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.4074e-01,-0.0000e+00,3.3913e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.9144e-01,-0.0000e+00,1.3053e-01};
			return value;
		}
		private double[] getNormal_7_813_vector_2()
		{
			double[] value = {9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.8116e-01,-0.0000e+00,1.9322e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.7630e-01,-0.0000e+00,2.1644e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,1.0000e+00,-0.0000e+00,6.1232e-17,1.0000e+00,-0.0000e+00,6.1232e-17,9.9144e-01,-0.0000e+00,1.3053e-01,9.9406e-01,-0.0000e+00,1.0887e-01,1.0000e+00,-0.0000e+00,6.1232e-17,1.0000e+00,-0.0000e+00,6.1232e-17,9.9535e-01,-0.0000e+00,9.6365e-02,9.9144e-01,-0.0000e+00,1.3053e-01};
			return value;
		}


		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_819_index_1()
		{
			int[] value = {3,2,6,5,4,3,5,3,6,8,7,10,9,8,10,12,11,14,13,12,14,16,15,18,17,16,18,20,19,22,21,20,22,24,23,26,25,24,26,28,27,30,29,28,30,32,31,34,33,32,34,36,35,41,40,39,36,40,36,41,45,44,48,47,46,45,47,45,48,50,49,52,51,50,52,54,53,56,55,54,56,58,57,60,59,58,60,62,61,64,63,62,64,66,65,68,67,66,68,70,69,72,71,70,72,74,73,76,75,74,76,78,77,83,82,81,78,82,78,83,87,86,90,89,88,87,89,87,90,92,91,94,93,92,94,96,95,98,97,96,98,100,99,102,101,100,102,104,103,106,105,104,106,108,107,110,109,108,110,112,111,114,113,112,114,116,115,118,117,116,118,120,119,125,124,123,120,124,120,125,129,128,132,131,130,129,131,129,132,134,133,136,135,134,136,138,137,140,139,138,140,142,141,144,143,142,144,146,145,148,147,146,148,150,149,152,151,150,152,154,153,156,155,154,156,158,157,160,159,158,160,162,161,167,166,165,162,166,162,167,171,170,174,173,172,171,173,171,174,176,175,178,177,176,178,180,179,182,181,180,182,184,183,186,185,184,186,188,187,190,189,188,190,192,191,194,193,192,194,196,195,198,197,196,198,200,199,202,201,200,202,204,203,209,208,207,204,208,204,209,213,212,216,215,214,213,215,213,216,218,217,220,219,218,220,222,221,224,223,222,224,226,225,228,227,226,228,230,229,232,231,230,232,234,233,236,235,234,236,238,237,240,239,238,240,242,241,244,243,242,244,246,245,251,250,249,246,250,246,251,255,254,258,257,256,255,257,255,258,260,259,262,261,260,262,264,263,266,265,264,266,268,267,270,269,268,270,272,271,274,273,272,274,276,275,278,277,276,278,280,279,282,281,280,282,284,283,286,285,284,286,288,287,293,292,291,288,292,288,293,297,296,300,299,298,297,299,297,300,302,301,304,303,302,304,306,305,308,307,306,308,310,309,312,311,310,312,314,313,316,315,314,316,318,317,320,319,318,320,322,321,324,323,322,324,326,325,328,327,326,328,330,329,335,334,333,330,334,330,335,339,338,342,341,340,339,341,339,342,344,343,346,345,344,346,348,347,350,349,348,350,352,351,354,353,352,354,356,355,358,357,356,358,360,359,362,361,360,362,364,363,366,365,364,366,368,367,370,369,368,370,372,371,377,376,375,372,376,372,377,381,380,384,383,382,381,383,381,384,386,385,388,387,386,388,390,389,392,391,390,392,394,393,396,395,394,396,398,397,400,399,398,400,402,401,404,403,402,404,406,405,408,407,406,408,410,409,412,411,410,412,414,413,419,418,417,414,418,414,419,423,422,426,425,424,423,425,423,426,428,427,430,429,428,430,432,431,434,433,432,434,436,435,438,437,436,438,440,439,442,441,440,442,444,443,446,445,444,446,448,447,450,449,448,450,452,451,454,453,452,454,456,455,461,460,459,456,460,456,461,465,464,468,467,466,465,467,465,468,472,471,470,469,472,470,476,475,474,473,476,474,480,479,478,477,480,478,484,483,482,481,484,482,488,487,486,485,488,486,492,491,490,489,492,490,496,495,494,493,496,494,498,497,503,502,501,498,502,498,503};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_819_point_1()
		{
			double[] value = {2.7500e+00,2.4721e+00,5.0000e+00,2.7329e+00,2.4443e+00,5.0021e+00,2.1693e+00,2.7450e+00,5.0021e+00,2.1829e+00,2.7747e+00,5.0000e+00,2.7500e+00,2.4721e+00,5.0000e+00,2.7194e+00,2.4550e+00,5.0019e+00,2.7174e+00,2.4539e+00,5.0021e+00,2.1829e+00,2.7747e+00,5.0000e+00,2.1693e+00,2.7450e+00,5.0021e+00,1.5731e+00,2.9746e+00,5.0021e+00,1.5830e+00,3.0057e+00,5.0000e+00,1.5830e+00,3.0057e+00,5.0000e+00,1.5731e+00,2.9746e+00,5.0021e+00,9.5342e-01,3.1295e+00,5.0021e+00,9.5938e-01,3.1616e+00,5.0000e+00,9.5938e-01,3.1616e+00,5.0000e+00,9.5342e-01,3.1295e+00,5.0021e+00,3.1940e-01,3.2076e+00,5.0021e+00,3.2140e-01,3.2402e+00,5.0000e+00,3.2140e-01,3.2402e+00,5.0000e+00,3.1940e-01,3.2076e+00,5.0021e+00,-3.1940e-01,3.2076e+00,5.0021e+00,-3.2140e-01,3.2402e+00,5.0000e+00,-3.2140e-01,3.2402e+00,5.0000e+00,-3.1940e-01,3.2076e+00,5.0021e+00,-9.5342e-01,3.1295e+00,5.0021e+00,-9.5938e-01,3.1616e+00,5.0000e+00,-9.5938e-01,3.1616e+00,5.0000e+00,-9.5342e-01,3.1295e+00,5.0021e+00,-1.5731e+00,2.9746e+00,5.0021e+00,-1.5830e+00,3.0057e+00,5.0000e+00,-1.5830e+00,3.0057e+00,5.0000e+00,-1.5731e+00,2.9746e+00,5.0021e+00,-2.1693e+00,2.7450e+00,5.0021e+00,-2.1829e+00,2.7747e+00,5.0000e+00,-2.1829e+00,2.7747e+00,5.0000e+00,-2.1693e+00,2.7450e+00,5.0021e+00,-2.7329e+00,2.4443e+00,5.0021e+00,-2.7500e+00,2.4721e+00,5.0000e+00,-2.7174e+00,2.4539e+00,5.0021e+00,-2.7194e+00,2.4550e+00,5.0019e+00,-2.7500e+00,2.4721e+00,5.0000e+00,2.7329e+00,2.4443e+00,5.0021e+00,2.7161e+00,2.4170e+00,5.0085e+00,2.1560e+00,2.7158e+00,5.0085e+00,2.1693e+00,2.7450e+00,5.0021e+00,2.7174e+00,2.4539e+00,5.0021e+00,2.6891e+00,2.4380e+00,5.0075e+00,2.6853e+00,2.4358e+00,5.0085e+00,2.1693e+00,2.7450e+00,5.0021e+00,2.1560e+00,2.7158e+00,5.0085e+00,1.5635e+00,2.9440e+00,5.0085e+00,1.5731e+00,2.9746e+00,5.0021e+00,1.5731e+00,2.9746e+00,5.0021e+00,1.5635e+00,2.9440e+00,5.0085e+00,9.4756e-01,3.0980e+00,5.0085e+00,9.5342e-01,3.1295e+00,5.0021e+00,9.5342e-01,3.1295e+00,5.0021e+00,9.4756e-01,3.0980e+00,5.0085e+00,3.1744e-01,3.1756e+00,5.0085e+00,3.1940e-01,3.2076e+00,5.0021e+00,3.1940e-01,3.2076e+00,5.0021e+00,3.1744e-01,3.1756e+00,5.0085e+00,-3.1744e-01,3.1756e+00,5.0085e+00,-3.1940e-01,3.2076e+00,5.0021e+00,-3.1940e-01,3.2076e+00,5.0021e+00,-3.1744e-01,3.1756e+00,5.0085e+00,-9.4756e-01,3.0980e+00,5.0085e+00,-9.5342e-01,3.1295e+00,5.0021e+00,-9.5342e-01,3.1295e+00,5.0021e+00,-9.4756e-01,3.0980e+00,5.0085e+00,-1.5635e+00,2.9440e+00,5.0085e+00,-1.5731e+00,2.9746e+00,5.0021e+00,-1.5731e+00,2.9746e+00,5.0021e+00,-1.5635e+00,2.9440e+00,5.0085e+00,-2.1560e+00,2.7158e+00,5.0085e+00,-2.1693e+00,2.7450e+00,5.0021e+00,-2.1693e+00,2.7450e+00,5.0021e+00,-2.1560e+00,2.7158e+00,5.0085e+00,-2.7161e+00,2.4170e+00,5.0085e+00,-2.7329e+00,2.4443e+00,5.0021e+00,-2.6853e+00,2.4358e+00,5.0085e+00,-2.6891e+00,2.4380e+00,5.0075e+00,-2.7174e+00,2.4539e+00,5.0021e+00,2.7161e+00,2.4170e+00,5.0085e+00,2.6999e+00,2.3906e+00,5.0190e+00,2.1431e+00,2.6877e+00,5.0190e+00,2.1560e+00,2.7158e+00,5.0085e+00,2.6853e+00,2.4358e+00,5.0085e+00,2.6595e+00,2.4213e+00,5.0169e+00,2.6544e+00,2.4183e+00,5.0190e+00,2.1560e+00,2.7158e+00,5.0085e+00,2.1431e+00,2.6877e+00,5.0190e+00,1.5541e+00,2.9144e+00,5.0190e+00,1.5635e+00,2.9440e+00,5.0085e+00,1.5635e+00,2.9440e+00,5.0085e+00,1.5541e+00,2.9144e+00,5.0190e+00,9.4190e-01,3.0675e+00,5.0190e+00,9.4756e-01,3.0980e+00,5.0085e+00,9.4756e-01,3.0980e+00,5.0085e+00};
			return value;
		}
		private double[] getCoordinate_7_819_point_2()
		{
			double[] value = {9.4190e-01,3.0675e+00,5.0190e+00,3.1554e-01,3.1447e+00,5.0190e+00,3.1744e-01,3.1756e+00,5.0085e+00,3.1744e-01,3.1756e+00,5.0085e+00,3.1554e-01,3.1447e+00,5.0190e+00,-3.1554e-01,3.1447e+00,5.0190e+00,-3.1744e-01,3.1756e+00,5.0085e+00,-3.1744e-01,3.1756e+00,5.0085e+00,-3.1554e-01,3.1447e+00,5.0190e+00,-9.4190e-01,3.0675e+00,5.0190e+00,-9.4756e-01,3.0980e+00,5.0085e+00,-9.4756e-01,3.0980e+00,5.0085e+00,-9.4190e-01,3.0675e+00,5.0190e+00,-1.5541e+00,2.9144e+00,5.0190e+00,-1.5635e+00,2.9440e+00,5.0085e+00,-1.5635e+00,2.9440e+00,5.0085e+00,-1.5541e+00,2.9144e+00,5.0190e+00,-2.1431e+00,2.6877e+00,5.0190e+00,-2.1560e+00,2.7158e+00,5.0085e+00,-2.1560e+00,2.7158e+00,5.0085e+00,-2.1431e+00,2.6877e+00,5.0190e+00,-2.6999e+00,2.3906e+00,5.0190e+00,-2.7161e+00,2.4170e+00,5.0085e+00,-2.6544e+00,2.4183e+00,5.0190e+00,-2.6595e+00,2.4213e+00,5.0169e+00,-2.6853e+00,2.4358e+00,5.0085e+00,2.6999e+00,2.3906e+00,5.0190e+00,2.6845e+00,2.3657e+00,5.0335e+00,2.1309e+00,2.6610e+00,5.0335e+00,2.1431e+00,2.6877e+00,5.0190e+00,2.6544e+00,2.4183e+00,5.0190e+00,2.6311e+00,2.4051e+00,5.0301e+00,2.6251e+00,2.4016e+00,5.0335e+00,2.1431e+00,2.6877e+00,5.0190e+00,2.1309e+00,2.6610e+00,5.0335e+00,1.5453e+00,2.8865e+00,5.0335e+00,1.5541e+00,2.9144e+00,5.0190e+00,1.5541e+00,2.9144e+00,5.0190e+00,1.5453e+00,2.8865e+00,5.0335e+00,9.3654e-01,3.0387e+00,5.0335e+00,9.4190e-01,3.0675e+00,5.0190e+00,9.4190e-01,3.0675e+00,5.0190e+00,9.3654e-01,3.0387e+00,5.0335e+00,3.1375e-01,3.1154e+00,5.0335e+00,3.1554e-01,3.1447e+00,5.0190e+00,3.1554e-01,3.1447e+00,5.0190e+00,3.1375e-01,3.1154e+00,5.0335e+00,-3.1375e-01,3.1154e+00,5.0335e+00,-3.1554e-01,3.1447e+00,5.0190e+00,-3.1554e-01,3.1447e+00,5.0190e+00,-3.1375e-01,3.1154e+00,5.0335e+00,-9.3654e-01,3.0387e+00,5.0335e+00,-9.4190e-01,3.0675e+00,5.0190e+00,-9.4190e-01,3.0675e+00,5.0190e+00,-9.3654e-01,3.0387e+00,5.0335e+00,-1.5453e+00,2.8865e+00,5.0335e+00,-1.5541e+00,2.9144e+00,5.0190e+00,-1.5541e+00,2.9144e+00,5.0190e+00,-1.5453e+00,2.8865e+00,5.0335e+00,-2.1309e+00,2.6610e+00,5.0335e+00,-2.1431e+00,2.6877e+00,5.0190e+00,-2.1431e+00,2.6877e+00,5.0190e+00,-2.1309e+00,2.6610e+00,5.0335e+00,-2.6845e+00,2.3657e+00,5.0335e+00,-2.6999e+00,2.3906e+00,5.0190e+00,-2.6251e+00,2.4016e+00,5.0335e+00,-2.6311e+00,2.4051e+00,5.0301e+00,-2.6544e+00,2.4183e+00,5.0190e+00,2.6845e+00,2.3657e+00,5.0335e+00,2.6703e+00,2.3425e+00,5.0517e+00,2.1196e+00,2.6363e+00,5.0517e+00,2.1309e+00,2.6610e+00,5.0335e+00,2.6251e+00,2.4016e+00,5.0335e+00,2.6042e+00,2.3899e+00,5.0469e+00,2.5979e+00,2.3862e+00,5.0517e+00,2.1309e+00,2.6610e+00,5.0335e+00,2.1196e+00,2.6363e+00,5.0517e+00,1.5371e+00,2.8606e+00,5.0517e+00,1.5453e+00,2.8865e+00,5.0335e+00,1.5453e+00,2.8865e+00,5.0335e+00,1.5371e+00,2.8606e+00,5.0517e+00,9.3157e-01,3.0120e+00,5.0517e+00,9.3654e-01,3.0387e+00,5.0335e+00,9.3654e-01,3.0387e+00,5.0335e+00,9.3157e-01,3.0120e+00,5.0517e+00,3.1208e-01,3.0882e+00,5.0517e+00,3.1375e-01,3.1154e+00,5.0335e+00,3.1375e-01,3.1154e+00,5.0335e+00,3.1208e-01,3.0882e+00,5.0517e+00,-3.1208e-01,3.0882e+00,5.0517e+00,-3.1375e-01,3.1154e+00,5.0335e+00,-3.1375e-01,3.1154e+00,5.0335e+00,-3.1208e-01,3.0882e+00,5.0517e+00,-9.3157e-01,3.0120e+00,5.0517e+00,-9.3654e-01,3.0387e+00,5.0335e+00,-9.3654e-01,3.0387e+00,5.0335e+00,-9.3157e-01,3.0120e+00,5.0517e+00,-1.5371e+00,2.8606e+00,5.0517e+00,-1.5453e+00,2.8865e+00,5.0335e+00,-1.5453e+00,2.8865e+00,5.0335e+00};
			return value;
		}
		private double[] getCoordinate_7_819_point_3()
		{
			double[] value = {-1.5371e+00,2.8606e+00,5.0517e+00,-2.1196e+00,2.6363e+00,5.0517e+00,-2.1309e+00,2.6610e+00,5.0335e+00,-2.1309e+00,2.6610e+00,5.0335e+00,-2.1196e+00,2.6363e+00,5.0517e+00,-2.6703e+00,2.3425e+00,5.0517e+00,-2.6845e+00,2.3657e+00,5.0335e+00,-2.5979e+00,2.3862e+00,5.0517e+00,-2.6042e+00,2.3899e+00,5.0469e+00,-2.6251e+00,2.4016e+00,5.0335e+00,2.6703e+00,2.3425e+00,5.0517e+00,2.6574e+00,2.3216e+00,5.0732e+00,2.1094e+00,2.6139e+00,5.0732e+00,2.1196e+00,2.6363e+00,5.0517e+00,2.5979e+00,2.3862e+00,5.0517e+00,2.5794e+00,2.3757e+00,5.0673e+00,2.5733e+00,2.3721e+00,5.0732e+00,2.1196e+00,2.6363e+00,5.0517e+00,2.1094e+00,2.6139e+00,5.0732e+00,1.5297e+00,2.8371e+00,5.0732e+00,1.5371e+00,2.8606e+00,5.0517e+00,1.5371e+00,2.8606e+00,5.0517e+00,1.5297e+00,2.8371e+00,5.0732e+00,9.2708e-01,2.9878e+00,5.0732e+00,9.3157e-01,3.0120e+00,5.0517e+00,9.3157e-01,3.0120e+00,5.0517e+00,9.2708e-01,2.9878e+00,5.0732e+00,3.1058e-01,3.0637e+00,5.0732e+00,3.1208e-01,3.0882e+00,5.0517e+00,3.1208e-01,3.0882e+00,5.0517e+00,3.1058e-01,3.0637e+00,5.0732e+00,-3.1058e-01,3.0637e+00,5.0732e+00,-3.1208e-01,3.0882e+00,5.0517e+00,-3.1208e-01,3.0882e+00,5.0517e+00,-3.1058e-01,3.0637e+00,5.0732e+00,-9.2708e-01,2.9878e+00,5.0732e+00,-9.3157e-01,3.0120e+00,5.0517e+00,-9.3157e-01,3.0120e+00,5.0517e+00,-9.2708e-01,2.9878e+00,5.0732e+00,-1.5297e+00,2.8371e+00,5.0732e+00,-1.5371e+00,2.8606e+00,5.0517e+00,-1.5371e+00,2.8606e+00,5.0517e+00,-1.5297e+00,2.8371e+00,5.0732e+00,-2.1094e+00,2.6139e+00,5.0732e+00,-2.1196e+00,2.6363e+00,5.0517e+00,-2.1196e+00,2.6363e+00,5.0517e+00,-2.1094e+00,2.6139e+00,5.0732e+00,-2.6574e+00,2.3216e+00,5.0732e+00,-2.6703e+00,2.3425e+00,5.0517e+00,-2.5733e+00,2.3721e+00,5.0732e+00,-2.5794e+00,2.3757e+00,5.0673e+00,-2.5979e+00,2.3862e+00,5.0517e+00,2.6574e+00,2.3216e+00,5.0732e+00,2.6461e+00,2.3032e+00,5.0978e+00,2.1004e+00,2.5943e+00,5.0978e+00,2.1094e+00,2.6139e+00,5.0732e+00,2.5733e+00,2.3721e+00,5.0732e+00,2.5600e+00,2.3646e+00,5.0876e+00,2.5519e+00,2.3597e+00,5.0978e+00,2.1094e+00,2.6139e+00,5.0732e+00,2.1004e+00,2.5943e+00,5.0978e+00,1.5232e+00,2.8166e+00,5.0978e+00,1.5297e+00,2.8371e+00,5.0732e+00,1.5297e+00,2.8371e+00,5.0732e+00,1.5232e+00,2.8166e+00,5.0978e+00,9.2314e-01,2.9666e+00,5.0978e+00,9.2708e-01,2.9878e+00,5.0732e+00,9.2708e-01,2.9878e+00,5.0732e+00,9.2314e-01,2.9666e+00,5.0978e+00,3.0926e-01,3.0422e+00,5.0978e+00,3.1058e-01,3.0637e+00,5.0732e+00,3.1058e-01,3.0637e+00,5.0732e+00,3.0926e-01,3.0422e+00,5.0978e+00,-3.0926e-01,3.0422e+00,5.0978e+00,-3.1058e-01,3.0637e+00,5.0732e+00,-3.1058e-01,3.0637e+00,5.0732e+00,-3.0926e-01,3.0422e+00,5.0978e+00,-9.2314e-01,2.9666e+00,5.0978e+00,-9.2708e-01,2.9878e+00,5.0732e+00,-9.2708e-01,2.9878e+00,5.0732e+00,-9.2314e-01,2.9666e+00,5.0978e+00,-1.5232e+00,2.8166e+00,5.0978e+00,-1.5297e+00,2.8371e+00,5.0732e+00,-1.5297e+00,2.8371e+00,5.0732e+00,-1.5232e+00,2.8166e+00,5.0978e+00,-2.1004e+00,2.5943e+00,5.0978e+00,-2.1094e+00,2.6139e+00,5.0732e+00,-2.1094e+00,2.6139e+00,5.0732e+00,-2.1004e+00,2.5943e+00,5.0978e+00,-2.6461e+00,2.3032e+00,5.0978e+00,-2.6574e+00,2.3216e+00,5.0732e+00,-2.5519e+00,2.3597e+00,5.0978e+00,-2.5600e+00,2.3646e+00,5.0876e+00,-2.5733e+00,2.3721e+00,5.0732e+00,2.6461e+00,2.3032e+00,5.0978e+00,2.6366e+00,2.2877e+00,5.1250e+00,2.0928e+00,2.5778e+00,5.1250e+00,2.1004e+00,2.5943e+00,5.0978e+00,2.5519e+00,2.3597e+00,5.0978e+00,2.5428e+00,2.3546e+00,5.1103e+00};
			return value;
		}
		private double[] getCoordinate_7_819_point_4()
		{
			double[] value = {2.5338e+00,2.3492e+00,5.1250e+00,2.1004e+00,2.5943e+00,5.0978e+00,2.0928e+00,2.5778e+00,5.1250e+00,1.5177e+00,2.7992e+00,5.1250e+00,1.5232e+00,2.8166e+00,5.0978e+00,1.5232e+00,2.8166e+00,5.0978e+00,1.5177e+00,2.7992e+00,5.1250e+00,9.1982e-01,2.9487e+00,5.1250e+00,9.2314e-01,2.9666e+00,5.0978e+00,9.2314e-01,2.9666e+00,5.0978e+00,9.1982e-01,2.9487e+00,5.1250e+00,3.0815e-01,3.0241e+00,5.1250e+00,3.0926e-01,3.0422e+00,5.0978e+00,3.0926e-01,3.0422e+00,5.0978e+00,3.0815e-01,3.0241e+00,5.1250e+00,-3.0815e-01,3.0241e+00,5.1250e+00,-3.0926e-01,3.0422e+00,5.0978e+00,-3.0926e-01,3.0422e+00,5.0978e+00,-3.0815e-01,3.0241e+00,5.1250e+00,-9.1982e-01,2.9487e+00,5.1250e+00,-9.2314e-01,2.9666e+00,5.0978e+00,-9.2314e-01,2.9666e+00,5.0978e+00,-9.1982e-01,2.9487e+00,5.1250e+00,-1.5177e+00,2.7992e+00,5.1250e+00,-1.5232e+00,2.8166e+00,5.0978e+00,-1.5232e+00,2.8166e+00,5.0978e+00,-1.5177e+00,2.7992e+00,5.1250e+00,-2.0928e+00,2.5778e+00,5.1250e+00,-2.1004e+00,2.5943e+00,5.0978e+00,-2.1004e+00,2.5943e+00,5.0978e+00,-2.0928e+00,2.5778e+00,5.1250e+00,-2.6366e+00,2.2877e+00,5.1250e+00,-2.6461e+00,2.3032e+00,5.0978e+00,-2.5338e+00,2.3492e+00,5.1250e+00,-2.5428e+00,2.3546e+00,5.1103e+00,-2.5519e+00,2.3597e+00,5.0978e+00,2.6366e+00,2.2877e+00,5.1250e+00,2.6290e+00,2.2754e+00,5.1543e+00,2.0868e+00,2.5646e+00,5.1543e+00,2.0928e+00,2.5778e+00,5.1250e+00,2.5338e+00,2.3492e+00,5.1250e+00,2.5280e+00,2.3461e+00,5.1353e+00,2.5193e+00,2.3409e+00,5.1543e+00,2.0928e+00,2.5778e+00,5.1250e+00,2.0868e+00,2.5646e+00,5.1543e+00,1.5133e+00,2.7854e+00,5.1543e+00,1.5177e+00,2.7992e+00,5.1250e+00,1.5177e+00,2.7992e+00,5.1250e+00,1.5133e+00,2.7854e+00,5.1543e+00,9.1718e-01,2.9345e+00,5.1543e+00,9.1982e-01,2.9487e+00,5.1250e+00,9.1982e-01,2.9487e+00,5.1250e+00,9.1718e-01,2.9345e+00,5.1543e+00,3.0726e-01,3.0096e+00,5.1543e+00,3.0815e-01,3.0241e+00,5.1250e+00,3.0815e-01,3.0241e+00,5.1250e+00,3.0726e-01,3.0096e+00,5.1543e+00,-3.0726e-01,3.0096e+00,5.1543e+00,-3.0815e-01,3.0241e+00,5.1250e+00,-3.0815e-01,3.0241e+00,5.1250e+00,-3.0726e-01,3.0096e+00,5.1543e+00,-9.1718e-01,2.9345e+00,5.1543e+00,-9.1982e-01,2.9487e+00,5.1250e+00,-9.1982e-01,2.9487e+00,5.1250e+00,-9.1718e-01,2.9345e+00,5.1543e+00,-1.5133e+00,2.7854e+00,5.1543e+00,-1.5177e+00,2.7992e+00,5.1250e+00,-1.5177e+00,2.7992e+00,5.1250e+00,-1.5133e+00,2.7854e+00,5.1543e+00,-2.0868e+00,2.5646e+00,5.1543e+00,-2.0928e+00,2.5778e+00,5.1250e+00,-2.0928e+00,2.5778e+00,5.1250e+00,-2.0868e+00,2.5646e+00,5.1543e+00,-2.6290e+00,2.2754e+00,5.1543e+00,-2.6366e+00,2.2877e+00,5.1250e+00,-2.5193e+00,2.3409e+00,5.1543e+00,-2.5280e+00,2.3461e+00,5.1353e+00,-2.5338e+00,2.3492e+00,5.1250e+00,2.6290e+00,2.2754e+00,5.1543e+00,2.6235e+00,2.2664e+00,5.1853e+00,2.0825e+00,2.5551e+00,5.1853e+00,2.0868e+00,2.5646e+00,5.1543e+00,2.5193e+00,2.3409e+00,5.1543e+00,2.5161e+00,2.3393e+00,5.1621e+00,2.5088e+00,2.3349e+00,5.1853e+00,2.0868e+00,2.5646e+00,5.1543e+00,2.0825e+00,2.5551e+00,5.1853e+00,1.5102e+00,2.7754e+00,5.1853e+00,1.5133e+00,2.7854e+00,5.1543e+00,1.5133e+00,2.7854e+00,5.1543e+00,1.5102e+00,2.7754e+00,5.1853e+00,9.1526e-01,2.9242e+00,5.1853e+00,9.1718e-01,2.9345e+00,5.1543e+00,9.1718e-01,2.9345e+00,5.1543e+00,9.1526e-01,2.9242e+00,5.1853e+00,3.0662e-01,2.9991e+00,5.1853e+00,3.0726e-01,3.0096e+00,5.1543e+00,3.0726e-01,3.0096e+00,5.1543e+00,3.0662e-01,2.9991e+00,5.1853e+00,-3.0662e-01,2.9991e+00,5.1853e+00};
			return value;
		}
		private double[] getCoordinate_7_819_point_5()
		{
			double[] value = {-3.0726e-01,3.0096e+00,5.1543e+00,-3.0726e-01,3.0096e+00,5.1543e+00,-3.0662e-01,2.9991e+00,5.1853e+00,-9.1526e-01,2.9242e+00,5.1853e+00,-9.1718e-01,2.9345e+00,5.1543e+00,-9.1718e-01,2.9345e+00,5.1543e+00,-9.1526e-01,2.9242e+00,5.1853e+00,-1.5102e+00,2.7754e+00,5.1853e+00,-1.5133e+00,2.7854e+00,5.1543e+00,-1.5133e+00,2.7854e+00,5.1543e+00,-1.5102e+00,2.7754e+00,5.1853e+00,-2.0825e+00,2.5551e+00,5.1853e+00,-2.0868e+00,2.5646e+00,5.1543e+00,-2.0868e+00,2.5646e+00,5.1543e+00,-2.0825e+00,2.5551e+00,5.1853e+00,-2.6235e+00,2.2664e+00,5.1853e+00,-2.6290e+00,2.2754e+00,5.1543e+00,-2.5088e+00,2.3349e+00,5.1853e+00,-2.5161e+00,2.3393e+00,5.1621e+00,-2.5193e+00,2.3409e+00,5.1543e+00,2.6235e+00,2.2664e+00,5.1853e+00,2.6202e+00,2.2610e+00,5.2174e+00,2.0798e+00,2.5493e+00,5.2174e+00,2.0825e+00,2.5551e+00,5.1853e+00,2.5088e+00,2.3349e+00,5.1853e+00,2.5073e+00,2.3342e+00,5.1904e+00,2.5022e+00,2.3313e+00,5.2174e+00,2.0825e+00,2.5551e+00,5.1853e+00,2.0798e+00,2.5493e+00,5.2174e+00,1.5082e+00,2.7693e+00,5.2174e+00,1.5102e+00,2.7754e+00,5.1853e+00,1.5102e+00,2.7754e+00,5.1853e+00,1.5082e+00,2.7693e+00,5.2174e+00,9.1409e-01,2.9179e+00,5.2174e+00,9.1526e-01,2.9242e+00,5.1853e+00,9.1526e-01,2.9242e+00,5.1853e+00,9.1409e-01,2.9179e+00,5.2174e+00,3.0623e-01,2.9928e+00,5.2174e+00,3.0662e-01,2.9991e+00,5.1853e+00,3.0662e-01,2.9991e+00,5.1853e+00,3.0623e-01,2.9928e+00,5.2174e+00,-3.0623e-01,2.9928e+00,5.2174e+00,-3.0662e-01,2.9991e+00,5.1853e+00,-3.0662e-01,2.9991e+00,5.1853e+00,-3.0623e-01,2.9928e+00,5.2174e+00,-9.1409e-01,2.9179e+00,5.2174e+00,-9.1526e-01,2.9242e+00,5.1853e+00,-9.1526e-01,2.9242e+00,5.1853e+00,-9.1409e-01,2.9179e+00,5.2174e+00,-1.5082e+00,2.7693e+00,5.2174e+00,-1.5102e+00,2.7754e+00,5.1853e+00,-1.5102e+00,2.7754e+00,5.1853e+00,-1.5082e+00,2.7693e+00,5.2174e+00,-2.0798e+00,2.5493e+00,5.2174e+00,-2.0825e+00,2.5551e+00,5.1853e+00,-2.0825e+00,2.5551e+00,5.1853e+00,-2.0798e+00,2.5493e+00,5.2174e+00,-2.6202e+00,2.2610e+00,5.2174e+00,-2.6235e+00,2.2664e+00,5.1853e+00,-2.5022e+00,2.3313e+00,5.2174e+00,-2.5073e+00,2.3342e+00,5.1904e+00,-2.5088e+00,2.3349e+00,5.1853e+00,2.6202e+00,2.2610e+00,5.2174e+00,2.6190e+00,2.2592e+00,5.2500e+00,2.0789e+00,2.5473e+00,5.2500e+00,2.0798e+00,2.5493e+00,5.2174e+00,2.5022e+00,2.3313e+00,5.2174e+00,2.5019e+00,2.3312e+00,5.2198e+00,2.5000e+00,2.3301e+00,5.2500e+00,2.0798e+00,2.5493e+00,5.2174e+00,2.0789e+00,2.5473e+00,5.2500e+00,1.5076e+00,2.7673e+00,5.2500e+00,1.5082e+00,2.7693e+00,5.2174e+00,1.5082e+00,2.7693e+00,5.2174e+00,1.5076e+00,2.7673e+00,5.2500e+00,9.1370e-01,2.9158e+00,5.2500e+00,9.1409e-01,2.9179e+00,5.2174e+00,9.1409e-01,2.9179e+00,5.2174e+00,9.1370e-01,2.9158e+00,5.2500e+00,3.0610e-01,2.9906e+00,5.2500e+00,3.0623e-01,2.9928e+00,5.2174e+00,3.0623e-01,2.9928e+00,5.2174e+00,3.0610e-01,2.9906e+00,5.2500e+00,-3.0610e-01,2.9906e+00,5.2500e+00,-3.0623e-01,2.9928e+00,5.2174e+00,-3.0623e-01,2.9928e+00,5.2174e+00,-3.0610e-01,2.9906e+00,5.2500e+00,-9.1370e-01,2.9158e+00,5.2500e+00,-9.1409e-01,2.9179e+00,5.2174e+00,-9.1409e-01,2.9179e+00,5.2174e+00,-9.1370e-01,2.9158e+00,5.2500e+00,-1.5076e+00,2.7673e+00,5.2500e+00,-1.5082e+00,2.7693e+00,5.2174e+00,-1.5082e+00,2.7693e+00,5.2174e+00,-1.5076e+00,2.7673e+00,5.2500e+00,-2.0789e+00,2.5473e+00,5.2500e+00,-2.0798e+00,2.5493e+00,5.2174e+00,-2.0798e+00,2.5493e+00,5.2174e+00,-2.0789e+00,2.5473e+00,5.2500e+00,-2.6190e+00,2.2592e+00,5.2500e+00};
			return value;
		}
		private double[] getCoordinate_7_819_point_6()
		{
			double[] value = {-2.6202e+00,2.2610e+00,5.2174e+00,-2.5000e+00,2.3301e+00,5.2500e+00,-2.5019e+00,2.3312e+00,5.2198e+00,-2.5022e+00,2.3313e+00,5.2174e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_820_vector_1()
		{
			double[] value = {6.4148e-17,1.0432e-16,1.0000e+00,6.8371e-02,1.1119e-01,9.9144e-01,5.4270e-02,1.1871e-01,9.9144e-01,5.0919e-17,1.1138e-16,1.0000e+00,6.4148e-17,1.0432e-16,1.0000e+00,6.3738e-02,1.0442e-01,9.9249e-01,6.7982e-02,1.1142e-01,9.9144e-01,5.0919e-17,1.1138e-16,1.0000e+00,5.4270e-02,1.1871e-01,9.9144e-01,3.9356e-02,1.2445e-01,9.9144e-01,3.6926e-17,1.1677e-16,1.0000e+00,3.6926e-17,1.1677e-16,1.0000e+00,3.9356e-02,1.2445e-01,9.9144e-01,2.3852e-02,1.2833e-01,9.9144e-01,2.2379e-17,1.2040e-16,1.0000e+00,2.2379e-17,1.2040e-16,1.0000e+00,2.3852e-02,1.2833e-01,9.9144e-01,7.9907e-03,1.3028e-01,9.9144e-01,7.4972e-18,1.2223e-16,1.0000e+00,7.4972e-18,1.2223e-16,1.0000e+00,7.9907e-03,1.3028e-01,9.9144e-01,-7.9907e-03,1.3028e-01,9.9144e-01,-7.4972e-18,1.2223e-16,1.0000e+00,-7.4972e-18,1.2223e-16,1.0000e+00,-7.9907e-03,1.3028e-01,9.9144e-01,-2.3852e-02,1.2833e-01,9.9144e-01,-2.2379e-17,1.2040e-16,1.0000e+00,-2.2379e-17,1.2040e-16,1.0000e+00,-2.3852e-02,1.2833e-01,9.9144e-01,-3.9356e-02,1.2445e-01,9.9144e-01,-3.6926e-17,1.1677e-16,1.0000e+00,-3.6926e-17,1.1677e-16,1.0000e+00,-3.9356e-02,1.2445e-01,9.9144e-01,-5.4270e-02,1.1871e-01,9.9144e-01,-5.0919e-17,1.1138e-16,1.0000e+00,-5.0919e-17,1.1138e-16,1.0000e+00,-5.4270e-02,1.1871e-01,9.9144e-01,-6.8371e-02,1.1119e-01,9.9144e-01,-6.4148e-17,1.0432e-16,1.0000e+00,-6.7982e-02,1.1142e-01,9.9144e-01,-6.3738e-02,1.0442e-01,9.9249e-01,-6.4148e-17,1.0432e-16,1.0000e+00,6.8371e-02,1.1119e-01,9.9144e-01,1.3557e-01,2.2047e-01,9.6593e-01,1.0761e-01,2.3539e-01,9.6593e-01,5.4270e-02,1.1871e-01,9.9144e-01,6.7982e-02,1.1142e-01,9.9144e-01,1.2622e-01,2.0831e-01,9.6988e-01,1.3404e-01,2.2141e-01,9.6593e-01,5.4270e-02,1.1871e-01,9.9144e-01,1.0761e-01,2.3539e-01,9.6593e-01,7.8039e-02,2.4677e-01,9.6593e-01,3.9356e-02,1.2445e-01,9.9144e-01,3.9356e-02,1.2445e-01,9.9144e-01,7.8039e-02,2.4677e-01,9.6593e-01,4.7297e-02,2.5446e-01,9.6593e-01,2.3852e-02,1.2833e-01,9.9144e-01,2.3852e-02,1.2833e-01,9.9144e-01,4.7297e-02,2.5446e-01,9.6593e-01,1.5845e-02,2.5833e-01,9.6593e-01,7.9907e-03,1.3028e-01,9.9144e-01,7.9907e-03,1.3028e-01,9.9144e-01,1.5845e-02,2.5833e-01,9.6593e-01,-1.5845e-02,2.5833e-01,9.6593e-01,-7.9907e-03,1.3028e-01,9.9144e-01,-7.9907e-03,1.3028e-01,9.9144e-01,-1.5845e-02,2.5833e-01,9.6593e-01,-4.7297e-02,2.5446e-01,9.6593e-01,-2.3852e-02,1.2833e-01,9.9144e-01,-2.3852e-02,1.2833e-01,9.9144e-01,-4.7297e-02,2.5446e-01,9.6593e-01,-7.8039e-02,2.4677e-01,9.6593e-01,-3.9356e-02,1.2445e-01,9.9144e-01,-3.9356e-02,1.2445e-01,9.9144e-01,-7.8039e-02,2.4677e-01,9.6593e-01,-1.0761e-01,2.3539e-01,9.6593e-01,-5.4270e-02,1.1871e-01,9.9144e-01,-5.4270e-02,1.1871e-01,9.9144e-01,-1.0761e-01,2.3539e-01,9.6593e-01,-1.3557e-01,2.2047e-01,9.6593e-01,-6.8371e-02,1.1119e-01,9.9144e-01,-1.3404e-01,2.2141e-01,9.6593e-01,-1.2622e-01,2.0831e-01,9.6988e-01,-6.7982e-02,1.1142e-01,9.9144e-01,1.3557e-01,2.2047e-01,9.6593e-01,2.0045e-01,3.2598e-01,9.2388e-01,1.5911e-01,3.4804e-01,9.2388e-01,1.0761e-01,2.3539e-01,9.6593e-01,1.3404e-01,2.2141e-01,9.6593e-01,1.8656e-01,3.1014e-01,9.3221e-01,1.9708e-01,3.2804e-01,9.2388e-01,1.0761e-01,2.3539e-01,9.6593e-01,1.5911e-01,3.4804e-01,9.2388e-01,1.1539e-01,3.6487e-01,9.2388e-01,7.8039e-02,2.4677e-01,9.6593e-01,7.8039e-02,2.4677e-01,9.6593e-01,1.1539e-01,3.6487e-01,9.2388e-01,6.9931e-02,3.7624e-01,9.2388e-01,4.7297e-02,2.5446e-01,9.6593e-01,4.7297e-02,2.5446e-01,9.6593e-01};
			return value;
		}
		private double[] getNormal_7_820_vector_2()
		{
			double[] value = {6.9931e-02,3.7624e-01,9.2388e-01,2.3428e-02,3.8197e-01,9.2388e-01,1.5845e-02,2.5833e-01,9.6593e-01,1.5845e-02,2.5833e-01,9.6593e-01,2.3428e-02,3.8197e-01,9.2388e-01,-2.3428e-02,3.8197e-01,9.2388e-01,-1.5845e-02,2.5833e-01,9.6593e-01,-1.5845e-02,2.5833e-01,9.6593e-01,-2.3428e-02,3.8197e-01,9.2388e-01,-6.9931e-02,3.7624e-01,9.2388e-01,-4.7297e-02,2.5446e-01,9.6593e-01,-4.7297e-02,2.5446e-01,9.6593e-01,-6.9931e-02,3.7624e-01,9.2388e-01,-1.1539e-01,3.6487e-01,9.2388e-01,-7.8039e-02,2.4677e-01,9.6593e-01,-7.8039e-02,2.4677e-01,9.6593e-01,-1.1539e-01,3.6487e-01,9.2388e-01,-1.5911e-01,3.4804e-01,9.2388e-01,-1.0761e-01,2.3539e-01,9.6593e-01,-1.0761e-01,2.3539e-01,9.6593e-01,-1.5911e-01,3.4804e-01,9.2388e-01,-2.0045e-01,3.2598e-01,9.2388e-01,-1.3557e-01,2.2047e-01,9.6593e-01,-1.9708e-01,3.2804e-01,9.2388e-01,-1.8656e-01,3.1014e-01,9.3221e-01,-1.3404e-01,2.2141e-01,9.6593e-01,2.0045e-01,3.2598e-01,9.2388e-01,2.6190e-01,4.2592e-01,8.6603e-01,2.0789e-01,4.5473e-01,8.6603e-01,1.5911e-01,3.4804e-01,9.2388e-01,1.9708e-01,3.2804e-01,9.2388e-01,2.4391e-01,4.0836e-01,8.7963e-01,2.5611e-01,4.2943e-01,8.6603e-01,1.5911e-01,3.4804e-01,9.2388e-01,2.0789e-01,4.5473e-01,8.6603e-01,1.5076e-01,4.7673e-01,8.6603e-01,1.1539e-01,3.6487e-01,9.2388e-01,1.1539e-01,3.6487e-01,9.2388e-01,1.5076e-01,4.7673e-01,8.6603e-01,9.1370e-02,4.9158e-01,8.6603e-01,6.9931e-02,3.7624e-01,9.2388e-01,6.9931e-02,3.7624e-01,9.2388e-01,9.1370e-02,4.9158e-01,8.6603e-01,3.0610e-02,4.9906e-01,8.6603e-01,2.3428e-02,3.8197e-01,9.2388e-01,2.3428e-02,3.8197e-01,9.2388e-01,3.0610e-02,4.9906e-01,8.6603e-01,-3.0610e-02,4.9906e-01,8.6603e-01,-2.3428e-02,3.8197e-01,9.2388e-01,-2.3428e-02,3.8197e-01,9.2388e-01,-3.0610e-02,4.9906e-01,8.6603e-01,-9.1370e-02,4.9158e-01,8.6603e-01,-6.9931e-02,3.7624e-01,9.2388e-01,-6.9931e-02,3.7624e-01,9.2388e-01,-9.1370e-02,4.9158e-01,8.6603e-01,-1.5076e-01,4.7673e-01,8.6603e-01,-1.1539e-01,3.6487e-01,9.2388e-01,-1.1539e-01,3.6487e-01,9.2388e-01,-1.5076e-01,4.7673e-01,8.6603e-01,-2.0789e-01,4.5473e-01,8.6603e-01,-1.5911e-01,3.4804e-01,9.2388e-01,-1.5911e-01,3.4804e-01,9.2388e-01,-2.0789e-01,4.5473e-01,8.6603e-01,-2.6190e-01,4.2592e-01,8.6603e-01,-2.0045e-01,3.2598e-01,9.2388e-01,-2.5611e-01,4.2943e-01,8.6603e-01,-2.4391e-01,4.0836e-01,8.7963e-01,-1.9708e-01,3.2804e-01,9.2388e-01,2.6190e-01,4.2592e-01,8.6603e-01,3.1888e-01,5.1856e-01,7.9335e-01,2.5311e-01,5.5365e-01,7.9335e-01,2.0789e-01,4.5473e-01,8.6603e-01,2.5611e-01,4.2943e-01,8.6603e-01,2.9749e-01,5.0147e-01,8.1242e-01,3.1023e-01,5.2378e-01,7.9335e-01,2.0789e-01,4.5473e-01,8.6603e-01,2.5311e-01,5.5365e-01,7.9335e-01,1.8355e-01,5.8043e-01,7.9335e-01,1.5076e-01,4.7673e-01,8.6603e-01,1.5076e-01,4.7673e-01,8.6603e-01,1.8355e-01,5.8043e-01,7.9335e-01,1.1124e-01,5.9851e-01,7.9335e-01,9.1370e-02,4.9158e-01,8.6603e-01,9.1370e-02,4.9158e-01,8.6603e-01,1.1124e-01,5.9851e-01,7.9335e-01,3.7268e-02,6.0762e-01,7.9335e-01,3.0610e-02,4.9906e-01,8.6603e-01,3.0610e-02,4.9906e-01,8.6603e-01,3.7268e-02,6.0762e-01,7.9335e-01,-3.7268e-02,6.0762e-01,7.9335e-01,-3.0610e-02,4.9906e-01,8.6603e-01,-3.0610e-02,4.9906e-01,8.6603e-01,-3.7268e-02,6.0762e-01,7.9335e-01,-1.1124e-01,5.9851e-01,7.9335e-01,-9.1370e-02,4.9158e-01,8.6603e-01,-9.1370e-02,4.9158e-01,8.6603e-01,-1.1124e-01,5.9851e-01,7.9335e-01,-1.8355e-01,5.8043e-01,7.9335e-01,-1.5076e-01,4.7673e-01,8.6603e-01,-1.5076e-01,4.7673e-01,8.6603e-01};
			return value;
		}
		private double[] getNormal_7_820_vector_3()
		{
			double[] value = {-1.8355e-01,5.8043e-01,7.9335e-01,-2.5311e-01,5.5365e-01,7.9335e-01,-2.0789e-01,4.5473e-01,8.6603e-01,-2.0789e-01,4.5473e-01,8.6603e-01,-2.5311e-01,5.5365e-01,7.9335e-01,-3.1888e-01,5.1856e-01,7.9335e-01,-2.6190e-01,4.2592e-01,8.6603e-01,-3.1023e-01,5.2378e-01,7.9335e-01,-2.9749e-01,5.0147e-01,8.1242e-01,-2.5611e-01,4.2943e-01,8.6603e-01,3.1888e-01,5.1856e-01,7.9335e-01,3.7039e-01,6.0234e-01,7.0711e-01,2.9400e-01,6.4309e-01,7.0711e-01,2.5311e-01,5.5365e-01,7.9335e-01,3.1023e-01,5.2378e-01,7.9335e-01,3.4661e-01,5.8799e-01,7.3084e-01,3.5867e-01,6.0939e-01,7.0711e-01,2.5311e-01,5.5365e-01,7.9335e-01,2.9400e-01,6.4309e-01,7.0711e-01,2.1321e-01,6.7420e-01,7.0711e-01,1.8355e-01,5.8043e-01,7.9335e-01,1.8355e-01,5.8043e-01,7.9335e-01,2.1321e-01,6.7420e-01,7.0711e-01,1.2922e-01,6.9520e-01,7.0711e-01,1.1124e-01,5.9851e-01,7.9335e-01,1.1124e-01,5.9851e-01,7.9335e-01,1.2922e-01,6.9520e-01,7.0711e-01,4.3288e-02,7.0578e-01,7.0711e-01,3.7268e-02,6.0762e-01,7.9335e-01,3.7268e-02,6.0762e-01,7.9335e-01,4.3288e-02,7.0578e-01,7.0711e-01,-4.3288e-02,7.0578e-01,7.0711e-01,-3.7268e-02,6.0762e-01,7.9335e-01,-3.7268e-02,6.0762e-01,7.9335e-01,-4.3288e-02,7.0578e-01,7.0711e-01,-1.2922e-01,6.9520e-01,7.0711e-01,-1.1124e-01,5.9851e-01,7.9335e-01,-1.1124e-01,5.9851e-01,7.9335e-01,-1.2922e-01,6.9520e-01,7.0711e-01,-2.1321e-01,6.7420e-01,7.0711e-01,-1.8355e-01,5.8043e-01,7.9335e-01,-1.8355e-01,5.8043e-01,7.9335e-01,-2.1321e-01,6.7420e-01,7.0711e-01,-2.9400e-01,6.4309e-01,7.0711e-01,-2.5311e-01,5.5365e-01,7.9335e-01,-2.5311e-01,5.5365e-01,7.9335e-01,-2.9400e-01,6.4309e-01,7.0711e-01,-3.7039e-01,6.0234e-01,7.0711e-01,-3.1888e-01,5.1856e-01,7.9335e-01,-3.5867e-01,6.0939e-01,7.0711e-01,-3.4661e-01,5.8799e-01,7.3084e-01,-3.1023e-01,5.2378e-01,7.9335e-01,3.7039e-01,6.0234e-01,7.0711e-01,4.1557e-01,6.7581e-01,6.0876e-01,3.2986e-01,7.2153e-01,6.0876e-01,2.9400e-01,6.4309e-01,7.0711e-01,3.5867e-01,6.0939e-01,7.0711e-01,3.8461e-01,6.5574e-01,6.4968e-01,4.0077e-01,6.8469e-01,6.0876e-01,2.9400e-01,6.4309e-01,7.0711e-01,3.2986e-01,7.2153e-01,6.0876e-01,2.3921e-01,7.5643e-01,6.0876e-01,2.1321e-01,6.7420e-01,7.0711e-01,2.1321e-01,6.7420e-01,7.0711e-01,2.3921e-01,7.5643e-01,6.0876e-01,1.4498e-01,7.7999e-01,6.0876e-01,1.2922e-01,6.9520e-01,7.0711e-01,1.2922e-01,6.9520e-01,7.0711e-01,1.4498e-01,7.7999e-01,6.0876e-01,4.8568e-02,7.9187e-01,6.0876e-01,4.3288e-02,7.0578e-01,7.0711e-01,4.3288e-02,7.0578e-01,7.0711e-01,4.8568e-02,7.9187e-01,6.0876e-01,-4.8568e-02,7.9187e-01,6.0876e-01,-4.3288e-02,7.0578e-01,7.0711e-01,-4.3288e-02,7.0578e-01,7.0711e-01,-4.8568e-02,7.9187e-01,6.0876e-01,-1.4498e-01,7.7999e-01,6.0876e-01,-1.2922e-01,6.9520e-01,7.0711e-01,-1.2922e-01,6.9520e-01,7.0711e-01,-1.4498e-01,7.7999e-01,6.0876e-01,-2.3921e-01,7.5643e-01,6.0876e-01,-2.1321e-01,6.7420e-01,7.0711e-01,-2.1321e-01,6.7420e-01,7.0711e-01,-2.3921e-01,7.5643e-01,6.0876e-01,-3.2986e-01,7.2153e-01,6.0876e-01,-2.9400e-01,6.4309e-01,7.0711e-01,-2.9400e-01,6.4309e-01,7.0711e-01,-3.2986e-01,7.2153e-01,6.0876e-01,-4.1557e-01,6.7581e-01,6.0876e-01,-3.7039e-01,6.0234e-01,7.0711e-01,-4.0077e-01,6.8469e-01,6.0876e-01,-3.8461e-01,6.5574e-01,6.4968e-01,-3.5867e-01,6.0939e-01,7.0711e-01,4.1557e-01,6.7581e-01,6.0876e-01,4.5363e-01,7.3771e-01,5.0000e-01,3.6008e-01,7.8762e-01,5.0000e-01,3.2986e-01,7.2153e-01,6.0876e-01,4.0077e-01,6.8469e-01,6.0876e-01,4.1820e-01,7.1620e-01,5.5872e-01};
			return value;
		}
		private double[] getNormal_7_820_vector_4()
		{
			double[] value = {4.3595e-01,7.4830e-01,5.0000e-01,3.2986e-01,7.2153e-01,6.0876e-01,3.6008e-01,7.8762e-01,5.0000e-01,2.6112e-01,8.2572e-01,5.0000e-01,2.3921e-01,7.5643e-01,6.0876e-01,2.3921e-01,7.5643e-01,6.0876e-01,2.6112e-01,8.2572e-01,5.0000e-01,1.5826e-01,8.5144e-01,5.0000e-01,1.4498e-01,7.7999e-01,6.0876e-01,1.4498e-01,7.7999e-01,6.0876e-01,1.5826e-01,8.5144e-01,5.0000e-01,5.3017e-02,8.6440e-01,5.0000e-01,4.8568e-02,7.9187e-01,6.0876e-01,4.8568e-02,7.9187e-01,6.0876e-01,5.3017e-02,8.6440e-01,5.0000e-01,-5.3017e-02,8.6440e-01,5.0000e-01,-4.8568e-02,7.9187e-01,6.0876e-01,-4.8568e-02,7.9187e-01,6.0876e-01,-5.3017e-02,8.6440e-01,5.0000e-01,-1.5826e-01,8.5144e-01,5.0000e-01,-1.4498e-01,7.7999e-01,6.0876e-01,-1.4498e-01,7.7999e-01,6.0876e-01,-1.5826e-01,8.5144e-01,5.0000e-01,-2.6112e-01,8.2572e-01,5.0000e-01,-2.3921e-01,7.5643e-01,6.0876e-01,-2.3921e-01,7.5643e-01,6.0876e-01,-2.6112e-01,8.2572e-01,5.0000e-01,-3.6008e-01,7.8762e-01,5.0000e-01,-3.2986e-01,7.2153e-01,6.0876e-01,-3.2986e-01,7.2153e-01,6.0876e-01,-3.6008e-01,7.8762e-01,5.0000e-01,-4.5363e-01,7.3771e-01,5.0000e-01,-4.1557e-01,6.7581e-01,6.0876e-01,-4.3595e-01,7.4830e-01,5.0000e-01,-4.1820e-01,7.1620e-01,5.5872e-01,-4.0077e-01,6.8469e-01,6.0876e-01,4.5363e-01,7.3771e-01,5.0000e-01,4.8394e-01,7.8699e-01,3.8268e-01,3.8413e-01,8.4024e-01,3.8268e-01,3.6008e-01,7.8762e-01,5.0000e-01,4.3595e-01,7.4830e-01,5.0000e-01,4.4672e-01,7.6798e-01,4.5897e-01,4.6375e-01,7.9906e-01,3.8268e-01,3.6008e-01,7.8762e-01,5.0000e-01,3.8413e-01,8.4024e-01,3.8268e-01,2.7857e-01,8.8088e-01,3.8268e-01,2.6112e-01,8.2572e-01,5.0000e-01,2.6112e-01,8.2572e-01,5.0000e-01,2.7857e-01,8.8088e-01,3.8268e-01,1.6883e-01,9.0832e-01,3.8268e-01,1.5826e-01,8.5144e-01,5.0000e-01,1.5826e-01,8.5144e-01,5.0000e-01,1.6883e-01,9.0832e-01,3.8268e-01,5.6559e-02,9.2215e-01,3.8268e-01,5.3017e-02,8.6440e-01,5.0000e-01,5.3017e-02,8.6440e-01,5.0000e-01,5.6559e-02,9.2215e-01,3.8268e-01,-5.6559e-02,9.2215e-01,3.8268e-01,-5.3017e-02,8.6440e-01,5.0000e-01,-5.3017e-02,8.6440e-01,5.0000e-01,-5.6559e-02,9.2215e-01,3.8268e-01,-1.6883e-01,9.0832e-01,3.8268e-01,-1.5826e-01,8.5144e-01,5.0000e-01,-1.5826e-01,8.5144e-01,5.0000e-01,-1.6883e-01,9.0832e-01,3.8268e-01,-2.7857e-01,8.8088e-01,3.8268e-01,-2.6112e-01,8.2572e-01,5.0000e-01,-2.6112e-01,8.2572e-01,5.0000e-01,-2.7857e-01,8.8088e-01,3.8268e-01,-3.8413e-01,8.4024e-01,3.8268e-01,-3.6008e-01,7.8762e-01,5.0000e-01,-3.6008e-01,7.8762e-01,5.0000e-01,-3.8413e-01,8.4024e-01,3.8268e-01,-4.8394e-01,7.8699e-01,3.8268e-01,-4.5363e-01,7.3771e-01,5.0000e-01,-4.6375e-01,7.9906e-01,3.8268e-01,-4.4672e-01,7.6798e-01,4.5897e-01,-4.3595e-01,7.4830e-01,5.0000e-01,4.8394e-01,7.8699e-01,3.8268e-01,5.0596e-01,8.2281e-01,2.5882e-01,4.0161e-01,8.7848e-01,2.5882e-01,3.8413e-01,8.4024e-01,3.8268e-01,4.6375e-01,7.9906e-01,3.8268e-01,4.6957e-01,8.0980e-01,3.5174e-01,4.8383e-01,8.3602e-01,2.5882e-01,3.8413e-01,8.4024e-01,3.8268e-01,4.0161e-01,8.7848e-01,2.5882e-01,2.9125e-01,9.2097e-01,2.5882e-01,2.7857e-01,8.8088e-01,3.8268e-01,2.7857e-01,8.8088e-01,3.8268e-01,2.9125e-01,9.2097e-01,2.5882e-01,1.7651e-01,9.4966e-01,2.5882e-01,1.6883e-01,9.0832e-01,3.8268e-01,1.6883e-01,9.0832e-01,3.8268e-01,1.7651e-01,9.4966e-01,2.5882e-01,5.9133e-02,9.6411e-01,2.5882e-01,5.6559e-02,9.2215e-01,3.8268e-01,5.6559e-02,9.2215e-01,3.8268e-01,5.9133e-02,9.6411e-01,2.5882e-01,-5.9133e-02,9.6411e-01,2.5882e-01};
			return value;
		}
		private double[] getNormal_7_820_vector_5()
		{
			double[] value = {-5.6559e-02,9.2215e-01,3.8268e-01,-5.6559e-02,9.2215e-01,3.8268e-01,-5.9133e-02,9.6411e-01,2.5882e-01,-1.7651e-01,9.4966e-01,2.5882e-01,-1.6883e-01,9.0832e-01,3.8268e-01,-1.6883e-01,9.0832e-01,3.8268e-01,-1.7651e-01,9.4966e-01,2.5882e-01,-2.9125e-01,9.2097e-01,2.5882e-01,-2.7857e-01,8.8088e-01,3.8268e-01,-2.7857e-01,8.8088e-01,3.8268e-01,-2.9125e-01,9.2097e-01,2.5882e-01,-4.0161e-01,8.7848e-01,2.5882e-01,-3.8413e-01,8.4024e-01,3.8268e-01,-3.8413e-01,8.4024e-01,3.8268e-01,-4.0161e-01,8.7848e-01,2.5882e-01,-5.0596e-01,8.2281e-01,2.5882e-01,-4.8394e-01,7.8699e-01,3.8268e-01,-4.8383e-01,8.3602e-01,2.5882e-01,-4.6957e-01,8.0980e-01,3.5174e-01,-4.6375e-01,7.9906e-01,3.8268e-01,5.0596e-01,8.2281e-01,2.5882e-01,5.1933e-01,8.4455e-01,1.3053e-01,4.1222e-01,9.0168e-01,1.3053e-01,4.0161e-01,8.7848e-01,2.5882e-01,4.8383e-01,8.3602e-01,2.5882e-01,4.8629e-01,8.4061e-01,2.3852e-01,4.9596e-01,8.5848e-01,1.3053e-01,4.0161e-01,8.7848e-01,2.5882e-01,4.1222e-01,9.0168e-01,1.3053e-01,2.9894e-01,9.4530e-01,1.3053e-01,2.9125e-01,9.2097e-01,2.5882e-01,2.9125e-01,9.2097e-01,2.5882e-01,2.9894e-01,9.4530e-01,1.3053e-01,1.8118e-01,9.7475e-01,1.3053e-01,1.7651e-01,9.4966e-01,2.5882e-01,1.7651e-01,9.4966e-01,2.5882e-01,1.8118e-01,9.7475e-01,1.3053e-01,6.0695e-02,9.8959e-01,1.3053e-01,5.9133e-02,9.6411e-01,2.5882e-01,5.9133e-02,9.6411e-01,2.5882e-01,6.0695e-02,9.8959e-01,1.3053e-01,-6.0695e-02,9.8959e-01,1.3053e-01,-5.9133e-02,9.6411e-01,2.5882e-01,-5.9133e-02,9.6411e-01,2.5882e-01,-6.0695e-02,9.8959e-01,1.3053e-01,-1.8118e-01,9.7475e-01,1.3053e-01,-1.7651e-01,9.4966e-01,2.5882e-01,-1.7651e-01,9.4966e-01,2.5882e-01,-1.8118e-01,9.7475e-01,1.3053e-01,-2.9894e-01,9.4530e-01,1.3053e-01,-2.9125e-01,9.2097e-01,2.5882e-01,-2.9125e-01,9.2097e-01,2.5882e-01,-2.9894e-01,9.4530e-01,1.3053e-01,-4.1222e-01,9.0168e-01,1.3053e-01,-4.0161e-01,8.7848e-01,2.5882e-01,-4.0161e-01,8.7848e-01,2.5882e-01,-4.1222e-01,9.0168e-01,1.3053e-01,-5.1933e-01,8.4455e-01,1.3053e-01,-5.0596e-01,8.2281e-01,2.5882e-01,-4.9596e-01,8.5848e-01,1.3053e-01,-4.8629e-01,8.4061e-01,2.3852e-01,-4.8383e-01,8.3602e-01,2.5882e-01,5.1933e-01,8.4455e-01,1.3053e-01,5.2381e-01,8.5184e-01,-6.1232e-17,4.1578e-01,9.0946e-01,-6.1232e-17,4.1222e-01,9.0168e-01,1.3053e-01,4.9596e-01,8.5848e-01,1.3053e-01,4.9653e-01,8.5957e-01,1.2082e-01,5.0000e-01,8.6603e-01,-6.1232e-17,4.1222e-01,9.0168e-01,1.3053e-01,4.1578e-01,9.0946e-01,-6.1232e-17,3.0152e-01,9.5346e-01,-6.1232e-17,2.9894e-01,9.4530e-01,1.3053e-01,2.9894e-01,9.4530e-01,1.3053e-01,3.0152e-01,9.5346e-01,-6.1232e-17,1.8274e-01,9.8316e-01,-6.1232e-17,1.8118e-01,9.7475e-01,1.3053e-01,1.8118e-01,9.7475e-01,1.3053e-01,1.8274e-01,9.8316e-01,-6.1232e-17,6.1219e-02,9.9812e-01,-6.1232e-17,6.0695e-02,9.8959e-01,1.3053e-01,6.0695e-02,9.8959e-01,1.3053e-01,6.1219e-02,9.9812e-01,-6.1232e-17,-6.1219e-02,9.9812e-01,-6.1232e-17,-6.0695e-02,9.8959e-01,1.3053e-01,-6.0695e-02,9.8959e-01,1.3053e-01,-6.1219e-02,9.9812e-01,-6.1232e-17,-1.8274e-01,9.8316e-01,-6.1232e-17,-1.8118e-01,9.7475e-01,1.3053e-01,-1.8118e-01,9.7475e-01,1.3053e-01,-1.8274e-01,9.8316e-01,-6.1232e-17,-3.0152e-01,9.5346e-01,-6.1232e-17,-2.9894e-01,9.4530e-01,1.3053e-01,-2.9894e-01,9.4530e-01,1.3053e-01,-3.0152e-01,9.5346e-01,-6.1232e-17,-4.1578e-01,9.0946e-01,-6.1232e-17,-4.1222e-01,9.0168e-01,1.3053e-01,-4.1222e-01,9.0168e-01,1.3053e-01,-4.1578e-01,9.0946e-01,-6.1232e-17,-5.2381e-01,8.5184e-01,-6.1232e-17};
			return value;
		}
		private double[] getNormal_7_820_vector_6()
		{
			double[] value = {-5.1933e-01,8.4455e-01,1.3053e-01,-5.0000e-01,8.6603e-01,-6.1232e-17,-4.9653e-01,8.5957e-01,1.2082e-01,-4.9596e-01,8.5848e-01,1.3053e-01};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_826_point_1()
		{
			double[] value = {-3.7500e+00,-3.2866e+00,5.1959e+00,3.7500e+00,-3.2866e+00,5.1959e+00,3.7500e+00,-3.2951e+00,5.1664e+00,-3.7500e+00,-3.2951e+00,5.1664e+00,-3.5145e+00,-3.2951e+00,5.1664e+00,-3.5059e+00,-3.2866e+00,5.1959e+00,3.5059e+00,-3.2866e+00,5.1959e+00,3.5145e+00,-3.2951e+00,5.1664e+00,-3.7500e+00,-3.2951e+00,5.1664e+00,3.7500e+00,-3.2951e+00,5.1664e+00,3.7500e+00,-3.3071e+00,5.1381e+00,-3.7500e+00,-3.3071e+00,5.1381e+00,3.5145e+00,-3.2951e+00,5.1664e+00,3.5148e+00,-3.2955e+00,5.1652e+00,3.5266e+00,-3.3071e+00,5.1381e+00,-3.5266e+00,-3.3071e+00,5.1381e+00,-3.5148e+00,-3.2955e+00,5.1652e+00,-3.5145e+00,-3.2951e+00,5.1664e+00,-3.7500e+00,-3.3071e+00,5.1381e+00,3.7500e+00,-3.3071e+00,5.1381e+00,3.7500e+00,-3.3225e+00,5.1115e+00,-3.7500e+00,-3.3225e+00,5.1115e+00,3.5266e+00,-3.3071e+00,5.1381e+00,3.5281e+00,-3.3087e+00,5.1349e+00,3.5422e+00,-3.3225e+00,5.1115e+00,-3.5422e+00,-3.3225e+00,5.1115e+00,-3.5281e+00,-3.3087e+00,5.1349e+00,-3.5266e+00,-3.3071e+00,5.1381e+00,-3.7500e+00,-3.3225e+00,5.1115e+00,3.7500e+00,-3.3225e+00,5.1115e+00,3.7500e+00,-3.3411e+00,5.0870e+00,-3.7500e+00,-3.3411e+00,5.0870e+00,3.5422e+00,-3.3225e+00,5.1115e+00,3.5458e+00,-3.3265e+00,5.1058e+00,3.5608e+00,-3.3411e+00,5.0870e+00,-3.5608e+00,-3.3411e+00,5.0870e+00,-3.5458e+00,-3.3265e+00,5.1058e+00,-3.5422e+00,-3.3225e+00,5.1115e+00,-3.7500e+00,-3.3411e+00,5.0870e+00,3.7500e+00,-3.3411e+00,5.0870e+00,3.7500e+00,-3.3625e+00,5.0650e+00,-3.7500e+00,-3.3625e+00,5.0650e+00,3.5608e+00,-3.3411e+00,5.0870e+00,3.5678e+00,-3.3484e+00,5.0789e+00,3.5822e+00,-3.3625e+00,5.0650e+00,-3.5822e+00,-3.3625e+00,5.0650e+00,-3.5678e+00,-3.3484e+00,5.0789e+00,-3.5608e+00,-3.3411e+00,5.0870e+00,-3.7500e+00,-3.3625e+00,5.0650e+00,3.7500e+00,-3.3625e+00,5.0650e+00,3.7500e+00,-3.3864e+00,5.0458e+00,-3.7500e+00,-3.3864e+00,5.0458e+00,3.5822e+00,-3.3625e+00,5.0650e+00,3.5935e+00,-3.3742e+00,5.0550e+00,3.6061e+00,-3.3864e+00,5.0458e+00,-3.6061e+00,-3.3864e+00,5.0458e+00,-3.5935e+00,-3.3742e+00,5.0550e+00,-3.5822e+00,-3.3625e+00,5.0650e+00,-3.7500e+00,-3.3864e+00,5.0458e+00,3.7500e+00,-3.3864e+00,5.0458e+00,3.7500e+00,-3.4126e+00,5.0296e+00,-3.7500e+00,-3.4126e+00,5.0296e+00,3.6061e+00,-3.3864e+00,5.0458e+00,3.6224e+00,-3.4030e+00,5.0350e+00,3.6322e+00,-3.4126e+00,5.0296e+00,-3.6322e+00,-3.4126e+00,5.0296e+00,-3.6224e+00,-3.4030e+00,5.0350e+00,-3.6061e+00,-3.3864e+00,5.0458e+00,-3.7500e+00,-3.4126e+00,5.0296e+00,3.7500e+00,-3.4126e+00,5.0296e+00,3.7500e+00,-3.4405e+00,5.0168e+00,-3.7500e+00,-3.4405e+00,5.0168e+00,3.6322e+00,-3.4126e+00,5.0296e+00,3.6534e+00,-3.4340e+00,5.0194e+00,3.6600e+00,-3.4405e+00,5.0168e+00,-3.6600e+00,-3.4405e+00,5.0168e+00,-3.6534e+00,-3.4340e+00,5.0194e+00,-3.6322e+00,-3.4126e+00,5.0296e+00,-3.7500e+00,-3.4405e+00,5.0168e+00,3.7500e+00,-3.4405e+00,5.0168e+00,3.7500e+00,-3.4698e+00,5.0075e+00,-3.7500e+00,-3.4698e+00,5.0075e+00,3.6600e+00,-3.4405e+00,5.0168e+00,3.6856e+00,-3.4663e+00,5.0084e+00,3.6892e+00,-3.4698e+00,5.0075e+00,-3.6892e+00,-3.4698e+00,5.0075e+00,-3.6856e+00,-3.4663e+00,5.0084e+00,-3.6600e+00,-3.4405e+00,5.0168e+00,-3.7500e+00,-3.4698e+00,5.0075e+00,3.7500e+00,-3.4698e+00,5.0075e+00,3.7500e+00,-3.5000e+00,5.0019e+00,-3.7500e+00,-3.5000e+00,5.0019e+00,3.6892e+00,-3.4698e+00,5.0075e+00,3.7181e+00,-3.4988e+00,5.0020e+00,3.7193e+00,-3.5000e+00,5.0019e+00,-3.7193e+00,-3.5000e+00,5.0019e+00,-3.7181e+00,-3.4988e+00,5.0020e+00,-3.6892e+00,-3.4698e+00,5.0075e+00,-3.7500e+00,-3.5000e+00,5.0019e+00,3.7500e+00,-3.5000e+00,5.0019e+00};
			return value;
		}
		private double[] getCoordinate_7_826_point_2()
		{
			double[] value = {3.7500e+00,-3.5306e+00,5.0000e+00,-3.7500e+00,-3.5306e+00,5.0000e+00,3.7193e+00,-3.5000e+00,5.0019e+00,3.7500e+00,-3.5306e+00,5.0000e+00,-3.7500e+00,-3.5306e+00,5.0000e+00,-3.7193e+00,-3.5000e+00,5.0019e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_827_vector_1()
		{
			double[] value = {-2.2861e-16,-9.7630e-01,2.1644e-01,-2.2861e-16,-9.7630e-01,2.1644e-01,-2.2067e-16,-9.4238e-01,3.3455e-01,-2.2067e-16,-9.4238e-01,3.3455e-01,-2.2067e-16,-9.4238e-01,3.3455e-01,-2.2861e-16,-9.7630e-01,2.1644e-01,-2.2861e-16,-9.7630e-01,2.1644e-01,-2.2067e-16,-9.4238e-01,3.3455e-01,-2.2067e-16,-9.4238e-01,3.3455e-01,-2.2067e-16,-9.4238e-01,3.3455e-01,-2.0939e-16,-8.9423e-01,4.4762e-01,-2.0939e-16,-8.9423e-01,4.4762e-01,-2.2067e-16,-9.4238e-01,3.3455e-01,-2.2028e-16,-9.4074e-01,3.3913e-01,-2.0939e-16,-8.9423e-01,4.4762e-01,-2.0939e-16,-8.9423e-01,4.4762e-01,-2.2028e-16,-9.4074e-01,3.3913e-01,-2.2067e-16,-9.4238e-01,3.3455e-01,-2.0939e-16,-8.9423e-01,4.4762e-01,-2.0939e-16,-8.9423e-01,4.4762e-01,-1.9495e-16,-8.3257e-01,5.5392e-01,-1.9495e-16,-8.3257e-01,5.5392e-01,-2.0939e-16,-8.9423e-01,4.4762e-01,-2.0785e-16,-8.8765e-01,4.6052e-01,-1.9495e-16,-8.3257e-01,5.5392e-01,-1.9495e-16,-8.3257e-01,5.5392e-01,-2.0785e-16,-8.8765e-01,4.6052e-01,-2.0939e-16,-8.9423e-01,4.4762e-01,-1.9495e-16,-8.3257e-01,5.5392e-01,-1.9495e-16,-8.3257e-01,5.5392e-01,-1.7757e-16,-7.5834e-01,6.5186e-01,-1.7757e-16,-7.5834e-01,6.5186e-01,-1.9495e-16,-8.3257e-01,5.5392e-01,-1.9126e-16,-8.1678e-01,5.7694e-01,-1.7757e-16,-7.5834e-01,6.5186e-01,-1.7757e-16,-7.5834e-01,6.5186e-01,-1.9126e-16,-8.1678e-01,5.7694e-01,-1.9495e-16,-8.3257e-01,5.5392e-01,-1.7757e-16,-7.5834e-01,6.5186e-01,-1.7757e-16,-7.5834e-01,6.5186e-01,-1.5751e-16,-6.7266e-01,7.3995e-01,-1.5751e-16,-6.7266e-01,7.3995e-01,-1.7757e-16,-7.5834e-01,6.5186e-01,-1.7068e-16,-7.2892e-01,6.8459e-01,-1.5751e-16,-6.7266e-01,7.3995e-01,-1.5751e-16,-6.7266e-01,7.3995e-01,-1.7068e-16,-7.2892e-01,6.8459e-01,-1.7757e-16,-7.5834e-01,6.5186e-01,-1.5751e-16,-6.7266e-01,7.3995e-01,-1.5751e-16,-6.7266e-01,7.3995e-01,-1.3507e-16,-5.7682e-01,8.1687e-01,-1.3507e-16,-5.7682e-01,8.1687e-01,-1.5751e-16,-6.7266e-01,7.3995e-01,-1.4657e-16,-6.2592e-01,7.7988e-01,-1.3507e-16,-5.7682e-01,8.1687e-01,-1.3507e-16,-5.7682e-01,8.1687e-01,-1.4657e-16,-6.2592e-01,7.7988e-01,-1.5751e-16,-6.7266e-01,7.3995e-01,-1.3507e-16,-5.7682e-01,8.1687e-01,-1.3507e-16,-5.7682e-01,8.1687e-01,-1.1059e-16,-4.7227e-01,8.8145e-01,-1.1059e-16,-4.7227e-01,8.8145e-01,-1.3507e-16,-5.7682e-01,8.1687e-01,-1.1956e-16,-5.1060e-01,8.5982e-01,-1.1059e-16,-4.7227e-01,8.8145e-01,-1.1059e-16,-4.7227e-01,8.8145e-01,-1.1956e-16,-5.1060e-01,8.5982e-01,-1.3507e-16,-5.7682e-01,8.1687e-01,-1.1059e-16,-4.7227e-01,8.8145e-01,-1.1059e-16,-4.7227e-01,8.8145e-01,-8.4435e-17,-3.6059e-01,9.3272e-01,-8.4435e-17,-3.6059e-01,9.3272e-01,-1.1059e-16,-4.7227e-01,8.8145e-01,-9.0499e-17,-3.8648e-01,9.2230e-01,-8.4435e-17,-3.6059e-01,9.3272e-01,-8.4435e-17,-3.6059e-01,9.3272e-01,-9.0499e-17,-3.8648e-01,9.2230e-01,-1.1059e-16,-4.7227e-01,8.8145e-01,-8.4435e-17,-3.6059e-01,9.3272e-01,-8.4435e-17,-3.6059e-01,9.3272e-01,-5.7008e-17,-2.4346e-01,9.6991e-01,-5.7008e-17,-2.4346e-01,9.6991e-01,-8.4435e-17,-3.6059e-01,9.3272e-01,-6.0292e-17,-2.5748e-01,9.6628e-01,-5.7008e-17,-2.4346e-01,9.6991e-01,-5.7008e-17,-2.4346e-01,9.6991e-01,-6.0292e-17,-2.5748e-01,9.6628e-01,-8.4435e-17,-3.6059e-01,9.3272e-01,-5.7008e-17,-2.4346e-01,9.6991e-01,-5.7008e-17,-2.4346e-01,9.6991e-01,-2.8721e-17,-1.2266e-01,9.9245e-01,-2.8721e-17,-1.2266e-01,9.9245e-01,-5.7008e-17,-2.4346e-01,9.6991e-01,-2.9851e-17,-1.2748e-01,9.9184e-01,-2.8721e-17,-1.2266e-01,9.9245e-01,-2.8721e-17,-1.2266e-01,9.9245e-01,-2.9851e-17,-1.2748e-01,9.9184e-01,-5.7008e-17,-2.4346e-01,9.6991e-01,-2.8721e-17,-1.2266e-01,9.9245e-01,-2.8721e-17,-1.2266e-01,9.9245e-01};
			return value;
		}
		private double[] getNormal_7_827_vector_2()
		{
			double[] value = {8.1756e-31,3.4915e-15,1.0000e+00,8.1756e-31,3.4915e-15,1.0000e+00,-2.8721e-17,-1.2266e-01,9.9245e-01,8.1756e-31,3.4915e-15,1.0000e+00,8.1756e-31,3.4915e-15,1.0000e+00,-2.8721e-17,-1.2266e-01,9.9245e-01};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_833_point_1()
		{
			double[] value = {-2.5000e+00,2.4721e+00,5.2500e+00,-2.5000e+00,-1.2199e+00,5.2500e+00,-2.5021e+00,-1.2199e+00,5.2174e+00,-2.5021e+00,2.4721e+00,5.2174e+00,-2.5021e+00,2.3315e+00,5.2174e+00,-2.5018e+00,2.3312e+00,5.2198e+00,-2.5000e+00,2.3301e+00,5.2500e+00,-2.5000e+00,-1.2199e+00,5.2500e+00,-2.5012e+00,-1.2188e+00,5.2259e+00,-2.5021e+00,-1.2175e+00,5.2174e+00,-2.5021e+00,2.4721e+00,5.2174e+00,-2.5021e+00,-1.2199e+00,5.2174e+00,-2.5085e+00,-1.2199e+00,5.1853e+00,-2.5085e+00,2.4721e+00,5.1853e+00,-2.5021e+00,-1.2175e+00,5.2174e+00,-2.5047e+00,-1.2152e+00,5.2017e+00,-2.5085e+00,-1.2112e+00,5.1853e+00,-2.5085e+00,2.3353e+00,5.1853e+00,-2.5072e+00,2.3344e+00,5.1904e+00,-2.5021e+00,2.3315e+00,5.2174e+00,-2.5085e+00,2.4721e+00,5.1853e+00,-2.5085e+00,-1.2199e+00,5.1853e+00,-2.5190e+00,-1.2199e+00,5.1543e+00,-2.5190e+00,2.4721e+00,5.1543e+00,-2.5085e+00,-1.2112e+00,5.1853e+00,-2.5107e+00,-1.2093e+00,5.1777e+00,-2.5190e+00,-1.2009e+00,5.1543e+00,-2.5190e+00,2.3415e+00,5.1543e+00,-2.5160e+00,2.3395e+00,5.1621e+00,-2.5085e+00,2.3353e+00,5.1853e+00,-2.5190e+00,2.4721e+00,5.1543e+00,-2.5190e+00,-1.2199e+00,5.1543e+00,-2.5335e+00,-1.2199e+00,5.1250e+00,-2.5335e+00,2.4721e+00,5.1250e+00,-2.5190e+00,-1.2009e+00,5.1543e+00,-2.5297e+00,-1.1903e+00,5.1319e+00,-2.5335e+00,-1.1862e+00,5.1250e+00,-2.5335e+00,2.3498e+00,5.1250e+00,-2.5279e+00,2.3464e+00,5.1353e+00,-2.5190e+00,2.3415e+00,5.1543e+00,-2.5335e+00,2.4721e+00,5.1250e+00,-2.5335e+00,-1.2199e+00,5.1250e+00,-2.5517e+00,-1.2199e+00,5.0978e+00,-2.5517e+00,2.4721e+00,5.0978e+00,-2.5335e+00,-1.1862e+00,5.1250e+00,-2.5424e+00,-1.1775e+00,5.1107e+00,-2.5517e+00,-1.1681e+00,5.0978e+00,-2.5517e+00,2.3601e+00,5.0978e+00,-2.5427e+00,2.3548e+00,5.1103e+00,-2.5335e+00,2.3498e+00,5.1250e+00,-2.5517e+00,2.4721e+00,5.0978e+00,-2.5517e+00,-1.2199e+00,5.0978e+00,-2.5732e+00,-1.2199e+00,5.0732e+00,-2.5732e+00,2.4721e+00,5.0732e+00,-2.5517e+00,-1.1681e+00,5.0978e+00,-2.5570e+00,-1.1629e+00,5.0911e+00,-2.5732e+00,-1.1467e+00,5.0732e+00,-2.5732e+00,2.3723e+00,5.0732e+00,-2.5599e+00,2.3646e+00,5.0876e+00,-2.5517e+00,2.3601e+00,5.0978e+00,-2.5732e+00,2.4721e+00,5.0732e+00,-2.5732e+00,-1.2199e+00,5.0732e+00,-2.5978e+00,-1.2199e+00,5.0517e+00,-2.5978e+00,2.4721e+00,5.0517e+00,-2.5732e+00,-1.1467e+00,5.0732e+00,-2.5978e+00,-1.1219e+00,5.0517e+00,-2.5978e+00,2.3864e+00,5.0517e+00,-2.5794e+00,2.3757e+00,5.0673e+00,-2.5732e+00,2.3723e+00,5.0732e+00,-2.5978e+00,2.4721e+00,5.0517e+00,-2.5978e+00,-1.2199e+00,5.0517e+00,-2.6250e+00,-1.2199e+00,5.0335e+00,-2.6250e+00,2.4721e+00,5.0335e+00,-2.5978e+00,-1.1219e+00,5.0517e+00,-2.6027e+00,-1.1173e+00,5.0480e+00,-2.6250e+00,-1.0946e+00,5.0335e+00,-2.6250e+00,2.4018e+00,5.0335e+00,-2.6042e+00,2.3899e+00,5.0469e+00,-2.5978e+00,2.3864e+00,5.0517e+00,-2.6250e+00,2.4721e+00,5.0335e+00,-2.6250e+00,-1.2199e+00,5.0335e+00,-2.6543e+00,-1.2199e+00,5.0190e+00,-2.6543e+00,2.4721e+00,5.0190e+00,-2.6250e+00,-1.0946e+00,5.0335e+00,-2.6363e+00,-1.0837e+00,5.0274e+00,-2.6543e+00,-1.0653e+00,5.0190e+00,-2.6543e+00,2.4184e+00,5.0190e+00,-2.6311e+00,2.4052e+00,5.0301e+00,-2.6250e+00,2.4018e+00,5.0335e+00,-2.6543e+00,2.4721e+00,5.0190e+00,-2.6543e+00,-1.2199e+00,5.0190e+00,-2.6853e+00,-1.2199e+00,5.0085e+00,-2.6853e+00,2.4721e+00,5.0085e+00,-2.6543e+00,-1.0653e+00,5.0190e+00,-2.6730e+00,-1.0470e+00,5.0122e+00,-2.6853e+00,-1.0345e+00,5.0085e+00,-2.6853e+00,2.4358e+00,5.0085e+00,-2.6595e+00,2.4213e+00,5.0169e+00,-2.6543e+00,2.4184e+00,5.0190e+00,-2.6853e+00,2.4721e+00,5.0085e+00};
			return value;
		}
		private double[] getCoordinate_7_833_point_2()
		{
			double[] value = {-2.6853e+00,-1.2199e+00,5.0085e+00,-2.7174e+00,-1.2199e+00,5.0021e+00,-2.7174e+00,2.4721e+00,5.0021e+00,-2.6853e+00,-1.0345e+00,5.0085e+00,-2.7114e+00,-1.0086e+00,5.0030e+00,-2.7174e+00,-1.0025e+00,5.0021e+00,-2.7174e+00,2.4539e+00,5.0021e+00,-2.6891e+00,2.4380e+00,5.0075e+00,-2.6853e+00,2.4358e+00,5.0085e+00,-2.7174e+00,2.4721e+00,5.0021e+00,-2.7174e+00,-1.2199e+00,5.0021e+00,-2.7500e+00,-1.2199e+00,5.0000e+00,-2.7500e+00,2.4721e+00,5.0000e+00,-2.7174e+00,-1.0025e+00,5.0021e+00,-2.7500e+00,-9.6995e-01,5.0000e+00,-2.7500e+00,2.4721e+00,5.0000e+00,-2.7194e+00,2.4550e+00,5.0019e+00,-2.7174e+00,2.4539e+00,5.0021e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_834_vector_1()
		{
			double[] value = {-1.0000e+00,-0.0000e+00,6.1232e-17,-1.0000e+00,-0.0000e+00,6.1232e-17,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9268e-01,-0.0000e+00,1.2081e-01,-1.0000e+00,-0.0000e+00,6.1232e-17,-1.0000e+00,-0.0000e+00,6.1232e-17,-9.9535e-01,-0.0000e+00,9.6365e-02,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.8116e-01,-0.0000e+00,1.9322e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.7114e-01,-0.0000e+00,2.3852e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.5729e-01,-0.0000e+00,2.8914e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.3610e-01,-0.0000e+00,3.5174e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-8.8136e-01,-0.0000e+00,4.7245e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.8846e-01,-0.0000e+00,4.5896e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.3041e-01,-0.0000e+00,5.5716e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-8.2936e-01,-0.0000e+00,5.5871e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.7196e-01,-0.0000e+00,6.3568e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.6021e-01,-0.0000e+00,6.4968e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.8255e-01,-0.0000e+00,7.3084e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-5.8936e-01,-0.0000e+00,8.0787e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.8307e-01,-0.0000e+00,8.1242e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-4.5487e-01,-0.0000e+00,8.9056e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-4.7563e-01,-0.0000e+00,8.7964e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.0808e-01,-0.0000e+00,9.5136e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-3.6189e-01,-0.0000e+00,9.3222e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-2.5882e-01,-0.0000e+00,9.6593e-01};
			return value;
		}
		private double[] getNormal_7_834_vector_2()
		{
			double[] value = {-2.5882e-01,-0.0000e+00,9.6593e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-1.5451e-01,-0.0000e+00,9.8799e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-2.4353e-01,-0.0000e+00,9.6989e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-1.3053e-01,-0.0000e+00,9.9144e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-1.2232e-01,-0.0000e+00,9.9249e-01,-1.3053e-01,-0.0000e+00,9.9144e-01};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_840_point_1()
		{
			double[] value = {-3.7500e+00,-3.5306e+00,5.0000e+00,-3.7500e+00,-9.6995e-01,5.0000e+00,-3.7174e+00,-9.6995e-01,5.0021e+00,-3.7174e+00,-3.5306e+00,5.0021e+00,-3.7174e+00,-3.4980e+00,5.0021e+00,-3.7181e+00,-3.4988e+00,5.0020e+00,-3.7500e+00,-3.5306e+00,5.0000e+00,-3.7500e+00,-9.6995e-01,5.0000e+00,-3.7174e+00,-1.0025e+00,5.0021e+00,-3.7174e+00,-3.5306e+00,5.0021e+00,-3.7174e+00,-9.6995e-01,5.0021e+00,-3.6853e+00,-9.6995e-01,5.0085e+00,-3.6853e+00,-3.5306e+00,5.0085e+00,-3.6853e+00,-3.4659e+00,5.0085e+00,-3.6856e+00,-3.4663e+00,5.0084e+00,-3.7174e+00,-3.4980e+00,5.0021e+00,-3.7174e+00,-1.0025e+00,5.0021e+00,-3.7114e+00,-1.0086e+00,5.0030e+00,-3.6853e+00,-1.0345e+00,5.0085e+00,-3.6853e+00,-3.5306e+00,5.0085e+00,-3.6853e+00,-9.6995e-01,5.0085e+00,-3.6543e+00,-9.6995e-01,5.0190e+00,-3.6543e+00,-3.5306e+00,5.0190e+00,-3.6543e+00,-3.4350e+00,5.0190e+00,-3.6853e+00,-3.4659e+00,5.0085e+00,-3.6853e+00,-1.0345e+00,5.0085e+00,-3.6730e+00,-1.0470e+00,5.0122e+00,-3.6543e+00,-1.0653e+00,5.0190e+00,-3.6543e+00,-3.5306e+00,5.0190e+00,-3.6543e+00,-9.6995e-01,5.0190e+00,-3.6250e+00,-9.6995e-01,5.0335e+00,-3.6250e+00,-3.5306e+00,5.0335e+00,-3.6250e+00,-3.4057e+00,5.0335e+00,-3.6534e+00,-3.4340e+00,5.0194e+00,-3.6543e+00,-3.4350e+00,5.0190e+00,-3.6543e+00,-1.0653e+00,5.0190e+00,-3.6363e+00,-1.0837e+00,5.0274e+00,-3.6250e+00,-1.0946e+00,5.0335e+00,-3.6250e+00,-3.5306e+00,5.0335e+00,-3.6250e+00,-9.6995e-01,5.0335e+00,-3.5978e+00,-9.6995e-01,5.0517e+00,-3.5978e+00,-3.5306e+00,5.0517e+00,-3.5978e+00,-3.3786e+00,5.0517e+00,-3.6224e+00,-3.4030e+00,5.0350e+00,-3.6250e+00,-3.4057e+00,5.0335e+00,-3.6250e+00,-1.0946e+00,5.0335e+00,-3.6027e+00,-1.1173e+00,5.0480e+00,-3.5978e+00,-1.1219e+00,5.0517e+00,-3.5978e+00,-3.5306e+00,5.0517e+00,-3.5978e+00,-9.6995e-01,5.0517e+00,-3.5732e+00,-9.6995e-01,5.0732e+00,-3.5732e+00,-3.5306e+00,5.0732e+00,-3.5732e+00,-3.3542e+00,5.0732e+00,-3.5935e+00,-3.3742e+00,5.0550e+00,-3.5978e+00,-3.3786e+00,5.0517e+00,-3.5978e+00,-1.1219e+00,5.0517e+00,-3.5732e+00,-1.1467e+00,5.0732e+00,-3.5732e+00,-3.5306e+00,5.0732e+00,-3.5732e+00,-9.6995e-01,5.0732e+00,-3.5517e+00,-9.6995e-01,5.0978e+00,-3.5517e+00,-3.5306e+00,5.0978e+00,-3.5517e+00,-3.3327e+00,5.0978e+00,-3.5678e+00,-3.3484e+00,5.0789e+00,-3.5732e+00,-3.3542e+00,5.0732e+00,-3.5732e+00,-1.1467e+00,5.0732e+00,-3.5570e+00,-1.1629e+00,5.0911e+00,-3.5517e+00,-1.1681e+00,5.0978e+00,-3.5517e+00,-3.5306e+00,5.0978e+00,-3.5517e+00,-9.6995e-01,5.0978e+00,-3.5335e+00,-9.6995e-01,5.1250e+00,-3.5335e+00,-3.5306e+00,5.1250e+00,-3.5335e+00,-3.3146e+00,5.1250e+00,-3.5458e+00,-3.3265e+00,5.1058e+00,-3.5517e+00,-3.3327e+00,5.0978e+00,-3.5517e+00,-1.1681e+00,5.0978e+00,-3.5424e+00,-1.1775e+00,5.1107e+00,-3.5335e+00,-1.1862e+00,5.1250e+00,-3.5335e+00,-3.5306e+00,5.1250e+00,-3.5335e+00,-9.6995e-01,5.1250e+00,-3.5190e+00,-9.6995e-01,5.1543e+00,-3.5190e+00,-3.5306e+00,5.1543e+00,-3.5190e+00,-3.3001e+00,5.1543e+00,-3.5281e+00,-3.3087e+00,5.1349e+00,-3.5335e+00,-3.3146e+00,5.1250e+00,-3.5335e+00,-1.1862e+00,5.1250e+00,-3.5297e+00,-1.1903e+00,5.1319e+00,-3.5190e+00,-1.2009e+00,5.1543e+00,-3.5190e+00,-3.5306e+00,5.1543e+00,-3.5190e+00,-9.6995e-01,5.1543e+00,-3.5085e+00,-9.6995e-01,5.1853e+00,-3.5085e+00,-3.5306e+00,5.1853e+00,-3.5085e+00,-3.2896e+00,5.1853e+00,-3.5148e+00,-3.2955e+00,5.1652e+00,-3.5190e+00,-3.3001e+00,5.1543e+00,-3.5190e+00,-1.2009e+00,5.1543e+00,-3.5107e+00,-1.2093e+00,5.1777e+00,-3.5085e+00,-1.2112e+00,5.1853e+00,-3.5085e+00,-3.5306e+00,5.1853e+00,-3.5085e+00,-9.6995e-01,5.1853e+00,-3.5021e+00,-9.6995e-01,5.2174e+00};
			return value;
		}
		private double[] getCoordinate_7_840_point_2()
		{
			double[] value = {-3.5021e+00,-3.5306e+00,5.2174e+00,-3.5021e+00,-3.2818e+00,5.2174e+00,-3.5059e+00,-3.2866e+00,5.1959e+00,-3.5085e+00,-3.2896e+00,5.1853e+00,-3.5085e+00,-1.2112e+00,5.1853e+00,-3.5047e+00,-1.2152e+00,5.2017e+00,-3.5021e+00,-1.2175e+00,5.2174e+00,-3.5021e+00,-3.5306e+00,5.2174e+00,-3.5021e+00,-9.6995e-01,5.2174e+00,-3.5000e+00,-9.6995e-01,5.2500e+00,-3.5000e+00,-3.5306e+00,5.2500e+00,-3.5021e+00,-1.2175e+00,5.2174e+00,-3.5012e+00,-1.2188e+00,5.2259e+00,-3.5000e+00,-1.2199e+00,5.2500e+00,-3.5000e+00,-3.2746e+00,5.2500e+00,-3.5015e+00,-3.2806e+00,5.2228e+00,-3.5021e+00,-3.2818e+00,5.2174e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_841_vector_1()
		{
			double[] value = {-1.0490e-15,1.1695e-31,1.0000e+00,-1.0490e-15,1.1695e-31,1.0000e+00,-1.3053e-01,1.4552e-17,9.9144e-01,-1.3053e-01,1.4552e-17,9.9144e-01,-1.3053e-01,1.4552e-17,9.9144e-01,-1.2748e-01,1.4212e-17,9.9184e-01,-1.0490e-15,1.1695e-31,1.0000e+00,-1.0490e-15,1.1695e-31,1.0000e+00,-1.3053e-01,1.4552e-17,9.9144e-01,-1.3053e-01,1.4552e-17,9.9144e-01,-1.3053e-01,1.4552e-17,9.9144e-01,-2.5882e-01,2.8855e-17,9.6593e-01,-2.5882e-01,2.8855e-17,9.6593e-01,-2.5882e-01,2.8855e-17,9.6593e-01,-2.5748e-01,2.8706e-17,9.6628e-01,-1.3053e-01,1.4552e-17,9.9144e-01,-1.3053e-01,1.4552e-17,9.9144e-01,-1.5451e-01,1.7226e-17,9.8799e-01,-2.5882e-01,2.8855e-17,9.6593e-01,-2.5882e-01,2.8855e-17,9.6593e-01,-2.5882e-01,2.8855e-17,9.6593e-01,-3.8268e-01,4.2665e-17,9.2388e-01,-3.8268e-01,4.2665e-17,9.2388e-01,-3.8268e-01,4.2665e-17,9.2388e-01,-2.5882e-01,2.8855e-17,9.6593e-01,-2.5882e-01,2.8855e-17,9.6593e-01,-3.0808e-01,3.4347e-17,9.5136e-01,-3.8268e-01,4.2665e-17,9.2388e-01,-3.8268e-01,4.2665e-17,9.2388e-01,-3.8268e-01,4.2665e-17,9.2388e-01,-5.0000e-01,5.5744e-17,8.6603e-01,-5.0000e-01,5.5744e-17,8.6603e-01,-5.0000e-01,5.5744e-17,8.6603e-01,-3.8648e-01,4.3088e-17,9.2230e-01,-3.8268e-01,4.2665e-17,9.2388e-01,-3.8268e-01,4.2665e-17,9.2388e-01,-4.5487e-01,5.0712e-17,8.9056e-01,-5.0000e-01,5.5744e-17,8.6603e-01,-5.0000e-01,5.5744e-17,8.6603e-01,-5.0000e-01,5.5744e-17,8.6603e-01,-6.0876e-01,6.7869e-17,7.9335e-01,-6.0876e-01,6.7869e-17,7.9335e-01,-6.0876e-01,6.7869e-17,7.9335e-01,-5.1060e-01,5.6925e-17,8.5982e-01,-5.0000e-01,5.5744e-17,8.6603e-01,-5.0000e-01,5.5744e-17,8.6603e-01,-5.8936e-01,6.5707e-17,8.0787e-01,-6.0876e-01,6.7869e-17,7.9335e-01,-6.0876e-01,6.7869e-17,7.9335e-01,-6.0876e-01,6.7869e-17,7.9335e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-6.2592e-01,6.9783e-17,7.7988e-01,-6.0876e-01,6.7869e-17,7.9335e-01,-6.0876e-01,6.7869e-17,7.9335e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.9335e-01,8.8449e-17,6.0876e-01,-7.9335e-01,8.8449e-17,6.0876e-01,-7.9335e-01,8.8449e-17,6.0876e-01,-7.2892e-01,8.1266e-17,6.8459e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.7196e-01,8.6064e-17,6.3568e-01,-7.9335e-01,8.8449e-17,6.0876e-01,-7.9335e-01,8.8449e-17,6.0876e-01,-7.9335e-01,8.8449e-17,6.0876e-01,-8.6603e-01,9.6551e-17,5.0000e-01,-8.6603e-01,9.6551e-17,5.0000e-01,-8.6603e-01,9.6551e-17,5.0000e-01,-8.1678e-01,9.1061e-17,5.7694e-01,-7.9335e-01,8.8449e-17,6.0876e-01,-7.9335e-01,8.8449e-17,6.0876e-01,-8.3041e-01,9.2580e-17,5.5716e-01,-8.6603e-01,9.6551e-17,5.0000e-01,-8.6603e-01,9.6551e-17,5.0000e-01,-8.6603e-01,9.6551e-17,5.0000e-01,-9.2388e-01,1.0300e-16,3.8268e-01,-9.2388e-01,1.0300e-16,3.8268e-01,-9.2388e-01,1.0300e-16,3.8268e-01,-8.8765e-01,9.8962e-17,4.6052e-01,-8.6603e-01,9.6551e-17,5.0000e-01,-8.6603e-01,9.6551e-17,5.0000e-01,-8.8136e-01,9.8260e-17,4.7245e-01,-9.2388e-01,1.0300e-16,3.8268e-01,-9.2388e-01,1.0300e-16,3.8268e-01,-9.2388e-01,1.0300e-16,3.8268e-01,-9.6593e-01,1.0769e-16,2.5882e-01,-9.6593e-01,1.0769e-16,2.5882e-01,-9.6593e-01,1.0769e-16,2.5882e-01,-9.4074e-01,1.0488e-16,3.3913e-01,-9.2388e-01,1.0300e-16,3.8268e-01,-9.2388e-01,1.0300e-16,3.8268e-01,-9.5729e-01,1.0673e-16,2.8914e-01,-9.6593e-01,1.0769e-16,2.5882e-01,-9.6593e-01,1.0769e-16,2.5882e-01,-9.6593e-01,1.0769e-16,2.5882e-01,-9.9144e-01,1.1053e-16,1.3053e-01};
			return value;
		}
		private double[] getNormal_7_841_vector_2()
		{
			double[] value = {-9.9144e-01,1.1053e-16,1.3053e-01,-9.9144e-01,1.1053e-16,1.3053e-01,-9.7630e-01,1.0885e-16,2.1644e-01,-9.6593e-01,1.0769e-16,2.5882e-01,-9.6593e-01,1.0769e-16,2.5882e-01,-9.8116e-01,1.0939e-16,1.9322e-01,-9.9144e-01,1.1053e-16,1.3053e-01,-9.9144e-01,1.1053e-16,1.3053e-01,-9.9144e-01,1.1053e-16,1.3053e-01,-1.0000e+00,1.1149e-16,1.2246e-16,-1.0000e+00,1.1149e-16,1.2246e-16,-9.9144e-01,1.1053e-16,1.3053e-01,-9.9535e-01,1.1097e-16,9.6365e-02,-1.0000e+00,1.1149e-16,1.2246e-16,-1.0000e+00,1.1149e-16,1.2246e-16,-9.9406e-01,1.1083e-16,1.0887e-01,-9.9144e-01,1.1053e-16,1.3053e-01};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_847_point_1()
		{
			double[] value = {-2.5000e+00,-1.2140e+00,5.3041e+00,-3.7500e+00,-1.2140e+00,5.3041e+00,-3.7500e+00,-1.2189e+00,5.2726e+00,-2.5000e+00,-1.2189e+00,5.2726e+00,-2.5000e+00,-1.2140e+00,5.3041e+00,-3.5000e+00,-1.2140e+00,5.3041e+00,-3.5000e+00,-1.2189e+00,5.2726e+00,-2.5000e+00,-1.2189e+00,5.2726e+00,-3.7500e+00,-1.2189e+00,5.2726e+00,-3.7500e+00,-1.2198e+00,5.2407e+00,-2.5000e+00,-1.2198e+00,5.2407e+00,-2.5005e+00,-1.2198e+00,5.2407e+00,-2.5000e+00,-1.2199e+00,5.2500e+00,-3.5000e+00,-1.2189e+00,5.2726e+00,-3.5000e+00,-1.2199e+00,5.2500e+00,-3.5005e+00,-1.2198e+00,5.2407e+00,-2.5000e+00,-1.2198e+00,5.2407e+00,-3.7500e+00,-1.2198e+00,5.2407e+00,-3.7500e+00,-1.2165e+00,5.2089e+00,-2.5000e+00,-1.2165e+00,5.2089e+00,-3.5005e+00,-1.2198e+00,5.2407e+00,-3.5012e+00,-1.2188e+00,5.2259e+00,-3.5037e+00,-1.2165e+00,5.2089e+00,-2.5037e+00,-1.2165e+00,5.2089e+00,-2.5012e+00,-1.2188e+00,5.2259e+00,-2.5005e+00,-1.2198e+00,5.2407e+00,-2.5000e+00,-1.2165e+00,5.2089e+00,-3.7500e+00,-1.2165e+00,5.2089e+00,-3.7500e+00,-1.2093e+00,5.1778e+00,-2.5000e+00,-1.2093e+00,5.1778e+00,-3.5037e+00,-1.2165e+00,5.2089e+00,-3.5047e+00,-1.2152e+00,5.2017e+00,-3.5107e+00,-1.2093e+00,5.1778e+00,-2.5107e+00,-1.2093e+00,5.1778e+00,-2.5047e+00,-1.2152e+00,5.2017e+00,-2.5037e+00,-1.2165e+00,5.2089e+00,-2.5000e+00,-1.2093e+00,5.1778e+00,-3.7500e+00,-1.2093e+00,5.1778e+00,-3.7500e+00,-1.1981e+00,5.1479e+00,-2.5000e+00,-1.1981e+00,5.1479e+00,-3.5107e+00,-1.2093e+00,5.1778e+00,-3.5107e+00,-1.2093e+00,5.1777e+00,-3.5190e+00,-1.2009e+00,5.1543e+00,-3.5220e+00,-1.1981e+00,5.1479e+00,-2.5220e+00,-1.1981e+00,5.1479e+00,-2.5190e+00,-1.2009e+00,5.1543e+00,-2.5107e+00,-1.2093e+00,5.1777e+00,-2.5107e+00,-1.2093e+00,5.1778e+00,-2.5000e+00,-1.1981e+00,5.1479e+00,-3.7500e+00,-1.1981e+00,5.1479e+00,-3.7500e+00,-1.1833e+00,5.1196e+00,-2.5000e+00,-1.1833e+00,5.1196e+00,-3.5220e+00,-1.1981e+00,5.1479e+00,-3.5297e+00,-1.1903e+00,5.1319e+00,-3.5369e+00,-1.1833e+00,5.1196e+00,-2.5369e+00,-1.1833e+00,5.1196e+00,-2.5297e+00,-1.1903e+00,5.1319e+00,-2.5220e+00,-1.1981e+00,5.1479e+00,-2.5000e+00,-1.1833e+00,5.1196e+00,-3.7500e+00,-1.1833e+00,5.1196e+00,-3.7500e+00,-1.1649e+00,5.0935e+00,-2.5000e+00,-1.1649e+00,5.0935e+00,-3.5369e+00,-1.1833e+00,5.1196e+00,-3.5424e+00,-1.1775e+00,5.1107e+00,-3.5551e+00,-1.1649e+00,5.0935e+00,-2.5551e+00,-1.1649e+00,5.0935e+00,-2.5424e+00,-1.1775e+00,5.1107e+00,-2.5369e+00,-1.1833e+00,5.1196e+00,-2.5000e+00,-1.1649e+00,5.0935e+00,-3.7500e+00,-1.1649e+00,5.0935e+00,-3.7500e+00,-1.1434e+00,5.0699e+00,-2.5000e+00,-1.1434e+00,5.0699e+00,-3.5551e+00,-1.1649e+00,5.0935e+00,-3.5570e+00,-1.1629e+00,5.0911e+00,-3.5732e+00,-1.1467e+00,5.0732e+00,-3.5768e+00,-1.1434e+00,5.0699e+00,-2.5768e+00,-1.1434e+00,5.0699e+00,-2.5732e+00,-1.1467e+00,5.0732e+00,-2.5570e+00,-1.1629e+00,5.0911e+00,-2.5551e+00,-1.1649e+00,5.0935e+00,-2.5000e+00,-1.1434e+00,5.0699e+00,-3.7500e+00,-1.1434e+00,5.0699e+00,-3.7500e+00,-1.1190e+00,5.0493e+00,-2.5000e+00,-1.1190e+00,5.0493e+00,-3.5768e+00,-1.1434e+00,5.0699e+00,-3.6010e+00,-1.1190e+00,5.0493e+00,-2.6010e+00,-1.1190e+00,5.0493e+00,-2.5768e+00,-1.1434e+00,5.0699e+00,-2.5000e+00,-1.1190e+00,5.0493e+00,-3.7500e+00,-1.1190e+00,5.0493e+00,-3.7500e+00,-1.0922e+00,5.0320e+00,-2.5000e+00,-1.0922e+00,5.0320e+00,-3.6010e+00,-1.1190e+00,5.0493e+00,-3.6027e+00,-1.1173e+00,5.0480e+00,-3.6280e+00,-1.0922e+00,5.0320e+00,-2.6280e+00,-1.0922e+00,5.0320e+00,-2.6027e+00,-1.1173e+00,5.0480e+00,-2.6010e+00,-1.1190e+00,5.0493e+00,-2.5000e+00,-1.0922e+00,5.0320e+00,-3.7500e+00,-1.0922e+00,5.0320e+00};
			return value;
		}
		private double[] getCoordinate_7_847_point_2()
		{
			double[] value = {-3.7500e+00,-1.0635e+00,5.0181e+00,-2.5000e+00,-1.0635e+00,5.0181e+00,-3.6280e+00,-1.0922e+00,5.0320e+00,-3.6363e+00,-1.0837e+00,5.0274e+00,-3.6568e+00,-1.0635e+00,5.0181e+00,-2.6568e+00,-1.0635e+00,5.0181e+00,-2.6363e+00,-1.0837e+00,5.0274e+00,-2.6280e+00,-1.0922e+00,5.0320e+00,-2.5000e+00,-1.0635e+00,5.0181e+00,-3.7500e+00,-1.0635e+00,5.0181e+00,-3.7500e+00,-1.0331e+00,5.0081e+00,-2.5000e+00,-1.0331e+00,5.0081e+00,-3.6568e+00,-1.0635e+00,5.0181e+00,-3.6730e+00,-1.0470e+00,5.0122e+00,-3.6870e+00,-1.0331e+00,5.0081e+00,-2.6870e+00,-1.0331e+00,5.0081e+00,-2.6730e+00,-1.0470e+00,5.0122e+00,-2.6568e+00,-1.0635e+00,5.0181e+00,-2.5000e+00,-1.0331e+00,5.0081e+00,-3.7500e+00,-1.0331e+00,5.0081e+00,-3.7500e+00,-1.0018e+00,5.0020e+00,-2.5000e+00,-1.0018e+00,5.0020e+00,-3.6870e+00,-1.0331e+00,5.0081e+00,-3.7114e+00,-1.0086e+00,5.0030e+00,-3.7182e+00,-1.0018e+00,5.0020e+00,-2.7182e+00,-1.0018e+00,5.0020e+00,-2.7114e+00,-1.0086e+00,5.0030e+00,-2.6870e+00,-1.0331e+00,5.0081e+00,-2.5000e+00,-1.0018e+00,5.0020e+00,-3.7500e+00,-1.0018e+00,5.0020e+00,-3.7500e+00,-9.6995e-01,5.0000e+00,-2.5000e+00,-9.6995e-01,5.0000e+00,-3.7182e+00,-1.0018e+00,5.0020e+00,-3.7500e+00,-9.6995e-01,5.0000e+00,-2.7500e+00,-9.6995e-01,5.0000e+00,-2.7182e+00,-1.0018e+00,5.0020e+00};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_848_vector_1()
		{
			double[] value = {-0.0000e+00,9.7630e-01,-2.1644e-01,-0.0000e+00,9.7630e-01,-2.1644e-01,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.7630e-01,-2.1644e-01,-0.0000e+00,9.7630e-01,-2.1644e-01,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9592e-01,-9.0260e-02,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.9535e-01,9.6365e-02,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.9535e-01,9.6365e-02,-0.0000e+00,9.9930e-01,3.7391e-02,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.8116e-01,1.9322e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.8116e-01,1.9322e-01,-0.0000e+00,9.8639e-01,1.6443e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.5729e-01,2.8914e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.5729e-01,2.8914e-01,-0.0000e+00,9.5739e-01,2.8879e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,8.8136e-01,4.7245e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.8136e-01,4.7245e-01,-0.0000e+00,9.1278e-01,4.0844e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,8.3041e-01,5.5716e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,8.3041e-01,5.5716e-01,-0.0000e+00,8.5329e-01,5.2144e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,7.7196e-01,6.3568e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.7196e-01,6.3568e-01,-0.0000e+00,7.7988e-01,6.2592e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,6.9376e-01,7.2021e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,5.8936e-01,8.0787e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,5.8936e-01,8.0787e-01,-0.0000e+00,5.9632e-01,8.0274e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.8916e-01,8.7219e-01};
			return value;
		}
		private double[] getNormal_7_848_vector_2()
		{
			double[] value = {-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,4.5487e-01,8.9056e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,4.5487e-01,8.9056e-01,-0.0000e+00,4.8916e-01,8.7219e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,3.0808e-01,9.5136e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,3.0808e-01,9.5136e-01,-0.0000e+00,3.7403e-01,9.2742e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,1.5451e-01,9.8799e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.5451e-01,9.8799e-01,-0.0000e+00,2.5279e-01,9.6752e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2744e-01,9.9185e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2744e-01,9.9185e-01};
			return value;
		}


		/** Define subarrays using type int[] */
		private int[] getIndexedTriangleSet_6_854_index_1()
		{
			int[] value = {9,1,0,10,1,9,10,2,1,11,2,10,11,3,2,12,3,11,12,4,3,13,4,12,13,5,4,14,5,13,14,6,5,15,6,14,15,7,6,16,7,15,16,8,7,17,8,16,18,10,9,19,10,18,19,11,10,20,11,19,20,12,11,21,12,20,21,13,12,22,13,21,22,14,13,23,14,22,23,15,14,24,15,23,24,16,15,25,16,24,25,17,16,26,17,25,27,19,18,28,19,27,28,20,19,29,20,28,29,21,20,30,21,29,30,22,21,31,22,30,31,23,22,32,23,31,32,24,23,33,24,32,33,25,24,34,25,33,34,26,25,35,26,34,36,28,27,37,28,36,37,29,28,38,29,37,38,30,29,39,30,38,39,31,30,40,31,39,40,32,31,41,32,40,41,33,32,42,33,41,42,34,33,43,34,42,43,35,34,44,35,43,45,37,36,46,37,45,46,38,37,47,38,46,47,39,38,48,39,47,48,40,39,49,40,48,49,41,40,50,41,49,50,42,41,51,42,50,51,43,42,52,43,51,52,44,43,53,44,52,54,46,45,55,46,54,55,47,46,56,47,55,56,48,47,57,48,56,57,49,48,58,49,57,58,50,49,59,50,58,59,51,50,60,51,59,60,52,51,61,52,60,61,53,52,62,53,61,63,55,54,64,55,63,64,56,55,65,56,64,65,57,56,66,57,65,66,58,57,67,58,66,67,59,58,68,59,67,68,60,59,69,60,68,69,61,60,70,61,69,70,62,61,71,62,70,72,64,63,73,64,72,73,65,64,74,65,73,74,66,65,75,66,74,75,67,66,76,67,75,76,68,67,77,68,76,77,69,68,78,69,77,78,70,69,79,70,78,79,71,70,80,71,79,81,73,72,82,73,81,82,74,73,83,74,82,83,75,74,84,75,83,84,76,75,85,76,84,85,77,76,86,77,85,86,78,77,87,78,86,87,79,78,88,79,87,88,80,79,89,80,88,90,82,81,91,82,90,91,83,82,92,83,91,92,84,83,93,84,92,93,85,84,94,85,93,94,86,85,95,86,94,95,87,86,96,87,95,96,88,87,97,88,96,97,89,88,98,89,97,99,91,90,100,91,99,100,92,91,101,92,100,101,93,92,102,93,101,102,94,93,103,94,102,103,95,94,104,95,103,104,96,95,105,96,104,105,97,96,106,97,105,106,98,97,107,98,106,108,100,99,109,100,108,109,101,100,110,101,109,110,102,101,111,102,110,111,103,102,112,103,111,112,104,103,113,104,112,113,105,104,114,105,113,114,106,105,115,106,114,115,107,106,116,107,115,117,109,108,118,109,117,118,110,109,119,110,118,119,111,110,120,111,119,120,112,111,121,112,120,121,113,112,122,113,121,122,114,113,123,114,122,123,115,114,124,115,123,124,116,115,125,116,124,126,118,117,127,118,126,127,119,118,128,119,127,128,120,119,129,120,128,129,121,120,130,121,129,130,122,121,131,122,130,131,123,122,132,123,131,132,124,123,133,124,132,133,125,124,134,125,133,135,127,126,136,127,135,136,128,127,137,128,136,137,129,128,138,129,137,138,130,129,139,130,138,139,131,130,140,131,139,140,132,131,141,132,140,141,133,132,142,133,141,142,134,133,143,134,142,144,136,135,145,136,144,145,137,136,146,137,145,146,138,137,147,138,146,147,139,138,148,139,147,148,140,139,149,140,148,149,141,140,150,141,149,150,142,141,151,142,150,151,143,142,152,143,151,153,145,144,154,145,153,154,146,145,155,146,154,155,147,146,156,147,155,156,148,147,157,148,156,157,149,148,158,149,157,158,150,149,159,150,158,159,151,150,160,151,159,160,152,151,161,152,160,162,154,153,163,154,162,163,155,154,164,155,163,164,156,155,165,156,164,165,157,156,166,157,165,166,158,157,167,158,166,167,159,158,168,159,167,168,160,159,169,160,168,169,161,160,170,161,169,171,163,162,172,163,171,172,164,163,173,164,172,173,165,164,174,165,173,174,166,165,175,166,174,175,167,166,176,167,175,176,168,167,177,168,176,177,169,168,178,169,177,178,170,169,179,170,178,180,172,171,181,172,180,181,173,172,182,173,181,182,174,173,183,174,182,183,175,174,184,175,183,184,176,175,185,176,184,185,177,176,186,177,185,186,178,177,187,178,186,187,179,178,188,179,187,189,181,180,190,181,189,190,182,181,191,182,190,191,183,182,192,183,191,192,184,183,193,184,192,193,185,184,194,185,193,194,186,185,195,186,194,195,187,186,196};
			return value;
		}
		private int[] getIndexedTriangleSet_6_854_index_2()
		{
			int[] value = {187,195,196,188,187,197,188,196,198,190,189,199,190,198,199,191,190,200,191,199,200,192,191,201,192,200,201,193,192,202,193,201,202,194,193,203,194,202,203,195,194,204,195,203,204,196,195,205,196,204,205,197,196,206,197,205,207,199,198,208,199,207,208,200,199,209,200,208,209,201,200,210,201,209,210,202,201,211,202,210,211,203,202,212,203,211,212,204,203,213,204,212,213,205,204,214,205,213,214,206,205,215,206,214,216,208,207,217,208,216,217,209,208,218,209,217,218,210,209,219,210,218,219,211,210,220,211,219,220,212,211,221,212,220,221,213,212,222,213,221,222,214,213,223,214,222,223,215,214,224,215,223,225,217,216,226,217,225,226,218,217,227,218,226,227,219,218,228,219,227,228,220,219,229,220,228,229,221,220,230,221,229,230,222,221,231,222,230,231,223,222,232,223,231,232,224,223,233,224,232,234,226,225,235,226,234,235,227,226,236,227,235,236,228,227,237,228,236,237,229,228,238,229,237,238,230,229,239,230,238,239,231,230,240,231,239,240,232,231,241,232,240,241,233,232,242,233,241,243,235,234,244,235,243,244,236,235,245,236,244,245,237,236,246,237,245,246,238,237,247,238,246,247,239,238,248,239,247,248,240,239,249,240,248,249,241,240,250,241,249,250,242,241,251,242,250,252,244,243,253,244,252,253,245,244,254,245,253,254,246,245,255,246,254,255,247,246,256,247,255,256,248,247,257,248,256,257,249,248,258,249,257,258,250,249,259,250,258,259,251,250,260,251,259,261,253,252,262,253,261,262,254,253,263,254,262,263,255,254,264,255,263,264,256,255,265,256,264,265,257,256,266,257,265,266,258,257,267,258,266,267,259,258,268,259,267,268,260,259,269,260,268,270,262,261,271,262,270,271,263,262,272,263,271,272,264,263,273,264,272,273,265,264,274,265,273,274,266,265,275,266,274,275,267,266,276,267,275,276,268,267,277,268,276,277,269,268,278,269,277,279,271,270,280,271,279,280,272,271,281,272,280,281,273,272,282,273,281,282,274,273,283,274,282,283,275,274,284,275,283,284,276,275,285,276,284,285,277,276,286,277,285,286,278,277,287,278,286,0,280,279,1,280,0,1,281,280,2,281,1,2,282,281,3,282,2,3,283,282,4,283,3,4,284,283,5,284,4,5,285,284,6,285,5,6,286,285,7,286,6,7,287,286,8,287,7};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getCoordinate_7_854_point_1()
		{
			double[] value = {0.0000e+00,1.5000e+00,1.1000e+01,0.0000e+00,1.4512e+00,1.1005e+01,0.0000e+00,1.4043e+00,1.1019e+01,0.0000e+00,1.3611e+00,1.1042e+01,0.0000e+00,1.3232e+00,1.1073e+01,0.0000e+00,1.2921e+00,1.1111e+01,0.0000e+00,1.2690e+00,1.1154e+01,0.0000e+00,1.2548e+00,1.1201e+01,0.0000e+00,1.2500e+00,1.1250e+01,-2.9264e-01,1.4712e+00,1.1000e+01,-2.8312e-01,1.4233e+00,1.1005e+01,-2.7397e-01,1.3773e+00,1.1019e+01,-2.6554e-01,1.3350e+00,1.1042e+01,-2.5815e-01,1.2978e+00,1.1073e+01,-2.5208e-01,1.2673e+00,1.1111e+01,-2.4758e-01,1.2446e+00,1.1154e+01,-2.4480e-01,1.2307e+00,1.1201e+01,-2.4386e-01,1.2260e+00,1.1250e+01,-5.7403e-01,1.3858e+00,1.1000e+01,-5.5536e-01,1.3408e+00,1.1005e+01,-5.3741e-01,1.2974e+00,1.1019e+01,-5.2087e-01,1.2575e+00,1.1042e+01,-5.0638e-01,1.2225e+00,1.1073e+01,-4.9448e-01,1.1938e+00,1.1111e+01,-4.8564e-01,1.1724e+00,1.1154e+01,-4.8019e-01,1.1593e+00,1.1201e+01,-4.7835e-01,1.1548e+00,1.1250e+01,-8.3336e-01,1.2472e+00,1.1000e+01,-8.0626e-01,1.2067e+00,1.1005e+01,-7.8020e-01,1.1677e+00,1.1019e+01,-7.5619e-01,1.1317e+00,1.1042e+01,-7.3514e-01,1.1002e+00,1.1073e+01,-7.1787e-01,1.0744e+00,1.1111e+01,-7.0504e-01,1.0552e+00,1.1154e+01,-6.9713e-01,1.0433e+00,1.1201e+01,-6.9446e-01,1.0393e+00,1.1250e+01,-1.0607e+00,1.0607e+00,1.1000e+01,-1.0262e+00,1.0262e+00,1.1005e+01,-9.9301e-01,9.9301e-01,1.1019e+01,-9.6245e-01,9.6245e-01,1.1042e+01,-9.3566e-01,9.3566e-01,1.1073e+01,-9.1368e-01,9.1368e-01,1.1111e+01,-8.9734e-01,8.9734e-01,1.1154e+01,-8.8728e-01,8.8728e-01,1.1201e+01,-8.8388e-01,8.8388e-01,1.1250e+01,-1.2472e+00,8.3336e-01,1.1000e+01,-1.2067e+00,8.0626e-01,1.1005e+01,-1.1677e+00,7.8020e-01,1.1019e+01,-1.1317e+00,7.5619e-01,1.1042e+01,-1.1002e+00,7.3514e-01,1.1073e+01,-1.0744e+00,7.1787e-01,1.1111e+01,-1.0552e+00,7.0504e-01,1.1154e+01,-1.0433e+00,6.9713e-01,1.1201e+01,-1.0393e+00,6.9446e-01,1.1250e+01,-1.3858e+00,5.7403e-01,1.1000e+01,-1.3408e+00,5.5536e-01,1.1005e+01,-1.2974e+00,5.3741e-01,1.1019e+01,-1.2575e+00,5.2087e-01,1.1042e+01,-1.2225e+00,5.0638e-01,1.1073e+01,-1.1938e+00,4.9448e-01,1.1111e+01,-1.1724e+00,4.8564e-01,1.1154e+01,-1.1593e+00,4.8019e-01,1.1201e+01,-1.1548e+00,4.7835e-01,1.1250e+01,-1.4712e+00,2.9264e-01,1.1000e+01,-1.4233e+00,2.8312e-01,1.1005e+01,-1.3773e+00,2.7397e-01,1.1019e+01,-1.3350e+00,2.6554e-01,1.1042e+01,-1.2978e+00,2.5815e-01,1.1073e+01,-1.2673e+00,2.5208e-01,1.1111e+01,-1.2446e+00,2.4758e-01,1.1154e+01,-1.2307e+00,2.4480e-01,1.1201e+01,-1.2260e+00,2.4386e-01,1.1250e+01,-1.5000e+00,9.1849e-17,1.1000e+01,-1.4512e+00,8.8862e-17,1.1005e+01,-1.4043e+00,8.5990e-17,1.1019e+01,-1.3611e+00,8.3344e-17,1.1042e+01,-1.3232e+00,8.1024e-17,1.1073e+01,-1.2921e+00,7.9120e-17,1.1111e+01,-1.2690e+00,7.7706e-17,1.1154e+01,-1.2548e+00,7.6835e-17,1.1201e+01,-1.2500e+00,7.6540e-17,1.1250e+01,-1.4712e+00,-2.9264e-01,1.1000e+01,-1.4233e+00,-2.8312e-01,1.1005e+01,-1.3773e+00,-2.7397e-01,1.1019e+01,-1.3350e+00,-2.6554e-01,1.1042e+01,-1.2978e+00,-2.5815e-01,1.1073e+01,-1.2673e+00,-2.5208e-01,1.1111e+01,-1.2446e+00,-2.4758e-01,1.1154e+01,-1.2307e+00,-2.4480e-01,1.1201e+01,-1.2260e+00,-2.4386e-01,1.1250e+01,-1.3858e+00,-5.7403e-01,1.1000e+01,-1.3408e+00,-5.5536e-01,1.1005e+01,-1.2974e+00,-5.3741e-01,1.1019e+01,-1.2575e+00,-5.2087e-01,1.1042e+01,-1.2225e+00,-5.0638e-01,1.1073e+01,-1.1938e+00,-4.9448e-01,1.1111e+01,-1.1724e+00,-4.8564e-01,1.1154e+01,-1.1593e+00,-4.8019e-01,1.1201e+01,-1.1548e+00,-4.7835e-01,1.1250e+01,-1.2472e+00,-8.3336e-01,1.1000e+01};
			return value;
		}
		private double[] getCoordinate_7_854_point_2()
		{
			double[] value = {-1.2067e+00,-8.0626e-01,1.1005e+01,-1.1677e+00,-7.8020e-01,1.1019e+01,-1.1317e+00,-7.5619e-01,1.1042e+01,-1.1002e+00,-7.3514e-01,1.1073e+01,-1.0744e+00,-7.1787e-01,1.1111e+01,-1.0552e+00,-7.0504e-01,1.1154e+01,-1.0433e+00,-6.9713e-01,1.1201e+01,-1.0393e+00,-6.9446e-01,1.1250e+01,-1.0607e+00,-1.0607e+00,1.1000e+01,-1.0262e+00,-1.0262e+00,1.1005e+01,-9.9301e-01,-9.9301e-01,1.1019e+01,-9.6245e-01,-9.6245e-01,1.1042e+01,-9.3566e-01,-9.3566e-01,1.1073e+01,-9.1368e-01,-9.1368e-01,1.1111e+01,-8.9734e-01,-8.9734e-01,1.1154e+01,-8.8728e-01,-8.8728e-01,1.1201e+01,-8.8388e-01,-8.8388e-01,1.1250e+01,-8.3336e-01,-1.2472e+00,1.1000e+01,-8.0626e-01,-1.2067e+00,1.1005e+01,-7.8020e-01,-1.1677e+00,1.1019e+01,-7.5619e-01,-1.1317e+00,1.1042e+01,-7.3514e-01,-1.1002e+00,1.1073e+01,-7.1787e-01,-1.0744e+00,1.1111e+01,-7.0504e-01,-1.0552e+00,1.1154e+01,-6.9713e-01,-1.0433e+00,1.1201e+01,-6.9446e-01,-1.0393e+00,1.1250e+01,-5.7403e-01,-1.3858e+00,1.1000e+01,-5.5536e-01,-1.3408e+00,1.1005e+01,-5.3741e-01,-1.2974e+00,1.1019e+01,-5.2087e-01,-1.2575e+00,1.1042e+01,-5.0638e-01,-1.2225e+00,1.1073e+01,-4.9448e-01,-1.1938e+00,1.1111e+01,-4.8564e-01,-1.1724e+00,1.1154e+01,-4.8019e-01,-1.1593e+00,1.1201e+01,-4.7835e-01,-1.1548e+00,1.1250e+01,-2.9264e-01,-1.4712e+00,1.1000e+01,-2.8312e-01,-1.4233e+00,1.1005e+01,-2.7397e-01,-1.3773e+00,1.1019e+01,-2.6554e-01,-1.3350e+00,1.1042e+01,-2.5815e-01,-1.2978e+00,1.1073e+01,-2.5208e-01,-1.2673e+00,1.1111e+01,-2.4758e-01,-1.2446e+00,1.1154e+01,-2.4480e-01,-1.2307e+00,1.1201e+01,-2.4386e-01,-1.2260e+00,1.1250e+01,-1.8370e-16,-1.5000e+00,1.1000e+01,-1.7772e-16,-1.4512e+00,1.1005e+01,-1.7198e-16,-1.4043e+00,1.1019e+01,-1.6669e-16,-1.3611e+00,1.1042e+01,-1.6205e-16,-1.3232e+00,1.1073e+01,-1.5824e-16,-1.2921e+00,1.1111e+01,-1.5541e-16,-1.2690e+00,1.1154e+01,-1.5367e-16,-1.2548e+00,1.1201e+01,-1.5308e-16,-1.2500e+00,1.1250e+01,2.9264e-01,-1.4712e+00,1.1000e+01,2.8312e-01,-1.4233e+00,1.1005e+01,2.7397e-01,-1.3773e+00,1.1019e+01,2.6554e-01,-1.3350e+00,1.1042e+01,2.5815e-01,-1.2978e+00,1.1073e+01,2.5208e-01,-1.2673e+00,1.1111e+01,2.4758e-01,-1.2446e+00,1.1154e+01,2.4480e-01,-1.2307e+00,1.1201e+01,2.4386e-01,-1.2260e+00,1.1250e+01,5.7403e-01,-1.3858e+00,1.1000e+01,5.5536e-01,-1.3408e+00,1.1005e+01,5.3741e-01,-1.2974e+00,1.1019e+01,5.2087e-01,-1.2575e+00,1.1042e+01,5.0638e-01,-1.2225e+00,1.1073e+01,4.9448e-01,-1.1938e+00,1.1111e+01,4.8564e-01,-1.1724e+00,1.1154e+01,4.8019e-01,-1.1593e+00,1.1201e+01,4.7835e-01,-1.1548e+00,1.1250e+01,8.3336e-01,-1.2472e+00,1.1000e+01,8.0626e-01,-1.2067e+00,1.1005e+01,7.8020e-01,-1.1677e+00,1.1019e+01,7.5619e-01,-1.1317e+00,1.1042e+01,7.3514e-01,-1.1002e+00,1.1073e+01,7.1787e-01,-1.0744e+00,1.1111e+01,7.0504e-01,-1.0552e+00,1.1154e+01,6.9713e-01,-1.0433e+00,1.1201e+01,6.9446e-01,-1.0393e+00,1.1250e+01,1.0607e+00,-1.0607e+00,1.1000e+01,1.0262e+00,-1.0262e+00,1.1005e+01,9.9301e-01,-9.9301e-01,1.1019e+01,9.6245e-01,-9.6245e-01,1.1042e+01,9.3566e-01,-9.3566e-01,1.1073e+01,9.1368e-01,-9.1368e-01,1.1111e+01,8.9734e-01,-8.9734e-01,1.1154e+01,8.8728e-01,-8.8728e-01,1.1201e+01,8.8388e-01,-8.8388e-01,1.1250e+01,1.2472e+00,-8.3336e-01,1.1000e+01,1.2067e+00,-8.0626e-01,1.1005e+01,1.1677e+00,-7.8020e-01,1.1019e+01,1.1317e+00,-7.5619e-01,1.1042e+01,1.1002e+00,-7.3514e-01,1.1073e+01,1.0744e+00,-7.1787e-01,1.1111e+01,1.0552e+00,-7.0504e-01,1.1154e+01,1.0433e+00,-6.9713e-01,1.1201e+01,1.0393e+00,-6.9446e-01,1.1250e+01,1.3858e+00,-5.7403e-01,1.1000e+01,1.3408e+00,-5.5536e-01,1.1005e+01};
			return value;
		}
		private double[] getCoordinate_7_854_point_3()
		{
			double[] value = {1.2974e+00,-5.3741e-01,1.1019e+01,1.2575e+00,-5.2087e-01,1.1042e+01,1.2225e+00,-5.0638e-01,1.1073e+01,1.1938e+00,-4.9448e-01,1.1111e+01,1.1724e+00,-4.8564e-01,1.1154e+01,1.1593e+00,-4.8019e-01,1.1201e+01,1.1548e+00,-4.7835e-01,1.1250e+01,1.4712e+00,-2.9264e-01,1.1000e+01,1.4233e+00,-2.8312e-01,1.1005e+01,1.3773e+00,-2.7397e-01,1.1019e+01,1.3350e+00,-2.6554e-01,1.1042e+01,1.2978e+00,-2.5815e-01,1.1073e+01,1.2673e+00,-2.5208e-01,1.1111e+01,1.2446e+00,-2.4758e-01,1.1154e+01,1.2307e+00,-2.4480e-01,1.1201e+01,1.2260e+00,-2.4386e-01,1.1250e+01,1.5000e+00,-2.7555e-16,1.1000e+01,1.4512e+00,-2.6659e-16,1.1005e+01,1.4043e+00,-2.5797e-16,1.1019e+01,1.3611e+00,-2.5003e-16,1.1042e+01,1.3232e+00,-2.4307e-16,1.1073e+01,1.2921e+00,-2.3736e-16,1.1111e+01,1.2690e+00,-2.3312e-16,1.1154e+01,1.2548e+00,-2.3050e-16,1.1201e+01,1.2500e+00,-2.2962e-16,1.1250e+01,1.4712e+00,2.9264e-01,1.1000e+01,1.4233e+00,2.8312e-01,1.1005e+01,1.3773e+00,2.7397e-01,1.1019e+01,1.3350e+00,2.6554e-01,1.1042e+01,1.2978e+00,2.5815e-01,1.1073e+01,1.2673e+00,2.5208e-01,1.1111e+01,1.2446e+00,2.4758e-01,1.1154e+01,1.2307e+00,2.4480e-01,1.1201e+01,1.2260e+00,2.4386e-01,1.1250e+01,1.3858e+00,5.7403e-01,1.1000e+01,1.3408e+00,5.5536e-01,1.1005e+01,1.2974e+00,5.3741e-01,1.1019e+01,1.2575e+00,5.2087e-01,1.1042e+01,1.2225e+00,5.0638e-01,1.1073e+01,1.1938e+00,4.9448e-01,1.1111e+01,1.1724e+00,4.8564e-01,1.1154e+01,1.1593e+00,4.8019e-01,1.1201e+01,1.1548e+00,4.7835e-01,1.1250e+01,1.2472e+00,8.3336e-01,1.1000e+01,1.2067e+00,8.0626e-01,1.1005e+01,1.1677e+00,7.8020e-01,1.1019e+01,1.1317e+00,7.5619e-01,1.1042e+01,1.1002e+00,7.3514e-01,1.1073e+01,1.0744e+00,7.1787e-01,1.1111e+01,1.0552e+00,7.0504e-01,1.1154e+01,1.0433e+00,6.9713e-01,1.1201e+01,1.0393e+00,6.9446e-01,1.1250e+01,1.0607e+00,1.0607e+00,1.1000e+01,1.0262e+00,1.0262e+00,1.1005e+01,9.9301e-01,9.9301e-01,1.1019e+01,9.6245e-01,9.6245e-01,1.1042e+01,9.3566e-01,9.3566e-01,1.1073e+01,9.1368e-01,9.1368e-01,1.1111e+01,8.9734e-01,8.9734e-01,1.1154e+01,8.8728e-01,8.8728e-01,1.1201e+01,8.8388e-01,8.8388e-01,1.1250e+01,8.3336e-01,1.2472e+00,1.1000e+01,8.0626e-01,1.2067e+00,1.1005e+01,7.8020e-01,1.1677e+00,1.1019e+01,7.5619e-01,1.1317e+00,1.1042e+01,7.3514e-01,1.1002e+00,1.1073e+01,7.1787e-01,1.0744e+00,1.1111e+01,7.0504e-01,1.0552e+00,1.1154e+01,6.9713e-01,1.0433e+00,1.1201e+01,6.9446e-01,1.0393e+00,1.1250e+01,5.7403e-01,1.3858e+00,1.1000e+01,5.5536e-01,1.3408e+00,1.1005e+01,5.3741e-01,1.2974e+00,1.1019e+01,5.2087e-01,1.2575e+00,1.1042e+01,5.0638e-01,1.2225e+00,1.1073e+01,4.9448e-01,1.1938e+00,1.1111e+01,4.8564e-01,1.1724e+00,1.1154e+01,4.8019e-01,1.1593e+00,1.1201e+01,4.7835e-01,1.1548e+00,1.1250e+01,2.9264e-01,1.4712e+00,1.1000e+01,2.8312e-01,1.4233e+00,1.1005e+01,2.7397e-01,1.3773e+00,1.1019e+01,2.6554e-01,1.3350e+00,1.1042e+01,2.5815e-01,1.2978e+00,1.1073e+01,2.5208e-01,1.2673e+00,1.1111e+01,2.4758e-01,1.2446e+00,1.1154e+01,2.4480e-01,1.2307e+00,1.1201e+01,2.4386e-01,1.2260e+00,1.1250e+01};
			return value;
		}


		/** Define subarrays using type double[] */
		private double[] getNormal_7_855_vector_1()
		{
			double[] value = {-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.9509e-01,9.8079e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.5557e-01,8.3147e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,8.3147e-01,5.5557e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.8079e-01,1.9509e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-2.3892e-17,1.2011e-16,1.0000e+00,-3.8060e-02,1.9134e-01,9.8079e-01,-7.4658e-02,3.7533e-01,9.2388e-01,-1.0839e-01,5.4490e-01,8.3147e-01,-1.3795e-01,6.9352e-01,7.0711e-01,-1.6221e-01,8.1549e-01,5.5557e-01,-1.8024e-01,9.0613e-01,3.8268e-01,-1.9134e-01,9.6194e-01,1.9509e-01,-1.9509e-01,9.8079e-01,-6.1232e-17,-4.6865e-17,1.1314e-16,1.0000e+00,-7.4658e-02,1.8024e-01,9.8079e-01,-1.4645e-01,3.5355e-01,9.2388e-01,-2.1261e-01,5.1328e-01,8.3147e-01,-2.7060e-01,6.5328e-01,7.0711e-01,-3.1819e-01,7.6818e-01,5.5557e-01,-3.5355e-01,8.5355e-01,3.8268e-01,-3.7533e-01,9.0613e-01,1.9509e-01,-3.8268e-01,9.2388e-01,-6.1232e-17,-6.8038e-17,1.0183e-16,1.0000e+00,-1.0839e-01,1.6221e-01,9.8079e-01,-2.1261e-01,3.1819e-01,9.2388e-01,-3.0866e-01,4.6194e-01,8.3147e-01,-3.9285e-01,5.8794e-01,7.0711e-01,-4.6194e-01,6.9134e-01,5.5557e-01,-5.1328e-01,7.6818e-01,3.8268e-01,-5.4490e-01,8.1549e-01,1.9509e-01,-5.5557e-01,8.3147e-01,-6.1232e-17,-8.6596e-17,8.6596e-17,1.0000e+00,-1.3795e-01,1.3795e-01,9.8079e-01,-2.7060e-01,2.7060e-01,9.2388e-01,-3.9285e-01,3.9285e-01,8.3147e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-5.8794e-01,5.8794e-01,5.5557e-01,-6.5328e-01,6.5328e-01,3.8268e-01,-6.9352e-01,6.9352e-01,1.9509e-01,-7.0711e-01,7.0711e-01,-6.1232e-17,-1.0183e-16,6.8038e-17,1.0000e+00,-1.6221e-01,1.0839e-01,9.8079e-01,-3.1819e-01,2.1261e-01,9.2388e-01,-4.6194e-01,3.0866e-01,8.3147e-01,-5.8794e-01,3.9285e-01,7.0711e-01,-6.9134e-01,4.6194e-01,5.5557e-01,-7.6818e-01,5.1328e-01,3.8268e-01,-8.1549e-01,5.4490e-01,1.9509e-01,-8.3147e-01,5.5557e-01,-6.1232e-17,-1.1314e-16,4.6865e-17,1.0000e+00,-1.8024e-01,7.4658e-02,9.8079e-01,-3.5355e-01,1.4645e-01,9.2388e-01,-5.1328e-01,2.1261e-01,8.3147e-01,-6.5328e-01,2.7060e-01,7.0711e-01,-7.6818e-01,3.1819e-01,5.5557e-01,-8.5355e-01,3.5355e-01,3.8268e-01,-9.0613e-01,3.7533e-01,1.9509e-01,-9.2388e-01,3.8268e-01,-6.1232e-17,-1.2011e-16,2.3892e-17,1.0000e+00,-1.9134e-01,3.8060e-02,9.8079e-01,-3.7533e-01,7.4658e-02,9.2388e-01,-5.4490e-01,1.0839e-01,8.3147e-01,-6.9352e-01,1.3795e-01,7.0711e-01,-8.1549e-01,1.6221e-01,5.5557e-01,-9.0613e-01,1.8024e-01,3.8268e-01,-9.6194e-01,1.9134e-01,1.9509e-01,-9.8079e-01,1.9509e-01,-6.1232e-17,-1.2246e-16,7.4988e-33,1.0000e+00,-1.9509e-01,1.1946e-17,9.8079e-01,-3.8268e-01,2.3433e-17,9.2388e-01,-5.5557e-01,3.4019e-17,8.3147e-01,-7.0711e-01,4.3298e-17,7.0711e-01,-8.3147e-01,5.0913e-17,5.5557e-01,-9.2388e-01,5.6571e-17,3.8268e-01,-9.8079e-01,6.0056e-17,1.9509e-01,-1.0000e+00,6.1232e-17,-6.1232e-17,-1.2011e-16,-2.3892e-17,1.0000e+00,-1.9134e-01,-3.8060e-02,9.8079e-01,-3.7533e-01,-7.4658e-02,9.2388e-01,-5.4490e-01,-1.0839e-01,8.3147e-01,-6.9352e-01,-1.3795e-01,7.0711e-01,-8.1549e-01,-1.6221e-01,5.5557e-01,-9.0613e-01,-1.8024e-01,3.8268e-01,-9.6194e-01,-1.9134e-01,1.9509e-01,-9.8079e-01,-1.9509e-01,-6.1232e-17,-1.1314e-16,-4.6865e-17,1.0000e+00,-1.8024e-01,-7.4658e-02,9.8079e-01,-3.5355e-01,-1.4645e-01,9.2388e-01,-5.1328e-01,-2.1261e-01,8.3147e-01,-6.5328e-01,-2.7060e-01,7.0711e-01,-7.6818e-01,-3.1819e-01,5.5557e-01,-8.5355e-01,-3.5355e-01,3.8268e-01,-9.0613e-01,-3.7533e-01,1.9509e-01,-9.2388e-01,-3.8268e-01,-6.1232e-17,-1.0183e-16,-6.8038e-17,1.0000e+00};
			return value;
		}
		private double[] getNormal_7_855_vector_2()
		{
			double[] value = {-1.6221e-01,-1.0839e-01,9.8079e-01,-3.1819e-01,-2.1261e-01,9.2388e-01,-4.6194e-01,-3.0866e-01,8.3147e-01,-5.8794e-01,-3.9285e-01,7.0711e-01,-6.9134e-01,-4.6194e-01,5.5557e-01,-7.6818e-01,-5.1328e-01,3.8268e-01,-8.1549e-01,-5.4490e-01,1.9509e-01,-8.3147e-01,-5.5557e-01,-6.1232e-17,-8.6596e-17,-8.6596e-17,1.0000e+00,-1.3795e-01,-1.3795e-01,9.8079e-01,-2.7060e-01,-2.7060e-01,9.2388e-01,-3.9285e-01,-3.9285e-01,8.3147e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.8794e-01,-5.8794e-01,5.5557e-01,-6.5328e-01,-6.5328e-01,3.8268e-01,-6.9352e-01,-6.9352e-01,1.9509e-01,-7.0711e-01,-7.0711e-01,-6.1232e-17,-6.8038e-17,-1.0183e-16,1.0000e+00,-1.0839e-01,-1.6221e-01,9.8079e-01,-2.1261e-01,-3.1819e-01,9.2388e-01,-3.0866e-01,-4.6194e-01,8.3147e-01,-3.9285e-01,-5.8794e-01,7.0711e-01,-4.6194e-01,-6.9134e-01,5.5557e-01,-5.1328e-01,-7.6818e-01,3.8268e-01,-5.4490e-01,-8.1549e-01,1.9509e-01,-5.5557e-01,-8.3147e-01,-6.1232e-17,-4.6865e-17,-1.1314e-16,1.0000e+00,-7.4658e-02,-1.8024e-01,9.8079e-01,-1.4645e-01,-3.5355e-01,9.2388e-01,-2.1261e-01,-5.1328e-01,8.3147e-01,-2.7060e-01,-6.5328e-01,7.0711e-01,-3.1819e-01,-7.6818e-01,5.5557e-01,-3.5355e-01,-8.5355e-01,3.8268e-01,-3.7533e-01,-9.0613e-01,1.9509e-01,-3.8268e-01,-9.2388e-01,-6.1232e-17,-2.3892e-17,-1.2011e-16,1.0000e+00,-3.8060e-02,-1.9134e-01,9.8079e-01,-7.4658e-02,-3.7533e-01,9.2388e-01,-1.0839e-01,-5.4490e-01,8.3147e-01,-1.3795e-01,-6.9352e-01,7.0711e-01,-1.6221e-01,-8.1549e-01,5.5557e-01,-1.8024e-01,-9.0613e-01,3.8268e-01,-1.9134e-01,-9.6194e-01,1.9509e-01,-1.9509e-01,-9.8079e-01,-6.1232e-17,-1.4998e-32,-1.2246e-16,1.0000e+00,-2.3892e-17,-1.9509e-01,9.8079e-01,-4.6865e-17,-3.8268e-01,9.2388e-01,-6.8038e-17,-5.5557e-01,8.3147e-01,-8.6596e-17,-7.0711e-01,7.0711e-01,-1.0183e-16,-8.3147e-01,5.5557e-01,-1.1314e-16,-9.2388e-01,3.8268e-01,-1.2011e-16,-9.8079e-01,1.9509e-01,-1.2246e-16,-1.0000e+00,-6.1232e-17,2.3892e-17,-1.2011e-16,1.0000e+00,3.8060e-02,-1.9134e-01,9.8079e-01,7.4658e-02,-3.7533e-01,9.2388e-01,1.0839e-01,-5.4490e-01,8.3147e-01,1.3795e-01,-6.9352e-01,7.0711e-01,1.6221e-01,-8.1549e-01,5.5557e-01,1.8024e-01,-9.0613e-01,3.8268e-01,1.9134e-01,-9.6194e-01,1.9509e-01,1.9509e-01,-9.8079e-01,-6.1232e-17,4.6865e-17,-1.1314e-16,1.0000e+00,7.4658e-02,-1.8024e-01,9.8079e-01,1.4645e-01,-3.5355e-01,9.2388e-01,2.1261e-01,-5.1328e-01,8.3147e-01,2.7060e-01,-6.5328e-01,7.0711e-01,3.1819e-01,-7.6818e-01,5.5557e-01,3.5355e-01,-8.5355e-01,3.8268e-01,3.7533e-01,-9.0613e-01,1.9509e-01,3.8268e-01,-9.2388e-01,-6.1232e-17,6.8038e-17,-1.0183e-16,1.0000e+00,1.0839e-01,-1.6221e-01,9.8079e-01,2.1261e-01,-3.1819e-01,9.2388e-01,3.0866e-01,-4.6194e-01,8.3147e-01,3.9285e-01,-5.8794e-01,7.0711e-01,4.6194e-01,-6.9134e-01,5.5557e-01,5.1328e-01,-7.6818e-01,3.8268e-01,5.4490e-01,-8.1549e-01,1.9509e-01,5.5557e-01,-8.3147e-01,-6.1232e-17,8.6596e-17,-8.6596e-17,1.0000e+00,1.3795e-01,-1.3795e-01,9.8079e-01,2.7060e-01,-2.7060e-01,9.2388e-01,3.9285e-01,-3.9285e-01,8.3147e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.8794e-01,-5.8794e-01,5.5557e-01,6.5328e-01,-6.5328e-01,3.8268e-01,6.9352e-01,-6.9352e-01,1.9509e-01,7.0711e-01,-7.0711e-01,-6.1232e-17,1.0183e-16,-6.8038e-17,1.0000e+00,1.6221e-01,-1.0839e-01,9.8079e-01,3.1819e-01,-2.1261e-01,9.2388e-01,4.6194e-01,-3.0866e-01,8.3147e-01,5.8794e-01,-3.9285e-01,7.0711e-01,6.9134e-01,-4.6194e-01,5.5557e-01,7.6818e-01,-5.1328e-01,3.8268e-01,8.1549e-01,-5.4490e-01,1.9509e-01,8.3147e-01,-5.5557e-01,-6.1232e-17,1.1314e-16,-4.6865e-17,1.0000e+00,1.8024e-01,-7.4658e-02,9.8079e-01};
			return value;
		}
		private double[] getNormal_7_855_vector_3()
		{
			double[] value = {3.5355e-01,-1.4645e-01,9.2388e-01,5.1328e-01,-2.1261e-01,8.3147e-01,6.5328e-01,-2.7060e-01,7.0711e-01,7.6818e-01,-3.1819e-01,5.5557e-01,8.5355e-01,-3.5355e-01,3.8268e-01,9.0613e-01,-3.7533e-01,1.9509e-01,9.2388e-01,-3.8268e-01,-6.1232e-17,1.2011e-16,-2.3892e-17,1.0000e+00,1.9134e-01,-3.8060e-02,9.8079e-01,3.7533e-01,-7.4658e-02,9.2388e-01,5.4490e-01,-1.0839e-01,8.3147e-01,6.9352e-01,-1.3795e-01,7.0711e-01,8.1549e-01,-1.6221e-01,5.5557e-01,9.0613e-01,-1.8024e-01,3.8268e-01,9.6194e-01,-1.9134e-01,1.9509e-01,9.8079e-01,-1.9509e-01,-6.1232e-17,1.2246e-16,-2.2496e-32,1.0000e+00,1.9509e-01,-3.5838e-17,9.8079e-01,3.8268e-01,-7.0298e-17,9.2388e-01,5.5557e-01,-1.0206e-16,8.3147e-01,7.0711e-01,-1.2989e-16,7.0711e-01,8.3147e-01,-1.5274e-16,5.5557e-01,9.2388e-01,-1.6971e-16,3.8268e-01,9.8079e-01,-1.8017e-16,1.9509e-01,1.0000e+00,-1.8370e-16,-6.1232e-17,1.2011e-16,2.3892e-17,1.0000e+00,1.9134e-01,3.8060e-02,9.8079e-01,3.7533e-01,7.4658e-02,9.2388e-01,5.4490e-01,1.0839e-01,8.3147e-01,6.9352e-01,1.3795e-01,7.0711e-01,8.1549e-01,1.6221e-01,5.5557e-01,9.0613e-01,1.8024e-01,3.8268e-01,9.6194e-01,1.9134e-01,1.9509e-01,9.8079e-01,1.9509e-01,-6.1232e-17,1.1314e-16,4.6865e-17,1.0000e+00,1.8024e-01,7.4658e-02,9.8079e-01,3.5355e-01,1.4645e-01,9.2388e-01,5.1328e-01,2.1261e-01,8.3147e-01,6.5328e-01,2.7060e-01,7.0711e-01,7.6818e-01,3.1819e-01,5.5557e-01,8.5355e-01,3.5355e-01,3.8268e-01,9.0613e-01,3.7533e-01,1.9509e-01,9.2388e-01,3.8268e-01,-6.1232e-17,1.0183e-16,6.8038e-17,1.0000e+00,1.6221e-01,1.0839e-01,9.8079e-01,3.1819e-01,2.1261e-01,9.2388e-01,4.6194e-01,3.0866e-01,8.3147e-01,5.8794e-01,3.9285e-01,7.0711e-01,6.9134e-01,4.6194e-01,5.5557e-01,7.6818e-01,5.1328e-01,3.8268e-01,8.1549e-01,5.4490e-01,1.9509e-01,8.3147e-01,5.5557e-01,-6.1232e-17,8.6596e-17,8.6596e-17,1.0000e+00,1.3795e-01,1.3795e-01,9.8079e-01,2.7060e-01,2.7060e-01,9.2388e-01,3.9285e-01,3.9285e-01,8.3147e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.8794e-01,5.8794e-01,5.5557e-01,6.5328e-01,6.5328e-01,3.8268e-01,6.9352e-01,6.9352e-01,1.9509e-01,7.0711e-01,7.0711e-01,-6.1232e-17,6.8038e-17,1.0183e-16,1.0000e+00,1.0839e-01,1.6221e-01,9.8079e-01,2.1261e-01,3.1819e-01,9.2388e-01,3.0866e-01,4.6194e-01,8.3147e-01,3.9285e-01,5.8794e-01,7.0711e-01,4.6194e-01,6.9134e-01,5.5557e-01,5.1328e-01,7.6818e-01,3.8268e-01,5.4490e-01,8.1549e-01,1.9509e-01,5.5557e-01,8.3147e-01,-6.1232e-17,4.6865e-17,1.1314e-16,1.0000e+00,7.4658e-02,1.8024e-01,9.8079e-01,1.4645e-01,3.5355e-01,9.2388e-01,2.1261e-01,5.1328e-01,8.3147e-01,2.7060e-01,6.5328e-01,7.0711e-01,3.1819e-01,7.6818e-01,5.5557e-01,3.5355e-01,8.5355e-01,3.8268e-01,3.7533e-01,9.0613e-01,1.9509e-01,3.8268e-01,9.2388e-01,-6.1232e-17,2.3892e-17,1.2011e-16,1.0000e+00,3.8060e-02,1.9134e-01,9.8079e-01,7.4658e-02,3.7533e-01,9.2388e-01,1.0839e-01,5.4490e-01,8.3147e-01,1.3795e-01,6.9352e-01,7.0711e-01,1.6221e-01,8.1549e-01,5.5557e-01,1.8024e-01,9.0613e-01,3.8268e-01,1.9134e-01,9.6194e-01,1.9509e-01,1.9509e-01,9.8079e-01,-6.1232e-17};
			return value;
		}



















		/** Large attribute array: Coordinate point field, scene-graph level=7, element #43, 141 total numbers made up of 47 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_43_point()
		{
			MFVec3f Coordinate_7_43_point = new MFVec3f(new double[] {1.5000e+00,0.0000e+00,1.1000e+01,1.4693e+00,-3.0195e-01,1.1000e+01,1.3784e+00,-5.9153e-01,1.1000e+01,1.2311e+00,-8.5690e-01,1.1000e+01,1.0335e+00,-1.0872e+00,1.1000e+01,7.9345e-01,-1.2730e+00,1.1000e+01,5.2096e-01,-1.4066e+00,1.1000e+01,2.2714e-01,-1.4827e+00,1.1000e+01,-7.5974e-02,-1.4981e+00,1.1000e+01,-3.7598e-01,-1.4521e+00,1.1000e+01,-6.6059e-01,-1.3467e+00,1.1000e+01,-9.1816e-01,-1.1862e+00,1.1000e+01,-1.1381e+00,-9.7706e-01,1.1000e+01,-1.3115e+00,-7.2795e-01,1.1000e+01,-1.4312e+00,-4.4904e-01,1.1000e+01,-1.4923e+00,-1.5175e-01,1.1000e+01,-1.4923e+00,1.5175e-01,1.1000e+01,-1.4312e+00,4.4904e-01,1.1000e+01,-1.3115e+00,7.2795e-01,1.1000e+01,-1.1381e+00,9.7706e-01,1.1000e+01,-9.1816e-01,1.1862e+00,1.1000e+01,-6.6059e-01,1.3467e+00,1.1000e+01,-3.7598e-01,1.4521e+00,1.1000e+01,-7.5974e-02,1.4981e+00,1.1000e+01,2.2714e-01,1.4827e+00,1.1000e+01,5.2096e-01,1.4066e+00,1.1000e+01,7.9345e-01,1.2730e+00,1.1000e+01,1.0335e+00,1.0872e+00,1.1000e+01,1.2311e+00,8.5690e-01,1.1000e+01,1.3784e+00,5.9153e-01,1.1000e+01,1.4693e+00,3.0195e-01,1.1000e+01,1.5000e+00,4.4409e-16,1.1000e+01,-2.5000e+00,4.8727e-02,1.1000e+01,-3.5000e+00,4.8727e-02,1.1000e+01,-3.5000e+00,-1.9998e+00,1.1000e+01,3.5000e+00,-1.9998e+00,1.1000e+01,3.5000e+00,4.8727e-02,1.1000e+01,2.5000e+00,4.8727e-02,1.1000e+01,2.5000e+00,2.3301e+00,1.1000e+01,1.9134e+00,2.6194e+00,1.1000e+01,1.2941e+00,2.8296e+00,1.1000e+01,6.5263e-01,2.9572e+00,1.1000e+01,0.0000e+00,3.0000e+00,1.1000e+01,-6.5263e-01,2.9572e+00,1.1000e+01,-1.2941e+00,2.8296e+00,1.1000e+01,-1.9134e+00,2.6194e+00,1.1000e+01,-2.5000e+00,2.3301e+00,1.1000e+01});
			return Coordinate_7_43_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #51, 327 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_51_index()
		{
			MFInt32 IndexedTriangleSet_6_51_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_51_index_1()));
			return IndexedTriangleSet_6_51_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #51, 315 total numbers made up of 105 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_51_point()
		{
			MFVec3f Coordinate_7_51_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_51_point_1()))
				.append(new MFVec3f(getCoordinate_7_51_point_2()));
			return Coordinate_7_51_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #57, 132 total numbers made up of 44 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_57_point()
		{
			MFVec3f Coordinate_7_57_point = new MFVec3f(new double[] {1.0375e+01,7.5000e-01,1.8000e+00,1.0375e+01,-7.5000e-01,1.8000e+00,1.0375e+01,-7.5000e-01,2.1500e+00,1.0375e+01,-1.2610e+00,2.1500e+00,1.0375e+01,-1.4508e+00,2.1174e+00,1.0375e+01,-1.6398e+00,2.0801e+00,1.0375e+01,-1.8278e+00,2.0384e+00,1.0375e+01,-2.0148e+00,1.9921e+00,1.0375e+01,-2.2006e+00,1.9414e+00,1.0375e+01,-2.3852e+00,1.8862e+00,1.0375e+01,-2.5683e+00,1.8265e+00,1.0375e+01,-2.7500e+00,1.7625e+00,1.0375e+01,-2.7500e+00,1.2500e+00,1.0375e+01,-2.7548e+00,1.2012e+00,1.0375e+01,-2.7690e+00,1.1543e+00,1.0375e+01,-2.7921e+00,1.1111e+00,1.0375e+01,-2.8232e+00,1.0732e+00,1.0375e+01,-2.8611e+00,1.0421e+00,1.0375e+01,-2.9043e+00,1.0190e+00,1.0375e+01,-2.9512e+00,1.0048e+00,1.0375e+01,-3.0000e+00,1.0000e+00,1.0375e+01,-3.6550e+00,1.0000e+00,1.0375e+01,-3.6550e+00,0.0000e+00,1.0375e+01,3.6550e+00,0.0000e+00,1.0375e+01,3.6550e+00,1.0000e+00,1.0375e+01,3.0000e+00,1.0000e+00,1.0375e+01,2.9512e+00,1.0048e+00,1.0375e+01,2.9043e+00,1.0190e+00,1.0375e+01,2.8611e+00,1.0421e+00,1.0375e+01,2.8232e+00,1.0732e+00,1.0375e+01,2.7921e+00,1.1111e+00,1.0375e+01,2.7690e+00,1.1543e+00,1.0375e+01,2.7548e+00,1.2012e+00,1.0375e+01,2.7500e+00,1.2500e+00,1.0375e+01,2.7500e+00,1.7625e+00,1.0375e+01,2.5683e+00,1.8265e+00,1.0375e+01,2.3852e+00,1.8862e+00,1.0375e+01,2.2006e+00,1.9414e+00,1.0375e+01,2.0148e+00,1.9921e+00,1.0375e+01,1.8278e+00,2.0384e+00,1.0375e+01,1.6398e+00,2.0801e+00,1.0375e+01,1.4508e+00,2.1174e+00,1.0375e+01,1.2610e+00,2.1500e+00,1.0375e+01,7.5000e-01,2.1500e+00});
			return Coordinate_7_57_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #63, 90 total numbers made up of 30 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_63_point()
		{
			MFVec3f Coordinate_7_63_point = new MFVec3f(new double[] {6.1215e+00,1.2610e+00,2.1500e+00,6.1776e+00,9.4857e-01,2.1500e+00,6.2178e+00,6.3374e-01,2.1500e+00,6.2419e+00,3.1728e-01,2.1500e+00,6.2500e+00,-2.2204e-16,2.1500e+00,6.2419e+00,-3.1728e-01,2.1500e+00,6.2178e+00,-6.3374e-01,2.1500e+00,6.1776e+00,-9.4857e-01,2.1500e+00,6.1215e+00,-1.2610e+00,2.1500e+00,1.0375e+01,-1.2610e+00,2.1500e+00,1.0375e+01,-7.5000e-01,2.1500e+00,8.0000e+00,-7.5000e-01,2.1500e+00,7.8537e+00,-7.3559e-01,2.1500e+00,7.7130e+00,-6.9291e-01,2.1500e+00,7.5833e+00,-6.2360e-01,2.1500e+00,7.4697e+00,-5.3033e-01,2.1500e+00,7.3764e+00,-4.1668e-01,2.1500e+00,7.3071e+00,-2.8701e-01,2.1500e+00,7.2644e+00,-1.4632e-01,2.1500e+00,7.2500e+00,0.0000e+00,2.1500e+00,7.2644e+00,1.4632e-01,2.1500e+00,7.3071e+00,2.8701e-01,2.1500e+00,7.3764e+00,4.1668e-01,2.1500e+00,7.4697e+00,5.3033e-01,2.1500e+00,7.5833e+00,6.2360e-01,2.1500e+00,7.7130e+00,6.9291e-01,2.1500e+00,7.8537e+00,7.3559e-01,2.1500e+00,8.0000e+00,7.5000e-01,2.1500e+00,1.0375e+01,7.5000e-01,2.1500e+00,1.0375e+01,1.2610e+00,2.1500e+00});
			return Coordinate_7_63_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #69, 573 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_69_index()
		{
			MFInt32 IndexedTriangleSet_6_69_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_69_index_1()));
			return IndexedTriangleSet_6_69_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #69, 549 total numbers made up of 183 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_69_point()
		{
			MFVec3f Coordinate_7_69_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_69_point_1()))
				.append(new MFVec3f(getCoordinate_7_69_point_2()));
			return Coordinate_7_69_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #75, 573 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_75_index()
		{
			MFInt32 IndexedTriangleSet_6_75_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_75_index_1()));
			return IndexedTriangleSet_6_75_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #75, 549 total numbers made up of 183 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_75_point()
		{
			MFVec3f Coordinate_7_75_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_75_point_1()))
				.append(new MFVec3f(getCoordinate_7_75_point_2()));
			return Coordinate_7_75_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #81, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_81_point()
		{
			MFVec3f Coordinate_7_81_point = new MFVec3f(new double[] {1.0375e+01,-3.6550e+00,0.0000e+00,1.0375e+01,-3.6550e+00,1.0000e+00,9.8152e+00,-4.9661e+00,0.0000e+00,9.8152e+00,-4.9661e+00,1.0000e+00,9.0905e+00,-6.1938e+00,0.0000e+00,9.0905e+00,-6.1938e+00,1.0000e+00,8.2131e+00,-7.3175e+00,0.0000e+00,8.2131e+00,-7.3175e+00,1.0000e+00,7.1977e+00,-8.3182e+00,0.0000e+00,7.1977e+00,-8.3182e+00,1.0000e+00,6.0615e+00,-9.1792e+00,0.0000e+00,6.0615e+00,-9.1792e+00,1.0000e+00,4.8235e+00,-9.8861e+00,0.0000e+00,4.8235e+00,-9.8861e+00,1.0000e+00,3.5044e+00,-1.0427e+01,0.0000e+00,3.5044e+00,-1.0427e+01,1.0000e+00,2.1265e+00,-1.0793e+01,0.0000e+00,2.1265e+00,-1.0793e+01,1.0000e+00,7.1281e-01,-1.0977e+01,0.0000e+00,7.1281e-01,-1.0977e+01,1.0000e+00,-7.1281e-01,-1.0977e+01,0.0000e+00,-7.1281e-01,-1.0977e+01,1.0000e+00,-2.1265e+00,-1.0793e+01,0.0000e+00,-2.1265e+00,-1.0793e+01,1.0000e+00,-3.5044e+00,-1.0427e+01,0.0000e+00,-3.5044e+00,-1.0427e+01,1.0000e+00,-4.8235e+00,-9.8861e+00,0.0000e+00,-4.8235e+00,-9.8861e+00,1.0000e+00,-6.0615e+00,-9.1792e+00,0.0000e+00,-6.0615e+00,-9.1792e+00,1.0000e+00,-7.1977e+00,-8.3182e+00,0.0000e+00,-7.1977e+00,-8.3182e+00,1.0000e+00,-8.2131e+00,-7.3175e+00,0.0000e+00,-8.2131e+00,-7.3175e+00,1.0000e+00,-9.0905e+00,-6.1938e+00,0.0000e+00,-9.0905e+00,-6.1938e+00,1.0000e+00,-9.8152e+00,-4.9661e+00,0.0000e+00,-9.8152e+00,-4.9661e+00,1.0000e+00,-1.0375e+01,-3.6550e+00,0.0000e+00,-1.0375e+01,-3.6550e+00,1.0000e+00});
			return Coordinate_7_81_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #82, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_82_vector()
		{
			MFVec3f Normal_7_82_vector = new MFVec3f(new double[] {9.4318e-01,-3.3228e-01,0.0000e+00,9.4318e-01,-3.3228e-01,0.0000e+00,8.9229e-01,-4.5147e-01,0.0000e+00,8.9229e-01,-4.5147e-01,0.0000e+00,8.2641e-01,-5.6307e-01,0.0000e+00,8.2641e-01,-5.6307e-01,0.0000e+00,7.4664e-01,-6.6522e-01,0.0000e+00,7.4664e-01,-6.6522e-01,0.0000e+00,6.5434e-01,-7.5620e-01,0.0000e+00,6.5434e-01,-7.5620e-01,0.0000e+00,5.5105e-01,-8.3448e-01,0.0000e+00,5.5105e-01,-8.3448e-01,0.0000e+00,4.3850e-01,-8.9873e-01,0.0000e+00,4.3850e-01,-8.9873e-01,0.0000e+00,3.1858e-01,-9.4790e-01,0.0000e+00,3.1858e-01,-9.4790e-01,0.0000e+00,1.9331e-01,-9.8114e-01,0.0000e+00,1.9331e-01,-9.8114e-01,0.0000e+00,6.4801e-02,-9.9790e-01,0.0000e+00,6.4801e-02,-9.9790e-01,0.0000e+00,-6.4801e-02,-9.9790e-01,0.0000e+00,-6.4801e-02,-9.9790e-01,0.0000e+00,-1.9331e-01,-9.8114e-01,0.0000e+00,-1.9331e-01,-9.8114e-01,0.0000e+00,-3.1858e-01,-9.4790e-01,0.0000e+00,-3.1858e-01,-9.4790e-01,0.0000e+00,-4.3850e-01,-8.9873e-01,0.0000e+00,-4.3850e-01,-8.9873e-01,0.0000e+00,-5.5105e-01,-8.3448e-01,0.0000e+00,-5.5105e-01,-8.3448e-01,0.0000e+00,-6.5434e-01,-7.5620e-01,0.0000e+00,-6.5434e-01,-7.5620e-01,0.0000e+00,-7.4664e-01,-6.6522e-01,0.0000e+00,-7.4664e-01,-6.6522e-01,0.0000e+00,-8.2641e-01,-5.6307e-01,0.0000e+00,-8.2641e-01,-5.6307e-01,0.0000e+00,-8.9229e-01,-4.5147e-01,0.0000e+00,-8.9229e-01,-4.5147e-01,0.0000e+00,-9.4318e-01,-3.3228e-01,0.0000e+00,-9.4318e-01,-3.3228e-01,0.0000e+00});
			return Normal_7_82_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #88, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_88_point()
		{
			MFVec3f Coordinate_7_88_point = new MFVec3f(new double[] {-1.0375e+01,3.6550e+00,0.0000e+00,-1.0375e+01,3.6550e+00,1.0000e+00,-9.8152e+00,4.9661e+00,0.0000e+00,-9.8152e+00,4.9661e+00,1.0000e+00,-9.0905e+00,6.1938e+00,0.0000e+00,-9.0905e+00,6.1938e+00,1.0000e+00,-8.2131e+00,7.3175e+00,0.0000e+00,-8.2131e+00,7.3175e+00,1.0000e+00,-7.1977e+00,8.3182e+00,0.0000e+00,-7.1977e+00,8.3182e+00,1.0000e+00,-6.0615e+00,9.1792e+00,0.0000e+00,-6.0615e+00,9.1792e+00,1.0000e+00,-4.8235e+00,9.8861e+00,0.0000e+00,-4.8235e+00,9.8861e+00,1.0000e+00,-3.5044e+00,1.0427e+01,0.0000e+00,-3.5044e+00,1.0427e+01,1.0000e+00,-2.1265e+00,1.0793e+01,0.0000e+00,-2.1265e+00,1.0793e+01,1.0000e+00,-7.1281e-01,1.0977e+01,0.0000e+00,-7.1281e-01,1.0977e+01,1.0000e+00,7.1281e-01,1.0977e+01,0.0000e+00,7.1281e-01,1.0977e+01,1.0000e+00,2.1265e+00,1.0793e+01,0.0000e+00,2.1265e+00,1.0793e+01,1.0000e+00,3.5044e+00,1.0427e+01,0.0000e+00,3.5044e+00,1.0427e+01,1.0000e+00,4.8235e+00,9.8861e+00,0.0000e+00,4.8235e+00,9.8861e+00,1.0000e+00,6.0615e+00,9.1792e+00,0.0000e+00,6.0615e+00,9.1792e+00,1.0000e+00,7.1977e+00,8.3182e+00,0.0000e+00,7.1977e+00,8.3182e+00,1.0000e+00,8.2131e+00,7.3175e+00,0.0000e+00,8.2131e+00,7.3175e+00,1.0000e+00,9.0905e+00,6.1938e+00,0.0000e+00,9.0905e+00,6.1938e+00,1.0000e+00,9.8152e+00,4.9661e+00,0.0000e+00,9.8152e+00,4.9661e+00,1.0000e+00,1.0375e+01,3.6550e+00,0.0000e+00,1.0375e+01,3.6550e+00,1.0000e+00});
			return Coordinate_7_88_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #89, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_89_vector()
		{
			MFVec3f Normal_7_89_vector = new MFVec3f(new double[] {-9.4318e-01,3.3228e-01,0.0000e+00,-9.4318e-01,3.3228e-01,0.0000e+00,-8.9229e-01,4.5147e-01,0.0000e+00,-8.9229e-01,4.5147e-01,0.0000e+00,-8.2641e-01,5.6307e-01,0.0000e+00,-8.2641e-01,5.6307e-01,0.0000e+00,-7.4664e-01,6.6522e-01,0.0000e+00,-7.4664e-01,6.6522e-01,0.0000e+00,-6.5434e-01,7.5620e-01,0.0000e+00,-6.5434e-01,7.5620e-01,0.0000e+00,-5.5105e-01,8.3448e-01,0.0000e+00,-5.5105e-01,8.3448e-01,0.0000e+00,-4.3850e-01,8.9873e-01,0.0000e+00,-4.3850e-01,8.9873e-01,0.0000e+00,-3.1858e-01,9.4790e-01,0.0000e+00,-3.1858e-01,9.4790e-01,0.0000e+00,-1.9331e-01,9.8114e-01,0.0000e+00,-1.9331e-01,9.8114e-01,0.0000e+00,-6.4801e-02,9.9790e-01,0.0000e+00,-6.4801e-02,9.9790e-01,0.0000e+00,6.4801e-02,9.9790e-01,0.0000e+00,6.4801e-02,9.9790e-01,0.0000e+00,1.9331e-01,9.8114e-01,0.0000e+00,1.9331e-01,9.8114e-01,0.0000e+00,3.1858e-01,9.4790e-01,0.0000e+00,3.1858e-01,9.4790e-01,0.0000e+00,4.3850e-01,8.9873e-01,0.0000e+00,4.3850e-01,8.9873e-01,0.0000e+00,5.5105e-01,8.3448e-01,0.0000e+00,5.5105e-01,8.3448e-01,0.0000e+00,6.5434e-01,7.5620e-01,0.0000e+00,6.5434e-01,7.5620e-01,0.0000e+00,7.4664e-01,6.6522e-01,0.0000e+00,7.4664e-01,6.6522e-01,0.0000e+00,8.2641e-01,5.6307e-01,0.0000e+00,8.2641e-01,5.6307e-01,0.0000e+00,8.9229e-01,4.5147e-01,0.0000e+00,8.9229e-01,4.5147e-01,0.0000e+00,9.4318e-01,3.3228e-01,0.0000e+00,9.4318e-01,3.3228e-01,0.0000e+00});
			return Normal_7_89_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #95, 1161 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_95_index()
		{
			MFInt32 IndexedTriangleSet_6_95_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_95_index_1()))
				.append(new MFInt32(getIndexedTriangleSet_6_95_index_2()));
			return IndexedTriangleSet_6_95_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #95, 1110 total numbers made up of 370 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_95_point()
		{
			MFVec3f Coordinate_7_95_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_95_point_1()))
				.append(new MFVec3f(getCoordinate_7_95_point_2()))
				.append(new MFVec3f(getCoordinate_7_95_point_3()))
				.append(new MFVec3f(getCoordinate_7_95_point_4()));
			return Coordinate_7_95_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #101, 132 total numbers made up of 44 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_101_point()
		{
			MFVec3f Coordinate_7_101_point = new MFVec3f(new double[] {-1.0375e+01,-1.2610e+00,2.1500e+00,-1.0375e+01,-7.5000e-01,2.1500e+00,-1.0375e+01,-7.5000e-01,1.8000e+00,-1.0375e+01,7.5000e-01,1.8000e+00,-1.0375e+01,7.5000e-01,2.1500e+00,-1.0375e+01,1.2610e+00,2.1500e+00,-1.0375e+01,1.4508e+00,2.1174e+00,-1.0375e+01,1.6398e+00,2.0801e+00,-1.0375e+01,1.8278e+00,2.0384e+00,-1.0375e+01,2.0148e+00,1.9921e+00,-1.0375e+01,2.2006e+00,1.9414e+00,-1.0375e+01,2.3852e+00,1.8862e+00,-1.0375e+01,2.5683e+00,1.8265e+00,-1.0375e+01,2.7500e+00,1.7625e+00,-1.0375e+01,2.7500e+00,1.2500e+00,-1.0375e+01,2.7548e+00,1.2012e+00,-1.0375e+01,2.7690e+00,1.1543e+00,-1.0375e+01,2.7921e+00,1.1111e+00,-1.0375e+01,2.8232e+00,1.0732e+00,-1.0375e+01,2.8611e+00,1.0421e+00,-1.0375e+01,2.9043e+00,1.0190e+00,-1.0375e+01,2.9512e+00,1.0048e+00,-1.0375e+01,3.0000e+00,1.0000e+00,-1.0375e+01,3.6550e+00,1.0000e+00,-1.0375e+01,3.6550e+00,0.0000e+00,-1.0375e+01,-3.6550e+00,0.0000e+00,-1.0375e+01,-3.6550e+00,1.0000e+00,-1.0375e+01,-3.0000e+00,1.0000e+00,-1.0375e+01,-2.9512e+00,1.0048e+00,-1.0375e+01,-2.9043e+00,1.0190e+00,-1.0375e+01,-2.8611e+00,1.0421e+00,-1.0375e+01,-2.8232e+00,1.0732e+00,-1.0375e+01,-2.7921e+00,1.1111e+00,-1.0375e+01,-2.7690e+00,1.1543e+00,-1.0375e+01,-2.7548e+00,1.2012e+00,-1.0375e+01,-2.7500e+00,1.2500e+00,-1.0375e+01,-2.7500e+00,1.7625e+00,-1.0375e+01,-2.5683e+00,1.8265e+00,-1.0375e+01,-2.3852e+00,1.8862e+00,-1.0375e+01,-2.2006e+00,1.9414e+00,-1.0375e+01,-2.0148e+00,1.9921e+00,-1.0375e+01,-1.8278e+00,2.0384e+00,-1.0375e+01,-1.6398e+00,2.0801e+00,-1.0375e+01,-1.4508e+00,2.1174e+00});
			return Coordinate_7_101_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #107, 348 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_107_index()
		{
			MFInt32 IndexedTriangleSet_6_107_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_107_index_1()));
			return IndexedTriangleSet_6_107_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #107, 732 total numbers made up of 244 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_107_point()
		{
			MFVec3f Coordinate_7_107_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_107_point_1()))
				.append(new MFVec3f(getCoordinate_7_107_point_2()))
				.append(new MFVec3f(getCoordinate_7_107_point_3()));
			return Coordinate_7_107_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #108, 732 total numbers made up of 244 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_108_vector()
		{
			MFVec3f Normal_7_108_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_108_vector_1()))
				.append(new MFVec3f(getNormal_7_108_vector_2()))
				.append(new MFVec3f(getNormal_7_108_vector_3()));
			return Normal_7_108_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #114, 141 total numbers made up of 47 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_114_point()
		{
			MFVec3f Coordinate_7_114_point = new MFVec3f(new double[] {-2.7500e+00,2.4721e+00,5.0000e+00,-2.1095e+00,2.8076e+00,5.0000e+00,-1.4289e+00,3.0518e+00,5.0000e+00,-7.2131e-01,3.2002e+00,5.0000e+00,-2.9143e-16,3.2500e+00,5.0000e+00,7.2131e-01,3.2002e+00,5.0000e+00,1.4289e+00,3.0518e+00,5.0000e+00,2.1095e+00,2.8076e+00,5.0000e+00,2.7500e+00,2.4721e+00,5.0000e+00,2.7500e+00,-9.6995e-01,5.0000e+00,3.7500e+00,-9.6995e-01,5.0000e+00,3.7500e+00,-3.5306e+00,5.0000e+00,-3.7500e+00,-3.5306e+00,5.0000e+00,-3.7500e+00,-9.6995e-01,5.0000e+00,-2.7500e+00,-9.6995e-01,5.0000e+00,5.7500e+00,0.0000e+00,5.0000e+00,5.6323e+00,1.1575e+00,5.0000e+00,5.2840e+00,2.2675e+00,5.0000e+00,4.7194e+00,3.2848e+00,5.0000e+00,3.9616e+00,4.1676e+00,5.0000e+00,3.0415e+00,4.8797e+00,5.0000e+00,1.9970e+00,5.3921e+00,5.0000e+00,8.7071e-01,5.6837e+00,5.0000e+00,-2.9123e-01,5.7426e+00,5.0000e+00,-1.4413e+00,5.5664e+00,5.0000e+00,-2.5323e+00,5.1624e+00,5.0000e+00,-3.5196e+00,4.5470e+00,5.0000e+00,-4.3629e+00,3.7454e+00,5.0000e+00,-5.0275e+00,2.7905e+00,5.0000e+00,-5.4863e+00,1.7213e+00,5.0000e+00,-5.7205e+00,5.8172e-01,5.0000e+00,-5.7205e+00,-5.8172e-01,5.0000e+00,-5.4863e+00,-1.7213e+00,5.0000e+00,-5.0275e+00,-2.7905e+00,5.0000e+00,-4.3629e+00,-3.7454e+00,5.0000e+00,-3.5196e+00,-4.5470e+00,5.0000e+00,-2.5323e+00,-5.1624e+00,5.0000e+00,-1.4413e+00,-5.5664e+00,5.0000e+00,-2.9123e-01,-5.7426e+00,5.0000e+00,8.7071e-01,-5.6837e+00,5.0000e+00,1.9970e+00,-5.3921e+00,5.0000e+00,3.0415e+00,-4.8797e+00,5.0000e+00,3.9616e+00,-4.1676e+00,5.0000e+00,4.7194e+00,-3.2848e+00,5.0000e+00,5.2840e+00,-2.2675e+00,5.0000e+00,5.6323e+00,-1.1575e+00,5.0000e+00,5.7500e+00,-1.4083e-15,5.0000e+00});
			return Coordinate_7_114_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #133, 90 total numbers made up of 30 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_133_point()
		{
			MFVec3f Coordinate_7_133_point = new MFVec3f(new double[] {-6.1215e+00,-1.2610e+00,2.1500e+00,-6.1776e+00,-9.4857e-01,2.1500e+00,-6.2178e+00,-6.3374e-01,2.1500e+00,-6.2419e+00,-3.1728e-01,2.1500e+00,-6.2500e+00,2.2204e-16,2.1500e+00,-6.2419e+00,3.1728e-01,2.1500e+00,-6.2178e+00,6.3374e-01,2.1500e+00,-6.1776e+00,9.4857e-01,2.1500e+00,-6.1215e+00,1.2610e+00,2.1500e+00,-1.0375e+01,1.2610e+00,2.1500e+00,-1.0375e+01,7.5000e-01,2.1500e+00,-8.0000e+00,7.5000e-01,2.1500e+00,-7.8537e+00,7.3559e-01,2.1500e+00,-7.7130e+00,6.9291e-01,2.1500e+00,-7.5833e+00,6.2360e-01,2.1500e+00,-7.4697e+00,5.3033e-01,2.1500e+00,-7.3764e+00,4.1668e-01,2.1500e+00,-7.3071e+00,2.8701e-01,2.1500e+00,-7.2644e+00,1.4632e-01,2.1500e+00,-7.2500e+00,0.0000e+00,2.1500e+00,-7.2644e+00,-1.4632e-01,2.1500e+00,-7.3071e+00,-2.8701e-01,2.1500e+00,-7.3764e+00,-4.1668e-01,2.1500e+00,-7.4697e+00,-5.3033e-01,2.1500e+00,-7.5833e+00,-6.2360e-01,2.1500e+00,-7.7130e+00,-6.9291e-01,2.1500e+00,-7.8537e+00,-7.3559e-01,2.1500e+00,-8.0000e+00,-7.5000e-01,2.1500e+00,-1.0375e+01,-7.5000e-01,2.1500e+00,-1.0375e+01,-1.2610e+00,2.1500e+00});
			return Coordinate_7_133_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #190, 249 total numbers made up of 83 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_190_point()
		{
			MFVec3f Coordinate_7_190_point = new MFVec3f(new double[] {-8.1562e+00,-1.2212e-15,1.8000e+00,-8.1531e+00,3.1453e-02,1.8000e+00,-8.1436e+00,6.1618e-02,1.8000e+00,-8.1282e+00,8.9261e-02,1.8000e+00,-8.1077e+00,1.1325e-01,1.8000e+00,-8.0827e+00,1.3260e-01,1.8000e+00,-8.0543e+00,1.4652e-01,1.8000e+00,-8.0237e+00,1.5445e-01,1.8000e+00,-7.9921e+00,1.5605e-01,1.8000e+00,-7.9608e+00,1.5126e-01,1.8000e+00,-7.9312e+00,1.4028e-01,1.8000e+00,-7.9044e+00,1.2356e-01,1.8000e+00,-7.8814e+00,1.0178e-01,1.8000e+00,-7.8634e+00,7.5828e-02,1.8000e+00,-7.8509e+00,4.6775e-02,1.8000e+00,-7.8446e+00,1.5808e-02,1.8000e+00,-7.8446e+00,-1.5808e-02,1.8000e+00,-7.8509e+00,-4.6775e-02,1.8000e+00,-7.8634e+00,-7.5828e-02,1.8000e+00,-7.8814e+00,-1.0178e-01,1.8000e+00,-7.9044e+00,-1.2356e-01,1.8000e+00,-7.9312e+00,-1.4028e-01,1.8000e+00,-7.9608e+00,-1.5126e-01,1.8000e+00,-7.9921e+00,-1.5605e-01,1.8000e+00,-8.0237e+00,-1.5445e-01,1.8000e+00,-8.0543e+00,-1.4652e-01,1.8000e+00,-8.0827e+00,-1.3260e-01,1.8000e+00,-8.1077e+00,-1.1325e-01,1.8000e+00,-8.1282e+00,-8.9261e-02,1.8000e+00,-8.1436e+00,-6.1618e-02,1.8000e+00,-8.1531e+00,-3.1453e-02,1.8000e+00,-8.1562e+00,-1.2595e-15,1.8000e+00,-9.4062e+00,-1.3997e-15,1.8000e+00,-9.4031e+00,3.1453e-02,1.8000e+00,-9.3936e+00,6.1618e-02,1.8000e+00,-9.3782e+00,8.9261e-02,1.8000e+00,-9.3577e+00,1.1325e-01,1.8000e+00,-9.3327e+00,1.3260e-01,1.8000e+00,-9.3043e+00,1.4652e-01,1.8000e+00,-9.2737e+00,1.5445e-01,1.8000e+00,-9.2421e+00,1.5605e-01,1.8000e+00,-9.2108e+00,1.5126e-01,1.8000e+00,-9.1812e+00,1.4028e-01,1.8000e+00,-9.1544e+00,1.2356e-01,1.8000e+00,-9.1314e+00,1.0178e-01,1.8000e+00,-9.1134e+00,7.5828e-02,1.8000e+00,-9.1009e+00,4.6775e-02,1.8000e+00,-9.0946e+00,1.5808e-02,1.8000e+00,-9.0946e+00,-1.5808e-02,1.8000e+00,-9.1009e+00,-4.6775e-02,1.8000e+00,-9.1134e+00,-7.5828e-02,1.8000e+00,-9.1314e+00,-1.0178e-01,1.8000e+00,-9.1544e+00,-1.2356e-01,1.8000e+00,-9.1812e+00,-1.4028e-01,1.8000e+00,-9.2108e+00,-1.5126e-01,1.8000e+00,-9.2421e+00,-1.5605e-01,1.8000e+00,-9.2737e+00,-1.5445e-01,1.8000e+00,-9.3043e+00,-1.4652e-01,1.8000e+00,-9.3327e+00,-1.3260e-01,1.8000e+00,-9.3577e+00,-1.1325e-01,1.8000e+00,-9.3782e+00,-8.9261e-02,1.8000e+00,-9.3936e+00,-6.1618e-02,1.8000e+00,-9.4031e+00,-3.1453e-02,1.8000e+00,-9.4062e+00,-1.4380e-15,1.8000e+00,-1.0375e+01,-7.5000e-01,1.8000e+00,-8.0000e+00,-7.5000e-01,1.8000e+00,-7.8537e+00,-7.3559e-01,1.8000e+00,-7.7130e+00,-6.9291e-01,1.8000e+00,-7.5833e+00,-6.2360e-01,1.8000e+00,-7.4697e+00,-5.3033e-01,1.8000e+00,-7.3764e+00,-4.1668e-01,1.8000e+00,-7.3071e+00,-2.8701e-01,1.8000e+00,-7.2644e+00,-1.4632e-01,1.8000e+00,-7.2500e+00,-4.5924e-17,1.8000e+00,-7.2644e+00,1.4632e-01,1.8000e+00,-7.3071e+00,2.8701e-01,1.8000e+00,-7.3764e+00,4.1668e-01,1.8000e+00,-7.4697e+00,5.3033e-01,1.8000e+00,-7.5833e+00,6.2360e-01,1.8000e+00,-7.7130e+00,6.9291e-01,1.8000e+00,-7.8537e+00,7.3559e-01,1.8000e+00,-8.0000e+00,7.5000e-01,1.8000e+00,-1.0375e+01,7.5000e-01,1.8000e+00});
			return Coordinate_7_190_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #196, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_196_point()
		{
			MFVec3f Coordinate_7_196_point = new MFVec3f(new double[] {-8.0000e+00,-7.5000e-01,2.1500e+00,-8.0000e+00,-7.5000e-01,1.8000e+00,-7.9021e+00,-7.4358e-01,2.1500e+00,-7.9021e+00,-7.4358e-01,1.8000e+00,-7.8059e+00,-7.2444e-01,2.1500e+00,-7.8059e+00,-7.2444e-01,1.8000e+00,-7.7130e+00,-6.9291e-01,2.1500e+00,-7.7130e+00,-6.9291e-01,1.8000e+00,-7.6250e+00,-6.4952e-01,2.1500e+00,-7.6250e+00,-6.4952e-01,1.8000e+00,-7.5434e+00,-5.9502e-01,2.1500e+00,-7.5434e+00,-5.9502e-01,1.8000e+00,-7.4697e+00,-5.3033e-01,2.1500e+00,-7.4697e+00,-5.3033e-01,1.8000e+00,-7.4050e+00,-4.5657e-01,2.1500e+00,-7.4050e+00,-4.5657e-01,1.8000e+00,-7.3505e+00,-3.7500e-01,2.1500e+00,-7.3505e+00,-3.7500e-01,1.8000e+00,-7.3071e+00,-2.8701e-01,2.1500e+00,-7.3071e+00,-2.8701e-01,1.8000e+00,-7.2756e+00,-1.9411e-01,2.1500e+00,-7.2756e+00,-1.9411e-01,1.8000e+00,-7.2564e+00,-9.7895e-02,2.1500e+00,-7.2564e+00,-9.7895e-02,1.8000e+00,-7.2500e+00,4.5924e-17,2.1500e+00,-7.2500e+00,4.5924e-17,1.8000e+00,-7.2564e+00,9.7895e-02,2.1500e+00,-7.2564e+00,9.7895e-02,1.8000e+00,-7.2756e+00,1.9411e-01,2.1500e+00,-7.2756e+00,1.9411e-01,1.8000e+00,-7.3071e+00,2.8701e-01,2.1500e+00,-7.3071e+00,2.8701e-01,1.8000e+00,-7.3505e+00,3.7500e-01,2.1500e+00,-7.3505e+00,3.7500e-01,1.8000e+00,-7.4050e+00,4.5657e-01,2.1500e+00,-7.4050e+00,4.5657e-01,1.8000e+00,-7.4697e+00,5.3033e-01,2.1500e+00,-7.4697e+00,5.3033e-01,1.8000e+00,-7.5434e+00,5.9502e-01,2.1500e+00,-7.5434e+00,5.9502e-01,1.8000e+00,-7.6250e+00,6.4952e-01,2.1500e+00,-7.6250e+00,6.4952e-01,1.8000e+00,-7.7130e+00,6.9291e-01,2.1500e+00,-7.7130e+00,6.9291e-01,1.8000e+00,-7.8059e+00,7.2444e-01,2.1500e+00,-7.8059e+00,7.2444e-01,1.8000e+00,-7.9021e+00,7.4358e-01,2.1500e+00,-7.9021e+00,7.4358e-01,1.8000e+00,-8.0000e+00,7.5000e-01,2.1500e+00,-8.0000e+00,7.5000e-01,1.8000e+00});
			return Coordinate_7_196_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #197, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_197_vector()
		{
			MFVec3f Normal_7_197_vector = new MFVec3f(new double[] {-1.2246e-16,1.0000e+00,-0.0000e+00,-1.2246e-16,1.0000e+00,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00});
			return Normal_7_197_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #215, 249 total numbers made up of 83 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_215_point()
		{
			MFVec3f Coordinate_7_215_point = new MFVec3f(new double[] {9.0938e+00,-1.3997e-15,1.8000e+00,9.0969e+00,3.1453e-02,1.8000e+00,9.1064e+00,6.1618e-02,1.8000e+00,9.1218e+00,8.9261e-02,1.8000e+00,9.1423e+00,1.1325e-01,1.8000e+00,9.1673e+00,1.3260e-01,1.8000e+00,9.1957e+00,1.4652e-01,1.8000e+00,9.2263e+00,1.5445e-01,1.8000e+00,9.2579e+00,1.5605e-01,1.8000e+00,9.2892e+00,1.5126e-01,1.8000e+00,9.3188e+00,1.4028e-01,1.8000e+00,9.3456e+00,1.2356e-01,1.8000e+00,9.3686e+00,1.0178e-01,1.8000e+00,9.3866e+00,7.5828e-02,1.8000e+00,9.3991e+00,4.6775e-02,1.8000e+00,9.4054e+00,1.5808e-02,1.8000e+00,9.4054e+00,-1.5808e-02,1.8000e+00,9.3991e+00,-4.6775e-02,1.8000e+00,9.3866e+00,-7.5828e-02,1.8000e+00,9.3686e+00,-1.0178e-01,1.8000e+00,9.3456e+00,-1.2356e-01,1.8000e+00,9.3188e+00,-1.4028e-01,1.8000e+00,9.2892e+00,-1.5126e-01,1.8000e+00,9.2579e+00,-1.5605e-01,1.8000e+00,9.2263e+00,-1.5445e-01,1.8000e+00,9.1957e+00,-1.4652e-01,1.8000e+00,9.1673e+00,-1.3260e-01,1.8000e+00,9.1423e+00,-1.1325e-01,1.8000e+00,9.1218e+00,-8.9261e-02,1.8000e+00,9.1064e+00,-6.1618e-02,1.8000e+00,9.0969e+00,-3.1453e-02,1.8000e+00,9.0938e+00,-1.4380e-15,1.8000e+00,7.8438e+00,-1.2212e-15,1.8000e+00,7.8469e+00,3.1453e-02,1.8000e+00,7.8564e+00,6.1618e-02,1.8000e+00,7.8718e+00,8.9261e-02,1.8000e+00,7.8923e+00,1.1325e-01,1.8000e+00,7.9173e+00,1.3260e-01,1.8000e+00,7.9457e+00,1.4652e-01,1.8000e+00,7.9763e+00,1.5445e-01,1.8000e+00,8.0079e+00,1.5605e-01,1.8000e+00,8.0392e+00,1.5126e-01,1.8000e+00,8.0688e+00,1.4028e-01,1.8000e+00,8.0956e+00,1.2356e-01,1.8000e+00,8.1186e+00,1.0178e-01,1.8000e+00,8.1366e+00,7.5828e-02,1.8000e+00,8.1491e+00,4.6775e-02,1.8000e+00,8.1554e+00,1.5808e-02,1.8000e+00,8.1554e+00,-1.5808e-02,1.8000e+00,8.1491e+00,-4.6775e-02,1.8000e+00,8.1366e+00,-7.5828e-02,1.8000e+00,8.1186e+00,-1.0178e-01,1.8000e+00,8.0956e+00,-1.2356e-01,1.8000e+00,8.0688e+00,-1.4028e-01,1.8000e+00,8.0392e+00,-1.5126e-01,1.8000e+00,8.0079e+00,-1.5605e-01,1.8000e+00,7.9763e+00,-1.5445e-01,1.8000e+00,7.9457e+00,-1.4652e-01,1.8000e+00,7.9173e+00,-1.3260e-01,1.8000e+00,7.8923e+00,-1.1325e-01,1.8000e+00,7.8718e+00,-8.9261e-02,1.8000e+00,7.8564e+00,-6.1618e-02,1.8000e+00,7.8469e+00,-3.1453e-02,1.8000e+00,7.8438e+00,-1.2595e-15,1.8000e+00,8.0000e+00,7.5000e-01,1.8000e+00,7.8537e+00,7.3559e-01,1.8000e+00,7.7130e+00,6.9291e-01,1.8000e+00,7.5833e+00,6.2360e-01,1.8000e+00,7.4697e+00,5.3033e-01,1.8000e+00,7.3764e+00,4.1668e-01,1.8000e+00,7.3071e+00,2.8701e-01,1.8000e+00,7.2644e+00,1.4632e-01,1.8000e+00,7.2500e+00,4.5924e-17,1.8000e+00,7.2644e+00,-1.4632e-01,1.8000e+00,7.3071e+00,-2.8701e-01,1.8000e+00,7.3764e+00,-4.1668e-01,1.8000e+00,7.4697e+00,-5.3033e-01,1.8000e+00,7.5833e+00,-6.2360e-01,1.8000e+00,7.7130e+00,-6.9291e-01,1.8000e+00,7.8537e+00,-7.3559e-01,1.8000e+00,8.0000e+00,-7.5000e-01,1.8000e+00,1.0375e+01,-7.5000e-01,1.8000e+00,1.0375e+01,7.5000e-01,1.8000e+00});
			return Coordinate_7_215_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #221, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_221_point()
		{
			MFVec3f Coordinate_7_221_point = new MFVec3f(new double[] {8.0000e+00,7.5000e-01,2.1500e+00,8.0000e+00,7.5000e-01,1.8000e+00,7.9021e+00,7.4358e-01,2.1500e+00,7.9021e+00,7.4358e-01,1.8000e+00,7.8059e+00,7.2444e-01,2.1500e+00,7.8059e+00,7.2444e-01,1.8000e+00,7.7130e+00,6.9291e-01,2.1500e+00,7.7130e+00,6.9291e-01,1.8000e+00,7.6250e+00,6.4952e-01,2.1500e+00,7.6250e+00,6.4952e-01,1.8000e+00,7.5434e+00,5.9502e-01,2.1500e+00,7.5434e+00,5.9502e-01,1.8000e+00,7.4697e+00,5.3033e-01,2.1500e+00,7.4697e+00,5.3033e-01,1.8000e+00,7.4050e+00,4.5657e-01,2.1500e+00,7.4050e+00,4.5657e-01,1.8000e+00,7.3505e+00,3.7500e-01,2.1500e+00,7.3505e+00,3.7500e-01,1.8000e+00,7.3071e+00,2.8701e-01,2.1500e+00,7.3071e+00,2.8701e-01,1.8000e+00,7.2756e+00,1.9411e-01,2.1500e+00,7.2756e+00,1.9411e-01,1.8000e+00,7.2564e+00,9.7895e-02,2.1500e+00,7.2564e+00,9.7895e-02,1.8000e+00,7.2500e+00,4.5924e-17,2.1500e+00,7.2500e+00,4.5924e-17,1.8000e+00,7.2564e+00,-9.7895e-02,2.1500e+00,7.2564e+00,-9.7895e-02,1.8000e+00,7.2756e+00,-1.9411e-01,2.1500e+00,7.2756e+00,-1.9411e-01,1.8000e+00,7.3071e+00,-2.8701e-01,2.1500e+00,7.3071e+00,-2.8701e-01,1.8000e+00,7.3505e+00,-3.7500e-01,2.1500e+00,7.3505e+00,-3.7500e-01,1.8000e+00,7.4050e+00,-4.5657e-01,2.1500e+00,7.4050e+00,-4.5657e-01,1.8000e+00,7.4697e+00,-5.3033e-01,2.1500e+00,7.4697e+00,-5.3033e-01,1.8000e+00,7.5434e+00,-5.9502e-01,2.1500e+00,7.5434e+00,-5.9502e-01,1.8000e+00,7.6250e+00,-6.4952e-01,2.1500e+00,7.6250e+00,-6.4952e-01,1.8000e+00,7.7130e+00,-6.9291e-01,2.1500e+00,7.7130e+00,-6.9291e-01,1.8000e+00,7.8059e+00,-7.2444e-01,2.1500e+00,7.8059e+00,-7.2444e-01,1.8000e+00,7.9021e+00,-7.4358e-01,2.1500e+00,7.9021e+00,-7.4358e-01,1.8000e+00,8.0000e+00,-7.5000e-01,2.1500e+00,8.0000e+00,-7.5000e-01,1.8000e+00});
			return Coordinate_7_221_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #222, 150 total numbers made up of 50 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_222_vector()
		{
			MFVec3f Normal_7_222_vector = new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,1.0000e+00,-6.1232e-17,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00});
			return Normal_7_222_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #228, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_228_point()
		{
			MFVec3f Coordinate_7_228_point = new MFVec3f(new double[] {-9.2500e+00,1.5625e-01,6.0000e-01,-9.2704e+00,1.5491e-01,6.0000e-01,-9.2904e+00,1.5093e-01,6.0000e-01,-9.3098e+00,1.4436e-01,6.0000e-01,-9.3281e+00,1.3532e-01,6.0000e-01,-9.3451e+00,1.2396e-01,6.0000e-01,-9.3605e+00,1.1049e-01,6.0000e-01,-9.3740e+00,9.5119e-02,6.0000e-01,-9.3853e+00,7.8125e-02,6.0000e-01,-9.3944e+00,5.9794e-02,6.0000e-01,-9.4009e+00,4.0440e-02,6.0000e-01,-9.4049e+00,2.0395e-02,6.0000e-01,-9.4062e+00,-1.3901e-15,6.0000e-01,-9.4049e+00,-2.0395e-02,6.0000e-01,-9.4009e+00,-4.0440e-02,6.0000e-01,-9.3944e+00,-5.9794e-02,6.0000e-01,-9.3853e+00,-7.8125e-02,6.0000e-01,-9.3740e+00,-9.5119e-02,6.0000e-01,-9.3605e+00,-1.1049e-01,6.0000e-01,-9.3451e+00,-1.2396e-01,6.0000e-01,-9.3281e+00,-1.3532e-01,6.0000e-01,-9.3098e+00,-1.4436e-01,6.0000e-01,-9.2904e+00,-1.5093e-01,6.0000e-01,-9.2704e+00,-1.5491e-01,6.0000e-01,-9.2500e+00,-1.5625e-01,6.0000e-01,-9.2296e+00,-1.5491e-01,6.0000e-01,-9.2096e+00,-1.5093e-01,6.0000e-01,-9.1902e+00,-1.4436e-01,6.0000e-01,-9.1719e+00,-1.3532e-01,6.0000e-01,-9.1549e+00,-1.2396e-01,6.0000e-01,-9.1395e+00,-1.1049e-01,6.0000e-01,-9.1260e+00,-9.5119e-02,6.0000e-01,-9.1147e+00,-7.8125e-02,6.0000e-01,-9.1056e+00,-5.9794e-02,6.0000e-01,-9.0991e+00,-4.0440e-02,6.0000e-01,-9.0951e+00,-2.0395e-02,6.0000e-01,-9.0938e+00,-1.4284e-15,6.0000e-01,-9.0951e+00,2.0395e-02,6.0000e-01,-9.0991e+00,4.0440e-02,6.0000e-01,-9.1056e+00,5.9794e-02,6.0000e-01,-9.1147e+00,7.8125e-02,6.0000e-01,-9.1260e+00,9.5119e-02,6.0000e-01,-9.1395e+00,1.1049e-01,6.0000e-01,-9.1549e+00,1.2396e-01,6.0000e-01,-9.1719e+00,1.3532e-01,6.0000e-01,-9.1902e+00,1.4436e-01,6.0000e-01,-9.2096e+00,1.5093e-01,6.0000e-01,-9.2296e+00,1.5491e-01,6.0000e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01,-9.2500e+00,-1.3997e-15,5.0612e-01});
			return Coordinate_7_228_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #229, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_229_vector()
		{
			MFVec3f Normal_7_229_vector = new MFVec3f(new double[] {-0.0000e+00,-5.1504e-01,8.5717e-01,6.7226e-02,-5.1063e-01,8.5717e-01,1.3330e-01,-4.9749e-01,8.5717e-01,1.9710e-01,-4.7583e-01,8.5717e-01,2.5752e-01,-4.4604e-01,8.5717e-01,3.1354e-01,-4.0861e-01,8.5717e-01,3.6419e-01,-3.6419e-01,8.5717e-01,4.0861e-01,-3.1354e-01,8.5717e-01,4.4604e-01,-2.5752e-01,8.5717e-01,4.7583e-01,-1.9710e-01,8.5717e-01,4.9749e-01,-1.3330e-01,8.5717e-01,5.1063e-01,-6.7226e-02,8.5717e-01,5.1504e-01,-3.1537e-17,8.5717e-01,5.1063e-01,6.7226e-02,8.5717e-01,4.9749e-01,1.3330e-01,8.5717e-01,4.7583e-01,1.9710e-01,8.5717e-01,4.4604e-01,2.5752e-01,8.5717e-01,4.0861e-01,3.1354e-01,8.5717e-01,3.6419e-01,3.6419e-01,8.5717e-01,3.1354e-01,4.0861e-01,8.5717e-01,2.5752e-01,4.4604e-01,8.5717e-01,1.9710e-01,4.7583e-01,8.5717e-01,1.3330e-01,4.9749e-01,8.5717e-01,6.7226e-02,5.1063e-01,8.5717e-01,6.3074e-17,5.1504e-01,8.5717e-01,-6.7226e-02,5.1063e-01,8.5717e-01,-1.3330e-01,4.9749e-01,8.5717e-01,-1.9710e-01,4.7583e-01,8.5717e-01,-2.5752e-01,4.4604e-01,8.5717e-01,-3.1354e-01,4.0861e-01,8.5717e-01,-3.6419e-01,3.6419e-01,8.5717e-01,-4.0861e-01,3.1354e-01,8.5717e-01,-4.4604e-01,2.5752e-01,8.5717e-01,-4.7583e-01,1.9710e-01,8.5717e-01,-4.9749e-01,1.3330e-01,8.5717e-01,-5.1063e-01,6.7226e-02,8.5717e-01,-5.1504e-01,9.4611e-17,8.5717e-01,-5.1063e-01,-6.7226e-02,8.5717e-01,-4.9749e-01,-1.3330e-01,8.5717e-01,-4.7583e-01,-1.9710e-01,8.5717e-01,-4.4604e-01,-2.5752e-01,8.5717e-01,-4.0861e-01,-3.1354e-01,8.5717e-01,-3.6419e-01,-3.6419e-01,8.5717e-01,-3.1354e-01,-4.0861e-01,8.5717e-01,-2.5752e-01,-4.4604e-01,8.5717e-01,-1.9710e-01,-4.7583e-01,8.5717e-01,-1.3330e-01,-4.9749e-01,8.5717e-01,-6.7226e-02,-5.1063e-01,8.5717e-01,3.3685e-02,-5.1394e-01,8.5717e-01,1.0048e-01,-5.0514e-01,8.5717e-01,1.6555e-01,-4.8771e-01,8.5717e-01,2.2780e-01,-4.6192e-01,8.5717e-01,2.8614e-01,-4.2824e-01,8.5717e-01,3.3959e-01,-3.8723e-01,8.5717e-01,3.8723e-01,-3.3959e-01,8.5717e-01,4.2824e-01,-2.8614e-01,8.5717e-01,4.6192e-01,-2.2780e-01,8.5717e-01,4.8771e-01,-1.6555e-01,8.5717e-01,5.0514e-01,-1.0048e-01,8.5717e-01,5.1394e-01,-3.3685e-02,8.5717e-01,5.1394e-01,3.3685e-02,8.5717e-01,5.0514e-01,1.0048e-01,8.5717e-01,4.8771e-01,1.6555e-01,8.5717e-01,4.6192e-01,2.2780e-01,8.5717e-01,4.2824e-01,2.8614e-01,8.5717e-01,3.8723e-01,3.3959e-01,8.5717e-01,3.3959e-01,3.8723e-01,8.5717e-01,2.8614e-01,4.2824e-01,8.5717e-01,2.2780e-01,4.6192e-01,8.5717e-01,1.6555e-01,4.8771e-01,8.5717e-01,1.0048e-01,5.0514e-01,8.5717e-01,3.3685e-02,5.1394e-01,8.5717e-01,-3.3685e-02,5.1394e-01,8.5717e-01,-1.0048e-01,5.0514e-01,8.5717e-01,-1.6555e-01,4.8771e-01,8.5717e-01,-2.2780e-01,4.6192e-01,8.5717e-01,-2.8614e-01,4.2824e-01,8.5717e-01,-3.3959e-01,3.8723e-01,8.5717e-01,-3.8723e-01,3.3959e-01,8.5717e-01,-4.2824e-01,2.8614e-01,8.5717e-01,-4.6192e-01,2.2780e-01,8.5717e-01,-4.8771e-01,1.6555e-01,8.5717e-01,-5.0514e-01,1.0048e-01,8.5717e-01,-5.1394e-01,3.3685e-02,8.5717e-01,-5.1394e-01,-3.3685e-02,8.5717e-01,-5.0514e-01,-1.0048e-01,8.5717e-01,-4.8771e-01,-1.6555e-01,8.5717e-01,-4.6192e-01,-2.2780e-01,8.5717e-01,-4.2824e-01,-2.8614e-01,8.5717e-01,-3.8723e-01,-3.3959e-01,8.5717e-01,-3.3959e-01,-3.8723e-01,8.5717e-01,-2.8614e-01,-4.2824e-01,8.5717e-01,-2.2780e-01,-4.6192e-01,8.5717e-01,-1.6555e-01,-4.8771e-01,8.5717e-01,-1.0048e-01,-5.0514e-01,8.5717e-01,-3.3685e-02,-5.1394e-01,8.5717e-01});
			return Normal_7_229_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #235, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_235_point()
		{
			MFVec3f Coordinate_7_235_point = new MFVec3f(new double[] {-9.2500e+00,-1.5625e-01,6.0000e-01,-9.2500e+00,-1.5625e-01,1.8000e+00,-9.2704e+00,-1.5491e-01,6.0000e-01,-9.2704e+00,-1.5491e-01,1.8000e+00,-9.2904e+00,-1.5093e-01,6.0000e-01,-9.2904e+00,-1.5093e-01,1.8000e+00,-9.3098e+00,-1.4436e-01,6.0000e-01,-9.3098e+00,-1.4436e-01,1.8000e+00,-9.3281e+00,-1.3532e-01,6.0000e-01,-9.3281e+00,-1.3532e-01,1.8000e+00,-9.3451e+00,-1.2396e-01,6.0000e-01,-9.3451e+00,-1.2396e-01,1.8000e+00,-9.3605e+00,-1.1049e-01,6.0000e-01,-9.3605e+00,-1.1049e-01,1.8000e+00,-9.3740e+00,-9.5119e-02,6.0000e-01,-9.3740e+00,-9.5119e-02,1.8000e+00,-9.3853e+00,-7.8125e-02,6.0000e-01,-9.3853e+00,-7.8125e-02,1.8000e+00,-9.3944e+00,-5.9794e-02,6.0000e-01,-9.3944e+00,-5.9794e-02,1.8000e+00,-9.4009e+00,-4.0440e-02,6.0000e-01,-9.4009e+00,-4.0440e-02,1.8000e+00,-9.4049e+00,-2.0395e-02,6.0000e-01,-9.4049e+00,-2.0395e-02,1.8000e+00,-9.4062e+00,-1.4093e-15,6.0000e-01,-9.4062e+00,-1.4093e-15,1.8000e+00,-9.4049e+00,2.0395e-02,6.0000e-01,-9.4049e+00,2.0395e-02,1.8000e+00,-9.4009e+00,4.0440e-02,6.0000e-01,-9.4009e+00,4.0440e-02,1.8000e+00,-9.3944e+00,5.9794e-02,6.0000e-01,-9.3944e+00,5.9794e-02,1.8000e+00,-9.3853e+00,7.8125e-02,6.0000e-01,-9.3853e+00,7.8125e-02,1.8000e+00,-9.3740e+00,9.5119e-02,6.0000e-01,-9.3740e+00,9.5119e-02,1.8000e+00,-9.3605e+00,1.1049e-01,6.0000e-01,-9.3605e+00,1.1049e-01,1.8000e+00,-9.3451e+00,1.2396e-01,6.0000e-01,-9.3451e+00,1.2396e-01,1.8000e+00,-9.3281e+00,1.3532e-01,6.0000e-01,-9.3281e+00,1.3532e-01,1.8000e+00,-9.3098e+00,1.4436e-01,6.0000e-01,-9.3098e+00,1.4436e-01,1.8000e+00,-9.2904e+00,1.5093e-01,6.0000e-01,-9.2904e+00,1.5093e-01,1.8000e+00,-9.2704e+00,1.5491e-01,6.0000e-01,-9.2704e+00,1.5491e-01,1.8000e+00,-9.2500e+00,1.5625e-01,6.0000e-01,-9.2500e+00,1.5625e-01,1.8000e+00,-9.2296e+00,1.5491e-01,6.0000e-01,-9.2296e+00,1.5491e-01,1.8000e+00,-9.2096e+00,1.5093e-01,6.0000e-01,-9.2096e+00,1.5093e-01,1.8000e+00,-9.1902e+00,1.4436e-01,6.0000e-01,-9.1902e+00,1.4436e-01,1.8000e+00,-9.1719e+00,1.3532e-01,6.0000e-01,-9.1719e+00,1.3532e-01,1.8000e+00,-9.1549e+00,1.2396e-01,6.0000e-01,-9.1549e+00,1.2396e-01,1.8000e+00,-9.1395e+00,1.1049e-01,6.0000e-01,-9.1395e+00,1.1049e-01,1.8000e+00,-9.1260e+00,9.5119e-02,6.0000e-01,-9.1260e+00,9.5119e-02,1.8000e+00,-9.1147e+00,7.8125e-02,6.0000e-01,-9.1147e+00,7.8125e-02,1.8000e+00,-9.1056e+00,5.9794e-02,6.0000e-01,-9.1056e+00,5.9794e-02,1.8000e+00,-9.0991e+00,4.0440e-02,6.0000e-01,-9.0991e+00,4.0440e-02,1.8000e+00,-9.0951e+00,2.0395e-02,6.0000e-01,-9.0951e+00,2.0395e-02,1.8000e+00,-9.0938e+00,-1.3710e-15,6.0000e-01,-9.0938e+00,-1.3710e-15,1.8000e+00,-9.0951e+00,-2.0395e-02,6.0000e-01,-9.0951e+00,-2.0395e-02,1.8000e+00,-9.0991e+00,-4.0440e-02,6.0000e-01,-9.0991e+00,-4.0440e-02,1.8000e+00,-9.1056e+00,-5.9794e-02,6.0000e-01,-9.1056e+00,-5.9794e-02,1.8000e+00,-9.1147e+00,-7.8125e-02,6.0000e-01,-9.1147e+00,-7.8125e-02,1.8000e+00,-9.1260e+00,-9.5119e-02,6.0000e-01,-9.1260e+00,-9.5119e-02,1.8000e+00,-9.1395e+00,-1.1049e-01,6.0000e-01,-9.1395e+00,-1.1049e-01,1.8000e+00,-9.1549e+00,-1.2396e-01,6.0000e-01,-9.1549e+00,-1.2396e-01,1.8000e+00,-9.1719e+00,-1.3532e-01,6.0000e-01,-9.1719e+00,-1.3532e-01,1.8000e+00,-9.1902e+00,-1.4436e-01,6.0000e-01,-9.1902e+00,-1.4436e-01,1.8000e+00,-9.2096e+00,-1.5093e-01,6.0000e-01,-9.2096e+00,-1.5093e-01,1.8000e+00,-9.2296e+00,-1.5491e-01,6.0000e-01,-9.2296e+00,-1.5491e-01,1.8000e+00});
			return Coordinate_7_235_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #236, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_236_vector()
		{
			MFVec3f Normal_7_236_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_236_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #242, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_242_point()
		{
			MFVec3f Coordinate_7_242_point = new MFVec3f(new double[] {-8.0000e+00,1.5625e-01,6.0000e-01,-8.0204e+00,1.5491e-01,6.0000e-01,-8.0404e+00,1.5093e-01,6.0000e-01,-8.0598e+00,1.4436e-01,6.0000e-01,-8.0781e+00,1.3532e-01,6.0000e-01,-8.0951e+00,1.2396e-01,6.0000e-01,-8.1105e+00,1.1049e-01,6.0000e-01,-8.1240e+00,9.5119e-02,6.0000e-01,-8.1353e+00,7.8125e-02,6.0000e-01,-8.1444e+00,5.9794e-02,6.0000e-01,-8.1509e+00,4.0440e-02,6.0000e-01,-8.1549e+00,2.0395e-02,6.0000e-01,-8.1562e+00,-1.2117e-15,6.0000e-01,-8.1549e+00,-2.0395e-02,6.0000e-01,-8.1509e+00,-4.0440e-02,6.0000e-01,-8.1444e+00,-5.9794e-02,6.0000e-01,-8.1353e+00,-7.8125e-02,6.0000e-01,-8.1240e+00,-9.5119e-02,6.0000e-01,-8.1105e+00,-1.1049e-01,6.0000e-01,-8.0951e+00,-1.2396e-01,6.0000e-01,-8.0781e+00,-1.3532e-01,6.0000e-01,-8.0598e+00,-1.4436e-01,6.0000e-01,-8.0404e+00,-1.5093e-01,6.0000e-01,-8.0204e+00,-1.5491e-01,6.0000e-01,-8.0000e+00,-1.5625e-01,6.0000e-01,-7.9796e+00,-1.5491e-01,6.0000e-01,-7.9596e+00,-1.5093e-01,6.0000e-01,-7.9402e+00,-1.4436e-01,6.0000e-01,-7.9219e+00,-1.3532e-01,6.0000e-01,-7.9049e+00,-1.2396e-01,6.0000e-01,-7.8895e+00,-1.1049e-01,6.0000e-01,-7.8760e+00,-9.5119e-02,6.0000e-01,-7.8647e+00,-7.8125e-02,6.0000e-01,-7.8556e+00,-5.9794e-02,6.0000e-01,-7.8491e+00,-4.0440e-02,6.0000e-01,-7.8451e+00,-2.0395e-02,6.0000e-01,-7.8438e+00,-1.2499e-15,6.0000e-01,-7.8451e+00,2.0395e-02,6.0000e-01,-7.8491e+00,4.0440e-02,6.0000e-01,-7.8556e+00,5.9794e-02,6.0000e-01,-7.8647e+00,7.8125e-02,6.0000e-01,-7.8760e+00,9.5119e-02,6.0000e-01,-7.8895e+00,1.1049e-01,6.0000e-01,-7.9049e+00,1.2396e-01,6.0000e-01,-7.9219e+00,1.3532e-01,6.0000e-01,-7.9402e+00,1.4436e-01,6.0000e-01,-7.9596e+00,1.5093e-01,6.0000e-01,-7.9796e+00,1.5491e-01,6.0000e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01,-8.0000e+00,-1.2212e-15,5.0612e-01});
			return Coordinate_7_242_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #243, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_243_vector()
		{
			MFVec3f Normal_7_243_vector = new MFVec3f(new double[] {-0.0000e+00,-5.1504e-01,8.5717e-01,6.7226e-02,-5.1063e-01,8.5717e-01,1.3330e-01,-4.9749e-01,8.5717e-01,1.9710e-01,-4.7583e-01,8.5717e-01,2.5752e-01,-4.4604e-01,8.5717e-01,3.1354e-01,-4.0861e-01,8.5717e-01,3.6419e-01,-3.6419e-01,8.5717e-01,4.0861e-01,-3.1354e-01,8.5717e-01,4.4604e-01,-2.5752e-01,8.5717e-01,4.7583e-01,-1.9710e-01,8.5717e-01,4.9749e-01,-1.3330e-01,8.5717e-01,5.1063e-01,-6.7226e-02,8.5717e-01,5.1504e-01,-3.1537e-17,8.5717e-01,5.1063e-01,6.7226e-02,8.5717e-01,4.9749e-01,1.3330e-01,8.5717e-01,4.7583e-01,1.9710e-01,8.5717e-01,4.4604e-01,2.5752e-01,8.5717e-01,4.0861e-01,3.1354e-01,8.5717e-01,3.6419e-01,3.6419e-01,8.5717e-01,3.1354e-01,4.0861e-01,8.5717e-01,2.5752e-01,4.4604e-01,8.5717e-01,1.9710e-01,4.7583e-01,8.5717e-01,1.3330e-01,4.9749e-01,8.5717e-01,6.7226e-02,5.1063e-01,8.5717e-01,6.3074e-17,5.1504e-01,8.5717e-01,-6.7226e-02,5.1063e-01,8.5717e-01,-1.3330e-01,4.9749e-01,8.5717e-01,-1.9710e-01,4.7583e-01,8.5717e-01,-2.5752e-01,4.4604e-01,8.5717e-01,-3.1354e-01,4.0861e-01,8.5717e-01,-3.6419e-01,3.6419e-01,8.5717e-01,-4.0861e-01,3.1354e-01,8.5717e-01,-4.4604e-01,2.5752e-01,8.5717e-01,-4.7583e-01,1.9710e-01,8.5717e-01,-4.9749e-01,1.3330e-01,8.5717e-01,-5.1063e-01,6.7226e-02,8.5717e-01,-5.1504e-01,9.4611e-17,8.5717e-01,-5.1063e-01,-6.7226e-02,8.5717e-01,-4.9749e-01,-1.3330e-01,8.5717e-01,-4.7583e-01,-1.9710e-01,8.5717e-01,-4.4604e-01,-2.5752e-01,8.5717e-01,-4.0861e-01,-3.1354e-01,8.5717e-01,-3.6419e-01,-3.6419e-01,8.5717e-01,-3.1354e-01,-4.0861e-01,8.5717e-01,-2.5752e-01,-4.4604e-01,8.5717e-01,-1.9710e-01,-4.7583e-01,8.5717e-01,-1.3330e-01,-4.9749e-01,8.5717e-01,-6.7226e-02,-5.1063e-01,8.5717e-01,3.3685e-02,-5.1394e-01,8.5717e-01,1.0048e-01,-5.0514e-01,8.5717e-01,1.6555e-01,-4.8771e-01,8.5717e-01,2.2780e-01,-4.6192e-01,8.5717e-01,2.8614e-01,-4.2824e-01,8.5717e-01,3.3959e-01,-3.8723e-01,8.5717e-01,3.8723e-01,-3.3959e-01,8.5717e-01,4.2824e-01,-2.8614e-01,8.5717e-01,4.6192e-01,-2.2780e-01,8.5717e-01,4.8771e-01,-1.6555e-01,8.5717e-01,5.0514e-01,-1.0048e-01,8.5717e-01,5.1394e-01,-3.3685e-02,8.5717e-01,5.1394e-01,3.3685e-02,8.5717e-01,5.0514e-01,1.0048e-01,8.5717e-01,4.8771e-01,1.6555e-01,8.5717e-01,4.6192e-01,2.2780e-01,8.5717e-01,4.2824e-01,2.8614e-01,8.5717e-01,3.8723e-01,3.3959e-01,8.5717e-01,3.3959e-01,3.8723e-01,8.5717e-01,2.8614e-01,4.2824e-01,8.5717e-01,2.2780e-01,4.6192e-01,8.5717e-01,1.6555e-01,4.8771e-01,8.5717e-01,1.0048e-01,5.0514e-01,8.5717e-01,3.3685e-02,5.1394e-01,8.5717e-01,-3.3685e-02,5.1394e-01,8.5717e-01,-1.0048e-01,5.0514e-01,8.5717e-01,-1.6555e-01,4.8771e-01,8.5717e-01,-2.2780e-01,4.6192e-01,8.5717e-01,-2.8614e-01,4.2824e-01,8.5717e-01,-3.3959e-01,3.8723e-01,8.5717e-01,-3.8723e-01,3.3959e-01,8.5717e-01,-4.2824e-01,2.8614e-01,8.5717e-01,-4.6192e-01,2.2780e-01,8.5717e-01,-4.8771e-01,1.6555e-01,8.5717e-01,-5.0514e-01,1.0048e-01,8.5717e-01,-5.1394e-01,3.3685e-02,8.5717e-01,-5.1394e-01,-3.3685e-02,8.5717e-01,-5.0514e-01,-1.0048e-01,8.5717e-01,-4.8771e-01,-1.6555e-01,8.5717e-01,-4.6192e-01,-2.2780e-01,8.5717e-01,-4.2824e-01,-2.8614e-01,8.5717e-01,-3.8723e-01,-3.3959e-01,8.5717e-01,-3.3959e-01,-3.8723e-01,8.5717e-01,-2.8614e-01,-4.2824e-01,8.5717e-01,-2.2780e-01,-4.6192e-01,8.5717e-01,-1.6555e-01,-4.8771e-01,8.5717e-01,-1.0048e-01,-5.0514e-01,8.5717e-01,-3.3685e-02,-5.1394e-01,8.5717e-01});
			return Normal_7_243_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #249, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_249_point()
		{
			MFVec3f Coordinate_7_249_point = new MFVec3f(new double[] {-8.0000e+00,-1.5625e-01,6.0000e-01,-8.0000e+00,-1.5625e-01,1.8000e+00,-8.0204e+00,-1.5491e-01,6.0000e-01,-8.0204e+00,-1.5491e-01,1.8000e+00,-8.0404e+00,-1.5093e-01,6.0000e-01,-8.0404e+00,-1.5093e-01,1.8000e+00,-8.0598e+00,-1.4436e-01,6.0000e-01,-8.0598e+00,-1.4436e-01,1.8000e+00,-8.0781e+00,-1.3532e-01,6.0000e-01,-8.0781e+00,-1.3532e-01,1.8000e+00,-8.0951e+00,-1.2396e-01,6.0000e-01,-8.0951e+00,-1.2396e-01,1.8000e+00,-8.1105e+00,-1.1049e-01,6.0000e-01,-8.1105e+00,-1.1049e-01,1.8000e+00,-8.1240e+00,-9.5119e-02,6.0000e-01,-8.1240e+00,-9.5119e-02,1.8000e+00,-8.1353e+00,-7.8125e-02,6.0000e-01,-8.1353e+00,-7.8125e-02,1.8000e+00,-8.1444e+00,-5.9794e-02,6.0000e-01,-8.1444e+00,-5.9794e-02,1.8000e+00,-8.1509e+00,-4.0440e-02,6.0000e-01,-8.1509e+00,-4.0440e-02,1.8000e+00,-8.1549e+00,-2.0395e-02,6.0000e-01,-8.1549e+00,-2.0395e-02,1.8000e+00,-8.1562e+00,-1.2308e-15,6.0000e-01,-8.1562e+00,-1.2308e-15,1.8000e+00,-8.1549e+00,2.0395e-02,6.0000e-01,-8.1549e+00,2.0395e-02,1.8000e+00,-8.1509e+00,4.0440e-02,6.0000e-01,-8.1509e+00,4.0440e-02,1.8000e+00,-8.1444e+00,5.9794e-02,6.0000e-01,-8.1444e+00,5.9794e-02,1.8000e+00,-8.1353e+00,7.8125e-02,6.0000e-01,-8.1353e+00,7.8125e-02,1.8000e+00,-8.1240e+00,9.5119e-02,6.0000e-01,-8.1240e+00,9.5119e-02,1.8000e+00,-8.1105e+00,1.1049e-01,6.0000e-01,-8.1105e+00,1.1049e-01,1.8000e+00,-8.0951e+00,1.2396e-01,6.0000e-01,-8.0951e+00,1.2396e-01,1.8000e+00,-8.0781e+00,1.3532e-01,6.0000e-01,-8.0781e+00,1.3532e-01,1.8000e+00,-8.0598e+00,1.4436e-01,6.0000e-01,-8.0598e+00,1.4436e-01,1.8000e+00,-8.0404e+00,1.5093e-01,6.0000e-01,-8.0404e+00,1.5093e-01,1.8000e+00,-8.0204e+00,1.5491e-01,6.0000e-01,-8.0204e+00,1.5491e-01,1.8000e+00,-8.0000e+00,1.5625e-01,6.0000e-01,-8.0000e+00,1.5625e-01,1.8000e+00,-7.9796e+00,1.5491e-01,6.0000e-01,-7.9796e+00,1.5491e-01,1.8000e+00,-7.9596e+00,1.5093e-01,6.0000e-01,-7.9596e+00,1.5093e-01,1.8000e+00,-7.9402e+00,1.4436e-01,6.0000e-01,-7.9402e+00,1.4436e-01,1.8000e+00,-7.9219e+00,1.3532e-01,6.0000e-01,-7.9219e+00,1.3532e-01,1.8000e+00,-7.9049e+00,1.2396e-01,6.0000e-01,-7.9049e+00,1.2396e-01,1.8000e+00,-7.8895e+00,1.1049e-01,6.0000e-01,-7.8895e+00,1.1049e-01,1.8000e+00,-7.8760e+00,9.5119e-02,6.0000e-01,-7.8760e+00,9.5119e-02,1.8000e+00,-7.8647e+00,7.8125e-02,6.0000e-01,-7.8647e+00,7.8125e-02,1.8000e+00,-7.8556e+00,5.9794e-02,6.0000e-01,-7.8556e+00,5.9794e-02,1.8000e+00,-7.8491e+00,4.0440e-02,6.0000e-01,-7.8491e+00,4.0440e-02,1.8000e+00,-7.8451e+00,2.0395e-02,6.0000e-01,-7.8451e+00,2.0395e-02,1.8000e+00,-7.8438e+00,-1.1925e-15,6.0000e-01,-7.8438e+00,-1.1925e-15,1.8000e+00,-7.8451e+00,-2.0395e-02,6.0000e-01,-7.8451e+00,-2.0395e-02,1.8000e+00,-7.8491e+00,-4.0440e-02,6.0000e-01,-7.8491e+00,-4.0440e-02,1.8000e+00,-7.8556e+00,-5.9794e-02,6.0000e-01,-7.8556e+00,-5.9794e-02,1.8000e+00,-7.8647e+00,-7.8125e-02,6.0000e-01,-7.8647e+00,-7.8125e-02,1.8000e+00,-7.8760e+00,-9.5119e-02,6.0000e-01,-7.8760e+00,-9.5119e-02,1.8000e+00,-7.8895e+00,-1.1049e-01,6.0000e-01,-7.8895e+00,-1.1049e-01,1.8000e+00,-7.9049e+00,-1.2396e-01,6.0000e-01,-7.9049e+00,-1.2396e-01,1.8000e+00,-7.9219e+00,-1.3532e-01,6.0000e-01,-7.9219e+00,-1.3532e-01,1.8000e+00,-7.9402e+00,-1.4436e-01,6.0000e-01,-7.9402e+00,-1.4436e-01,1.8000e+00,-7.9596e+00,-1.5093e-01,6.0000e-01,-7.9596e+00,-1.5093e-01,1.8000e+00,-7.9796e+00,-1.5491e-01,6.0000e-01,-7.9796e+00,-1.5491e-01,1.8000e+00});
			return Coordinate_7_249_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #250, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_250_vector()
		{
			MFVec3f Normal_7_250_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_250_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #256, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_256_point()
		{
			MFVec3f Coordinate_7_256_point = new MFVec3f(new double[] {8.0000e+00,1.5625e-01,6.0000e-01,7.9796e+00,1.5491e-01,6.0000e-01,7.9596e+00,1.5093e-01,6.0000e-01,7.9402e+00,1.4436e-01,6.0000e-01,7.9219e+00,1.3532e-01,6.0000e-01,7.9049e+00,1.2396e-01,6.0000e-01,7.8895e+00,1.1049e-01,6.0000e-01,7.8760e+00,9.5119e-02,6.0000e-01,7.8647e+00,7.8125e-02,6.0000e-01,7.8556e+00,5.9794e-02,6.0000e-01,7.8491e+00,4.0440e-02,6.0000e-01,7.8451e+00,2.0395e-02,6.0000e-01,7.8438e+00,-1.2117e-15,6.0000e-01,7.8451e+00,-2.0395e-02,6.0000e-01,7.8491e+00,-4.0440e-02,6.0000e-01,7.8556e+00,-5.9794e-02,6.0000e-01,7.8647e+00,-7.8125e-02,6.0000e-01,7.8760e+00,-9.5119e-02,6.0000e-01,7.8895e+00,-1.1049e-01,6.0000e-01,7.9049e+00,-1.2396e-01,6.0000e-01,7.9219e+00,-1.3532e-01,6.0000e-01,7.9402e+00,-1.4436e-01,6.0000e-01,7.9596e+00,-1.5093e-01,6.0000e-01,7.9796e+00,-1.5491e-01,6.0000e-01,8.0000e+00,-1.5625e-01,6.0000e-01,8.0204e+00,-1.5491e-01,6.0000e-01,8.0404e+00,-1.5093e-01,6.0000e-01,8.0598e+00,-1.4436e-01,6.0000e-01,8.0781e+00,-1.3532e-01,6.0000e-01,8.0951e+00,-1.2396e-01,6.0000e-01,8.1105e+00,-1.1049e-01,6.0000e-01,8.1240e+00,-9.5119e-02,6.0000e-01,8.1353e+00,-7.8125e-02,6.0000e-01,8.1444e+00,-5.9794e-02,6.0000e-01,8.1509e+00,-4.0440e-02,6.0000e-01,8.1549e+00,-2.0395e-02,6.0000e-01,8.1562e+00,-1.2499e-15,6.0000e-01,8.1549e+00,2.0395e-02,6.0000e-01,8.1509e+00,4.0440e-02,6.0000e-01,8.1444e+00,5.9794e-02,6.0000e-01,8.1353e+00,7.8125e-02,6.0000e-01,8.1240e+00,9.5119e-02,6.0000e-01,8.1105e+00,1.1049e-01,6.0000e-01,8.0951e+00,1.2396e-01,6.0000e-01,8.0781e+00,1.3532e-01,6.0000e-01,8.0598e+00,1.4436e-01,6.0000e-01,8.0404e+00,1.5093e-01,6.0000e-01,8.0204e+00,1.5491e-01,6.0000e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01,8.0000e+00,-1.2212e-15,5.0612e-01});
			return Coordinate_7_256_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #257, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_257_vector()
		{
			MFVec3f Normal_7_257_vector = new MFVec3f(new double[] {-0.0000e+00,-5.1504e-01,8.5717e-01,6.7226e-02,-5.1063e-01,8.5717e-01,1.3330e-01,-4.9749e-01,8.5717e-01,1.9710e-01,-4.7583e-01,8.5717e-01,2.5752e-01,-4.4604e-01,8.5717e-01,3.1354e-01,-4.0861e-01,8.5717e-01,3.6419e-01,-3.6419e-01,8.5717e-01,4.0861e-01,-3.1354e-01,8.5717e-01,4.4604e-01,-2.5752e-01,8.5717e-01,4.7583e-01,-1.9710e-01,8.5717e-01,4.9749e-01,-1.3330e-01,8.5717e-01,5.1063e-01,-6.7226e-02,8.5717e-01,5.1504e-01,-3.1537e-17,8.5717e-01,5.1063e-01,6.7226e-02,8.5717e-01,4.9749e-01,1.3330e-01,8.5717e-01,4.7583e-01,1.9710e-01,8.5717e-01,4.4604e-01,2.5752e-01,8.5717e-01,4.0861e-01,3.1354e-01,8.5717e-01,3.6419e-01,3.6419e-01,8.5717e-01,3.1354e-01,4.0861e-01,8.5717e-01,2.5752e-01,4.4604e-01,8.5717e-01,1.9710e-01,4.7583e-01,8.5717e-01,1.3330e-01,4.9749e-01,8.5717e-01,6.7226e-02,5.1063e-01,8.5717e-01,6.3074e-17,5.1504e-01,8.5717e-01,-6.7226e-02,5.1063e-01,8.5717e-01,-1.3330e-01,4.9749e-01,8.5717e-01,-1.9710e-01,4.7583e-01,8.5717e-01,-2.5752e-01,4.4604e-01,8.5717e-01,-3.1354e-01,4.0861e-01,8.5717e-01,-3.6419e-01,3.6419e-01,8.5717e-01,-4.0861e-01,3.1354e-01,8.5717e-01,-4.4604e-01,2.5752e-01,8.5717e-01,-4.7583e-01,1.9710e-01,8.5717e-01,-4.9749e-01,1.3330e-01,8.5717e-01,-5.1063e-01,6.7226e-02,8.5717e-01,-5.1504e-01,9.4611e-17,8.5717e-01,-5.1063e-01,-6.7226e-02,8.5717e-01,-4.9749e-01,-1.3330e-01,8.5717e-01,-4.7583e-01,-1.9710e-01,8.5717e-01,-4.4604e-01,-2.5752e-01,8.5717e-01,-4.0861e-01,-3.1354e-01,8.5717e-01,-3.6419e-01,-3.6419e-01,8.5717e-01,-3.1354e-01,-4.0861e-01,8.5717e-01,-2.5752e-01,-4.4604e-01,8.5717e-01,-1.9710e-01,-4.7583e-01,8.5717e-01,-1.3330e-01,-4.9749e-01,8.5717e-01,-6.7226e-02,-5.1063e-01,8.5717e-01,3.3685e-02,-5.1394e-01,8.5717e-01,1.0048e-01,-5.0514e-01,8.5717e-01,1.6555e-01,-4.8771e-01,8.5717e-01,2.2780e-01,-4.6192e-01,8.5717e-01,2.8614e-01,-4.2824e-01,8.5717e-01,3.3959e-01,-3.8723e-01,8.5717e-01,3.8723e-01,-3.3959e-01,8.5717e-01,4.2824e-01,-2.8614e-01,8.5717e-01,4.6192e-01,-2.2780e-01,8.5717e-01,4.8771e-01,-1.6555e-01,8.5717e-01,5.0514e-01,-1.0048e-01,8.5717e-01,5.1394e-01,-3.3685e-02,8.5717e-01,5.1394e-01,3.3685e-02,8.5717e-01,5.0514e-01,1.0048e-01,8.5717e-01,4.8771e-01,1.6555e-01,8.5717e-01,4.6192e-01,2.2780e-01,8.5717e-01,4.2824e-01,2.8614e-01,8.5717e-01,3.8723e-01,3.3959e-01,8.5717e-01,3.3959e-01,3.8723e-01,8.5717e-01,2.8614e-01,4.2824e-01,8.5717e-01,2.2780e-01,4.6192e-01,8.5717e-01,1.6555e-01,4.8771e-01,8.5717e-01,1.0048e-01,5.0514e-01,8.5717e-01,3.3685e-02,5.1394e-01,8.5717e-01,-3.3685e-02,5.1394e-01,8.5717e-01,-1.0048e-01,5.0514e-01,8.5717e-01,-1.6555e-01,4.8771e-01,8.5717e-01,-2.2780e-01,4.6192e-01,8.5717e-01,-2.8614e-01,4.2824e-01,8.5717e-01,-3.3959e-01,3.8723e-01,8.5717e-01,-3.8723e-01,3.3959e-01,8.5717e-01,-4.2824e-01,2.8614e-01,8.5717e-01,-4.6192e-01,2.2780e-01,8.5717e-01,-4.8771e-01,1.6555e-01,8.5717e-01,-5.0514e-01,1.0048e-01,8.5717e-01,-5.1394e-01,3.3685e-02,8.5717e-01,-5.1394e-01,-3.3685e-02,8.5717e-01,-5.0514e-01,-1.0048e-01,8.5717e-01,-4.8771e-01,-1.6555e-01,8.5717e-01,-4.6192e-01,-2.2780e-01,8.5717e-01,-4.2824e-01,-2.8614e-01,8.5717e-01,-3.8723e-01,-3.3959e-01,8.5717e-01,-3.3959e-01,-3.8723e-01,8.5717e-01,-2.8614e-01,-4.2824e-01,8.5717e-01,-2.2780e-01,-4.6192e-01,8.5717e-01,-1.6555e-01,-4.8771e-01,8.5717e-01,-1.0048e-01,-5.0514e-01,8.5717e-01,-3.3685e-02,-5.1394e-01,8.5717e-01});
			return Normal_7_257_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #263, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_263_point()
		{
			MFVec3f Coordinate_7_263_point = new MFVec3f(new double[] {8.0000e+00,-1.5625e-01,6.0000e-01,8.0000e+00,-1.5625e-01,1.8000e+00,7.9796e+00,-1.5491e-01,6.0000e-01,7.9796e+00,-1.5491e-01,1.8000e+00,7.9596e+00,-1.5093e-01,6.0000e-01,7.9596e+00,-1.5093e-01,1.8000e+00,7.9402e+00,-1.4436e-01,6.0000e-01,7.9402e+00,-1.4436e-01,1.8000e+00,7.9219e+00,-1.3532e-01,6.0000e-01,7.9219e+00,-1.3532e-01,1.8000e+00,7.9049e+00,-1.2396e-01,6.0000e-01,7.9049e+00,-1.2396e-01,1.8000e+00,7.8895e+00,-1.1049e-01,6.0000e-01,7.8895e+00,-1.1049e-01,1.8000e+00,7.8760e+00,-9.5119e-02,6.0000e-01,7.8760e+00,-9.5119e-02,1.8000e+00,7.8647e+00,-7.8125e-02,6.0000e-01,7.8647e+00,-7.8125e-02,1.8000e+00,7.8556e+00,-5.9794e-02,6.0000e-01,7.8556e+00,-5.9794e-02,1.8000e+00,7.8491e+00,-4.0440e-02,6.0000e-01,7.8491e+00,-4.0440e-02,1.8000e+00,7.8451e+00,-2.0395e-02,6.0000e-01,7.8451e+00,-2.0395e-02,1.8000e+00,7.8438e+00,-1.2308e-15,6.0000e-01,7.8438e+00,-1.2308e-15,1.8000e+00,7.8451e+00,2.0395e-02,6.0000e-01,7.8451e+00,2.0395e-02,1.8000e+00,7.8491e+00,4.0440e-02,6.0000e-01,7.8491e+00,4.0440e-02,1.8000e+00,7.8556e+00,5.9794e-02,6.0000e-01,7.8556e+00,5.9794e-02,1.8000e+00,7.8647e+00,7.8125e-02,6.0000e-01,7.8647e+00,7.8125e-02,1.8000e+00,7.8760e+00,9.5119e-02,6.0000e-01,7.8760e+00,9.5119e-02,1.8000e+00,7.8895e+00,1.1049e-01,6.0000e-01,7.8895e+00,1.1049e-01,1.8000e+00,7.9049e+00,1.2396e-01,6.0000e-01,7.9049e+00,1.2396e-01,1.8000e+00,7.9219e+00,1.3532e-01,6.0000e-01,7.9219e+00,1.3532e-01,1.8000e+00,7.9402e+00,1.4436e-01,6.0000e-01,7.9402e+00,1.4436e-01,1.8000e+00,7.9596e+00,1.5093e-01,6.0000e-01,7.9596e+00,1.5093e-01,1.8000e+00,7.9796e+00,1.5491e-01,6.0000e-01,7.9796e+00,1.5491e-01,1.8000e+00,8.0000e+00,1.5625e-01,6.0000e-01,8.0000e+00,1.5625e-01,1.8000e+00,8.0204e+00,1.5491e-01,6.0000e-01,8.0204e+00,1.5491e-01,1.8000e+00,8.0404e+00,1.5093e-01,6.0000e-01,8.0404e+00,1.5093e-01,1.8000e+00,8.0598e+00,1.4436e-01,6.0000e-01,8.0598e+00,1.4436e-01,1.8000e+00,8.0781e+00,1.3532e-01,6.0000e-01,8.0781e+00,1.3532e-01,1.8000e+00,8.0951e+00,1.2396e-01,6.0000e-01,8.0951e+00,1.2396e-01,1.8000e+00,8.1105e+00,1.1049e-01,6.0000e-01,8.1105e+00,1.1049e-01,1.8000e+00,8.1240e+00,9.5119e-02,6.0000e-01,8.1240e+00,9.5119e-02,1.8000e+00,8.1353e+00,7.8125e-02,6.0000e-01,8.1353e+00,7.8125e-02,1.8000e+00,8.1444e+00,5.9794e-02,6.0000e-01,8.1444e+00,5.9794e-02,1.8000e+00,8.1509e+00,4.0440e-02,6.0000e-01,8.1509e+00,4.0440e-02,1.8000e+00,8.1549e+00,2.0395e-02,6.0000e-01,8.1549e+00,2.0395e-02,1.8000e+00,8.1562e+00,-1.1925e-15,6.0000e-01,8.1562e+00,-1.1925e-15,1.8000e+00,8.1549e+00,-2.0395e-02,6.0000e-01,8.1549e+00,-2.0395e-02,1.8000e+00,8.1509e+00,-4.0440e-02,6.0000e-01,8.1509e+00,-4.0440e-02,1.8000e+00,8.1444e+00,-5.9794e-02,6.0000e-01,8.1444e+00,-5.9794e-02,1.8000e+00,8.1353e+00,-7.8125e-02,6.0000e-01,8.1353e+00,-7.8125e-02,1.8000e+00,8.1240e+00,-9.5119e-02,6.0000e-01,8.1240e+00,-9.5119e-02,1.8000e+00,8.1105e+00,-1.1049e-01,6.0000e-01,8.1105e+00,-1.1049e-01,1.8000e+00,8.0951e+00,-1.2396e-01,6.0000e-01,8.0951e+00,-1.2396e-01,1.8000e+00,8.0781e+00,-1.3532e-01,6.0000e-01,8.0781e+00,-1.3532e-01,1.8000e+00,8.0598e+00,-1.4436e-01,6.0000e-01,8.0598e+00,-1.4436e-01,1.8000e+00,8.0404e+00,-1.5093e-01,6.0000e-01,8.0404e+00,-1.5093e-01,1.8000e+00,8.0204e+00,-1.5491e-01,6.0000e-01,8.0204e+00,-1.5491e-01,1.8000e+00});
			return Coordinate_7_263_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #264, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_264_vector()
		{
			MFVec3f Normal_7_264_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_264_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #270, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_270_point()
		{
			MFVec3f Coordinate_7_270_point = new MFVec3f(new double[] {9.2500e+00,1.5625e-01,6.0000e-01,9.2296e+00,1.5491e-01,6.0000e-01,9.2096e+00,1.5093e-01,6.0000e-01,9.1902e+00,1.4436e-01,6.0000e-01,9.1719e+00,1.3532e-01,6.0000e-01,9.1549e+00,1.2396e-01,6.0000e-01,9.1395e+00,1.1049e-01,6.0000e-01,9.1260e+00,9.5119e-02,6.0000e-01,9.1147e+00,7.8125e-02,6.0000e-01,9.1056e+00,5.9794e-02,6.0000e-01,9.0991e+00,4.0440e-02,6.0000e-01,9.0951e+00,2.0395e-02,6.0000e-01,9.0938e+00,-1.3901e-15,6.0000e-01,9.0951e+00,-2.0395e-02,6.0000e-01,9.0991e+00,-4.0440e-02,6.0000e-01,9.1056e+00,-5.9794e-02,6.0000e-01,9.1147e+00,-7.8125e-02,6.0000e-01,9.1260e+00,-9.5119e-02,6.0000e-01,9.1395e+00,-1.1049e-01,6.0000e-01,9.1549e+00,-1.2396e-01,6.0000e-01,9.1719e+00,-1.3532e-01,6.0000e-01,9.1902e+00,-1.4436e-01,6.0000e-01,9.2096e+00,-1.5093e-01,6.0000e-01,9.2296e+00,-1.5491e-01,6.0000e-01,9.2500e+00,-1.5625e-01,6.0000e-01,9.2704e+00,-1.5491e-01,6.0000e-01,9.2904e+00,-1.5093e-01,6.0000e-01,9.3098e+00,-1.4436e-01,6.0000e-01,9.3281e+00,-1.3532e-01,6.0000e-01,9.3451e+00,-1.2396e-01,6.0000e-01,9.3605e+00,-1.1049e-01,6.0000e-01,9.3740e+00,-9.5119e-02,6.0000e-01,9.3853e+00,-7.8125e-02,6.0000e-01,9.3944e+00,-5.9794e-02,6.0000e-01,9.4009e+00,-4.0440e-02,6.0000e-01,9.4049e+00,-2.0395e-02,6.0000e-01,9.4062e+00,-1.4284e-15,6.0000e-01,9.4049e+00,2.0395e-02,6.0000e-01,9.4009e+00,4.0440e-02,6.0000e-01,9.3944e+00,5.9794e-02,6.0000e-01,9.3853e+00,7.8125e-02,6.0000e-01,9.3740e+00,9.5119e-02,6.0000e-01,9.3605e+00,1.1049e-01,6.0000e-01,9.3451e+00,1.2396e-01,6.0000e-01,9.3281e+00,1.3532e-01,6.0000e-01,9.3098e+00,1.4436e-01,6.0000e-01,9.2904e+00,1.5093e-01,6.0000e-01,9.2704e+00,1.5491e-01,6.0000e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01,9.2500e+00,-1.3997e-15,5.0612e-01});
			return Coordinate_7_270_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #271, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_271_vector()
		{
			MFVec3f Normal_7_271_vector = new MFVec3f(new double[] {-0.0000e+00,-5.1504e-01,8.5717e-01,6.7226e-02,-5.1063e-01,8.5717e-01,1.3330e-01,-4.9749e-01,8.5717e-01,1.9710e-01,-4.7583e-01,8.5717e-01,2.5752e-01,-4.4604e-01,8.5717e-01,3.1354e-01,-4.0861e-01,8.5717e-01,3.6419e-01,-3.6419e-01,8.5717e-01,4.0861e-01,-3.1354e-01,8.5717e-01,4.4604e-01,-2.5752e-01,8.5717e-01,4.7583e-01,-1.9710e-01,8.5717e-01,4.9749e-01,-1.3330e-01,8.5717e-01,5.1063e-01,-6.7226e-02,8.5717e-01,5.1504e-01,-3.1537e-17,8.5717e-01,5.1063e-01,6.7226e-02,8.5717e-01,4.9749e-01,1.3330e-01,8.5717e-01,4.7583e-01,1.9710e-01,8.5717e-01,4.4604e-01,2.5752e-01,8.5717e-01,4.0861e-01,3.1354e-01,8.5717e-01,3.6419e-01,3.6419e-01,8.5717e-01,3.1354e-01,4.0861e-01,8.5717e-01,2.5752e-01,4.4604e-01,8.5717e-01,1.9710e-01,4.7583e-01,8.5717e-01,1.3330e-01,4.9749e-01,8.5717e-01,6.7226e-02,5.1063e-01,8.5717e-01,6.3074e-17,5.1504e-01,8.5717e-01,-6.7226e-02,5.1063e-01,8.5717e-01,-1.3330e-01,4.9749e-01,8.5717e-01,-1.9710e-01,4.7583e-01,8.5717e-01,-2.5752e-01,4.4604e-01,8.5717e-01,-3.1354e-01,4.0861e-01,8.5717e-01,-3.6419e-01,3.6419e-01,8.5717e-01,-4.0861e-01,3.1354e-01,8.5717e-01,-4.4604e-01,2.5752e-01,8.5717e-01,-4.7583e-01,1.9710e-01,8.5717e-01,-4.9749e-01,1.3330e-01,8.5717e-01,-5.1063e-01,6.7226e-02,8.5717e-01,-5.1504e-01,9.4611e-17,8.5717e-01,-5.1063e-01,-6.7226e-02,8.5717e-01,-4.9749e-01,-1.3330e-01,8.5717e-01,-4.7583e-01,-1.9710e-01,8.5717e-01,-4.4604e-01,-2.5752e-01,8.5717e-01,-4.0861e-01,-3.1354e-01,8.5717e-01,-3.6419e-01,-3.6419e-01,8.5717e-01,-3.1354e-01,-4.0861e-01,8.5717e-01,-2.5752e-01,-4.4604e-01,8.5717e-01,-1.9710e-01,-4.7583e-01,8.5717e-01,-1.3330e-01,-4.9749e-01,8.5717e-01,-6.7226e-02,-5.1063e-01,8.5717e-01,3.3685e-02,-5.1394e-01,8.5717e-01,1.0048e-01,-5.0514e-01,8.5717e-01,1.6555e-01,-4.8771e-01,8.5717e-01,2.2780e-01,-4.6192e-01,8.5717e-01,2.8614e-01,-4.2824e-01,8.5717e-01,3.3959e-01,-3.8723e-01,8.5717e-01,3.8723e-01,-3.3959e-01,8.5717e-01,4.2824e-01,-2.8614e-01,8.5717e-01,4.6192e-01,-2.2780e-01,8.5717e-01,4.8771e-01,-1.6555e-01,8.5717e-01,5.0514e-01,-1.0048e-01,8.5717e-01,5.1394e-01,-3.3685e-02,8.5717e-01,5.1394e-01,3.3685e-02,8.5717e-01,5.0514e-01,1.0048e-01,8.5717e-01,4.8771e-01,1.6555e-01,8.5717e-01,4.6192e-01,2.2780e-01,8.5717e-01,4.2824e-01,2.8614e-01,8.5717e-01,3.8723e-01,3.3959e-01,8.5717e-01,3.3959e-01,3.8723e-01,8.5717e-01,2.8614e-01,4.2824e-01,8.5717e-01,2.2780e-01,4.6192e-01,8.5717e-01,1.6555e-01,4.8771e-01,8.5717e-01,1.0048e-01,5.0514e-01,8.5717e-01,3.3685e-02,5.1394e-01,8.5717e-01,-3.3685e-02,5.1394e-01,8.5717e-01,-1.0048e-01,5.0514e-01,8.5717e-01,-1.6555e-01,4.8771e-01,8.5717e-01,-2.2780e-01,4.6192e-01,8.5717e-01,-2.8614e-01,4.2824e-01,8.5717e-01,-3.3959e-01,3.8723e-01,8.5717e-01,-3.8723e-01,3.3959e-01,8.5717e-01,-4.2824e-01,2.8614e-01,8.5717e-01,-4.6192e-01,2.2780e-01,8.5717e-01,-4.8771e-01,1.6555e-01,8.5717e-01,-5.0514e-01,1.0048e-01,8.5717e-01,-5.1394e-01,3.3685e-02,8.5717e-01,-5.1394e-01,-3.3685e-02,8.5717e-01,-5.0514e-01,-1.0048e-01,8.5717e-01,-4.8771e-01,-1.6555e-01,8.5717e-01,-4.6192e-01,-2.2780e-01,8.5717e-01,-4.2824e-01,-2.8614e-01,8.5717e-01,-3.8723e-01,-3.3959e-01,8.5717e-01,-3.3959e-01,-3.8723e-01,8.5717e-01,-2.8614e-01,-4.2824e-01,8.5717e-01,-2.2780e-01,-4.6192e-01,8.5717e-01,-1.6555e-01,-4.8771e-01,8.5717e-01,-1.0048e-01,-5.0514e-01,8.5717e-01,-3.3685e-02,-5.1394e-01,8.5717e-01});
			return Normal_7_271_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #277, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_277_point()
		{
			MFVec3f Coordinate_7_277_point = new MFVec3f(new double[] {9.2500e+00,-1.5625e-01,6.0000e-01,9.2500e+00,-1.5625e-01,1.8000e+00,9.2296e+00,-1.5491e-01,6.0000e-01,9.2296e+00,-1.5491e-01,1.8000e+00,9.2096e+00,-1.5093e-01,6.0000e-01,9.2096e+00,-1.5093e-01,1.8000e+00,9.1902e+00,-1.4436e-01,6.0000e-01,9.1902e+00,-1.4436e-01,1.8000e+00,9.1719e+00,-1.3532e-01,6.0000e-01,9.1719e+00,-1.3532e-01,1.8000e+00,9.1549e+00,-1.2396e-01,6.0000e-01,9.1549e+00,-1.2396e-01,1.8000e+00,9.1395e+00,-1.1049e-01,6.0000e-01,9.1395e+00,-1.1049e-01,1.8000e+00,9.1260e+00,-9.5119e-02,6.0000e-01,9.1260e+00,-9.5119e-02,1.8000e+00,9.1147e+00,-7.8125e-02,6.0000e-01,9.1147e+00,-7.8125e-02,1.8000e+00,9.1056e+00,-5.9794e-02,6.0000e-01,9.1056e+00,-5.9794e-02,1.8000e+00,9.0991e+00,-4.0440e-02,6.0000e-01,9.0991e+00,-4.0440e-02,1.8000e+00,9.0951e+00,-2.0395e-02,6.0000e-01,9.0951e+00,-2.0395e-02,1.8000e+00,9.0938e+00,-1.4093e-15,6.0000e-01,9.0938e+00,-1.4093e-15,1.8000e+00,9.0951e+00,2.0395e-02,6.0000e-01,9.0951e+00,2.0395e-02,1.8000e+00,9.0991e+00,4.0440e-02,6.0000e-01,9.0991e+00,4.0440e-02,1.8000e+00,9.1056e+00,5.9794e-02,6.0000e-01,9.1056e+00,5.9794e-02,1.8000e+00,9.1147e+00,7.8125e-02,6.0000e-01,9.1147e+00,7.8125e-02,1.8000e+00,9.1260e+00,9.5119e-02,6.0000e-01,9.1260e+00,9.5119e-02,1.8000e+00,9.1395e+00,1.1049e-01,6.0000e-01,9.1395e+00,1.1049e-01,1.8000e+00,9.1549e+00,1.2396e-01,6.0000e-01,9.1549e+00,1.2396e-01,1.8000e+00,9.1719e+00,1.3532e-01,6.0000e-01,9.1719e+00,1.3532e-01,1.8000e+00,9.1902e+00,1.4436e-01,6.0000e-01,9.1902e+00,1.4436e-01,1.8000e+00,9.2096e+00,1.5093e-01,6.0000e-01,9.2096e+00,1.5093e-01,1.8000e+00,9.2296e+00,1.5491e-01,6.0000e-01,9.2296e+00,1.5491e-01,1.8000e+00,9.2500e+00,1.5625e-01,6.0000e-01,9.2500e+00,1.5625e-01,1.8000e+00,9.2704e+00,1.5491e-01,6.0000e-01,9.2704e+00,1.5491e-01,1.8000e+00,9.2904e+00,1.5093e-01,6.0000e-01,9.2904e+00,1.5093e-01,1.8000e+00,9.3098e+00,1.4436e-01,6.0000e-01,9.3098e+00,1.4436e-01,1.8000e+00,9.3281e+00,1.3532e-01,6.0000e-01,9.3281e+00,1.3532e-01,1.8000e+00,9.3451e+00,1.2396e-01,6.0000e-01,9.3451e+00,1.2396e-01,1.8000e+00,9.3605e+00,1.1049e-01,6.0000e-01,9.3605e+00,1.1049e-01,1.8000e+00,9.3740e+00,9.5119e-02,6.0000e-01,9.3740e+00,9.5119e-02,1.8000e+00,9.3853e+00,7.8125e-02,6.0000e-01,9.3853e+00,7.8125e-02,1.8000e+00,9.3944e+00,5.9794e-02,6.0000e-01,9.3944e+00,5.9794e-02,1.8000e+00,9.4009e+00,4.0440e-02,6.0000e-01,9.4009e+00,4.0440e-02,1.8000e+00,9.4049e+00,2.0395e-02,6.0000e-01,9.4049e+00,2.0395e-02,1.8000e+00,9.4062e+00,-1.3710e-15,6.0000e-01,9.4062e+00,-1.3710e-15,1.8000e+00,9.4049e+00,-2.0395e-02,6.0000e-01,9.4049e+00,-2.0395e-02,1.8000e+00,9.4009e+00,-4.0440e-02,6.0000e-01,9.4009e+00,-4.0440e-02,1.8000e+00,9.3944e+00,-5.9794e-02,6.0000e-01,9.3944e+00,-5.9794e-02,1.8000e+00,9.3853e+00,-7.8125e-02,6.0000e-01,9.3853e+00,-7.8125e-02,1.8000e+00,9.3740e+00,-9.5119e-02,6.0000e-01,9.3740e+00,-9.5119e-02,1.8000e+00,9.3605e+00,-1.1049e-01,6.0000e-01,9.3605e+00,-1.1049e-01,1.8000e+00,9.3451e+00,-1.2396e-01,6.0000e-01,9.3451e+00,-1.2396e-01,1.8000e+00,9.3281e+00,-1.3532e-01,6.0000e-01,9.3281e+00,-1.3532e-01,1.8000e+00,9.3098e+00,-1.4436e-01,6.0000e-01,9.3098e+00,-1.4436e-01,1.8000e+00,9.2904e+00,-1.5093e-01,6.0000e-01,9.2904e+00,-1.5093e-01,1.8000e+00,9.2704e+00,-1.5491e-01,6.0000e-01,9.2704e+00,-1.5491e-01,1.8000e+00});
			return Coordinate_7_277_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #278, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_278_vector()
		{
			MFVec3f Normal_7_278_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_278_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #284, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_284_point()
		{
			MFVec3f Coordinate_7_284_point = new MFVec3f(new double[] {0.0000e+00,-5.0000e+00,3.7500e-01,0.0000e+00,-5.0000e+00,4.0000e+00,-6.5263e-01,-4.9572e+00,3.7500e-01,-6.5263e-01,-4.9572e+00,4.0000e+00,-1.2941e+00,-4.8296e+00,3.7500e-01,-1.2941e+00,-4.8296e+00,4.0000e+00,-1.9134e+00,-4.6194e+00,3.7500e-01,-1.9134e+00,-4.6194e+00,4.0000e+00,-2.5000e+00,-4.3301e+00,3.7500e-01,-2.5000e+00,-4.3301e+00,4.0000e+00,-3.0438e+00,-3.9668e+00,3.7500e-01,-3.0438e+00,-3.9668e+00,4.0000e+00,-3.5355e+00,-3.5355e+00,3.7500e-01,-3.5355e+00,-3.5355e+00,4.0000e+00,-3.9668e+00,-3.0438e+00,3.7500e-01,-3.9668e+00,-3.0438e+00,4.0000e+00,-4.3301e+00,-2.5000e+00,3.7500e-01,-4.3301e+00,-2.5000e+00,4.0000e+00,-4.6194e+00,-1.9134e+00,3.7500e-01,-4.6194e+00,-1.9134e+00,4.0000e+00,-4.8296e+00,-1.2941e+00,3.7500e-01,-4.8296e+00,-1.2941e+00,4.0000e+00,-4.9572e+00,-6.5263e-01,3.7500e-01,-4.9572e+00,-6.5263e-01,4.0000e+00,-5.0000e+00,-3.0616e-16,3.7500e-01,-5.0000e+00,-3.0616e-16,4.0000e+00,-4.9572e+00,6.5263e-01,3.7500e-01,-4.9572e+00,6.5263e-01,4.0000e+00,-4.8296e+00,1.2941e+00,3.7500e-01,-4.8296e+00,1.2941e+00,4.0000e+00,-4.6194e+00,1.9134e+00,3.7500e-01,-4.6194e+00,1.9134e+00,4.0000e+00,-4.3301e+00,2.5000e+00,3.7500e-01,-4.3301e+00,2.5000e+00,4.0000e+00,-3.9668e+00,3.0438e+00,3.7500e-01,-3.9668e+00,3.0438e+00,4.0000e+00,-3.5355e+00,3.5355e+00,3.7500e-01,-3.5355e+00,3.5355e+00,4.0000e+00,-3.0438e+00,3.9668e+00,3.7500e-01,-3.0438e+00,3.9668e+00,4.0000e+00,-2.5000e+00,4.3301e+00,3.7500e-01,-2.5000e+00,4.3301e+00,4.0000e+00,-1.9134e+00,4.6194e+00,3.7500e-01,-1.9134e+00,4.6194e+00,4.0000e+00,-1.2941e+00,4.8296e+00,3.7500e-01,-1.2941e+00,4.8296e+00,4.0000e+00,-6.5263e-01,4.9572e+00,3.7500e-01,-6.5263e-01,4.9572e+00,4.0000e+00,-6.1232e-16,5.0000e+00,3.7500e-01,-6.1232e-16,5.0000e+00,4.0000e+00,6.5263e-01,4.9572e+00,3.7500e-01,6.5263e-01,4.9572e+00,4.0000e+00,1.2941e+00,4.8296e+00,3.7500e-01,1.2941e+00,4.8296e+00,4.0000e+00,1.9134e+00,4.6194e+00,3.7500e-01,1.9134e+00,4.6194e+00,4.0000e+00,2.5000e+00,4.3301e+00,3.7500e-01,2.5000e+00,4.3301e+00,4.0000e+00,3.0438e+00,3.9668e+00,3.7500e-01,3.0438e+00,3.9668e+00,4.0000e+00,3.5355e+00,3.5355e+00,3.7500e-01,3.5355e+00,3.5355e+00,4.0000e+00,3.9668e+00,3.0438e+00,3.7500e-01,3.9668e+00,3.0438e+00,4.0000e+00,4.3301e+00,2.5000e+00,3.7500e-01,4.3301e+00,2.5000e+00,4.0000e+00,4.6194e+00,1.9134e+00,3.7500e-01,4.6194e+00,1.9134e+00,4.0000e+00,4.8296e+00,1.2941e+00,3.7500e-01,4.8296e+00,1.2941e+00,4.0000e+00,4.9572e+00,6.5263e-01,3.7500e-01,4.9572e+00,6.5263e-01,4.0000e+00,5.0000e+00,9.1849e-16,3.7500e-01,5.0000e+00,9.1849e-16,4.0000e+00,4.9572e+00,-6.5263e-01,3.7500e-01,4.9572e+00,-6.5263e-01,4.0000e+00,4.8296e+00,-1.2941e+00,3.7500e-01,4.8296e+00,-1.2941e+00,4.0000e+00,4.6194e+00,-1.9134e+00,3.7500e-01,4.6194e+00,-1.9134e+00,4.0000e+00,4.3301e+00,-2.5000e+00,3.7500e-01,4.3301e+00,-2.5000e+00,4.0000e+00,3.9668e+00,-3.0438e+00,3.7500e-01,3.9668e+00,-3.0438e+00,4.0000e+00,3.5355e+00,-3.5355e+00,3.7500e-01,3.5355e+00,-3.5355e+00,4.0000e+00,3.0438e+00,-3.9668e+00,3.7500e-01,3.0438e+00,-3.9668e+00,4.0000e+00,2.5000e+00,-4.3301e+00,3.7500e-01,2.5000e+00,-4.3301e+00,4.0000e+00,1.9134e+00,-4.6194e+00,3.7500e-01,1.9134e+00,-4.6194e+00,4.0000e+00,1.2941e+00,-4.8296e+00,3.7500e-01,1.2941e+00,-4.8296e+00,4.0000e+00,6.5263e-01,-4.9572e+00,3.7500e-01,6.5263e-01,-4.9572e+00,4.0000e+00});
			return Coordinate_7_284_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #285, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_285_vector()
		{
			MFVec3f Normal_7_285_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_285_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #291, 99 total numbers made up of 33 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_291_point()
		{
			MFVec3f Coordinate_7_291_point = new MFVec3f(new double[] {0.0000e+00,0.0000e+00,4.0000e+00,0.0000e+00,5.0000e+00,4.0000e+00,9.7545e-01,4.9039e+00,4.0000e+00,1.9134e+00,4.6194e+00,4.0000e+00,2.7779e+00,4.1573e+00,4.0000e+00,3.5355e+00,3.5355e+00,4.0000e+00,4.1573e+00,2.7779e+00,4.0000e+00,4.6194e+00,1.9134e+00,4.0000e+00,4.9039e+00,9.7545e-01,4.0000e+00,5.0000e+00,3.0616e-16,4.0000e+00,4.9039e+00,-9.7545e-01,4.0000e+00,4.6194e+00,-1.9134e+00,4.0000e+00,4.1573e+00,-2.7779e+00,4.0000e+00,3.5355e+00,-3.5355e+00,4.0000e+00,2.7779e+00,-4.1573e+00,4.0000e+00,1.9134e+00,-4.6194e+00,4.0000e+00,9.7545e-01,-4.9039e+00,4.0000e+00,6.1232e-16,-5.0000e+00,4.0000e+00,-9.7545e-01,-4.9039e+00,4.0000e+00,-1.9134e+00,-4.6194e+00,4.0000e+00,-2.7779e+00,-4.1573e+00,4.0000e+00,-3.5355e+00,-3.5355e+00,4.0000e+00,-4.1573e+00,-2.7779e+00,4.0000e+00,-4.6194e+00,-1.9134e+00,4.0000e+00,-4.9039e+00,-9.7545e-01,4.0000e+00,-5.0000e+00,-9.1849e-16,4.0000e+00,-4.9039e+00,9.7545e-01,4.0000e+00,-4.6194e+00,1.9134e+00,4.0000e+00,-4.1573e+00,2.7779e+00,4.0000e+00,-3.5355e+00,3.5355e+00,4.0000e+00,-2.7779e+00,4.1573e+00,4.0000e+00,-1.9134e+00,4.6194e+00,4.0000e+00,-9.7545e-01,4.9039e+00,4.0000e+00});
			return Coordinate_7_291_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #297, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_297_point()
		{
			MFVec3f Coordinate_7_297_point = new MFVec3f(new double[] {-7.5777e+00,-4.7500e+00,0.0000e+00,-7.5777e+00,-4.7500e+00,5.0000e-01,-7.6267e+00,-4.7468e+00,0.0000e+00,-7.6267e+00,-4.7468e+00,5.0000e-01,-7.6748e+00,-4.7372e+00,0.0000e+00,-7.6748e+00,-4.7372e+00,5.0000e-01,-7.7212e+00,-4.7215e+00,0.0000e+00,-7.7212e+00,-4.7215e+00,5.0000e-01,-7.7652e+00,-4.6998e+00,0.0000e+00,-7.7652e+00,-4.6998e+00,5.0000e-01,-7.8060e+00,-4.6725e+00,0.0000e+00,-7.8060e+00,-4.6725e+00,5.0000e-01,-7.8429e+00,-4.6402e+00,0.0000e+00,-7.8429e+00,-4.6402e+00,5.0000e-01,-7.8752e+00,-4.6033e+00,0.0000e+00,-7.8752e+00,-4.6033e+00,5.0000e-01,-7.9025e+00,-4.5625e+00,0.0000e+00,-7.9025e+00,-4.5625e+00,5.0000e-01,-7.9242e+00,-4.5185e+00,0.0000e+00,-7.9242e+00,-4.5185e+00,5.0000e-01,-7.9399e+00,-4.4721e+00,0.0000e+00,-7.9399e+00,-4.4721e+00,5.0000e-01,-7.9495e+00,-4.4239e+00,0.0000e+00,-7.9495e+00,-4.4239e+00,5.0000e-01,-7.9527e+00,-4.3750e+00,0.0000e+00,-7.9527e+00,-4.3750e+00,5.0000e-01,-7.9495e+00,-4.3261e+00,0.0000e+00,-7.9495e+00,-4.3261e+00,5.0000e-01,-7.9399e+00,-4.2779e+00,0.0000e+00,-7.9399e+00,-4.2779e+00,5.0000e-01,-7.9242e+00,-4.2315e+00,0.0000e+00,-7.9242e+00,-4.2315e+00,5.0000e-01,-7.9025e+00,-4.1875e+00,0.0000e+00,-7.9025e+00,-4.1875e+00,5.0000e-01,-7.8752e+00,-4.1467e+00,0.0000e+00,-7.8752e+00,-4.1467e+00,5.0000e-01,-7.8429e+00,-4.1098e+00,0.0000e+00,-7.8429e+00,-4.1098e+00,5.0000e-01,-7.8060e+00,-4.0775e+00,0.0000e+00,-7.8060e+00,-4.0775e+00,5.0000e-01,-7.7652e+00,-4.0502e+00,0.0000e+00,-7.7652e+00,-4.0502e+00,5.0000e-01,-7.7212e+00,-4.0285e+00,0.0000e+00,-7.7212e+00,-4.0285e+00,5.0000e-01,-7.6748e+00,-4.0128e+00,0.0000e+00,-7.6748e+00,-4.0128e+00,5.0000e-01,-7.6267e+00,-4.0032e+00,0.0000e+00,-7.6267e+00,-4.0032e+00,5.0000e-01,-7.5777e+00,-4.0000e+00,0.0000e+00,-7.5777e+00,-4.0000e+00,5.0000e-01,-7.5288e+00,-4.0032e+00,0.0000e+00,-7.5288e+00,-4.0032e+00,5.0000e-01,-7.4807e+00,-4.0128e+00,0.0000e+00,-7.4807e+00,-4.0128e+00,5.0000e-01,-7.4342e+00,-4.0285e+00,0.0000e+00,-7.4342e+00,-4.0285e+00,5.0000e-01,-7.3902e+00,-4.0502e+00,0.0000e+00,-7.3902e+00,-4.0502e+00,5.0000e-01,-7.3494e+00,-4.0775e+00,0.0000e+00,-7.3494e+00,-4.0775e+00,5.0000e-01,-7.3126e+00,-4.1098e+00,0.0000e+00,-7.3126e+00,-4.1098e+00,5.0000e-01,-7.2802e+00,-4.1467e+00,0.0000e+00,-7.2802e+00,-4.1467e+00,5.0000e-01,-7.2530e+00,-4.1875e+00,0.0000e+00,-7.2530e+00,-4.1875e+00,5.0000e-01,-7.2313e+00,-4.2315e+00,0.0000e+00,-7.2313e+00,-4.2315e+00,5.0000e-01,-7.2155e+00,-4.2779e+00,0.0000e+00,-7.2155e+00,-4.2779e+00,5.0000e-01,-7.2059e+00,-4.3261e+00,0.0000e+00,-7.2059e+00,-4.3261e+00,5.0000e-01,-7.2027e+00,-4.3750e+00,0.0000e+00,-7.2027e+00,-4.3750e+00,5.0000e-01,-7.2059e+00,-4.4239e+00,0.0000e+00,-7.2059e+00,-4.4239e+00,5.0000e-01,-7.2155e+00,-4.4721e+00,0.0000e+00,-7.2155e+00,-4.4721e+00,5.0000e-01,-7.2313e+00,-4.5185e+00,0.0000e+00,-7.2313e+00,-4.5185e+00,5.0000e-01,-7.2530e+00,-4.5625e+00,0.0000e+00,-7.2530e+00,-4.5625e+00,5.0000e-01,-7.2802e+00,-4.6033e+00,0.0000e+00,-7.2802e+00,-4.6033e+00,5.0000e-01,-7.3126e+00,-4.6402e+00,0.0000e+00,-7.3126e+00,-4.6402e+00,5.0000e-01,-7.3494e+00,-4.6725e+00,0.0000e+00,-7.3494e+00,-4.6725e+00,5.0000e-01,-7.3902e+00,-4.6998e+00,0.0000e+00,-7.3902e+00,-4.6998e+00,5.0000e-01,-7.4342e+00,-4.7215e+00,0.0000e+00,-7.4342e+00,-4.7215e+00,5.0000e-01,-7.4807e+00,-4.7372e+00,0.0000e+00,-7.4807e+00,-4.7372e+00,5.0000e-01,-7.5288e+00,-4.7468e+00,0.0000e+00,-7.5288e+00,-4.7468e+00,5.0000e-01});
			return Coordinate_7_297_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #298, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_298_vector()
		{
			MFVec3f Normal_7_298_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_298_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #304, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_304_point()
		{
			MFVec3f Coordinate_7_304_point = new MFVec3f(new double[] {-7.5777e+00,-4.7500e+00,5.0000e-01,-7.5046e+00,-4.7428e+00,5.0000e-01,-7.4342e+00,-4.7215e+00,5.0000e-01,-7.3694e+00,-4.6868e+00,5.0000e-01,-7.3126e+00,-4.6402e+00,5.0000e-01,-7.2659e+00,-4.5833e+00,5.0000e-01,-7.2313e+00,-4.5185e+00,5.0000e-01,-7.2099e+00,-4.4482e+00,5.0000e-01,-7.2027e+00,-4.3750e+00,5.0000e-01,-7.2099e+00,-4.3018e+00,5.0000e-01,-7.2313e+00,-4.2315e+00,5.0000e-01,-7.2659e+00,-4.1667e+00,5.0000e-01,-7.3126e+00,-4.1098e+00,5.0000e-01,-7.3694e+00,-4.0632e+00,5.0000e-01,-7.4342e+00,-4.0285e+00,5.0000e-01,-7.5046e+00,-4.0072e+00,5.0000e-01,-7.5777e+00,-4.0000e+00,5.0000e-01,-7.6509e+00,-4.0072e+00,5.0000e-01,-7.7212e+00,-4.0285e+00,5.0000e-01,-7.7861e+00,-4.0632e+00,5.0000e-01,-7.8429e+00,-4.1098e+00,5.0000e-01,-7.8895e+00,-4.1667e+00,5.0000e-01,-7.9242e+00,-4.2315e+00,5.0000e-01,-7.9455e+00,-4.3018e+00,5.0000e-01,-7.9527e+00,-4.3750e+00,5.0000e-01,-7.9455e+00,-4.4482e+00,5.0000e-01,-7.9242e+00,-4.5185e+00,5.0000e-01,-7.8895e+00,-4.5833e+00,5.0000e-01,-7.8429e+00,-4.6402e+00,5.0000e-01,-7.7861e+00,-4.6868e+00,5.0000e-01,-7.7212e+00,-4.7215e+00,5.0000e-01,-7.6509e+00,-4.7428e+00,5.0000e-01,-7.5777e+00,-5.1250e+00,5.0000e-01,-7.4314e+00,-5.1106e+00,5.0000e-01,-7.2907e+00,-5.0679e+00,5.0000e-01,-7.1610e+00,-4.9986e+00,5.0000e-01,-7.0474e+00,-4.9053e+00,5.0000e-01,-6.9541e+00,-4.7917e+00,5.0000e-01,-6.8848e+00,-4.6620e+00,5.0000e-01,-6.8421e+00,-4.5213e+00,5.0000e-01,-6.8277e+00,-4.3750e+00,5.0000e-01,-6.8421e+00,-4.2287e+00,5.0000e-01,-6.8848e+00,-4.0880e+00,5.0000e-01,-6.9541e+00,-3.9583e+00,5.0000e-01,-7.0474e+00,-3.8447e+00,5.0000e-01,-7.1610e+00,-3.7514e+00,5.0000e-01,-7.2907e+00,-3.6821e+00,5.0000e-01,-7.4314e+00,-3.6394e+00,5.0000e-01,-7.5777e+00,-3.6250e+00,5.0000e-01,-7.7240e+00,-3.6394e+00,5.0000e-01,-7.8647e+00,-3.6821e+00,5.0000e-01,-7.9944e+00,-3.7514e+00,5.0000e-01,-8.1081e+00,-3.8447e+00,5.0000e-01,-8.2013e+00,-3.9583e+00,5.0000e-01,-8.2706e+00,-4.0880e+00,5.0000e-01,-8.3133e+00,-4.2287e+00,5.0000e-01,-8.3277e+00,-4.3750e+00,5.0000e-01,-8.3133e+00,-4.5213e+00,5.0000e-01,-8.2706e+00,-4.6620e+00,5.0000e-01,-8.2013e+00,-4.7917e+00,5.0000e-01,-8.1081e+00,-4.9053e+00,5.0000e-01,-7.9944e+00,-4.9986e+00,5.0000e-01,-7.8647e+00,-5.0679e+00,5.0000e-01,-7.7240e+00,-5.1106e+00,5.0000e-01});
			return Coordinate_7_304_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #310, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_310_point()
		{
			MFVec3f Coordinate_7_310_point = new MFVec3f(new double[] {-7.5777e+00,-5.1250e+00,5.0000e-01,-7.5777e+00,-5.1250e+00,1.0000e+00,-7.6756e+00,-5.1186e+00,5.0000e-01,-7.6756e+00,-5.1186e+00,1.0000e+00,-7.7718e+00,-5.0994e+00,5.0000e-01,-7.7718e+00,-5.0994e+00,1.0000e+00,-7.8647e+00,-5.0679e+00,5.0000e-01,-7.8647e+00,-5.0679e+00,1.0000e+00,-7.9527e+00,-5.0245e+00,5.0000e-01,-7.9527e+00,-5.0245e+00,1.0000e+00,-8.0343e+00,-4.9700e+00,5.0000e-01,-8.0343e+00,-4.9700e+00,1.0000e+00,-8.1081e+00,-4.9053e+00,5.0000e-01,-8.1081e+00,-4.9053e+00,1.0000e+00,-8.1727e+00,-4.8316e+00,5.0000e-01,-8.1727e+00,-4.8316e+00,1.0000e+00,-8.2272e+00,-4.7500e+00,5.0000e-01,-8.2272e+00,-4.7500e+00,1.0000e+00,-8.2706e+00,-4.6620e+00,5.0000e-01,-8.2706e+00,-4.6620e+00,1.0000e+00,-8.3022e+00,-4.5691e+00,5.0000e-01,-8.3022e+00,-4.5691e+00,1.0000e+00,-8.3213e+00,-4.4729e+00,5.0000e-01,-8.3213e+00,-4.4729e+00,1.0000e+00,-8.3277e+00,-4.3750e+00,5.0000e-01,-8.3277e+00,-4.3750e+00,1.0000e+00,-8.3213e+00,-4.2771e+00,5.0000e-01,-8.3213e+00,-4.2771e+00,1.0000e+00,-8.3022e+00,-4.1809e+00,5.0000e-01,-8.3022e+00,-4.1809e+00,1.0000e+00,-8.2706e+00,-4.0880e+00,5.0000e-01,-8.2706e+00,-4.0880e+00,1.0000e+00,-8.2272e+00,-4.0000e+00,5.0000e-01,-8.2272e+00,-4.0000e+00,1.0000e+00,-8.1727e+00,-3.9184e+00,5.0000e-01,-8.1727e+00,-3.9184e+00,1.0000e+00,-8.1081e+00,-3.8447e+00,5.0000e-01,-8.1081e+00,-3.8447e+00,1.0000e+00,-8.0343e+00,-3.7800e+00,5.0000e-01,-8.0343e+00,-3.7800e+00,1.0000e+00,-7.9527e+00,-3.7255e+00,5.0000e-01,-7.9527e+00,-3.7255e+00,1.0000e+00,-7.8647e+00,-3.6821e+00,5.0000e-01,-7.8647e+00,-3.6821e+00,1.0000e+00,-7.7718e+00,-3.6506e+00,5.0000e-01,-7.7718e+00,-3.6506e+00,1.0000e+00,-7.6756e+00,-3.6314e+00,5.0000e-01,-7.6756e+00,-3.6314e+00,1.0000e+00,-7.5777e+00,-3.6250e+00,5.0000e-01,-7.5777e+00,-3.6250e+00,1.0000e+00,-7.4798e+00,-3.6314e+00,5.0000e-01,-7.4798e+00,-3.6314e+00,1.0000e+00,-7.3836e+00,-3.6506e+00,5.0000e-01,-7.3836e+00,-3.6506e+00,1.0000e+00,-7.2907e+00,-3.6821e+00,5.0000e-01,-7.2907e+00,-3.6821e+00,1.0000e+00,-7.2027e+00,-3.7255e+00,5.0000e-01,-7.2027e+00,-3.7255e+00,1.0000e+00,-7.1212e+00,-3.7800e+00,5.0000e-01,-7.1212e+00,-3.7800e+00,1.0000e+00,-7.0474e+00,-3.8447e+00,5.0000e-01,-7.0474e+00,-3.8447e+00,1.0000e+00,-6.9827e+00,-3.9184e+00,5.0000e-01,-6.9827e+00,-3.9184e+00,1.0000e+00,-6.9282e+00,-4.0000e+00,5.0000e-01,-6.9282e+00,-4.0000e+00,1.0000e+00,-6.8848e+00,-4.0880e+00,5.0000e-01,-6.8848e+00,-4.0880e+00,1.0000e+00,-6.8533e+00,-4.1809e+00,5.0000e-01,-6.8533e+00,-4.1809e+00,1.0000e+00,-6.8341e+00,-4.2771e+00,5.0000e-01,-6.8341e+00,-4.2771e+00,1.0000e+00,-6.8277e+00,-4.3750e+00,5.0000e-01,-6.8277e+00,-4.3750e+00,1.0000e+00,-6.8341e+00,-4.4729e+00,5.0000e-01,-6.8341e+00,-4.4729e+00,1.0000e+00,-6.8533e+00,-4.5691e+00,5.0000e-01,-6.8533e+00,-4.5691e+00,1.0000e+00,-6.8848e+00,-4.6620e+00,5.0000e-01,-6.8848e+00,-4.6620e+00,1.0000e+00,-6.9282e+00,-4.7500e+00,5.0000e-01,-6.9282e+00,-4.7500e+00,1.0000e+00,-6.9827e+00,-4.8316e+00,5.0000e-01,-6.9827e+00,-4.8316e+00,1.0000e+00,-7.0474e+00,-4.9053e+00,5.0000e-01,-7.0474e+00,-4.9053e+00,1.0000e+00,-7.1212e+00,-4.9700e+00,5.0000e-01,-7.1212e+00,-4.9700e+00,1.0000e+00,-7.2027e+00,-5.0245e+00,5.0000e-01,-7.2027e+00,-5.0245e+00,1.0000e+00,-7.2907e+00,-5.0679e+00,5.0000e-01,-7.2907e+00,-5.0679e+00,1.0000e+00,-7.3836e+00,-5.0994e+00,5.0000e-01,-7.3836e+00,-5.0994e+00,1.0000e+00,-7.4798e+00,-5.1186e+00,5.0000e-01,-7.4798e+00,-5.1186e+00,1.0000e+00});
			return Coordinate_7_310_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #311, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_311_vector()
		{
			MFVec3f Normal_7_311_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_311_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #317, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_317_point()
		{
			MFVec3f Coordinate_7_317_point = new MFVec3f(new double[] {-7.5777e+00,4.0000e+00,0.0000e+00,-7.5777e+00,4.0000e+00,5.0000e-01,-7.6267e+00,4.0032e+00,0.0000e+00,-7.6267e+00,4.0032e+00,5.0000e-01,-7.6748e+00,4.0128e+00,0.0000e+00,-7.6748e+00,4.0128e+00,5.0000e-01,-7.7212e+00,4.0285e+00,0.0000e+00,-7.7212e+00,4.0285e+00,5.0000e-01,-7.7652e+00,4.0502e+00,0.0000e+00,-7.7652e+00,4.0502e+00,5.0000e-01,-7.8060e+00,4.0775e+00,0.0000e+00,-7.8060e+00,4.0775e+00,5.0000e-01,-7.8429e+00,4.1098e+00,0.0000e+00,-7.8429e+00,4.1098e+00,5.0000e-01,-7.8752e+00,4.1467e+00,0.0000e+00,-7.8752e+00,4.1467e+00,5.0000e-01,-7.9025e+00,4.1875e+00,0.0000e+00,-7.9025e+00,4.1875e+00,5.0000e-01,-7.9242e+00,4.2315e+00,0.0000e+00,-7.9242e+00,4.2315e+00,5.0000e-01,-7.9399e+00,4.2779e+00,0.0000e+00,-7.9399e+00,4.2779e+00,5.0000e-01,-7.9495e+00,4.3261e+00,0.0000e+00,-7.9495e+00,4.3261e+00,5.0000e-01,-7.9527e+00,4.3750e+00,0.0000e+00,-7.9527e+00,4.3750e+00,5.0000e-01,-7.9495e+00,4.4239e+00,0.0000e+00,-7.9495e+00,4.4239e+00,5.0000e-01,-7.9399e+00,4.4721e+00,0.0000e+00,-7.9399e+00,4.4721e+00,5.0000e-01,-7.9242e+00,4.5185e+00,0.0000e+00,-7.9242e+00,4.5185e+00,5.0000e-01,-7.9025e+00,4.5625e+00,0.0000e+00,-7.9025e+00,4.5625e+00,5.0000e-01,-7.8752e+00,4.6033e+00,0.0000e+00,-7.8752e+00,4.6033e+00,5.0000e-01,-7.8429e+00,4.6402e+00,0.0000e+00,-7.8429e+00,4.6402e+00,5.0000e-01,-7.8060e+00,4.6725e+00,0.0000e+00,-7.8060e+00,4.6725e+00,5.0000e-01,-7.7652e+00,4.6998e+00,0.0000e+00,-7.7652e+00,4.6998e+00,5.0000e-01,-7.7212e+00,4.7215e+00,0.0000e+00,-7.7212e+00,4.7215e+00,5.0000e-01,-7.6748e+00,4.7372e+00,0.0000e+00,-7.6748e+00,4.7372e+00,5.0000e-01,-7.6267e+00,4.7468e+00,0.0000e+00,-7.6267e+00,4.7468e+00,5.0000e-01,-7.5777e+00,4.7500e+00,0.0000e+00,-7.5777e+00,4.7500e+00,5.0000e-01,-7.5288e+00,4.7468e+00,0.0000e+00,-7.5288e+00,4.7468e+00,5.0000e-01,-7.4807e+00,4.7372e+00,0.0000e+00,-7.4807e+00,4.7372e+00,5.0000e-01,-7.4342e+00,4.7215e+00,0.0000e+00,-7.4342e+00,4.7215e+00,5.0000e-01,-7.3902e+00,4.6998e+00,0.0000e+00,-7.3902e+00,4.6998e+00,5.0000e-01,-7.3494e+00,4.6725e+00,0.0000e+00,-7.3494e+00,4.6725e+00,5.0000e-01,-7.3126e+00,4.6402e+00,0.0000e+00,-7.3126e+00,4.6402e+00,5.0000e-01,-7.2802e+00,4.6033e+00,0.0000e+00,-7.2802e+00,4.6033e+00,5.0000e-01,-7.2530e+00,4.5625e+00,0.0000e+00,-7.2530e+00,4.5625e+00,5.0000e-01,-7.2313e+00,4.5185e+00,0.0000e+00,-7.2313e+00,4.5185e+00,5.0000e-01,-7.2155e+00,4.4721e+00,0.0000e+00,-7.2155e+00,4.4721e+00,5.0000e-01,-7.2059e+00,4.4239e+00,0.0000e+00,-7.2059e+00,4.4239e+00,5.0000e-01,-7.2027e+00,4.3750e+00,0.0000e+00,-7.2027e+00,4.3750e+00,5.0000e-01,-7.2059e+00,4.3261e+00,0.0000e+00,-7.2059e+00,4.3261e+00,5.0000e-01,-7.2155e+00,4.2779e+00,0.0000e+00,-7.2155e+00,4.2779e+00,5.0000e-01,-7.2313e+00,4.2315e+00,0.0000e+00,-7.2313e+00,4.2315e+00,5.0000e-01,-7.2530e+00,4.1875e+00,0.0000e+00,-7.2530e+00,4.1875e+00,5.0000e-01,-7.2802e+00,4.1467e+00,0.0000e+00,-7.2802e+00,4.1467e+00,5.0000e-01,-7.3126e+00,4.1098e+00,0.0000e+00,-7.3126e+00,4.1098e+00,5.0000e-01,-7.3494e+00,4.0775e+00,0.0000e+00,-7.3494e+00,4.0775e+00,5.0000e-01,-7.3902e+00,4.0502e+00,0.0000e+00,-7.3902e+00,4.0502e+00,5.0000e-01,-7.4342e+00,4.0285e+00,0.0000e+00,-7.4342e+00,4.0285e+00,5.0000e-01,-7.4807e+00,4.0128e+00,0.0000e+00,-7.4807e+00,4.0128e+00,5.0000e-01,-7.5288e+00,4.0032e+00,0.0000e+00,-7.5288e+00,4.0032e+00,5.0000e-01});
			return Coordinate_7_317_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #318, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_318_vector()
		{
			MFVec3f Normal_7_318_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_318_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #324, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_324_point()
		{
			MFVec3f Coordinate_7_324_point = new MFVec3f(new double[] {-7.5777e+00,4.0000e+00,5.0000e-01,-7.5046e+00,4.0072e+00,5.0000e-01,-7.4342e+00,4.0285e+00,5.0000e-01,-7.3694e+00,4.0632e+00,5.0000e-01,-7.3126e+00,4.1098e+00,5.0000e-01,-7.2659e+00,4.1667e+00,5.0000e-01,-7.2313e+00,4.2315e+00,5.0000e-01,-7.2099e+00,4.3018e+00,5.0000e-01,-7.2027e+00,4.3750e+00,5.0000e-01,-7.2099e+00,4.4482e+00,5.0000e-01,-7.2313e+00,4.5185e+00,5.0000e-01,-7.2659e+00,4.5833e+00,5.0000e-01,-7.3126e+00,4.6402e+00,5.0000e-01,-7.3694e+00,4.6868e+00,5.0000e-01,-7.4342e+00,4.7215e+00,5.0000e-01,-7.5046e+00,4.7428e+00,5.0000e-01,-7.5777e+00,4.7500e+00,5.0000e-01,-7.6509e+00,4.7428e+00,5.0000e-01,-7.7212e+00,4.7215e+00,5.0000e-01,-7.7861e+00,4.6868e+00,5.0000e-01,-7.8429e+00,4.6402e+00,5.0000e-01,-7.8895e+00,4.5833e+00,5.0000e-01,-7.9242e+00,4.5185e+00,5.0000e-01,-7.9455e+00,4.4482e+00,5.0000e-01,-7.9527e+00,4.3750e+00,5.0000e-01,-7.9455e+00,4.3018e+00,5.0000e-01,-7.9242e+00,4.2315e+00,5.0000e-01,-7.8895e+00,4.1667e+00,5.0000e-01,-7.8429e+00,4.1098e+00,5.0000e-01,-7.7861e+00,4.0632e+00,5.0000e-01,-7.7212e+00,4.0285e+00,5.0000e-01,-7.6509e+00,4.0072e+00,5.0000e-01,-7.5777e+00,3.6250e+00,5.0000e-01,-7.4314e+00,3.6394e+00,5.0000e-01,-7.2907e+00,3.6821e+00,5.0000e-01,-7.1610e+00,3.7514e+00,5.0000e-01,-7.0474e+00,3.8447e+00,5.0000e-01,-6.9541e+00,3.9583e+00,5.0000e-01,-6.8848e+00,4.0880e+00,5.0000e-01,-6.8421e+00,4.2287e+00,5.0000e-01,-6.8277e+00,4.3750e+00,5.0000e-01,-6.8421e+00,4.5213e+00,5.0000e-01,-6.8848e+00,4.6620e+00,5.0000e-01,-6.9541e+00,4.7917e+00,5.0000e-01,-7.0474e+00,4.9053e+00,5.0000e-01,-7.1610e+00,4.9986e+00,5.0000e-01,-7.2907e+00,5.0679e+00,5.0000e-01,-7.4314e+00,5.1106e+00,5.0000e-01,-7.5777e+00,5.1250e+00,5.0000e-01,-7.7240e+00,5.1106e+00,5.0000e-01,-7.8647e+00,5.0679e+00,5.0000e-01,-7.9944e+00,4.9986e+00,5.0000e-01,-8.1081e+00,4.9053e+00,5.0000e-01,-8.2013e+00,4.7917e+00,5.0000e-01,-8.2706e+00,4.6620e+00,5.0000e-01,-8.3133e+00,4.5213e+00,5.0000e-01,-8.3277e+00,4.3750e+00,5.0000e-01,-8.3133e+00,4.2287e+00,5.0000e-01,-8.2706e+00,4.0880e+00,5.0000e-01,-8.2013e+00,3.9583e+00,5.0000e-01,-8.1081e+00,3.8447e+00,5.0000e-01,-7.9944e+00,3.7514e+00,5.0000e-01,-7.8647e+00,3.6821e+00,5.0000e-01,-7.7240e+00,3.6394e+00,5.0000e-01});
			return Coordinate_7_324_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #330, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_330_point()
		{
			MFVec3f Coordinate_7_330_point = new MFVec3f(new double[] {-7.5777e+00,3.6250e+00,5.0000e-01,-7.5777e+00,3.6250e+00,1.0000e+00,-7.6756e+00,3.6314e+00,5.0000e-01,-7.6756e+00,3.6314e+00,1.0000e+00,-7.7718e+00,3.6506e+00,5.0000e-01,-7.7718e+00,3.6506e+00,1.0000e+00,-7.8647e+00,3.6821e+00,5.0000e-01,-7.8647e+00,3.6821e+00,1.0000e+00,-7.9527e+00,3.7255e+00,5.0000e-01,-7.9527e+00,3.7255e+00,1.0000e+00,-8.0343e+00,3.7800e+00,5.0000e-01,-8.0343e+00,3.7800e+00,1.0000e+00,-8.1081e+00,3.8447e+00,5.0000e-01,-8.1081e+00,3.8447e+00,1.0000e+00,-8.1727e+00,3.9184e+00,5.0000e-01,-8.1727e+00,3.9184e+00,1.0000e+00,-8.2272e+00,4.0000e+00,5.0000e-01,-8.2272e+00,4.0000e+00,1.0000e+00,-8.2706e+00,4.0880e+00,5.0000e-01,-8.2706e+00,4.0880e+00,1.0000e+00,-8.3022e+00,4.1809e+00,5.0000e-01,-8.3022e+00,4.1809e+00,1.0000e+00,-8.3213e+00,4.2771e+00,5.0000e-01,-8.3213e+00,4.2771e+00,1.0000e+00,-8.3277e+00,4.3750e+00,5.0000e-01,-8.3277e+00,4.3750e+00,1.0000e+00,-8.3213e+00,4.4729e+00,5.0000e-01,-8.3213e+00,4.4729e+00,1.0000e+00,-8.3022e+00,4.5691e+00,5.0000e-01,-8.3022e+00,4.5691e+00,1.0000e+00,-8.2706e+00,4.6620e+00,5.0000e-01,-8.2706e+00,4.6620e+00,1.0000e+00,-8.2272e+00,4.7500e+00,5.0000e-01,-8.2272e+00,4.7500e+00,1.0000e+00,-8.1727e+00,4.8316e+00,5.0000e-01,-8.1727e+00,4.8316e+00,1.0000e+00,-8.1081e+00,4.9053e+00,5.0000e-01,-8.1081e+00,4.9053e+00,1.0000e+00,-8.0343e+00,4.9700e+00,5.0000e-01,-8.0343e+00,4.9700e+00,1.0000e+00,-7.9527e+00,5.0245e+00,5.0000e-01,-7.9527e+00,5.0245e+00,1.0000e+00,-7.8647e+00,5.0679e+00,5.0000e-01,-7.8647e+00,5.0679e+00,1.0000e+00,-7.7718e+00,5.0994e+00,5.0000e-01,-7.7718e+00,5.0994e+00,1.0000e+00,-7.6756e+00,5.1186e+00,5.0000e-01,-7.6756e+00,5.1186e+00,1.0000e+00,-7.5777e+00,5.1250e+00,5.0000e-01,-7.5777e+00,5.1250e+00,1.0000e+00,-7.4798e+00,5.1186e+00,5.0000e-01,-7.4798e+00,5.1186e+00,1.0000e+00,-7.3836e+00,5.0994e+00,5.0000e-01,-7.3836e+00,5.0994e+00,1.0000e+00,-7.2907e+00,5.0679e+00,5.0000e-01,-7.2907e+00,5.0679e+00,1.0000e+00,-7.2027e+00,5.0245e+00,5.0000e-01,-7.2027e+00,5.0245e+00,1.0000e+00,-7.1212e+00,4.9700e+00,5.0000e-01,-7.1212e+00,4.9700e+00,1.0000e+00,-7.0474e+00,4.9053e+00,5.0000e-01,-7.0474e+00,4.9053e+00,1.0000e+00,-6.9827e+00,4.8316e+00,5.0000e-01,-6.9827e+00,4.8316e+00,1.0000e+00,-6.9282e+00,4.7500e+00,5.0000e-01,-6.9282e+00,4.7500e+00,1.0000e+00,-6.8848e+00,4.6620e+00,5.0000e-01,-6.8848e+00,4.6620e+00,1.0000e+00,-6.8533e+00,4.5691e+00,5.0000e-01,-6.8533e+00,4.5691e+00,1.0000e+00,-6.8341e+00,4.4729e+00,5.0000e-01,-6.8341e+00,4.4729e+00,1.0000e+00,-6.8277e+00,4.3750e+00,5.0000e-01,-6.8277e+00,4.3750e+00,1.0000e+00,-6.8341e+00,4.2771e+00,5.0000e-01,-6.8341e+00,4.2771e+00,1.0000e+00,-6.8533e+00,4.1809e+00,5.0000e-01,-6.8533e+00,4.1809e+00,1.0000e+00,-6.8848e+00,4.0880e+00,5.0000e-01,-6.8848e+00,4.0880e+00,1.0000e+00,-6.9282e+00,4.0000e+00,5.0000e-01,-6.9282e+00,4.0000e+00,1.0000e+00,-6.9827e+00,3.9184e+00,5.0000e-01,-6.9827e+00,3.9184e+00,1.0000e+00,-7.0474e+00,3.8447e+00,5.0000e-01,-7.0474e+00,3.8447e+00,1.0000e+00,-7.1212e+00,3.7800e+00,5.0000e-01,-7.1212e+00,3.7800e+00,1.0000e+00,-7.2027e+00,3.7255e+00,5.0000e-01,-7.2027e+00,3.7255e+00,1.0000e+00,-7.2907e+00,3.6821e+00,5.0000e-01,-7.2907e+00,3.6821e+00,1.0000e+00,-7.3836e+00,3.6506e+00,5.0000e-01,-7.3836e+00,3.6506e+00,1.0000e+00,-7.4798e+00,3.6314e+00,5.0000e-01,-7.4798e+00,3.6314e+00,1.0000e+00});
			return Coordinate_7_330_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #331, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_331_vector()
		{
			MFVec3f Normal_7_331_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_331_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #337, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_337_point()
		{
			MFVec3f Coordinate_7_337_point = new MFVec3f(new double[] {-4.3745e+00,-7.9530e+00,0.0000e+00,-4.3745e+00,-7.9530e+00,5.0000e-01,-4.4235e+00,-7.9498e+00,0.0000e+00,-4.4235e+00,-7.9498e+00,5.0000e-01,-4.4716e+00,-7.9402e+00,0.0000e+00,-4.4716e+00,-7.9402e+00,5.0000e-01,-4.5180e+00,-7.9245e+00,0.0000e+00,-4.5180e+00,-7.9245e+00,5.0000e-01,-4.5620e+00,-7.9028e+00,0.0000e+00,-4.5620e+00,-7.9028e+00,5.0000e-01,-4.6028e+00,-7.8755e+00,0.0000e+00,-4.6028e+00,-7.8755e+00,5.0000e-01,-4.6397e+00,-7.8432e+00,0.0000e+00,-4.6397e+00,-7.8432e+00,5.0000e-01,-4.6720e+00,-7.8063e+00,0.0000e+00,-4.6720e+00,-7.8063e+00,5.0000e-01,-4.6993e+00,-7.7655e+00,0.0000e+00,-4.6993e+00,-7.7655e+00,5.0000e-01,-4.7210e+00,-7.7215e+00,0.0000e+00,-4.7210e+00,-7.7215e+00,5.0000e-01,-4.7367e+00,-7.6751e+00,0.0000e+00,-4.7367e+00,-7.6751e+00,5.0000e-01,-4.7463e+00,-7.6269e+00,0.0000e+00,-4.7463e+00,-7.6269e+00,5.0000e-01,-4.7495e+00,-7.5780e+00,0.0000e+00,-4.7495e+00,-7.5780e+00,5.0000e-01,-4.7463e+00,-7.5291e+00,0.0000e+00,-4.7463e+00,-7.5291e+00,5.0000e-01,-4.7367e+00,-7.4809e+00,0.0000e+00,-4.7367e+00,-7.4809e+00,5.0000e-01,-4.7210e+00,-7.4345e+00,0.0000e+00,-4.7210e+00,-7.4345e+00,5.0000e-01,-4.6993e+00,-7.3905e+00,0.0000e+00,-4.6993e+00,-7.3905e+00,5.0000e-01,-4.6720e+00,-7.3497e+00,0.0000e+00,-4.6720e+00,-7.3497e+00,5.0000e-01,-4.6397e+00,-7.3128e+00,0.0000e+00,-4.6397e+00,-7.3128e+00,5.0000e-01,-4.6028e+00,-7.2805e+00,0.0000e+00,-4.6028e+00,-7.2805e+00,5.0000e-01,-4.5620e+00,-7.2532e+00,0.0000e+00,-4.5620e+00,-7.2532e+00,5.0000e-01,-4.5180e+00,-7.2315e+00,0.0000e+00,-4.5180e+00,-7.2315e+00,5.0000e-01,-4.4716e+00,-7.2158e+00,0.0000e+00,-4.4716e+00,-7.2158e+00,5.0000e-01,-4.4235e+00,-7.2062e+00,0.0000e+00,-4.4235e+00,-7.2062e+00,5.0000e-01,-4.3745e+00,-7.2030e+00,0.0000e+00,-4.3745e+00,-7.2030e+00,5.0000e-01,-4.3256e+00,-7.2062e+00,0.0000e+00,-4.3256e+00,-7.2062e+00,5.0000e-01,-4.2775e+00,-7.2158e+00,0.0000e+00,-4.2775e+00,-7.2158e+00,5.0000e-01,-4.2310e+00,-7.2315e+00,0.0000e+00,-4.2310e+00,-7.2315e+00,5.0000e-01,-4.1870e+00,-7.2532e+00,0.0000e+00,-4.1870e+00,-7.2532e+00,5.0000e-01,-4.1462e+00,-7.2805e+00,0.0000e+00,-4.1462e+00,-7.2805e+00,5.0000e-01,-4.1094e+00,-7.3128e+00,0.0000e+00,-4.1094e+00,-7.3128e+00,5.0000e-01,-4.0770e+00,-7.3497e+00,0.0000e+00,-4.0770e+00,-7.3497e+00,5.0000e-01,-4.0498e+00,-7.3905e+00,0.0000e+00,-4.0498e+00,-7.3905e+00,5.0000e-01,-4.0281e+00,-7.4345e+00,0.0000e+00,-4.0281e+00,-7.4345e+00,5.0000e-01,-4.0123e+00,-7.4809e+00,0.0000e+00,-4.0123e+00,-7.4809e+00,5.0000e-01,-4.0027e+00,-7.5291e+00,0.0000e+00,-4.0027e+00,-7.5291e+00,5.0000e-01,-3.9995e+00,-7.5780e+00,0.0000e+00,-3.9995e+00,-7.5780e+00,5.0000e-01,-4.0027e+00,-7.6269e+00,0.0000e+00,-4.0027e+00,-7.6269e+00,5.0000e-01,-4.0123e+00,-7.6751e+00,0.0000e+00,-4.0123e+00,-7.6751e+00,5.0000e-01,-4.0281e+00,-7.7215e+00,0.0000e+00,-4.0281e+00,-7.7215e+00,5.0000e-01,-4.0498e+00,-7.7655e+00,0.0000e+00,-4.0498e+00,-7.7655e+00,5.0000e-01,-4.0770e+00,-7.8063e+00,0.0000e+00,-4.0770e+00,-7.8063e+00,5.0000e-01,-4.1094e+00,-7.8432e+00,0.0000e+00,-4.1094e+00,-7.8432e+00,5.0000e-01,-4.1462e+00,-7.8755e+00,0.0000e+00,-4.1462e+00,-7.8755e+00,5.0000e-01,-4.1870e+00,-7.9028e+00,0.0000e+00,-4.1870e+00,-7.9028e+00,5.0000e-01,-4.2310e+00,-7.9245e+00,0.0000e+00,-4.2310e+00,-7.9245e+00,5.0000e-01,-4.2775e+00,-7.9402e+00,0.0000e+00,-4.2775e+00,-7.9402e+00,5.0000e-01,-4.3256e+00,-7.9498e+00,0.0000e+00,-4.3256e+00,-7.9498e+00,5.0000e-01});
			return Coordinate_7_337_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #338, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_338_vector()
		{
			MFVec3f Normal_7_338_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_338_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #344, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_344_point()
		{
			MFVec3f Coordinate_7_344_point = new MFVec3f(new double[] {-4.3745e+00,-7.9530e+00,5.0000e-01,-4.3014e+00,-7.9458e+00,5.0000e-01,-4.2310e+00,-7.9245e+00,5.0000e-01,-4.1662e+00,-7.8898e+00,5.0000e-01,-4.1094e+00,-7.8432e+00,5.0000e-01,-4.0627e+00,-7.7863e+00,5.0000e-01,-4.0281e+00,-7.7215e+00,5.0000e-01,-4.0067e+00,-7.6512e+00,5.0000e-01,-3.9995e+00,-7.5780e+00,5.0000e-01,-4.0067e+00,-7.5048e+00,5.0000e-01,-4.0281e+00,-7.4345e+00,5.0000e-01,-4.0627e+00,-7.3697e+00,5.0000e-01,-4.1094e+00,-7.3128e+00,5.0000e-01,-4.1662e+00,-7.2662e+00,5.0000e-01,-4.2310e+00,-7.2315e+00,5.0000e-01,-4.3014e+00,-7.2102e+00,5.0000e-01,-4.3745e+00,-7.2030e+00,5.0000e-01,-4.4477e+00,-7.2102e+00,5.0000e-01,-4.5180e+00,-7.2315e+00,5.0000e-01,-4.5829e+00,-7.2662e+00,5.0000e-01,-4.6397e+00,-7.3128e+00,5.0000e-01,-4.6863e+00,-7.3697e+00,5.0000e-01,-4.7210e+00,-7.4345e+00,5.0000e-01,-4.7423e+00,-7.5048e+00,5.0000e-01,-4.7495e+00,-7.5780e+00,5.0000e-01,-4.7423e+00,-7.6512e+00,5.0000e-01,-4.7210e+00,-7.7215e+00,5.0000e-01,-4.6863e+00,-7.7863e+00,5.0000e-01,-4.6397e+00,-7.8432e+00,5.0000e-01,-4.5829e+00,-7.8898e+00,5.0000e-01,-4.5180e+00,-7.9245e+00,5.0000e-01,-4.4477e+00,-7.9458e+00,5.0000e-01,-4.3745e+00,-8.3280e+00,5.0000e-01,-4.2282e+00,-8.3136e+00,5.0000e-01,-4.0875e+00,-8.2709e+00,5.0000e-01,-3.9578e+00,-8.2016e+00,5.0000e-01,-3.8442e+00,-8.1083e+00,5.0000e-01,-3.7509e+00,-7.9947e+00,5.0000e-01,-3.6816e+00,-7.8650e+00,5.0000e-01,-3.6389e+00,-7.7243e+00,5.0000e-01,-3.6245e+00,-7.5780e+00,5.0000e-01,-3.6389e+00,-7.4317e+00,5.0000e-01,-3.6816e+00,-7.2910e+00,5.0000e-01,-3.7509e+00,-7.1613e+00,5.0000e-01,-3.8442e+00,-7.0477e+00,5.0000e-01,-3.9578e+00,-6.9544e+00,5.0000e-01,-4.0875e+00,-6.8851e+00,5.0000e-01,-4.2282e+00,-6.8424e+00,5.0000e-01,-4.3745e+00,-6.8280e+00,5.0000e-01,-4.5208e+00,-6.8424e+00,5.0000e-01,-4.6615e+00,-6.8851e+00,5.0000e-01,-4.7912e+00,-6.9544e+00,5.0000e-01,-4.9048e+00,-7.0477e+00,5.0000e-01,-4.9981e+00,-7.1613e+00,5.0000e-01,-5.0674e+00,-7.2910e+00,5.0000e-01,-5.1101e+00,-7.4317e+00,5.0000e-01,-5.1245e+00,-7.5780e+00,5.0000e-01,-5.1101e+00,-7.7243e+00,5.0000e-01,-5.0674e+00,-7.8650e+00,5.0000e-01,-4.9981e+00,-7.9947e+00,5.0000e-01,-4.9048e+00,-8.1083e+00,5.0000e-01,-4.7912e+00,-8.2016e+00,5.0000e-01,-4.6615e+00,-8.2709e+00,5.0000e-01,-4.5208e+00,-8.3136e+00,5.0000e-01});
			return Coordinate_7_344_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #350, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_350_point()
		{
			MFVec3f Coordinate_7_350_point = new MFVec3f(new double[] {-4.3745e+00,-8.3280e+00,5.0000e-01,-4.3745e+00,-8.3280e+00,1.0000e+00,-4.4724e+00,-8.3216e+00,5.0000e-01,-4.4724e+00,-8.3216e+00,1.0000e+00,-4.5686e+00,-8.3024e+00,5.0000e-01,-4.5686e+00,-8.3024e+00,1.0000e+00,-4.6615e+00,-8.2709e+00,5.0000e-01,-4.6615e+00,-8.2709e+00,1.0000e+00,-4.7495e+00,-8.2275e+00,5.0000e-01,-4.7495e+00,-8.2275e+00,1.0000e+00,-4.8311e+00,-8.1730e+00,5.0000e-01,-4.8311e+00,-8.1730e+00,1.0000e+00,-4.9048e+00,-8.1083e+00,5.0000e-01,-4.9048e+00,-8.1083e+00,1.0000e+00,-4.9695e+00,-8.0346e+00,5.0000e-01,-4.9695e+00,-8.0346e+00,1.0000e+00,-5.0240e+00,-7.9530e+00,5.0000e-01,-5.0240e+00,-7.9530e+00,1.0000e+00,-5.0674e+00,-7.8650e+00,5.0000e-01,-5.0674e+00,-7.8650e+00,1.0000e+00,-5.0990e+00,-7.7721e+00,5.0000e-01,-5.0990e+00,-7.7721e+00,1.0000e+00,-5.1181e+00,-7.6759e+00,5.0000e-01,-5.1181e+00,-7.6759e+00,1.0000e+00,-5.1245e+00,-7.5780e+00,5.0000e-01,-5.1245e+00,-7.5780e+00,1.0000e+00,-5.1181e+00,-7.4801e+00,5.0000e-01,-5.1181e+00,-7.4801e+00,1.0000e+00,-5.0990e+00,-7.3839e+00,5.0000e-01,-5.0990e+00,-7.3839e+00,1.0000e+00,-5.0674e+00,-7.2910e+00,5.0000e-01,-5.0674e+00,-7.2910e+00,1.0000e+00,-5.0240e+00,-7.2030e+00,5.0000e-01,-5.0240e+00,-7.2030e+00,1.0000e+00,-4.9695e+00,-7.1214e+00,5.0000e-01,-4.9695e+00,-7.1214e+00,1.0000e+00,-4.9048e+00,-7.0477e+00,5.0000e-01,-4.9048e+00,-7.0477e+00,1.0000e+00,-4.8311e+00,-6.9830e+00,5.0000e-01,-4.8311e+00,-6.9830e+00,1.0000e+00,-4.7495e+00,-6.9285e+00,5.0000e-01,-4.7495e+00,-6.9285e+00,1.0000e+00,-4.6615e+00,-6.8851e+00,5.0000e-01,-4.6615e+00,-6.8851e+00,1.0000e+00,-4.5686e+00,-6.8536e+00,5.0000e-01,-4.5686e+00,-6.8536e+00,1.0000e+00,-4.4724e+00,-6.8344e+00,5.0000e-01,-4.4724e+00,-6.8344e+00,1.0000e+00,-4.3745e+00,-6.8280e+00,5.0000e-01,-4.3745e+00,-6.8280e+00,1.0000e+00,-4.2766e+00,-6.8344e+00,5.0000e-01,-4.2766e+00,-6.8344e+00,1.0000e+00,-4.1804e+00,-6.8536e+00,5.0000e-01,-4.1804e+00,-6.8536e+00,1.0000e+00,-4.0875e+00,-6.8851e+00,5.0000e-01,-4.0875e+00,-6.8851e+00,1.0000e+00,-3.9995e+00,-6.9285e+00,5.0000e-01,-3.9995e+00,-6.9285e+00,1.0000e+00,-3.9179e+00,-6.9830e+00,5.0000e-01,-3.9179e+00,-6.9830e+00,1.0000e+00,-3.8442e+00,-7.0477e+00,5.0000e-01,-3.8442e+00,-7.0477e+00,1.0000e+00,-3.7795e+00,-7.1214e+00,5.0000e-01,-3.7795e+00,-7.1214e+00,1.0000e+00,-3.7250e+00,-7.2030e+00,5.0000e-01,-3.7250e+00,-7.2030e+00,1.0000e+00,-3.6816e+00,-7.2910e+00,5.0000e-01,-3.6816e+00,-7.2910e+00,1.0000e+00,-3.6501e+00,-7.3839e+00,5.0000e-01,-3.6501e+00,-7.3839e+00,1.0000e+00,-3.6309e+00,-7.4801e+00,5.0000e-01,-3.6309e+00,-7.4801e+00,1.0000e+00,-3.6245e+00,-7.5780e+00,5.0000e-01,-3.6245e+00,-7.5780e+00,1.0000e+00,-3.6309e+00,-7.6759e+00,5.0000e-01,-3.6309e+00,-7.6759e+00,1.0000e+00,-3.6501e+00,-7.7721e+00,5.0000e-01,-3.6501e+00,-7.7721e+00,1.0000e+00,-3.6816e+00,-7.8650e+00,5.0000e-01,-3.6816e+00,-7.8650e+00,1.0000e+00,-3.7250e+00,-7.9530e+00,5.0000e-01,-3.7250e+00,-7.9530e+00,1.0000e+00,-3.7795e+00,-8.0346e+00,5.0000e-01,-3.7795e+00,-8.0346e+00,1.0000e+00,-3.8442e+00,-8.1083e+00,5.0000e-01,-3.8442e+00,-8.1083e+00,1.0000e+00,-3.9179e+00,-8.1730e+00,5.0000e-01,-3.9179e+00,-8.1730e+00,1.0000e+00,-3.9995e+00,-8.2275e+00,5.0000e-01,-3.9995e+00,-8.2275e+00,1.0000e+00,-4.0875e+00,-8.2709e+00,5.0000e-01,-4.0875e+00,-8.2709e+00,1.0000e+00,-4.1804e+00,-8.3024e+00,5.0000e-01,-4.1804e+00,-8.3024e+00,1.0000e+00,-4.2766e+00,-8.3216e+00,5.0000e-01,-4.2766e+00,-8.3216e+00,1.0000e+00});
			return Coordinate_7_350_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #351, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_351_vector()
		{
			MFVec3f Normal_7_351_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_351_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #357, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_357_point()
		{
			MFVec3f Coordinate_7_357_point = new MFVec3f(new double[] {-4.3745e+00,7.2030e+00,0.0000e+00,-4.3745e+00,7.2030e+00,5.0000e-01,-4.4235e+00,7.2062e+00,0.0000e+00,-4.4235e+00,7.2062e+00,5.0000e-01,-4.4716e+00,7.2158e+00,0.0000e+00,-4.4716e+00,7.2158e+00,5.0000e-01,-4.5180e+00,7.2315e+00,0.0000e+00,-4.5180e+00,7.2315e+00,5.0000e-01,-4.5620e+00,7.2532e+00,0.0000e+00,-4.5620e+00,7.2532e+00,5.0000e-01,-4.6028e+00,7.2805e+00,0.0000e+00,-4.6028e+00,7.2805e+00,5.0000e-01,-4.6397e+00,7.3128e+00,0.0000e+00,-4.6397e+00,7.3128e+00,5.0000e-01,-4.6720e+00,7.3497e+00,0.0000e+00,-4.6720e+00,7.3497e+00,5.0000e-01,-4.6993e+00,7.3905e+00,0.0000e+00,-4.6993e+00,7.3905e+00,5.0000e-01,-4.7210e+00,7.4345e+00,0.0000e+00,-4.7210e+00,7.4345e+00,5.0000e-01,-4.7367e+00,7.4809e+00,0.0000e+00,-4.7367e+00,7.4809e+00,5.0000e-01,-4.7463e+00,7.5291e+00,0.0000e+00,-4.7463e+00,7.5291e+00,5.0000e-01,-4.7495e+00,7.5780e+00,0.0000e+00,-4.7495e+00,7.5780e+00,5.0000e-01,-4.7463e+00,7.6269e+00,0.0000e+00,-4.7463e+00,7.6269e+00,5.0000e-01,-4.7367e+00,7.6751e+00,0.0000e+00,-4.7367e+00,7.6751e+00,5.0000e-01,-4.7210e+00,7.7215e+00,0.0000e+00,-4.7210e+00,7.7215e+00,5.0000e-01,-4.6993e+00,7.7655e+00,0.0000e+00,-4.6993e+00,7.7655e+00,5.0000e-01,-4.6720e+00,7.8063e+00,0.0000e+00,-4.6720e+00,7.8063e+00,5.0000e-01,-4.6397e+00,7.8432e+00,0.0000e+00,-4.6397e+00,7.8432e+00,5.0000e-01,-4.6028e+00,7.8755e+00,0.0000e+00,-4.6028e+00,7.8755e+00,5.0000e-01,-4.5620e+00,7.9028e+00,0.0000e+00,-4.5620e+00,7.9028e+00,5.0000e-01,-4.5180e+00,7.9245e+00,0.0000e+00,-4.5180e+00,7.9245e+00,5.0000e-01,-4.4716e+00,7.9402e+00,0.0000e+00,-4.4716e+00,7.9402e+00,5.0000e-01,-4.4235e+00,7.9498e+00,0.0000e+00,-4.4235e+00,7.9498e+00,5.0000e-01,-4.3745e+00,7.9530e+00,0.0000e+00,-4.3745e+00,7.9530e+00,5.0000e-01,-4.3256e+00,7.9498e+00,0.0000e+00,-4.3256e+00,7.9498e+00,5.0000e-01,-4.2775e+00,7.9402e+00,0.0000e+00,-4.2775e+00,7.9402e+00,5.0000e-01,-4.2310e+00,7.9245e+00,0.0000e+00,-4.2310e+00,7.9245e+00,5.0000e-01,-4.1870e+00,7.9028e+00,0.0000e+00,-4.1870e+00,7.9028e+00,5.0000e-01,-4.1462e+00,7.8755e+00,0.0000e+00,-4.1462e+00,7.8755e+00,5.0000e-01,-4.1094e+00,7.8432e+00,0.0000e+00,-4.1094e+00,7.8432e+00,5.0000e-01,-4.0770e+00,7.8063e+00,0.0000e+00,-4.0770e+00,7.8063e+00,5.0000e-01,-4.0498e+00,7.7655e+00,0.0000e+00,-4.0498e+00,7.7655e+00,5.0000e-01,-4.0281e+00,7.7215e+00,0.0000e+00,-4.0281e+00,7.7215e+00,5.0000e-01,-4.0123e+00,7.6751e+00,0.0000e+00,-4.0123e+00,7.6751e+00,5.0000e-01,-4.0027e+00,7.6269e+00,0.0000e+00,-4.0027e+00,7.6269e+00,5.0000e-01,-3.9995e+00,7.5780e+00,0.0000e+00,-3.9995e+00,7.5780e+00,5.0000e-01,-4.0027e+00,7.5291e+00,0.0000e+00,-4.0027e+00,7.5291e+00,5.0000e-01,-4.0123e+00,7.4809e+00,0.0000e+00,-4.0123e+00,7.4809e+00,5.0000e-01,-4.0281e+00,7.4345e+00,0.0000e+00,-4.0281e+00,7.4345e+00,5.0000e-01,-4.0498e+00,7.3905e+00,0.0000e+00,-4.0498e+00,7.3905e+00,5.0000e-01,-4.0770e+00,7.3497e+00,0.0000e+00,-4.0770e+00,7.3497e+00,5.0000e-01,-4.1094e+00,7.3128e+00,0.0000e+00,-4.1094e+00,7.3128e+00,5.0000e-01,-4.1462e+00,7.2805e+00,0.0000e+00,-4.1462e+00,7.2805e+00,5.0000e-01,-4.1870e+00,7.2532e+00,0.0000e+00,-4.1870e+00,7.2532e+00,5.0000e-01,-4.2310e+00,7.2315e+00,0.0000e+00,-4.2310e+00,7.2315e+00,5.0000e-01,-4.2775e+00,7.2158e+00,0.0000e+00,-4.2775e+00,7.2158e+00,5.0000e-01,-4.3256e+00,7.2062e+00,0.0000e+00,-4.3256e+00,7.2062e+00,5.0000e-01});
			return Coordinate_7_357_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #358, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_358_vector()
		{
			MFVec3f Normal_7_358_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_358_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #364, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_364_point()
		{
			MFVec3f Coordinate_7_364_point = new MFVec3f(new double[] {-4.3745e+00,7.2030e+00,5.0000e-01,-4.3014e+00,7.2102e+00,5.0000e-01,-4.2310e+00,7.2315e+00,5.0000e-01,-4.1662e+00,7.2662e+00,5.0000e-01,-4.1094e+00,7.3128e+00,5.0000e-01,-4.0627e+00,7.3697e+00,5.0000e-01,-4.0281e+00,7.4345e+00,5.0000e-01,-4.0067e+00,7.5048e+00,5.0000e-01,-3.9995e+00,7.5780e+00,5.0000e-01,-4.0067e+00,7.6512e+00,5.0000e-01,-4.0281e+00,7.7215e+00,5.0000e-01,-4.0627e+00,7.7863e+00,5.0000e-01,-4.1094e+00,7.8432e+00,5.0000e-01,-4.1662e+00,7.8898e+00,5.0000e-01,-4.2310e+00,7.9245e+00,5.0000e-01,-4.3014e+00,7.9458e+00,5.0000e-01,-4.3745e+00,7.9530e+00,5.0000e-01,-4.4477e+00,7.9458e+00,5.0000e-01,-4.5180e+00,7.9245e+00,5.0000e-01,-4.5829e+00,7.8898e+00,5.0000e-01,-4.6397e+00,7.8432e+00,5.0000e-01,-4.6863e+00,7.7863e+00,5.0000e-01,-4.7210e+00,7.7215e+00,5.0000e-01,-4.7423e+00,7.6512e+00,5.0000e-01,-4.7495e+00,7.5780e+00,5.0000e-01,-4.7423e+00,7.5048e+00,5.0000e-01,-4.7210e+00,7.4345e+00,5.0000e-01,-4.6863e+00,7.3697e+00,5.0000e-01,-4.6397e+00,7.3128e+00,5.0000e-01,-4.5829e+00,7.2662e+00,5.0000e-01,-4.5180e+00,7.2315e+00,5.0000e-01,-4.4477e+00,7.2102e+00,5.0000e-01,-4.3745e+00,6.8280e+00,5.0000e-01,-4.2282e+00,6.8424e+00,5.0000e-01,-4.0875e+00,6.8851e+00,5.0000e-01,-3.9578e+00,6.9544e+00,5.0000e-01,-3.8442e+00,7.0477e+00,5.0000e-01,-3.7509e+00,7.1613e+00,5.0000e-01,-3.6816e+00,7.2910e+00,5.0000e-01,-3.6389e+00,7.4317e+00,5.0000e-01,-3.6245e+00,7.5780e+00,5.0000e-01,-3.6389e+00,7.7243e+00,5.0000e-01,-3.6816e+00,7.8650e+00,5.0000e-01,-3.7509e+00,7.9947e+00,5.0000e-01,-3.8442e+00,8.1083e+00,5.0000e-01,-3.9578e+00,8.2016e+00,5.0000e-01,-4.0875e+00,8.2709e+00,5.0000e-01,-4.2282e+00,8.3136e+00,5.0000e-01,-4.3745e+00,8.3280e+00,5.0000e-01,-4.5208e+00,8.3136e+00,5.0000e-01,-4.6615e+00,8.2709e+00,5.0000e-01,-4.7912e+00,8.2016e+00,5.0000e-01,-4.9048e+00,8.1083e+00,5.0000e-01,-4.9981e+00,7.9947e+00,5.0000e-01,-5.0674e+00,7.8650e+00,5.0000e-01,-5.1101e+00,7.7243e+00,5.0000e-01,-5.1245e+00,7.5780e+00,5.0000e-01,-5.1101e+00,7.4317e+00,5.0000e-01,-5.0674e+00,7.2910e+00,5.0000e-01,-4.9981e+00,7.1613e+00,5.0000e-01,-4.9048e+00,7.0477e+00,5.0000e-01,-4.7912e+00,6.9544e+00,5.0000e-01,-4.6615e+00,6.8851e+00,5.0000e-01,-4.5208e+00,6.8424e+00,5.0000e-01});
			return Coordinate_7_364_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #370, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_370_point()
		{
			MFVec3f Coordinate_7_370_point = new MFVec3f(new double[] {-4.3745e+00,6.8280e+00,5.0000e-01,-4.3745e+00,6.8280e+00,1.0000e+00,-4.4724e+00,6.8344e+00,5.0000e-01,-4.4724e+00,6.8344e+00,1.0000e+00,-4.5686e+00,6.8536e+00,5.0000e-01,-4.5686e+00,6.8536e+00,1.0000e+00,-4.6615e+00,6.8851e+00,5.0000e-01,-4.6615e+00,6.8851e+00,1.0000e+00,-4.7495e+00,6.9285e+00,5.0000e-01,-4.7495e+00,6.9285e+00,1.0000e+00,-4.8311e+00,6.9830e+00,5.0000e-01,-4.8311e+00,6.9830e+00,1.0000e+00,-4.9048e+00,7.0477e+00,5.0000e-01,-4.9048e+00,7.0477e+00,1.0000e+00,-4.9695e+00,7.1214e+00,5.0000e-01,-4.9695e+00,7.1214e+00,1.0000e+00,-5.0240e+00,7.2030e+00,5.0000e-01,-5.0240e+00,7.2030e+00,1.0000e+00,-5.0674e+00,7.2910e+00,5.0000e-01,-5.0674e+00,7.2910e+00,1.0000e+00,-5.0990e+00,7.3839e+00,5.0000e-01,-5.0990e+00,7.3839e+00,1.0000e+00,-5.1181e+00,7.4801e+00,5.0000e-01,-5.1181e+00,7.4801e+00,1.0000e+00,-5.1245e+00,7.5780e+00,5.0000e-01,-5.1245e+00,7.5780e+00,1.0000e+00,-5.1181e+00,7.6759e+00,5.0000e-01,-5.1181e+00,7.6759e+00,1.0000e+00,-5.0990e+00,7.7721e+00,5.0000e-01,-5.0990e+00,7.7721e+00,1.0000e+00,-5.0674e+00,7.8650e+00,5.0000e-01,-5.0674e+00,7.8650e+00,1.0000e+00,-5.0240e+00,7.9530e+00,5.0000e-01,-5.0240e+00,7.9530e+00,1.0000e+00,-4.9695e+00,8.0346e+00,5.0000e-01,-4.9695e+00,8.0346e+00,1.0000e+00,-4.9048e+00,8.1083e+00,5.0000e-01,-4.9048e+00,8.1083e+00,1.0000e+00,-4.8311e+00,8.1730e+00,5.0000e-01,-4.8311e+00,8.1730e+00,1.0000e+00,-4.7495e+00,8.2275e+00,5.0000e-01,-4.7495e+00,8.2275e+00,1.0000e+00,-4.6615e+00,8.2709e+00,5.0000e-01,-4.6615e+00,8.2709e+00,1.0000e+00,-4.5686e+00,8.3024e+00,5.0000e-01,-4.5686e+00,8.3024e+00,1.0000e+00,-4.4724e+00,8.3216e+00,5.0000e-01,-4.4724e+00,8.3216e+00,1.0000e+00,-4.3745e+00,8.3280e+00,5.0000e-01,-4.3745e+00,8.3280e+00,1.0000e+00,-4.2766e+00,8.3216e+00,5.0000e-01,-4.2766e+00,8.3216e+00,1.0000e+00,-4.1804e+00,8.3024e+00,5.0000e-01,-4.1804e+00,8.3024e+00,1.0000e+00,-4.0875e+00,8.2709e+00,5.0000e-01,-4.0875e+00,8.2709e+00,1.0000e+00,-3.9995e+00,8.2275e+00,5.0000e-01,-3.9995e+00,8.2275e+00,1.0000e+00,-3.9179e+00,8.1730e+00,5.0000e-01,-3.9179e+00,8.1730e+00,1.0000e+00,-3.8442e+00,8.1083e+00,5.0000e-01,-3.8442e+00,8.1083e+00,1.0000e+00,-3.7795e+00,8.0346e+00,5.0000e-01,-3.7795e+00,8.0346e+00,1.0000e+00,-3.7250e+00,7.9530e+00,5.0000e-01,-3.7250e+00,7.9530e+00,1.0000e+00,-3.6816e+00,7.8650e+00,5.0000e-01,-3.6816e+00,7.8650e+00,1.0000e+00,-3.6501e+00,7.7721e+00,5.0000e-01,-3.6501e+00,7.7721e+00,1.0000e+00,-3.6309e+00,7.6759e+00,5.0000e-01,-3.6309e+00,7.6759e+00,1.0000e+00,-3.6245e+00,7.5780e+00,5.0000e-01,-3.6245e+00,7.5780e+00,1.0000e+00,-3.6309e+00,7.4801e+00,5.0000e-01,-3.6309e+00,7.4801e+00,1.0000e+00,-3.6501e+00,7.3839e+00,5.0000e-01,-3.6501e+00,7.3839e+00,1.0000e+00,-3.6816e+00,7.2910e+00,5.0000e-01,-3.6816e+00,7.2910e+00,1.0000e+00,-3.7250e+00,7.2030e+00,5.0000e-01,-3.7250e+00,7.2030e+00,1.0000e+00,-3.7795e+00,7.1214e+00,5.0000e-01,-3.7795e+00,7.1214e+00,1.0000e+00,-3.8442e+00,7.0477e+00,5.0000e-01,-3.8442e+00,7.0477e+00,1.0000e+00,-3.9179e+00,6.9830e+00,5.0000e-01,-3.9179e+00,6.9830e+00,1.0000e+00,-3.9995e+00,6.9285e+00,5.0000e-01,-3.9995e+00,6.9285e+00,1.0000e+00,-4.0875e+00,6.8851e+00,5.0000e-01,-4.0875e+00,6.8851e+00,1.0000e+00,-4.1804e+00,6.8536e+00,5.0000e-01,-4.1804e+00,6.8536e+00,1.0000e+00,-4.2766e+00,6.8344e+00,5.0000e-01,-4.2766e+00,6.8344e+00,1.0000e+00});
			return Coordinate_7_370_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #371, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_371_vector()
		{
			MFVec3f Normal_7_371_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_371_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #377, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_377_point()
		{
			MFVec3f Coordinate_7_377_point = new MFVec3f(new double[] {-2.1312e-17,-9.1250e+00,0.0000e+00,-2.1312e-17,-9.1250e+00,5.0000e-01,-4.8947e-02,-9.1218e+00,0.0000e+00,-4.8947e-02,-9.1218e+00,5.0000e-01,-9.7057e-02,-9.1122e+00,0.0000e+00,-9.7057e-02,-9.1122e+00,5.0000e-01,-1.4351e-01,-9.0965e+00,0.0000e+00,-1.4351e-01,-9.0965e+00,5.0000e-01,-1.8750e-01,-9.0748e+00,0.0000e+00,-1.8750e-01,-9.0748e+00,5.0000e-01,-2.2829e-01,-9.0475e+00,0.0000e+00,-2.2829e-01,-9.0475e+00,5.0000e-01,-2.6517e-01,-9.0152e+00,0.0000e+00,-2.6517e-01,-9.0152e+00,5.0000e-01,-2.9751e-01,-8.9783e+00,0.0000e+00,-2.9751e-01,-8.9783e+00,5.0000e-01,-3.2476e-01,-8.9375e+00,0.0000e+00,-3.2476e-01,-8.9375e+00,5.0000e-01,-3.4645e-01,-8.8935e+00,0.0000e+00,-3.4645e-01,-8.8935e+00,5.0000e-01,-3.6222e-01,-8.8471e+00,0.0000e+00,-3.6222e-01,-8.8471e+00,5.0000e-01,-3.7179e-01,-8.7989e+00,0.0000e+00,-3.7179e-01,-8.7989e+00,5.0000e-01,-3.7500e-01,-8.7500e+00,0.0000e+00,-3.7500e-01,-8.7500e+00,5.0000e-01,-3.7179e-01,-8.7011e+00,0.0000e+00,-3.7179e-01,-8.7011e+00,5.0000e-01,-3.6222e-01,-8.6529e+00,0.0000e+00,-3.6222e-01,-8.6529e+00,5.0000e-01,-3.4645e-01,-8.6065e+00,0.0000e+00,-3.4645e-01,-8.6065e+00,5.0000e-01,-3.2476e-01,-8.5625e+00,0.0000e+00,-3.2476e-01,-8.5625e+00,5.0000e-01,-2.9751e-01,-8.5217e+00,0.0000e+00,-2.9751e-01,-8.5217e+00,5.0000e-01,-2.6517e-01,-8.4848e+00,0.0000e+00,-2.6517e-01,-8.4848e+00,5.0000e-01,-2.2829e-01,-8.4525e+00,0.0000e+00,-2.2829e-01,-8.4525e+00,5.0000e-01,-1.8750e-01,-8.4252e+00,0.0000e+00,-1.8750e-01,-8.4252e+00,5.0000e-01,-1.4351e-01,-8.4035e+00,0.0000e+00,-1.4351e-01,-8.4035e+00,5.0000e-01,-9.7057e-02,-8.3878e+00,0.0000e+00,-9.7057e-02,-8.3878e+00,5.0000e-01,-4.8947e-02,-8.3782e+00,0.0000e+00,-4.8947e-02,-8.3782e+00,5.0000e-01,-6.7236e-17,-8.3750e+00,0.0000e+00,-6.7236e-17,-8.3750e+00,5.0000e-01,4.8947e-02,-8.3782e+00,0.0000e+00,4.8947e-02,-8.3782e+00,5.0000e-01,9.7057e-02,-8.3878e+00,0.0000e+00,9.7057e-02,-8.3878e+00,5.0000e-01,1.4351e-01,-8.4035e+00,0.0000e+00,1.4351e-01,-8.4035e+00,5.0000e-01,1.8750e-01,-8.4252e+00,0.0000e+00,1.8750e-01,-8.4252e+00,5.0000e-01,2.2829e-01,-8.4525e+00,0.0000e+00,2.2829e-01,-8.4525e+00,5.0000e-01,2.6517e-01,-8.4848e+00,0.0000e+00,2.6517e-01,-8.4848e+00,5.0000e-01,2.9751e-01,-8.5217e+00,0.0000e+00,2.9751e-01,-8.5217e+00,5.0000e-01,3.2476e-01,-8.5625e+00,0.0000e+00,3.2476e-01,-8.5625e+00,5.0000e-01,3.4645e-01,-8.6065e+00,0.0000e+00,3.4645e-01,-8.6065e+00,5.0000e-01,3.6222e-01,-8.6529e+00,0.0000e+00,3.6222e-01,-8.6529e+00,5.0000e-01,3.7179e-01,-8.7011e+00,0.0000e+00,3.7179e-01,-8.7011e+00,5.0000e-01,3.7500e-01,-8.7500e+00,0.0000e+00,3.7500e-01,-8.7500e+00,5.0000e-01,3.7179e-01,-8.7989e+00,0.0000e+00,3.7179e-01,-8.7989e+00,5.0000e-01,3.6222e-01,-8.8471e+00,0.0000e+00,3.6222e-01,-8.8471e+00,5.0000e-01,3.4645e-01,-8.8935e+00,0.0000e+00,3.4645e-01,-8.8935e+00,5.0000e-01,3.2476e-01,-8.9375e+00,0.0000e+00,3.2476e-01,-8.9375e+00,5.0000e-01,2.9751e-01,-8.9783e+00,0.0000e+00,2.9751e-01,-8.9783e+00,5.0000e-01,2.6517e-01,-9.0152e+00,0.0000e+00,2.6517e-01,-9.0152e+00,5.0000e-01,2.2829e-01,-9.0475e+00,0.0000e+00,2.2829e-01,-9.0475e+00,5.0000e-01,1.8750e-01,-9.0748e+00,0.0000e+00,1.8750e-01,-9.0748e+00,5.0000e-01,1.4351e-01,-9.0965e+00,0.0000e+00,1.4351e-01,-9.0965e+00,5.0000e-01,9.7057e-02,-9.1122e+00,0.0000e+00,9.7057e-02,-9.1122e+00,5.0000e-01,4.8947e-02,-9.1218e+00,0.0000e+00,4.8947e-02,-9.1218e+00,5.0000e-01});
			return Coordinate_7_377_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #378, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_378_vector()
		{
			MFVec3f Normal_7_378_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_378_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #384, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_384_point()
		{
			MFVec3f Coordinate_7_384_point = new MFVec3f(new double[] {-2.1312e-17,-9.1250e+00,5.0000e-01,7.3159e-02,-9.1178e+00,5.0000e-01,1.4351e-01,-9.0965e+00,5.0000e-01,2.0834e-01,-9.0618e+00,5.0000e-01,2.6517e-01,-9.0152e+00,5.0000e-01,3.1180e-01,-8.9583e+00,5.0000e-01,3.4645e-01,-8.8935e+00,5.0000e-01,3.6779e-01,-8.8232e+00,5.0000e-01,3.7500e-01,-8.7500e+00,5.0000e-01,3.6779e-01,-8.6768e+00,5.0000e-01,3.4645e-01,-8.6065e+00,5.0000e-01,3.1180e-01,-8.5417e+00,5.0000e-01,2.6517e-01,-8.4848e+00,5.0000e-01,2.0834e-01,-8.4382e+00,5.0000e-01,1.4351e-01,-8.4035e+00,5.0000e-01,7.3159e-02,-8.3822e+00,5.0000e-01,2.4613e-17,-8.3750e+00,5.0000e-01,-7.3159e-02,-8.3822e+00,5.0000e-01,-1.4351e-01,-8.4035e+00,5.0000e-01,-2.0834e-01,-8.4382e+00,5.0000e-01,-2.6517e-01,-8.4848e+00,5.0000e-01,-3.1180e-01,-8.5417e+00,5.0000e-01,-3.4645e-01,-8.6065e+00,5.0000e-01,-3.6779e-01,-8.6768e+00,5.0000e-01,-3.7500e-01,-8.7500e+00,5.0000e-01,-3.6779e-01,-8.8232e+00,5.0000e-01,-3.4645e-01,-8.8935e+00,5.0000e-01,-3.1180e-01,-8.9583e+00,5.0000e-01,-2.6517e-01,-9.0152e+00,5.0000e-01,-2.0834e-01,-9.0618e+00,5.0000e-01,-1.4351e-01,-9.0965e+00,5.0000e-01,-7.3159e-02,-9.1178e+00,5.0000e-01,-2.1312e-17,-9.5000e+00,5.0000e-01,1.4632e-01,-9.4856e+00,5.0000e-01,2.8701e-01,-9.4429e+00,5.0000e-01,4.1668e-01,-9.3736e+00,5.0000e-01,5.3033e-01,-9.2803e+00,5.0000e-01,6.2360e-01,-9.1667e+00,5.0000e-01,6.9291e-01,-9.0370e+00,5.0000e-01,7.3559e-01,-8.8963e+00,5.0000e-01,7.5000e-01,-8.7500e+00,5.0000e-01,7.3559e-01,-8.6037e+00,5.0000e-01,6.9291e-01,-8.4630e+00,5.0000e-01,6.2360e-01,-8.3333e+00,5.0000e-01,5.3033e-01,-8.2197e+00,5.0000e-01,4.1668e-01,-8.1264e+00,5.0000e-01,2.8701e-01,-8.0571e+00,5.0000e-01,1.4632e-01,-8.0144e+00,5.0000e-01,7.0537e-17,-8.0000e+00,5.0000e-01,-1.4632e-01,-8.0144e+00,5.0000e-01,-2.8701e-01,-8.0571e+00,5.0000e-01,-4.1668e-01,-8.1264e+00,5.0000e-01,-5.3033e-01,-8.2197e+00,5.0000e-01,-6.2360e-01,-8.3333e+00,5.0000e-01,-6.9291e-01,-8.4630e+00,5.0000e-01,-7.3559e-01,-8.6037e+00,5.0000e-01,-7.5000e-01,-8.7500e+00,5.0000e-01,-7.3559e-01,-8.8963e+00,5.0000e-01,-6.9291e-01,-9.0370e+00,5.0000e-01,-6.2360e-01,-9.1667e+00,5.0000e-01,-5.3033e-01,-9.2803e+00,5.0000e-01,-4.1668e-01,-9.3736e+00,5.0000e-01,-2.8701e-01,-9.4429e+00,5.0000e-01,-1.4632e-01,-9.4856e+00,5.0000e-01});
			return Coordinate_7_384_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #390, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_390_point()
		{
			MFVec3f Coordinate_7_390_point = new MFVec3f(new double[] {-2.1312e-17,-9.5000e+00,5.0000e-01,-2.1312e-17,-9.5000e+00,1.0000e+00,-9.7895e-02,-9.4936e+00,5.0000e-01,-9.7895e-02,-9.4936e+00,1.0000e+00,-1.9411e-01,-9.4744e+00,5.0000e-01,-1.9411e-01,-9.4744e+00,1.0000e+00,-2.8701e-01,-9.4429e+00,5.0000e-01,-2.8701e-01,-9.4429e+00,1.0000e+00,-3.7500e-01,-9.3995e+00,5.0000e-01,-3.7500e-01,-9.3995e+00,1.0000e+00,-4.5657e-01,-9.3450e+00,5.0000e-01,-4.5657e-01,-9.3450e+00,1.0000e+00,-5.3033e-01,-9.2803e+00,5.0000e-01,-5.3033e-01,-9.2803e+00,1.0000e+00,-5.9502e-01,-9.2066e+00,5.0000e-01,-5.9502e-01,-9.2066e+00,1.0000e+00,-6.4952e-01,-9.1250e+00,5.0000e-01,-6.4952e-01,-9.1250e+00,1.0000e+00,-6.9291e-01,-9.0370e+00,5.0000e-01,-6.9291e-01,-9.0370e+00,1.0000e+00,-7.2444e-01,-8.9441e+00,5.0000e-01,-7.2444e-01,-8.9441e+00,1.0000e+00,-7.4358e-01,-8.8479e+00,5.0000e-01,-7.4358e-01,-8.8479e+00,1.0000e+00,-7.5000e-01,-8.7500e+00,5.0000e-01,-7.5000e-01,-8.7500e+00,1.0000e+00,-7.4358e-01,-8.6521e+00,5.0000e-01,-7.4358e-01,-8.6521e+00,1.0000e+00,-7.2444e-01,-8.5559e+00,5.0000e-01,-7.2444e-01,-8.5559e+00,1.0000e+00,-6.9291e-01,-8.4630e+00,5.0000e-01,-6.9291e-01,-8.4630e+00,1.0000e+00,-6.4952e-01,-8.3750e+00,5.0000e-01,-6.4952e-01,-8.3750e+00,1.0000e+00,-5.9502e-01,-8.2934e+00,5.0000e-01,-5.9502e-01,-8.2934e+00,1.0000e+00,-5.3033e-01,-8.2197e+00,5.0000e-01,-5.3033e-01,-8.2197e+00,1.0000e+00,-4.5657e-01,-8.1550e+00,5.0000e-01,-4.5657e-01,-8.1550e+00,1.0000e+00,-3.7500e-01,-8.1005e+00,5.0000e-01,-3.7500e-01,-8.1005e+00,1.0000e+00,-2.8701e-01,-8.0571e+00,5.0000e-01,-2.8701e-01,-8.0571e+00,1.0000e+00,-1.9411e-01,-8.0256e+00,5.0000e-01,-1.9411e-01,-8.0256e+00,1.0000e+00,-9.7895e-02,-8.0064e+00,5.0000e-01,-9.7895e-02,-8.0064e+00,1.0000e+00,-1.1316e-16,-8.0000e+00,5.0000e-01,-1.1316e-16,-8.0000e+00,1.0000e+00,9.7895e-02,-8.0064e+00,5.0000e-01,9.7895e-02,-8.0064e+00,1.0000e+00,1.9411e-01,-8.0256e+00,5.0000e-01,1.9411e-01,-8.0256e+00,1.0000e+00,2.8701e-01,-8.0571e+00,5.0000e-01,2.8701e-01,-8.0571e+00,1.0000e+00,3.7500e-01,-8.1005e+00,5.0000e-01,3.7500e-01,-8.1005e+00,1.0000e+00,4.5657e-01,-8.1550e+00,5.0000e-01,4.5657e-01,-8.1550e+00,1.0000e+00,5.3033e-01,-8.2197e+00,5.0000e-01,5.3033e-01,-8.2197e+00,1.0000e+00,5.9502e-01,-8.2934e+00,5.0000e-01,5.9502e-01,-8.2934e+00,1.0000e+00,6.4952e-01,-8.3750e+00,5.0000e-01,6.4952e-01,-8.3750e+00,1.0000e+00,6.9291e-01,-8.4630e+00,5.0000e-01,6.9291e-01,-8.4630e+00,1.0000e+00,7.2444e-01,-8.5559e+00,5.0000e-01,7.2444e-01,-8.5559e+00,1.0000e+00,7.4358e-01,-8.6521e+00,5.0000e-01,7.4358e-01,-8.6521e+00,1.0000e+00,7.5000e-01,-8.7500e+00,5.0000e-01,7.5000e-01,-8.7500e+00,1.0000e+00,7.4358e-01,-8.8479e+00,5.0000e-01,7.4358e-01,-8.8479e+00,1.0000e+00,7.2444e-01,-8.9441e+00,5.0000e-01,7.2444e-01,-8.9441e+00,1.0000e+00,6.9291e-01,-9.0370e+00,5.0000e-01,6.9291e-01,-9.0370e+00,1.0000e+00,6.4952e-01,-9.1250e+00,5.0000e-01,6.4952e-01,-9.1250e+00,1.0000e+00,5.9502e-01,-9.2066e+00,5.0000e-01,5.9502e-01,-9.2066e+00,1.0000e+00,5.3033e-01,-9.2803e+00,5.0000e-01,5.3033e-01,-9.2803e+00,1.0000e+00,4.5657e-01,-9.3450e+00,5.0000e-01,4.5657e-01,-9.3450e+00,1.0000e+00,3.7500e-01,-9.3995e+00,5.0000e-01,3.7500e-01,-9.3995e+00,1.0000e+00,2.8701e-01,-9.4429e+00,5.0000e-01,2.8701e-01,-9.4429e+00,1.0000e+00,1.9411e-01,-9.4744e+00,5.0000e-01,1.9411e-01,-9.4744e+00,1.0000e+00,9.7895e-02,-9.4936e+00,5.0000e-01,9.7895e-02,-9.4936e+00,1.0000e+00});
			return Coordinate_7_390_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #391, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_391_vector()
		{
			MFVec3f Normal_7_391_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_391_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #397, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_397_point()
		{
			MFVec3f Coordinate_7_397_point = new MFVec3f(new double[] {2.1312e-17,8.3750e+00,0.0000e+00,2.1312e-17,8.3750e+00,5.0000e-01,-4.8947e-02,8.3782e+00,0.0000e+00,-4.8947e-02,8.3782e+00,5.0000e-01,-9.7057e-02,8.3878e+00,0.0000e+00,-9.7057e-02,8.3878e+00,5.0000e-01,-1.4351e-01,8.4035e+00,0.0000e+00,-1.4351e-01,8.4035e+00,5.0000e-01,-1.8750e-01,8.4252e+00,0.0000e+00,-1.8750e-01,8.4252e+00,5.0000e-01,-2.2829e-01,8.4525e+00,0.0000e+00,-2.2829e-01,8.4525e+00,5.0000e-01,-2.6517e-01,8.4848e+00,0.0000e+00,-2.6517e-01,8.4848e+00,5.0000e-01,-2.9751e-01,8.5217e+00,0.0000e+00,-2.9751e-01,8.5217e+00,5.0000e-01,-3.2476e-01,8.5625e+00,0.0000e+00,-3.2476e-01,8.5625e+00,5.0000e-01,-3.4645e-01,8.6065e+00,0.0000e+00,-3.4645e-01,8.6065e+00,5.0000e-01,-3.6222e-01,8.6529e+00,0.0000e+00,-3.6222e-01,8.6529e+00,5.0000e-01,-3.7179e-01,8.7011e+00,0.0000e+00,-3.7179e-01,8.7011e+00,5.0000e-01,-3.7500e-01,8.7500e+00,0.0000e+00,-3.7500e-01,8.7500e+00,5.0000e-01,-3.7179e-01,8.7989e+00,0.0000e+00,-3.7179e-01,8.7989e+00,5.0000e-01,-3.6222e-01,8.8471e+00,0.0000e+00,-3.6222e-01,8.8471e+00,5.0000e-01,-3.4645e-01,8.8935e+00,0.0000e+00,-3.4645e-01,8.8935e+00,5.0000e-01,-3.2476e-01,8.9375e+00,0.0000e+00,-3.2476e-01,8.9375e+00,5.0000e-01,-2.9751e-01,8.9783e+00,0.0000e+00,-2.9751e-01,8.9783e+00,5.0000e-01,-2.6517e-01,9.0152e+00,0.0000e+00,-2.6517e-01,9.0152e+00,5.0000e-01,-2.2829e-01,9.0475e+00,0.0000e+00,-2.2829e-01,9.0475e+00,5.0000e-01,-1.8750e-01,9.0748e+00,0.0000e+00,-1.8750e-01,9.0748e+00,5.0000e-01,-1.4351e-01,9.0965e+00,0.0000e+00,-1.4351e-01,9.0965e+00,5.0000e-01,-9.7057e-02,9.1122e+00,0.0000e+00,-9.7057e-02,9.1122e+00,5.0000e-01,-4.8947e-02,9.1218e+00,0.0000e+00,-4.8947e-02,9.1218e+00,5.0000e-01,-2.4613e-17,9.1250e+00,0.0000e+00,-2.4613e-17,9.1250e+00,5.0000e-01,4.8947e-02,9.1218e+00,0.0000e+00,4.8947e-02,9.1218e+00,5.0000e-01,9.7057e-02,9.1122e+00,0.0000e+00,9.7057e-02,9.1122e+00,5.0000e-01,1.4351e-01,9.0965e+00,0.0000e+00,1.4351e-01,9.0965e+00,5.0000e-01,1.8750e-01,9.0748e+00,0.0000e+00,1.8750e-01,9.0748e+00,5.0000e-01,2.2829e-01,9.0475e+00,0.0000e+00,2.2829e-01,9.0475e+00,5.0000e-01,2.6517e-01,9.0152e+00,0.0000e+00,2.6517e-01,9.0152e+00,5.0000e-01,2.9751e-01,8.9783e+00,0.0000e+00,2.9751e-01,8.9783e+00,5.0000e-01,3.2476e-01,8.9375e+00,0.0000e+00,3.2476e-01,8.9375e+00,5.0000e-01,3.4645e-01,8.8935e+00,0.0000e+00,3.4645e-01,8.8935e+00,5.0000e-01,3.6222e-01,8.8471e+00,0.0000e+00,3.6222e-01,8.8471e+00,5.0000e-01,3.7179e-01,8.7989e+00,0.0000e+00,3.7179e-01,8.7989e+00,5.0000e-01,3.7500e-01,8.7500e+00,0.0000e+00,3.7500e-01,8.7500e+00,5.0000e-01,3.7179e-01,8.7011e+00,0.0000e+00,3.7179e-01,8.7011e+00,5.0000e-01,3.6222e-01,8.6529e+00,0.0000e+00,3.6222e-01,8.6529e+00,5.0000e-01,3.4645e-01,8.6065e+00,0.0000e+00,3.4645e-01,8.6065e+00,5.0000e-01,3.2476e-01,8.5625e+00,0.0000e+00,3.2476e-01,8.5625e+00,5.0000e-01,2.9751e-01,8.5217e+00,0.0000e+00,2.9751e-01,8.5217e+00,5.0000e-01,2.6517e-01,8.4848e+00,0.0000e+00,2.6517e-01,8.4848e+00,5.0000e-01,2.2829e-01,8.4525e+00,0.0000e+00,2.2829e-01,8.4525e+00,5.0000e-01,1.8750e-01,8.4252e+00,0.0000e+00,1.8750e-01,8.4252e+00,5.0000e-01,1.4351e-01,8.4035e+00,0.0000e+00,1.4351e-01,8.4035e+00,5.0000e-01,9.7057e-02,8.3878e+00,0.0000e+00,9.7057e-02,8.3878e+00,5.0000e-01,4.8947e-02,8.3782e+00,0.0000e+00,4.8947e-02,8.3782e+00,5.0000e-01});
			return Coordinate_7_397_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #398, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_398_vector()
		{
			MFVec3f Normal_7_398_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_398_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #404, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_404_point()
		{
			MFVec3f Coordinate_7_404_point = new MFVec3f(new double[] {2.1312e-17,8.3750e+00,5.0000e-01,7.3159e-02,8.3822e+00,5.0000e-01,1.4351e-01,8.4035e+00,5.0000e-01,2.0834e-01,8.4382e+00,5.0000e-01,2.6517e-01,8.4848e+00,5.0000e-01,3.1180e-01,8.5417e+00,5.0000e-01,3.4645e-01,8.6065e+00,5.0000e-01,3.6779e-01,8.6768e+00,5.0000e-01,3.7500e-01,8.7500e+00,5.0000e-01,3.6779e-01,8.8232e+00,5.0000e-01,3.4645e-01,8.8935e+00,5.0000e-01,3.1180e-01,8.9583e+00,5.0000e-01,2.6517e-01,9.0152e+00,5.0000e-01,2.0834e-01,9.0618e+00,5.0000e-01,1.4351e-01,9.0965e+00,5.0000e-01,7.3159e-02,9.1178e+00,5.0000e-01,6.7236e-17,9.1250e+00,5.0000e-01,-7.3159e-02,9.1178e+00,5.0000e-01,-1.4351e-01,9.0965e+00,5.0000e-01,-2.0834e-01,9.0618e+00,5.0000e-01,-2.6517e-01,9.0152e+00,5.0000e-01,-3.1180e-01,8.9583e+00,5.0000e-01,-3.4645e-01,8.8935e+00,5.0000e-01,-3.6779e-01,8.8232e+00,5.0000e-01,-3.7500e-01,8.7500e+00,5.0000e-01,-3.6779e-01,8.6768e+00,5.0000e-01,-3.4645e-01,8.6065e+00,5.0000e-01,-3.1180e-01,8.5417e+00,5.0000e-01,-2.6517e-01,8.4848e+00,5.0000e-01,-2.0834e-01,8.4382e+00,5.0000e-01,-1.4351e-01,8.4035e+00,5.0000e-01,-7.3159e-02,8.3822e+00,5.0000e-01,2.1312e-17,8.0000e+00,5.0000e-01,1.4632e-01,8.0144e+00,5.0000e-01,2.8701e-01,8.0571e+00,5.0000e-01,4.1668e-01,8.1264e+00,5.0000e-01,5.3033e-01,8.2197e+00,5.0000e-01,6.2360e-01,8.3333e+00,5.0000e-01,6.9291e-01,8.4630e+00,5.0000e-01,7.3559e-01,8.6037e+00,5.0000e-01,7.5000e-01,8.7500e+00,5.0000e-01,7.3559e-01,8.8963e+00,5.0000e-01,6.9291e-01,9.0370e+00,5.0000e-01,6.2360e-01,9.1667e+00,5.0000e-01,5.3033e-01,9.2803e+00,5.0000e-01,4.1668e-01,9.3736e+00,5.0000e-01,2.8701e-01,9.4429e+00,5.0000e-01,1.4632e-01,9.4856e+00,5.0000e-01,1.1316e-16,9.5000e+00,5.0000e-01,-1.4632e-01,9.4856e+00,5.0000e-01,-2.8701e-01,9.4429e+00,5.0000e-01,-4.1668e-01,9.3736e+00,5.0000e-01,-5.3033e-01,9.2803e+00,5.0000e-01,-6.2360e-01,9.1667e+00,5.0000e-01,-6.9291e-01,9.0370e+00,5.0000e-01,-7.3559e-01,8.8963e+00,5.0000e-01,-7.5000e-01,8.7500e+00,5.0000e-01,-7.3559e-01,8.6037e+00,5.0000e-01,-6.9291e-01,8.4630e+00,5.0000e-01,-6.2360e-01,8.3333e+00,5.0000e-01,-5.3033e-01,8.2197e+00,5.0000e-01,-4.1668e-01,8.1264e+00,5.0000e-01,-2.8701e-01,8.0571e+00,5.0000e-01,-1.4632e-01,8.0144e+00,5.0000e-01});
			return Coordinate_7_404_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #410, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_410_point()
		{
			MFVec3f Coordinate_7_410_point = new MFVec3f(new double[] {2.1312e-17,8.0000e+00,5.0000e-01,2.1312e-17,8.0000e+00,1.0000e+00,-9.7895e-02,8.0064e+00,5.0000e-01,-9.7895e-02,8.0064e+00,1.0000e+00,-1.9411e-01,8.0256e+00,5.0000e-01,-1.9411e-01,8.0256e+00,1.0000e+00,-2.8701e-01,8.0571e+00,5.0000e-01,-2.8701e-01,8.0571e+00,1.0000e+00,-3.7500e-01,8.1005e+00,5.0000e-01,-3.7500e-01,8.1005e+00,1.0000e+00,-4.5657e-01,8.1550e+00,5.0000e-01,-4.5657e-01,8.1550e+00,1.0000e+00,-5.3033e-01,8.2197e+00,5.0000e-01,-5.3033e-01,8.2197e+00,1.0000e+00,-5.9502e-01,8.2934e+00,5.0000e-01,-5.9502e-01,8.2934e+00,1.0000e+00,-6.4952e-01,8.3750e+00,5.0000e-01,-6.4952e-01,8.3750e+00,1.0000e+00,-6.9291e-01,8.4630e+00,5.0000e-01,-6.9291e-01,8.4630e+00,1.0000e+00,-7.2444e-01,8.5559e+00,5.0000e-01,-7.2444e-01,8.5559e+00,1.0000e+00,-7.4358e-01,8.6521e+00,5.0000e-01,-7.4358e-01,8.6521e+00,1.0000e+00,-7.5000e-01,8.7500e+00,5.0000e-01,-7.5000e-01,8.7500e+00,1.0000e+00,-7.4358e-01,8.8479e+00,5.0000e-01,-7.4358e-01,8.8479e+00,1.0000e+00,-7.2444e-01,8.9441e+00,5.0000e-01,-7.2444e-01,8.9441e+00,1.0000e+00,-6.9291e-01,9.0370e+00,5.0000e-01,-6.9291e-01,9.0370e+00,1.0000e+00,-6.4952e-01,9.1250e+00,5.0000e-01,-6.4952e-01,9.1250e+00,1.0000e+00,-5.9502e-01,9.2066e+00,5.0000e-01,-5.9502e-01,9.2066e+00,1.0000e+00,-5.3033e-01,9.2803e+00,5.0000e-01,-5.3033e-01,9.2803e+00,1.0000e+00,-4.5657e-01,9.3450e+00,5.0000e-01,-4.5657e-01,9.3450e+00,1.0000e+00,-3.7500e-01,9.3995e+00,5.0000e-01,-3.7500e-01,9.3995e+00,1.0000e+00,-2.8701e-01,9.4429e+00,5.0000e-01,-2.8701e-01,9.4429e+00,1.0000e+00,-1.9411e-01,9.4744e+00,5.0000e-01,-1.9411e-01,9.4744e+00,1.0000e+00,-9.7895e-02,9.4936e+00,5.0000e-01,-9.7895e-02,9.4936e+00,1.0000e+00,-7.0537e-17,9.5000e+00,5.0000e-01,-7.0537e-17,9.5000e+00,1.0000e+00,9.7895e-02,9.4936e+00,5.0000e-01,9.7895e-02,9.4936e+00,1.0000e+00,1.9411e-01,9.4744e+00,5.0000e-01,1.9411e-01,9.4744e+00,1.0000e+00,2.8701e-01,9.4429e+00,5.0000e-01,2.8701e-01,9.4429e+00,1.0000e+00,3.7500e-01,9.3995e+00,5.0000e-01,3.7500e-01,9.3995e+00,1.0000e+00,4.5657e-01,9.3450e+00,5.0000e-01,4.5657e-01,9.3450e+00,1.0000e+00,5.3033e-01,9.2803e+00,5.0000e-01,5.3033e-01,9.2803e+00,1.0000e+00,5.9502e-01,9.2066e+00,5.0000e-01,5.9502e-01,9.2066e+00,1.0000e+00,6.4952e-01,9.1250e+00,5.0000e-01,6.4952e-01,9.1250e+00,1.0000e+00,6.9291e-01,9.0370e+00,5.0000e-01,6.9291e-01,9.0370e+00,1.0000e+00,7.2444e-01,8.9441e+00,5.0000e-01,7.2444e-01,8.9441e+00,1.0000e+00,7.4358e-01,8.8479e+00,5.0000e-01,7.4358e-01,8.8479e+00,1.0000e+00,7.5000e-01,8.7500e+00,5.0000e-01,7.5000e-01,8.7500e+00,1.0000e+00,7.4358e-01,8.6521e+00,5.0000e-01,7.4358e-01,8.6521e+00,1.0000e+00,7.2444e-01,8.5559e+00,5.0000e-01,7.2444e-01,8.5559e+00,1.0000e+00,6.9291e-01,8.4630e+00,5.0000e-01,6.9291e-01,8.4630e+00,1.0000e+00,6.4952e-01,8.3750e+00,5.0000e-01,6.4952e-01,8.3750e+00,1.0000e+00,5.9502e-01,8.2934e+00,5.0000e-01,5.9502e-01,8.2934e+00,1.0000e+00,5.3033e-01,8.2197e+00,5.0000e-01,5.3033e-01,8.2197e+00,1.0000e+00,4.5657e-01,8.1550e+00,5.0000e-01,4.5657e-01,8.1550e+00,1.0000e+00,3.7500e-01,8.1005e+00,5.0000e-01,3.7500e-01,8.1005e+00,1.0000e+00,2.8701e-01,8.0571e+00,5.0000e-01,2.8701e-01,8.0571e+00,1.0000e+00,1.9411e-01,8.0256e+00,5.0000e-01,1.9411e-01,8.0256e+00,1.0000e+00,9.7895e-02,8.0064e+00,5.0000e-01,9.7895e-02,8.0064e+00,1.0000e+00});
			return Coordinate_7_410_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #411, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_411_vector()
		{
			MFVec3f Normal_7_411_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_411_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #417, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_417_point()
		{
			MFVec3f Coordinate_7_417_point = new MFVec3f(new double[] {4.3745e+00,7.2030e+00,0.0000e+00,4.3745e+00,7.2030e+00,5.0000e-01,4.3256e+00,7.2062e+00,0.0000e+00,4.3256e+00,7.2062e+00,5.0000e-01,4.2775e+00,7.2158e+00,0.0000e+00,4.2775e+00,7.2158e+00,5.0000e-01,4.2310e+00,7.2315e+00,0.0000e+00,4.2310e+00,7.2315e+00,5.0000e-01,4.1870e+00,7.2532e+00,0.0000e+00,4.1870e+00,7.2532e+00,5.0000e-01,4.1462e+00,7.2805e+00,0.0000e+00,4.1462e+00,7.2805e+00,5.0000e-01,4.1094e+00,7.3128e+00,0.0000e+00,4.1094e+00,7.3128e+00,5.0000e-01,4.0770e+00,7.3497e+00,0.0000e+00,4.0770e+00,7.3497e+00,5.0000e-01,4.0498e+00,7.3905e+00,0.0000e+00,4.0498e+00,7.3905e+00,5.0000e-01,4.0281e+00,7.4345e+00,0.0000e+00,4.0281e+00,7.4345e+00,5.0000e-01,4.0123e+00,7.4809e+00,0.0000e+00,4.0123e+00,7.4809e+00,5.0000e-01,4.0027e+00,7.5291e+00,0.0000e+00,4.0027e+00,7.5291e+00,5.0000e-01,3.9995e+00,7.5780e+00,0.0000e+00,3.9995e+00,7.5780e+00,5.0000e-01,4.0027e+00,7.6269e+00,0.0000e+00,4.0027e+00,7.6269e+00,5.0000e-01,4.0123e+00,7.6751e+00,0.0000e+00,4.0123e+00,7.6751e+00,5.0000e-01,4.0281e+00,7.7215e+00,0.0000e+00,4.0281e+00,7.7215e+00,5.0000e-01,4.0498e+00,7.7655e+00,0.0000e+00,4.0498e+00,7.7655e+00,5.0000e-01,4.0770e+00,7.8063e+00,0.0000e+00,4.0770e+00,7.8063e+00,5.0000e-01,4.1094e+00,7.8432e+00,0.0000e+00,4.1094e+00,7.8432e+00,5.0000e-01,4.1462e+00,7.8755e+00,0.0000e+00,4.1462e+00,7.8755e+00,5.0000e-01,4.1870e+00,7.9028e+00,0.0000e+00,4.1870e+00,7.9028e+00,5.0000e-01,4.2310e+00,7.9245e+00,0.0000e+00,4.2310e+00,7.9245e+00,5.0000e-01,4.2775e+00,7.9402e+00,0.0000e+00,4.2775e+00,7.9402e+00,5.0000e-01,4.3256e+00,7.9498e+00,0.0000e+00,4.3256e+00,7.9498e+00,5.0000e-01,4.3745e+00,7.9530e+00,0.0000e+00,4.3745e+00,7.9530e+00,5.0000e-01,4.4235e+00,7.9498e+00,0.0000e+00,4.4235e+00,7.9498e+00,5.0000e-01,4.4716e+00,7.9402e+00,0.0000e+00,4.4716e+00,7.9402e+00,5.0000e-01,4.5180e+00,7.9245e+00,0.0000e+00,4.5180e+00,7.9245e+00,5.0000e-01,4.5620e+00,7.9028e+00,0.0000e+00,4.5620e+00,7.9028e+00,5.0000e-01,4.6028e+00,7.8755e+00,0.0000e+00,4.6028e+00,7.8755e+00,5.0000e-01,4.6397e+00,7.8432e+00,0.0000e+00,4.6397e+00,7.8432e+00,5.0000e-01,4.6720e+00,7.8063e+00,0.0000e+00,4.6720e+00,7.8063e+00,5.0000e-01,4.6993e+00,7.7655e+00,0.0000e+00,4.6993e+00,7.7655e+00,5.0000e-01,4.7210e+00,7.7215e+00,0.0000e+00,4.7210e+00,7.7215e+00,5.0000e-01,4.7367e+00,7.6751e+00,0.0000e+00,4.7367e+00,7.6751e+00,5.0000e-01,4.7463e+00,7.6269e+00,0.0000e+00,4.7463e+00,7.6269e+00,5.0000e-01,4.7495e+00,7.5780e+00,0.0000e+00,4.7495e+00,7.5780e+00,5.0000e-01,4.7463e+00,7.5291e+00,0.0000e+00,4.7463e+00,7.5291e+00,5.0000e-01,4.7367e+00,7.4809e+00,0.0000e+00,4.7367e+00,7.4809e+00,5.0000e-01,4.7210e+00,7.4345e+00,0.0000e+00,4.7210e+00,7.4345e+00,5.0000e-01,4.6993e+00,7.3905e+00,0.0000e+00,4.6993e+00,7.3905e+00,5.0000e-01,4.6720e+00,7.3497e+00,0.0000e+00,4.6720e+00,7.3497e+00,5.0000e-01,4.6397e+00,7.3128e+00,0.0000e+00,4.6397e+00,7.3128e+00,5.0000e-01,4.6028e+00,7.2805e+00,0.0000e+00,4.6028e+00,7.2805e+00,5.0000e-01,4.5620e+00,7.2532e+00,0.0000e+00,4.5620e+00,7.2532e+00,5.0000e-01,4.5180e+00,7.2315e+00,0.0000e+00,4.5180e+00,7.2315e+00,5.0000e-01,4.4716e+00,7.2158e+00,0.0000e+00,4.4716e+00,7.2158e+00,5.0000e-01,4.4235e+00,7.2062e+00,0.0000e+00,4.4235e+00,7.2062e+00,5.0000e-01});
			return Coordinate_7_417_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #418, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_418_vector()
		{
			MFVec3f Normal_7_418_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_418_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #424, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_424_point()
		{
			MFVec3f Coordinate_7_424_point = new MFVec3f(new double[] {4.3745e+00,7.2030e+00,5.0000e-01,4.4477e+00,7.2102e+00,5.0000e-01,4.5180e+00,7.2315e+00,5.0000e-01,4.5829e+00,7.2662e+00,5.0000e-01,4.6397e+00,7.3128e+00,5.0000e-01,4.6863e+00,7.3697e+00,5.0000e-01,4.7210e+00,7.4345e+00,5.0000e-01,4.7423e+00,7.5048e+00,5.0000e-01,4.7495e+00,7.5780e+00,5.0000e-01,4.7423e+00,7.6512e+00,5.0000e-01,4.7210e+00,7.7215e+00,5.0000e-01,4.6863e+00,7.7863e+00,5.0000e-01,4.6397e+00,7.8432e+00,5.0000e-01,4.5829e+00,7.8898e+00,5.0000e-01,4.5180e+00,7.9245e+00,5.0000e-01,4.4477e+00,7.9458e+00,5.0000e-01,4.3745e+00,7.9530e+00,5.0000e-01,4.3014e+00,7.9458e+00,5.0000e-01,4.2310e+00,7.9245e+00,5.0000e-01,4.1662e+00,7.8898e+00,5.0000e-01,4.1094e+00,7.8432e+00,5.0000e-01,4.0627e+00,7.7863e+00,5.0000e-01,4.0281e+00,7.7215e+00,5.0000e-01,4.0067e+00,7.6512e+00,5.0000e-01,3.9995e+00,7.5780e+00,5.0000e-01,4.0067e+00,7.5048e+00,5.0000e-01,4.0281e+00,7.4345e+00,5.0000e-01,4.0627e+00,7.3697e+00,5.0000e-01,4.1094e+00,7.3128e+00,5.0000e-01,4.1662e+00,7.2662e+00,5.0000e-01,4.2310e+00,7.2315e+00,5.0000e-01,4.3014e+00,7.2102e+00,5.0000e-01,4.3745e+00,6.8280e+00,5.0000e-01,4.5208e+00,6.8424e+00,5.0000e-01,4.6615e+00,6.8851e+00,5.0000e-01,4.7912e+00,6.9544e+00,5.0000e-01,4.9048e+00,7.0477e+00,5.0000e-01,4.9981e+00,7.1613e+00,5.0000e-01,5.0674e+00,7.2910e+00,5.0000e-01,5.1101e+00,7.4317e+00,5.0000e-01,5.1245e+00,7.5780e+00,5.0000e-01,5.1101e+00,7.7243e+00,5.0000e-01,5.0674e+00,7.8650e+00,5.0000e-01,4.9981e+00,7.9947e+00,5.0000e-01,4.9048e+00,8.1083e+00,5.0000e-01,4.7912e+00,8.2016e+00,5.0000e-01,4.6615e+00,8.2709e+00,5.0000e-01,4.5208e+00,8.3136e+00,5.0000e-01,4.3745e+00,8.3280e+00,5.0000e-01,4.2282e+00,8.3136e+00,5.0000e-01,4.0875e+00,8.2709e+00,5.0000e-01,3.9578e+00,8.2016e+00,5.0000e-01,3.8442e+00,8.1083e+00,5.0000e-01,3.7509e+00,7.9947e+00,5.0000e-01,3.6816e+00,7.8650e+00,5.0000e-01,3.6389e+00,7.7243e+00,5.0000e-01,3.6245e+00,7.5780e+00,5.0000e-01,3.6389e+00,7.4317e+00,5.0000e-01,3.6816e+00,7.2910e+00,5.0000e-01,3.7509e+00,7.1613e+00,5.0000e-01,3.8442e+00,7.0477e+00,5.0000e-01,3.9578e+00,6.9544e+00,5.0000e-01,4.0875e+00,6.8851e+00,5.0000e-01,4.2282e+00,6.8424e+00,5.0000e-01});
			return Coordinate_7_424_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #430, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_430_point()
		{
			MFVec3f Coordinate_7_430_point = new MFVec3f(new double[] {4.3745e+00,6.8280e+00,5.0000e-01,4.3745e+00,6.8280e+00,1.0000e+00,4.2766e+00,6.8344e+00,5.0000e-01,4.2766e+00,6.8344e+00,1.0000e+00,4.1804e+00,6.8536e+00,5.0000e-01,4.1804e+00,6.8536e+00,1.0000e+00,4.0875e+00,6.8851e+00,5.0000e-01,4.0875e+00,6.8851e+00,1.0000e+00,3.9995e+00,6.9285e+00,5.0000e-01,3.9995e+00,6.9285e+00,1.0000e+00,3.9179e+00,6.9830e+00,5.0000e-01,3.9179e+00,6.9830e+00,1.0000e+00,3.8442e+00,7.0477e+00,5.0000e-01,3.8442e+00,7.0477e+00,1.0000e+00,3.7795e+00,7.1214e+00,5.0000e-01,3.7795e+00,7.1214e+00,1.0000e+00,3.7250e+00,7.2030e+00,5.0000e-01,3.7250e+00,7.2030e+00,1.0000e+00,3.6816e+00,7.2910e+00,5.0000e-01,3.6816e+00,7.2910e+00,1.0000e+00,3.6501e+00,7.3839e+00,5.0000e-01,3.6501e+00,7.3839e+00,1.0000e+00,3.6309e+00,7.4801e+00,5.0000e-01,3.6309e+00,7.4801e+00,1.0000e+00,3.6245e+00,7.5780e+00,5.0000e-01,3.6245e+00,7.5780e+00,1.0000e+00,3.6309e+00,7.6759e+00,5.0000e-01,3.6309e+00,7.6759e+00,1.0000e+00,3.6501e+00,7.7721e+00,5.0000e-01,3.6501e+00,7.7721e+00,1.0000e+00,3.6816e+00,7.8650e+00,5.0000e-01,3.6816e+00,7.8650e+00,1.0000e+00,3.7250e+00,7.9530e+00,5.0000e-01,3.7250e+00,7.9530e+00,1.0000e+00,3.7795e+00,8.0346e+00,5.0000e-01,3.7795e+00,8.0346e+00,1.0000e+00,3.8442e+00,8.1083e+00,5.0000e-01,3.8442e+00,8.1083e+00,1.0000e+00,3.9179e+00,8.1730e+00,5.0000e-01,3.9179e+00,8.1730e+00,1.0000e+00,3.9995e+00,8.2275e+00,5.0000e-01,3.9995e+00,8.2275e+00,1.0000e+00,4.0875e+00,8.2709e+00,5.0000e-01,4.0875e+00,8.2709e+00,1.0000e+00,4.1804e+00,8.3024e+00,5.0000e-01,4.1804e+00,8.3024e+00,1.0000e+00,4.2766e+00,8.3216e+00,5.0000e-01,4.2766e+00,8.3216e+00,1.0000e+00,4.3745e+00,8.3280e+00,5.0000e-01,4.3745e+00,8.3280e+00,1.0000e+00,4.4724e+00,8.3216e+00,5.0000e-01,4.4724e+00,8.3216e+00,1.0000e+00,4.5686e+00,8.3024e+00,5.0000e-01,4.5686e+00,8.3024e+00,1.0000e+00,4.6615e+00,8.2709e+00,5.0000e-01,4.6615e+00,8.2709e+00,1.0000e+00,4.7495e+00,8.2275e+00,5.0000e-01,4.7495e+00,8.2275e+00,1.0000e+00,4.8311e+00,8.1730e+00,5.0000e-01,4.8311e+00,8.1730e+00,1.0000e+00,4.9048e+00,8.1083e+00,5.0000e-01,4.9048e+00,8.1083e+00,1.0000e+00,4.9695e+00,8.0346e+00,5.0000e-01,4.9695e+00,8.0346e+00,1.0000e+00,5.0240e+00,7.9530e+00,5.0000e-01,5.0240e+00,7.9530e+00,1.0000e+00,5.0674e+00,7.8650e+00,5.0000e-01,5.0674e+00,7.8650e+00,1.0000e+00,5.0990e+00,7.7721e+00,5.0000e-01,5.0990e+00,7.7721e+00,1.0000e+00,5.1181e+00,7.6759e+00,5.0000e-01,5.1181e+00,7.6759e+00,1.0000e+00,5.1245e+00,7.5780e+00,5.0000e-01,5.1245e+00,7.5780e+00,1.0000e+00,5.1181e+00,7.4801e+00,5.0000e-01,5.1181e+00,7.4801e+00,1.0000e+00,5.0990e+00,7.3839e+00,5.0000e-01,5.0990e+00,7.3839e+00,1.0000e+00,5.0674e+00,7.2910e+00,5.0000e-01,5.0674e+00,7.2910e+00,1.0000e+00,5.0240e+00,7.2030e+00,5.0000e-01,5.0240e+00,7.2030e+00,1.0000e+00,4.9695e+00,7.1214e+00,5.0000e-01,4.9695e+00,7.1214e+00,1.0000e+00,4.9048e+00,7.0477e+00,5.0000e-01,4.9048e+00,7.0477e+00,1.0000e+00,4.8311e+00,6.9830e+00,5.0000e-01,4.8311e+00,6.9830e+00,1.0000e+00,4.7495e+00,6.9285e+00,5.0000e-01,4.7495e+00,6.9285e+00,1.0000e+00,4.6615e+00,6.8851e+00,5.0000e-01,4.6615e+00,6.8851e+00,1.0000e+00,4.5686e+00,6.8536e+00,5.0000e-01,4.5686e+00,6.8536e+00,1.0000e+00,4.4724e+00,6.8344e+00,5.0000e-01,4.4724e+00,6.8344e+00,1.0000e+00});
			return Coordinate_7_430_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #431, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_431_vector()
		{
			MFVec3f Normal_7_431_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_431_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #437, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_437_point()
		{
			MFVec3f Coordinate_7_437_point = new MFVec3f(new double[] {4.3745e+00,-7.9530e+00,0.0000e+00,4.3745e+00,-7.9530e+00,5.0000e-01,4.3256e+00,-7.9498e+00,0.0000e+00,4.3256e+00,-7.9498e+00,5.0000e-01,4.2775e+00,-7.9402e+00,0.0000e+00,4.2775e+00,-7.9402e+00,5.0000e-01,4.2310e+00,-7.9245e+00,0.0000e+00,4.2310e+00,-7.9245e+00,5.0000e-01,4.1870e+00,-7.9028e+00,0.0000e+00,4.1870e+00,-7.9028e+00,5.0000e-01,4.1462e+00,-7.8755e+00,0.0000e+00,4.1462e+00,-7.8755e+00,5.0000e-01,4.1094e+00,-7.8432e+00,0.0000e+00,4.1094e+00,-7.8432e+00,5.0000e-01,4.0770e+00,-7.8063e+00,0.0000e+00,4.0770e+00,-7.8063e+00,5.0000e-01,4.0498e+00,-7.7655e+00,0.0000e+00,4.0498e+00,-7.7655e+00,5.0000e-01,4.0281e+00,-7.7215e+00,0.0000e+00,4.0281e+00,-7.7215e+00,5.0000e-01,4.0123e+00,-7.6751e+00,0.0000e+00,4.0123e+00,-7.6751e+00,5.0000e-01,4.0027e+00,-7.6269e+00,0.0000e+00,4.0027e+00,-7.6269e+00,5.0000e-01,3.9995e+00,-7.5780e+00,0.0000e+00,3.9995e+00,-7.5780e+00,5.0000e-01,4.0027e+00,-7.5291e+00,0.0000e+00,4.0027e+00,-7.5291e+00,5.0000e-01,4.0123e+00,-7.4809e+00,0.0000e+00,4.0123e+00,-7.4809e+00,5.0000e-01,4.0281e+00,-7.4345e+00,0.0000e+00,4.0281e+00,-7.4345e+00,5.0000e-01,4.0498e+00,-7.3905e+00,0.0000e+00,4.0498e+00,-7.3905e+00,5.0000e-01,4.0770e+00,-7.3497e+00,0.0000e+00,4.0770e+00,-7.3497e+00,5.0000e-01,4.1094e+00,-7.3128e+00,0.0000e+00,4.1094e+00,-7.3128e+00,5.0000e-01,4.1462e+00,-7.2805e+00,0.0000e+00,4.1462e+00,-7.2805e+00,5.0000e-01,4.1870e+00,-7.2532e+00,0.0000e+00,4.1870e+00,-7.2532e+00,5.0000e-01,4.2310e+00,-7.2315e+00,0.0000e+00,4.2310e+00,-7.2315e+00,5.0000e-01,4.2775e+00,-7.2158e+00,0.0000e+00,4.2775e+00,-7.2158e+00,5.0000e-01,4.3256e+00,-7.2062e+00,0.0000e+00,4.3256e+00,-7.2062e+00,5.0000e-01,4.3745e+00,-7.2030e+00,0.0000e+00,4.3745e+00,-7.2030e+00,5.0000e-01,4.4235e+00,-7.2062e+00,0.0000e+00,4.4235e+00,-7.2062e+00,5.0000e-01,4.4716e+00,-7.2158e+00,0.0000e+00,4.4716e+00,-7.2158e+00,5.0000e-01,4.5180e+00,-7.2315e+00,0.0000e+00,4.5180e+00,-7.2315e+00,5.0000e-01,4.5620e+00,-7.2532e+00,0.0000e+00,4.5620e+00,-7.2532e+00,5.0000e-01,4.6028e+00,-7.2805e+00,0.0000e+00,4.6028e+00,-7.2805e+00,5.0000e-01,4.6397e+00,-7.3128e+00,0.0000e+00,4.6397e+00,-7.3128e+00,5.0000e-01,4.6720e+00,-7.3497e+00,0.0000e+00,4.6720e+00,-7.3497e+00,5.0000e-01,4.6993e+00,-7.3905e+00,0.0000e+00,4.6993e+00,-7.3905e+00,5.0000e-01,4.7210e+00,-7.4345e+00,0.0000e+00,4.7210e+00,-7.4345e+00,5.0000e-01,4.7367e+00,-7.4809e+00,0.0000e+00,4.7367e+00,-7.4809e+00,5.0000e-01,4.7463e+00,-7.5291e+00,0.0000e+00,4.7463e+00,-7.5291e+00,5.0000e-01,4.7495e+00,-7.5780e+00,0.0000e+00,4.7495e+00,-7.5780e+00,5.0000e-01,4.7463e+00,-7.6269e+00,0.0000e+00,4.7463e+00,-7.6269e+00,5.0000e-01,4.7367e+00,-7.6751e+00,0.0000e+00,4.7367e+00,-7.6751e+00,5.0000e-01,4.7210e+00,-7.7215e+00,0.0000e+00,4.7210e+00,-7.7215e+00,5.0000e-01,4.6993e+00,-7.7655e+00,0.0000e+00,4.6993e+00,-7.7655e+00,5.0000e-01,4.6720e+00,-7.8063e+00,0.0000e+00,4.6720e+00,-7.8063e+00,5.0000e-01,4.6397e+00,-7.8432e+00,0.0000e+00,4.6397e+00,-7.8432e+00,5.0000e-01,4.6028e+00,-7.8755e+00,0.0000e+00,4.6028e+00,-7.8755e+00,5.0000e-01,4.5620e+00,-7.9028e+00,0.0000e+00,4.5620e+00,-7.9028e+00,5.0000e-01,4.5180e+00,-7.9245e+00,0.0000e+00,4.5180e+00,-7.9245e+00,5.0000e-01,4.4716e+00,-7.9402e+00,0.0000e+00,4.4716e+00,-7.9402e+00,5.0000e-01,4.4235e+00,-7.9498e+00,0.0000e+00,4.4235e+00,-7.9498e+00,5.0000e-01});
			return Coordinate_7_437_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #438, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_438_vector()
		{
			MFVec3f Normal_7_438_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_438_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #444, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_444_point()
		{
			MFVec3f Coordinate_7_444_point = new MFVec3f(new double[] {4.3745e+00,-7.9530e+00,5.0000e-01,4.4477e+00,-7.9458e+00,5.0000e-01,4.5180e+00,-7.9245e+00,5.0000e-01,4.5829e+00,-7.8898e+00,5.0000e-01,4.6397e+00,-7.8432e+00,5.0000e-01,4.6863e+00,-7.7863e+00,5.0000e-01,4.7210e+00,-7.7215e+00,5.0000e-01,4.7423e+00,-7.6512e+00,5.0000e-01,4.7495e+00,-7.5780e+00,5.0000e-01,4.7423e+00,-7.5048e+00,5.0000e-01,4.7210e+00,-7.4345e+00,5.0000e-01,4.6863e+00,-7.3697e+00,5.0000e-01,4.6397e+00,-7.3128e+00,5.0000e-01,4.5829e+00,-7.2662e+00,5.0000e-01,4.5180e+00,-7.2315e+00,5.0000e-01,4.4477e+00,-7.2102e+00,5.0000e-01,4.3745e+00,-7.2030e+00,5.0000e-01,4.3014e+00,-7.2102e+00,5.0000e-01,4.2310e+00,-7.2315e+00,5.0000e-01,4.1662e+00,-7.2662e+00,5.0000e-01,4.1094e+00,-7.3128e+00,5.0000e-01,4.0627e+00,-7.3697e+00,5.0000e-01,4.0281e+00,-7.4345e+00,5.0000e-01,4.0067e+00,-7.5048e+00,5.0000e-01,3.9995e+00,-7.5780e+00,5.0000e-01,4.0067e+00,-7.6512e+00,5.0000e-01,4.0281e+00,-7.7215e+00,5.0000e-01,4.0627e+00,-7.7863e+00,5.0000e-01,4.1094e+00,-7.8432e+00,5.0000e-01,4.1662e+00,-7.8898e+00,5.0000e-01,4.2310e+00,-7.9245e+00,5.0000e-01,4.3014e+00,-7.9458e+00,5.0000e-01,4.3745e+00,-8.3280e+00,5.0000e-01,4.5208e+00,-8.3136e+00,5.0000e-01,4.6615e+00,-8.2709e+00,5.0000e-01,4.7912e+00,-8.2016e+00,5.0000e-01,4.9048e+00,-8.1083e+00,5.0000e-01,4.9981e+00,-7.9947e+00,5.0000e-01,5.0674e+00,-7.8650e+00,5.0000e-01,5.1101e+00,-7.7243e+00,5.0000e-01,5.1245e+00,-7.5780e+00,5.0000e-01,5.1101e+00,-7.4317e+00,5.0000e-01,5.0674e+00,-7.2910e+00,5.0000e-01,4.9981e+00,-7.1613e+00,5.0000e-01,4.9048e+00,-7.0477e+00,5.0000e-01,4.7912e+00,-6.9544e+00,5.0000e-01,4.6615e+00,-6.8851e+00,5.0000e-01,4.5208e+00,-6.8424e+00,5.0000e-01,4.3745e+00,-6.8280e+00,5.0000e-01,4.2282e+00,-6.8424e+00,5.0000e-01,4.0875e+00,-6.8851e+00,5.0000e-01,3.9578e+00,-6.9544e+00,5.0000e-01,3.8442e+00,-7.0477e+00,5.0000e-01,3.7509e+00,-7.1613e+00,5.0000e-01,3.6816e+00,-7.2910e+00,5.0000e-01,3.6389e+00,-7.4317e+00,5.0000e-01,3.6245e+00,-7.5780e+00,5.0000e-01,3.6389e+00,-7.7243e+00,5.0000e-01,3.6816e+00,-7.8650e+00,5.0000e-01,3.7509e+00,-7.9947e+00,5.0000e-01,3.8442e+00,-8.1083e+00,5.0000e-01,3.9578e+00,-8.2016e+00,5.0000e-01,4.0875e+00,-8.2709e+00,5.0000e-01,4.2282e+00,-8.3136e+00,5.0000e-01});
			return Coordinate_7_444_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #450, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_450_point()
		{
			MFVec3f Coordinate_7_450_point = new MFVec3f(new double[] {4.3745e+00,-8.3280e+00,5.0000e-01,4.3745e+00,-8.3280e+00,1.0000e+00,4.2766e+00,-8.3216e+00,5.0000e-01,4.2766e+00,-8.3216e+00,1.0000e+00,4.1804e+00,-8.3024e+00,5.0000e-01,4.1804e+00,-8.3024e+00,1.0000e+00,4.0875e+00,-8.2709e+00,5.0000e-01,4.0875e+00,-8.2709e+00,1.0000e+00,3.9995e+00,-8.2275e+00,5.0000e-01,3.9995e+00,-8.2275e+00,1.0000e+00,3.9179e+00,-8.1730e+00,5.0000e-01,3.9179e+00,-8.1730e+00,1.0000e+00,3.8442e+00,-8.1083e+00,5.0000e-01,3.8442e+00,-8.1083e+00,1.0000e+00,3.7795e+00,-8.0346e+00,5.0000e-01,3.7795e+00,-8.0346e+00,1.0000e+00,3.7250e+00,-7.9530e+00,5.0000e-01,3.7250e+00,-7.9530e+00,1.0000e+00,3.6816e+00,-7.8650e+00,5.0000e-01,3.6816e+00,-7.8650e+00,1.0000e+00,3.6501e+00,-7.7721e+00,5.0000e-01,3.6501e+00,-7.7721e+00,1.0000e+00,3.6309e+00,-7.6759e+00,5.0000e-01,3.6309e+00,-7.6759e+00,1.0000e+00,3.6245e+00,-7.5780e+00,5.0000e-01,3.6245e+00,-7.5780e+00,1.0000e+00,3.6309e+00,-7.4801e+00,5.0000e-01,3.6309e+00,-7.4801e+00,1.0000e+00,3.6501e+00,-7.3839e+00,5.0000e-01,3.6501e+00,-7.3839e+00,1.0000e+00,3.6816e+00,-7.2910e+00,5.0000e-01,3.6816e+00,-7.2910e+00,1.0000e+00,3.7250e+00,-7.2030e+00,5.0000e-01,3.7250e+00,-7.2030e+00,1.0000e+00,3.7795e+00,-7.1214e+00,5.0000e-01,3.7795e+00,-7.1214e+00,1.0000e+00,3.8442e+00,-7.0477e+00,5.0000e-01,3.8442e+00,-7.0477e+00,1.0000e+00,3.9179e+00,-6.9830e+00,5.0000e-01,3.9179e+00,-6.9830e+00,1.0000e+00,3.9995e+00,-6.9285e+00,5.0000e-01,3.9995e+00,-6.9285e+00,1.0000e+00,4.0875e+00,-6.8851e+00,5.0000e-01,4.0875e+00,-6.8851e+00,1.0000e+00,4.1804e+00,-6.8536e+00,5.0000e-01,4.1804e+00,-6.8536e+00,1.0000e+00,4.2766e+00,-6.8344e+00,5.0000e-01,4.2766e+00,-6.8344e+00,1.0000e+00,4.3745e+00,-6.8280e+00,5.0000e-01,4.3745e+00,-6.8280e+00,1.0000e+00,4.4724e+00,-6.8344e+00,5.0000e-01,4.4724e+00,-6.8344e+00,1.0000e+00,4.5686e+00,-6.8536e+00,5.0000e-01,4.5686e+00,-6.8536e+00,1.0000e+00,4.6615e+00,-6.8851e+00,5.0000e-01,4.6615e+00,-6.8851e+00,1.0000e+00,4.7495e+00,-6.9285e+00,5.0000e-01,4.7495e+00,-6.9285e+00,1.0000e+00,4.8311e+00,-6.9830e+00,5.0000e-01,4.8311e+00,-6.9830e+00,1.0000e+00,4.9048e+00,-7.0477e+00,5.0000e-01,4.9048e+00,-7.0477e+00,1.0000e+00,4.9695e+00,-7.1214e+00,5.0000e-01,4.9695e+00,-7.1214e+00,1.0000e+00,5.0240e+00,-7.2030e+00,5.0000e-01,5.0240e+00,-7.2030e+00,1.0000e+00,5.0674e+00,-7.2910e+00,5.0000e-01,5.0674e+00,-7.2910e+00,1.0000e+00,5.0990e+00,-7.3839e+00,5.0000e-01,5.0990e+00,-7.3839e+00,1.0000e+00,5.1181e+00,-7.4801e+00,5.0000e-01,5.1181e+00,-7.4801e+00,1.0000e+00,5.1245e+00,-7.5780e+00,5.0000e-01,5.1245e+00,-7.5780e+00,1.0000e+00,5.1181e+00,-7.6759e+00,5.0000e-01,5.1181e+00,-7.6759e+00,1.0000e+00,5.0990e+00,-7.7721e+00,5.0000e-01,5.0990e+00,-7.7721e+00,1.0000e+00,5.0674e+00,-7.8650e+00,5.0000e-01,5.0674e+00,-7.8650e+00,1.0000e+00,5.0240e+00,-7.9530e+00,5.0000e-01,5.0240e+00,-7.9530e+00,1.0000e+00,4.9695e+00,-8.0346e+00,5.0000e-01,4.9695e+00,-8.0346e+00,1.0000e+00,4.9048e+00,-8.1083e+00,5.0000e-01,4.9048e+00,-8.1083e+00,1.0000e+00,4.8311e+00,-8.1730e+00,5.0000e-01,4.8311e+00,-8.1730e+00,1.0000e+00,4.7495e+00,-8.2275e+00,5.0000e-01,4.7495e+00,-8.2275e+00,1.0000e+00,4.6615e+00,-8.2709e+00,5.0000e-01,4.6615e+00,-8.2709e+00,1.0000e+00,4.5686e+00,-8.3024e+00,5.0000e-01,4.5686e+00,-8.3024e+00,1.0000e+00,4.4724e+00,-8.3216e+00,5.0000e-01,4.4724e+00,-8.3216e+00,1.0000e+00});
			return Coordinate_7_450_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #451, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_451_vector()
		{
			MFVec3f Normal_7_451_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_451_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #457, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_457_point()
		{
			MFVec3f Coordinate_7_457_point = new MFVec3f(new double[] {7.5777e+00,-4.7500e+00,0.0000e+00,7.5777e+00,-4.7500e+00,5.0000e-01,7.5288e+00,-4.7468e+00,0.0000e+00,7.5288e+00,-4.7468e+00,5.0000e-01,7.4807e+00,-4.7372e+00,0.0000e+00,7.4807e+00,-4.7372e+00,5.0000e-01,7.4342e+00,-4.7215e+00,0.0000e+00,7.4342e+00,-4.7215e+00,5.0000e-01,7.3902e+00,-4.6998e+00,0.0000e+00,7.3902e+00,-4.6998e+00,5.0000e-01,7.3494e+00,-4.6725e+00,0.0000e+00,7.3494e+00,-4.6725e+00,5.0000e-01,7.3126e+00,-4.6402e+00,0.0000e+00,7.3126e+00,-4.6402e+00,5.0000e-01,7.2802e+00,-4.6033e+00,0.0000e+00,7.2802e+00,-4.6033e+00,5.0000e-01,7.2530e+00,-4.5625e+00,0.0000e+00,7.2530e+00,-4.5625e+00,5.0000e-01,7.2313e+00,-4.5185e+00,0.0000e+00,7.2313e+00,-4.5185e+00,5.0000e-01,7.2155e+00,-4.4721e+00,0.0000e+00,7.2155e+00,-4.4721e+00,5.0000e-01,7.2059e+00,-4.4239e+00,0.0000e+00,7.2059e+00,-4.4239e+00,5.0000e-01,7.2027e+00,-4.3750e+00,0.0000e+00,7.2027e+00,-4.3750e+00,5.0000e-01,7.2059e+00,-4.3261e+00,0.0000e+00,7.2059e+00,-4.3261e+00,5.0000e-01,7.2155e+00,-4.2779e+00,0.0000e+00,7.2155e+00,-4.2779e+00,5.0000e-01,7.2313e+00,-4.2315e+00,0.0000e+00,7.2313e+00,-4.2315e+00,5.0000e-01,7.2530e+00,-4.1875e+00,0.0000e+00,7.2530e+00,-4.1875e+00,5.0000e-01,7.2802e+00,-4.1467e+00,0.0000e+00,7.2802e+00,-4.1467e+00,5.0000e-01,7.3126e+00,-4.1098e+00,0.0000e+00,7.3126e+00,-4.1098e+00,5.0000e-01,7.3494e+00,-4.0775e+00,0.0000e+00,7.3494e+00,-4.0775e+00,5.0000e-01,7.3902e+00,-4.0502e+00,0.0000e+00,7.3902e+00,-4.0502e+00,5.0000e-01,7.4342e+00,-4.0285e+00,0.0000e+00,7.4342e+00,-4.0285e+00,5.0000e-01,7.4807e+00,-4.0128e+00,0.0000e+00,7.4807e+00,-4.0128e+00,5.0000e-01,7.5288e+00,-4.0032e+00,0.0000e+00,7.5288e+00,-4.0032e+00,5.0000e-01,7.5777e+00,-4.0000e+00,0.0000e+00,7.5777e+00,-4.0000e+00,5.0000e-01,7.6267e+00,-4.0032e+00,0.0000e+00,7.6267e+00,-4.0032e+00,5.0000e-01,7.6748e+00,-4.0128e+00,0.0000e+00,7.6748e+00,-4.0128e+00,5.0000e-01,7.7212e+00,-4.0285e+00,0.0000e+00,7.7212e+00,-4.0285e+00,5.0000e-01,7.7652e+00,-4.0502e+00,0.0000e+00,7.7652e+00,-4.0502e+00,5.0000e-01,7.8060e+00,-4.0775e+00,0.0000e+00,7.8060e+00,-4.0775e+00,5.0000e-01,7.8429e+00,-4.1098e+00,0.0000e+00,7.8429e+00,-4.1098e+00,5.0000e-01,7.8752e+00,-4.1467e+00,0.0000e+00,7.8752e+00,-4.1467e+00,5.0000e-01,7.9025e+00,-4.1875e+00,0.0000e+00,7.9025e+00,-4.1875e+00,5.0000e-01,7.9242e+00,-4.2315e+00,0.0000e+00,7.9242e+00,-4.2315e+00,5.0000e-01,7.9399e+00,-4.2779e+00,0.0000e+00,7.9399e+00,-4.2779e+00,5.0000e-01,7.9495e+00,-4.3261e+00,0.0000e+00,7.9495e+00,-4.3261e+00,5.0000e-01,7.9527e+00,-4.3750e+00,0.0000e+00,7.9527e+00,-4.3750e+00,5.0000e-01,7.9495e+00,-4.4239e+00,0.0000e+00,7.9495e+00,-4.4239e+00,5.0000e-01,7.9399e+00,-4.4721e+00,0.0000e+00,7.9399e+00,-4.4721e+00,5.0000e-01,7.9242e+00,-4.5185e+00,0.0000e+00,7.9242e+00,-4.5185e+00,5.0000e-01,7.9025e+00,-4.5625e+00,0.0000e+00,7.9025e+00,-4.5625e+00,5.0000e-01,7.8752e+00,-4.6033e+00,0.0000e+00,7.8752e+00,-4.6033e+00,5.0000e-01,7.8429e+00,-4.6402e+00,0.0000e+00,7.8429e+00,-4.6402e+00,5.0000e-01,7.8060e+00,-4.6725e+00,0.0000e+00,7.8060e+00,-4.6725e+00,5.0000e-01,7.7652e+00,-4.6998e+00,0.0000e+00,7.7652e+00,-4.6998e+00,5.0000e-01,7.7212e+00,-4.7215e+00,0.0000e+00,7.7212e+00,-4.7215e+00,5.0000e-01,7.6748e+00,-4.7372e+00,0.0000e+00,7.6748e+00,-4.7372e+00,5.0000e-01,7.6267e+00,-4.7468e+00,0.0000e+00,7.6267e+00,-4.7468e+00,5.0000e-01});
			return Coordinate_7_457_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #458, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_458_vector()
		{
			MFVec3f Normal_7_458_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_458_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #464, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_464_point()
		{
			MFVec3f Coordinate_7_464_point = new MFVec3f(new double[] {7.5777e+00,-4.7500e+00,5.0000e-01,7.6509e+00,-4.7428e+00,5.0000e-01,7.7212e+00,-4.7215e+00,5.0000e-01,7.7861e+00,-4.6868e+00,5.0000e-01,7.8429e+00,-4.6402e+00,5.0000e-01,7.8895e+00,-4.5833e+00,5.0000e-01,7.9242e+00,-4.5185e+00,5.0000e-01,7.9455e+00,-4.4482e+00,5.0000e-01,7.9527e+00,-4.3750e+00,5.0000e-01,7.9455e+00,-4.3018e+00,5.0000e-01,7.9242e+00,-4.2315e+00,5.0000e-01,7.8895e+00,-4.1667e+00,5.0000e-01,7.8429e+00,-4.1098e+00,5.0000e-01,7.7861e+00,-4.0632e+00,5.0000e-01,7.7212e+00,-4.0285e+00,5.0000e-01,7.6509e+00,-4.0072e+00,5.0000e-01,7.5777e+00,-4.0000e+00,5.0000e-01,7.5046e+00,-4.0072e+00,5.0000e-01,7.4342e+00,-4.0285e+00,5.0000e-01,7.3694e+00,-4.0632e+00,5.0000e-01,7.3126e+00,-4.1098e+00,5.0000e-01,7.2659e+00,-4.1667e+00,5.0000e-01,7.2313e+00,-4.2315e+00,5.0000e-01,7.2099e+00,-4.3018e+00,5.0000e-01,7.2027e+00,-4.3750e+00,5.0000e-01,7.2099e+00,-4.4482e+00,5.0000e-01,7.2313e+00,-4.5185e+00,5.0000e-01,7.2659e+00,-4.5833e+00,5.0000e-01,7.3126e+00,-4.6402e+00,5.0000e-01,7.3694e+00,-4.6868e+00,5.0000e-01,7.4342e+00,-4.7215e+00,5.0000e-01,7.5046e+00,-4.7428e+00,5.0000e-01,7.5777e+00,-5.1250e+00,5.0000e-01,7.7240e+00,-5.1106e+00,5.0000e-01,7.8647e+00,-5.0679e+00,5.0000e-01,7.9944e+00,-4.9986e+00,5.0000e-01,8.1081e+00,-4.9053e+00,5.0000e-01,8.2013e+00,-4.7917e+00,5.0000e-01,8.2706e+00,-4.6620e+00,5.0000e-01,8.3133e+00,-4.5213e+00,5.0000e-01,8.3277e+00,-4.3750e+00,5.0000e-01,8.3133e+00,-4.2287e+00,5.0000e-01,8.2706e+00,-4.0880e+00,5.0000e-01,8.2013e+00,-3.9583e+00,5.0000e-01,8.1081e+00,-3.8447e+00,5.0000e-01,7.9944e+00,-3.7514e+00,5.0000e-01,7.8647e+00,-3.6821e+00,5.0000e-01,7.7240e+00,-3.6394e+00,5.0000e-01,7.5777e+00,-3.6250e+00,5.0000e-01,7.4314e+00,-3.6394e+00,5.0000e-01,7.2907e+00,-3.6821e+00,5.0000e-01,7.1610e+00,-3.7514e+00,5.0000e-01,7.0474e+00,-3.8447e+00,5.0000e-01,6.9541e+00,-3.9583e+00,5.0000e-01,6.8848e+00,-4.0880e+00,5.0000e-01,6.8421e+00,-4.2287e+00,5.0000e-01,6.8277e+00,-4.3750e+00,5.0000e-01,6.8421e+00,-4.5213e+00,5.0000e-01,6.8848e+00,-4.6620e+00,5.0000e-01,6.9541e+00,-4.7917e+00,5.0000e-01,7.0474e+00,-4.9053e+00,5.0000e-01,7.1610e+00,-4.9986e+00,5.0000e-01,7.2907e+00,-5.0679e+00,5.0000e-01,7.4314e+00,-5.1106e+00,5.0000e-01});
			return Coordinate_7_464_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #470, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_470_point()
		{
			MFVec3f Coordinate_7_470_point = new MFVec3f(new double[] {7.5777e+00,-5.1250e+00,5.0000e-01,7.5777e+00,-5.1250e+00,1.0000e+00,7.4798e+00,-5.1186e+00,5.0000e-01,7.4798e+00,-5.1186e+00,1.0000e+00,7.3836e+00,-5.0994e+00,5.0000e-01,7.3836e+00,-5.0994e+00,1.0000e+00,7.2907e+00,-5.0679e+00,5.0000e-01,7.2907e+00,-5.0679e+00,1.0000e+00,7.2027e+00,-5.0245e+00,5.0000e-01,7.2027e+00,-5.0245e+00,1.0000e+00,7.1212e+00,-4.9700e+00,5.0000e-01,7.1212e+00,-4.9700e+00,1.0000e+00,7.0474e+00,-4.9053e+00,5.0000e-01,7.0474e+00,-4.9053e+00,1.0000e+00,6.9827e+00,-4.8316e+00,5.0000e-01,6.9827e+00,-4.8316e+00,1.0000e+00,6.9282e+00,-4.7500e+00,5.0000e-01,6.9282e+00,-4.7500e+00,1.0000e+00,6.8848e+00,-4.6620e+00,5.0000e-01,6.8848e+00,-4.6620e+00,1.0000e+00,6.8533e+00,-4.5691e+00,5.0000e-01,6.8533e+00,-4.5691e+00,1.0000e+00,6.8341e+00,-4.4729e+00,5.0000e-01,6.8341e+00,-4.4729e+00,1.0000e+00,6.8277e+00,-4.3750e+00,5.0000e-01,6.8277e+00,-4.3750e+00,1.0000e+00,6.8341e+00,-4.2771e+00,5.0000e-01,6.8341e+00,-4.2771e+00,1.0000e+00,6.8533e+00,-4.1809e+00,5.0000e-01,6.8533e+00,-4.1809e+00,1.0000e+00,6.8848e+00,-4.0880e+00,5.0000e-01,6.8848e+00,-4.0880e+00,1.0000e+00,6.9282e+00,-4.0000e+00,5.0000e-01,6.9282e+00,-4.0000e+00,1.0000e+00,6.9827e+00,-3.9184e+00,5.0000e-01,6.9827e+00,-3.9184e+00,1.0000e+00,7.0474e+00,-3.8447e+00,5.0000e-01,7.0474e+00,-3.8447e+00,1.0000e+00,7.1212e+00,-3.7800e+00,5.0000e-01,7.1212e+00,-3.7800e+00,1.0000e+00,7.2027e+00,-3.7255e+00,5.0000e-01,7.2027e+00,-3.7255e+00,1.0000e+00,7.2907e+00,-3.6821e+00,5.0000e-01,7.2907e+00,-3.6821e+00,1.0000e+00,7.3836e+00,-3.6506e+00,5.0000e-01,7.3836e+00,-3.6506e+00,1.0000e+00,7.4798e+00,-3.6314e+00,5.0000e-01,7.4798e+00,-3.6314e+00,1.0000e+00,7.5777e+00,-3.6250e+00,5.0000e-01,7.5777e+00,-3.6250e+00,1.0000e+00,7.6756e+00,-3.6314e+00,5.0000e-01,7.6756e+00,-3.6314e+00,1.0000e+00,7.7718e+00,-3.6506e+00,5.0000e-01,7.7718e+00,-3.6506e+00,1.0000e+00,7.8647e+00,-3.6821e+00,5.0000e-01,7.8647e+00,-3.6821e+00,1.0000e+00,7.9527e+00,-3.7255e+00,5.0000e-01,7.9527e+00,-3.7255e+00,1.0000e+00,8.0343e+00,-3.7800e+00,5.0000e-01,8.0343e+00,-3.7800e+00,1.0000e+00,8.1081e+00,-3.8447e+00,5.0000e-01,8.1081e+00,-3.8447e+00,1.0000e+00,8.1727e+00,-3.9184e+00,5.0000e-01,8.1727e+00,-3.9184e+00,1.0000e+00,8.2272e+00,-4.0000e+00,5.0000e-01,8.2272e+00,-4.0000e+00,1.0000e+00,8.2706e+00,-4.0880e+00,5.0000e-01,8.2706e+00,-4.0880e+00,1.0000e+00,8.3022e+00,-4.1809e+00,5.0000e-01,8.3022e+00,-4.1809e+00,1.0000e+00,8.3213e+00,-4.2771e+00,5.0000e-01,8.3213e+00,-4.2771e+00,1.0000e+00,8.3277e+00,-4.3750e+00,5.0000e-01,8.3277e+00,-4.3750e+00,1.0000e+00,8.3213e+00,-4.4729e+00,5.0000e-01,8.3213e+00,-4.4729e+00,1.0000e+00,8.3022e+00,-4.5691e+00,5.0000e-01,8.3022e+00,-4.5691e+00,1.0000e+00,8.2706e+00,-4.6620e+00,5.0000e-01,8.2706e+00,-4.6620e+00,1.0000e+00,8.2272e+00,-4.7500e+00,5.0000e-01,8.2272e+00,-4.7500e+00,1.0000e+00,8.1727e+00,-4.8316e+00,5.0000e-01,8.1727e+00,-4.8316e+00,1.0000e+00,8.1081e+00,-4.9053e+00,5.0000e-01,8.1081e+00,-4.9053e+00,1.0000e+00,8.0343e+00,-4.9700e+00,5.0000e-01,8.0343e+00,-4.9700e+00,1.0000e+00,7.9527e+00,-5.0245e+00,5.0000e-01,7.9527e+00,-5.0245e+00,1.0000e+00,7.8647e+00,-5.0679e+00,5.0000e-01,7.8647e+00,-5.0679e+00,1.0000e+00,7.7718e+00,-5.0994e+00,5.0000e-01,7.7718e+00,-5.0994e+00,1.0000e+00,7.6756e+00,-5.1186e+00,5.0000e-01,7.6756e+00,-5.1186e+00,1.0000e+00});
			return Coordinate_7_470_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #471, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_471_vector()
		{
			MFVec3f Normal_7_471_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_471_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #477, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_477_point()
		{
			MFVec3f Coordinate_7_477_point = new MFVec3f(new double[] {7.5777e+00,4.0000e+00,0.0000e+00,7.5777e+00,4.0000e+00,5.0000e-01,7.5288e+00,4.0032e+00,0.0000e+00,7.5288e+00,4.0032e+00,5.0000e-01,7.4807e+00,4.0128e+00,0.0000e+00,7.4807e+00,4.0128e+00,5.0000e-01,7.4342e+00,4.0285e+00,0.0000e+00,7.4342e+00,4.0285e+00,5.0000e-01,7.3902e+00,4.0502e+00,0.0000e+00,7.3902e+00,4.0502e+00,5.0000e-01,7.3494e+00,4.0775e+00,0.0000e+00,7.3494e+00,4.0775e+00,5.0000e-01,7.3126e+00,4.1098e+00,0.0000e+00,7.3126e+00,4.1098e+00,5.0000e-01,7.2802e+00,4.1467e+00,0.0000e+00,7.2802e+00,4.1467e+00,5.0000e-01,7.2530e+00,4.1875e+00,0.0000e+00,7.2530e+00,4.1875e+00,5.0000e-01,7.2313e+00,4.2315e+00,0.0000e+00,7.2313e+00,4.2315e+00,5.0000e-01,7.2155e+00,4.2779e+00,0.0000e+00,7.2155e+00,4.2779e+00,5.0000e-01,7.2059e+00,4.3261e+00,0.0000e+00,7.2059e+00,4.3261e+00,5.0000e-01,7.2027e+00,4.3750e+00,0.0000e+00,7.2027e+00,4.3750e+00,5.0000e-01,7.2059e+00,4.4239e+00,0.0000e+00,7.2059e+00,4.4239e+00,5.0000e-01,7.2155e+00,4.4721e+00,0.0000e+00,7.2155e+00,4.4721e+00,5.0000e-01,7.2313e+00,4.5185e+00,0.0000e+00,7.2313e+00,4.5185e+00,5.0000e-01,7.2530e+00,4.5625e+00,0.0000e+00,7.2530e+00,4.5625e+00,5.0000e-01,7.2802e+00,4.6033e+00,0.0000e+00,7.2802e+00,4.6033e+00,5.0000e-01,7.3126e+00,4.6402e+00,0.0000e+00,7.3126e+00,4.6402e+00,5.0000e-01,7.3494e+00,4.6725e+00,0.0000e+00,7.3494e+00,4.6725e+00,5.0000e-01,7.3902e+00,4.6998e+00,0.0000e+00,7.3902e+00,4.6998e+00,5.0000e-01,7.4342e+00,4.7215e+00,0.0000e+00,7.4342e+00,4.7215e+00,5.0000e-01,7.4807e+00,4.7372e+00,0.0000e+00,7.4807e+00,4.7372e+00,5.0000e-01,7.5288e+00,4.7468e+00,0.0000e+00,7.5288e+00,4.7468e+00,5.0000e-01,7.5777e+00,4.7500e+00,0.0000e+00,7.5777e+00,4.7500e+00,5.0000e-01,7.6267e+00,4.7468e+00,0.0000e+00,7.6267e+00,4.7468e+00,5.0000e-01,7.6748e+00,4.7372e+00,0.0000e+00,7.6748e+00,4.7372e+00,5.0000e-01,7.7212e+00,4.7215e+00,0.0000e+00,7.7212e+00,4.7215e+00,5.0000e-01,7.7652e+00,4.6998e+00,0.0000e+00,7.7652e+00,4.6998e+00,5.0000e-01,7.8060e+00,4.6725e+00,0.0000e+00,7.8060e+00,4.6725e+00,5.0000e-01,7.8429e+00,4.6402e+00,0.0000e+00,7.8429e+00,4.6402e+00,5.0000e-01,7.8752e+00,4.6033e+00,0.0000e+00,7.8752e+00,4.6033e+00,5.0000e-01,7.9025e+00,4.5625e+00,0.0000e+00,7.9025e+00,4.5625e+00,5.0000e-01,7.9242e+00,4.5185e+00,0.0000e+00,7.9242e+00,4.5185e+00,5.0000e-01,7.9399e+00,4.4721e+00,0.0000e+00,7.9399e+00,4.4721e+00,5.0000e-01,7.9495e+00,4.4239e+00,0.0000e+00,7.9495e+00,4.4239e+00,5.0000e-01,7.9527e+00,4.3750e+00,0.0000e+00,7.9527e+00,4.3750e+00,5.0000e-01,7.9495e+00,4.3261e+00,0.0000e+00,7.9495e+00,4.3261e+00,5.0000e-01,7.9399e+00,4.2779e+00,0.0000e+00,7.9399e+00,4.2779e+00,5.0000e-01,7.9242e+00,4.2315e+00,0.0000e+00,7.9242e+00,4.2315e+00,5.0000e-01,7.9025e+00,4.1875e+00,0.0000e+00,7.9025e+00,4.1875e+00,5.0000e-01,7.8752e+00,4.1467e+00,0.0000e+00,7.8752e+00,4.1467e+00,5.0000e-01,7.8429e+00,4.1098e+00,0.0000e+00,7.8429e+00,4.1098e+00,5.0000e-01,7.8060e+00,4.0775e+00,0.0000e+00,7.8060e+00,4.0775e+00,5.0000e-01,7.7652e+00,4.0502e+00,0.0000e+00,7.7652e+00,4.0502e+00,5.0000e-01,7.7212e+00,4.0285e+00,0.0000e+00,7.7212e+00,4.0285e+00,5.0000e-01,7.6748e+00,4.0128e+00,0.0000e+00,7.6748e+00,4.0128e+00,5.0000e-01,7.6267e+00,4.0032e+00,0.0000e+00,7.6267e+00,4.0032e+00,5.0000e-01});
			return Coordinate_7_477_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #478, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_478_vector()
		{
			MFVec3f Normal_7_478_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_478_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #484, 192 total numbers made up of 64 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_484_point()
		{
			MFVec3f Coordinate_7_484_point = new MFVec3f(new double[] {7.5777e+00,4.0000e+00,5.0000e-01,7.6509e+00,4.0072e+00,5.0000e-01,7.7212e+00,4.0285e+00,5.0000e-01,7.7861e+00,4.0632e+00,5.0000e-01,7.8429e+00,4.1098e+00,5.0000e-01,7.8895e+00,4.1667e+00,5.0000e-01,7.9242e+00,4.2315e+00,5.0000e-01,7.9455e+00,4.3018e+00,5.0000e-01,7.9527e+00,4.3750e+00,5.0000e-01,7.9455e+00,4.4482e+00,5.0000e-01,7.9242e+00,4.5185e+00,5.0000e-01,7.8895e+00,4.5833e+00,5.0000e-01,7.8429e+00,4.6402e+00,5.0000e-01,7.7861e+00,4.6868e+00,5.0000e-01,7.7212e+00,4.7215e+00,5.0000e-01,7.6509e+00,4.7428e+00,5.0000e-01,7.5777e+00,4.7500e+00,5.0000e-01,7.5046e+00,4.7428e+00,5.0000e-01,7.4342e+00,4.7215e+00,5.0000e-01,7.3694e+00,4.6868e+00,5.0000e-01,7.3126e+00,4.6402e+00,5.0000e-01,7.2659e+00,4.5833e+00,5.0000e-01,7.2313e+00,4.5185e+00,5.0000e-01,7.2099e+00,4.4482e+00,5.0000e-01,7.2027e+00,4.3750e+00,5.0000e-01,7.2099e+00,4.3018e+00,5.0000e-01,7.2313e+00,4.2315e+00,5.0000e-01,7.2659e+00,4.1667e+00,5.0000e-01,7.3126e+00,4.1098e+00,5.0000e-01,7.3694e+00,4.0632e+00,5.0000e-01,7.4342e+00,4.0285e+00,5.0000e-01,7.5046e+00,4.0072e+00,5.0000e-01,7.5777e+00,3.6250e+00,5.0000e-01,7.7240e+00,3.6394e+00,5.0000e-01,7.8647e+00,3.6821e+00,5.0000e-01,7.9944e+00,3.7514e+00,5.0000e-01,8.1081e+00,3.8447e+00,5.0000e-01,8.2013e+00,3.9583e+00,5.0000e-01,8.2706e+00,4.0880e+00,5.0000e-01,8.3133e+00,4.2287e+00,5.0000e-01,8.3277e+00,4.3750e+00,5.0000e-01,8.3133e+00,4.5213e+00,5.0000e-01,8.2706e+00,4.6620e+00,5.0000e-01,8.2013e+00,4.7917e+00,5.0000e-01,8.1081e+00,4.9053e+00,5.0000e-01,7.9944e+00,4.9986e+00,5.0000e-01,7.8647e+00,5.0679e+00,5.0000e-01,7.7240e+00,5.1106e+00,5.0000e-01,7.5777e+00,5.1250e+00,5.0000e-01,7.4314e+00,5.1106e+00,5.0000e-01,7.2907e+00,5.0679e+00,5.0000e-01,7.1610e+00,4.9986e+00,5.0000e-01,7.0474e+00,4.9053e+00,5.0000e-01,6.9541e+00,4.7917e+00,5.0000e-01,6.8848e+00,4.6620e+00,5.0000e-01,6.8421e+00,4.5213e+00,5.0000e-01,6.8277e+00,4.3750e+00,5.0000e-01,6.8421e+00,4.2287e+00,5.0000e-01,6.8848e+00,4.0880e+00,5.0000e-01,6.9541e+00,3.9583e+00,5.0000e-01,7.0474e+00,3.8447e+00,5.0000e-01,7.1610e+00,3.7514e+00,5.0000e-01,7.2907e+00,3.6821e+00,5.0000e-01,7.4314e+00,3.6394e+00,5.0000e-01});
			return Coordinate_7_484_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #490, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_490_point()
		{
			MFVec3f Coordinate_7_490_point = new MFVec3f(new double[] {7.5777e+00,3.6250e+00,5.0000e-01,7.5777e+00,3.6250e+00,1.0000e+00,7.4798e+00,3.6314e+00,5.0000e-01,7.4798e+00,3.6314e+00,1.0000e+00,7.3836e+00,3.6506e+00,5.0000e-01,7.3836e+00,3.6506e+00,1.0000e+00,7.2907e+00,3.6821e+00,5.0000e-01,7.2907e+00,3.6821e+00,1.0000e+00,7.2027e+00,3.7255e+00,5.0000e-01,7.2027e+00,3.7255e+00,1.0000e+00,7.1212e+00,3.7800e+00,5.0000e-01,7.1212e+00,3.7800e+00,1.0000e+00,7.0474e+00,3.8447e+00,5.0000e-01,7.0474e+00,3.8447e+00,1.0000e+00,6.9827e+00,3.9184e+00,5.0000e-01,6.9827e+00,3.9184e+00,1.0000e+00,6.9282e+00,4.0000e+00,5.0000e-01,6.9282e+00,4.0000e+00,1.0000e+00,6.8848e+00,4.0880e+00,5.0000e-01,6.8848e+00,4.0880e+00,1.0000e+00,6.8533e+00,4.1809e+00,5.0000e-01,6.8533e+00,4.1809e+00,1.0000e+00,6.8341e+00,4.2771e+00,5.0000e-01,6.8341e+00,4.2771e+00,1.0000e+00,6.8277e+00,4.3750e+00,5.0000e-01,6.8277e+00,4.3750e+00,1.0000e+00,6.8341e+00,4.4729e+00,5.0000e-01,6.8341e+00,4.4729e+00,1.0000e+00,6.8533e+00,4.5691e+00,5.0000e-01,6.8533e+00,4.5691e+00,1.0000e+00,6.8848e+00,4.6620e+00,5.0000e-01,6.8848e+00,4.6620e+00,1.0000e+00,6.9282e+00,4.7500e+00,5.0000e-01,6.9282e+00,4.7500e+00,1.0000e+00,6.9827e+00,4.8316e+00,5.0000e-01,6.9827e+00,4.8316e+00,1.0000e+00,7.0474e+00,4.9053e+00,5.0000e-01,7.0474e+00,4.9053e+00,1.0000e+00,7.1212e+00,4.9700e+00,5.0000e-01,7.1212e+00,4.9700e+00,1.0000e+00,7.2027e+00,5.0245e+00,5.0000e-01,7.2027e+00,5.0245e+00,1.0000e+00,7.2907e+00,5.0679e+00,5.0000e-01,7.2907e+00,5.0679e+00,1.0000e+00,7.3836e+00,5.0994e+00,5.0000e-01,7.3836e+00,5.0994e+00,1.0000e+00,7.4798e+00,5.1186e+00,5.0000e-01,7.4798e+00,5.1186e+00,1.0000e+00,7.5777e+00,5.1250e+00,5.0000e-01,7.5777e+00,5.1250e+00,1.0000e+00,7.6756e+00,5.1186e+00,5.0000e-01,7.6756e+00,5.1186e+00,1.0000e+00,7.7718e+00,5.0994e+00,5.0000e-01,7.7718e+00,5.0994e+00,1.0000e+00,7.8647e+00,5.0679e+00,5.0000e-01,7.8647e+00,5.0679e+00,1.0000e+00,7.9527e+00,5.0245e+00,5.0000e-01,7.9527e+00,5.0245e+00,1.0000e+00,8.0343e+00,4.9700e+00,5.0000e-01,8.0343e+00,4.9700e+00,1.0000e+00,8.1081e+00,4.9053e+00,5.0000e-01,8.1081e+00,4.9053e+00,1.0000e+00,8.1727e+00,4.8316e+00,5.0000e-01,8.1727e+00,4.8316e+00,1.0000e+00,8.2272e+00,4.7500e+00,5.0000e-01,8.2272e+00,4.7500e+00,1.0000e+00,8.2706e+00,4.6620e+00,5.0000e-01,8.2706e+00,4.6620e+00,1.0000e+00,8.3022e+00,4.5691e+00,5.0000e-01,8.3022e+00,4.5691e+00,1.0000e+00,8.3213e+00,4.4729e+00,5.0000e-01,8.3213e+00,4.4729e+00,1.0000e+00,8.3277e+00,4.3750e+00,5.0000e-01,8.3277e+00,4.3750e+00,1.0000e+00,8.3213e+00,4.2771e+00,5.0000e-01,8.3213e+00,4.2771e+00,1.0000e+00,8.3022e+00,4.1809e+00,5.0000e-01,8.3022e+00,4.1809e+00,1.0000e+00,8.2706e+00,4.0880e+00,5.0000e-01,8.2706e+00,4.0880e+00,1.0000e+00,8.2272e+00,4.0000e+00,5.0000e-01,8.2272e+00,4.0000e+00,1.0000e+00,8.1727e+00,3.9184e+00,5.0000e-01,8.1727e+00,3.9184e+00,1.0000e+00,8.1081e+00,3.8447e+00,5.0000e-01,8.1081e+00,3.8447e+00,1.0000e+00,8.0343e+00,3.7800e+00,5.0000e-01,8.0343e+00,3.7800e+00,1.0000e+00,7.9527e+00,3.7255e+00,5.0000e-01,7.9527e+00,3.7255e+00,1.0000e+00,7.8647e+00,3.6821e+00,5.0000e-01,7.8647e+00,3.6821e+00,1.0000e+00,7.7718e+00,3.6506e+00,5.0000e-01,7.7718e+00,3.6506e+00,1.0000e+00,7.6756e+00,3.6314e+00,5.0000e-01,7.6756e+00,3.6314e+00,1.0000e+00});
			return Coordinate_7_490_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #491, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_491_vector()
		{
			MFVec3f Normal_7_491_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00});
			return Normal_7_491_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #503, 315 total numbers made up of 105 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_503_point()
		{
			MFVec3f Coordinate_7_503_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_503_point_1()))
				.append(new MFVec3f(getCoordinate_7_503_point_2()));
			return Coordinate_7_503_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #516, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_516_point()
		{
			MFVec3f Coordinate_7_516_point = new MFVec3f(new double[] {0.0000e+00,-1.2500e+00,1.1250e+01,0.0000e+00,-1.2500e+00,1.8750e+01,-1.6316e-01,-1.2393e+00,1.1250e+01,-1.6316e-01,-1.2393e+00,1.8750e+01,-3.2352e-01,-1.2074e+00,1.1250e+01,-3.2352e-01,-1.2074e+00,1.8750e+01,-4.7835e-01,-1.1548e+00,1.1250e+01,-4.7835e-01,-1.1548e+00,1.8750e+01,-6.2500e-01,-1.0825e+00,1.1250e+01,-6.2500e-01,-1.0825e+00,1.8750e+01,-7.6095e-01,-9.9169e-01,1.1250e+01,-7.6095e-01,-9.9169e-01,1.8750e+01,-8.8388e-01,-8.8388e-01,1.1250e+01,-8.8388e-01,-8.8388e-01,1.8750e+01,-9.9169e-01,-7.6095e-01,1.1250e+01,-9.9169e-01,-7.6095e-01,1.8750e+01,-1.0825e+00,-6.2500e-01,1.1250e+01,-1.0825e+00,-6.2500e-01,1.8750e+01,-1.1548e+00,-4.7835e-01,1.1250e+01,-1.1548e+00,-4.7835e-01,1.8750e+01,-1.2074e+00,-3.2352e-01,1.1250e+01,-1.2074e+00,-3.2352e-01,1.8750e+01,-1.2393e+00,-1.6316e-01,1.1250e+01,-1.2393e+00,-1.6316e-01,1.8750e+01,-1.2500e+00,-7.6540e-17,1.1250e+01,-1.2500e+00,-7.6540e-17,1.8750e+01,-1.2393e+00,1.6316e-01,1.1250e+01,-1.2393e+00,1.6316e-01,1.8750e+01,-1.2074e+00,3.2352e-01,1.1250e+01,-1.2074e+00,3.2352e-01,1.8750e+01,-1.1548e+00,4.7835e-01,1.1250e+01,-1.1548e+00,4.7835e-01,1.8750e+01,-1.0825e+00,6.2500e-01,1.1250e+01,-1.0825e+00,6.2500e-01,1.8750e+01,-9.9169e-01,7.6095e-01,1.1250e+01,-9.9169e-01,7.6095e-01,1.8750e+01,-8.8388e-01,8.8388e-01,1.1250e+01,-8.8388e-01,8.8388e-01,1.8750e+01,-7.6095e-01,9.9169e-01,1.1250e+01,-7.6095e-01,9.9169e-01,1.8750e+01,-6.2500e-01,1.0825e+00,1.1250e+01,-6.2500e-01,1.0825e+00,1.8750e+01,-4.7835e-01,1.1548e+00,1.1250e+01,-4.7835e-01,1.1548e+00,1.8750e+01,-3.2352e-01,1.2074e+00,1.1250e+01,-3.2352e-01,1.2074e+00,1.8750e+01,-1.6316e-01,1.2393e+00,1.1250e+01,-1.6316e-01,1.2393e+00,1.8750e+01,-1.5308e-16,1.2500e+00,1.1250e+01,-1.5308e-16,1.2500e+00,1.8750e+01,1.6316e-01,1.2393e+00,1.1250e+01,1.6316e-01,1.2393e+00,1.8750e+01,3.2352e-01,1.2074e+00,1.1250e+01,3.2352e-01,1.2074e+00,1.8750e+01,4.7835e-01,1.1548e+00,1.1250e+01,4.7835e-01,1.1548e+00,1.8750e+01,6.2500e-01,1.0825e+00,1.1250e+01,6.2500e-01,1.0825e+00,1.8750e+01,7.6095e-01,9.9169e-01,1.1250e+01,7.6095e-01,9.9169e-01,1.8750e+01,8.8388e-01,8.8388e-01,1.1250e+01,8.8388e-01,8.8388e-01,1.8750e+01,9.9169e-01,7.6095e-01,1.1250e+01,9.9169e-01,7.6095e-01,1.8750e+01,1.0825e+00,6.2500e-01,1.1250e+01,1.0825e+00,6.2500e-01,1.8750e+01,1.1548e+00,4.7835e-01,1.1250e+01,1.1548e+00,4.7835e-01,1.8750e+01,1.2074e+00,3.2352e-01,1.1250e+01,1.2074e+00,3.2352e-01,1.8750e+01,1.2393e+00,1.6316e-01,1.1250e+01,1.2393e+00,1.6316e-01,1.8750e+01,1.2500e+00,2.2962e-16,1.1250e+01,1.2500e+00,2.2962e-16,1.8750e+01,1.2393e+00,-1.6316e-01,1.1250e+01,1.2393e+00,-1.6316e-01,1.8750e+01,1.2074e+00,-3.2352e-01,1.1250e+01,1.2074e+00,-3.2352e-01,1.8750e+01,1.1548e+00,-4.7835e-01,1.1250e+01,1.1548e+00,-4.7835e-01,1.8750e+01,1.0825e+00,-6.2500e-01,1.1250e+01,1.0825e+00,-6.2500e-01,1.8750e+01,9.9169e-01,-7.6095e-01,1.1250e+01,9.9169e-01,-7.6095e-01,1.8750e+01,8.8388e-01,-8.8388e-01,1.1250e+01,8.8388e-01,-8.8388e-01,1.8750e+01,7.6095e-01,-9.9169e-01,1.1250e+01,7.6095e-01,-9.9169e-01,1.8750e+01,6.2500e-01,-1.0825e+00,1.1250e+01,6.2500e-01,-1.0825e+00,1.8750e+01,4.7835e-01,-1.1548e+00,1.1250e+01,4.7835e-01,-1.1548e+00,1.8750e+01,3.2352e-01,-1.2074e+00,1.1250e+01,3.2352e-01,-1.2074e+00,1.8750e+01,1.6316e-01,-1.2393e+00,1.1250e+01,1.6316e-01,-1.2393e+00,1.8750e+01});
			return Coordinate_7_516_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #517, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_517_vector()
		{
			MFVec3f Normal_7_517_vector = new MFVec3f(new double[] {0.0000e+00,-1.0000e+00,0.0000e+00,0.0000e+00,-1.0000e+00,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-1.3053e-01,-9.9144e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-2.5882e-01,-9.6593e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-3.8268e-01,-9.2388e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-5.0000e-01,-8.6603e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-6.0876e-01,-7.9335e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.0711e-01,-7.0711e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-7.9335e-01,-6.0876e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-8.6603e-01,-5.0000e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.2388e-01,-3.8268e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.6593e-01,-2.5882e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-9.9144e-01,-1.3053e-01,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-1.0000e+00,-6.1232e-17,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.9144e-01,1.3053e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.6593e-01,2.5882e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-9.2388e-01,3.8268e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-8.6603e-01,5.0000e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.9335e-01,6.0876e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-6.0876e-01,7.9335e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-5.0000e-01,8.6603e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-3.8268e-01,9.2388e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-2.5882e-01,9.6593e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.3053e-01,9.9144e-01,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,-1.2246e-16,1.0000e+00,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,1.3053e-01,9.9144e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,2.5882e-01,9.6593e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,3.8268e-01,9.2388e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,5.0000e-01,8.6603e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,6.0876e-01,7.9335e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.0711e-01,7.0711e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,7.9335e-01,6.0876e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,8.6603e-01,5.0000e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.2388e-01,3.8268e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.6593e-01,2.5882e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,9.9144e-01,1.3053e-01,0.0000e+00,1.0000e+00,1.8370e-16,0.0000e+00,1.0000e+00,1.8370e-16,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.9144e-01,-1.3053e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.6593e-01,-2.5882e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,9.2388e-01,-3.8268e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,8.6603e-01,-5.0000e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.9335e-01,-6.0876e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,7.0711e-01,-7.0711e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,6.0876e-01,-7.9335e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,5.0000e-01,-8.6603e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,3.8268e-01,-9.2388e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,2.5882e-01,-9.6593e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00,1.3053e-01,-9.9144e-01,0.0000e+00});
			return Normal_7_517_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #523, 99 total numbers made up of 33 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_523_point()
		{
			MFVec3f Coordinate_7_523_point = new MFVec3f(new double[] {0.0000e+00,0.0000e+00,1.9000e+01,0.0000e+00,-1.0000e+00,1.9000e+01,1.9509e-01,-9.8079e-01,1.9000e+01,3.8268e-01,-9.2388e-01,1.9000e+01,5.5557e-01,-8.3147e-01,1.9000e+01,7.0711e-01,-7.0711e-01,1.9000e+01,8.3147e-01,-5.5557e-01,1.9000e+01,9.2388e-01,-3.8268e-01,1.9000e+01,9.8079e-01,-1.9509e-01,1.9000e+01,1.0000e+00,-6.1232e-17,1.9000e+01,9.8079e-01,1.9509e-01,1.9000e+01,9.2388e-01,3.8268e-01,1.9000e+01,8.3147e-01,5.5557e-01,1.9000e+01,7.0711e-01,7.0711e-01,1.9000e+01,5.5557e-01,8.3147e-01,1.9000e+01,3.8268e-01,9.2388e-01,1.9000e+01,1.9509e-01,9.8079e-01,1.9000e+01,1.2246e-16,1.0000e+00,1.9000e+01,-1.9509e-01,9.8079e-01,1.9000e+01,-3.8268e-01,9.2388e-01,1.9000e+01,-5.5557e-01,8.3147e-01,1.9000e+01,-7.0711e-01,7.0711e-01,1.9000e+01,-8.3147e-01,5.5557e-01,1.9000e+01,-9.2388e-01,3.8268e-01,1.9000e+01,-9.8079e-01,1.9509e-01,1.9000e+01,-1.0000e+00,1.8370e-16,1.9000e+01,-9.8079e-01,-1.9509e-01,1.9000e+01,-9.2388e-01,-3.8268e-01,1.9000e+01,-8.3147e-01,-5.5557e-01,1.9000e+01,-7.0711e-01,-7.0711e-01,1.9000e+01,-5.5557e-01,-8.3147e-01,1.9000e+01,-3.8268e-01,-9.2388e-01,1.9000e+01,-1.9509e-01,-9.8079e-01,1.9000e+01});
			return Coordinate_7_523_point;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #529, 480 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_529_index()
		{
			MFInt32 IndexedTriangleSet_6_529_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_529_index_1()));
			return IndexedTriangleSet_6_529_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #529, 486 total numbers made up of 162 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_529_point()
		{
			MFVec3f Coordinate_7_529_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_529_point_1()))
				.append(new MFVec3f(getCoordinate_7_529_point_2()));
			return Coordinate_7_529_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #553, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_553_point()
		{
			MFVec3f Coordinate_7_553_point = new MFVec3f(new double[] {2.3000e+00,-1.9178e+00,6.9610e+00,2.3000e+00,-1.9453e+00,6.9591e+00,2.3000e+00,-1.9724e+00,6.9538e+00,2.3000e+00,-1.9985e+00,6.9449e+00,2.3000e+00,-2.0232e+00,6.9327e+00,2.3000e+00,-2.0462e+00,6.9174e+00,2.3000e+00,-2.0669e+00,6.8992e+00,2.3000e+00,-2.0851e+00,6.8784e+00,2.3000e+00,-2.1004e+00,6.8555e+00,2.3000e+00,-2.1126e+00,6.8307e+00,2.3000e+00,-2.1215e+00,6.8046e+00,2.3000e+00,-2.1269e+00,6.7775e+00,2.3000e+00,-2.1287e+00,6.7500e+00,2.3000e+00,-2.1269e+00,6.7225e+00,2.3000e+00,-2.1215e+00,6.6954e+00,2.3000e+00,-2.1126e+00,6.6693e+00,2.3000e+00,-2.1004e+00,6.6445e+00,2.3000e+00,-2.0851e+00,6.6216e+00,2.3000e+00,-2.0669e+00,6.6008e+00,2.3000e+00,-2.0462e+00,6.5826e+00,2.3000e+00,-2.0232e+00,6.5673e+00,2.3000e+00,-1.9985e+00,6.5551e+00,2.3000e+00,-1.9724e+00,6.5462e+00,2.3000e+00,-1.9453e+00,6.5409e+00,2.3000e+00,-1.9178e+00,6.5390e+00,2.3000e+00,-1.8902e+00,6.5409e+00,2.3000e+00,-1.8632e+00,6.5462e+00,2.3000e+00,-1.8370e+00,6.5551e+00,2.3000e+00,-1.8123e+00,6.5673e+00,2.3000e+00,-1.7893e+00,6.5826e+00,2.3000e+00,-1.7686e+00,6.6008e+00,2.3000e+00,-1.7504e+00,6.6216e+00,2.3000e+00,-1.7351e+00,6.6445e+00,2.3000e+00,-1.7229e+00,6.6693e+00,2.3000e+00,-1.7140e+00,6.6954e+00,2.3000e+00,-1.7086e+00,6.7225e+00,2.3000e+00,-1.7068e+00,6.7500e+00,2.3000e+00,-1.7086e+00,6.7775e+00,2.3000e+00,-1.7140e+00,6.8046e+00,2.3000e+00,-1.7229e+00,6.8307e+00,2.3000e+00,-1.7351e+00,6.8555e+00,2.3000e+00,-1.7504e+00,6.8784e+00,2.3000e+00,-1.7686e+00,6.8992e+00,2.3000e+00,-1.7893e+00,6.9174e+00,2.3000e+00,-1.8123e+00,6.9327e+00,2.3000e+00,-1.8370e+00,6.9449e+00,2.3000e+00,-1.8632e+00,6.9538e+00,2.3000e+00,-1.8902e+00,6.9591e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00,2.1732e+00,-1.9178e+00,6.7500e+00});
			return Coordinate_7_553_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #554, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_554_vector()
		{
			MFVec3f Normal_7_554_vector = new MFVec3f(new double[] {8.5717e-01,-0.0000e+00,-5.1504e-01,8.5717e-01,6.7226e-02,-5.1063e-01,8.5717e-01,1.3330e-01,-4.9749e-01,8.5717e-01,1.9710e-01,-4.7583e-01,8.5717e-01,2.5752e-01,-4.4604e-01,8.5717e-01,3.1354e-01,-4.0861e-01,8.5717e-01,3.6419e-01,-3.6419e-01,8.5717e-01,4.0861e-01,-3.1354e-01,8.5717e-01,4.4604e-01,-2.5752e-01,8.5717e-01,4.7583e-01,-1.9710e-01,8.5717e-01,4.9749e-01,-1.3330e-01,8.5717e-01,5.1063e-01,-6.7226e-02,8.5717e-01,5.1504e-01,-3.1537e-17,8.5717e-01,5.1063e-01,6.7226e-02,8.5717e-01,4.9749e-01,1.3330e-01,8.5717e-01,4.7583e-01,1.9710e-01,8.5717e-01,4.4604e-01,2.5752e-01,8.5717e-01,4.0861e-01,3.1354e-01,8.5717e-01,3.6419e-01,3.6419e-01,8.5717e-01,3.1354e-01,4.0861e-01,8.5717e-01,2.5752e-01,4.4604e-01,8.5717e-01,1.9710e-01,4.7583e-01,8.5717e-01,1.3330e-01,4.9749e-01,8.5717e-01,6.7226e-02,5.1063e-01,8.5717e-01,6.3074e-17,5.1504e-01,8.5717e-01,-6.7226e-02,5.1063e-01,8.5717e-01,-1.3330e-01,4.9749e-01,8.5717e-01,-1.9710e-01,4.7583e-01,8.5717e-01,-2.5752e-01,4.4604e-01,8.5717e-01,-3.1354e-01,4.0861e-01,8.5717e-01,-3.6419e-01,3.6419e-01,8.5717e-01,-4.0861e-01,3.1354e-01,8.5717e-01,-4.4604e-01,2.5752e-01,8.5717e-01,-4.7583e-01,1.9710e-01,8.5717e-01,-4.9749e-01,1.3330e-01,8.5717e-01,-5.1063e-01,6.7226e-02,8.5717e-01,-5.1504e-01,9.4611e-17,8.5717e-01,-5.1063e-01,-6.7226e-02,8.5717e-01,-4.9749e-01,-1.3330e-01,8.5717e-01,-4.7583e-01,-1.9710e-01,8.5717e-01,-4.4604e-01,-2.5752e-01,8.5717e-01,-4.0861e-01,-3.1354e-01,8.5717e-01,-3.6419e-01,-3.6419e-01,8.5717e-01,-3.1354e-01,-4.0861e-01,8.5717e-01,-2.5752e-01,-4.4604e-01,8.5717e-01,-1.9710e-01,-4.7583e-01,8.5717e-01,-1.3330e-01,-4.9749e-01,8.5717e-01,-6.7226e-02,-5.1063e-01,8.5717e-01,3.3685e-02,-5.1394e-01,8.5717e-01,1.0048e-01,-5.0514e-01,8.5717e-01,1.6555e-01,-4.8771e-01,8.5717e-01,2.2780e-01,-4.6192e-01,8.5717e-01,2.8614e-01,-4.2824e-01,8.5717e-01,3.3959e-01,-3.8723e-01,8.5717e-01,3.8723e-01,-3.3959e-01,8.5717e-01,4.2824e-01,-2.8614e-01,8.5717e-01,4.6192e-01,-2.2780e-01,8.5717e-01,4.8771e-01,-1.6555e-01,8.5717e-01,5.0514e-01,-1.0048e-01,8.5717e-01,5.1394e-01,-3.3685e-02,8.5717e-01,5.1394e-01,3.3685e-02,8.5717e-01,5.0514e-01,1.0048e-01,8.5717e-01,4.8771e-01,1.6555e-01,8.5717e-01,4.6192e-01,2.2780e-01,8.5717e-01,4.2824e-01,2.8614e-01,8.5717e-01,3.8723e-01,3.3959e-01,8.5717e-01,3.3959e-01,3.8723e-01,8.5717e-01,2.8614e-01,4.2824e-01,8.5717e-01,2.2780e-01,4.6192e-01,8.5717e-01,1.6555e-01,4.8771e-01,8.5717e-01,1.0048e-01,5.0514e-01,8.5717e-01,3.3685e-02,5.1394e-01,8.5717e-01,-3.3685e-02,5.1394e-01,8.5717e-01,-1.0048e-01,5.0514e-01,8.5717e-01,-1.6555e-01,4.8771e-01,8.5717e-01,-2.2780e-01,4.6192e-01,8.5717e-01,-2.8614e-01,4.2824e-01,8.5717e-01,-3.3959e-01,3.8723e-01,8.5717e-01,-3.8723e-01,3.3959e-01,8.5717e-01,-4.2824e-01,2.8614e-01,8.5717e-01,-4.6192e-01,2.2780e-01,8.5717e-01,-4.8771e-01,1.6555e-01,8.5717e-01,-5.0514e-01,1.0048e-01,8.5717e-01,-5.1394e-01,3.3685e-02,8.5717e-01,-5.1394e-01,-3.3685e-02,8.5717e-01,-5.0514e-01,-1.0048e-01,8.5717e-01,-4.8771e-01,-1.6555e-01,8.5717e-01,-4.6192e-01,-2.2780e-01,8.5717e-01,-4.2824e-01,-2.8614e-01,8.5717e-01,-3.8723e-01,-3.3959e-01,8.5717e-01,-3.3959e-01,-3.8723e-01,8.5717e-01,-2.8614e-01,-4.2824e-01,8.5717e-01,-2.2780e-01,-4.6192e-01,8.5717e-01,-1.6555e-01,-4.8771e-01,8.5717e-01,-1.0048e-01,-5.0514e-01,8.5717e-01,-3.3685e-02,-5.1394e-01});
			return Normal_7_554_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #560, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_560_point()
		{
			MFVec3f Coordinate_7_560_point = new MFVec3f(new double[] {2.3000e+00,-1.9178e+00,6.5390e+00,3.5000e+00,-1.9178e+00,6.5390e+00,2.3000e+00,-1.9453e+00,6.5409e+00,3.5000e+00,-1.9453e+00,6.5409e+00,2.3000e+00,-1.9724e+00,6.5462e+00,3.5000e+00,-1.9724e+00,6.5462e+00,2.3000e+00,-1.9985e+00,6.5551e+00,3.5000e+00,-1.9985e+00,6.5551e+00,2.3000e+00,-2.0232e+00,6.5673e+00,3.5000e+00,-2.0232e+00,6.5673e+00,2.3000e+00,-2.0462e+00,6.5826e+00,3.5000e+00,-2.0462e+00,6.5826e+00,2.3000e+00,-2.0669e+00,6.6008e+00,3.5000e+00,-2.0669e+00,6.6008e+00,2.3000e+00,-2.0851e+00,6.6216e+00,3.5000e+00,-2.0851e+00,6.6216e+00,2.3000e+00,-2.1004e+00,6.6445e+00,3.5000e+00,-2.1004e+00,6.6445e+00,2.3000e+00,-2.1126e+00,6.6693e+00,3.5000e+00,-2.1126e+00,6.6693e+00,2.3000e+00,-2.1215e+00,6.6954e+00,3.5000e+00,-2.1215e+00,6.6954e+00,2.3000e+00,-2.1269e+00,6.7225e+00,3.5000e+00,-2.1269e+00,6.7225e+00,2.3000e+00,-2.1287e+00,6.7500e+00,3.5000e+00,-2.1287e+00,6.7500e+00,2.3000e+00,-2.1269e+00,6.7775e+00,3.5000e+00,-2.1269e+00,6.7775e+00,2.3000e+00,-2.1215e+00,6.8046e+00,3.5000e+00,-2.1215e+00,6.8046e+00,2.3000e+00,-2.1126e+00,6.8307e+00,3.5000e+00,-2.1126e+00,6.8307e+00,2.3000e+00,-2.1004e+00,6.8555e+00,3.5000e+00,-2.1004e+00,6.8555e+00,2.3000e+00,-2.0851e+00,6.8784e+00,3.5000e+00,-2.0851e+00,6.8784e+00,2.3000e+00,-2.0669e+00,6.8992e+00,3.5000e+00,-2.0669e+00,6.8992e+00,2.3000e+00,-2.0462e+00,6.9174e+00,3.5000e+00,-2.0462e+00,6.9174e+00,2.3000e+00,-2.0232e+00,6.9327e+00,3.5000e+00,-2.0232e+00,6.9327e+00,2.3000e+00,-1.9985e+00,6.9449e+00,3.5000e+00,-1.9985e+00,6.9449e+00,2.3000e+00,-1.9724e+00,6.9538e+00,3.5000e+00,-1.9724e+00,6.9538e+00,2.3000e+00,-1.9453e+00,6.9591e+00,3.5000e+00,-1.9453e+00,6.9591e+00,2.3000e+00,-1.9178e+00,6.9610e+00,3.5000e+00,-1.9178e+00,6.9610e+00,2.3000e+00,-1.8902e+00,6.9591e+00,3.5000e+00,-1.8902e+00,6.9591e+00,2.3000e+00,-1.8632e+00,6.9538e+00,3.5000e+00,-1.8632e+00,6.9538e+00,2.3000e+00,-1.8370e+00,6.9449e+00,3.5000e+00,-1.8370e+00,6.9449e+00,2.3000e+00,-1.8123e+00,6.9327e+00,3.5000e+00,-1.8123e+00,6.9327e+00,2.3000e+00,-1.7893e+00,6.9174e+00,3.5000e+00,-1.7893e+00,6.9174e+00,2.3000e+00,-1.7686e+00,6.8992e+00,3.5000e+00,-1.7686e+00,6.8992e+00,2.3000e+00,-1.7504e+00,6.8784e+00,3.5000e+00,-1.7504e+00,6.8784e+00,2.3000e+00,-1.7351e+00,6.8555e+00,3.5000e+00,-1.7351e+00,6.8555e+00,2.3000e+00,-1.7229e+00,6.8307e+00,3.5000e+00,-1.7229e+00,6.8307e+00,2.3000e+00,-1.7140e+00,6.8046e+00,3.5000e+00,-1.7140e+00,6.8046e+00,2.3000e+00,-1.7086e+00,6.7775e+00,3.5000e+00,-1.7086e+00,6.7775e+00,2.3000e+00,-1.7068e+00,6.7500e+00,3.5000e+00,-1.7068e+00,6.7500e+00,2.3000e+00,-1.7086e+00,6.7225e+00,3.5000e+00,-1.7086e+00,6.7225e+00,2.3000e+00,-1.7140e+00,6.6954e+00,3.5000e+00,-1.7140e+00,6.6954e+00,2.3000e+00,-1.7229e+00,6.6693e+00,3.5000e+00,-1.7229e+00,6.6693e+00,2.3000e+00,-1.7351e+00,6.6445e+00,3.5000e+00,-1.7351e+00,6.6445e+00,2.3000e+00,-1.7504e+00,6.6216e+00,3.5000e+00,-1.7504e+00,6.6216e+00,2.3000e+00,-1.7686e+00,6.6008e+00,3.5000e+00,-1.7686e+00,6.6008e+00,2.3000e+00,-1.7893e+00,6.5826e+00,3.5000e+00,-1.7893e+00,6.5826e+00,2.3000e+00,-1.8123e+00,6.5673e+00,3.5000e+00,-1.8123e+00,6.5673e+00,2.3000e+00,-1.8370e+00,6.5551e+00,3.5000e+00,-1.8370e+00,6.5551e+00,2.3000e+00,-1.8632e+00,6.5462e+00,3.5000e+00,-1.8632e+00,6.5462e+00,2.3000e+00,-1.8902e+00,6.5409e+00,3.5000e+00,-1.8902e+00,6.5409e+00});
			return Coordinate_7_560_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #561, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_561_vector()
		{
			MFVec3f Normal_7_561_vector = new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01});
			return Normal_7_561_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #567, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_567_point()
		{
			MFVec3f Coordinate_7_567_point = new MFVec3f(new double[] {2.3000e+00,-1.6129e+00,8.3360e+00,2.3000e+00,-1.6405e+00,8.3341e+00,2.3000e+00,-1.6675e+00,8.3288e+00,2.3000e+00,-1.6937e+00,8.3199e+00,2.3000e+00,-1.7184e+00,8.3077e+00,2.3000e+00,-1.7413e+00,8.2924e+00,2.3000e+00,-1.7621e+00,8.2742e+00,2.3000e+00,-1.7803e+00,8.2534e+00,2.3000e+00,-1.7956e+00,8.2305e+00,2.3000e+00,-1.8078e+00,8.2057e+00,2.3000e+00,-1.8167e+00,8.1796e+00,2.3000e+00,-1.8221e+00,8.1525e+00,2.3000e+00,-1.8239e+00,8.1250e+00,2.3000e+00,-1.8221e+00,8.0975e+00,2.3000e+00,-1.8167e+00,8.0704e+00,2.3000e+00,-1.8078e+00,8.0443e+00,2.3000e+00,-1.7956e+00,8.0195e+00,2.3000e+00,-1.7803e+00,7.9966e+00,2.3000e+00,-1.7621e+00,7.9758e+00,2.3000e+00,-1.7413e+00,7.9576e+00,2.3000e+00,-1.7184e+00,7.9423e+00,2.3000e+00,-1.6937e+00,7.9301e+00,2.3000e+00,-1.6675e+00,7.9212e+00,2.3000e+00,-1.6405e+00,7.9159e+00,2.3000e+00,-1.6129e+00,7.9140e+00,2.3000e+00,-1.5854e+00,7.9159e+00,2.3000e+00,-1.5583e+00,7.9212e+00,2.3000e+00,-1.5322e+00,7.9301e+00,2.3000e+00,-1.5074e+00,7.9423e+00,2.3000e+00,-1.4845e+00,7.9576e+00,2.3000e+00,-1.4638e+00,7.9758e+00,2.3000e+00,-1.4456e+00,7.9966e+00,2.3000e+00,-1.4302e+00,8.0195e+00,2.3000e+00,-1.4180e+00,8.0443e+00,2.3000e+00,-1.4092e+00,8.0704e+00,2.3000e+00,-1.4038e+00,8.0975e+00,2.3000e+00,-1.4020e+00,8.1250e+00,2.3000e+00,-1.4038e+00,8.1525e+00,2.3000e+00,-1.4092e+00,8.1796e+00,2.3000e+00,-1.4180e+00,8.2057e+00,2.3000e+00,-1.4302e+00,8.2305e+00,2.3000e+00,-1.4456e+00,8.2534e+00,2.3000e+00,-1.4638e+00,8.2742e+00,2.3000e+00,-1.4845e+00,8.2924e+00,2.3000e+00,-1.5074e+00,8.3077e+00,2.3000e+00,-1.5322e+00,8.3199e+00,2.3000e+00,-1.5583e+00,8.3288e+00,2.3000e+00,-1.5854e+00,8.3341e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00,2.1732e+00,-1.6129e+00,8.1250e+00});
			return Coordinate_7_567_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #568, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_568_vector()
		{
			MFVec3f Normal_7_568_vector = new MFVec3f(new double[] {8.5717e-01,-0.0000e+00,-5.1504e-01,8.5717e-01,6.7226e-02,-5.1063e-01,8.5717e-01,1.3330e-01,-4.9749e-01,8.5717e-01,1.9710e-01,-4.7583e-01,8.5717e-01,2.5752e-01,-4.4604e-01,8.5717e-01,3.1354e-01,-4.0861e-01,8.5717e-01,3.6419e-01,-3.6419e-01,8.5717e-01,4.0861e-01,-3.1354e-01,8.5717e-01,4.4604e-01,-2.5752e-01,8.5717e-01,4.7583e-01,-1.9710e-01,8.5717e-01,4.9749e-01,-1.3330e-01,8.5717e-01,5.1063e-01,-6.7226e-02,8.5717e-01,5.1504e-01,-3.1537e-17,8.5717e-01,5.1063e-01,6.7226e-02,8.5717e-01,4.9749e-01,1.3330e-01,8.5717e-01,4.7583e-01,1.9710e-01,8.5717e-01,4.4604e-01,2.5752e-01,8.5717e-01,4.0861e-01,3.1354e-01,8.5717e-01,3.6419e-01,3.6419e-01,8.5717e-01,3.1354e-01,4.0861e-01,8.5717e-01,2.5752e-01,4.4604e-01,8.5717e-01,1.9710e-01,4.7583e-01,8.5717e-01,1.3330e-01,4.9749e-01,8.5717e-01,6.7226e-02,5.1063e-01,8.5717e-01,6.3074e-17,5.1504e-01,8.5717e-01,-6.7226e-02,5.1063e-01,8.5717e-01,-1.3330e-01,4.9749e-01,8.5717e-01,-1.9710e-01,4.7583e-01,8.5717e-01,-2.5752e-01,4.4604e-01,8.5717e-01,-3.1354e-01,4.0861e-01,8.5717e-01,-3.6419e-01,3.6419e-01,8.5717e-01,-4.0861e-01,3.1354e-01,8.5717e-01,-4.4604e-01,2.5752e-01,8.5717e-01,-4.7583e-01,1.9710e-01,8.5717e-01,-4.9749e-01,1.3330e-01,8.5717e-01,-5.1063e-01,6.7226e-02,8.5717e-01,-5.1504e-01,9.4611e-17,8.5717e-01,-5.1063e-01,-6.7226e-02,8.5717e-01,-4.9749e-01,-1.3330e-01,8.5717e-01,-4.7583e-01,-1.9710e-01,8.5717e-01,-4.4604e-01,-2.5752e-01,8.5717e-01,-4.0861e-01,-3.1354e-01,8.5717e-01,-3.6419e-01,-3.6419e-01,8.5717e-01,-3.1354e-01,-4.0861e-01,8.5717e-01,-2.5752e-01,-4.4604e-01,8.5717e-01,-1.9710e-01,-4.7583e-01,8.5717e-01,-1.3330e-01,-4.9749e-01,8.5717e-01,-6.7226e-02,-5.1063e-01,8.5717e-01,3.3685e-02,-5.1394e-01,8.5717e-01,1.0048e-01,-5.0514e-01,8.5717e-01,1.6555e-01,-4.8771e-01,8.5717e-01,2.2780e-01,-4.6192e-01,8.5717e-01,2.8614e-01,-4.2824e-01,8.5717e-01,3.3959e-01,-3.8723e-01,8.5717e-01,3.8723e-01,-3.3959e-01,8.5717e-01,4.2824e-01,-2.8614e-01,8.5717e-01,4.6192e-01,-2.2780e-01,8.5717e-01,4.8771e-01,-1.6555e-01,8.5717e-01,5.0514e-01,-1.0048e-01,8.5717e-01,5.1394e-01,-3.3685e-02,8.5717e-01,5.1394e-01,3.3685e-02,8.5717e-01,5.0514e-01,1.0048e-01,8.5717e-01,4.8771e-01,1.6555e-01,8.5717e-01,4.6192e-01,2.2780e-01,8.5717e-01,4.2824e-01,2.8614e-01,8.5717e-01,3.8723e-01,3.3959e-01,8.5717e-01,3.3959e-01,3.8723e-01,8.5717e-01,2.8614e-01,4.2824e-01,8.5717e-01,2.2780e-01,4.6192e-01,8.5717e-01,1.6555e-01,4.8771e-01,8.5717e-01,1.0048e-01,5.0514e-01,8.5717e-01,3.3685e-02,5.1394e-01,8.5717e-01,-3.3685e-02,5.1394e-01,8.5717e-01,-1.0048e-01,5.0514e-01,8.5717e-01,-1.6555e-01,4.8771e-01,8.5717e-01,-2.2780e-01,4.6192e-01,8.5717e-01,-2.8614e-01,4.2824e-01,8.5717e-01,-3.3959e-01,3.8723e-01,8.5717e-01,-3.8723e-01,3.3959e-01,8.5717e-01,-4.2824e-01,2.8614e-01,8.5717e-01,-4.6192e-01,2.2780e-01,8.5717e-01,-4.8771e-01,1.6555e-01,8.5717e-01,-5.0514e-01,1.0048e-01,8.5717e-01,-5.1394e-01,3.3685e-02,8.5717e-01,-5.1394e-01,-3.3685e-02,8.5717e-01,-5.0514e-01,-1.0048e-01,8.5717e-01,-4.8771e-01,-1.6555e-01,8.5717e-01,-4.6192e-01,-2.2780e-01,8.5717e-01,-4.2824e-01,-2.8614e-01,8.5717e-01,-3.8723e-01,-3.3959e-01,8.5717e-01,-3.3959e-01,-3.8723e-01,8.5717e-01,-2.8614e-01,-4.2824e-01,8.5717e-01,-2.2780e-01,-4.6192e-01,8.5717e-01,-1.6555e-01,-4.8771e-01,8.5717e-01,-1.0048e-01,-5.0514e-01,8.5717e-01,-3.3685e-02,-5.1394e-01});
			return Normal_7_568_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #574, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_574_point()
		{
			MFVec3f Coordinate_7_574_point = new MFVec3f(new double[] {2.3000e+00,-1.6129e+00,7.9140e+00,3.5000e+00,-1.6129e+00,7.9140e+00,2.3000e+00,-1.6405e+00,7.9159e+00,3.5000e+00,-1.6405e+00,7.9159e+00,2.3000e+00,-1.6675e+00,7.9212e+00,3.5000e+00,-1.6675e+00,7.9212e+00,2.3000e+00,-1.6937e+00,7.9301e+00,3.5000e+00,-1.6937e+00,7.9301e+00,2.3000e+00,-1.7184e+00,7.9423e+00,3.5000e+00,-1.7184e+00,7.9423e+00,2.3000e+00,-1.7413e+00,7.9576e+00,3.5000e+00,-1.7413e+00,7.9576e+00,2.3000e+00,-1.7621e+00,7.9758e+00,3.5000e+00,-1.7621e+00,7.9758e+00,2.3000e+00,-1.7803e+00,7.9966e+00,3.5000e+00,-1.7803e+00,7.9966e+00,2.3000e+00,-1.7956e+00,8.0195e+00,3.5000e+00,-1.7956e+00,8.0195e+00,2.3000e+00,-1.8078e+00,8.0443e+00,3.5000e+00,-1.8078e+00,8.0443e+00,2.3000e+00,-1.8167e+00,8.0704e+00,3.5000e+00,-1.8167e+00,8.0704e+00,2.3000e+00,-1.8221e+00,8.0975e+00,3.5000e+00,-1.8221e+00,8.0975e+00,2.3000e+00,-1.8239e+00,8.1250e+00,3.5000e+00,-1.8239e+00,8.1250e+00,2.3000e+00,-1.8221e+00,8.1525e+00,3.5000e+00,-1.8221e+00,8.1525e+00,2.3000e+00,-1.8167e+00,8.1796e+00,3.5000e+00,-1.8167e+00,8.1796e+00,2.3000e+00,-1.8078e+00,8.2057e+00,3.5000e+00,-1.8078e+00,8.2057e+00,2.3000e+00,-1.7956e+00,8.2305e+00,3.5000e+00,-1.7956e+00,8.2305e+00,2.3000e+00,-1.7803e+00,8.2534e+00,3.5000e+00,-1.7803e+00,8.2534e+00,2.3000e+00,-1.7621e+00,8.2742e+00,3.5000e+00,-1.7621e+00,8.2742e+00,2.3000e+00,-1.7413e+00,8.2924e+00,3.5000e+00,-1.7413e+00,8.2924e+00,2.3000e+00,-1.7184e+00,8.3077e+00,3.5000e+00,-1.7184e+00,8.3077e+00,2.3000e+00,-1.6937e+00,8.3199e+00,3.5000e+00,-1.6937e+00,8.3199e+00,2.3000e+00,-1.6675e+00,8.3288e+00,3.5000e+00,-1.6675e+00,8.3288e+00,2.3000e+00,-1.6405e+00,8.3341e+00,3.5000e+00,-1.6405e+00,8.3341e+00,2.3000e+00,-1.6129e+00,8.3360e+00,3.5000e+00,-1.6129e+00,8.3360e+00,2.3000e+00,-1.5854e+00,8.3341e+00,3.5000e+00,-1.5854e+00,8.3341e+00,2.3000e+00,-1.5583e+00,8.3288e+00,3.5000e+00,-1.5583e+00,8.3288e+00,2.3000e+00,-1.5322e+00,8.3199e+00,3.5000e+00,-1.5322e+00,8.3199e+00,2.3000e+00,-1.5074e+00,8.3077e+00,3.5000e+00,-1.5074e+00,8.3077e+00,2.3000e+00,-1.4845e+00,8.2924e+00,3.5000e+00,-1.4845e+00,8.2924e+00,2.3000e+00,-1.4638e+00,8.2742e+00,3.5000e+00,-1.4638e+00,8.2742e+00,2.3000e+00,-1.4456e+00,8.2534e+00,3.5000e+00,-1.4456e+00,8.2534e+00,2.3000e+00,-1.4302e+00,8.2305e+00,3.5000e+00,-1.4302e+00,8.2305e+00,2.3000e+00,-1.4180e+00,8.2057e+00,3.5000e+00,-1.4180e+00,8.2057e+00,2.3000e+00,-1.4092e+00,8.1796e+00,3.5000e+00,-1.4092e+00,8.1796e+00,2.3000e+00,-1.4038e+00,8.1525e+00,3.5000e+00,-1.4038e+00,8.1525e+00,2.3000e+00,-1.4020e+00,8.1250e+00,3.5000e+00,-1.4020e+00,8.1250e+00,2.3000e+00,-1.4038e+00,8.0975e+00,3.5000e+00,-1.4038e+00,8.0975e+00,2.3000e+00,-1.4092e+00,8.0704e+00,3.5000e+00,-1.4092e+00,8.0704e+00,2.3000e+00,-1.4180e+00,8.0443e+00,3.5000e+00,-1.4180e+00,8.0443e+00,2.3000e+00,-1.4302e+00,8.0195e+00,3.5000e+00,-1.4302e+00,8.0195e+00,2.3000e+00,-1.4456e+00,7.9966e+00,3.5000e+00,-1.4456e+00,7.9966e+00,2.3000e+00,-1.4638e+00,7.9758e+00,3.5000e+00,-1.4638e+00,7.9758e+00,2.3000e+00,-1.4845e+00,7.9576e+00,3.5000e+00,-1.4845e+00,7.9576e+00,2.3000e+00,-1.5074e+00,7.9423e+00,3.5000e+00,-1.5074e+00,7.9423e+00,2.3000e+00,-1.5322e+00,7.9301e+00,3.5000e+00,-1.5322e+00,7.9301e+00,2.3000e+00,-1.5583e+00,7.9212e+00,3.5000e+00,-1.5583e+00,7.9212e+00,2.3000e+00,-1.5854e+00,7.9159e+00,3.5000e+00,-1.5854e+00,7.9159e+00});
			return Coordinate_7_574_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #575, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_575_vector()
		{
			MFVec3f Normal_7_575_vector = new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01});
			return Normal_7_575_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #581, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_581_point()
		{
			MFVec3f Coordinate_7_581_point = new MFVec3f(new double[] {2.3000e+00,-1.3081e+00,9.7110e+00,2.3000e+00,-1.3356e+00,9.7091e+00,2.3000e+00,-1.3627e+00,9.7038e+00,2.3000e+00,-1.3888e+00,9.6949e+00,2.3000e+00,-1.4136e+00,9.6827e+00,2.3000e+00,-1.4365e+00,9.6674e+00,2.3000e+00,-1.4573e+00,9.6492e+00,2.3000e+00,-1.4755e+00,9.6284e+00,2.3000e+00,-1.4908e+00,9.6055e+00,2.3000e+00,-1.5030e+00,9.5807e+00,2.3000e+00,-1.5119e+00,9.5546e+00,2.3000e+00,-1.5172e+00,9.5275e+00,2.3000e+00,-1.5190e+00,9.5000e+00,2.3000e+00,-1.5172e+00,9.4725e+00,2.3000e+00,-1.5119e+00,9.4454e+00,2.3000e+00,-1.5030e+00,9.4193e+00,2.3000e+00,-1.4908e+00,9.3945e+00,2.3000e+00,-1.4755e+00,9.3716e+00,2.3000e+00,-1.4573e+00,9.3508e+00,2.3000e+00,-1.4365e+00,9.3326e+00,2.3000e+00,-1.4136e+00,9.3173e+00,2.3000e+00,-1.3888e+00,9.3051e+00,2.3000e+00,-1.3627e+00,9.2962e+00,2.3000e+00,-1.3356e+00,9.2909e+00,2.3000e+00,-1.3081e+00,9.2890e+00,2.3000e+00,-1.2806e+00,9.2909e+00,2.3000e+00,-1.2535e+00,9.2962e+00,2.3000e+00,-1.2274e+00,9.3051e+00,2.3000e+00,-1.2026e+00,9.3173e+00,2.3000e+00,-1.1797e+00,9.3326e+00,2.3000e+00,-1.1589e+00,9.3508e+00,2.3000e+00,-1.1407e+00,9.3716e+00,2.3000e+00,-1.1254e+00,9.3945e+00,2.3000e+00,-1.1132e+00,9.4193e+00,2.3000e+00,-1.1043e+00,9.4454e+00,2.3000e+00,-1.0989e+00,9.4725e+00,2.3000e+00,-1.0971e+00,9.5000e+00,2.3000e+00,-1.0989e+00,9.5275e+00,2.3000e+00,-1.1043e+00,9.5546e+00,2.3000e+00,-1.1132e+00,9.5807e+00,2.3000e+00,-1.1254e+00,9.6055e+00,2.3000e+00,-1.1407e+00,9.6284e+00,2.3000e+00,-1.1589e+00,9.6492e+00,2.3000e+00,-1.1797e+00,9.6674e+00,2.3000e+00,-1.2026e+00,9.6827e+00,2.3000e+00,-1.2274e+00,9.6949e+00,2.3000e+00,-1.2535e+00,9.7038e+00,2.3000e+00,-1.2806e+00,9.7091e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00,2.1732e+00,-1.3081e+00,9.5000e+00});
			return Coordinate_7_581_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #582, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_582_vector()
		{
			MFVec3f Normal_7_582_vector = new MFVec3f(new double[] {8.5717e-01,-0.0000e+00,-5.1504e-01,8.5717e-01,6.7226e-02,-5.1063e-01,8.5717e-01,1.3330e-01,-4.9749e-01,8.5717e-01,1.9710e-01,-4.7583e-01,8.5717e-01,2.5752e-01,-4.4604e-01,8.5717e-01,3.1354e-01,-4.0861e-01,8.5717e-01,3.6419e-01,-3.6419e-01,8.5717e-01,4.0861e-01,-3.1354e-01,8.5717e-01,4.4604e-01,-2.5752e-01,8.5717e-01,4.7583e-01,-1.9710e-01,8.5717e-01,4.9749e-01,-1.3330e-01,8.5717e-01,5.1063e-01,-6.7226e-02,8.5717e-01,5.1504e-01,-3.1537e-17,8.5717e-01,5.1063e-01,6.7226e-02,8.5717e-01,4.9749e-01,1.3330e-01,8.5717e-01,4.7583e-01,1.9710e-01,8.5717e-01,4.4604e-01,2.5752e-01,8.5717e-01,4.0861e-01,3.1354e-01,8.5717e-01,3.6419e-01,3.6419e-01,8.5717e-01,3.1354e-01,4.0861e-01,8.5717e-01,2.5752e-01,4.4604e-01,8.5717e-01,1.9710e-01,4.7583e-01,8.5717e-01,1.3330e-01,4.9749e-01,8.5717e-01,6.7226e-02,5.1063e-01,8.5717e-01,6.3074e-17,5.1504e-01,8.5717e-01,-6.7226e-02,5.1063e-01,8.5717e-01,-1.3330e-01,4.9749e-01,8.5717e-01,-1.9710e-01,4.7583e-01,8.5717e-01,-2.5752e-01,4.4604e-01,8.5717e-01,-3.1354e-01,4.0861e-01,8.5717e-01,-3.6419e-01,3.6419e-01,8.5717e-01,-4.0861e-01,3.1354e-01,8.5717e-01,-4.4604e-01,2.5752e-01,8.5717e-01,-4.7583e-01,1.9710e-01,8.5717e-01,-4.9749e-01,1.3330e-01,8.5717e-01,-5.1063e-01,6.7226e-02,8.5717e-01,-5.1504e-01,9.4611e-17,8.5717e-01,-5.1063e-01,-6.7226e-02,8.5717e-01,-4.9749e-01,-1.3330e-01,8.5717e-01,-4.7583e-01,-1.9710e-01,8.5717e-01,-4.4604e-01,-2.5752e-01,8.5717e-01,-4.0861e-01,-3.1354e-01,8.5717e-01,-3.6419e-01,-3.6419e-01,8.5717e-01,-3.1354e-01,-4.0861e-01,8.5717e-01,-2.5752e-01,-4.4604e-01,8.5717e-01,-1.9710e-01,-4.7583e-01,8.5717e-01,-1.3330e-01,-4.9749e-01,8.5717e-01,-6.7226e-02,-5.1063e-01,8.5717e-01,3.3685e-02,-5.1394e-01,8.5717e-01,1.0048e-01,-5.0514e-01,8.5717e-01,1.6555e-01,-4.8771e-01,8.5717e-01,2.2780e-01,-4.6192e-01,8.5717e-01,2.8614e-01,-4.2824e-01,8.5717e-01,3.3959e-01,-3.8723e-01,8.5717e-01,3.8723e-01,-3.3959e-01,8.5717e-01,4.2824e-01,-2.8614e-01,8.5717e-01,4.6192e-01,-2.2780e-01,8.5717e-01,4.8771e-01,-1.6555e-01,8.5717e-01,5.0514e-01,-1.0048e-01,8.5717e-01,5.1394e-01,-3.3685e-02,8.5717e-01,5.1394e-01,3.3685e-02,8.5717e-01,5.0514e-01,1.0048e-01,8.5717e-01,4.8771e-01,1.6555e-01,8.5717e-01,4.6192e-01,2.2780e-01,8.5717e-01,4.2824e-01,2.8614e-01,8.5717e-01,3.8723e-01,3.3959e-01,8.5717e-01,3.3959e-01,3.8723e-01,8.5717e-01,2.8614e-01,4.2824e-01,8.5717e-01,2.2780e-01,4.6192e-01,8.5717e-01,1.6555e-01,4.8771e-01,8.5717e-01,1.0048e-01,5.0514e-01,8.5717e-01,3.3685e-02,5.1394e-01,8.5717e-01,-3.3685e-02,5.1394e-01,8.5717e-01,-1.0048e-01,5.0514e-01,8.5717e-01,-1.6555e-01,4.8771e-01,8.5717e-01,-2.2780e-01,4.6192e-01,8.5717e-01,-2.8614e-01,4.2824e-01,8.5717e-01,-3.3959e-01,3.8723e-01,8.5717e-01,-3.8723e-01,3.3959e-01,8.5717e-01,-4.2824e-01,2.8614e-01,8.5717e-01,-4.6192e-01,2.2780e-01,8.5717e-01,-4.8771e-01,1.6555e-01,8.5717e-01,-5.0514e-01,1.0048e-01,8.5717e-01,-5.1394e-01,3.3685e-02,8.5717e-01,-5.1394e-01,-3.3685e-02,8.5717e-01,-5.0514e-01,-1.0048e-01,8.5717e-01,-4.8771e-01,-1.6555e-01,8.5717e-01,-4.6192e-01,-2.2780e-01,8.5717e-01,-4.2824e-01,-2.8614e-01,8.5717e-01,-3.8723e-01,-3.3959e-01,8.5717e-01,-3.3959e-01,-3.8723e-01,8.5717e-01,-2.8614e-01,-4.2824e-01,8.5717e-01,-2.2780e-01,-4.6192e-01,8.5717e-01,-1.6555e-01,-4.8771e-01,8.5717e-01,-1.0048e-01,-5.0514e-01,8.5717e-01,-3.3685e-02,-5.1394e-01});
			return Normal_7_582_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #588, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_588_point()
		{
			MFVec3f Coordinate_7_588_point = new MFVec3f(new double[] {2.3000e+00,-1.3081e+00,9.2890e+00,3.5000e+00,-1.3081e+00,9.2890e+00,2.3000e+00,-1.3356e+00,9.2909e+00,3.5000e+00,-1.3356e+00,9.2909e+00,2.3000e+00,-1.3627e+00,9.2962e+00,3.5000e+00,-1.3627e+00,9.2962e+00,2.3000e+00,-1.3888e+00,9.3051e+00,3.5000e+00,-1.3888e+00,9.3051e+00,2.3000e+00,-1.4136e+00,9.3173e+00,3.5000e+00,-1.4136e+00,9.3173e+00,2.3000e+00,-1.4365e+00,9.3326e+00,3.5000e+00,-1.4365e+00,9.3326e+00,2.3000e+00,-1.4573e+00,9.3508e+00,3.5000e+00,-1.4573e+00,9.3508e+00,2.3000e+00,-1.4755e+00,9.3716e+00,3.5000e+00,-1.4755e+00,9.3716e+00,2.3000e+00,-1.4908e+00,9.3945e+00,3.5000e+00,-1.4908e+00,9.3945e+00,2.3000e+00,-1.5030e+00,9.4193e+00,3.5000e+00,-1.5030e+00,9.4193e+00,2.3000e+00,-1.5119e+00,9.4454e+00,3.5000e+00,-1.5119e+00,9.4454e+00,2.3000e+00,-1.5172e+00,9.4725e+00,3.5000e+00,-1.5172e+00,9.4725e+00,2.3000e+00,-1.5190e+00,9.5000e+00,3.5000e+00,-1.5190e+00,9.5000e+00,2.3000e+00,-1.5172e+00,9.5275e+00,3.5000e+00,-1.5172e+00,9.5275e+00,2.3000e+00,-1.5119e+00,9.5546e+00,3.5000e+00,-1.5119e+00,9.5546e+00,2.3000e+00,-1.5030e+00,9.5807e+00,3.5000e+00,-1.5030e+00,9.5807e+00,2.3000e+00,-1.4908e+00,9.6055e+00,3.5000e+00,-1.4908e+00,9.6055e+00,2.3000e+00,-1.4755e+00,9.6284e+00,3.5000e+00,-1.4755e+00,9.6284e+00,2.3000e+00,-1.4573e+00,9.6492e+00,3.5000e+00,-1.4573e+00,9.6492e+00,2.3000e+00,-1.4365e+00,9.6674e+00,3.5000e+00,-1.4365e+00,9.6674e+00,2.3000e+00,-1.4136e+00,9.6827e+00,3.5000e+00,-1.4136e+00,9.6827e+00,2.3000e+00,-1.3888e+00,9.6949e+00,3.5000e+00,-1.3888e+00,9.6949e+00,2.3000e+00,-1.3627e+00,9.7038e+00,3.5000e+00,-1.3627e+00,9.7038e+00,2.3000e+00,-1.3356e+00,9.7091e+00,3.5000e+00,-1.3356e+00,9.7091e+00,2.3000e+00,-1.3081e+00,9.7110e+00,3.5000e+00,-1.3081e+00,9.7110e+00,2.3000e+00,-1.2806e+00,9.7091e+00,3.5000e+00,-1.2806e+00,9.7091e+00,2.3000e+00,-1.2535e+00,9.7038e+00,3.5000e+00,-1.2535e+00,9.7038e+00,2.3000e+00,-1.2274e+00,9.6949e+00,3.5000e+00,-1.2274e+00,9.6949e+00,2.3000e+00,-1.2026e+00,9.6827e+00,3.5000e+00,-1.2026e+00,9.6827e+00,2.3000e+00,-1.1797e+00,9.6674e+00,3.5000e+00,-1.1797e+00,9.6674e+00,2.3000e+00,-1.1589e+00,9.6492e+00,3.5000e+00,-1.1589e+00,9.6492e+00,2.3000e+00,-1.1407e+00,9.6284e+00,3.5000e+00,-1.1407e+00,9.6284e+00,2.3000e+00,-1.1254e+00,9.6055e+00,3.5000e+00,-1.1254e+00,9.6055e+00,2.3000e+00,-1.1132e+00,9.5807e+00,3.5000e+00,-1.1132e+00,9.5807e+00,2.3000e+00,-1.1043e+00,9.5546e+00,3.5000e+00,-1.1043e+00,9.5546e+00,2.3000e+00,-1.0989e+00,9.5275e+00,3.5000e+00,-1.0989e+00,9.5275e+00,2.3000e+00,-1.0971e+00,9.5000e+00,3.5000e+00,-1.0971e+00,9.5000e+00,2.3000e+00,-1.0989e+00,9.4725e+00,3.5000e+00,-1.0989e+00,9.4725e+00,2.3000e+00,-1.1043e+00,9.4454e+00,3.5000e+00,-1.1043e+00,9.4454e+00,2.3000e+00,-1.1132e+00,9.4193e+00,3.5000e+00,-1.1132e+00,9.4193e+00,2.3000e+00,-1.1254e+00,9.3945e+00,3.5000e+00,-1.1254e+00,9.3945e+00,2.3000e+00,-1.1407e+00,9.3716e+00,3.5000e+00,-1.1407e+00,9.3716e+00,2.3000e+00,-1.1589e+00,9.3508e+00,3.5000e+00,-1.1589e+00,9.3508e+00,2.3000e+00,-1.1797e+00,9.3326e+00,3.5000e+00,-1.1797e+00,9.3326e+00,2.3000e+00,-1.2026e+00,9.3173e+00,3.5000e+00,-1.2026e+00,9.3173e+00,2.3000e+00,-1.2274e+00,9.3051e+00,3.5000e+00,-1.2274e+00,9.3051e+00,2.3000e+00,-1.2535e+00,9.2962e+00,3.5000e+00,-1.2535e+00,9.2962e+00,2.3000e+00,-1.2806e+00,9.2909e+00,3.5000e+00,-1.2806e+00,9.2909e+00});
			return Coordinate_7_588_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #589, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_589_vector()
		{
			MFVec3f Normal_7_589_vector = new MFVec3f(new double[] {-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,1.3053e-01,9.9144e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,2.5882e-01,9.6593e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,3.8268e-01,9.2388e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,5.0000e-01,8.6603e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,6.0876e-01,7.9335e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.0711e-01,7.0711e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,7.9335e-01,6.0876e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,8.6603e-01,5.0000e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.2388e-01,3.8268e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.6593e-01,2.5882e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,9.9144e-01,1.3053e-01,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,1.0000e+00,6.1232e-17,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.9144e-01,-1.3053e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.6593e-01,-2.5882e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,9.2388e-01,-3.8268e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,8.6603e-01,-5.0000e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.9335e-01,-6.0876e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,6.0876e-01,-7.9335e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,5.0000e-01,-8.6603e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,3.8268e-01,-9.2388e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,2.5882e-01,-9.6593e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.3053e-01,-9.9144e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-1.3053e-01,-9.9144e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-2.5882e-01,-9.6593e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-3.8268e-01,-9.2388e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-5.0000e-01,-8.6603e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-6.0876e-01,-7.9335e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.0711e-01,-7.0711e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-7.9335e-01,-6.0876e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-8.6603e-01,-5.0000e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.2388e-01,-3.8268e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.6593e-01,-2.5882e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-9.9144e-01,-1.3053e-01,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-1.0000e+00,-1.8370e-16,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.9144e-01,1.3053e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.6593e-01,2.5882e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-9.2388e-01,3.8268e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-8.6603e-01,5.0000e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.9335e-01,6.0876e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-7.0711e-01,7.0711e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-6.0876e-01,7.9335e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-5.0000e-01,8.6603e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-3.8268e-01,9.2388e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-2.5882e-01,9.6593e-01,-0.0000e+00,-1.3053e-01,9.9144e-01,-0.0000e+00,-1.3053e-01,9.9144e-01});
			return Normal_7_589_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #595, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_595_point()
		{
			MFVec3f Coordinate_7_595_point = new MFVec3f(new double[] {-2.3000e+00,-1.7068e+00,6.7500e+00,-2.3000e+00,-1.7086e+00,6.7225e+00,-2.3000e+00,-1.7140e+00,6.6954e+00,-2.3000e+00,-1.7229e+00,6.6693e+00,-2.3000e+00,-1.7351e+00,6.6445e+00,-2.3000e+00,-1.7504e+00,6.6216e+00,-2.3000e+00,-1.7686e+00,6.6008e+00,-2.3000e+00,-1.7893e+00,6.5826e+00,-2.3000e+00,-1.8123e+00,6.5673e+00,-2.3000e+00,-1.8370e+00,6.5551e+00,-2.3000e+00,-1.8632e+00,6.5462e+00,-2.3000e+00,-1.8902e+00,6.5409e+00,-2.3000e+00,-1.9178e+00,6.5390e+00,-2.3000e+00,-1.9453e+00,6.5409e+00,-2.3000e+00,-1.9724e+00,6.5462e+00,-2.3000e+00,-1.9985e+00,6.5551e+00,-2.3000e+00,-2.0232e+00,6.5673e+00,-2.3000e+00,-2.0462e+00,6.5826e+00,-2.3000e+00,-2.0669e+00,6.6008e+00,-2.3000e+00,-2.0851e+00,6.6216e+00,-2.3000e+00,-2.1004e+00,6.6445e+00,-2.3000e+00,-2.1126e+00,6.6693e+00,-2.3000e+00,-2.1215e+00,6.6954e+00,-2.3000e+00,-2.1269e+00,6.7225e+00,-2.3000e+00,-2.1287e+00,6.7500e+00,-2.3000e+00,-2.1269e+00,6.7775e+00,-2.3000e+00,-2.1215e+00,6.8046e+00,-2.3000e+00,-2.1126e+00,6.8307e+00,-2.3000e+00,-2.1004e+00,6.8555e+00,-2.3000e+00,-2.0851e+00,6.8784e+00,-2.3000e+00,-2.0669e+00,6.8992e+00,-2.3000e+00,-2.0462e+00,6.9174e+00,-2.3000e+00,-2.0232e+00,6.9327e+00,-2.3000e+00,-1.9985e+00,6.9449e+00,-2.3000e+00,-1.9724e+00,6.9538e+00,-2.3000e+00,-1.9453e+00,6.9591e+00,-2.3000e+00,-1.9178e+00,6.9610e+00,-2.3000e+00,-1.8902e+00,6.9591e+00,-2.3000e+00,-1.8632e+00,6.9538e+00,-2.3000e+00,-1.8370e+00,6.9449e+00,-2.3000e+00,-1.8123e+00,6.9327e+00,-2.3000e+00,-1.7893e+00,6.9174e+00,-2.3000e+00,-1.7686e+00,6.8992e+00,-2.3000e+00,-1.7504e+00,6.8784e+00,-2.3000e+00,-1.7351e+00,6.8555e+00,-2.3000e+00,-1.7229e+00,6.8307e+00,-2.3000e+00,-1.7140e+00,6.8046e+00,-2.3000e+00,-1.7086e+00,6.7775e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00,-2.1732e+00,-1.9178e+00,6.7500e+00});
			return Coordinate_7_595_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #596, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_596_vector()
		{
			MFVec3f Normal_7_596_vector = new MFVec3f(new double[] {-8.5717e-01,-5.1504e-01,-0.0000e+00,-8.5717e-01,-5.1063e-01,6.7226e-02,-8.5717e-01,-4.9749e-01,1.3330e-01,-8.5717e-01,-4.7583e-01,1.9710e-01,-8.5717e-01,-4.4604e-01,2.5752e-01,-8.5717e-01,-4.0861e-01,3.1354e-01,-8.5717e-01,-3.6419e-01,3.6419e-01,-8.5717e-01,-3.1354e-01,4.0861e-01,-8.5717e-01,-2.5752e-01,4.4604e-01,-8.5717e-01,-1.9710e-01,4.7583e-01,-8.5717e-01,-1.3330e-01,4.9749e-01,-8.5717e-01,-6.7226e-02,5.1063e-01,-8.5717e-01,6.4027e-17,5.1504e-01,-8.5717e-01,6.7226e-02,5.1063e-01,-8.5717e-01,1.3330e-01,4.9749e-01,-8.5717e-01,1.9710e-01,4.7583e-01,-8.5717e-01,2.5752e-01,4.4604e-01,-8.5717e-01,3.1354e-01,4.0861e-01,-8.5717e-01,3.6419e-01,3.6419e-01,-8.5717e-01,4.0861e-01,3.1354e-01,-8.5717e-01,4.4604e-01,2.5752e-01,-8.5717e-01,4.7583e-01,1.9710e-01,-8.5717e-01,4.9749e-01,1.3330e-01,-8.5717e-01,5.1063e-01,6.7226e-02,-8.5717e-01,5.1504e-01,6.3074e-17,-8.5717e-01,5.1063e-01,-6.7226e-02,-8.5717e-01,4.9749e-01,-1.3330e-01,-8.5717e-01,4.7583e-01,-1.9710e-01,-8.5717e-01,4.4604e-01,-2.5752e-01,-8.5717e-01,4.0861e-01,-3.1354e-01,-8.5717e-01,3.6419e-01,-3.6419e-01,-8.5717e-01,3.1354e-01,-4.0861e-01,-8.5717e-01,2.5752e-01,-4.4604e-01,-8.5717e-01,1.9710e-01,-4.7583e-01,-8.5717e-01,1.3330e-01,-4.9749e-01,-8.5717e-01,6.7226e-02,-5.1063e-01,-8.5717e-01,1.9017e-16,-5.1504e-01,-8.5717e-01,-6.7226e-02,-5.1063e-01,-8.5717e-01,-1.3330e-01,-4.9749e-01,-8.5717e-01,-1.9710e-01,-4.7583e-01,-8.5717e-01,-2.5752e-01,-4.4604e-01,-8.5717e-01,-3.1354e-01,-4.0861e-01,-8.5717e-01,-3.6419e-01,-3.6419e-01,-8.5717e-01,-4.0861e-01,-3.1354e-01,-8.5717e-01,-4.4604e-01,-2.5752e-01,-8.5717e-01,-4.7583e-01,-1.9710e-01,-8.5717e-01,-4.9749e-01,-1.3330e-01,-8.5717e-01,-5.1063e-01,-6.7226e-02,-8.5717e-01,-5.1394e-01,3.3685e-02,-8.5717e-01,-5.0514e-01,1.0048e-01,-8.5717e-01,-4.8771e-01,1.6555e-01,-8.5717e-01,-4.6192e-01,2.2780e-01,-8.5717e-01,-4.2824e-01,2.8614e-01,-8.5717e-01,-3.8723e-01,3.3959e-01,-8.5717e-01,-3.3959e-01,3.8723e-01,-8.5717e-01,-2.8614e-01,4.2824e-01,-8.5717e-01,-2.2780e-01,4.6192e-01,-8.5717e-01,-1.6555e-01,4.8771e-01,-8.5717e-01,-1.0048e-01,5.0514e-01,-8.5717e-01,-3.3685e-02,5.1394e-01,-8.5717e-01,3.3685e-02,5.1394e-01,-8.5717e-01,1.0048e-01,5.0514e-01,-8.5717e-01,1.6555e-01,4.8771e-01,-8.5717e-01,2.2780e-01,4.6192e-01,-8.5717e-01,2.8614e-01,4.2824e-01,-8.5717e-01,3.3959e-01,3.8723e-01,-8.5717e-01,3.8723e-01,3.3959e-01,-8.5717e-01,4.2824e-01,2.8614e-01,-8.5717e-01,4.6192e-01,2.2780e-01,-8.5717e-01,4.8771e-01,1.6555e-01,-8.5717e-01,5.0514e-01,1.0048e-01,-8.5717e-01,5.1394e-01,3.3685e-02,-8.5717e-01,5.1394e-01,-3.3685e-02,-8.5717e-01,5.0514e-01,-1.0048e-01,-8.5717e-01,4.8771e-01,-1.6555e-01,-8.5717e-01,4.6192e-01,-2.2780e-01,-8.5717e-01,4.2824e-01,-2.8614e-01,-8.5717e-01,3.8723e-01,-3.3959e-01,-8.5717e-01,3.3959e-01,-3.8723e-01,-8.5717e-01,2.8614e-01,-4.2824e-01,-8.5717e-01,2.2780e-01,-4.6192e-01,-8.5717e-01,1.6555e-01,-4.8771e-01,-8.5717e-01,1.0048e-01,-5.0514e-01,-8.5717e-01,3.3685e-02,-5.1394e-01,-8.5717e-01,-3.3685e-02,-5.1394e-01,-8.5717e-01,-1.0048e-01,-5.0514e-01,-8.5717e-01,-1.6555e-01,-4.8771e-01,-8.5717e-01,-2.2780e-01,-4.6192e-01,-8.5717e-01,-2.8614e-01,-4.2824e-01,-8.5717e-01,-3.3959e-01,-3.8723e-01,-8.5717e-01,-3.8723e-01,-3.3959e-01,-8.5717e-01,-4.2824e-01,-2.8614e-01,-8.5717e-01,-4.6192e-01,-2.2780e-01,-8.5717e-01,-4.8771e-01,-1.6555e-01,-8.5717e-01,-5.0514e-01,-1.0048e-01,-8.5717e-01,-5.1394e-01,-3.3685e-02});
			return Normal_7_596_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #602, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_602_point()
		{
			MFVec3f Coordinate_7_602_point = new MFVec3f(new double[] {-2.3000e+00,-2.1287e+00,6.7500e+00,-3.5000e+00,-2.1287e+00,6.7500e+00,-2.3000e+00,-2.1269e+00,6.7225e+00,-3.5000e+00,-2.1269e+00,6.7225e+00,-2.3000e+00,-2.1215e+00,6.6954e+00,-3.5000e+00,-2.1215e+00,6.6954e+00,-2.3000e+00,-2.1126e+00,6.6693e+00,-3.5000e+00,-2.1126e+00,6.6693e+00,-2.3000e+00,-2.1004e+00,6.6445e+00,-3.5000e+00,-2.1004e+00,6.6445e+00,-2.3000e+00,-2.0851e+00,6.6216e+00,-3.5000e+00,-2.0851e+00,6.6216e+00,-2.3000e+00,-2.0669e+00,6.6008e+00,-3.5000e+00,-2.0669e+00,6.6008e+00,-2.3000e+00,-2.0462e+00,6.5826e+00,-3.5000e+00,-2.0462e+00,6.5826e+00,-2.3000e+00,-2.0232e+00,6.5673e+00,-3.5000e+00,-2.0232e+00,6.5673e+00,-2.3000e+00,-1.9985e+00,6.5551e+00,-3.5000e+00,-1.9985e+00,6.5551e+00,-2.3000e+00,-1.9724e+00,6.5462e+00,-3.5000e+00,-1.9724e+00,6.5462e+00,-2.3000e+00,-1.9453e+00,6.5409e+00,-3.5000e+00,-1.9453e+00,6.5409e+00,-2.3000e+00,-1.9178e+00,6.5390e+00,-3.5000e+00,-1.9178e+00,6.5390e+00,-2.3000e+00,-1.8902e+00,6.5409e+00,-3.5000e+00,-1.8902e+00,6.5409e+00,-2.3000e+00,-1.8632e+00,6.5462e+00,-3.5000e+00,-1.8632e+00,6.5462e+00,-2.3000e+00,-1.8370e+00,6.5551e+00,-3.5000e+00,-1.8370e+00,6.5551e+00,-2.3000e+00,-1.8123e+00,6.5673e+00,-3.5000e+00,-1.8123e+00,6.5673e+00,-2.3000e+00,-1.7893e+00,6.5826e+00,-3.5000e+00,-1.7893e+00,6.5826e+00,-2.3000e+00,-1.7686e+00,6.6008e+00,-3.5000e+00,-1.7686e+00,6.6008e+00,-2.3000e+00,-1.7504e+00,6.6216e+00,-3.5000e+00,-1.7504e+00,6.6216e+00,-2.3000e+00,-1.7351e+00,6.6445e+00,-3.5000e+00,-1.7351e+00,6.6445e+00,-2.3000e+00,-1.7229e+00,6.6693e+00,-3.5000e+00,-1.7229e+00,6.6693e+00,-2.3000e+00,-1.7140e+00,6.6954e+00,-3.5000e+00,-1.7140e+00,6.6954e+00,-2.3000e+00,-1.7086e+00,6.7225e+00,-3.5000e+00,-1.7086e+00,6.7225e+00,-2.3000e+00,-1.7068e+00,6.7500e+00,-3.5000e+00,-1.7068e+00,6.7500e+00,-2.3000e+00,-1.7086e+00,6.7775e+00,-3.5000e+00,-1.7086e+00,6.7775e+00,-2.3000e+00,-1.7140e+00,6.8046e+00,-3.5000e+00,-1.7140e+00,6.8046e+00,-2.3000e+00,-1.7229e+00,6.8307e+00,-3.5000e+00,-1.7229e+00,6.8307e+00,-2.3000e+00,-1.7351e+00,6.8555e+00,-3.5000e+00,-1.7351e+00,6.8555e+00,-2.3000e+00,-1.7504e+00,6.8784e+00,-3.5000e+00,-1.7504e+00,6.8784e+00,-2.3000e+00,-1.7686e+00,6.8992e+00,-3.5000e+00,-1.7686e+00,6.8992e+00,-2.3000e+00,-1.7893e+00,6.9174e+00,-3.5000e+00,-1.7893e+00,6.9174e+00,-2.3000e+00,-1.8123e+00,6.9327e+00,-3.5000e+00,-1.8123e+00,6.9327e+00,-2.3000e+00,-1.8370e+00,6.9449e+00,-3.5000e+00,-1.8370e+00,6.9449e+00,-2.3000e+00,-1.8632e+00,6.9538e+00,-3.5000e+00,-1.8632e+00,6.9538e+00,-2.3000e+00,-1.8902e+00,6.9591e+00,-3.5000e+00,-1.8902e+00,6.9591e+00,-2.3000e+00,-1.9178e+00,6.9610e+00,-3.5000e+00,-1.9178e+00,6.9610e+00,-2.3000e+00,-1.9453e+00,6.9591e+00,-3.5000e+00,-1.9453e+00,6.9591e+00,-2.3000e+00,-1.9724e+00,6.9538e+00,-3.5000e+00,-1.9724e+00,6.9538e+00,-2.3000e+00,-1.9985e+00,6.9449e+00,-3.5000e+00,-1.9985e+00,6.9449e+00,-2.3000e+00,-2.0232e+00,6.9327e+00,-3.5000e+00,-2.0232e+00,6.9327e+00,-2.3000e+00,-2.0462e+00,6.9174e+00,-3.5000e+00,-2.0462e+00,6.9174e+00,-2.3000e+00,-2.0669e+00,6.8992e+00,-3.5000e+00,-2.0669e+00,6.8992e+00,-2.3000e+00,-2.0851e+00,6.8784e+00,-3.5000e+00,-2.0851e+00,6.8784e+00,-2.3000e+00,-2.1004e+00,6.8555e+00,-3.5000e+00,-2.1004e+00,6.8555e+00,-2.3000e+00,-2.1126e+00,6.8307e+00,-3.5000e+00,-2.1126e+00,6.8307e+00,-2.3000e+00,-2.1215e+00,6.8046e+00,-3.5000e+00,-2.1215e+00,6.8046e+00,-2.3000e+00,-2.1269e+00,6.7775e+00,-3.5000e+00,-2.1269e+00,6.7775e+00});
			return Coordinate_7_602_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #603, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_603_vector()
		{
			MFVec3f Normal_7_603_vector = new MFVec3f(new double[] {1.1149e-16,1.0000e+00,-0.0000e+00,1.1149e-16,1.0000e+00,-0.0000e+00,1.1053e-16,9.9144e-01,1.3053e-01,1.1053e-16,9.9144e-01,1.3053e-01,1.0769e-16,9.6593e-01,2.5882e-01,1.0769e-16,9.6593e-01,2.5882e-01,1.0300e-16,9.2388e-01,3.8268e-01,1.0300e-16,9.2388e-01,3.8268e-01,9.6551e-17,8.6603e-01,5.0000e-01,9.6551e-17,8.6603e-01,5.0000e-01,8.8449e-17,7.9335e-01,6.0876e-01,8.8449e-17,7.9335e-01,6.0876e-01,7.8834e-17,7.0711e-01,7.0711e-01,7.8834e-17,7.0711e-01,7.0711e-01,6.7869e-17,6.0876e-01,7.9335e-01,6.7869e-17,6.0876e-01,7.9335e-01,5.5744e-17,5.0000e-01,8.6603e-01,5.5744e-17,5.0000e-01,8.6603e-01,4.2665e-17,3.8268e-01,9.2388e-01,4.2665e-17,3.8268e-01,9.2388e-01,2.8855e-17,2.5882e-01,9.6593e-01,2.8855e-17,2.5882e-01,9.6593e-01,1.4552e-17,1.3053e-01,9.9144e-01,1.4552e-17,1.3053e-01,9.9144e-01,6.8267e-33,6.1232e-17,1.0000e+00,6.8267e-33,6.1232e-17,1.0000e+00,-1.4552e-17,-1.3053e-01,9.9144e-01,-1.4552e-17,-1.3053e-01,9.9144e-01,-2.8855e-17,-2.5882e-01,9.6593e-01,-2.8855e-17,-2.5882e-01,9.6593e-01,-4.2665e-17,-3.8268e-01,9.2388e-01,-4.2665e-17,-3.8268e-01,9.2388e-01,-5.5744e-17,-5.0000e-01,8.6603e-01,-5.5744e-17,-5.0000e-01,8.6603e-01,-6.7869e-17,-6.0876e-01,7.9335e-01,-6.7869e-17,-6.0876e-01,7.9335e-01,-7.8834e-17,-7.0711e-01,7.0711e-01,-7.8834e-17,-7.0711e-01,7.0711e-01,-8.8449e-17,-7.9335e-01,6.0876e-01,-8.8449e-17,-7.9335e-01,6.0876e-01,-9.6551e-17,-8.6603e-01,5.0000e-01,-9.6551e-17,-8.6603e-01,5.0000e-01,-1.0300e-16,-9.2388e-01,3.8268e-01,-1.0300e-16,-9.2388e-01,3.8268e-01,-1.0769e-16,-9.6593e-01,2.5882e-01,-1.0769e-16,-9.6593e-01,2.5882e-01,-1.1053e-16,-9.9144e-01,1.3053e-01,-1.1053e-16,-9.9144e-01,1.3053e-01,-1.1149e-16,-1.0000e+00,1.2246e-16,-1.1149e-16,-1.0000e+00,1.2246e-16,-1.1053e-16,-9.9144e-01,-1.3053e-01,-1.1053e-16,-9.9144e-01,-1.3053e-01,-1.0769e-16,-9.6593e-01,-2.5882e-01,-1.0769e-16,-9.6593e-01,-2.5882e-01,-1.0300e-16,-9.2388e-01,-3.8268e-01,-1.0300e-16,-9.2388e-01,-3.8268e-01,-9.6551e-17,-8.6603e-01,-5.0000e-01,-9.6551e-17,-8.6603e-01,-5.0000e-01,-8.8449e-17,-7.9335e-01,-6.0876e-01,-8.8449e-17,-7.9335e-01,-6.0876e-01,-7.8834e-17,-7.0711e-01,-7.0711e-01,-7.8834e-17,-7.0711e-01,-7.0711e-01,-6.7869e-17,-6.0876e-01,-7.9335e-01,-6.7869e-17,-6.0876e-01,-7.9335e-01,-5.5744e-17,-5.0000e-01,-8.6603e-01,-5.5744e-17,-5.0000e-01,-8.6603e-01,-4.2665e-17,-3.8268e-01,-9.2388e-01,-4.2665e-17,-3.8268e-01,-9.2388e-01,-2.8855e-17,-2.5882e-01,-9.6593e-01,-2.8855e-17,-2.5882e-01,-9.6593e-01,-1.4552e-17,-1.3053e-01,-9.9144e-01,-1.4552e-17,-1.3053e-01,-9.9144e-01,-2.0480e-32,-1.8370e-16,-1.0000e+00,-2.0480e-32,-1.8370e-16,-1.0000e+00,1.4552e-17,1.3053e-01,-9.9144e-01,1.4552e-17,1.3053e-01,-9.9144e-01,2.8855e-17,2.5882e-01,-9.6593e-01,2.8855e-17,2.5882e-01,-9.6593e-01,4.2665e-17,3.8268e-01,-9.2388e-01,4.2665e-17,3.8268e-01,-9.2388e-01,5.5744e-17,5.0000e-01,-8.6603e-01,5.5744e-17,5.0000e-01,-8.6603e-01,6.7869e-17,6.0876e-01,-7.9335e-01,6.7869e-17,6.0876e-01,-7.9335e-01,7.8834e-17,7.0711e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.0711e-01,8.8449e-17,7.9335e-01,-6.0876e-01,8.8449e-17,7.9335e-01,-6.0876e-01,9.6551e-17,8.6603e-01,-5.0000e-01,9.6551e-17,8.6603e-01,-5.0000e-01,1.0300e-16,9.2388e-01,-3.8268e-01,1.0300e-16,9.2388e-01,-3.8268e-01,1.0769e-16,9.6593e-01,-2.5882e-01,1.0769e-16,9.6593e-01,-2.5882e-01,1.1053e-16,9.9144e-01,-1.3053e-01,1.1053e-16,9.9144e-01,-1.3053e-01});
			return Normal_7_603_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #609, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_609_point()
		{
			MFVec3f Coordinate_7_609_point = new MFVec3f(new double[] {-2.3000e+00,-1.4020e+00,8.1250e+00,-2.3000e+00,-1.4038e+00,8.0975e+00,-2.3000e+00,-1.4092e+00,8.0704e+00,-2.3000e+00,-1.4180e+00,8.0443e+00,-2.3000e+00,-1.4302e+00,8.0195e+00,-2.3000e+00,-1.4456e+00,7.9966e+00,-2.3000e+00,-1.4638e+00,7.9758e+00,-2.3000e+00,-1.4845e+00,7.9576e+00,-2.3000e+00,-1.5074e+00,7.9423e+00,-2.3000e+00,-1.5322e+00,7.9301e+00,-2.3000e+00,-1.5583e+00,7.9212e+00,-2.3000e+00,-1.5854e+00,7.9159e+00,-2.3000e+00,-1.6129e+00,7.9140e+00,-2.3000e+00,-1.6405e+00,7.9159e+00,-2.3000e+00,-1.6675e+00,7.9212e+00,-2.3000e+00,-1.6937e+00,7.9301e+00,-2.3000e+00,-1.7184e+00,7.9423e+00,-2.3000e+00,-1.7413e+00,7.9576e+00,-2.3000e+00,-1.7621e+00,7.9758e+00,-2.3000e+00,-1.7803e+00,7.9966e+00,-2.3000e+00,-1.7956e+00,8.0195e+00,-2.3000e+00,-1.8078e+00,8.0443e+00,-2.3000e+00,-1.8167e+00,8.0704e+00,-2.3000e+00,-1.8221e+00,8.0975e+00,-2.3000e+00,-1.8239e+00,8.1250e+00,-2.3000e+00,-1.8221e+00,8.1525e+00,-2.3000e+00,-1.8167e+00,8.1796e+00,-2.3000e+00,-1.8078e+00,8.2057e+00,-2.3000e+00,-1.7956e+00,8.2305e+00,-2.3000e+00,-1.7803e+00,8.2534e+00,-2.3000e+00,-1.7621e+00,8.2742e+00,-2.3000e+00,-1.7413e+00,8.2924e+00,-2.3000e+00,-1.7184e+00,8.3077e+00,-2.3000e+00,-1.6937e+00,8.3199e+00,-2.3000e+00,-1.6675e+00,8.3288e+00,-2.3000e+00,-1.6405e+00,8.3341e+00,-2.3000e+00,-1.6129e+00,8.3360e+00,-2.3000e+00,-1.5854e+00,8.3341e+00,-2.3000e+00,-1.5583e+00,8.3288e+00,-2.3000e+00,-1.5322e+00,8.3199e+00,-2.3000e+00,-1.5074e+00,8.3077e+00,-2.3000e+00,-1.4845e+00,8.2924e+00,-2.3000e+00,-1.4638e+00,8.2742e+00,-2.3000e+00,-1.4456e+00,8.2534e+00,-2.3000e+00,-1.4302e+00,8.2305e+00,-2.3000e+00,-1.4180e+00,8.2057e+00,-2.3000e+00,-1.4092e+00,8.1796e+00,-2.3000e+00,-1.4038e+00,8.1525e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00,-2.1732e+00,-1.6129e+00,8.1250e+00});
			return Coordinate_7_609_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #610, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_610_vector()
		{
			MFVec3f Normal_7_610_vector = new MFVec3f(new double[] {-8.5717e-01,-5.1504e-01,-0.0000e+00,-8.5717e-01,-5.1063e-01,6.7226e-02,-8.5717e-01,-4.9749e-01,1.3330e-01,-8.5717e-01,-4.7583e-01,1.9710e-01,-8.5717e-01,-4.4604e-01,2.5752e-01,-8.5717e-01,-4.0861e-01,3.1354e-01,-8.5717e-01,-3.6419e-01,3.6419e-01,-8.5717e-01,-3.1354e-01,4.0861e-01,-8.5717e-01,-2.5752e-01,4.4604e-01,-8.5717e-01,-1.9710e-01,4.7583e-01,-8.5717e-01,-1.3330e-01,4.9749e-01,-8.5717e-01,-6.7226e-02,5.1063e-01,-8.5717e-01,6.4027e-17,5.1504e-01,-8.5717e-01,6.7226e-02,5.1063e-01,-8.5717e-01,1.3330e-01,4.9749e-01,-8.5717e-01,1.9710e-01,4.7583e-01,-8.5717e-01,2.5752e-01,4.4604e-01,-8.5717e-01,3.1354e-01,4.0861e-01,-8.5717e-01,3.6419e-01,3.6419e-01,-8.5717e-01,4.0861e-01,3.1354e-01,-8.5717e-01,4.4604e-01,2.5752e-01,-8.5717e-01,4.7583e-01,1.9710e-01,-8.5717e-01,4.9749e-01,1.3330e-01,-8.5717e-01,5.1063e-01,6.7226e-02,-8.5717e-01,5.1504e-01,6.3074e-17,-8.5717e-01,5.1063e-01,-6.7226e-02,-8.5717e-01,4.9749e-01,-1.3330e-01,-8.5717e-01,4.7583e-01,-1.9710e-01,-8.5717e-01,4.4604e-01,-2.5752e-01,-8.5717e-01,4.0861e-01,-3.1354e-01,-8.5717e-01,3.6419e-01,-3.6419e-01,-8.5717e-01,3.1354e-01,-4.0861e-01,-8.5717e-01,2.5752e-01,-4.4604e-01,-8.5717e-01,1.9710e-01,-4.7583e-01,-8.5717e-01,1.3330e-01,-4.9749e-01,-8.5717e-01,6.7226e-02,-5.1063e-01,-8.5717e-01,1.9017e-16,-5.1504e-01,-8.5717e-01,-6.7226e-02,-5.1063e-01,-8.5717e-01,-1.3330e-01,-4.9749e-01,-8.5717e-01,-1.9710e-01,-4.7583e-01,-8.5717e-01,-2.5752e-01,-4.4604e-01,-8.5717e-01,-3.1354e-01,-4.0861e-01,-8.5717e-01,-3.6419e-01,-3.6419e-01,-8.5717e-01,-4.0861e-01,-3.1354e-01,-8.5717e-01,-4.4604e-01,-2.5752e-01,-8.5717e-01,-4.7583e-01,-1.9710e-01,-8.5717e-01,-4.9749e-01,-1.3330e-01,-8.5717e-01,-5.1063e-01,-6.7226e-02,-8.5717e-01,-5.1394e-01,3.3685e-02,-8.5717e-01,-5.0514e-01,1.0048e-01,-8.5717e-01,-4.8771e-01,1.6555e-01,-8.5717e-01,-4.6192e-01,2.2780e-01,-8.5717e-01,-4.2824e-01,2.8614e-01,-8.5717e-01,-3.8723e-01,3.3959e-01,-8.5717e-01,-3.3959e-01,3.8723e-01,-8.5717e-01,-2.8614e-01,4.2824e-01,-8.5717e-01,-2.2780e-01,4.6192e-01,-8.5717e-01,-1.6555e-01,4.8771e-01,-8.5717e-01,-1.0048e-01,5.0514e-01,-8.5717e-01,-3.3685e-02,5.1394e-01,-8.5717e-01,3.3685e-02,5.1394e-01,-8.5717e-01,1.0048e-01,5.0514e-01,-8.5717e-01,1.6555e-01,4.8771e-01,-8.5717e-01,2.2780e-01,4.6192e-01,-8.5717e-01,2.8614e-01,4.2824e-01,-8.5717e-01,3.3959e-01,3.8723e-01,-8.5717e-01,3.8723e-01,3.3959e-01,-8.5717e-01,4.2824e-01,2.8614e-01,-8.5717e-01,4.6192e-01,2.2780e-01,-8.5717e-01,4.8771e-01,1.6555e-01,-8.5717e-01,5.0514e-01,1.0048e-01,-8.5717e-01,5.1394e-01,3.3685e-02,-8.5717e-01,5.1394e-01,-3.3685e-02,-8.5717e-01,5.0514e-01,-1.0048e-01,-8.5717e-01,4.8771e-01,-1.6555e-01,-8.5717e-01,4.6192e-01,-2.2780e-01,-8.5717e-01,4.2824e-01,-2.8614e-01,-8.5717e-01,3.8723e-01,-3.3959e-01,-8.5717e-01,3.3959e-01,-3.8723e-01,-8.5717e-01,2.8614e-01,-4.2824e-01,-8.5717e-01,2.2780e-01,-4.6192e-01,-8.5717e-01,1.6555e-01,-4.8771e-01,-8.5717e-01,1.0048e-01,-5.0514e-01,-8.5717e-01,3.3685e-02,-5.1394e-01,-8.5717e-01,-3.3685e-02,-5.1394e-01,-8.5717e-01,-1.0048e-01,-5.0514e-01,-8.5717e-01,-1.6555e-01,-4.8771e-01,-8.5717e-01,-2.2780e-01,-4.6192e-01,-8.5717e-01,-2.8614e-01,-4.2824e-01,-8.5717e-01,-3.3959e-01,-3.8723e-01,-8.5717e-01,-3.8723e-01,-3.3959e-01,-8.5717e-01,-4.2824e-01,-2.8614e-01,-8.5717e-01,-4.6192e-01,-2.2780e-01,-8.5717e-01,-4.8771e-01,-1.6555e-01,-8.5717e-01,-5.0514e-01,-1.0048e-01,-8.5717e-01,-5.1394e-01,-3.3685e-02});
			return Normal_7_610_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #616, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_616_point()
		{
			MFVec3f Coordinate_7_616_point = new MFVec3f(new double[] {-2.3000e+00,-1.8239e+00,8.1250e+00,-3.5000e+00,-1.8239e+00,8.1250e+00,-2.3000e+00,-1.8221e+00,8.0975e+00,-3.5000e+00,-1.8221e+00,8.0975e+00,-2.3000e+00,-1.8167e+00,8.0704e+00,-3.5000e+00,-1.8167e+00,8.0704e+00,-2.3000e+00,-1.8078e+00,8.0443e+00,-3.5000e+00,-1.8078e+00,8.0443e+00,-2.3000e+00,-1.7956e+00,8.0195e+00,-3.5000e+00,-1.7956e+00,8.0195e+00,-2.3000e+00,-1.7803e+00,7.9966e+00,-3.5000e+00,-1.7803e+00,7.9966e+00,-2.3000e+00,-1.7621e+00,7.9758e+00,-3.5000e+00,-1.7621e+00,7.9758e+00,-2.3000e+00,-1.7413e+00,7.9576e+00,-3.5000e+00,-1.7413e+00,7.9576e+00,-2.3000e+00,-1.7184e+00,7.9423e+00,-3.5000e+00,-1.7184e+00,7.9423e+00,-2.3000e+00,-1.6937e+00,7.9301e+00,-3.5000e+00,-1.6937e+00,7.9301e+00,-2.3000e+00,-1.6675e+00,7.9212e+00,-3.5000e+00,-1.6675e+00,7.9212e+00,-2.3000e+00,-1.6405e+00,7.9159e+00,-3.5000e+00,-1.6405e+00,7.9159e+00,-2.3000e+00,-1.6129e+00,7.9140e+00,-3.5000e+00,-1.6129e+00,7.9140e+00,-2.3000e+00,-1.5854e+00,7.9159e+00,-3.5000e+00,-1.5854e+00,7.9159e+00,-2.3000e+00,-1.5583e+00,7.9212e+00,-3.5000e+00,-1.5583e+00,7.9212e+00,-2.3000e+00,-1.5322e+00,7.9301e+00,-3.5000e+00,-1.5322e+00,7.9301e+00,-2.3000e+00,-1.5074e+00,7.9423e+00,-3.5000e+00,-1.5074e+00,7.9423e+00,-2.3000e+00,-1.4845e+00,7.9576e+00,-3.5000e+00,-1.4845e+00,7.9576e+00,-2.3000e+00,-1.4638e+00,7.9758e+00,-3.5000e+00,-1.4638e+00,7.9758e+00,-2.3000e+00,-1.4456e+00,7.9966e+00,-3.5000e+00,-1.4456e+00,7.9966e+00,-2.3000e+00,-1.4302e+00,8.0195e+00,-3.5000e+00,-1.4302e+00,8.0195e+00,-2.3000e+00,-1.4180e+00,8.0443e+00,-3.5000e+00,-1.4180e+00,8.0443e+00,-2.3000e+00,-1.4092e+00,8.0704e+00,-3.5000e+00,-1.4092e+00,8.0704e+00,-2.3000e+00,-1.4038e+00,8.0975e+00,-3.5000e+00,-1.4038e+00,8.0975e+00,-2.3000e+00,-1.4020e+00,8.1250e+00,-3.5000e+00,-1.4020e+00,8.1250e+00,-2.3000e+00,-1.4038e+00,8.1525e+00,-3.5000e+00,-1.4038e+00,8.1525e+00,-2.3000e+00,-1.4092e+00,8.1796e+00,-3.5000e+00,-1.4092e+00,8.1796e+00,-2.3000e+00,-1.4180e+00,8.2057e+00,-3.5000e+00,-1.4180e+00,8.2057e+00,-2.3000e+00,-1.4302e+00,8.2305e+00,-3.5000e+00,-1.4302e+00,8.2305e+00,-2.3000e+00,-1.4456e+00,8.2534e+00,-3.5000e+00,-1.4456e+00,8.2534e+00,-2.3000e+00,-1.4638e+00,8.2742e+00,-3.5000e+00,-1.4638e+00,8.2742e+00,-2.3000e+00,-1.4845e+00,8.2924e+00,-3.5000e+00,-1.4845e+00,8.2924e+00,-2.3000e+00,-1.5074e+00,8.3077e+00,-3.5000e+00,-1.5074e+00,8.3077e+00,-2.3000e+00,-1.5322e+00,8.3199e+00,-3.5000e+00,-1.5322e+00,8.3199e+00,-2.3000e+00,-1.5583e+00,8.3288e+00,-3.5000e+00,-1.5583e+00,8.3288e+00,-2.3000e+00,-1.5854e+00,8.3341e+00,-3.5000e+00,-1.5854e+00,8.3341e+00,-2.3000e+00,-1.6129e+00,8.3360e+00,-3.5000e+00,-1.6129e+00,8.3360e+00,-2.3000e+00,-1.6405e+00,8.3341e+00,-3.5000e+00,-1.6405e+00,8.3341e+00,-2.3000e+00,-1.6675e+00,8.3288e+00,-3.5000e+00,-1.6675e+00,8.3288e+00,-2.3000e+00,-1.6937e+00,8.3199e+00,-3.5000e+00,-1.6937e+00,8.3199e+00,-2.3000e+00,-1.7184e+00,8.3077e+00,-3.5000e+00,-1.7184e+00,8.3077e+00,-2.3000e+00,-1.7413e+00,8.2924e+00,-3.5000e+00,-1.7413e+00,8.2924e+00,-2.3000e+00,-1.7621e+00,8.2742e+00,-3.5000e+00,-1.7621e+00,8.2742e+00,-2.3000e+00,-1.7803e+00,8.2534e+00,-3.5000e+00,-1.7803e+00,8.2534e+00,-2.3000e+00,-1.7956e+00,8.2305e+00,-3.5000e+00,-1.7956e+00,8.2305e+00,-2.3000e+00,-1.8078e+00,8.2057e+00,-3.5000e+00,-1.8078e+00,8.2057e+00,-2.3000e+00,-1.8167e+00,8.1796e+00,-3.5000e+00,-1.8167e+00,8.1796e+00,-2.3000e+00,-1.8221e+00,8.1525e+00,-3.5000e+00,-1.8221e+00,8.1525e+00});
			return Coordinate_7_616_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #617, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_617_vector()
		{
			MFVec3f Normal_7_617_vector = new MFVec3f(new double[] {1.1149e-16,1.0000e+00,-0.0000e+00,1.1149e-16,1.0000e+00,-0.0000e+00,1.1053e-16,9.9144e-01,1.3053e-01,1.1053e-16,9.9144e-01,1.3053e-01,1.0769e-16,9.6593e-01,2.5882e-01,1.0769e-16,9.6593e-01,2.5882e-01,1.0300e-16,9.2388e-01,3.8268e-01,1.0300e-16,9.2388e-01,3.8268e-01,9.6551e-17,8.6603e-01,5.0000e-01,9.6551e-17,8.6603e-01,5.0000e-01,8.8449e-17,7.9335e-01,6.0876e-01,8.8449e-17,7.9335e-01,6.0876e-01,7.8834e-17,7.0711e-01,7.0711e-01,7.8834e-17,7.0711e-01,7.0711e-01,6.7869e-17,6.0876e-01,7.9335e-01,6.7869e-17,6.0876e-01,7.9335e-01,5.5744e-17,5.0000e-01,8.6603e-01,5.5744e-17,5.0000e-01,8.6603e-01,4.2665e-17,3.8268e-01,9.2388e-01,4.2665e-17,3.8268e-01,9.2388e-01,2.8855e-17,2.5882e-01,9.6593e-01,2.8855e-17,2.5882e-01,9.6593e-01,1.4552e-17,1.3053e-01,9.9144e-01,1.4552e-17,1.3053e-01,9.9144e-01,6.8267e-33,6.1232e-17,1.0000e+00,6.8267e-33,6.1232e-17,1.0000e+00,-1.4552e-17,-1.3053e-01,9.9144e-01,-1.4552e-17,-1.3053e-01,9.9144e-01,-2.8855e-17,-2.5882e-01,9.6593e-01,-2.8855e-17,-2.5882e-01,9.6593e-01,-4.2665e-17,-3.8268e-01,9.2388e-01,-4.2665e-17,-3.8268e-01,9.2388e-01,-5.5744e-17,-5.0000e-01,8.6603e-01,-5.5744e-17,-5.0000e-01,8.6603e-01,-6.7869e-17,-6.0876e-01,7.9335e-01,-6.7869e-17,-6.0876e-01,7.9335e-01,-7.8834e-17,-7.0711e-01,7.0711e-01,-7.8834e-17,-7.0711e-01,7.0711e-01,-8.8449e-17,-7.9335e-01,6.0876e-01,-8.8449e-17,-7.9335e-01,6.0876e-01,-9.6551e-17,-8.6603e-01,5.0000e-01,-9.6551e-17,-8.6603e-01,5.0000e-01,-1.0300e-16,-9.2388e-01,3.8268e-01,-1.0300e-16,-9.2388e-01,3.8268e-01,-1.0769e-16,-9.6593e-01,2.5882e-01,-1.0769e-16,-9.6593e-01,2.5882e-01,-1.1053e-16,-9.9144e-01,1.3053e-01,-1.1053e-16,-9.9144e-01,1.3053e-01,-1.1149e-16,-1.0000e+00,1.2246e-16,-1.1149e-16,-1.0000e+00,1.2246e-16,-1.1053e-16,-9.9144e-01,-1.3053e-01,-1.1053e-16,-9.9144e-01,-1.3053e-01,-1.0769e-16,-9.6593e-01,-2.5882e-01,-1.0769e-16,-9.6593e-01,-2.5882e-01,-1.0300e-16,-9.2388e-01,-3.8268e-01,-1.0300e-16,-9.2388e-01,-3.8268e-01,-9.6551e-17,-8.6603e-01,-5.0000e-01,-9.6551e-17,-8.6603e-01,-5.0000e-01,-8.8449e-17,-7.9335e-01,-6.0876e-01,-8.8449e-17,-7.9335e-01,-6.0876e-01,-7.8834e-17,-7.0711e-01,-7.0711e-01,-7.8834e-17,-7.0711e-01,-7.0711e-01,-6.7869e-17,-6.0876e-01,-7.9335e-01,-6.7869e-17,-6.0876e-01,-7.9335e-01,-5.5744e-17,-5.0000e-01,-8.6603e-01,-5.5744e-17,-5.0000e-01,-8.6603e-01,-4.2665e-17,-3.8268e-01,-9.2388e-01,-4.2665e-17,-3.8268e-01,-9.2388e-01,-2.8855e-17,-2.5882e-01,-9.6593e-01,-2.8855e-17,-2.5882e-01,-9.6593e-01,-1.4552e-17,-1.3053e-01,-9.9144e-01,-1.4552e-17,-1.3053e-01,-9.9144e-01,-2.0480e-32,-1.8370e-16,-1.0000e+00,-2.0480e-32,-1.8370e-16,-1.0000e+00,1.4552e-17,1.3053e-01,-9.9144e-01,1.4552e-17,1.3053e-01,-9.9144e-01,2.8855e-17,2.5882e-01,-9.6593e-01,2.8855e-17,2.5882e-01,-9.6593e-01,4.2665e-17,3.8268e-01,-9.2388e-01,4.2665e-17,3.8268e-01,-9.2388e-01,5.5744e-17,5.0000e-01,-8.6603e-01,5.5744e-17,5.0000e-01,-8.6603e-01,6.7869e-17,6.0876e-01,-7.9335e-01,6.7869e-17,6.0876e-01,-7.9335e-01,7.8834e-17,7.0711e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.0711e-01,8.8449e-17,7.9335e-01,-6.0876e-01,8.8449e-17,7.9335e-01,-6.0876e-01,9.6551e-17,8.6603e-01,-5.0000e-01,9.6551e-17,8.6603e-01,-5.0000e-01,1.0300e-16,9.2388e-01,-3.8268e-01,1.0300e-16,9.2388e-01,-3.8268e-01,1.0769e-16,9.6593e-01,-2.5882e-01,1.0769e-16,9.6593e-01,-2.5882e-01,1.1053e-16,9.9144e-01,-1.3053e-01,1.1053e-16,9.9144e-01,-1.3053e-01});
			return Normal_7_617_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #623, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_623_point()
		{
			MFVec3f Coordinate_7_623_point = new MFVec3f(new double[] {-2.3000e+00,-1.0971e+00,9.5000e+00,-2.3000e+00,-1.0989e+00,9.4725e+00,-2.3000e+00,-1.1043e+00,9.4454e+00,-2.3000e+00,-1.1132e+00,9.4193e+00,-2.3000e+00,-1.1254e+00,9.3945e+00,-2.3000e+00,-1.1407e+00,9.3716e+00,-2.3000e+00,-1.1589e+00,9.3508e+00,-2.3000e+00,-1.1797e+00,9.3326e+00,-2.3000e+00,-1.2026e+00,9.3173e+00,-2.3000e+00,-1.2274e+00,9.3051e+00,-2.3000e+00,-1.2535e+00,9.2962e+00,-2.3000e+00,-1.2806e+00,9.2909e+00,-2.3000e+00,-1.3081e+00,9.2890e+00,-2.3000e+00,-1.3356e+00,9.2909e+00,-2.3000e+00,-1.3627e+00,9.2962e+00,-2.3000e+00,-1.3888e+00,9.3051e+00,-2.3000e+00,-1.4136e+00,9.3173e+00,-2.3000e+00,-1.4365e+00,9.3326e+00,-2.3000e+00,-1.4573e+00,9.3508e+00,-2.3000e+00,-1.4755e+00,9.3716e+00,-2.3000e+00,-1.4908e+00,9.3945e+00,-2.3000e+00,-1.5030e+00,9.4193e+00,-2.3000e+00,-1.5119e+00,9.4454e+00,-2.3000e+00,-1.5172e+00,9.4725e+00,-2.3000e+00,-1.5190e+00,9.5000e+00,-2.3000e+00,-1.5172e+00,9.5275e+00,-2.3000e+00,-1.5119e+00,9.5546e+00,-2.3000e+00,-1.5030e+00,9.5807e+00,-2.3000e+00,-1.4908e+00,9.6055e+00,-2.3000e+00,-1.4755e+00,9.6284e+00,-2.3000e+00,-1.4573e+00,9.6492e+00,-2.3000e+00,-1.4365e+00,9.6674e+00,-2.3000e+00,-1.4136e+00,9.6827e+00,-2.3000e+00,-1.3888e+00,9.6949e+00,-2.3000e+00,-1.3627e+00,9.7038e+00,-2.3000e+00,-1.3356e+00,9.7091e+00,-2.3000e+00,-1.3081e+00,9.7110e+00,-2.3000e+00,-1.2806e+00,9.7091e+00,-2.3000e+00,-1.2535e+00,9.7038e+00,-2.3000e+00,-1.2274e+00,9.6949e+00,-2.3000e+00,-1.2026e+00,9.6827e+00,-2.3000e+00,-1.1797e+00,9.6674e+00,-2.3000e+00,-1.1589e+00,9.6492e+00,-2.3000e+00,-1.1407e+00,9.6284e+00,-2.3000e+00,-1.1254e+00,9.6055e+00,-2.3000e+00,-1.1132e+00,9.5807e+00,-2.3000e+00,-1.1043e+00,9.5546e+00,-2.3000e+00,-1.0989e+00,9.5275e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00,-2.1732e+00,-1.3081e+00,9.5000e+00});
			return Coordinate_7_623_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #624, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_624_vector()
		{
			MFVec3f Normal_7_624_vector = new MFVec3f(new double[] {-8.5717e-01,-5.1504e-01,-0.0000e+00,-8.5717e-01,-5.1063e-01,6.7226e-02,-8.5717e-01,-4.9749e-01,1.3330e-01,-8.5717e-01,-4.7583e-01,1.9710e-01,-8.5717e-01,-4.4604e-01,2.5752e-01,-8.5717e-01,-4.0861e-01,3.1354e-01,-8.5717e-01,-3.6419e-01,3.6419e-01,-8.5717e-01,-3.1354e-01,4.0861e-01,-8.5717e-01,-2.5752e-01,4.4604e-01,-8.5717e-01,-1.9710e-01,4.7583e-01,-8.5717e-01,-1.3330e-01,4.9749e-01,-8.5717e-01,-6.7226e-02,5.1063e-01,-8.5717e-01,6.4027e-17,5.1504e-01,-8.5717e-01,6.7226e-02,5.1063e-01,-8.5717e-01,1.3330e-01,4.9749e-01,-8.5717e-01,1.9710e-01,4.7583e-01,-8.5717e-01,2.5752e-01,4.4604e-01,-8.5717e-01,3.1354e-01,4.0861e-01,-8.5717e-01,3.6419e-01,3.6419e-01,-8.5717e-01,4.0861e-01,3.1354e-01,-8.5717e-01,4.4604e-01,2.5752e-01,-8.5717e-01,4.7583e-01,1.9710e-01,-8.5717e-01,4.9749e-01,1.3330e-01,-8.5717e-01,5.1063e-01,6.7226e-02,-8.5717e-01,5.1504e-01,6.3074e-17,-8.5717e-01,5.1063e-01,-6.7226e-02,-8.5717e-01,4.9749e-01,-1.3330e-01,-8.5717e-01,4.7583e-01,-1.9710e-01,-8.5717e-01,4.4604e-01,-2.5752e-01,-8.5717e-01,4.0861e-01,-3.1354e-01,-8.5717e-01,3.6419e-01,-3.6419e-01,-8.5717e-01,3.1354e-01,-4.0861e-01,-8.5717e-01,2.5752e-01,-4.4604e-01,-8.5717e-01,1.9710e-01,-4.7583e-01,-8.5717e-01,1.3330e-01,-4.9749e-01,-8.5717e-01,6.7226e-02,-5.1063e-01,-8.5717e-01,1.9017e-16,-5.1504e-01,-8.5717e-01,-6.7226e-02,-5.1063e-01,-8.5717e-01,-1.3330e-01,-4.9749e-01,-8.5717e-01,-1.9710e-01,-4.7583e-01,-8.5717e-01,-2.5752e-01,-4.4604e-01,-8.5717e-01,-3.1354e-01,-4.0861e-01,-8.5717e-01,-3.6419e-01,-3.6419e-01,-8.5717e-01,-4.0861e-01,-3.1354e-01,-8.5717e-01,-4.4604e-01,-2.5752e-01,-8.5717e-01,-4.7583e-01,-1.9710e-01,-8.5717e-01,-4.9749e-01,-1.3330e-01,-8.5717e-01,-5.1063e-01,-6.7226e-02,-8.5717e-01,-5.1394e-01,3.3685e-02,-8.5717e-01,-5.0514e-01,1.0048e-01,-8.5717e-01,-4.8771e-01,1.6555e-01,-8.5717e-01,-4.6192e-01,2.2780e-01,-8.5717e-01,-4.2824e-01,2.8614e-01,-8.5717e-01,-3.8723e-01,3.3959e-01,-8.5717e-01,-3.3959e-01,3.8723e-01,-8.5717e-01,-2.8614e-01,4.2824e-01,-8.5717e-01,-2.2780e-01,4.6192e-01,-8.5717e-01,-1.6555e-01,4.8771e-01,-8.5717e-01,-1.0048e-01,5.0514e-01,-8.5717e-01,-3.3685e-02,5.1394e-01,-8.5717e-01,3.3685e-02,5.1394e-01,-8.5717e-01,1.0048e-01,5.0514e-01,-8.5717e-01,1.6555e-01,4.8771e-01,-8.5717e-01,2.2780e-01,4.6192e-01,-8.5717e-01,2.8614e-01,4.2824e-01,-8.5717e-01,3.3959e-01,3.8723e-01,-8.5717e-01,3.8723e-01,3.3959e-01,-8.5717e-01,4.2824e-01,2.8614e-01,-8.5717e-01,4.6192e-01,2.2780e-01,-8.5717e-01,4.8771e-01,1.6555e-01,-8.5717e-01,5.0514e-01,1.0048e-01,-8.5717e-01,5.1394e-01,3.3685e-02,-8.5717e-01,5.1394e-01,-3.3685e-02,-8.5717e-01,5.0514e-01,-1.0048e-01,-8.5717e-01,4.8771e-01,-1.6555e-01,-8.5717e-01,4.6192e-01,-2.2780e-01,-8.5717e-01,4.2824e-01,-2.8614e-01,-8.5717e-01,3.8723e-01,-3.3959e-01,-8.5717e-01,3.3959e-01,-3.8723e-01,-8.5717e-01,2.8614e-01,-4.2824e-01,-8.5717e-01,2.2780e-01,-4.6192e-01,-8.5717e-01,1.6555e-01,-4.8771e-01,-8.5717e-01,1.0048e-01,-5.0514e-01,-8.5717e-01,3.3685e-02,-5.1394e-01,-8.5717e-01,-3.3685e-02,-5.1394e-01,-8.5717e-01,-1.0048e-01,-5.0514e-01,-8.5717e-01,-1.6555e-01,-4.8771e-01,-8.5717e-01,-2.2780e-01,-4.6192e-01,-8.5717e-01,-2.8614e-01,-4.2824e-01,-8.5717e-01,-3.3959e-01,-3.8723e-01,-8.5717e-01,-3.8723e-01,-3.3959e-01,-8.5717e-01,-4.2824e-01,-2.8614e-01,-8.5717e-01,-4.6192e-01,-2.2780e-01,-8.5717e-01,-4.8771e-01,-1.6555e-01,-8.5717e-01,-5.0514e-01,-1.0048e-01,-8.5717e-01,-5.1394e-01,-3.3685e-02});
			return Normal_7_624_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #630, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_630_point()
		{
			MFVec3f Coordinate_7_630_point = new MFVec3f(new double[] {-2.3000e+00,-1.5190e+00,9.5000e+00,-3.5000e+00,-1.5190e+00,9.5000e+00,-2.3000e+00,-1.5172e+00,9.4725e+00,-3.5000e+00,-1.5172e+00,9.4725e+00,-2.3000e+00,-1.5119e+00,9.4454e+00,-3.5000e+00,-1.5119e+00,9.4454e+00,-2.3000e+00,-1.5030e+00,9.4193e+00,-3.5000e+00,-1.5030e+00,9.4193e+00,-2.3000e+00,-1.4908e+00,9.3945e+00,-3.5000e+00,-1.4908e+00,9.3945e+00,-2.3000e+00,-1.4755e+00,9.3716e+00,-3.5000e+00,-1.4755e+00,9.3716e+00,-2.3000e+00,-1.4573e+00,9.3508e+00,-3.5000e+00,-1.4573e+00,9.3508e+00,-2.3000e+00,-1.4365e+00,9.3326e+00,-3.5000e+00,-1.4365e+00,9.3326e+00,-2.3000e+00,-1.4136e+00,9.3173e+00,-3.5000e+00,-1.4136e+00,9.3173e+00,-2.3000e+00,-1.3888e+00,9.3051e+00,-3.5000e+00,-1.3888e+00,9.3051e+00,-2.3000e+00,-1.3627e+00,9.2962e+00,-3.5000e+00,-1.3627e+00,9.2962e+00,-2.3000e+00,-1.3356e+00,9.2909e+00,-3.5000e+00,-1.3356e+00,9.2909e+00,-2.3000e+00,-1.3081e+00,9.2890e+00,-3.5000e+00,-1.3081e+00,9.2890e+00,-2.3000e+00,-1.2806e+00,9.2909e+00,-3.5000e+00,-1.2806e+00,9.2909e+00,-2.3000e+00,-1.2535e+00,9.2962e+00,-3.5000e+00,-1.2535e+00,9.2962e+00,-2.3000e+00,-1.2274e+00,9.3051e+00,-3.5000e+00,-1.2274e+00,9.3051e+00,-2.3000e+00,-1.2026e+00,9.3173e+00,-3.5000e+00,-1.2026e+00,9.3173e+00,-2.3000e+00,-1.1797e+00,9.3326e+00,-3.5000e+00,-1.1797e+00,9.3326e+00,-2.3000e+00,-1.1589e+00,9.3508e+00,-3.5000e+00,-1.1589e+00,9.3508e+00,-2.3000e+00,-1.1407e+00,9.3716e+00,-3.5000e+00,-1.1407e+00,9.3716e+00,-2.3000e+00,-1.1254e+00,9.3945e+00,-3.5000e+00,-1.1254e+00,9.3945e+00,-2.3000e+00,-1.1132e+00,9.4193e+00,-3.5000e+00,-1.1132e+00,9.4193e+00,-2.3000e+00,-1.1043e+00,9.4454e+00,-3.5000e+00,-1.1043e+00,9.4454e+00,-2.3000e+00,-1.0989e+00,9.4725e+00,-3.5000e+00,-1.0989e+00,9.4725e+00,-2.3000e+00,-1.0971e+00,9.5000e+00,-3.5000e+00,-1.0971e+00,9.5000e+00,-2.3000e+00,-1.0989e+00,9.5275e+00,-3.5000e+00,-1.0989e+00,9.5275e+00,-2.3000e+00,-1.1043e+00,9.5546e+00,-3.5000e+00,-1.1043e+00,9.5546e+00,-2.3000e+00,-1.1132e+00,9.5807e+00,-3.5000e+00,-1.1132e+00,9.5807e+00,-2.3000e+00,-1.1254e+00,9.6055e+00,-3.5000e+00,-1.1254e+00,9.6055e+00,-2.3000e+00,-1.1407e+00,9.6284e+00,-3.5000e+00,-1.1407e+00,9.6284e+00,-2.3000e+00,-1.1589e+00,9.6492e+00,-3.5000e+00,-1.1589e+00,9.6492e+00,-2.3000e+00,-1.1797e+00,9.6674e+00,-3.5000e+00,-1.1797e+00,9.6674e+00,-2.3000e+00,-1.2026e+00,9.6827e+00,-3.5000e+00,-1.2026e+00,9.6827e+00,-2.3000e+00,-1.2274e+00,9.6949e+00,-3.5000e+00,-1.2274e+00,9.6949e+00,-2.3000e+00,-1.2535e+00,9.7038e+00,-3.5000e+00,-1.2535e+00,9.7038e+00,-2.3000e+00,-1.2806e+00,9.7091e+00,-3.5000e+00,-1.2806e+00,9.7091e+00,-2.3000e+00,-1.3081e+00,9.7110e+00,-3.5000e+00,-1.3081e+00,9.7110e+00,-2.3000e+00,-1.3356e+00,9.7091e+00,-3.5000e+00,-1.3356e+00,9.7091e+00,-2.3000e+00,-1.3627e+00,9.7038e+00,-3.5000e+00,-1.3627e+00,9.7038e+00,-2.3000e+00,-1.3888e+00,9.6949e+00,-3.5000e+00,-1.3888e+00,9.6949e+00,-2.3000e+00,-1.4136e+00,9.6827e+00,-3.5000e+00,-1.4136e+00,9.6827e+00,-2.3000e+00,-1.4365e+00,9.6674e+00,-3.5000e+00,-1.4365e+00,9.6674e+00,-2.3000e+00,-1.4573e+00,9.6492e+00,-3.5000e+00,-1.4573e+00,9.6492e+00,-2.3000e+00,-1.4755e+00,9.6284e+00,-3.5000e+00,-1.4755e+00,9.6284e+00,-2.3000e+00,-1.4908e+00,9.6055e+00,-3.5000e+00,-1.4908e+00,9.6055e+00,-2.3000e+00,-1.5030e+00,9.5807e+00,-3.5000e+00,-1.5030e+00,9.5807e+00,-2.3000e+00,-1.5119e+00,9.5546e+00,-3.5000e+00,-1.5119e+00,9.5546e+00,-2.3000e+00,-1.5172e+00,9.5275e+00,-3.5000e+00,-1.5172e+00,9.5275e+00});
			return Coordinate_7_630_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #631, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_631_vector()
		{
			MFVec3f Normal_7_631_vector = new MFVec3f(new double[] {1.1149e-16,1.0000e+00,-0.0000e+00,1.1149e-16,1.0000e+00,-0.0000e+00,1.1053e-16,9.9144e-01,1.3053e-01,1.1053e-16,9.9144e-01,1.3053e-01,1.0769e-16,9.6593e-01,2.5882e-01,1.0769e-16,9.6593e-01,2.5882e-01,1.0300e-16,9.2388e-01,3.8268e-01,1.0300e-16,9.2388e-01,3.8268e-01,9.6551e-17,8.6603e-01,5.0000e-01,9.6551e-17,8.6603e-01,5.0000e-01,8.8449e-17,7.9335e-01,6.0876e-01,8.8449e-17,7.9335e-01,6.0876e-01,7.8834e-17,7.0711e-01,7.0711e-01,7.8834e-17,7.0711e-01,7.0711e-01,6.7869e-17,6.0876e-01,7.9335e-01,6.7869e-17,6.0876e-01,7.9335e-01,5.5744e-17,5.0000e-01,8.6603e-01,5.5744e-17,5.0000e-01,8.6603e-01,4.2665e-17,3.8268e-01,9.2388e-01,4.2665e-17,3.8268e-01,9.2388e-01,2.8855e-17,2.5882e-01,9.6593e-01,2.8855e-17,2.5882e-01,9.6593e-01,1.4552e-17,1.3053e-01,9.9144e-01,1.4552e-17,1.3053e-01,9.9144e-01,6.8267e-33,6.1232e-17,1.0000e+00,6.8267e-33,6.1232e-17,1.0000e+00,-1.4552e-17,-1.3053e-01,9.9144e-01,-1.4552e-17,-1.3053e-01,9.9144e-01,-2.8855e-17,-2.5882e-01,9.6593e-01,-2.8855e-17,-2.5882e-01,9.6593e-01,-4.2665e-17,-3.8268e-01,9.2388e-01,-4.2665e-17,-3.8268e-01,9.2388e-01,-5.5744e-17,-5.0000e-01,8.6603e-01,-5.5744e-17,-5.0000e-01,8.6603e-01,-6.7869e-17,-6.0876e-01,7.9335e-01,-6.7869e-17,-6.0876e-01,7.9335e-01,-7.8834e-17,-7.0711e-01,7.0711e-01,-7.8834e-17,-7.0711e-01,7.0711e-01,-8.8449e-17,-7.9335e-01,6.0876e-01,-8.8449e-17,-7.9335e-01,6.0876e-01,-9.6551e-17,-8.6603e-01,5.0000e-01,-9.6551e-17,-8.6603e-01,5.0000e-01,-1.0300e-16,-9.2388e-01,3.8268e-01,-1.0300e-16,-9.2388e-01,3.8268e-01,-1.0769e-16,-9.6593e-01,2.5882e-01,-1.0769e-16,-9.6593e-01,2.5882e-01,-1.1053e-16,-9.9144e-01,1.3053e-01,-1.1053e-16,-9.9144e-01,1.3053e-01,-1.1149e-16,-1.0000e+00,1.2246e-16,-1.1149e-16,-1.0000e+00,1.2246e-16,-1.1053e-16,-9.9144e-01,-1.3053e-01,-1.1053e-16,-9.9144e-01,-1.3053e-01,-1.0769e-16,-9.6593e-01,-2.5882e-01,-1.0769e-16,-9.6593e-01,-2.5882e-01,-1.0300e-16,-9.2388e-01,-3.8268e-01,-1.0300e-16,-9.2388e-01,-3.8268e-01,-9.6551e-17,-8.6603e-01,-5.0000e-01,-9.6551e-17,-8.6603e-01,-5.0000e-01,-8.8449e-17,-7.9335e-01,-6.0876e-01,-8.8449e-17,-7.9335e-01,-6.0876e-01,-7.8834e-17,-7.0711e-01,-7.0711e-01,-7.8834e-17,-7.0711e-01,-7.0711e-01,-6.7869e-17,-6.0876e-01,-7.9335e-01,-6.7869e-17,-6.0876e-01,-7.9335e-01,-5.5744e-17,-5.0000e-01,-8.6603e-01,-5.5744e-17,-5.0000e-01,-8.6603e-01,-4.2665e-17,-3.8268e-01,-9.2388e-01,-4.2665e-17,-3.8268e-01,-9.2388e-01,-2.8855e-17,-2.5882e-01,-9.6593e-01,-2.8855e-17,-2.5882e-01,-9.6593e-01,-1.4552e-17,-1.3053e-01,-9.9144e-01,-1.4552e-17,-1.3053e-01,-9.9144e-01,-2.0480e-32,-1.8370e-16,-1.0000e+00,-2.0480e-32,-1.8370e-16,-1.0000e+00,1.4552e-17,1.3053e-01,-9.9144e-01,1.4552e-17,1.3053e-01,-9.9144e-01,2.8855e-17,2.5882e-01,-9.6593e-01,2.8855e-17,2.5882e-01,-9.6593e-01,4.2665e-17,3.8268e-01,-9.2388e-01,4.2665e-17,3.8268e-01,-9.2388e-01,5.5744e-17,5.0000e-01,-8.6603e-01,5.5744e-17,5.0000e-01,-8.6603e-01,6.7869e-17,6.0876e-01,-7.9335e-01,6.7869e-17,6.0876e-01,-7.9335e-01,7.8834e-17,7.0711e-01,-7.0711e-01,7.8834e-17,7.0711e-01,-7.0711e-01,8.8449e-17,7.9335e-01,-6.0876e-01,8.8449e-17,7.9335e-01,-6.0876e-01,9.6551e-17,8.6603e-01,-5.0000e-01,9.6551e-17,8.6603e-01,-5.0000e-01,1.0300e-16,9.2388e-01,-3.8268e-01,1.0300e-16,9.2388e-01,-3.8268e-01,1.0769e-16,9.6593e-01,-2.5882e-01,1.0769e-16,9.6593e-01,-2.5882e-01,1.1053e-16,9.9144e-01,-1.3053e-01,1.1053e-16,9.9144e-01,-1.3053e-01});
			return Normal_7_631_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #637, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_637_point()
		{
			MFVec3f Coordinate_7_637_point = new MFVec3f(new double[] {0.0000e+00,-6.0000e+00,4.7500e+00,0.0000e+00,-5.7500e+00,5.0000e+00,-7.8316e-01,-5.9487e+00,4.7500e+00,-7.5053e-01,-5.7008e+00,5.0000e+00,-1.5529e+00,-5.7956e+00,4.7500e+00,-1.4882e+00,-5.5541e+00,5.0000e+00,-2.2961e+00,-5.5433e+00,4.7500e+00,-2.2004e+00,-5.3123e+00,5.0000e+00,-3.0000e+00,-5.1962e+00,4.7500e+00,-2.8750e+00,-4.9796e+00,5.0000e+00,-3.6526e+00,-4.7601e+00,4.7500e+00,-3.5004e+00,-4.5618e+00,5.0000e+00,-4.2426e+00,-4.2426e+00,4.7500e+00,-4.0659e+00,-4.0659e+00,5.0000e+00,-4.7601e+00,-3.6526e+00,4.7500e+00,-4.5618e+00,-3.5004e+00,5.0000e+00,-5.1962e+00,-3.0000e+00,4.7500e+00,-4.9796e+00,-2.8750e+00,5.0000e+00,-5.5433e+00,-2.2961e+00,4.7500e+00,-5.3123e+00,-2.2004e+00,5.0000e+00,-5.7956e+00,-1.5529e+00,4.7500e+00,-5.5541e+00,-1.4882e+00,5.0000e+00,-5.9487e+00,-7.8316e-01,4.7500e+00,-5.7008e+00,-7.5053e-01,5.0000e+00,-6.0000e+00,-3.6739e-16,4.7500e+00,-5.7500e+00,-3.5209e-16,5.0000e+00,-5.9487e+00,7.8316e-01,4.7500e+00,-5.7008e+00,7.5053e-01,5.0000e+00,-5.7956e+00,1.5529e+00,4.7500e+00,-5.5541e+00,1.4882e+00,5.0000e+00,-5.5433e+00,2.2961e+00,4.7500e+00,-5.3123e+00,2.2004e+00,5.0000e+00,-5.1962e+00,3.0000e+00,4.7500e+00,-4.9796e+00,2.8750e+00,5.0000e+00,-4.7601e+00,3.6526e+00,4.7500e+00,-4.5618e+00,3.5004e+00,5.0000e+00,-4.2426e+00,4.2426e+00,4.7500e+00,-4.0659e+00,4.0659e+00,5.0000e+00,-3.6526e+00,4.7601e+00,4.7500e+00,-3.5004e+00,4.5618e+00,5.0000e+00,-3.0000e+00,5.1962e+00,4.7500e+00,-2.8750e+00,4.9796e+00,5.0000e+00,-2.2961e+00,5.5433e+00,4.7500e+00,-2.2004e+00,5.3123e+00,5.0000e+00,-1.5529e+00,5.7956e+00,4.7500e+00,-1.4882e+00,5.5541e+00,5.0000e+00,-7.8316e-01,5.9487e+00,4.7500e+00,-7.5053e-01,5.7008e+00,5.0000e+00,-7.3479e-16,6.0000e+00,4.7500e+00,-7.0417e-16,5.7500e+00,5.0000e+00,7.8316e-01,5.9487e+00,4.7500e+00,7.5053e-01,5.7008e+00,5.0000e+00,1.5529e+00,5.7956e+00,4.7500e+00,1.4882e+00,5.5541e+00,5.0000e+00,2.2961e+00,5.5433e+00,4.7500e+00,2.2004e+00,5.3123e+00,5.0000e+00,3.0000e+00,5.1962e+00,4.7500e+00,2.8750e+00,4.9796e+00,5.0000e+00,3.6526e+00,4.7601e+00,4.7500e+00,3.5004e+00,4.5618e+00,5.0000e+00,4.2426e+00,4.2426e+00,4.7500e+00,4.0659e+00,4.0659e+00,5.0000e+00,4.7601e+00,3.6526e+00,4.7500e+00,4.5618e+00,3.5004e+00,5.0000e+00,5.1962e+00,3.0000e+00,4.7500e+00,4.9796e+00,2.8750e+00,5.0000e+00,5.5433e+00,2.2961e+00,4.7500e+00,5.3123e+00,2.2004e+00,5.0000e+00,5.7956e+00,1.5529e+00,4.7500e+00,5.5541e+00,1.4882e+00,5.0000e+00,5.9487e+00,7.8316e-01,4.7500e+00,5.7008e+00,7.5053e-01,5.0000e+00,6.0000e+00,1.1022e-15,4.7500e+00,5.7500e+00,1.0563e-15,5.0000e+00,5.9487e+00,-7.8316e-01,4.7500e+00,5.7008e+00,-7.5053e-01,5.0000e+00,5.7956e+00,-1.5529e+00,4.7500e+00,5.5541e+00,-1.4882e+00,5.0000e+00,5.5433e+00,-2.2961e+00,4.7500e+00,5.3123e+00,-2.2004e+00,5.0000e+00,5.1962e+00,-3.0000e+00,4.7500e+00,4.9796e+00,-2.8750e+00,5.0000e+00,4.7601e+00,-3.6526e+00,4.7500e+00,4.5618e+00,-3.5004e+00,5.0000e+00,4.2426e+00,-4.2426e+00,4.7500e+00,4.0659e+00,-4.0659e+00,5.0000e+00,3.6526e+00,-4.7601e+00,4.7500e+00,3.5004e+00,-4.5618e+00,5.0000e+00,3.0000e+00,-5.1962e+00,4.7500e+00,2.8750e+00,-4.9796e+00,5.0000e+00,2.2961e+00,-5.5433e+00,4.7500e+00,2.2004e+00,-5.3123e+00,5.0000e+00,1.5529e+00,-5.7956e+00,4.7500e+00,1.4882e+00,-5.5541e+00,5.0000e+00,7.8316e-01,-5.9487e+00,4.7500e+00,7.5053e-01,-5.7008e+00,5.0000e+00});
			return Coordinate_7_637_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #638, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_638_vector()
		{
			MFVec3f Normal_7_638_vector = new MFVec3f(new double[] {0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,-9.2296e-02,-7.0106e-01,7.0711e-01,-9.2296e-02,-7.0106e-01,7.0711e-01,-1.8301e-01,-6.8301e-01,7.0711e-01,-1.8301e-01,-6.8301e-01,7.0711e-01,-2.7060e-01,-6.5328e-01,7.0711e-01,-2.7060e-01,-6.5328e-01,7.0711e-01,-3.5355e-01,-6.1237e-01,7.0711e-01,-3.5355e-01,-6.1237e-01,7.0711e-01,-4.3046e-01,-5.6099e-01,7.0711e-01,-4.3046e-01,-5.6099e-01,7.0711e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.6099e-01,-4.3046e-01,7.0711e-01,-5.6099e-01,-4.3046e-01,7.0711e-01,-6.1237e-01,-3.5355e-01,7.0711e-01,-6.1237e-01,-3.5355e-01,7.0711e-01,-6.5328e-01,-2.7060e-01,7.0711e-01,-6.5328e-01,-2.7060e-01,7.0711e-01,-6.8301e-01,-1.8301e-01,7.0711e-01,-6.8301e-01,-1.8301e-01,7.0711e-01,-7.0106e-01,-9.2296e-02,7.0711e-01,-7.0106e-01,-9.2296e-02,7.0711e-01,-7.0711e-01,-4.3298e-17,7.0711e-01,-7.0711e-01,-4.3298e-17,7.0711e-01,-7.0106e-01,9.2296e-02,7.0711e-01,-7.0106e-01,9.2296e-02,7.0711e-01,-6.8301e-01,1.8301e-01,7.0711e-01,-6.8301e-01,1.8301e-01,7.0711e-01,-6.5328e-01,2.7060e-01,7.0711e-01,-6.5328e-01,2.7060e-01,7.0711e-01,-6.1237e-01,3.5355e-01,7.0711e-01,-6.1237e-01,3.5355e-01,7.0711e-01,-5.6099e-01,4.3046e-01,7.0711e-01,-5.6099e-01,4.3046e-01,7.0711e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-4.3046e-01,5.6099e-01,7.0711e-01,-4.3046e-01,5.6099e-01,7.0711e-01,-3.5355e-01,6.1237e-01,7.0711e-01,-3.5355e-01,6.1237e-01,7.0711e-01,-2.7060e-01,6.5328e-01,7.0711e-01,-2.7060e-01,6.5328e-01,7.0711e-01,-1.8301e-01,6.8301e-01,7.0711e-01,-1.8301e-01,6.8301e-01,7.0711e-01,-9.2296e-02,7.0106e-01,7.0711e-01,-9.2296e-02,7.0106e-01,7.0711e-01,-8.6596e-17,7.0711e-01,7.0711e-01,-8.6596e-17,7.0711e-01,7.0711e-01,9.2296e-02,7.0106e-01,7.0711e-01,9.2296e-02,7.0106e-01,7.0711e-01,1.8301e-01,6.8301e-01,7.0711e-01,1.8301e-01,6.8301e-01,7.0711e-01,2.7060e-01,6.5328e-01,7.0711e-01,2.7060e-01,6.5328e-01,7.0711e-01,3.5355e-01,6.1237e-01,7.0711e-01,3.5355e-01,6.1237e-01,7.0711e-01,4.3046e-01,5.6099e-01,7.0711e-01,4.3046e-01,5.6099e-01,7.0711e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.6099e-01,4.3046e-01,7.0711e-01,5.6099e-01,4.3046e-01,7.0711e-01,6.1237e-01,3.5355e-01,7.0711e-01,6.1237e-01,3.5355e-01,7.0711e-01,6.5328e-01,2.7060e-01,7.0711e-01,6.5328e-01,2.7060e-01,7.0711e-01,6.8301e-01,1.8301e-01,7.0711e-01,6.8301e-01,1.8301e-01,7.0711e-01,7.0106e-01,9.2296e-02,7.0711e-01,7.0106e-01,9.2296e-02,7.0711e-01,7.0711e-01,1.2989e-16,7.0711e-01,7.0711e-01,1.2989e-16,7.0711e-01,7.0106e-01,-9.2296e-02,7.0711e-01,7.0106e-01,-9.2296e-02,7.0711e-01,6.8301e-01,-1.8301e-01,7.0711e-01,6.8301e-01,-1.8301e-01,7.0711e-01,6.5328e-01,-2.7060e-01,7.0711e-01,6.5328e-01,-2.7060e-01,7.0711e-01,6.1237e-01,-3.5355e-01,7.0711e-01,6.1237e-01,-3.5355e-01,7.0711e-01,5.6099e-01,-4.3046e-01,7.0711e-01,5.6099e-01,-4.3046e-01,7.0711e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.0000e-01,-5.0000e-01,7.0711e-01,4.3046e-01,-5.6099e-01,7.0711e-01,4.3046e-01,-5.6099e-01,7.0711e-01,3.5355e-01,-6.1237e-01,7.0711e-01,3.5355e-01,-6.1237e-01,7.0711e-01,2.7060e-01,-6.5328e-01,7.0711e-01,2.7060e-01,-6.5328e-01,7.0711e-01,1.8301e-01,-6.8301e-01,7.0711e-01,1.8301e-01,-6.8301e-01,7.0711e-01,9.2296e-02,-7.0106e-01,7.0711e-01,9.2296e-02,-7.0106e-01,7.0711e-01});
			return Normal_7_638_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #644, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_644_point()
		{
			MFVec3f Coordinate_7_644_point = new MFVec3f(new double[] {0.0000e+00,-1.2500e+00,1.8750e+01,0.0000e+00,-1.0000e+00,1.9000e+01,-1.6316e-01,-1.2393e+00,1.8750e+01,-1.3053e-01,-9.9144e-01,1.9000e+01,-3.2352e-01,-1.2074e+00,1.8750e+01,-2.5882e-01,-9.6593e-01,1.9000e+01,-4.7835e-01,-1.1548e+00,1.8750e+01,-3.8268e-01,-9.2388e-01,1.9000e+01,-6.2500e-01,-1.0825e+00,1.8750e+01,-5.0000e-01,-8.6603e-01,1.9000e+01,-7.6095e-01,-9.9169e-01,1.8750e+01,-6.0876e-01,-7.9335e-01,1.9000e+01,-8.8388e-01,-8.8388e-01,1.8750e+01,-7.0711e-01,-7.0711e-01,1.9000e+01,-9.9169e-01,-7.6095e-01,1.8750e+01,-7.9335e-01,-6.0876e-01,1.9000e+01,-1.0825e+00,-6.2500e-01,1.8750e+01,-8.6603e-01,-5.0000e-01,1.9000e+01,-1.1548e+00,-4.7835e-01,1.8750e+01,-9.2388e-01,-3.8268e-01,1.9000e+01,-1.2074e+00,-3.2352e-01,1.8750e+01,-9.6593e-01,-2.5882e-01,1.9000e+01,-1.2393e+00,-1.6316e-01,1.8750e+01,-9.9144e-01,-1.3053e-01,1.9000e+01,-1.2500e+00,-7.6540e-17,1.8750e+01,-1.0000e+00,-6.1232e-17,1.9000e+01,-1.2393e+00,1.6316e-01,1.8750e+01,-9.9144e-01,1.3053e-01,1.9000e+01,-1.2074e+00,3.2352e-01,1.8750e+01,-9.6593e-01,2.5882e-01,1.9000e+01,-1.1548e+00,4.7835e-01,1.8750e+01,-9.2388e-01,3.8268e-01,1.9000e+01,-1.0825e+00,6.2500e-01,1.8750e+01,-8.6603e-01,5.0000e-01,1.9000e+01,-9.9169e-01,7.6095e-01,1.8750e+01,-7.9335e-01,6.0876e-01,1.9000e+01,-8.8388e-01,8.8388e-01,1.8750e+01,-7.0711e-01,7.0711e-01,1.9000e+01,-7.6095e-01,9.9169e-01,1.8750e+01,-6.0876e-01,7.9335e-01,1.9000e+01,-6.2500e-01,1.0825e+00,1.8750e+01,-5.0000e-01,8.6603e-01,1.9000e+01,-4.7835e-01,1.1548e+00,1.8750e+01,-3.8268e-01,9.2388e-01,1.9000e+01,-3.2352e-01,1.2074e+00,1.8750e+01,-2.5882e-01,9.6593e-01,1.9000e+01,-1.6316e-01,1.2393e+00,1.8750e+01,-1.3053e-01,9.9144e-01,1.9000e+01,-1.5308e-16,1.2500e+00,1.8750e+01,-1.2246e-16,1.0000e+00,1.9000e+01,1.6316e-01,1.2393e+00,1.8750e+01,1.3053e-01,9.9144e-01,1.9000e+01,3.2352e-01,1.2074e+00,1.8750e+01,2.5882e-01,9.6593e-01,1.9000e+01,4.7835e-01,1.1548e+00,1.8750e+01,3.8268e-01,9.2388e-01,1.9000e+01,6.2500e-01,1.0825e+00,1.8750e+01,5.0000e-01,8.6603e-01,1.9000e+01,7.6095e-01,9.9169e-01,1.8750e+01,6.0876e-01,7.9335e-01,1.9000e+01,8.8388e-01,8.8388e-01,1.8750e+01,7.0711e-01,7.0711e-01,1.9000e+01,9.9169e-01,7.6095e-01,1.8750e+01,7.9335e-01,6.0876e-01,1.9000e+01,1.0825e+00,6.2500e-01,1.8750e+01,8.6603e-01,5.0000e-01,1.9000e+01,1.1548e+00,4.7835e-01,1.8750e+01,9.2388e-01,3.8268e-01,1.9000e+01,1.2074e+00,3.2352e-01,1.8750e+01,9.6593e-01,2.5882e-01,1.9000e+01,1.2393e+00,1.6316e-01,1.8750e+01,9.9144e-01,1.3053e-01,1.9000e+01,1.2500e+00,2.2962e-16,1.8750e+01,1.0000e+00,1.8370e-16,1.9000e+01,1.2393e+00,-1.6316e-01,1.8750e+01,9.9144e-01,-1.3053e-01,1.9000e+01,1.2074e+00,-3.2352e-01,1.8750e+01,9.6593e-01,-2.5882e-01,1.9000e+01,1.1548e+00,-4.7835e-01,1.8750e+01,9.2388e-01,-3.8268e-01,1.9000e+01,1.0825e+00,-6.2500e-01,1.8750e+01,8.6603e-01,-5.0000e-01,1.9000e+01,9.9169e-01,-7.6095e-01,1.8750e+01,7.9335e-01,-6.0876e-01,1.9000e+01,8.8388e-01,-8.8388e-01,1.8750e+01,7.0711e-01,-7.0711e-01,1.9000e+01,7.6095e-01,-9.9169e-01,1.8750e+01,6.0876e-01,-7.9335e-01,1.9000e+01,6.2500e-01,-1.0825e+00,1.8750e+01,5.0000e-01,-8.6603e-01,1.9000e+01,4.7835e-01,-1.1548e+00,1.8750e+01,3.8268e-01,-9.2388e-01,1.9000e+01,3.2352e-01,-1.2074e+00,1.8750e+01,2.5882e-01,-9.6593e-01,1.9000e+01,1.6316e-01,-1.2393e+00,1.8750e+01,1.3053e-01,-9.9144e-01,1.9000e+01});
			return Coordinate_7_644_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #645, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_645_vector()
		{
			MFVec3f Normal_7_645_vector = new MFVec3f(new double[] {0.0000e+00,-7.0711e-01,7.0711e-01,0.0000e+00,-7.0711e-01,7.0711e-01,-9.2296e-02,-7.0106e-01,7.0711e-01,-9.2296e-02,-7.0106e-01,7.0711e-01,-1.8301e-01,-6.8301e-01,7.0711e-01,-1.8301e-01,-6.8301e-01,7.0711e-01,-2.7060e-01,-6.5328e-01,7.0711e-01,-2.7060e-01,-6.5328e-01,7.0711e-01,-3.5355e-01,-6.1237e-01,7.0711e-01,-3.5355e-01,-6.1237e-01,7.0711e-01,-4.3046e-01,-5.6099e-01,7.0711e-01,-4.3046e-01,-5.6099e-01,7.0711e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.0000e-01,-5.0000e-01,7.0711e-01,-5.6099e-01,-4.3046e-01,7.0711e-01,-5.6099e-01,-4.3046e-01,7.0711e-01,-6.1237e-01,-3.5355e-01,7.0711e-01,-6.1237e-01,-3.5355e-01,7.0711e-01,-6.5328e-01,-2.7060e-01,7.0711e-01,-6.5328e-01,-2.7060e-01,7.0711e-01,-6.8301e-01,-1.8301e-01,7.0711e-01,-6.8301e-01,-1.8301e-01,7.0711e-01,-7.0106e-01,-9.2296e-02,7.0711e-01,-7.0106e-01,-9.2296e-02,7.0711e-01,-7.0711e-01,-4.3298e-17,7.0711e-01,-7.0711e-01,-4.3298e-17,7.0711e-01,-7.0106e-01,9.2296e-02,7.0711e-01,-7.0106e-01,9.2296e-02,7.0711e-01,-6.8301e-01,1.8301e-01,7.0711e-01,-6.8301e-01,1.8301e-01,7.0711e-01,-6.5328e-01,2.7060e-01,7.0711e-01,-6.5328e-01,2.7060e-01,7.0711e-01,-6.1237e-01,3.5355e-01,7.0711e-01,-6.1237e-01,3.5355e-01,7.0711e-01,-5.6099e-01,4.3046e-01,7.0711e-01,-5.6099e-01,4.3046e-01,7.0711e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-5.0000e-01,5.0000e-01,7.0711e-01,-4.3046e-01,5.6099e-01,7.0711e-01,-4.3046e-01,5.6099e-01,7.0711e-01,-3.5355e-01,6.1237e-01,7.0711e-01,-3.5355e-01,6.1237e-01,7.0711e-01,-2.7060e-01,6.5328e-01,7.0711e-01,-2.7060e-01,6.5328e-01,7.0711e-01,-1.8301e-01,6.8301e-01,7.0711e-01,-1.8301e-01,6.8301e-01,7.0711e-01,-9.2296e-02,7.0106e-01,7.0711e-01,-9.2296e-02,7.0106e-01,7.0711e-01,-8.6596e-17,7.0711e-01,7.0711e-01,-8.6596e-17,7.0711e-01,7.0711e-01,9.2296e-02,7.0106e-01,7.0711e-01,9.2296e-02,7.0106e-01,7.0711e-01,1.8301e-01,6.8301e-01,7.0711e-01,1.8301e-01,6.8301e-01,7.0711e-01,2.7060e-01,6.5328e-01,7.0711e-01,2.7060e-01,6.5328e-01,7.0711e-01,3.5355e-01,6.1237e-01,7.0711e-01,3.5355e-01,6.1237e-01,7.0711e-01,4.3046e-01,5.6099e-01,7.0711e-01,4.3046e-01,5.6099e-01,7.0711e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.0000e-01,5.0000e-01,7.0711e-01,5.6099e-01,4.3046e-01,7.0711e-01,5.6099e-01,4.3046e-01,7.0711e-01,6.1237e-01,3.5355e-01,7.0711e-01,6.1237e-01,3.5355e-01,7.0711e-01,6.5328e-01,2.7060e-01,7.0711e-01,6.5328e-01,2.7060e-01,7.0711e-01,6.8301e-01,1.8301e-01,7.0711e-01,6.8301e-01,1.8301e-01,7.0711e-01,7.0106e-01,9.2296e-02,7.0711e-01,7.0106e-01,9.2296e-02,7.0711e-01,7.0711e-01,1.2989e-16,7.0711e-01,7.0711e-01,1.2989e-16,7.0711e-01,7.0106e-01,-9.2296e-02,7.0711e-01,7.0106e-01,-9.2296e-02,7.0711e-01,6.8301e-01,-1.8301e-01,7.0711e-01,6.8301e-01,-1.8301e-01,7.0711e-01,6.5328e-01,-2.7060e-01,7.0711e-01,6.5328e-01,-2.7060e-01,7.0711e-01,6.1237e-01,-3.5355e-01,7.0711e-01,6.1237e-01,-3.5355e-01,7.0711e-01,5.6099e-01,-4.3046e-01,7.0711e-01,5.6099e-01,-4.3046e-01,7.0711e-01,5.0000e-01,-5.0000e-01,7.0711e-01,5.0000e-01,-5.0000e-01,7.0711e-01,4.3046e-01,-5.6099e-01,7.0711e-01,4.3046e-01,-5.6099e-01,7.0711e-01,3.5355e-01,-6.1237e-01,7.0711e-01,3.5355e-01,-6.1237e-01,7.0711e-01,2.7060e-01,-6.5328e-01,7.0711e-01,2.7060e-01,-6.5328e-01,7.0711e-01,1.8301e-01,-6.8301e-01,7.0711e-01,1.8301e-01,-6.8301e-01,7.0711e-01,9.2296e-02,-7.0106e-01,7.0711e-01,9.2296e-02,-7.0106e-01,7.0711e-01});
			return Normal_7_645_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #651, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_651_point()
		{
			MFVec3f Coordinate_7_651_point = new MFVec3f(new double[] {0.0000e+00,-5.3750e+00,0.0000e+00,0.0000e+00,-5.0000e+00,3.7500e-01,-7.0158e-01,-5.3290e+00,0.0000e+00,-6.5263e-01,-4.9572e+00,3.7500e-01,-1.3912e+00,-5.1919e+00,0.0000e+00,-1.2941e+00,-4.8296e+00,3.7500e-01,-2.0569e+00,-4.9659e+00,0.0000e+00,-1.9134e+00,-4.6194e+00,3.7500e-01,-2.6875e+00,-4.6549e+00,0.0000e+00,-2.5000e+00,-4.3301e+00,3.7500e-01,-3.2721e+00,-4.2643e+00,0.0000e+00,-3.0438e+00,-3.9668e+00,3.7500e-01,-3.8007e+00,-3.8007e+00,0.0000e+00,-3.5355e+00,-3.5355e+00,3.7500e-01,-4.2643e+00,-3.2721e+00,0.0000e+00,-3.9668e+00,-3.0438e+00,3.7500e-01,-4.6549e+00,-2.6875e+00,0.0000e+00,-4.3301e+00,-2.5000e+00,3.7500e-01,-4.9659e+00,-2.0569e+00,0.0000e+00,-4.6194e+00,-1.9134e+00,3.7500e-01,-5.1919e+00,-1.3912e+00,0.0000e+00,-4.8296e+00,-1.2941e+00,3.7500e-01,-5.3290e+00,-7.0158e-01,0.0000e+00,-4.9572e+00,-6.5263e-01,3.7500e-01,-5.3750e+00,-3.2912e-16,0.0000e+00,-5.0000e+00,-3.0616e-16,3.7500e-01,-5.3290e+00,7.0158e-01,0.0000e+00,-4.9572e+00,6.5263e-01,3.7500e-01,-5.1919e+00,1.3912e+00,0.0000e+00,-4.8296e+00,1.2941e+00,3.7500e-01,-4.9659e+00,2.0569e+00,0.0000e+00,-4.6194e+00,1.9134e+00,3.7500e-01,-4.6549e+00,2.6875e+00,0.0000e+00,-4.3301e+00,2.5000e+00,3.7500e-01,-4.2643e+00,3.2721e+00,0.0000e+00,-3.9668e+00,3.0438e+00,3.7500e-01,-3.8007e+00,3.8007e+00,0.0000e+00,-3.5355e+00,3.5355e+00,3.7500e-01,-3.2721e+00,4.2643e+00,0.0000e+00,-3.0438e+00,3.9668e+00,3.7500e-01,-2.6875e+00,4.6549e+00,0.0000e+00,-2.5000e+00,4.3301e+00,3.7500e-01,-2.0569e+00,4.9659e+00,0.0000e+00,-1.9134e+00,4.6194e+00,3.7500e-01,-1.3912e+00,5.1919e+00,0.0000e+00,-1.2941e+00,4.8296e+00,3.7500e-01,-7.0158e-01,5.3290e+00,0.0000e+00,-6.5263e-01,4.9572e+00,3.7500e-01,-6.5825e-16,5.3750e+00,0.0000e+00,-6.1232e-16,5.0000e+00,3.7500e-01,7.0158e-01,5.3290e+00,0.0000e+00,6.5263e-01,4.9572e+00,3.7500e-01,1.3912e+00,5.1919e+00,0.0000e+00,1.2941e+00,4.8296e+00,3.7500e-01,2.0569e+00,4.9659e+00,0.0000e+00,1.9134e+00,4.6194e+00,3.7500e-01,2.6875e+00,4.6549e+00,0.0000e+00,2.5000e+00,4.3301e+00,3.7500e-01,3.2721e+00,4.2643e+00,0.0000e+00,3.0438e+00,3.9668e+00,3.7500e-01,3.8007e+00,3.8007e+00,0.0000e+00,3.5355e+00,3.5355e+00,3.7500e-01,4.2643e+00,3.2721e+00,0.0000e+00,3.9668e+00,3.0438e+00,3.7500e-01,4.6549e+00,2.6875e+00,0.0000e+00,4.3301e+00,2.5000e+00,3.7500e-01,4.9659e+00,2.0569e+00,0.0000e+00,4.6194e+00,1.9134e+00,3.7500e-01,5.1919e+00,1.3912e+00,0.0000e+00,4.8296e+00,1.2941e+00,3.7500e-01,5.3290e+00,7.0158e-01,0.0000e+00,4.9572e+00,6.5263e-01,3.7500e-01,5.3750e+00,9.8737e-16,0.0000e+00,5.0000e+00,9.1849e-16,3.7500e-01,5.3290e+00,-7.0158e-01,0.0000e+00,4.9572e+00,-6.5263e-01,3.7500e-01,5.1919e+00,-1.3912e+00,0.0000e+00,4.8296e+00,-1.2941e+00,3.7500e-01,4.9659e+00,-2.0569e+00,0.0000e+00,4.6194e+00,-1.9134e+00,3.7500e-01,4.6549e+00,-2.6875e+00,0.0000e+00,4.3301e+00,-2.5000e+00,3.7500e-01,4.2643e+00,-3.2721e+00,0.0000e+00,3.9668e+00,-3.0438e+00,3.7500e-01,3.8007e+00,-3.8007e+00,0.0000e+00,3.5355e+00,-3.5355e+00,3.7500e-01,3.2721e+00,-4.2643e+00,0.0000e+00,3.0438e+00,-3.9668e+00,3.7500e-01,2.6875e+00,-4.6549e+00,0.0000e+00,2.5000e+00,-4.3301e+00,3.7500e-01,2.0569e+00,-4.9659e+00,0.0000e+00,1.9134e+00,-4.6194e+00,3.7500e-01,1.3912e+00,-5.1919e+00,0.0000e+00,1.2941e+00,-4.8296e+00,3.7500e-01,7.0158e-01,-5.3290e+00,0.0000e+00,6.5263e-01,-4.9572e+00,3.7500e-01});
			return Coordinate_7_651_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #652, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_652_vector()
		{
			MFVec3f Normal_7_652_vector = new MFVec3f(new double[] {-0.0000e+00,7.0711e-01,-7.0711e-01,-0.0000e+00,7.0711e-01,-7.0711e-01,9.2296e-02,7.0106e-01,-7.0711e-01,9.2296e-02,7.0106e-01,-7.0711e-01,1.8301e-01,6.8301e-01,-7.0711e-01,1.8301e-01,6.8301e-01,-7.0711e-01,2.7060e-01,6.5328e-01,-7.0711e-01,2.7060e-01,6.5328e-01,-7.0711e-01,3.5355e-01,6.1237e-01,-7.0711e-01,3.5355e-01,6.1237e-01,-7.0711e-01,4.3046e-01,5.6099e-01,-7.0711e-01,4.3046e-01,5.6099e-01,-7.0711e-01,5.0000e-01,5.0000e-01,-7.0711e-01,5.0000e-01,5.0000e-01,-7.0711e-01,5.6099e-01,4.3046e-01,-7.0711e-01,5.6099e-01,4.3046e-01,-7.0711e-01,6.1237e-01,3.5355e-01,-7.0711e-01,6.1237e-01,3.5355e-01,-7.0711e-01,6.5328e-01,2.7060e-01,-7.0711e-01,6.5328e-01,2.7060e-01,-7.0711e-01,6.8301e-01,1.8301e-01,-7.0711e-01,6.8301e-01,1.8301e-01,-7.0711e-01,7.0106e-01,9.2296e-02,-7.0711e-01,7.0106e-01,9.2296e-02,-7.0711e-01,7.0711e-01,4.3298e-17,-7.0711e-01,7.0711e-01,4.3298e-17,-7.0711e-01,7.0106e-01,-9.2296e-02,-7.0711e-01,7.0106e-01,-9.2296e-02,-7.0711e-01,6.8301e-01,-1.8301e-01,-7.0711e-01,6.8301e-01,-1.8301e-01,-7.0711e-01,6.5328e-01,-2.7060e-01,-7.0711e-01,6.5328e-01,-2.7060e-01,-7.0711e-01,6.1237e-01,-3.5355e-01,-7.0711e-01,6.1237e-01,-3.5355e-01,-7.0711e-01,5.6099e-01,-4.3046e-01,-7.0711e-01,5.6099e-01,-4.3046e-01,-7.0711e-01,5.0000e-01,-5.0000e-01,-7.0711e-01,5.0000e-01,-5.0000e-01,-7.0711e-01,4.3046e-01,-5.6099e-01,-7.0711e-01,4.3046e-01,-5.6099e-01,-7.0711e-01,3.5355e-01,-6.1237e-01,-7.0711e-01,3.5355e-01,-6.1237e-01,-7.0711e-01,2.7060e-01,-6.5328e-01,-7.0711e-01,2.7060e-01,-6.5328e-01,-7.0711e-01,1.8301e-01,-6.8301e-01,-7.0711e-01,1.8301e-01,-6.8301e-01,-7.0711e-01,9.2296e-02,-7.0106e-01,-7.0711e-01,9.2296e-02,-7.0106e-01,-7.0711e-01,8.6596e-17,-7.0711e-01,-7.0711e-01,8.6596e-17,-7.0711e-01,-7.0711e-01,-9.2296e-02,-7.0106e-01,-7.0711e-01,-9.2296e-02,-7.0106e-01,-7.0711e-01,-1.8301e-01,-6.8301e-01,-7.0711e-01,-1.8301e-01,-6.8301e-01,-7.0711e-01,-2.7060e-01,-6.5328e-01,-7.0711e-01,-2.7060e-01,-6.5328e-01,-7.0711e-01,-3.5355e-01,-6.1237e-01,-7.0711e-01,-3.5355e-01,-6.1237e-01,-7.0711e-01,-4.3046e-01,-5.6099e-01,-7.0711e-01,-4.3046e-01,-5.6099e-01,-7.0711e-01,-5.0000e-01,-5.0000e-01,-7.0711e-01,-5.0000e-01,-5.0000e-01,-7.0711e-01,-5.6099e-01,-4.3046e-01,-7.0711e-01,-5.6099e-01,-4.3046e-01,-7.0711e-01,-6.1237e-01,-3.5355e-01,-7.0711e-01,-6.1237e-01,-3.5355e-01,-7.0711e-01,-6.5328e-01,-2.7060e-01,-7.0711e-01,-6.5328e-01,-2.7060e-01,-7.0711e-01,-6.8301e-01,-1.8301e-01,-7.0711e-01,-6.8301e-01,-1.8301e-01,-7.0711e-01,-7.0106e-01,-9.2296e-02,-7.0711e-01,-7.0106e-01,-9.2296e-02,-7.0711e-01,-7.0711e-01,-1.2989e-16,-7.0711e-01,-7.0711e-01,-1.2989e-16,-7.0711e-01,-7.0106e-01,9.2296e-02,-7.0711e-01,-7.0106e-01,9.2296e-02,-7.0711e-01,-6.8301e-01,1.8301e-01,-7.0711e-01,-6.8301e-01,1.8301e-01,-7.0711e-01,-6.5328e-01,2.7060e-01,-7.0711e-01,-6.5328e-01,2.7060e-01,-7.0711e-01,-6.1237e-01,3.5355e-01,-7.0711e-01,-6.1237e-01,3.5355e-01,-7.0711e-01,-5.6099e-01,4.3046e-01,-7.0711e-01,-5.6099e-01,4.3046e-01,-7.0711e-01,-5.0000e-01,5.0000e-01,-7.0711e-01,-5.0000e-01,5.0000e-01,-7.0711e-01,-4.3046e-01,5.6099e-01,-7.0711e-01,-4.3046e-01,5.6099e-01,-7.0711e-01,-3.5355e-01,6.1237e-01,-7.0711e-01,-3.5355e-01,6.1237e-01,-7.0711e-01,-2.7060e-01,6.5328e-01,-7.0711e-01,-2.7060e-01,6.5328e-01,-7.0711e-01,-1.8301e-01,6.8301e-01,-7.0711e-01,-1.8301e-01,6.8301e-01,-7.0711e-01,-9.2296e-02,7.0106e-01,-7.0711e-01,-9.2296e-02,7.0106e-01,-7.0711e-01});
			return Normal_7_652_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #658, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_658_point()
		{
			MFVec3f Coordinate_7_658_point = new MFVec3f(new double[] {-5.8749e+00,1.2189e+00,2.4017e+00,-5.6256e+00,2.0863e+00,2.2086e+00,-5.6370e+00,2.0752e+00,2.1525e+00,-5.8839e+00,1.2115e+00,2.3424e+00,-5.8808e+00,1.2264e+00,2.3400e+00,-5.8752e+00,1.2274e+00,2.3682e+00,-5.8727e+00,1.2294e+00,2.4000e+00,-5.7212e+00,1.8077e+00,2.2822e+00,-5.8839e+00,1.2115e+00,2.3424e+00,-5.6370e+00,2.0752e+00,2.1525e+00,-5.6624e+00,2.0692e+00,2.0962e+00,-5.9087e+00,1.2074e+00,2.2829e+00,-5.9047e+00,1.2267e+00,2.2799e+00,-5.8920e+00,1.2261e+00,2.3063e+00,-5.8816e+00,1.2263e+00,2.3368e+00,-5.8808e+00,1.2264e+00,2.3400e+00,-5.9087e+00,1.2074e+00,2.2829e+00,-5.6624e+00,2.0692e+00,2.0962e+00,-5.7014e+00,2.0698e+00,2.0454e+00,-5.9492e+00,1.2075e+00,2.2297e+00,-5.9444e+00,1.2308e+00,2.2261e+00,-5.9236e+00,1.2283e+00,2.2505e+00,-5.9061e+00,1.2268e+00,2.2774e+00,-5.9047e+00,1.2267e+00,2.2799e+00,-5.9492e+00,1.2075e+00,2.2297e+00,-5.7014e+00,2.0698e+00,2.0454e+00,-5.7508e+00,2.0772e+00,2.0053e+00,-6.0020e+00,1.2121e+00,2.1888e+00,-5.9964e+00,1.2384e+00,2.1847e+00,-5.9936e+00,1.2379e+00,2.1864e+00,-5.9677e+00,1.2340e+00,2.2047e+00,-5.9444e+00,1.2308e+00,2.2261e+00,-6.0020e+00,1.2121e+00,2.1888e+00,-5.7508e+00,2.0772e+00,2.0053e+00,-5.8055e+00,2.0903e+00,1.9791e+00,-6.0609e+00,1.2204e+00,2.1638e+00,-6.0549e+00,1.2486e+00,2.1593e+00,-6.0512e+00,1.2479e+00,2.1604e+00,-6.0216e+00,1.2426e+00,2.1716e+00,-5.9964e+00,1.2384e+00,2.1847e+00,-6.0609e+00,1.2204e+00,2.1638e+00,-5.8055e+00,2.0903e+00,1.9791e+00,-5.8600e+00,2.1074e+00,1.9674e+00,-6.1197e+00,1.2312e+00,2.1547e+00,-5.9747e+00,1.7789e+00,2.0497e+00,-6.1134e+00,1.2601e+00,2.1501e+00,-6.0819e+00,1.2538e+00,2.1532e+00,-6.0549e+00,1.2486e+00,2.1593e+00,-5.6256e+00,2.0863e+00,2.2086e+00,-5.2587e+00,2.8890e+00,1.9315e+00,-5.2726e+00,2.8763e+00,1.8795e+00,-5.6370e+00,2.0752e+00,2.1525e+00,-5.5168e+00,2.3591e+00,2.1255e+00,-5.2636e+00,2.8800e+00,1.9352e+00,-5.2805e+00,2.8533e+00,1.9124e+00,-5.2948e+00,2.8353e+00,1.8959e+00,-5.6370e+00,2.0752e+00,2.1525e+00,-5.2726e+00,2.8763e+00,1.8795e+00,-5.2983e+00,2.8700e+00,1.8274e+00,-5.6624e+00,2.0692e+00,2.0962e+00,-5.2948e+00,2.8353e+00,1.8959e+00,-5.3009e+00,2.8287e+00,1.8896e+00,-5.3245e+00,2.8066e+00,1.8673e+00,-5.3378e+00,2.7965e+00,1.8561e+00,-5.6624e+00,2.0692e+00,2.0962e+00,-5.2983e+00,2.8700e+00,1.8274e+00,-5.3349e+00,2.8714e+00,1.7797e+00,-5.7014e+00,2.0698e+00,2.0454e+00,-5.3378e+00,2.7965e+00,1.8561e+00,-5.3511e+00,2.7875e+00,1.8459e+00,-5.3805e+00,2.7719e+00,1.8258e+00,-5.3905e+00,2.7678e+00,1.8195e+00,-5.7014e+00,2.0698e+00,2.0454e+00,-5.3349e+00,2.8714e+00,1.7797e+00,-5.3797e+00,2.8809e+00,1.7408e+00,-5.7508e+00,2.0772e+00,2.0053e+00,-5.3905e+00,2.7678e+00,1.8195e+00,-5.4124e+00,2.7601e+00,1.8072e+00,-5.4466e+00,2.7526e+00,1.7907e+00,-5.4490e+00,2.7524e+00,1.7896e+00,-5.7508e+00,2.0772e+00,2.0053e+00,-5.3797e+00,2.8809e+00,1.7408e+00,-5.4288e+00,2.8971e+00,1.7136e+00,-5.8055e+00,2.0903e+00,1.9791e+00,-5.4490e+00,2.7524e+00,1.7896e+00,-5.4829e+00,2.7500e+00,1.7765e+00,-5.5087e+00,2.7500e+00,1.7692e+00,-5.8055e+00,2.0903e+00,1.9791e+00,-5.4288e+00,2.8971e+00,1.7136e+00,-5.4778e+00,2.9182e+00,1.6988e+00,-5.8600e+00,2.1074e+00,1.9674e+00,-5.5087e+00,2.7500e+00,1.7692e+00,-5.5113e+00,2.7500e+00,1.7686e+00,-5.5402e+00,2.7500e+00,1.7640e+00,-5.5696e+00,2.7500e+00,1.7625e+00,-5.7924e+00,2.2763e+00,1.9193e+00});
			return Coordinate_7_658_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #659, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_659_vector()
		{
			MFVec3f Normal_7_659_vector = new MFVec3f(new double[] {-9.7915e-01,2.0314e-01,-1.7889e-08,-9.3760e-01,3.4772e-01,-1.1849e-09,-8.9211e-01,3.9213e-01,2.2444e-01,-9.4322e-01,2.3262e-01,2.3713e-01,-9.4256e-01,2.3542e-01,2.3697e-01,-9.6678e-01,2.2257e-01,1.2567e-01,-9.7878e-01,2.0489e-01,1.4371e-06,-9.5351e-01,3.0135e-01,8.0757e-05,-9.4322e-01,2.3262e-01,2.3713e-01,-8.9211e-01,3.9213e-01,2.2444e-01,-7.9051e-01,4.1592e-01,4.4955e-01,-8.4394e-01,2.4909e-01,4.7510e-01,-8.4304e-01,2.5294e-01,4.7466e-01,-8.9552e-01,2.4705e-01,3.7014e-01,-9.3892e-01,2.3672e-01,2.4977e-01,-9.4256e-01,2.3542e-01,2.3697e-01,-8.4394e-01,2.4909e-01,4.7510e-01,-7.9051e-01,4.1592e-01,4.4955e-01,-6.3456e-01,4.1361e-01,6.5289e-01,-6.8179e-01,2.4861e-01,6.8801e-01,-6.8082e-01,2.5321e-01,6.8729e-01,-7.6547e-01,2.5539e-01,5.9062e-01,-8.3734e-01,2.5332e-01,4.8444e-01,-8.4304e-01,2.5294e-01,4.7466e-01,-6.8179e-01,2.4861e-01,6.8801e-01,-6.3456e-01,4.1361e-01,6.5289e-01,-4.3693e-01,3.8413e-01,8.1335e-01,-4.7080e-01,2.3032e-01,8.5164e-01,-4.7002e-01,2.3515e-01,8.5076e-01,-4.8131e-01,2.3645e-01,8.4406e-01,-5.8609e-01,2.4690e-01,7.7171e-01,-6.8082e-01,2.5321e-01,6.8729e-01,-4.7080e-01,2.3032e-01,8.5164e-01,-4.3693e-01,3.8413e-01,8.1335e-01,-2.1814e-01,3.3154e-01,9.1788e-01,-2.3499e-01,1.9700e-01,9.5183e-01,-2.3457e-01,2.0145e-01,9.5100e-01,-2.4947e-01,2.0391e-01,9.4667e-01,-3.6853e-01,2.2206e-01,9.0271e-01,-4.7002e-01,2.3515e-01,8.5076e-01,-2.3499e-01,1.9700e-01,9.5183e-01,-2.1814e-01,3.3154e-01,9.1788e-01,-5.5043e-10,2.6342e-01,9.6468e-01,-2.9772e-08,1.5390e-01,9.8809e-01,-6.4958e-05,2.2239e-01,9.7496e-01,-2.4838e-06,1.5751e-01,9.8752e-01,-1.2604e-01,1.8230e-01,9.7513e-01,-2.3457e-01,2.0145e-01,9.5100e-01,-9.3760e-01,3.4772e-01,-1.1849e-09,-8.7644e-01,4.8151e-01,-7.0222e-09,-8.2059e-01,5.3232e-01,2.0801e-01,-8.9211e-01,3.9213e-01,2.2444e-01,-9.1949e-01,3.9310e-01,4.5996e-05,-8.7726e-01,4.8001e-01,-4.0947e-06,-8.5193e-01,5.0936e-01,1.2150e-01,-8.2481e-01,5.2539e-01,2.0893e-01,-8.9211e-01,3.9213e-01,2.2444e-01,-8.2059e-01,5.3232e-01,2.0801e-01,-7.1801e-01,5.5765e-01,4.1652e-01,-7.9051e-01,4.1592e-01,4.4955e-01,-8.2481e-01,5.2539e-01,2.0893e-01,-8.1234e-01,5.3039e-01,2.4248e-01,-7.5859e-01,5.4258e-01,3.6075e-01,-7.2551e-01,5.4531e-01,4.1983e-01,-7.9051e-01,4.1592e-01,4.4955e-01,-7.1801e-01,5.5765e-01,4.1652e-01,-5.7157e-01,5.5190e-01,6.0721e-01,-6.3456e-01,4.1361e-01,6.5289e-01,-7.2551e-01,5.4531e-01,4.1983e-01,-6.9096e-01,5.4560e-01,4.7424e-01,-6.0981e-01,5.3916e-01,5.8089e-01,-5.8063e-01,5.3503e-01,6.1369e-01,-6.3456e-01,4.1361e-01,6.5289e-01,-5.7157e-01,5.5190e-01,6.0721e-01,-3.9207e-01,5.1424e-01,7.6279e-01,-4.3693e-01,3.8413e-01,8.1335e-01,-5.8063e-01,5.3503e-01,6.1369e-01,-5.1540e-01,5.2298e-01,6.7887e-01,-4.0787e-01,4.9664e-01,7.6616e-01,-3.9999e-01,4.9445e-01,7.7170e-01,-4.3693e-01,3.8413e-01,8.1335e-01,-3.9207e-01,5.1424e-01,7.6279e-01,-1.9581e-01,4.4910e-01,8.7176e-01,-2.1814e-01,3.3154e-01,9.1788e-01,-3.9999e-01,4.9445e-01,7.7170e-01,-2.8725e-01,4.5948e-01,8.4046e-01,-2.0029e-01,4.2832e-01,8.8115e-01,-2.1814e-01,3.3154e-01,9.1788e-01,-1.9581e-01,4.4910e-01,8.7176e-01,2.4267e-08,3.6478e-01,9.3109e-01,-5.5043e-10,2.6342e-01,9.6468e-01,-2.0029e-01,4.2832e-01,8.8115e-01,-1.9154e-01,4.2499e-01,8.8470e-01,-9.5854e-02,3.8636e-01,9.1735e-01,2.3896e-05,3.4380e-01,9.3904e-01,-2.1952e-05,2.8449e-01,9.5868e-01});
			return Normal_7_659_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #665, 366 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_665_index()
		{
			MFInt32 IndexedTriangleSet_6_665_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_665_index_1()));
			return IndexedTriangleSet_6_665_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #665, 804 total numbers made up of 268 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_665_point()
		{
			MFVec3f Coordinate_7_665_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_665_point_1()))
				.append(new MFVec3f(getCoordinate_7_665_point_2()))
				.append(new MFVec3f(getCoordinate_7_665_point_3()));
			return Coordinate_7_665_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #666, 804 total numbers made up of 268 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_666_vector()
		{
			MFVec3f Normal_7_666_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_666_vector_1()))
				.append(new MFVec3f(getNormal_7_666_vector_2()))
				.append(new MFVec3f(getNormal_7_666_vector_3()));
			return Normal_7_666_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #672, 189 total numbers made up of 63 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_672_point()
		{
			MFVec3f Coordinate_7_672_point = new MFVec3f(new double[] {-5.2636e+00,2.8800e+00,1.2500e+00,-5.2636e+00,2.8800e+00,1.9352e+00,-5.2794e+00,2.8548e+00,1.9352e+00,-5.2794e+00,2.8548e+00,1.2500e+00,-5.2636e+00,2.8800e+00,1.2500e+00,-5.2636e+00,2.8800e+00,1.9352e+00,-5.2794e+00,2.8548e+00,1.9137e+00,-5.2794e+00,2.8548e+00,1.2500e+00,-5.2794e+00,2.8548e+00,1.9352e+00,-5.2981e+00,2.8317e+00,1.9352e+00,-5.2981e+00,2.8317e+00,1.2500e+00,-5.2794e+00,2.8548e+00,1.9137e+00,-5.2805e+00,2.8533e+00,1.9124e+00,-5.2981e+00,2.8317e+00,1.8925e+00,-5.2981e+00,2.8317e+00,1.2500e+00,-5.2981e+00,2.8317e+00,1.9352e+00,-5.3193e+00,2.8110e+00,1.9352e+00,-5.3193e+00,2.8110e+00,1.2500e+00,-5.2981e+00,2.8317e+00,1.8925e+00,-5.3008e+00,2.8287e+00,1.8896e+00,-5.3193e+00,2.8110e+00,1.8719e+00,-5.3193e+00,2.8110e+00,1.2500e+00,-5.3193e+00,2.8110e+00,1.9352e+00,-5.3429e+00,2.7929e+00,1.9352e+00,-5.3429e+00,2.7929e+00,1.2500e+00,-5.3193e+00,2.8110e+00,1.8719e+00,-5.3245e+00,2.8066e+00,1.8673e+00,-5.3429e+00,2.7929e+00,1.8522e+00,-5.3429e+00,2.7929e+00,1.2500e+00,-5.3429e+00,2.7929e+00,1.9352e+00,-5.3685e+00,2.7777e+00,1.9352e+00,-5.3685e+00,2.7777e+00,1.2500e+00,-5.3429e+00,2.7929e+00,1.8522e+00,-5.3511e+00,2.7876e+00,1.8458e+00,-5.3685e+00,2.7777e+00,1.8338e+00,-5.3685e+00,2.7777e+00,1.2500e+00,-5.3685e+00,2.7777e+00,1.9352e+00,-5.3956e+00,2.7657e+00,1.9352e+00,-5.3956e+00,2.7657e+00,1.2500e+00,-5.3685e+00,2.7777e+00,1.8338e+00,-5.3805e+00,2.7720e+00,1.8257e+00,-5.3956e+00,2.7657e+00,1.8167e+00,-5.3956e+00,2.7657e+00,1.2500e+00,-5.3956e+00,2.7657e+00,1.9352e+00,-5.4240e+00,2.7570e+00,1.9352e+00,-5.4240e+00,2.7570e+00,1.2500e+00,-5.3956e+00,2.7657e+00,1.8167e+00,-5.4124e+00,2.7602e+00,1.8071e+00,-5.4240e+00,2.7570e+00,1.8014e+00,-5.4240e+00,2.7570e+00,1.2500e+00,-5.4240e+00,2.7570e+00,1.9352e+00,-5.4533e+00,2.7518e+00,1.9352e+00,-5.4533e+00,2.7518e+00,1.2500e+00,-5.4240e+00,2.7570e+00,1.8014e+00,-5.4466e+00,2.7527e+00,1.7906e+00,-5.4533e+00,2.7518e+00,1.7880e+00,-5.4533e+00,2.7518e+00,1.2500e+00,-5.4533e+00,2.7518e+00,1.9352e+00,-5.4829e+00,2.7500e+00,1.9352e+00,-5.4829e+00,2.7500e+00,1.2500e+00,-5.4533e+00,2.7518e+00,1.7880e+00,-5.4829e+00,2.7500e+00,1.7765e+00,-5.4829e+00,2.7500e+00,1.2500e+00});
			return Coordinate_7_672_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #673, 189 total numbers made up of 63 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_673_vector()
		{
			MFVec3f Normal_7_673_vector = new MFVec3f(new double[] {-8.7727e-01,4.8000e-01,-0.0000e+00,-8.7727e-01,4.8000e-01,-0.0000e+00,-8.1413e-01,5.8068e-01,-0.0000e+00,-8.1413e-01,5.8068e-01,-0.0000e+00,-8.7727e-01,4.8000e-01,-0.0000e+00,-8.7727e-01,4.8000e-01,-0.0000e+00,-8.1413e-01,5.8068e-01,-0.0000e+00,-8.1413e-01,5.8068e-01,-0.0000e+00,-8.1413e-01,5.8068e-01,-0.0000e+00,-7.3950e-01,6.7315e-01,-0.0000e+00,-7.3950e-01,6.7315e-01,-0.0000e+00,-8.1413e-01,5.8068e-01,-0.0000e+00,-8.0976e-01,5.8676e-01,-0.0000e+00,-7.3950e-01,6.7315e-01,-0.0000e+00,-7.3950e-01,6.7315e-01,-0.0000e+00,-7.3950e-01,6.7315e-01,-0.0000e+00,-6.5443e-01,7.5612e-01,-0.0000e+00,-6.5443e-01,7.5612e-01,-0.0000e+00,-7.3950e-01,6.7315e-01,-0.0000e+00,-7.2831e-01,6.8524e-01,-0.0000e+00,-6.5443e-01,7.5612e-01,-0.0000e+00,-6.5443e-01,7.5612e-01,-0.0000e+00,-6.5443e-01,7.5612e-01,-0.0000e+00,-5.6011e-01,8.2842e-01,-0.0000e+00,-5.6011e-01,8.2842e-01,-0.0000e+00,-6.5443e-01,7.5612e-01,-0.0000e+00,-6.3381e-01,7.7349e-01,-0.0000e+00,-5.6011e-01,8.2842e-01,-0.0000e+00,-5.6011e-01,8.2842e-01,-0.0000e+00,-5.6011e-01,8.2842e-01,-0.0000e+00,-4.5789e-01,8.8901e-01,-0.0000e+00,-4.5789e-01,8.8901e-01,-0.0000e+00,-5.6011e-01,8.2842e-01,-0.0000e+00,-5.2728e-01,8.4969e-01,-0.0000e+00,-4.5789e-01,8.8901e-01,-0.0000e+00,-4.5789e-01,8.8901e-01,-0.0000e+00,-4.5789e-01,8.8901e-01,-0.0000e+00,-3.4920e-01,9.3705e-01,-0.0000e+00,-3.4920e-01,9.3705e-01,-0.0000e+00,-4.5789e-01,8.8901e-01,-0.0000e+00,-4.0976e-01,9.1219e-01,-0.0000e+00,-3.4920e-01,9.3705e-01,-0.0000e+00,-3.4920e-01,9.3705e-01,-0.0000e+00,-3.4920e-01,9.3705e-01,-0.0000e+00,-2.3557e-01,9.7186e-01,-0.0000e+00,-2.3557e-01,9.7186e-01,-0.0000e+00,-3.4920e-01,9.3705e-01,-0.0000e+00,-2.8219e-01,9.5936e-01,-0.0000e+00,-2.3557e-01,9.7186e-01,-0.0000e+00,-2.3557e-01,9.7186e-01,-0.0000e+00,-2.3557e-01,9.7186e-01,-0.0000e+00,-1.1862e-01,9.9294e-01,-0.0000e+00,-1.1862e-01,9.9294e-01,-0.0000e+00,-2.3557e-01,9.7186e-01,-0.0000e+00,-1.4535e-01,9.8938e-01,-0.0000e+00,-1.1862e-01,9.9294e-01,-0.0000e+00,-1.1862e-01,9.9294e-01,-0.0000e+00,-1.1862e-01,9.9294e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-1.1862e-01,9.9294e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00});
			return Normal_7_673_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #686, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_686_point()
		{
			MFVec3f Coordinate_7_686_point = new MFVec3f(new double[] {-6.1197e+00,-1.2312e+00,2.1547e+00,-5.8600e+00,-2.1074e+00,1.9674e+00,-5.8055e+00,-2.0903e+00,1.9791e+00,-6.0609e+00,-1.2204e+00,2.1638e+00,-6.0549e+00,-1.2486e+00,2.1593e+00,-6.0819e+00,-1.2538e+00,2.1532e+00,-6.1134e+00,-1.2601e+00,2.1501e+00,-5.9747e+00,-1.7788e+00,2.0497e+00,-6.0609e+00,-1.2204e+00,2.1638e+00,-5.8055e+00,-2.0903e+00,1.9791e+00,-5.7508e+00,-2.0772e+00,2.0053e+00,-6.0020e+00,-1.2121e+00,2.1888e+00,-5.9964e+00,-1.2384e+00,2.1847e+00,-6.0216e+00,-1.2426e+00,2.1716e+00,-6.0512e+00,-1.2479e+00,2.1604e+00,-6.0549e+00,-1.2486e+00,2.1593e+00,-6.0020e+00,-1.2121e+00,2.1888e+00,-5.7508e+00,-2.0772e+00,2.0053e+00,-5.7014e+00,-2.0698e+00,2.0454e+00,-5.9492e+00,-1.2075e+00,2.2297e+00,-5.9444e+00,-1.2308e+00,2.2261e+00,-5.9677e+00,-1.2340e+00,2.2047e+00,-5.9936e+00,-1.2379e+00,2.1864e+00,-5.9964e+00,-1.2384e+00,2.1847e+00,-5.9492e+00,-1.2075e+00,2.2297e+00,-5.7014e+00,-2.0698e+00,2.0454e+00,-5.6624e+00,-2.0692e+00,2.0962e+00,-5.9087e+00,-1.2074e+00,2.2829e+00,-5.9047e+00,-1.2267e+00,2.2799e+00,-5.9061e+00,-1.2268e+00,2.2774e+00,-5.9236e+00,-1.2283e+00,2.2505e+00,-5.9444e+00,-1.2308e+00,2.2261e+00,-5.9087e+00,-1.2074e+00,2.2829e+00,-5.6624e+00,-2.0692e+00,2.0962e+00,-5.6370e+00,-2.0752e+00,2.1525e+00,-5.8839e+00,-1.2115e+00,2.3424e+00,-5.8808e+00,-1.2264e+00,2.3400e+00,-5.8816e+00,-1.2263e+00,2.3368e+00,-5.8920e+00,-1.2261e+00,2.3063e+00,-5.9047e+00,-1.2267e+00,2.2799e+00,-5.8839e+00,-1.2115e+00,2.3424e+00,-5.6370e+00,-2.0752e+00,2.1525e+00,-5.6256e+00,-2.0863e+00,2.2086e+00,-5.8749e+00,-1.2189e+00,2.4017e+00,-5.7212e+00,-1.8077e+00,2.2822e+00,-5.8727e+00,-1.2294e+00,2.4000e+00,-5.8752e+00,-1.2274e+00,2.3682e+00,-5.8808e+00,-1.2264e+00,2.3400e+00,-5.8600e+00,-2.1074e+00,1.9674e+00,-5.4778e+00,-2.9182e+00,1.6988e+00,-5.4288e+00,-2.8971e+00,1.7136e+00,-5.8055e+00,-2.0903e+00,1.9791e+00,-5.7924e+00,-2.2763e+00,1.9193e+00,-5.5696e+00,-2.7500e+00,1.7625e+00,-5.5402e+00,-2.7500e+00,1.7640e+00,-5.5113e+00,-2.7500e+00,1.7686e+00,-5.5087e+00,-2.7500e+00,1.7692e+00,-5.8055e+00,-2.0903e+00,1.9791e+00,-5.4288e+00,-2.8971e+00,1.7136e+00,-5.3797e+00,-2.8809e+00,1.7408e+00,-5.7508e+00,-2.0772e+00,2.0053e+00,-5.5087e+00,-2.7500e+00,1.7692e+00,-5.4829e+00,-2.7500e+00,1.7765e+00,-5.4490e+00,-2.7524e+00,1.7896e+00,-5.7508e+00,-2.0772e+00,2.0053e+00,-5.3797e+00,-2.8809e+00,1.7408e+00,-5.3349e+00,-2.8714e+00,1.7797e+00,-5.7014e+00,-2.0698e+00,2.0454e+00,-5.4490e+00,-2.7524e+00,1.7896e+00,-5.4466e+00,-2.7526e+00,1.7906e+00,-5.4124e+00,-2.7601e+00,1.8072e+00,-5.3905e+00,-2.7678e+00,1.8195e+00,-5.7014e+00,-2.0698e+00,2.0454e+00,-5.3349e+00,-2.8714e+00,1.7797e+00,-5.2983e+00,-2.8700e+00,1.8274e+00,-5.6624e+00,-2.0692e+00,2.0962e+00,-5.3905e+00,-2.7678e+00,1.8195e+00,-5.3805e+00,-2.7719e+00,1.8258e+00,-5.3511e+00,-2.7875e+00,1.8459e+00,-5.3378e+00,-2.7965e+00,1.8561e+00,-5.6624e+00,-2.0692e+00,2.0962e+00,-5.2983e+00,-2.8700e+00,1.8274e+00,-5.2726e+00,-2.8763e+00,1.8795e+00,-5.6370e+00,-2.0752e+00,2.1525e+00,-5.3378e+00,-2.7965e+00,1.8561e+00,-5.3245e+00,-2.8066e+00,1.8673e+00,-5.3008e+00,-2.8287e+00,1.8896e+00,-5.2948e+00,-2.8353e+00,1.8959e+00,-5.6370e+00,-2.0752e+00,2.1525e+00,-5.2726e+00,-2.8763e+00,1.8795e+00,-5.2587e+00,-2.8890e+00,1.9315e+00,-5.6256e+00,-2.0863e+00,2.2086e+00,-5.2948e+00,-2.8353e+00,1.8959e+00,-5.2805e+00,-2.8533e+00,1.9124e+00,-5.2636e+00,-2.8800e+00,1.9352e+00,-5.5168e+00,-2.3590e+00,2.1255e+00});
			return Coordinate_7_686_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #687, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_687_vector()
		{
			MFVec3f Normal_7_687_vector = new MFVec3f(new double[] {-2.9772e-08,-1.5390e-01,9.8809e-01,-5.5043e-10,-2.6342e-01,9.6468e-01,-2.1814e-01,-3.3154e-01,9.1788e-01,-2.3499e-01,-1.9700e-01,9.5183e-01,-2.3457e-01,-2.0145e-01,9.5100e-01,-1.2604e-01,-1.8230e-01,9.7513e-01,-2.4843e-06,-1.5751e-01,9.8752e-01,-6.4962e-05,-2.2239e-01,9.7496e-01,-2.3499e-01,-1.9700e-01,9.5183e-01,-2.1814e-01,-3.3154e-01,9.1788e-01,-4.3693e-01,-3.8413e-01,8.1335e-01,-4.7080e-01,-2.3032e-01,8.5164e-01,-4.7002e-01,-2.3515e-01,8.5076e-01,-3.6853e-01,-2.2206e-01,9.0271e-01,-2.4947e-01,-2.0391e-01,9.4667e-01,-2.3457e-01,-2.0145e-01,9.5100e-01,-4.7080e-01,-2.3032e-01,8.5164e-01,-4.3693e-01,-3.8413e-01,8.1335e-01,-6.3456e-01,-4.1361e-01,6.5289e-01,-6.8179e-01,-2.4861e-01,6.8801e-01,-6.8082e-01,-2.5321e-01,6.8729e-01,-5.8609e-01,-2.4690e-01,7.7171e-01,-4.8131e-01,-2.3645e-01,8.4406e-01,-4.7002e-01,-2.3515e-01,8.5076e-01,-6.8179e-01,-2.4861e-01,6.8801e-01,-6.3456e-01,-4.1361e-01,6.5289e-01,-7.9051e-01,-4.1592e-01,4.4955e-01,-8.4394e-01,-2.4909e-01,4.7510e-01,-8.4304e-01,-2.5294e-01,4.7466e-01,-8.3734e-01,-2.5332e-01,4.8444e-01,-7.6547e-01,-2.5539e-01,5.9061e-01,-6.8082e-01,-2.5321e-01,6.8729e-01,-8.4394e-01,-2.4909e-01,4.7510e-01,-7.9051e-01,-4.1592e-01,4.4955e-01,-8.9211e-01,-3.9213e-01,2.2444e-01,-9.4322e-01,-2.3262e-01,2.3713e-01,-9.4256e-01,-2.3542e-01,2.3697e-01,-9.3892e-01,-2.3672e-01,2.4977e-01,-8.9552e-01,-2.4705e-01,3.7014e-01,-8.4304e-01,-2.5294e-01,4.7466e-01,-9.4322e-01,-2.3262e-01,2.3713e-01,-8.9211e-01,-3.9213e-01,2.2444e-01,-9.3760e-01,-3.4772e-01,-1.1849e-09,-9.7915e-01,-2.0314e-01,-1.7889e-08,-9.5351e-01,-3.0135e-01,8.0752e-05,-9.7878e-01,-2.0489e-01,1.4376e-06,-9.6678e-01,-2.2257e-01,1.2567e-01,-9.4256e-01,-2.3542e-01,2.3697e-01,-5.5043e-10,-2.6342e-01,9.6468e-01,2.4267e-08,-3.6478e-01,9.3109e-01,-1.9581e-01,-4.4910e-01,8.7176e-01,-2.1814e-01,-3.3154e-01,9.1788e-01,-2.1952e-05,-2.8448e-01,9.5868e-01,2.3896e-05,-3.4380e-01,9.3904e-01,-9.5844e-02,-3.8635e-01,9.1736e-01,-1.9154e-01,-4.2499e-01,8.8470e-01,-2.0029e-01,-4.2832e-01,8.8115e-01,-2.1814e-01,-3.3154e-01,9.1788e-01,-1.9581e-01,-4.4910e-01,8.7176e-01,-3.9207e-01,-5.1424e-01,7.6279e-01,-4.3693e-01,-3.8413e-01,8.1335e-01,-2.0029e-01,-4.2832e-01,8.8115e-01,-2.8725e-01,-4.5948e-01,8.4046e-01,-3.9999e-01,-4.9445e-01,7.7170e-01,-4.3693e-01,-3.8413e-01,8.1335e-01,-3.9207e-01,-5.1424e-01,7.6279e-01,-5.7157e-01,-5.5190e-01,6.0721e-01,-6.3456e-01,-4.1361e-01,6.5289e-01,-3.9999e-01,-4.9445e-01,7.7170e-01,-4.0787e-01,-4.9664e-01,7.6616e-01,-5.1540e-01,-5.2298e-01,6.7886e-01,-5.8063e-01,-5.3503e-01,6.1369e-01,-6.3456e-01,-4.1361e-01,6.5289e-01,-5.7157e-01,-5.5190e-01,6.0721e-01,-7.1801e-01,-5.5765e-01,4.1652e-01,-7.9051e-01,-4.1592e-01,4.4955e-01,-5.8063e-01,-5.3503e-01,6.1369e-01,-6.0981e-01,-5.3916e-01,5.8089e-01,-6.9096e-01,-5.4560e-01,4.7423e-01,-7.2551e-01,-5.4531e-01,4.1983e-01,-7.9051e-01,-4.1592e-01,4.4955e-01,-7.1801e-01,-5.5765e-01,4.1652e-01,-8.2059e-01,-5.3232e-01,2.0801e-01,-8.9211e-01,-3.9213e-01,2.2444e-01,-7.2551e-01,-5.4531e-01,4.1983e-01,-7.5859e-01,-5.4258e-01,3.6075e-01,-8.1234e-01,-5.3039e-01,2.4248e-01,-8.2481e-01,-5.2539e-01,2.0893e-01,-8.9211e-01,-3.9213e-01,2.2444e-01,-8.2059e-01,-5.3232e-01,2.0801e-01,-8.7644e-01,-4.8151e-01,-7.0222e-09,-9.3760e-01,-3.4772e-01,-1.1849e-09,-8.2481e-01,-5.2539e-01,2.0893e-01,-8.5193e-01,-5.0936e-01,1.2150e-01,-8.7726e-01,-4.8001e-01,-4.0898e-06,-9.1949e-01,-3.9310e-01,4.5996e-05});
			return Normal_7_687_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #693, 171 total numbers made up of 57 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_693_point()
		{
			MFVec3f Coordinate_7_693_point = new MFVec3f(new double[] {-5.5257e+00,3.0234e+00,1.0048e+00,-5.5669e+00,3.0459e+00,1.0190e+00,-5.6048e+00,3.0667e+00,1.0421e+00,-5.6380e+00,3.0849e+00,1.0732e+00,-5.6653e+00,3.0998e+00,1.1111e+00,-5.6856e+00,3.1109e+00,1.1543e+00,-5.6980e+00,3.1177e+00,1.2012e+00,-5.7022e+00,3.1200e+00,1.2500e+00,-5.5209e+00,3.0306e+00,1.0048e+00,-5.5574e+00,3.0601e+00,1.0190e+00,-5.5910e+00,3.0872e+00,1.0421e+00,-5.6205e+00,3.1110e+00,1.0732e+00,-5.6447e+00,3.1305e+00,1.1111e+00,-5.6627e+00,3.1451e+00,1.1543e+00,-5.6737e+00,3.1540e+00,1.2012e+00,-5.6775e+00,3.1570e+00,1.2500e+00,-5.5148e+00,3.0369e+00,1.0048e+00,-5.5455e+00,3.0723e+00,1.0190e+00,-5.5738e+00,3.1050e+00,1.0421e+00,-5.5986e+00,3.1337e+00,1.0732e+00,-5.6190e+00,3.1572e+00,1.1111e+00,-5.6341e+00,3.1746e+00,1.1543e+00,-5.6434e+00,3.1854e+00,1.2012e+00,-5.6465e+00,3.1890e+00,1.2500e+00,-5.5078e+00,3.0420e+00,1.0048e+00,-5.5317e+00,3.0823e+00,1.0190e+00,-5.5537e+00,3.1195e+00,1.0421e+00,-5.5731e+00,3.1521e+00,1.0732e+00,-5.5889e+00,3.1788e+00,1.1111e+00,-5.6007e+00,3.1987e+00,1.1543e+00,-5.6080e+00,3.2109e+00,1.2012e+00,-5.6104e+00,3.2151e+00,1.2500e+00,-5.5000e+00,3.0457e+00,1.0048e+00,-5.5163e+00,3.0896e+00,1.0190e+00,-5.5314e+00,3.1301e+00,1.0421e+00,-5.5447e+00,3.1656e+00,1.0732e+00,-5.5555e+00,3.1948e+00,1.1111e+00,-5.5636e+00,3.2164e+00,1.1543e+00,-5.5685e+00,3.2298e+00,1.2012e+00,-5.5702e+00,3.2343e+00,1.2500e+00,-5.4916e+00,3.0480e+00,1.0048e+00,-5.4999e+00,3.0942e+00,1.0190e+00,-5.5076e+00,3.1367e+00,1.0421e+00,-5.5143e+00,3.1740e+00,1.0732e+00,-5.5198e+00,3.2046e+00,1.1111e+00,-5.5239e+00,3.2273e+00,1.1543e+00,-5.5264e+00,3.2413e+00,1.2012e+00,-5.5273e+00,3.2460e+00,1.2500e+00,-5.4829e+00,3.0488e+00,1.0048e+00,-5.4829e+00,3.0957e+00,1.0190e+00,-5.4829e+00,3.1389e+00,1.0421e+00,-5.4829e+00,3.1768e+00,1.0732e+00,-5.4829e+00,3.2079e+00,1.1111e+00,-5.4829e+00,3.2310e+00,1.1543e+00,-5.4829e+00,3.2452e+00,1.2012e+00,-5.4829e+00,3.2500e+00,1.2500e+00,-5.4829e+00,3.0000e+00,1.0000e+00});
			return Coordinate_7_693_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #694, 171 total numbers made up of 57 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_694_vector()
		{
			MFVec3f Normal_7_694_vector = new MFVec3f(new double[] {1.7115e-01,-9.3643e-02,9.8079e-01,3.3572e-01,-1.8369e-01,9.2388e-01,4.8738e-01,-2.6667e-01,8.3147e-01,6.2032e-01,-3.3941e-01,7.0711e-01,7.2942e-01,-3.9911e-01,5.5557e-01,8.1049e-01,-4.4346e-01,3.8268e-01,8.6041e-01,-4.7078e-01,1.9509e-01,8.7727e-01,-4.8000e-01,6.1232e-17,1.5182e-01,-1.2252e-01,9.8079e-01,2.9780e-01,-2.4033e-01,9.2388e-01,4.3234e-01,-3.4891e-01,8.3147e-01,5.5027e-01,-4.4408e-01,7.0711e-01,6.4704e-01,-5.2218e-01,5.5557e-01,7.1896e-01,-5.8022e-01,3.8268e-01,7.6324e-01,-6.1596e-01,1.9509e-01,7.7819e-01,-6.2802e-01,6.1232e-17,1.2767e-01,-1.4751e-01,9.8079e-01,2.5044e-01,-2.8936e-01,9.2388e-01,3.6358e-01,-4.2008e-01,8.3147e-01,4.6275e-01,-5.3466e-01,7.0711e-01,5.4414e-01,-6.2869e-01,5.5557e-01,6.0461e-01,-6.9857e-01,3.8268e-01,6.4185e-01,-7.4159e-01,1.9509e-01,6.5443e-01,-7.5612e-01,6.1232e-17,9.9477e-02,-1.6782e-01,9.8079e-01,1.9513e-01,-3.2920e-01,9.2388e-01,2.8329e-01,-4.7792e-01,8.3147e-01,3.6056e-01,-6.0828e-01,7.0711e-01,4.2397e-01,-7.1526e-01,5.5557e-01,4.7109e-01,-7.9475e-01,3.8268e-01,5.0010e-01,-8.4370e-01,1.9509e-01,5.0990e-01,-8.6023e-01,6.1232e-17,6.8125e-02,-1.8281e-01,9.8079e-01,1.3363e-01,-3.5859e-01,9.2388e-01,1.9400e-01,-5.2060e-01,8.3147e-01,2.4692e-01,-6.6259e-01,7.0711e-01,2.9035e-01,-7.7913e-01,5.5557e-01,3.2262e-01,-8.6572e-01,3.8268e-01,3.4249e-01,-9.1904e-01,1.9509e-01,3.4920e-01,-9.3705e-01,6.1232e-17,3.4612e-02,-1.9200e-01,9.8079e-01,6.7893e-02,-3.7661e-01,9.2388e-01,9.8565e-02,-5.4676e-01,8.3147e-01,1.2545e-01,-6.9589e-01,7.0711e-01,1.4751e-01,-8.1828e-01,5.5557e-01,1.6391e-01,-9.0922e-01,3.8268e-01,1.7400e-01,-9.6523e-01,1.9509e-01,1.7741e-01,-9.8414e-01,6.1232e-17,-9.1593e-16,-1.9509e-01,9.8079e-01,-1.7764e-15,-3.8268e-01,9.2388e-01,-2.5813e-15,-5.5557e-01,8.3147e-01,-3.2196e-15,-7.0711e-01,7.0711e-01,-3.8303e-15,-8.3147e-01,5.5557e-01,-4.2188e-15,-9.2388e-01,3.8268e-01,-4.5519e-15,-9.8079e-01,1.9509e-01,-4.6074e-15,-1.0000e+00,6.1232e-17,-0.0000e+00,-0.0000e+00,1.0000e+00});
			return Normal_7_694_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #707, 189 total numbers made up of 63 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_707_point()
		{
			MFVec3f Coordinate_7_707_point = new MFVec3f(new double[] {-5.4829e+00,-2.7500e+00,1.2500e+00,-5.4829e+00,-2.7500e+00,1.9352e+00,-5.4533e+00,-2.7518e+00,1.9352e+00,-5.4533e+00,-2.7518e+00,1.2500e+00,-5.4829e+00,-2.7500e+00,1.2500e+00,-5.4829e+00,-2.7500e+00,1.7765e+00,-5.4533e+00,-2.7518e+00,1.7880e+00,-5.4533e+00,-2.7518e+00,1.2500e+00,-5.4533e+00,-2.7518e+00,1.9352e+00,-5.4240e+00,-2.7570e+00,1.9352e+00,-5.4240e+00,-2.7570e+00,1.2500e+00,-5.4533e+00,-2.7518e+00,1.7880e+00,-5.4466e+00,-2.7527e+00,1.7906e+00,-5.4240e+00,-2.7570e+00,1.8014e+00,-5.4240e+00,-2.7570e+00,1.2500e+00,-5.4240e+00,-2.7570e+00,1.9352e+00,-5.3956e+00,-2.7657e+00,1.9352e+00,-5.3956e+00,-2.7657e+00,1.2500e+00,-5.4240e+00,-2.7570e+00,1.8014e+00,-5.4124e+00,-2.7602e+00,1.8071e+00,-5.3956e+00,-2.7657e+00,1.8167e+00,-5.3956e+00,-2.7657e+00,1.2500e+00,-5.3956e+00,-2.7657e+00,1.9352e+00,-5.3685e+00,-2.7777e+00,1.9352e+00,-5.3685e+00,-2.7777e+00,1.2500e+00,-5.3956e+00,-2.7657e+00,1.8167e+00,-5.3805e+00,-2.7720e+00,1.8257e+00,-5.3685e+00,-2.7777e+00,1.8338e+00,-5.3685e+00,-2.7777e+00,1.2500e+00,-5.3685e+00,-2.7777e+00,1.9352e+00,-5.3429e+00,-2.7929e+00,1.9352e+00,-5.3429e+00,-2.7929e+00,1.2500e+00,-5.3685e+00,-2.7777e+00,1.8338e+00,-5.3511e+00,-2.7876e+00,1.8458e+00,-5.3429e+00,-2.7929e+00,1.8522e+00,-5.3429e+00,-2.7929e+00,1.2500e+00,-5.3429e+00,-2.7929e+00,1.9352e+00,-5.3193e+00,-2.8110e+00,1.9352e+00,-5.3193e+00,-2.8110e+00,1.2500e+00,-5.3429e+00,-2.7929e+00,1.8522e+00,-5.3245e+00,-2.8066e+00,1.8673e+00,-5.3193e+00,-2.8110e+00,1.8719e+00,-5.3193e+00,-2.8110e+00,1.2500e+00,-5.3193e+00,-2.8110e+00,1.9352e+00,-5.2981e+00,-2.8317e+00,1.9352e+00,-5.2981e+00,-2.8317e+00,1.2500e+00,-5.3193e+00,-2.8110e+00,1.8719e+00,-5.3008e+00,-2.8287e+00,1.8896e+00,-5.2981e+00,-2.8317e+00,1.8925e+00,-5.2981e+00,-2.8317e+00,1.2500e+00,-5.2981e+00,-2.8317e+00,1.9352e+00,-5.2794e+00,-2.8548e+00,1.9352e+00,-5.2794e+00,-2.8548e+00,1.2500e+00,-5.2981e+00,-2.8317e+00,1.8925e+00,-5.2805e+00,-2.8533e+00,1.9124e+00,-5.2794e+00,-2.8548e+00,1.9137e+00,-5.2794e+00,-2.8548e+00,1.2500e+00,-5.2794e+00,-2.8548e+00,1.9352e+00,-5.2636e+00,-2.8800e+00,1.9352e+00,-5.2636e+00,-2.8800e+00,1.2500e+00,-5.2794e+00,-2.8548e+00,1.9137e+00,-5.2636e+00,-2.8800e+00,1.9352e+00,-5.2636e+00,-2.8800e+00,1.2500e+00});
			return Coordinate_7_707_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #708, 189 total numbers made up of 63 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_708_vector()
		{
			MFVec3f Normal_7_708_vector = new MFVec3f(new double[] {-1.2246e-16,-1.0000e+00,-0.0000e+00,-1.2246e-16,-1.0000e+00,-0.0000e+00,-1.1862e-01,-9.9294e-01,-0.0000e+00,-1.1862e-01,-9.9294e-01,-0.0000e+00,-1.2246e-16,-1.0000e+00,-0.0000e+00,-1.2246e-16,-1.0000e+00,-0.0000e+00,-1.1862e-01,-9.9294e-01,-0.0000e+00,-1.1862e-01,-9.9294e-01,-0.0000e+00,-1.1862e-01,-9.9294e-01,-0.0000e+00,-2.3557e-01,-9.7186e-01,-0.0000e+00,-2.3557e-01,-9.7186e-01,-0.0000e+00,-1.1862e-01,-9.9294e-01,-0.0000e+00,-1.4535e-01,-9.8938e-01,-0.0000e+00,-2.3557e-01,-9.7186e-01,-0.0000e+00,-2.3557e-01,-9.7186e-01,-0.0000e+00,-2.3557e-01,-9.7186e-01,-0.0000e+00,-3.4920e-01,-9.3705e-01,-0.0000e+00,-3.4920e-01,-9.3705e-01,-0.0000e+00,-2.3557e-01,-9.7186e-01,-0.0000e+00,-2.8219e-01,-9.5936e-01,-0.0000e+00,-3.4920e-01,-9.3705e-01,-0.0000e+00,-3.4920e-01,-9.3705e-01,-0.0000e+00,-3.4920e-01,-9.3705e-01,-0.0000e+00,-4.5789e-01,-8.8901e-01,-0.0000e+00,-4.5789e-01,-8.8901e-01,-0.0000e+00,-3.4920e-01,-9.3705e-01,-0.0000e+00,-4.0976e-01,-9.1219e-01,-0.0000e+00,-4.5789e-01,-8.8901e-01,-0.0000e+00,-4.5789e-01,-8.8901e-01,-0.0000e+00,-4.5789e-01,-8.8901e-01,-0.0000e+00,-5.6011e-01,-8.2842e-01,-0.0000e+00,-5.6011e-01,-8.2842e-01,-0.0000e+00,-4.5789e-01,-8.8901e-01,-0.0000e+00,-5.2728e-01,-8.4969e-01,-0.0000e+00,-5.6011e-01,-8.2842e-01,-0.0000e+00,-5.6011e-01,-8.2842e-01,-0.0000e+00,-5.6011e-01,-8.2842e-01,-0.0000e+00,-6.5443e-01,-7.5612e-01,-0.0000e+00,-6.5443e-01,-7.5612e-01,-0.0000e+00,-5.6011e-01,-8.2842e-01,-0.0000e+00,-6.3381e-01,-7.7349e-01,-0.0000e+00,-6.5443e-01,-7.5612e-01,-0.0000e+00,-6.5443e-01,-7.5612e-01,-0.0000e+00,-6.5443e-01,-7.5612e-01,-0.0000e+00,-7.3950e-01,-6.7315e-01,-0.0000e+00,-7.3950e-01,-6.7315e-01,-0.0000e+00,-6.5443e-01,-7.5612e-01,-0.0000e+00,-7.2831e-01,-6.8524e-01,-0.0000e+00,-7.3950e-01,-6.7315e-01,-0.0000e+00,-7.3950e-01,-6.7315e-01,-0.0000e+00,-7.3950e-01,-6.7315e-01,-0.0000e+00,-8.1413e-01,-5.8068e-01,-0.0000e+00,-8.1413e-01,-5.8068e-01,-0.0000e+00,-7.3950e-01,-6.7315e-01,-0.0000e+00,-8.0976e-01,-5.8676e-01,-0.0000e+00,-8.1413e-01,-5.8068e-01,-0.0000e+00,-8.1413e-01,-5.8068e-01,-0.0000e+00,-8.1413e-01,-5.8068e-01,-0.0000e+00,-8.7727e-01,-4.8000e-01,-0.0000e+00,-8.7727e-01,-4.8000e-01,-0.0000e+00,-8.1413e-01,-5.8068e-01,-0.0000e+00,-8.7727e-01,-4.8000e-01,-0.0000e+00,-8.7727e-01,-4.8000e-01,-0.0000e+00});
			return Normal_7_708_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #714, 594 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_714_index()
		{
			MFInt32 IndexedTriangleSet_6_714_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_714_index_1()));
			return IndexedTriangleSet_6_714_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #714, 360 total numbers made up of 120 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_714_point()
		{
			MFVec3f Coordinate_7_714_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_714_point_1()))
				.append(new MFVec3f(getCoordinate_7_714_point_2()));
			return Coordinate_7_714_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #715, 360 total numbers made up of 120 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_715_vector()
		{
			MFVec3f Normal_7_715_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_715_vector_1()))
				.append(new MFVec3f(getNormal_7_715_vector_2()));
			return Normal_7_715_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #728, 171 total numbers made up of 57 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_728_point()
		{
			MFVec3f Coordinate_7_728_point = new MFVec3f(new double[] {-5.4829e+00,-3.0488e+00,1.0048e+00,-5.4829e+00,-3.0957e+00,1.0190e+00,-5.4829e+00,-3.1389e+00,1.0421e+00,-5.4829e+00,-3.1768e+00,1.0732e+00,-5.4829e+00,-3.2079e+00,1.1111e+00,-5.4829e+00,-3.2310e+00,1.1543e+00,-5.4829e+00,-3.2452e+00,1.2012e+00,-5.4829e+00,-3.2500e+00,1.2500e+00,-5.4916e+00,-3.0480e+00,1.0048e+00,-5.4999e+00,-3.0942e+00,1.0190e+00,-5.5076e+00,-3.1367e+00,1.0421e+00,-5.5143e+00,-3.1740e+00,1.0732e+00,-5.5198e+00,-3.2046e+00,1.1111e+00,-5.5239e+00,-3.2273e+00,1.1543e+00,-5.5264e+00,-3.2413e+00,1.2012e+00,-5.5273e+00,-3.2460e+00,1.2500e+00,-5.5000e+00,-3.0457e+00,1.0048e+00,-5.5163e+00,-3.0896e+00,1.0190e+00,-5.5314e+00,-3.1301e+00,1.0421e+00,-5.5447e+00,-3.1656e+00,1.0732e+00,-5.5555e+00,-3.1948e+00,1.1111e+00,-5.5636e+00,-3.2164e+00,1.1543e+00,-5.5685e+00,-3.2298e+00,1.2012e+00,-5.5702e+00,-3.2343e+00,1.2500e+00,-5.5078e+00,-3.0420e+00,1.0048e+00,-5.5317e+00,-3.0823e+00,1.0190e+00,-5.5537e+00,-3.1195e+00,1.0421e+00,-5.5731e+00,-3.1521e+00,1.0732e+00,-5.5889e+00,-3.1788e+00,1.1111e+00,-5.6007e+00,-3.1987e+00,1.1543e+00,-5.6080e+00,-3.2109e+00,1.2012e+00,-5.6104e+00,-3.2151e+00,1.2500e+00,-5.5148e+00,-3.0369e+00,1.0048e+00,-5.5455e+00,-3.0723e+00,1.0190e+00,-5.5738e+00,-3.1050e+00,1.0421e+00,-5.5986e+00,-3.1337e+00,1.0732e+00,-5.6190e+00,-3.1572e+00,1.1111e+00,-5.6341e+00,-3.1746e+00,1.1543e+00,-5.6434e+00,-3.1854e+00,1.2012e+00,-5.6465e+00,-3.1890e+00,1.2500e+00,-5.5209e+00,-3.0306e+00,1.0048e+00,-5.5574e+00,-3.0601e+00,1.0190e+00,-5.5910e+00,-3.0872e+00,1.0421e+00,-5.6205e+00,-3.1110e+00,1.0732e+00,-5.6447e+00,-3.1305e+00,1.1111e+00,-5.6627e+00,-3.1451e+00,1.1543e+00,-5.6737e+00,-3.1540e+00,1.2012e+00,-5.6775e+00,-3.1570e+00,1.2500e+00,-5.5257e+00,-3.0234e+00,1.0048e+00,-5.5669e+00,-3.0459e+00,1.0190e+00,-5.6048e+00,-3.0667e+00,1.0421e+00,-5.6380e+00,-3.0849e+00,1.0732e+00,-5.6653e+00,-3.0998e+00,1.1111e+00,-5.6856e+00,-3.1109e+00,1.1543e+00,-5.6980e+00,-3.1177e+00,1.2012e+00,-5.7022e+00,-3.1200e+00,1.2500e+00,-5.4829e+00,-3.0000e+00,1.0000e+00});
			return Coordinate_7_728_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #729, 171 total numbers made up of 57 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_729_vector()
		{
			MFVec3f Normal_7_729_vector = new MFVec3f(new double[] {-2.3892e-17,1.9509e-01,9.8079e-01,-4.6865e-17,3.8268e-01,9.2388e-01,-6.8038e-17,5.5557e-01,8.3147e-01,-8.6596e-17,7.0711e-01,7.0711e-01,-1.0183e-16,8.3147e-01,5.5557e-01,-1.1314e-16,9.2388e-01,3.8268e-01,-1.2011e-16,9.8079e-01,1.9509e-01,-1.2246e-16,1.0000e+00,6.1232e-17,3.4612e-02,1.9200e-01,9.8079e-01,6.7893e-02,3.7661e-01,9.2388e-01,9.8565e-02,5.4676e-01,8.3147e-01,1.2545e-01,6.9589e-01,7.0711e-01,1.4751e-01,8.1828e-01,5.5557e-01,1.6391e-01,9.0922e-01,3.8268e-01,1.7400e-01,9.6523e-01,1.9509e-01,1.7741e-01,9.8414e-01,6.1232e-17,6.8125e-02,1.8281e-01,9.8079e-01,1.3363e-01,3.5859e-01,9.2388e-01,1.9400e-01,5.2060e-01,8.3147e-01,2.4692e-01,6.6259e-01,7.0711e-01,2.9035e-01,7.7913e-01,5.5557e-01,3.2262e-01,8.6572e-01,3.8268e-01,3.4249e-01,9.1904e-01,1.9509e-01,3.4920e-01,9.3705e-01,6.1232e-17,9.9477e-02,1.6782e-01,9.8079e-01,1.9513e-01,3.2920e-01,9.2388e-01,2.8329e-01,4.7792e-01,8.3147e-01,3.6056e-01,6.0828e-01,7.0711e-01,4.2397e-01,7.1526e-01,5.5557e-01,4.7109e-01,7.9475e-01,3.8268e-01,5.0010e-01,8.4370e-01,1.9509e-01,5.0990e-01,8.6023e-01,6.1232e-17,1.2767e-01,1.4751e-01,9.8079e-01,2.5044e-01,2.8936e-01,9.2388e-01,3.6358e-01,4.2008e-01,8.3147e-01,4.6275e-01,5.3466e-01,7.0711e-01,5.4414e-01,6.2869e-01,5.5557e-01,6.0461e-01,6.9857e-01,3.8268e-01,6.4185e-01,7.4159e-01,1.9509e-01,6.5443e-01,7.5612e-01,6.1232e-17,1.5182e-01,1.2252e-01,9.8079e-01,2.9780e-01,2.4033e-01,9.2388e-01,4.3234e-01,3.4891e-01,8.3147e-01,5.5027e-01,4.4408e-01,7.0711e-01,6.4704e-01,5.2218e-01,5.5557e-01,7.1896e-01,5.8022e-01,3.8268e-01,7.6324e-01,6.1596e-01,1.9509e-01,7.7819e-01,6.2802e-01,6.1232e-17,1.7115e-01,9.3643e-02,9.8079e-01,3.3572e-01,1.8369e-01,9.2388e-01,4.8738e-01,2.6667e-01,8.3147e-01,6.2032e-01,3.3941e-01,7.0711e-01,7.2942e-01,3.9911e-01,5.5557e-01,8.1049e-01,4.4346e-01,3.8268e-01,8.6041e-01,4.7078e-01,1.9509e-01,8.7727e-01,4.8000e-01,6.1232e-17,-0.0000e+00,-0.0000e+00,1.0000e+00});
			return Normal_7_729_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #735, 171 total numbers made up of 57 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_735_point()
		{
			MFVec3f Coordinate_7_735_point = new MFVec3f(new double[] {5.4829e+00,3.0488e+00,1.0048e+00,5.4829e+00,3.0957e+00,1.0190e+00,5.4829e+00,3.1389e+00,1.0421e+00,5.4829e+00,3.1768e+00,1.0732e+00,5.4829e+00,3.2079e+00,1.1111e+00,5.4829e+00,3.2310e+00,1.1543e+00,5.4829e+00,3.2452e+00,1.2012e+00,5.4829e+00,3.2500e+00,1.2500e+00,5.4916e+00,3.0480e+00,1.0048e+00,5.4999e+00,3.0942e+00,1.0190e+00,5.5076e+00,3.1367e+00,1.0421e+00,5.5143e+00,3.1740e+00,1.0732e+00,5.5198e+00,3.2046e+00,1.1111e+00,5.5239e+00,3.2273e+00,1.1543e+00,5.5264e+00,3.2413e+00,1.2012e+00,5.5273e+00,3.2460e+00,1.2500e+00,5.5000e+00,3.0457e+00,1.0048e+00,5.5163e+00,3.0896e+00,1.0190e+00,5.5314e+00,3.1301e+00,1.0421e+00,5.5447e+00,3.1656e+00,1.0732e+00,5.5555e+00,3.1948e+00,1.1111e+00,5.5636e+00,3.2164e+00,1.1543e+00,5.5685e+00,3.2298e+00,1.2012e+00,5.5702e+00,3.2343e+00,1.2500e+00,5.5078e+00,3.0420e+00,1.0048e+00,5.5317e+00,3.0823e+00,1.0190e+00,5.5537e+00,3.1195e+00,1.0421e+00,5.5731e+00,3.1521e+00,1.0732e+00,5.5889e+00,3.1788e+00,1.1111e+00,5.6007e+00,3.1987e+00,1.1543e+00,5.6080e+00,3.2109e+00,1.2012e+00,5.6104e+00,3.2151e+00,1.2500e+00,5.5148e+00,3.0369e+00,1.0048e+00,5.5455e+00,3.0723e+00,1.0190e+00,5.5738e+00,3.1050e+00,1.0421e+00,5.5986e+00,3.1337e+00,1.0732e+00,5.6190e+00,3.1572e+00,1.1111e+00,5.6341e+00,3.1746e+00,1.1543e+00,5.6434e+00,3.1854e+00,1.2012e+00,5.6465e+00,3.1890e+00,1.2500e+00,5.5209e+00,3.0306e+00,1.0048e+00,5.5574e+00,3.0601e+00,1.0190e+00,5.5910e+00,3.0872e+00,1.0421e+00,5.6205e+00,3.1110e+00,1.0732e+00,5.6447e+00,3.1305e+00,1.1111e+00,5.6627e+00,3.1451e+00,1.1543e+00,5.6737e+00,3.1540e+00,1.2012e+00,5.6775e+00,3.1570e+00,1.2500e+00,5.5257e+00,3.0234e+00,1.0048e+00,5.5669e+00,3.0459e+00,1.0190e+00,5.6048e+00,3.0667e+00,1.0421e+00,5.6380e+00,3.0849e+00,1.0732e+00,5.6653e+00,3.0998e+00,1.1111e+00,5.6856e+00,3.1109e+00,1.1543e+00,5.6980e+00,3.1177e+00,1.2012e+00,5.7022e+00,3.1200e+00,1.2500e+00,5.4829e+00,3.0000e+00,1.0000e+00});
			return Coordinate_7_735_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #736, 171 total numbers made up of 57 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_736_vector()
		{
			MFVec3f Normal_7_736_vector = new MFVec3f(new double[] {2.3892e-17,-1.9509e-01,9.8079e-01,4.6865e-17,-3.8268e-01,9.2388e-01,6.8038e-17,-5.5557e-01,8.3147e-01,8.6596e-17,-7.0711e-01,7.0711e-01,1.0183e-16,-8.3147e-01,5.5557e-01,1.1314e-16,-9.2388e-01,3.8268e-01,1.2011e-16,-9.8079e-01,1.9509e-01,1.2246e-16,-1.0000e+00,6.1232e-17,-3.4612e-02,-1.9200e-01,9.8079e-01,-6.7893e-02,-3.7661e-01,9.2388e-01,-9.8565e-02,-5.4676e-01,8.3147e-01,-1.2545e-01,-6.9589e-01,7.0711e-01,-1.4751e-01,-8.1828e-01,5.5557e-01,-1.6391e-01,-9.0922e-01,3.8268e-01,-1.7400e-01,-9.6523e-01,1.9509e-01,-1.7741e-01,-9.8414e-01,6.1232e-17,-6.8125e-02,-1.8281e-01,9.8079e-01,-1.3363e-01,-3.5859e-01,9.2388e-01,-1.9400e-01,-5.2060e-01,8.3147e-01,-2.4692e-01,-6.6259e-01,7.0711e-01,-2.9035e-01,-7.7913e-01,5.5557e-01,-3.2262e-01,-8.6572e-01,3.8268e-01,-3.4249e-01,-9.1904e-01,1.9509e-01,-3.4920e-01,-9.3705e-01,6.1232e-17,-9.9477e-02,-1.6782e-01,9.8079e-01,-1.9513e-01,-3.2920e-01,9.2388e-01,-2.8329e-01,-4.7792e-01,8.3147e-01,-3.6056e-01,-6.0828e-01,7.0711e-01,-4.2397e-01,-7.1526e-01,5.5557e-01,-4.7109e-01,-7.9475e-01,3.8268e-01,-5.0010e-01,-8.4370e-01,1.9509e-01,-5.0990e-01,-8.6023e-01,6.1232e-17,-1.2767e-01,-1.4751e-01,9.8079e-01,-2.5044e-01,-2.8936e-01,9.2388e-01,-3.6358e-01,-4.2008e-01,8.3147e-01,-4.6275e-01,-5.3466e-01,7.0711e-01,-5.4414e-01,-6.2869e-01,5.5557e-01,-6.0461e-01,-6.9857e-01,3.8268e-01,-6.4185e-01,-7.4159e-01,1.9509e-01,-6.5443e-01,-7.5612e-01,6.1232e-17,-1.5182e-01,-1.2252e-01,9.8079e-01,-2.9780e-01,-2.4033e-01,9.2388e-01,-4.3234e-01,-3.4891e-01,8.3147e-01,-5.5027e-01,-4.4408e-01,7.0711e-01,-6.4704e-01,-5.2218e-01,5.5557e-01,-7.1896e-01,-5.8022e-01,3.8268e-01,-7.6324e-01,-6.1596e-01,1.9509e-01,-7.7819e-01,-6.2802e-01,6.1232e-17,-1.7115e-01,-9.3643e-02,9.8079e-01,-3.3572e-01,-1.8369e-01,9.2388e-01,-4.8738e-01,-2.6667e-01,8.3147e-01,-6.2032e-01,-3.3941e-01,7.0711e-01,-7.2942e-01,-3.9911e-01,5.5557e-01,-8.1049e-01,-4.4346e-01,3.8268e-01,-8.6041e-01,-4.7078e-01,1.9509e-01,-8.7727e-01,-4.8000e-01,6.1232e-17,-0.0000e+00,-0.0000e+00,1.0000e+00});
			return Normal_7_736_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #749, 594 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_749_index()
		{
			MFInt32 IndexedTriangleSet_6_749_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_749_index_1()));
			return IndexedTriangleSet_6_749_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #749, 360 total numbers made up of 120 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_749_point()
		{
			MFVec3f Coordinate_7_749_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_749_point_1()))
				.append(new MFVec3f(getCoordinate_7_749_point_2()));
			return Coordinate_7_749_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #750, 360 total numbers made up of 120 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_750_vector()
		{
			MFVec3f Normal_7_750_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_750_vector_1()))
				.append(new MFVec3f(getNormal_7_750_vector_2()));
			return Normal_7_750_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #756, 189 total numbers made up of 63 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_756_point()
		{
			MFVec3f Coordinate_7_756_point = new MFVec3f(new double[] {5.4829e+00,2.7500e+00,1.2500e+00,5.4829e+00,2.7500e+00,1.9352e+00,5.4533e+00,2.7518e+00,1.9352e+00,5.4533e+00,2.7518e+00,1.2500e+00,5.4829e+00,2.7500e+00,1.2500e+00,5.4829e+00,2.7500e+00,1.7765e+00,5.4533e+00,2.7518e+00,1.7880e+00,5.4533e+00,2.7518e+00,1.2500e+00,5.4533e+00,2.7518e+00,1.9352e+00,5.4240e+00,2.7570e+00,1.9352e+00,5.4240e+00,2.7570e+00,1.2500e+00,5.4533e+00,2.7518e+00,1.7880e+00,5.4466e+00,2.7527e+00,1.7906e+00,5.4240e+00,2.7570e+00,1.8014e+00,5.4240e+00,2.7570e+00,1.2500e+00,5.4240e+00,2.7570e+00,1.9352e+00,5.3956e+00,2.7657e+00,1.9352e+00,5.3956e+00,2.7657e+00,1.2500e+00,5.4240e+00,2.7570e+00,1.8014e+00,5.4124e+00,2.7602e+00,1.8071e+00,5.3956e+00,2.7657e+00,1.8167e+00,5.3956e+00,2.7657e+00,1.2500e+00,5.3956e+00,2.7657e+00,1.9352e+00,5.3685e+00,2.7777e+00,1.9352e+00,5.3685e+00,2.7777e+00,1.2500e+00,5.3956e+00,2.7657e+00,1.8167e+00,5.3805e+00,2.7720e+00,1.8257e+00,5.3685e+00,2.7777e+00,1.8338e+00,5.3685e+00,2.7777e+00,1.2500e+00,5.3685e+00,2.7777e+00,1.9352e+00,5.3429e+00,2.7929e+00,1.9352e+00,5.3429e+00,2.7929e+00,1.2500e+00,5.3685e+00,2.7777e+00,1.8338e+00,5.3511e+00,2.7876e+00,1.8458e+00,5.3429e+00,2.7929e+00,1.8522e+00,5.3429e+00,2.7929e+00,1.2500e+00,5.3429e+00,2.7929e+00,1.9352e+00,5.3193e+00,2.8110e+00,1.9352e+00,5.3193e+00,2.8110e+00,1.2500e+00,5.3429e+00,2.7929e+00,1.8522e+00,5.3245e+00,2.8066e+00,1.8673e+00,5.3193e+00,2.8110e+00,1.8719e+00,5.3193e+00,2.8110e+00,1.2500e+00,5.3193e+00,2.8110e+00,1.9352e+00,5.2981e+00,2.8317e+00,1.9352e+00,5.2981e+00,2.8317e+00,1.2500e+00,5.3193e+00,2.8110e+00,1.8719e+00,5.3008e+00,2.8287e+00,1.8896e+00,5.2981e+00,2.8317e+00,1.8925e+00,5.2981e+00,2.8317e+00,1.2500e+00,5.2981e+00,2.8317e+00,1.9352e+00,5.2794e+00,2.8548e+00,1.9352e+00,5.2794e+00,2.8548e+00,1.2500e+00,5.2981e+00,2.8317e+00,1.8925e+00,5.2805e+00,2.8533e+00,1.9124e+00,5.2794e+00,2.8548e+00,1.9137e+00,5.2794e+00,2.8548e+00,1.2500e+00,5.2794e+00,2.8548e+00,1.9352e+00,5.2636e+00,2.8800e+00,1.9352e+00,5.2636e+00,2.8800e+00,1.2500e+00,5.2794e+00,2.8548e+00,1.9137e+00,5.2636e+00,2.8800e+00,1.9352e+00,5.2636e+00,2.8800e+00,1.2500e+00});
			return Coordinate_7_756_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #757, 189 total numbers made up of 63 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_757_vector()
		{
			MFVec3f Normal_7_757_vector = new MFVec3f(new double[] {-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.1862e-01,9.9294e-01,-0.0000e+00,1.1862e-01,9.9294e-01,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,-0.0000e+00,1.0000e+00,-0.0000e+00,1.1862e-01,9.9294e-01,-0.0000e+00,1.1862e-01,9.9294e-01,-0.0000e+00,1.1862e-01,9.9294e-01,-0.0000e+00,2.3557e-01,9.7186e-01,-0.0000e+00,2.3557e-01,9.7186e-01,-0.0000e+00,1.1862e-01,9.9294e-01,-0.0000e+00,1.4535e-01,9.8938e-01,-0.0000e+00,2.3557e-01,9.7186e-01,-0.0000e+00,2.3557e-01,9.7186e-01,-0.0000e+00,2.3557e-01,9.7186e-01,-0.0000e+00,3.4920e-01,9.3705e-01,-0.0000e+00,3.4920e-01,9.3705e-01,-0.0000e+00,2.3557e-01,9.7186e-01,-0.0000e+00,2.8219e-01,9.5936e-01,-0.0000e+00,3.4920e-01,9.3705e-01,-0.0000e+00,3.4920e-01,9.3705e-01,-0.0000e+00,3.4920e-01,9.3705e-01,-0.0000e+00,4.5789e-01,8.8901e-01,-0.0000e+00,4.5789e-01,8.8901e-01,-0.0000e+00,3.4920e-01,9.3705e-01,-0.0000e+00,4.0976e-01,9.1219e-01,-0.0000e+00,4.5789e-01,8.8901e-01,-0.0000e+00,4.5789e-01,8.8901e-01,-0.0000e+00,4.5789e-01,8.8901e-01,-0.0000e+00,5.6011e-01,8.2842e-01,-0.0000e+00,5.6011e-01,8.2842e-01,-0.0000e+00,4.5789e-01,8.8901e-01,-0.0000e+00,5.2728e-01,8.4969e-01,-0.0000e+00,5.6011e-01,8.2842e-01,-0.0000e+00,5.6011e-01,8.2842e-01,-0.0000e+00,5.6011e-01,8.2842e-01,-0.0000e+00,6.5443e-01,7.5612e-01,-0.0000e+00,6.5443e-01,7.5612e-01,-0.0000e+00,5.6011e-01,8.2842e-01,-0.0000e+00,6.3381e-01,7.7349e-01,-0.0000e+00,6.5443e-01,7.5612e-01,-0.0000e+00,6.5443e-01,7.5612e-01,-0.0000e+00,6.5443e-01,7.5612e-01,-0.0000e+00,7.3950e-01,6.7315e-01,-0.0000e+00,7.3950e-01,6.7315e-01,-0.0000e+00,6.5443e-01,7.5612e-01,-0.0000e+00,7.2831e-01,6.8524e-01,-0.0000e+00,7.3950e-01,6.7315e-01,-0.0000e+00,7.3950e-01,6.7315e-01,-0.0000e+00,7.3950e-01,6.7315e-01,-0.0000e+00,8.1413e-01,5.8068e-01,-0.0000e+00,8.1413e-01,5.8068e-01,-0.0000e+00,7.3950e-01,6.7315e-01,-0.0000e+00,8.0976e-01,5.8676e-01,-0.0000e+00,8.1413e-01,5.8068e-01,-0.0000e+00,8.1413e-01,5.8068e-01,-0.0000e+00,8.1413e-01,5.8068e-01,-0.0000e+00,8.7727e-01,4.8000e-01,-0.0000e+00,8.7727e-01,4.8000e-01,-0.0000e+00,8.1413e-01,5.8068e-01,-0.0000e+00,8.7727e-01,4.8000e-01,-0.0000e+00,8.7727e-01,4.8000e-01,-0.0000e+00});
			return Normal_7_757_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #763, 171 total numbers made up of 57 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_763_point()
		{
			MFVec3f Coordinate_7_763_point = new MFVec3f(new double[] {5.5257e+00,-3.0234e+00,1.0048e+00,5.5669e+00,-3.0459e+00,1.0190e+00,5.6048e+00,-3.0667e+00,1.0421e+00,5.6380e+00,-3.0849e+00,1.0732e+00,5.6653e+00,-3.0998e+00,1.1111e+00,5.6856e+00,-3.1109e+00,1.1543e+00,5.6980e+00,-3.1177e+00,1.2012e+00,5.7022e+00,-3.1200e+00,1.2500e+00,5.5209e+00,-3.0306e+00,1.0048e+00,5.5574e+00,-3.0601e+00,1.0190e+00,5.5910e+00,-3.0872e+00,1.0421e+00,5.6205e+00,-3.1110e+00,1.0732e+00,5.6447e+00,-3.1305e+00,1.1111e+00,5.6627e+00,-3.1451e+00,1.1543e+00,5.6737e+00,-3.1540e+00,1.2012e+00,5.6775e+00,-3.1570e+00,1.2500e+00,5.5148e+00,-3.0369e+00,1.0048e+00,5.5455e+00,-3.0723e+00,1.0190e+00,5.5738e+00,-3.1050e+00,1.0421e+00,5.5986e+00,-3.1337e+00,1.0732e+00,5.6190e+00,-3.1572e+00,1.1111e+00,5.6341e+00,-3.1746e+00,1.1543e+00,5.6434e+00,-3.1854e+00,1.2012e+00,5.6465e+00,-3.1890e+00,1.2500e+00,5.5078e+00,-3.0420e+00,1.0048e+00,5.5317e+00,-3.0823e+00,1.0190e+00,5.5537e+00,-3.1195e+00,1.0421e+00,5.5731e+00,-3.1521e+00,1.0732e+00,5.5889e+00,-3.1788e+00,1.1111e+00,5.6007e+00,-3.1987e+00,1.1543e+00,5.6080e+00,-3.2109e+00,1.2012e+00,5.6104e+00,-3.2151e+00,1.2500e+00,5.5000e+00,-3.0457e+00,1.0048e+00,5.5163e+00,-3.0896e+00,1.0190e+00,5.5314e+00,-3.1301e+00,1.0421e+00,5.5447e+00,-3.1656e+00,1.0732e+00,5.5555e+00,-3.1948e+00,1.1111e+00,5.5636e+00,-3.2164e+00,1.1543e+00,5.5685e+00,-3.2298e+00,1.2012e+00,5.5702e+00,-3.2343e+00,1.2500e+00,5.4916e+00,-3.0480e+00,1.0048e+00,5.4999e+00,-3.0942e+00,1.0190e+00,5.5076e+00,-3.1367e+00,1.0421e+00,5.5143e+00,-3.1740e+00,1.0732e+00,5.5198e+00,-3.2046e+00,1.1111e+00,5.5239e+00,-3.2273e+00,1.1543e+00,5.5264e+00,-3.2413e+00,1.2012e+00,5.5273e+00,-3.2460e+00,1.2500e+00,5.4829e+00,-3.0488e+00,1.0048e+00,5.4829e+00,-3.0957e+00,1.0190e+00,5.4829e+00,-3.1389e+00,1.0421e+00,5.4829e+00,-3.1768e+00,1.0732e+00,5.4829e+00,-3.2079e+00,1.1111e+00,5.4829e+00,-3.2310e+00,1.1543e+00,5.4829e+00,-3.2452e+00,1.2012e+00,5.4829e+00,-3.2500e+00,1.2500e+00,5.4829e+00,-3.0000e+00,1.0000e+00});
			return Coordinate_7_763_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #764, 171 total numbers made up of 57 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_764_vector()
		{
			MFVec3f Normal_7_764_vector = new MFVec3f(new double[] {-1.7115e-01,9.3643e-02,9.8079e-01,-3.3572e-01,1.8369e-01,9.2388e-01,-4.8738e-01,2.6667e-01,8.3147e-01,-6.2032e-01,3.3941e-01,7.0711e-01,-7.2942e-01,3.9911e-01,5.5557e-01,-8.1049e-01,4.4346e-01,3.8268e-01,-8.6041e-01,4.7078e-01,1.9509e-01,-8.7727e-01,4.8000e-01,6.1232e-17,-1.5182e-01,1.2252e-01,9.8079e-01,-2.9780e-01,2.4033e-01,9.2388e-01,-4.3234e-01,3.4891e-01,8.3147e-01,-5.5027e-01,4.4408e-01,7.0711e-01,-6.4704e-01,5.2218e-01,5.5557e-01,-7.1896e-01,5.8022e-01,3.8268e-01,-7.6324e-01,6.1596e-01,1.9509e-01,-7.7819e-01,6.2802e-01,6.1232e-17,-1.2767e-01,1.4751e-01,9.8079e-01,-2.5044e-01,2.8936e-01,9.2388e-01,-3.6358e-01,4.2008e-01,8.3147e-01,-4.6275e-01,5.3466e-01,7.0711e-01,-5.4414e-01,6.2869e-01,5.5557e-01,-6.0461e-01,6.9857e-01,3.8268e-01,-6.4185e-01,7.4159e-01,1.9509e-01,-6.5443e-01,7.5612e-01,6.1232e-17,-9.9477e-02,1.6782e-01,9.8079e-01,-1.9513e-01,3.2920e-01,9.2388e-01,-2.8329e-01,4.7792e-01,8.3147e-01,-3.6056e-01,6.0828e-01,7.0711e-01,-4.2397e-01,7.1526e-01,5.5557e-01,-4.7109e-01,7.9475e-01,3.8268e-01,-5.0010e-01,8.4370e-01,1.9509e-01,-5.0990e-01,8.6023e-01,6.1232e-17,-6.8125e-02,1.8281e-01,9.8079e-01,-1.3363e-01,3.5859e-01,9.2388e-01,-1.9400e-01,5.2060e-01,8.3147e-01,-2.4692e-01,6.6259e-01,7.0711e-01,-2.9035e-01,7.7913e-01,5.5557e-01,-3.2262e-01,8.6572e-01,3.8268e-01,-3.4249e-01,9.1904e-01,1.9509e-01,-3.4920e-01,9.3705e-01,6.1232e-17,-3.4612e-02,1.9200e-01,9.8079e-01,-6.7893e-02,3.7661e-01,9.2388e-01,-9.8565e-02,5.4676e-01,8.3147e-01,-1.2545e-01,6.9589e-01,7.0711e-01,-1.4751e-01,8.1828e-01,5.5557e-01,-1.6391e-01,9.0922e-01,3.8268e-01,-1.7400e-01,9.6523e-01,1.9509e-01,-1.7741e-01,9.8414e-01,6.1232e-17,1.5821e-15,1.9509e-01,9.8079e-01,3.1364e-15,3.8268e-01,9.2388e-01,4.4964e-15,5.5557e-01,8.3147e-01,5.7732e-15,7.0711e-01,7.0711e-01,6.7724e-15,8.3147e-01,5.5557e-01,7.5495e-15,9.2388e-01,3.8268e-01,7.9936e-15,9.8079e-01,1.9509e-01,8.1601e-15,1.0000e+00,6.1232e-17,-0.0000e+00,-0.0000e+00,1.0000e+00});
			return Normal_7_764_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #770, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_770_point()
		{
			MFVec3f Coordinate_7_770_point = new MFVec3f(new double[] {6.1197e+00,1.2312e+00,2.1547e+00,5.8600e+00,2.1074e+00,1.9674e+00,5.8055e+00,2.0903e+00,1.9791e+00,6.0609e+00,1.2204e+00,2.1638e+00,6.0549e+00,1.2486e+00,2.1593e+00,6.0819e+00,1.2538e+00,2.1532e+00,6.1134e+00,1.2601e+00,2.1501e+00,5.9747e+00,1.7788e+00,2.0497e+00,6.0609e+00,1.2204e+00,2.1638e+00,5.8055e+00,2.0903e+00,1.9791e+00,5.7508e+00,2.0772e+00,2.0053e+00,6.0020e+00,1.2121e+00,2.1888e+00,5.9964e+00,1.2384e+00,2.1847e+00,6.0216e+00,1.2426e+00,2.1716e+00,6.0512e+00,1.2479e+00,2.1604e+00,6.0549e+00,1.2486e+00,2.1593e+00,6.0020e+00,1.2121e+00,2.1888e+00,5.7508e+00,2.0772e+00,2.0053e+00,5.7014e+00,2.0698e+00,2.0454e+00,5.9492e+00,1.2075e+00,2.2297e+00,5.9444e+00,1.2308e+00,2.2261e+00,5.9677e+00,1.2340e+00,2.2047e+00,5.9936e+00,1.2379e+00,2.1864e+00,5.9964e+00,1.2384e+00,2.1847e+00,5.9492e+00,1.2075e+00,2.2297e+00,5.7014e+00,2.0698e+00,2.0454e+00,5.6624e+00,2.0692e+00,2.0962e+00,5.9087e+00,1.2074e+00,2.2829e+00,5.9047e+00,1.2267e+00,2.2799e+00,5.9061e+00,1.2268e+00,2.2774e+00,5.9236e+00,1.2283e+00,2.2505e+00,5.9444e+00,1.2308e+00,2.2261e+00,5.9087e+00,1.2074e+00,2.2829e+00,5.6624e+00,2.0692e+00,2.0962e+00,5.6370e+00,2.0752e+00,2.1525e+00,5.8839e+00,1.2115e+00,2.3424e+00,5.8808e+00,1.2264e+00,2.3400e+00,5.8816e+00,1.2263e+00,2.3368e+00,5.8920e+00,1.2261e+00,2.3063e+00,5.9047e+00,1.2267e+00,2.2799e+00,5.8839e+00,1.2115e+00,2.3424e+00,5.6370e+00,2.0752e+00,2.1525e+00,5.6256e+00,2.0863e+00,2.2086e+00,5.8749e+00,1.2189e+00,2.4017e+00,5.7212e+00,1.8077e+00,2.2822e+00,5.8727e+00,1.2294e+00,2.4000e+00,5.8752e+00,1.2274e+00,2.3682e+00,5.8808e+00,1.2264e+00,2.3400e+00,5.8600e+00,2.1074e+00,1.9674e+00,5.4778e+00,2.9182e+00,1.6988e+00,5.4288e+00,2.8971e+00,1.7136e+00,5.8055e+00,2.0903e+00,1.9791e+00,5.7924e+00,2.2763e+00,1.9193e+00,5.5696e+00,2.7500e+00,1.7625e+00,5.5402e+00,2.7500e+00,1.7640e+00,5.5113e+00,2.7500e+00,1.7686e+00,5.5087e+00,2.7500e+00,1.7692e+00,5.8055e+00,2.0903e+00,1.9791e+00,5.4288e+00,2.8971e+00,1.7136e+00,5.3797e+00,2.8809e+00,1.7408e+00,5.7508e+00,2.0772e+00,2.0053e+00,5.5087e+00,2.7500e+00,1.7692e+00,5.4829e+00,2.7500e+00,1.7765e+00,5.4490e+00,2.7524e+00,1.7896e+00,5.7508e+00,2.0772e+00,2.0053e+00,5.3797e+00,2.8809e+00,1.7408e+00,5.3349e+00,2.8714e+00,1.7797e+00,5.7014e+00,2.0698e+00,2.0454e+00,5.4490e+00,2.7524e+00,1.7896e+00,5.4466e+00,2.7526e+00,1.7906e+00,5.4124e+00,2.7601e+00,1.8072e+00,5.3905e+00,2.7678e+00,1.8195e+00,5.7014e+00,2.0698e+00,2.0454e+00,5.3349e+00,2.8714e+00,1.7797e+00,5.2983e+00,2.8700e+00,1.8274e+00,5.6624e+00,2.0692e+00,2.0962e+00,5.3905e+00,2.7678e+00,1.8195e+00,5.3805e+00,2.7719e+00,1.8258e+00,5.3511e+00,2.7875e+00,1.8459e+00,5.3378e+00,2.7965e+00,1.8561e+00,5.6624e+00,2.0692e+00,2.0962e+00,5.2983e+00,2.8700e+00,1.8274e+00,5.2726e+00,2.8763e+00,1.8795e+00,5.6370e+00,2.0752e+00,2.1525e+00,5.3378e+00,2.7965e+00,1.8561e+00,5.3245e+00,2.8066e+00,1.8673e+00,5.3008e+00,2.8287e+00,1.8896e+00,5.2948e+00,2.8353e+00,1.8959e+00,5.6370e+00,2.0752e+00,2.1525e+00,5.2726e+00,2.8763e+00,1.8795e+00,5.2587e+00,2.8890e+00,1.9315e+00,5.6256e+00,2.0863e+00,2.2086e+00,5.2948e+00,2.8353e+00,1.8959e+00,5.2805e+00,2.8533e+00,1.9124e+00,5.2636e+00,2.8800e+00,1.9352e+00,5.5168e+00,2.3590e+00,2.1255e+00});
			return Coordinate_7_770_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #771, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_771_vector()
		{
			MFVec3f Normal_7_771_vector = new MFVec3f(new double[] {2.9772e-08,1.5390e-01,9.8809e-01,5.5043e-10,2.6342e-01,9.6468e-01,2.1814e-01,3.3154e-01,9.1788e-01,2.3499e-01,1.9700e-01,9.5183e-01,2.3457e-01,2.0145e-01,9.5100e-01,1.2604e-01,1.8230e-01,9.7513e-01,2.4844e-06,1.5751e-01,9.8752e-01,6.4962e-05,2.2239e-01,9.7496e-01,2.3499e-01,1.9700e-01,9.5183e-01,2.1814e-01,3.3154e-01,9.1788e-01,4.3693e-01,3.8413e-01,8.1335e-01,4.7080e-01,2.3032e-01,8.5164e-01,4.7002e-01,2.3515e-01,8.5076e-01,3.6853e-01,2.2206e-01,9.0271e-01,2.4947e-01,2.0391e-01,9.4667e-01,2.3457e-01,2.0145e-01,9.5100e-01,4.7080e-01,2.3032e-01,8.5164e-01,4.3693e-01,3.8413e-01,8.1335e-01,6.3456e-01,4.1361e-01,6.5289e-01,6.8179e-01,2.4861e-01,6.8801e-01,6.8082e-01,2.5321e-01,6.8729e-01,5.8609e-01,2.4690e-01,7.7171e-01,4.8131e-01,2.3645e-01,8.4406e-01,4.7002e-01,2.3515e-01,8.5076e-01,6.8179e-01,2.4861e-01,6.8801e-01,6.3456e-01,4.1361e-01,6.5289e-01,7.9051e-01,4.1592e-01,4.4955e-01,8.4394e-01,2.4909e-01,4.7510e-01,8.4304e-01,2.5294e-01,4.7466e-01,8.3734e-01,2.5332e-01,4.8444e-01,7.6547e-01,2.5539e-01,5.9061e-01,6.8082e-01,2.5321e-01,6.8729e-01,8.4394e-01,2.4909e-01,4.7510e-01,7.9051e-01,4.1592e-01,4.4955e-01,8.9211e-01,3.9213e-01,2.2444e-01,9.4322e-01,2.3262e-01,2.3713e-01,9.4256e-01,2.3542e-01,2.3697e-01,9.3892e-01,2.3672e-01,2.4977e-01,8.9552e-01,2.4705e-01,3.7014e-01,8.4304e-01,2.5294e-01,4.7466e-01,9.4322e-01,2.3262e-01,2.3713e-01,8.9211e-01,3.9213e-01,2.2444e-01,9.3760e-01,3.4772e-01,-1.1849e-09,9.7915e-01,2.0314e-01,-1.7889e-08,9.5351e-01,3.0135e-01,8.0752e-05,9.7878e-01,2.0489e-01,1.4376e-06,9.6678e-01,2.2257e-01,1.2567e-01,9.4256e-01,2.3542e-01,2.3697e-01,5.5043e-10,2.6342e-01,9.6468e-01,-2.4267e-08,3.6478e-01,9.3109e-01,1.9581e-01,4.4910e-01,8.7176e-01,2.1814e-01,3.3154e-01,9.1788e-01,2.1952e-05,2.8448e-01,9.5868e-01,-2.3896e-05,3.4380e-01,9.3904e-01,9.5844e-02,3.8635e-01,9.1736e-01,1.9154e-01,4.2499e-01,8.8470e-01,2.0029e-01,4.2832e-01,8.8115e-01,2.1814e-01,3.3154e-01,9.1788e-01,1.9581e-01,4.4910e-01,8.7176e-01,3.9207e-01,5.1424e-01,7.6279e-01,4.3693e-01,3.8413e-01,8.1335e-01,2.0029e-01,4.2832e-01,8.8115e-01,2.8725e-01,4.5948e-01,8.4046e-01,3.9999e-01,4.9445e-01,7.7170e-01,4.3693e-01,3.8413e-01,8.1335e-01,3.9207e-01,5.1424e-01,7.6279e-01,5.7157e-01,5.5190e-01,6.0721e-01,6.3456e-01,4.1361e-01,6.5289e-01,3.9999e-01,4.9445e-01,7.7170e-01,4.0787e-01,4.9664e-01,7.6616e-01,5.1540e-01,5.2298e-01,6.7886e-01,5.8063e-01,5.3503e-01,6.1369e-01,6.3456e-01,4.1361e-01,6.5289e-01,5.7157e-01,5.5190e-01,6.0721e-01,7.1801e-01,5.5765e-01,4.1652e-01,7.9051e-01,4.1592e-01,4.4955e-01,5.8063e-01,5.3503e-01,6.1369e-01,6.0981e-01,5.3916e-01,5.8089e-01,6.9096e-01,5.4560e-01,4.7423e-01,7.2551e-01,5.4531e-01,4.1983e-01,7.9051e-01,4.1592e-01,4.4955e-01,7.1801e-01,5.5765e-01,4.1652e-01,8.2059e-01,5.3232e-01,2.0801e-01,8.9211e-01,3.9213e-01,2.2444e-01,7.2551e-01,5.4531e-01,4.1983e-01,7.5859e-01,5.4258e-01,3.6075e-01,8.1234e-01,5.3039e-01,2.4248e-01,8.2481e-01,5.2539e-01,2.0893e-01,8.9211e-01,3.9213e-01,2.2444e-01,8.2059e-01,5.3232e-01,2.0801e-01,8.7644e-01,4.8151e-01,-7.0222e-09,9.3760e-01,3.4772e-01,-1.1849e-09,8.2481e-01,5.2539e-01,2.0893e-01,8.5193e-01,5.0936e-01,1.2150e-01,8.7726e-01,4.8001e-01,-4.0898e-06,9.1949e-01,3.9310e-01,4.5996e-05});
			return Normal_7_771_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #777, 189 total numbers made up of 63 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_777_point()
		{
			MFVec3f Coordinate_7_777_point = new MFVec3f(new double[] {5.2636e+00,-2.8800e+00,1.2500e+00,5.2636e+00,-2.8800e+00,1.9352e+00,5.2794e+00,-2.8548e+00,1.9352e+00,5.2794e+00,-2.8548e+00,1.2500e+00,5.2636e+00,-2.8800e+00,1.2500e+00,5.2636e+00,-2.8800e+00,1.9352e+00,5.2794e+00,-2.8548e+00,1.9137e+00,5.2794e+00,-2.8548e+00,1.2500e+00,5.2794e+00,-2.8548e+00,1.9352e+00,5.2981e+00,-2.8317e+00,1.9352e+00,5.2981e+00,-2.8317e+00,1.2500e+00,5.2794e+00,-2.8548e+00,1.9137e+00,5.2805e+00,-2.8533e+00,1.9124e+00,5.2981e+00,-2.8317e+00,1.8925e+00,5.2981e+00,-2.8317e+00,1.2500e+00,5.2981e+00,-2.8317e+00,1.9352e+00,5.3193e+00,-2.8110e+00,1.9352e+00,5.3193e+00,-2.8110e+00,1.2500e+00,5.2981e+00,-2.8317e+00,1.8925e+00,5.3008e+00,-2.8287e+00,1.8896e+00,5.3193e+00,-2.8110e+00,1.8719e+00,5.3193e+00,-2.8110e+00,1.2500e+00,5.3193e+00,-2.8110e+00,1.9352e+00,5.3429e+00,-2.7929e+00,1.9352e+00,5.3429e+00,-2.7929e+00,1.2500e+00,5.3193e+00,-2.8110e+00,1.8719e+00,5.3245e+00,-2.8066e+00,1.8673e+00,5.3429e+00,-2.7929e+00,1.8522e+00,5.3429e+00,-2.7929e+00,1.2500e+00,5.3429e+00,-2.7929e+00,1.9352e+00,5.3685e+00,-2.7777e+00,1.9352e+00,5.3685e+00,-2.7777e+00,1.2500e+00,5.3429e+00,-2.7929e+00,1.8522e+00,5.3511e+00,-2.7876e+00,1.8458e+00,5.3685e+00,-2.7777e+00,1.8338e+00,5.3685e+00,-2.7777e+00,1.2500e+00,5.3685e+00,-2.7777e+00,1.9352e+00,5.3956e+00,-2.7657e+00,1.9352e+00,5.3956e+00,-2.7657e+00,1.2500e+00,5.3685e+00,-2.7777e+00,1.8338e+00,5.3805e+00,-2.7720e+00,1.8257e+00,5.3956e+00,-2.7657e+00,1.8167e+00,5.3956e+00,-2.7657e+00,1.2500e+00,5.3956e+00,-2.7657e+00,1.9352e+00,5.4240e+00,-2.7570e+00,1.9352e+00,5.4240e+00,-2.7570e+00,1.2500e+00,5.3956e+00,-2.7657e+00,1.8167e+00,5.4124e+00,-2.7602e+00,1.8071e+00,5.4240e+00,-2.7570e+00,1.8014e+00,5.4240e+00,-2.7570e+00,1.2500e+00,5.4240e+00,-2.7570e+00,1.9352e+00,5.4533e+00,-2.7518e+00,1.9352e+00,5.4533e+00,-2.7518e+00,1.2500e+00,5.4240e+00,-2.7570e+00,1.8014e+00,5.4466e+00,-2.7527e+00,1.7906e+00,5.4533e+00,-2.7518e+00,1.7880e+00,5.4533e+00,-2.7518e+00,1.2500e+00,5.4533e+00,-2.7518e+00,1.9352e+00,5.4829e+00,-2.7500e+00,1.9352e+00,5.4829e+00,-2.7500e+00,1.2500e+00,5.4533e+00,-2.7518e+00,1.7880e+00,5.4829e+00,-2.7500e+00,1.7765e+00,5.4829e+00,-2.7500e+00,1.2500e+00});
			return Coordinate_7_777_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #778, 189 total numbers made up of 63 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_778_vector()
		{
			MFVec3f Normal_7_778_vector = new MFVec3f(new double[] {8.7727e-01,-4.8000e-01,-0.0000e+00,8.7727e-01,-4.8000e-01,-0.0000e+00,8.1413e-01,-5.8068e-01,-0.0000e+00,8.1413e-01,-5.8068e-01,-0.0000e+00,8.7727e-01,-4.8000e-01,-0.0000e+00,8.7727e-01,-4.8000e-01,-0.0000e+00,8.1413e-01,-5.8068e-01,-0.0000e+00,8.1413e-01,-5.8068e-01,-0.0000e+00,8.1413e-01,-5.8068e-01,-0.0000e+00,7.3950e-01,-6.7315e-01,-0.0000e+00,7.3950e-01,-6.7315e-01,-0.0000e+00,8.1413e-01,-5.8068e-01,-0.0000e+00,8.0976e-01,-5.8676e-01,-0.0000e+00,7.3950e-01,-6.7315e-01,-0.0000e+00,7.3950e-01,-6.7315e-01,-0.0000e+00,7.3950e-01,-6.7315e-01,-0.0000e+00,6.5443e-01,-7.5612e-01,-0.0000e+00,6.5443e-01,-7.5612e-01,-0.0000e+00,7.3950e-01,-6.7315e-01,-0.0000e+00,7.2831e-01,-6.8524e-01,-0.0000e+00,6.5443e-01,-7.5612e-01,-0.0000e+00,6.5443e-01,-7.5612e-01,-0.0000e+00,6.5443e-01,-7.5612e-01,-0.0000e+00,5.6011e-01,-8.2842e-01,-0.0000e+00,5.6011e-01,-8.2842e-01,-0.0000e+00,6.5443e-01,-7.5612e-01,-0.0000e+00,6.3381e-01,-7.7349e-01,-0.0000e+00,5.6011e-01,-8.2842e-01,-0.0000e+00,5.6011e-01,-8.2842e-01,-0.0000e+00,5.6011e-01,-8.2842e-01,-0.0000e+00,4.5789e-01,-8.8901e-01,-0.0000e+00,4.5789e-01,-8.8901e-01,-0.0000e+00,5.6011e-01,-8.2842e-01,-0.0000e+00,5.2728e-01,-8.4969e-01,-0.0000e+00,4.5789e-01,-8.8901e-01,-0.0000e+00,4.5789e-01,-8.8901e-01,-0.0000e+00,4.5789e-01,-8.8901e-01,-0.0000e+00,3.4920e-01,-9.3705e-01,-0.0000e+00,3.4920e-01,-9.3705e-01,-0.0000e+00,4.5789e-01,-8.8901e-01,-0.0000e+00,4.0976e-01,-9.1219e-01,-0.0000e+00,3.4920e-01,-9.3705e-01,-0.0000e+00,3.4920e-01,-9.3705e-01,-0.0000e+00,3.4920e-01,-9.3705e-01,-0.0000e+00,2.3557e-01,-9.7186e-01,-0.0000e+00,2.3557e-01,-9.7186e-01,-0.0000e+00,3.4920e-01,-9.3705e-01,-0.0000e+00,2.8219e-01,-9.5936e-01,-0.0000e+00,2.3557e-01,-9.7186e-01,-0.0000e+00,2.3557e-01,-9.7186e-01,-0.0000e+00,2.3557e-01,-9.7186e-01,-0.0000e+00,1.1862e-01,-9.9294e-01,-0.0000e+00,1.1862e-01,-9.9294e-01,-0.0000e+00,2.3557e-01,-9.7186e-01,-0.0000e+00,1.4535e-01,-9.8938e-01,-0.0000e+00,1.1862e-01,-9.9294e-01,-0.0000e+00,1.1862e-01,-9.9294e-01,-0.0000e+00,1.1862e-01,-9.9294e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.1862e-01,-9.9294e-01,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00,1.2246e-16,-1.0000e+00,-0.0000e+00});
			return Normal_7_778_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #784, 366 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_784_index()
		{
			MFInt32 IndexedTriangleSet_6_784_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_784_index_1()));
			return IndexedTriangleSet_6_784_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #784, 804 total numbers made up of 268 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_784_point()
		{
			MFVec3f Coordinate_7_784_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_784_point_1()))
				.append(new MFVec3f(getCoordinate_7_784_point_2()))
				.append(new MFVec3f(getCoordinate_7_784_point_3()));
			return Coordinate_7_784_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #785, 804 total numbers made up of 268 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_785_vector()
		{
			MFVec3f Normal_7_785_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_785_vector_1()))
				.append(new MFVec3f(getNormal_7_785_vector_2()))
				.append(new MFVec3f(getNormal_7_785_vector_3()));
			return Normal_7_785_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #791, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_791_point()
		{
			MFVec3f Coordinate_7_791_point = new MFVec3f(new double[] {5.8749e+00,-1.2189e+00,2.4017e+00,5.6256e+00,-2.0863e+00,2.2086e+00,5.6370e+00,-2.0752e+00,2.1525e+00,5.8839e+00,-1.2115e+00,2.3424e+00,5.8808e+00,-1.2264e+00,2.3400e+00,5.8752e+00,-1.2274e+00,2.3682e+00,5.8727e+00,-1.2294e+00,2.4000e+00,5.7212e+00,-1.8077e+00,2.2822e+00,5.8839e+00,-1.2115e+00,2.3424e+00,5.6370e+00,-2.0752e+00,2.1525e+00,5.6624e+00,-2.0692e+00,2.0962e+00,5.9087e+00,-1.2074e+00,2.2829e+00,5.9047e+00,-1.2267e+00,2.2799e+00,5.8920e+00,-1.2261e+00,2.3063e+00,5.8816e+00,-1.2263e+00,2.3368e+00,5.8808e+00,-1.2264e+00,2.3400e+00,5.9087e+00,-1.2074e+00,2.2829e+00,5.6624e+00,-2.0692e+00,2.0962e+00,5.7014e+00,-2.0698e+00,2.0454e+00,5.9492e+00,-1.2075e+00,2.2297e+00,5.9444e+00,-1.2308e+00,2.2261e+00,5.9236e+00,-1.2283e+00,2.2505e+00,5.9061e+00,-1.2268e+00,2.2774e+00,5.9047e+00,-1.2267e+00,2.2799e+00,5.9492e+00,-1.2075e+00,2.2297e+00,5.7014e+00,-2.0698e+00,2.0454e+00,5.7508e+00,-2.0772e+00,2.0053e+00,6.0020e+00,-1.2121e+00,2.1888e+00,5.9964e+00,-1.2384e+00,2.1847e+00,5.9936e+00,-1.2379e+00,2.1864e+00,5.9677e+00,-1.2340e+00,2.2047e+00,5.9444e+00,-1.2308e+00,2.2261e+00,6.0020e+00,-1.2121e+00,2.1888e+00,5.7508e+00,-2.0772e+00,2.0053e+00,5.8055e+00,-2.0903e+00,1.9791e+00,6.0609e+00,-1.2204e+00,2.1638e+00,6.0549e+00,-1.2486e+00,2.1593e+00,6.0512e+00,-1.2479e+00,2.1604e+00,6.0216e+00,-1.2426e+00,2.1716e+00,5.9964e+00,-1.2384e+00,2.1847e+00,6.0609e+00,-1.2204e+00,2.1638e+00,5.8055e+00,-2.0903e+00,1.9791e+00,5.8600e+00,-2.1074e+00,1.9674e+00,6.1197e+00,-1.2312e+00,2.1547e+00,5.9747e+00,-1.7789e+00,2.0497e+00,6.1134e+00,-1.2601e+00,2.1501e+00,6.0819e+00,-1.2538e+00,2.1532e+00,6.0549e+00,-1.2486e+00,2.1593e+00,5.6256e+00,-2.0863e+00,2.2086e+00,5.2587e+00,-2.8890e+00,1.9315e+00,5.2726e+00,-2.8763e+00,1.8795e+00,5.6370e+00,-2.0752e+00,2.1525e+00,5.5168e+00,-2.3591e+00,2.1255e+00,5.2636e+00,-2.8800e+00,1.9352e+00,5.2805e+00,-2.8533e+00,1.9124e+00,5.2948e+00,-2.8353e+00,1.8959e+00,5.6370e+00,-2.0752e+00,2.1525e+00,5.2726e+00,-2.8763e+00,1.8795e+00,5.2983e+00,-2.8700e+00,1.8274e+00,5.6624e+00,-2.0692e+00,2.0962e+00,5.2948e+00,-2.8353e+00,1.8959e+00,5.3009e+00,-2.8287e+00,1.8896e+00,5.3245e+00,-2.8066e+00,1.8673e+00,5.3378e+00,-2.7965e+00,1.8561e+00,5.6624e+00,-2.0692e+00,2.0962e+00,5.2983e+00,-2.8700e+00,1.8274e+00,5.3349e+00,-2.8714e+00,1.7797e+00,5.7014e+00,-2.0698e+00,2.0454e+00,5.3378e+00,-2.7965e+00,1.8561e+00,5.3511e+00,-2.7875e+00,1.8459e+00,5.3805e+00,-2.7719e+00,1.8258e+00,5.3905e+00,-2.7678e+00,1.8195e+00,5.7014e+00,-2.0698e+00,2.0454e+00,5.3349e+00,-2.8714e+00,1.7797e+00,5.3797e+00,-2.8809e+00,1.7408e+00,5.7508e+00,-2.0772e+00,2.0053e+00,5.3905e+00,-2.7678e+00,1.8195e+00,5.4124e+00,-2.7601e+00,1.8072e+00,5.4466e+00,-2.7526e+00,1.7907e+00,5.4490e+00,-2.7524e+00,1.7896e+00,5.7508e+00,-2.0772e+00,2.0053e+00,5.3797e+00,-2.8809e+00,1.7408e+00,5.4288e+00,-2.8971e+00,1.7136e+00,5.8055e+00,-2.0903e+00,1.9791e+00,5.4490e+00,-2.7524e+00,1.7896e+00,5.4829e+00,-2.7500e+00,1.7765e+00,5.5087e+00,-2.7500e+00,1.7692e+00,5.8055e+00,-2.0903e+00,1.9791e+00,5.4288e+00,-2.8971e+00,1.7136e+00,5.4778e+00,-2.9182e+00,1.6988e+00,5.8600e+00,-2.1074e+00,1.9674e+00,5.5087e+00,-2.7500e+00,1.7692e+00,5.5113e+00,-2.7500e+00,1.7686e+00,5.5402e+00,-2.7500e+00,1.7640e+00,5.5696e+00,-2.7500e+00,1.7625e+00,5.7924e+00,-2.2763e+00,1.9193e+00});
			return Coordinate_7_791_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #792, 288 total numbers made up of 96 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_792_vector()
		{
			MFVec3f Normal_7_792_vector = new MFVec3f(new double[] {9.7915e-01,-2.0314e-01,-1.7889e-08,9.3760e-01,-3.4772e-01,-1.1849e-09,8.9211e-01,-3.9213e-01,2.2444e-01,9.4322e-01,-2.3262e-01,2.3713e-01,9.4256e-01,-2.3542e-01,2.3697e-01,9.6678e-01,-2.2257e-01,1.2567e-01,9.7878e-01,-2.0489e-01,1.4371e-06,9.5351e-01,-3.0135e-01,8.0757e-05,9.4322e-01,-2.3262e-01,2.3713e-01,8.9211e-01,-3.9213e-01,2.2444e-01,7.9051e-01,-4.1592e-01,4.4955e-01,8.4394e-01,-2.4909e-01,4.7510e-01,8.4304e-01,-2.5294e-01,4.7466e-01,8.9552e-01,-2.4705e-01,3.7014e-01,9.3892e-01,-2.3672e-01,2.4977e-01,9.4256e-01,-2.3542e-01,2.3697e-01,8.4394e-01,-2.4909e-01,4.7510e-01,7.9051e-01,-4.1592e-01,4.4955e-01,6.3456e-01,-4.1361e-01,6.5289e-01,6.8179e-01,-2.4861e-01,6.8801e-01,6.8082e-01,-2.5321e-01,6.8729e-01,7.6547e-01,-2.5539e-01,5.9062e-01,8.3734e-01,-2.5332e-01,4.8444e-01,8.4304e-01,-2.5294e-01,4.7466e-01,6.8179e-01,-2.4861e-01,6.8801e-01,6.3456e-01,-4.1361e-01,6.5289e-01,4.3693e-01,-3.8413e-01,8.1335e-01,4.7080e-01,-2.3032e-01,8.5164e-01,4.7002e-01,-2.3515e-01,8.5076e-01,4.8131e-01,-2.3645e-01,8.4406e-01,5.8609e-01,-2.4690e-01,7.7171e-01,6.8082e-01,-2.5321e-01,6.8729e-01,4.7080e-01,-2.3032e-01,8.5164e-01,4.3693e-01,-3.8413e-01,8.1335e-01,2.1814e-01,-3.3154e-01,9.1788e-01,2.3499e-01,-1.9700e-01,9.5183e-01,2.3457e-01,-2.0145e-01,9.5100e-01,2.4947e-01,-2.0391e-01,9.4667e-01,3.6853e-01,-2.2206e-01,9.0271e-01,4.7002e-01,-2.3515e-01,8.5076e-01,2.3499e-01,-1.9700e-01,9.5183e-01,2.1814e-01,-3.3154e-01,9.1788e-01,5.5043e-10,-2.6342e-01,9.6468e-01,2.9772e-08,-1.5390e-01,9.8809e-01,6.4958e-05,-2.2239e-01,9.7496e-01,2.4838e-06,-1.5751e-01,9.8752e-01,1.2604e-01,-1.8230e-01,9.7513e-01,2.3457e-01,-2.0145e-01,9.5100e-01,9.3760e-01,-3.4772e-01,-1.1849e-09,8.7644e-01,-4.8151e-01,-7.0222e-09,8.2059e-01,-5.3232e-01,2.0801e-01,8.9211e-01,-3.9213e-01,2.2444e-01,9.1949e-01,-3.9310e-01,4.5996e-05,8.7726e-01,-4.8001e-01,-4.0947e-06,8.5193e-01,-5.0936e-01,1.2150e-01,8.2481e-01,-5.2539e-01,2.0893e-01,8.9211e-01,-3.9213e-01,2.2444e-01,8.2059e-01,-5.3232e-01,2.0801e-01,7.1801e-01,-5.5765e-01,4.1652e-01,7.9051e-01,-4.1592e-01,4.4955e-01,8.2481e-01,-5.2539e-01,2.0893e-01,8.1234e-01,-5.3039e-01,2.4248e-01,7.5859e-01,-5.4258e-01,3.6075e-01,7.2551e-01,-5.4531e-01,4.1983e-01,7.9051e-01,-4.1592e-01,4.4955e-01,7.1801e-01,-5.5765e-01,4.1652e-01,5.7157e-01,-5.5190e-01,6.0721e-01,6.3456e-01,-4.1361e-01,6.5289e-01,7.2551e-01,-5.4531e-01,4.1983e-01,6.9096e-01,-5.4560e-01,4.7424e-01,6.0981e-01,-5.3916e-01,5.8089e-01,5.8063e-01,-5.3503e-01,6.1369e-01,6.3456e-01,-4.1361e-01,6.5289e-01,5.7157e-01,-5.5190e-01,6.0721e-01,3.9207e-01,-5.1424e-01,7.6279e-01,4.3693e-01,-3.8413e-01,8.1335e-01,5.8063e-01,-5.3503e-01,6.1369e-01,5.1540e-01,-5.2298e-01,6.7887e-01,4.0787e-01,-4.9664e-01,7.6616e-01,3.9999e-01,-4.9445e-01,7.7170e-01,4.3693e-01,-3.8413e-01,8.1335e-01,3.9207e-01,-5.1424e-01,7.6279e-01,1.9581e-01,-4.4910e-01,8.7176e-01,2.1814e-01,-3.3154e-01,9.1788e-01,3.9999e-01,-4.9445e-01,7.7170e-01,2.8725e-01,-4.5948e-01,8.4046e-01,2.0029e-01,-4.2832e-01,8.8115e-01,2.1814e-01,-3.3154e-01,9.1788e-01,1.9581e-01,-4.4910e-01,8.7176e-01,-2.4267e-08,-3.6478e-01,9.3109e-01,5.5043e-10,-2.6342e-01,9.6468e-01,2.0029e-01,-4.2832e-01,8.8115e-01,1.9154e-01,-4.2499e-01,8.8470e-01,9.5854e-02,-3.8636e-01,9.1735e-01,-2.3896e-05,-3.4380e-01,9.3904e-01,2.1952e-05,-2.8449e-01,9.5868e-01});
			return Normal_7_792_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #798, 408 total numbers made up of 136 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_798_point()
		{
			MFVec3f Coordinate_7_798_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_798_point_1()))
				.append(new MFVec3f(getCoordinate_7_798_point_2()));
			return Coordinate_7_798_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #799, 408 total numbers made up of 136 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_799_vector()
		{
			MFVec3f Normal_7_799_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_799_vector_1()))
				.append(new MFVec3f(getNormal_7_799_vector_2()));
			return Normal_7_799_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #805, 354 total numbers made up of 118 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_805_point()
		{
			MFVec3f Coordinate_7_805_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_805_point_1()))
				.append(new MFVec3f(getCoordinate_7_805_point_2()));
			return Coordinate_7_805_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #806, 354 total numbers made up of 118 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_806_vector()
		{
			MFVec3f Normal_7_806_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_806_vector_1()))
				.append(new MFVec3f(getNormal_7_806_vector_2()));
			return Normal_7_806_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #812, 351 total numbers made up of 117 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_812_point()
		{
			MFVec3f Coordinate_7_812_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_812_point_1()))
				.append(new MFVec3f(getCoordinate_7_812_point_2()));
			return Coordinate_7_812_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #813, 351 total numbers made up of 117 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_813_vector()
		{
			MFVec3f Normal_7_813_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_813_vector_1()))
				.append(new MFVec3f(getNormal_7_813_vector_2()));
			return Normal_7_813_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #819, 720 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_819_index()
		{
			MFInt32 IndexedTriangleSet_6_819_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_819_index_1()));
			return IndexedTriangleSet_6_819_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #819, 1512 total numbers made up of 504 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_819_point()
		{
			MFVec3f Coordinate_7_819_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_819_point_1()))
				.append(new MFVec3f(getCoordinate_7_819_point_2()))
				.append(new MFVec3f(getCoordinate_7_819_point_3()))
				.append(new MFVec3f(getCoordinate_7_819_point_4()))
				.append(new MFVec3f(getCoordinate_7_819_point_5()))
				.append(new MFVec3f(getCoordinate_7_819_point_6()));
			return Coordinate_7_819_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #820, 1512 total numbers made up of 504 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_820_vector()
		{
			MFVec3f Normal_7_820_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_820_vector_1()))
				.append(new MFVec3f(getNormal_7_820_vector_2()))
				.append(new MFVec3f(getNormal_7_820_vector_3()))
				.append(new MFVec3f(getNormal_7_820_vector_4()))
				.append(new MFVec3f(getNormal_7_820_vector_5()))
				.append(new MFVec3f(getNormal_7_820_vector_6()));
			return Normal_7_820_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #826, 318 total numbers made up of 106 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_826_point()
		{
			MFVec3f Coordinate_7_826_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_826_point_1()))
				.append(new MFVec3f(getCoordinate_7_826_point_2()));
			return Coordinate_7_826_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #827, 318 total numbers made up of 106 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_827_vector()
		{
			MFVec3f Normal_7_827_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_827_vector_1()))
				.append(new MFVec3f(getNormal_7_827_vector_2()));
			return Normal_7_827_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #833, 354 total numbers made up of 118 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_833_point()
		{
			MFVec3f Coordinate_7_833_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_833_point_1()))
				.append(new MFVec3f(getCoordinate_7_833_point_2()));
			return Coordinate_7_833_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #834, 354 total numbers made up of 118 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_834_vector()
		{
			MFVec3f Normal_7_834_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_834_vector_1()))
				.append(new MFVec3f(getNormal_7_834_vector_2()));
			return Normal_7_834_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #840, 351 total numbers made up of 117 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_840_point()
		{
			MFVec3f Coordinate_7_840_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_840_point_1()))
				.append(new MFVec3f(getCoordinate_7_840_point_2()));
			return Coordinate_7_840_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #841, 351 total numbers made up of 117 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_841_vector()
		{
			MFVec3f Normal_7_841_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_841_vector_1()))
				.append(new MFVec3f(getNormal_7_841_vector_2()));
			return Normal_7_841_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #847, 408 total numbers made up of 136 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_847_point()
		{
			MFVec3f Coordinate_7_847_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_847_point_1()))
				.append(new MFVec3f(getCoordinate_7_847_point_2()));
			return Coordinate_7_847_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #848, 408 total numbers made up of 136 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_848_vector()
		{
			MFVec3f Normal_7_848_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_848_vector_1()))
				.append(new MFVec3f(getNormal_7_848_vector_2()));
			return Normal_7_848_vector;
		}
		/** Large attribute array: IndexedTriangleSet index field, scene-graph level=6, element #854, 1536 total numbers.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFInt32 getIndexedTriangleSet_6_854_index()
		{
			MFInt32 IndexedTriangleSet_6_854_index = new MFInt32()/*2.finalize*/
				.append(new MFInt32(getIndexedTriangleSet_6_854_index_1()))
				.append(new MFInt32(getIndexedTriangleSet_6_854_index_2()));
			return IndexedTriangleSet_6_854_index;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #854, 864 total numbers made up of 288 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_854_point()
		{
			MFVec3f Coordinate_7_854_point = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getCoordinate_7_854_point_1()))
				.append(new MFVec3f(getCoordinate_7_854_point_2()))
				.append(new MFVec3f(getCoordinate_7_854_point_3()));
			return Coordinate_7_854_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #855, 864 total numbers made up of 288 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_855_vector()
		{
			MFVec3f Normal_7_855_vector = new MFVec3f()/*2.finalize*/
				.append(new MFVec3f(getNormal_7_855_vector_1()))
				.append(new MFVec3f(getNormal_7_855_vector_2()))
				.append(new MFVec3f(getNormal_7_855_vector_3()));
			return Normal_7_855_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #879, 156 total numbers made up of 52 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_879_point()
		{
			MFVec3f Coordinate_7_879_point = new MFVec3f(new double[] {2.5000e+00,1.7161e+00,9.2533e+00,2.4200e+00,1.7161e+00,9.2533e+00,2.5000e+00,1.7162e+00,9.2605e+00,2.4200e+00,1.7162e+00,9.2605e+00,2.5000e+00,1.7154e+00,9.2676e+00,2.4200e+00,1.7154e+00,9.2676e+00,2.5000e+00,1.7137e+00,9.2745e+00,2.4200e+00,1.7137e+00,9.2745e+00,2.5000e+00,1.7111e+00,9.2812e+00,2.4200e+00,1.7111e+00,9.2812e+00,2.5000e+00,1.7077e+00,9.2875e+00,2.4200e+00,1.7077e+00,9.2875e+00,2.5000e+00,1.7035e+00,9.2933e+00,2.4200e+00,1.7035e+00,9.2933e+00,2.5000e+00,1.6986e+00,9.2985e+00,2.4200e+00,1.6986e+00,9.2985e+00,2.5000e+00,1.6931e+00,9.3030e+00,2.4200e+00,1.6931e+00,9.3030e+00,2.5000e+00,1.6870e+00,9.3068e+00,2.4200e+00,1.6870e+00,9.3068e+00,2.5000e+00,1.6805e+00,9.3098e+00,2.4200e+00,1.6805e+00,9.3098e+00,2.5000e+00,1.6736e+00,9.3119e+00,2.4200e+00,1.6736e+00,9.3119e+00,2.5000e+00,1.6666e+00,9.3131e+00,2.4200e+00,1.6666e+00,9.3131e+00,2.5000e+00,1.6594e+00,9.3134e+00,2.4200e+00,1.6594e+00,9.3134e+00,2.5000e+00,1.6523e+00,9.3127e+00,2.4200e+00,1.6523e+00,9.3127e+00,2.5000e+00,1.6453e+00,9.3112e+00,2.4200e+00,1.6453e+00,9.3112e+00,2.5000e+00,1.6386e+00,9.3088e+00,2.4200e+00,1.6386e+00,9.3088e+00,2.5000e+00,1.6322e+00,9.3055e+00,2.4200e+00,1.6322e+00,9.3055e+00,2.5000e+00,1.6264e+00,9.3014e+00,2.4200e+00,1.6264e+00,9.3014e+00,2.5000e+00,1.6210e+00,9.2966e+00,2.4200e+00,1.6210e+00,9.2966e+00,2.5000e+00,1.6164e+00,9.2912e+00,2.4200e+00,1.6164e+00,9.2912e+00,2.5000e+00,1.6125e+00,9.2852e+00,2.4200e+00,1.6125e+00,9.2852e+00,2.5000e+00,1.6093e+00,9.2788e+00,2.4200e+00,1.6093e+00,9.2788e+00,2.5000e+00,1.6071e+00,9.2720e+00,2.4200e+00,1.6071e+00,9.2720e+00,2.5000e+00,1.6057e+00,9.2650e+00,2.4200e+00,1.6057e+00,9.2650e+00,2.5000e+00,1.6052e+00,9.2579e+00,2.4200e+00,1.6052e+00,9.2579e+00});
			return Coordinate_7_879_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #880, 156 total numbers made up of 52 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_880_vector()
		{
			MFVec3f Normal_7_880_vector = new MFVec3f(new double[] {0.0000e+00,9.9667e-01,-8.1527e-02,0.0000e+00,9.9667e-01,-8.1527e-02,0.0000e+00,9.9888e-01,4.7294e-02,0.0000e+00,9.9888e-01,4.7294e-02,0.0000e+00,9.8451e-01,1.7533e-01,0.0000e+00,9.8451e-01,1.7533e-01,0.0000e+00,9.5380e-01,3.0045e-01,0.0000e+00,9.5380e-01,3.0045e-01,0.0000e+00,9.0725e-01,4.2059e-01,0.0000e+00,9.0725e-01,4.2059e-01,0.0000e+00,8.4564e-01,5.3375e-01,0.0000e+00,8.4564e-01,5.3375e-01,0.0000e+00,7.7000e-01,6.3804e-01,0.0000e+00,7.7000e-01,6.3804e-01,0.0000e+00,6.8158e-01,7.3175e-01,0.0000e+00,6.8158e-01,7.3175e-01,0.0000e+00,5.8184e-01,8.1330e-01,0.0000e+00,5.8184e-01,8.1330e-01,0.0000e+00,4.7244e-01,8.8136e-01,0.0000e+00,4.7244e-01,8.8136e-01,0.0000e+00,3.5520e-01,9.3479e-01,0.0000e+00,3.5520e-01,9.3479e-01,0.0000e+00,2.3207e-01,9.7270e-01,0.0000e+00,2.3207e-01,9.7270e-01,0.0000e+00,1.0508e-01,9.9446e-01,0.0000e+00,1.0508e-01,9.9446e-01,0.0000e+00,-2.3653e-02,9.9972e-01,0.0000e+00,-2.3653e-02,9.9972e-01,0.0000e+00,-1.5199e-01,9.8838e-01,0.0000e+00,-1.5199e-01,9.8838e-01,0.0000e+00,-2.7781e-01,9.6064e-01,0.0000e+00,-2.7781e-01,9.6064e-01,0.0000e+00,-3.9901e-01,9.1695e-01,0.0000e+00,-3.9901e-01,9.1695e-01,0.0000e+00,-5.1359e-01,8.5803e-01,0.0000e+00,-5.1359e-01,8.5803e-01,0.0000e+00,-6.1965e-01,7.8488e-01,0.0000e+00,-6.1965e-01,7.8488e-01,0.0000e+00,-7.1542e-01,6.9869e-01,0.0000e+00,-7.1542e-01,6.9869e-01,0.0000e+00,-7.9931e-01,6.0091e-01,0.0000e+00,-7.9931e-01,6.0091e-01,0.0000e+00,-8.6994e-01,4.9316e-01,0.0000e+00,-8.6994e-01,4.9316e-01,0.0000e+00,-9.2613e-01,3.7721e-01,0.0000e+00,-9.2613e-01,3.7721e-01,0.0000e+00,-9.6694e-01,2.5501e-01,0.0000e+00,-9.6694e-01,2.5501e-01,0.0000e+00,-9.9170e-01,1.2857e-01,0.0000e+00,-9.9170e-01,1.2857e-01,0.0000e+00,-1.0000e+00,6.1232e-17,0.0000e+00,-1.0000e+00,6.1232e-17});
			return Normal_7_880_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #892, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_892_point()
		{
			MFVec3f Coordinate_7_892_point = new MFVec3f(new double[] {2.5000e+00,1.2500e+00,8.8788e+00,2.4200e+00,1.2500e+00,8.8788e+00,2.5000e+00,1.2551e+00,8.8563e+00,2.4200e+00,1.2551e+00,8.8563e+00,2.5000e+00,1.2630e+00,8.8346e+00,2.4200e+00,1.2630e+00,8.8346e+00,2.5000e+00,1.2737e+00,8.8142e+00,2.4200e+00,1.2737e+00,8.8142e+00,2.5000e+00,1.2868e+00,8.7952e+00,2.4200e+00,1.2868e+00,8.7952e+00,2.5000e+00,1.3023e+00,8.7781e+00,2.4200e+00,1.3023e+00,8.7781e+00,2.5000e+00,1.3199e+00,8.7631e+00,2.4200e+00,1.3199e+00,8.7631e+00,2.5000e+00,1.3392e+00,8.7505e+00,2.4200e+00,1.3392e+00,8.7505e+00,2.5000e+00,1.3600e+00,8.7405e+00,2.4200e+00,1.3600e+00,8.7405e+00,2.5000e+00,1.3819e+00,8.7332e+00,2.4200e+00,1.3819e+00,8.7332e+00,2.5000e+00,1.4046e+00,8.7288e+00,2.4200e+00,1.4046e+00,8.7288e+00,2.5000e+00,1.4276e+00,8.7273e+00,2.4200e+00,1.4276e+00,8.7273e+00,2.5000e+00,1.4507e+00,8.7288e+00,2.4200e+00,1.4507e+00,8.7288e+00,2.5000e+00,1.4733e+00,8.7332e+00,2.4200e+00,1.4733e+00,8.7332e+00,2.5000e+00,1.4952e+00,8.7405e+00,2.4200e+00,1.4952e+00,8.7405e+00,2.5000e+00,1.5160e+00,8.7505e+00,2.4200e+00,1.5160e+00,8.7505e+00,2.5000e+00,1.5353e+00,8.7631e+00,2.4200e+00,1.5353e+00,8.7631e+00,2.5000e+00,1.5529e+00,8.7781e+00,2.4200e+00,1.5529e+00,8.7781e+00,2.5000e+00,1.5684e+00,8.7952e+00,2.4200e+00,1.5684e+00,8.7952e+00,2.5000e+00,1.5816e+00,8.8142e+00,2.4200e+00,1.5816e+00,8.8142e+00,2.5000e+00,1.5922e+00,8.8346e+00,2.4200e+00,1.5922e+00,8.8346e+00,2.5000e+00,1.6001e+00,8.8563e+00,2.4200e+00,1.6001e+00,8.8563e+00,2.5000e+00,1.6052e+00,8.8788e+00,2.4200e+00,1.6052e+00,8.8788e+00});
			return Coordinate_7_892_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #893, 138 total numbers made up of 46 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_893_vector()
		{
			MFVec3f Normal_7_893_vector = new MFVec3f(new double[] {-0.0000e+00,9.8756e-01,1.5726e-01,-0.0000e+00,9.8756e-01,1.5726e-01,-0.0000e+00,9.5928e-01,2.8246e-01,-0.0000e+00,9.5928e-01,2.8246e-01,-0.0000e+00,9.1519e-01,4.0301e-01,-0.0000e+00,9.1519e-01,4.0301e-01,-0.0000e+00,8.5603e-01,5.1692e-01,-0.0000e+00,8.5603e-01,5.1692e-01,-0.0000e+00,7.8277e-01,6.2231e-01,-0.0000e+00,7.8277e-01,6.2231e-01,-0.0000e+00,6.9661e-01,7.1745e-01,-0.0000e+00,6.9661e-01,7.1745e-01,-0.0000e+00,5.9897e-01,8.0077e-01,-0.0000e+00,5.9897e-01,8.0077e-01,-0.0000e+00,4.9147e-01,8.7090e-01,-0.0000e+00,4.9147e-01,8.7090e-01,-0.0000e+00,3.7587e-01,9.2667e-01,-0.0000e+00,3.7587e-01,9.2667e-01,-0.0000e+00,2.5407e-01,9.6719e-01,-0.0000e+00,2.5407e-01,9.6719e-01,-0.0000e+00,1.2809e-01,9.9176e-01,-0.0000e+00,1.2809e-01,9.9176e-01,-0.0000e+00,4.3719e-09,1.0000e+00,-0.0000e+00,4.3719e-09,1.0000e+00,-0.0000e+00,-1.2809e-01,9.9176e-01,-0.0000e+00,-1.2809e-01,9.9176e-01,-0.0000e+00,-2.5407e-01,9.6719e-01,-0.0000e+00,-2.5407e-01,9.6719e-01,-0.0000e+00,-3.7587e-01,9.2667e-01,-0.0000e+00,-3.7587e-01,9.2667e-01,-0.0000e+00,-4.9147e-01,8.7090e-01,-0.0000e+00,-4.9147e-01,8.7090e-01,-0.0000e+00,-5.9897e-01,8.0077e-01,-0.0000e+00,-5.9897e-01,8.0077e-01,-0.0000e+00,-6.9661e-01,7.1745e-01,-0.0000e+00,-6.9661e-01,7.1745e-01,-0.0000e+00,-7.8277e-01,6.2231e-01,-0.0000e+00,-7.8277e-01,6.2231e-01,-0.0000e+00,-8.5603e-01,5.1692e-01,-0.0000e+00,-8.5603e-01,5.1692e-01,-0.0000e+00,-9.1519e-01,4.0301e-01,-0.0000e+00,-9.1519e-01,4.0301e-01,-0.0000e+00,-9.5928e-01,2.8246e-01,-0.0000e+00,-9.5928e-01,2.8246e-01,-0.0000e+00,-9.8756e-01,1.5726e-01,-0.0000e+00,-9.8756e-01,1.5726e-01});
			return Normal_7_893_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #943, 144 total numbers made up of 48 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_943_point()
		{
			MFVec3f Coordinate_7_943_point = new MFVec3f(new double[] {2.5000e+00,1.3722e+00,8.8970e+00,2.4200e+00,1.3722e+00,8.8970e+00,2.5000e+00,1.3735e+00,8.8900e+00,2.4200e+00,1.3735e+00,8.8900e+00,2.5000e+00,1.3757e+00,8.8833e+00,2.4200e+00,1.3757e+00,8.8833e+00,2.5000e+00,1.3788e+00,8.8769e+00,2.4200e+00,1.3788e+00,8.8769e+00,2.5000e+00,1.3826e+00,8.8709e+00,2.4200e+00,1.3826e+00,8.8709e+00,2.5000e+00,1.3872e+00,8.8655e+00,2.4200e+00,1.3872e+00,8.8655e+00,2.5000e+00,1.3924e+00,8.8607e+00,2.4200e+00,1.3924e+00,8.8607e+00,2.5000e+00,1.3982e+00,8.8566e+00,2.4200e+00,1.3982e+00,8.8566e+00,2.5000e+00,1.4045e+00,8.8532e+00,2.4200e+00,1.4045e+00,8.8532e+00,2.5000e+00,1.4111e+00,8.8507e+00,2.4200e+00,1.4111e+00,8.8507e+00,2.5000e+00,1.4180e+00,8.8491e+00,2.4200e+00,1.4180e+00,8.8491e+00,2.5000e+00,1.4251e+00,8.8483e+00,2.4200e+00,1.4251e+00,8.8483e+00,2.5000e+00,1.4322e+00,8.8485e+00,2.4200e+00,1.4322e+00,8.8485e+00,2.5000e+00,1.4392e+00,8.8495e+00,2.4200e+00,1.4392e+00,8.8495e+00,2.5000e+00,1.4460e+00,8.8514e+00,2.4200e+00,1.4460e+00,8.8514e+00,2.5000e+00,1.4525e+00,8.8542e+00,2.4200e+00,1.4525e+00,8.8542e+00,2.5000e+00,1.4587e+00,8.8578e+00,2.4200e+00,1.4587e+00,8.8578e+00,2.5000e+00,1.4643e+00,8.8621e+00,2.4200e+00,1.4643e+00,8.8621e+00,2.5000e+00,1.4693e+00,8.8671e+00,2.4200e+00,1.4693e+00,8.8671e+00,2.5000e+00,1.4737e+00,8.8727e+00,2.4200e+00,1.4737e+00,8.8727e+00,2.5000e+00,1.4773e+00,8.8789e+00,2.4200e+00,1.4773e+00,8.8789e+00,2.5000e+00,1.4800e+00,8.8854e+00,2.4200e+00,1.4800e+00,8.8854e+00,2.5000e+00,1.4820e+00,8.8922e+00,2.4200e+00,1.4820e+00,8.8922e+00,2.5000e+00,1.4831e+00,8.8992e+00,2.4200e+00,1.4831e+00,8.8992e+00});
			return Coordinate_7_943_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #944, 144 total numbers made up of 48 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_944_vector()
		{
			MFVec3f Normal_7_944_vector = new MFVec3f(new double[] {0.0000e+00,-9.9188e-01,-1.2721e-01,0.0000e+00,-9.9188e-01,-1.2721e-01,0.0000e+00,-9.6771e-01,-2.5208e-01,0.0000e+00,-9.6771e-01,-2.5208e-01,0.0000e+00,-9.2788e-01,-3.7287e-01,0.0000e+00,-9.2788e-01,-3.7287e-01,0.0000e+00,-8.7305e-01,-4.8763e-01,0.0000e+00,-8.7305e-01,-4.8763e-01,0.0000e+00,-8.0409e-01,-5.9451e-01,0.0000e+00,-8.0409e-01,-5.9451e-01,0.0000e+00,-7.2213e-01,-6.9176e-01,0.0000e+00,-7.2213e-01,-6.9176e-01,0.0000e+00,-6.2848e-01,-7.7783e-01,0.0000e+00,-6.2848e-01,-7.7783e-01,0.0000e+00,-5.2467e-01,-8.5131e-01,0.0000e+00,-5.2467e-01,-8.5131e-01,0.0000e+00,-4.1237e-01,-9.1102e-01,0.0000e+00,-4.1237e-01,-9.1102e-01,0.0000e+00,-2.9339e-01,-9.5599e-01,0.0000e+00,-2.9339e-01,-9.5599e-01,0.0000e+00,-1.6968e-01,-9.8550e-01,0.0000e+00,-1.6968e-01,-9.8550e-01,0.0000e+00,-4.3213e-02,-9.9907e-01,0.0000e+00,-4.3213e-02,-9.9907e-01,0.0000e+00,8.3948e-02,-9.9647e-01,0.0000e+00,8.3948e-02,-9.9647e-01,0.0000e+00,2.0975e-01,-9.7775e-01,0.0000e+00,2.0975e-01,-9.7775e-01,0.0000e+00,3.3216e-01,-9.4322e-01,0.0000e+00,3.3216e-01,-9.4322e-01,0.0000e+00,4.4920e-01,-8.9343e-01,0.0000e+00,4.4920e-01,-8.9343e-01,0.0000e+00,5.5897e-01,-8.2919e-01,0.0000e+00,5.5897e-01,-8.2919e-01,0.0000e+00,6.5970e-01,-7.5153e-01,0.0000e+00,6.5970e-01,-7.5153e-01,0.0000e+00,7.4976e-01,-6.6171e-01,0.0000e+00,7.4976e-01,-6.6171e-01,0.0000e+00,8.2768e-01,-5.6120e-01,0.0000e+00,8.2768e-01,-5.6120e-01,0.0000e+00,8.9222e-01,-4.5160e-01,0.0000e+00,8.9222e-01,-4.5160e-01,0.0000e+00,9.4233e-01,-3.3469e-01,0.0000e+00,9.4233e-01,-3.3469e-01,0.0000e+00,9.7719e-01,-2.1238e-01,0.0000e+00,9.7719e-01,-2.1238e-01,0.0000e+00,9.9624e-01,-8.6624e-02,0.0000e+00,9.9624e-01,-8.6624e-02});
			return Normal_7_944_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #956, 156 total numbers made up of 52 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_956_point()
		{
			MFVec3f Coordinate_7_956_point = new MFVec3f(new double[] {2.5000e+00,1.8406e+00,9.2691e+00,2.4200e+00,1.8406e+00,9.2691e+00,2.5000e+00,1.8391e+00,9.2921e+00,2.4200e+00,1.8391e+00,9.2921e+00,2.5000e+00,1.8347e+00,9.3147e+00,2.4200e+00,1.8347e+00,9.3147e+00,2.5000e+00,1.8274e+00,9.3365e+00,2.4200e+00,1.8274e+00,9.3365e+00,2.5000e+00,1.8174e+00,9.3573e+00,2.4200e+00,1.8174e+00,9.3573e+00,2.5000e+00,1.8048e+00,9.3765e+00,2.4200e+00,1.8048e+00,9.3765e+00,2.5000e+00,1.7898e+00,9.3940e+00,2.4200e+00,1.7898e+00,9.3940e+00,2.5000e+00,1.7727e+00,9.4094e+00,2.4200e+00,1.7727e+00,9.4094e+00,2.5000e+00,1.7538e+00,9.4225e+00,2.4200e+00,1.7538e+00,9.4225e+00,2.5000e+00,1.7333e+00,9.4331e+00,2.4200e+00,1.7333e+00,9.4331e+00,2.5000e+00,1.7117e+00,9.4410e+00,2.4200e+00,1.7117e+00,9.4410e+00,2.5000e+00,1.6892e+00,9.4460e+00,2.4200e+00,1.6892e+00,9.4460e+00,2.5000e+00,1.6663e+00,9.4481e+00,2.4200e+00,1.6663e+00,9.4481e+00,2.5000e+00,1.6433e+00,9.4472e+00,2.4200e+00,1.6433e+00,9.4472e+00,2.5000e+00,1.6206e+00,9.4434e+00,2.4200e+00,1.6206e+00,9.4434e+00,2.5000e+00,1.5986e+00,9.4367e+00,2.4200e+00,1.5986e+00,9.4367e+00,2.5000e+00,1.5776e+00,9.4272e+00,2.4200e+00,1.5776e+00,9.4272e+00,2.5000e+00,1.5580e+00,9.4151e+00,2.4200e+00,1.5580e+00,9.4151e+00,2.5000e+00,1.5401e+00,9.4006e+00,2.4200e+00,1.5401e+00,9.4006e+00,2.5000e+00,1.5242e+00,9.3840e+00,2.4200e+00,1.5242e+00,9.3840e+00,2.5000e+00,1.5106e+00,9.3654e+00,2.4200e+00,1.5106e+00,9.3654e+00,2.5000e+00,1.4995e+00,9.3452e+00,2.4200e+00,1.4995e+00,9.3452e+00,2.5000e+00,1.4911e+00,9.3238e+00,2.4200e+00,1.4911e+00,9.3238e+00,2.5000e+00,1.4855e+00,9.3015e+00,2.4200e+00,1.4855e+00,9.3015e+00,2.5000e+00,1.4828e+00,9.2786e+00,2.4200e+00,1.4828e+00,9.2786e+00,2.5000e+00,1.4831e+00,9.2556e+00,2.4200e+00,1.4831e+00,9.2556e+00});
			return Coordinate_7_956_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #957, 156 total numbers made up of 52 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_957_vector()
		{
			MFVec3f Normal_7_957_vector = new MFVec3f(new double[] {-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-1.0000e+00,-6.1232e-17,-0.0000e+00,-9.9173e-01,-1.2834e-01,-0.0000e+00,-9.9173e-01,-1.2834e-01,-0.0000e+00,-9.6706e-01,-2.5455e-01,-0.0000e+00,-9.6706e-01,-2.5455e-01,-0.0000e+00,-9.2639e-01,-3.7656e-01,-0.0000e+00,-9.2639e-01,-3.7656e-01,-0.0000e+00,-8.7041e-01,-4.9233e-01,-0.0000e+00,-8.7041e-01,-4.9233e-01,-0.0000e+00,-8.0002e-01,-5.9997e-01,-0.0000e+00,-8.0002e-01,-5.9997e-01,-0.0000e+00,-7.1641e-01,-6.9768e-01,-0.0000e+00,-7.1641e-01,-6.9768e-01,-0.0000e+00,-6.2095e-01,-7.8385e-01,-0.0000e+00,-6.2095e-01,-7.8385e-01,-0.0000e+00,-5.1521e-01,-8.5706e-01,-0.0000e+00,-5.1521e-01,-8.5706e-01,-0.0000e+00,-4.0096e-01,-9.1610e-01,-0.0000e+00,-4.0096e-01,-9.1610e-01,-0.0000e+00,-2.8008e-01,-9.5998e-01,-0.0000e+00,-2.8008e-01,-9.5998e-01,-0.0000e+00,-1.5456e-01,-9.8798e-01,-0.0000e+00,-1.5456e-01,-9.8798e-01,-0.0000e+00,-2.6486e-02,-9.9965e-01,-0.0000e+00,-2.6486e-02,-9.9965e-01,-0.0000e+00,1.0203e-01,-9.9478e-01,-0.0000e+00,1.0203e-01,-9.9478e-01,-0.0000e+00,2.2885e-01,-9.7346e-01,-0.0000e+00,2.2885e-01,-9.7346e-01,-0.0000e+00,3.5189e-01,-9.3604e-01,-0.0000e+00,3.5189e-01,-9.3604e-01,-0.0000e+00,4.6911e-01,-8.8314e-01,-0.0000e+00,4.6911e-01,-8.8314e-01,-0.0000e+00,5.7857e-01,-8.1563e-01,-0.0000e+00,5.7857e-01,-8.1563e-01,-0.0000e+00,6.7846e-01,-7.3464e-01,-0.0000e+00,6.7846e-01,-7.3464e-01,-0.0000e+00,7.6713e-01,-6.4149e-01,-0.0000e+00,7.6713e-01,-6.4149e-01,-0.0000e+00,8.4311e-01,-5.3773e-01,-0.0000e+00,8.4311e-01,-5.3773e-01,-0.0000e+00,9.0515e-01,-4.2508e-01,-0.0000e+00,9.0515e-01,-4.2508e-01,-0.0000e+00,9.5222e-01,-3.0540e-01,-0.0000e+00,9.5222e-01,-3.0540e-01,-0.0000e+00,9.8354e-01,-1.8067e-01,-0.0000e+00,9.8354e-01,-1.8067e-01,-0.0000e+00,9.9860e-01,-5.2953e-02,-0.0000e+00,9.9860e-01,-5.2953e-02,-0.0000e+00,9.9714e-01,7.5642e-02,-0.0000e+00,9.9714e-01,7.5642e-02});
			return Normal_7_957_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #987, 273 total numbers made up of 91 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_987_point()
		{
			MFVec3f Coordinate_7_987_point = new MFVec3f(new double[] {2.4200e+00,1.2500e+00,8.5135e+00,2.4200e+00,1.7161e+00,8.5135e+00,2.4200e+00,1.7161e+00,8.2611e+00,2.4200e+00,1.8406e+00,8.2611e+00,2.4200e+00,1.8406e+00,9.2691e+00,2.4200e+00,1.8369e+00,9.3049e+00,2.4200e+00,1.8263e+00,9.3392e+00,2.4200e+00,1.8090e+00,9.3707e+00,2.4200e+00,1.7857e+00,9.3981e+00,2.4200e+00,1.7574e+00,9.4203e+00,2.4200e+00,1.7253e+00,9.4364e+00,2.4200e+00,1.6906e+00,9.4458e+00,2.4200e+00,1.6548e+00,9.4480e+00,2.4200e+00,1.6192e+00,9.4430e+00,2.4200e+00,1.5853e+00,9.4311e+00,2.4200e+00,1.5545e+00,9.4126e+00,2.4200e+00,1.5280e+00,9.3883e+00,2.4200e+00,1.5069e+00,9.3592e+00,2.4200e+00,1.4920e+00,9.3265e+00,2.4200e+00,1.4839e+00,9.2915e+00,2.4200e+00,1.4831e+00,9.2556e+00,2.4200e+00,1.4831e+00,8.8992e+00,2.4200e+00,1.4811e+00,8.8885e+00,2.4200e+00,1.4770e+00,8.8784e+00,2.4200e+00,1.4711e+00,8.8693e+00,2.4200e+00,1.4636e+00,8.8615e+00,2.4200e+00,1.4546e+00,8.8553e+00,2.4200e+00,1.4447e+00,8.8510e+00,2.4200e+00,1.4341e+00,8.8487e+00,2.4200e+00,1.4232e+00,8.8484e+00,2.4200e+00,1.4125e+00,8.8503e+00,2.4200e+00,1.4024e+00,8.8543e+00,2.4200e+00,1.3932e+00,8.8601e+00,2.4200e+00,1.3853e+00,8.8676e+00,2.4200e+00,1.3790e+00,8.8764e+00,2.4200e+00,1.3746e+00,8.8864e+00,2.4200e+00,1.3722e+00,8.8970e+00,2.4200e+00,1.3722e+00,9.4761e+00,2.4200e+00,1.3730e+00,9.4845e+00,2.4200e+00,1.3754e+00,9.4926e+00,2.4200e+00,1.3794e+00,9.5000e+00,2.4200e+00,1.3848e+00,9.5066e+00,2.4200e+00,1.3913e+00,9.5119e+00,2.4200e+00,1.3987e+00,9.5159e+00,2.4200e+00,1.4068e+00,9.5183e+00,2.4200e+00,1.4152e+00,9.5192e+00,2.4200e+00,1.8406e+00,9.5192e+00,2.4200e+00,1.8406e+00,9.6425e+00,2.4200e+00,1.4152e+00,9.6425e+00,2.4200e+00,1.3830e+00,9.6393e+00,2.4200e+00,1.3520e+00,9.6299e+00,2.4200e+00,1.3234e+00,9.6146e+00,2.4200e+00,1.2984e+00,9.5941e+00,2.4200e+00,1.2778e+00,9.5691e+00,2.4200e+00,1.2626e+00,9.5405e+00,2.4200e+00,1.2532e+00,9.5095e+00,2.4200e+00,1.2500e+00,9.4773e+00,2.4200e+00,1.2500e+00,8.8788e+00,2.4200e+00,1.2593e+00,8.8438e+00,2.4200e+00,1.2754e+00,8.8114e+00,2.4200e+00,1.2977e+00,8.7828e+00,2.4200e+00,1.3252e+00,8.7593e+00,2.4200e+00,1.3570e+00,8.7417e+00,2.4200e+00,1.3916e+00,8.7309e+00,2.4200e+00,1.4276e+00,8.7273e+00,2.4200e+00,1.4637e+00,8.7309e+00,2.4200e+00,1.4983e+00,8.7417e+00,2.4200e+00,1.5300e+00,8.7593e+00,2.4200e+00,1.5576e+00,8.7828e+00,2.4200e+00,1.5798e+00,8.8114e+00,2.4200e+00,1.5960e+00,8.8438e+00,2.4200e+00,1.6052e+00,8.8788e+00,2.4200e+00,1.6052e+00,9.2579e+00,2.4200e+00,1.6064e+00,9.2690e+00,2.4200e+00,1.6097e+00,9.2796e+00,2.4200e+00,1.6151e+00,9.2894e+00,2.4200e+00,1.6223e+00,9.2979e+00,2.4200e+00,1.6311e+00,9.3048e+00,2.4200e+00,1.6411e+00,9.3098e+00,2.4200e+00,1.6519e+00,9.3127e+00,2.4200e+00,1.6630e+00,9.3133e+00,2.4200e+00,1.6741e+00,9.3118e+00,2.4200e+00,1.6846e+00,9.3080e+00,2.4200e+00,1.6941e+00,9.3022e+00,2.4200e+00,1.7024e+00,9.2946e+00,2.4200e+00,1.7089e+00,9.2856e+00,2.4200e+00,1.7134e+00,9.2754e+00,2.4200e+00,1.7159e+00,9.2645e+00,2.4200e+00,1.7161e+00,9.2533e+00,2.4200e+00,1.7161e+00,8.6356e+00,2.4200e+00,1.2500e+00,8.6356e+00});
			return Coordinate_7_987_point;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1005, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1005_point()
		{
			MFVec3f Coordinate_7_1005_point = new MFVec3f(new double[] {2.5000e+00,1.8160e+00,1.0277e+01,2.4200e+00,1.8160e+00,1.0277e+01,2.5000e+00,1.8271e+00,1.0289e+01,2.4200e+00,1.8271e+00,1.0289e+01,2.5000e+00,1.8367e+00,1.0302e+01,2.4200e+00,1.8367e+00,1.0302e+01,2.5000e+00,1.8446e+00,1.0316e+01,2.4200e+00,1.8446e+00,1.0316e+01,2.5000e+00,1.8507e+00,1.0331e+01,2.4200e+00,1.8507e+00,1.0331e+01,2.5000e+00,1.8548e+00,1.0347e+01,2.4200e+00,1.8548e+00,1.0347e+01,2.5000e+00,1.8569e+00,1.0363e+01,2.4200e+00,1.8569e+00,1.0363e+01,2.5000e+00,1.8570e+00,1.0379e+01,2.4200e+00,1.8570e+00,1.0379e+01,2.5000e+00,1.8550e+00,1.0395e+01,2.4200e+00,1.8550e+00,1.0395e+01,2.5000e+00,1.8511e+00,1.0411e+01,2.4200e+00,1.8511e+00,1.0411e+01,2.5000e+00,1.8452e+00,1.0426e+01,2.4200e+00,1.8452e+00,1.0426e+01,2.5000e+00,1.8374e+00,1.0440e+01,2.4200e+00,1.8374e+00,1.0440e+01,2.5000e+00,1.8280e+00,1.0453e+01,2.4200e+00,1.8280e+00,1.0453e+01,2.5000e+00,1.8169e+00,1.0465e+01,2.4200e+00,1.8169e+00,1.0465e+01,2.5000e+00,1.8045e+00,1.0475e+01,2.4200e+00,1.8045e+00,1.0475e+01,2.5000e+00,1.7909e+00,1.0484e+01,2.4200e+00,1.7909e+00,1.0484e+01,2.5000e+00,1.7762e+00,1.0491e+01,2.4200e+00,1.7762e+00,1.0491e+01,2.5000e+00,1.7609e+00,1.0496e+01,2.4200e+00,1.7609e+00,1.0496e+01,2.5000e+00,1.7450e+00,1.0499e+01,2.4200e+00,1.7450e+00,1.0499e+01,2.5000e+00,1.7288e+00,1.0500e+01,2.4200e+00,1.7288e+00,1.0500e+01});
			return Coordinate_7_1005_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1006, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1006_vector()
		{
			MFVec3f Normal_7_1006_vector = new MFVec3f(new double[] {-0.0000e+00,-6.7893e-01,7.3420e-01,-0.0000e+00,-6.7893e-01,7.3420e-01,-0.0000e+00,-7.6586e-01,6.4301e-01,-0.0000e+00,-7.6586e-01,6.4301e-01,-0.0000e+00,-8.4063e-01,5.4161e-01,-0.0000e+00,-8.4063e-01,5.4161e-01,-0.0000e+00,-9.0206e-01,4.3162e-01,-0.0000e+00,-9.0206e-01,4.3162e-01,-0.0000e+00,-9.4917e-01,3.1477e-01,-0.0000e+00,-9.4917e-01,3.1477e-01,-0.0000e+00,-9.8121e-01,1.9293e-01,-0.0000e+00,-9.8121e-01,1.9293e-01,-0.0000e+00,-9.9768e-01,6.8029e-02,-0.0000e+00,-9.9768e-01,6.8029e-02,-0.0000e+00,-9.9832e-01,-5.7953e-02,-0.0000e+00,-9.9832e-01,-5.7953e-02,-0.0000e+00,-9.8311e-01,-1.8302e-01,-0.0000e+00,-9.8311e-01,-1.8302e-01,-0.0000e+00,-9.5230e-01,-3.0517e-01,-0.0000e+00,-9.5230e-01,-3.0517e-01,-0.0000e+00,-9.0637e-01,-4.2249e-01,-0.0000e+00,-9.0637e-01,-4.2249e-01,-0.0000e+00,-8.4605e-01,-5.3310e-01,-0.0000e+00,-8.4605e-01,-5.3310e-01,-0.0000e+00,-7.7231e-01,-6.3524e-01,-0.0000e+00,-7.7231e-01,-6.3524e-01,-0.0000e+00,-6.8631e-01,-7.2731e-01,-0.0000e+00,-6.8631e-01,-7.2731e-01,-0.0000e+00,-5.8942e-01,-8.0783e-01,-0.0000e+00,-5.8942e-01,-8.0783e-01,-0.0000e+00,-4.8317e-01,-8.7553e-01,-0.0000e+00,-4.8317e-01,-8.7553e-01,-0.0000e+00,-3.6925e-01,-9.2933e-01,-0.0000e+00,-3.6925e-01,-9.2933e-01,-0.0000e+00,-2.4947e-01,-9.6838e-01,-0.0000e+00,-2.4947e-01,-9.6838e-01,-0.0000e+00,-1.2573e-01,-9.9206e-01,-0.0000e+00,-1.2573e-01,-9.9206e-01,-0.0000e+00,-0.0000e+00,-1.0000e+00,-0.0000e+00,-0.0000e+00,-1.0000e+00});
			return Normal_7_1006_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1018, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1018_point()
		{
			MFVec3f Coordinate_7_1018_point = new MFVec3f(new double[] {2.5000e+00,1.3790e+00,9.8732e+00,2.4200e+00,1.3790e+00,9.8732e+00,2.5000e+00,1.3775e+00,9.8717e+00,2.4200e+00,1.3775e+00,9.8717e+00,2.5000e+00,1.3762e+00,9.8700e+00,2.4200e+00,1.3762e+00,9.8700e+00,2.5000e+00,1.3752e+00,9.8681e+00,2.4200e+00,1.3752e+00,9.8681e+00,2.5000e+00,1.3745e+00,9.8661e+00,2.4200e+00,1.3745e+00,9.8661e+00,2.5000e+00,1.3740e+00,9.8640e+00,2.4200e+00,1.3740e+00,9.8640e+00,2.5000e+00,1.3737e+00,9.8619e+00,2.4200e+00,1.3737e+00,9.8619e+00,2.5000e+00,1.3738e+00,9.8598e+00,2.4200e+00,1.3738e+00,9.8598e+00,2.5000e+00,1.3741e+00,9.8577e+00,2.4200e+00,1.3741e+00,9.8577e+00,2.5000e+00,1.3747e+00,9.8556e+00,2.4200e+00,1.3747e+00,9.8556e+00,2.5000e+00,1.3756e+00,9.8537e+00,2.4200e+00,1.3756e+00,9.8537e+00,2.5000e+00,1.3767e+00,9.8519e+00,2.4200e+00,1.3767e+00,9.8519e+00,2.5000e+00,1.3780e+00,9.8502e+00,2.4200e+00,1.3780e+00,9.8502e+00,2.5000e+00,1.3795e+00,9.8487e+00,2.4200e+00,1.3795e+00,9.8487e+00,2.5000e+00,1.3813e+00,9.8475e+00,2.4200e+00,1.3813e+00,9.8475e+00,2.5000e+00,1.3831e+00,9.8465e+00,2.4200e+00,1.3831e+00,9.8465e+00,2.5000e+00,1.3851e+00,9.8457e+00,2.4200e+00,1.3851e+00,9.8457e+00,2.5000e+00,1.3872e+00,9.8452e+00,2.4200e+00,1.3872e+00,9.8452e+00,2.5000e+00,1.3893e+00,9.8449e+00,2.4200e+00,1.3893e+00,9.8449e+00,2.5000e+00,1.3914e+00,9.8450e+00,2.4200e+00,1.3914e+00,9.8450e+00});
			return Coordinate_7_1018_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1019, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1019_vector()
		{
			MFVec3f Normal_7_1019_vector = new MFVec3f(new double[] {0.0000e+00,-6.7893e-01,7.3420e-01,0.0000e+00,-6.7893e-01,7.3420e-01,0.0000e+00,-7.6869e-01,6.3963e-01,0.0000e+00,-7.6869e-01,6.3963e-01,0.0000e+00,-8.4537e-01,5.3418e-01,0.0000e+00,-8.4537e-01,5.3418e-01,0.0000e+00,-9.0769e-01,4.1965e-01,0.0000e+00,-9.0769e-01,4.1965e-01,0.0000e+00,-9.5457e-01,2.9799e-01,0.0000e+00,-9.5457e-01,2.9799e-01,0.0000e+00,-9.8523e-01,1.7126e-01,0.0000e+00,-9.8523e-01,1.7126e-01,0.0000e+00,-9.9913e-01,4.1619e-02,0.0000e+00,-9.9913e-01,4.1619e-02,0.0000e+00,-9.9606e-01,-8.8728e-02,0.0000e+00,-9.9606e-01,-8.8728e-02,0.0000e+00,-9.7605e-01,-2.1757e-01,0.0000e+00,-9.7605e-01,-2.1757e-01,0.0000e+00,-9.3944e-01,-3.4271e-01,0.0000e+00,-9.3944e-01,-3.4271e-01,0.0000e+00,-8.8687e-01,-4.6202e-01,0.0000e+00,-8.8687e-01,-4.6202e-01,0.0000e+00,-8.1922e-01,-5.7348e-01,0.0000e+00,-8.1922e-01,-5.7348e-01,0.0000e+00,-7.3764e-01,-6.7519e-01,0.0000e+00,-7.3764e-01,-6.7519e-01,0.0000e+00,-6.4353e-01,-7.6542e-01,0.0000e+00,-6.4353e-01,-7.6542e-01,0.0000e+00,-5.3847e-01,-8.4264e-01,0.0000e+00,-5.3847e-01,-8.4264e-01,0.0000e+00,-4.2426e-01,-9.0554e-01,0.0000e+00,-4.2426e-01,-9.0554e-01,0.0000e+00,-3.0284e-01,-9.5304e-01,0.0000e+00,-3.0284e-01,-9.5304e-01,0.0000e+00,-1.7627e-01,-9.8434e-01,0.0000e+00,-1.7627e-01,-9.8434e-01,0.0000e+00,-4.6700e-02,-9.9891e-01,0.0000e+00,-4.6700e-02,-9.9891e-01,0.0000e+00,8.3661e-02,-9.9649e-01,0.0000e+00,8.3661e-02,-9.9649e-01});
			return Normal_7_1019_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1043, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1043_point()
		{
			MFVec3f Coordinate_7_1043_point = new MFVec3f(new double[] {2.5000e+00,1.3019e+00,9.9682e+00,2.4200e+00,1.3019e+00,9.9682e+00,2.5000e+00,1.2887e+00,9.9561e+00,2.4200e+00,1.2887e+00,9.9561e+00,2.5000e+00,1.2771e+00,9.9424e+00,2.4200e+00,1.2771e+00,9.9424e+00,2.5000e+00,1.2674e+00,9.9273e+00,2.4200e+00,1.2674e+00,9.9273e+00,2.5000e+00,1.2597e+00,9.9110e+00,2.4200e+00,1.2597e+00,9.9110e+00,2.5000e+00,1.2542e+00,9.8939e+00,2.4200e+00,1.2542e+00,9.8939e+00,2.5000e+00,1.2509e+00,9.8763e+00,2.4200e+00,1.2509e+00,9.8763e+00,2.5000e+00,1.2500e+00,9.8583e+00,2.4200e+00,1.2500e+00,9.8583e+00,2.5000e+00,1.2514e+00,9.8404e+00,2.4200e+00,1.2514e+00,9.8404e+00,2.5000e+00,1.2551e+00,9.8229e+00,2.4200e+00,1.2551e+00,9.8229e+00,2.5000e+00,1.2611e+00,9.8059e+00,2.4200e+00,1.2611e+00,9.8059e+00,2.5000e+00,1.2692e+00,9.7899e+00,2.4200e+00,1.2692e+00,9.7899e+00,2.5000e+00,1.2793e+00,9.7750e+00,2.4200e+00,1.2793e+00,9.7750e+00,2.5000e+00,1.2912e+00,9.7616e+00,2.4200e+00,1.2912e+00,9.7616e+00,2.5000e+00,1.3048e+00,9.7498e+00,2.4200e+00,1.3048e+00,9.7498e+00,2.5000e+00,1.3198e+00,9.7399e+00,2.4200e+00,1.3198e+00,9.7399e+00,2.5000e+00,1.3359e+00,9.7320e+00,2.4200e+00,1.3359e+00,9.7320e+00,2.5000e+00,1.3529e+00,9.7263e+00,2.4200e+00,1.3529e+00,9.7263e+00,2.5000e+00,1.3705e+00,9.7228e+00,2.4200e+00,1.3705e+00,9.7228e+00,2.5000e+00,1.3885e+00,9.7217e+00,2.4200e+00,1.3885e+00,9.7217e+00});
			return Coordinate_7_1043_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1044, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1044_vector()
		{
			MFVec3f Normal_7_1044_vector = new MFVec3f(new double[] {-0.0000e+00,6.2486e-01,-7.8074e-01,-0.0000e+00,6.2486e-01,-7.8074e-01,-0.0000e+00,7.2067e-01,-6.9327e-01,-0.0000e+00,7.2067e-01,-6.9327e-01,-0.0000e+00,8.0436e-01,-5.9414e-01,-0.0000e+00,8.0436e-01,-5.9414e-01,-0.0000e+00,8.7451e-01,-4.8501e-01,-0.0000e+00,8.7451e-01,-4.8501e-01,-0.0000e+00,9.2994e-01,-3.6772e-01,-0.0000e+00,9.2994e-01,-3.6772e-01,-0.0000e+00,9.6972e-01,-2.4423e-01,-0.0000e+00,9.6972e-01,-2.4423e-01,-0.0000e+00,9.9317e-01,-1.1664e-01,-0.0000e+00,9.9317e-01,-1.1664e-01,-0.0000e+00,9.9992e-01,1.2917e-02,-0.0000e+00,9.9992e-01,1.2917e-02,-0.0000e+00,9.8983e-01,1.4226e-01,-0.0000e+00,9.8983e-01,1.4226e-01,-0.0000e+00,9.6308e-01,2.6920e-01,-0.0000e+00,9.6308e-01,2.6920e-01,-0.0000e+00,9.2013e-01,3.9162e-01,-0.0000e+00,9.2013e-01,3.9162e-01,-0.0000e+00,8.6169e-01,5.0744e-01,-0.0000e+00,8.6169e-01,5.0744e-01,-0.0000e+00,7.8874e-01,6.1472e-01,-0.0000e+00,7.8874e-01,6.1472e-01,-0.0000e+00,7.0253e-01,7.1166e-01,-0.0000e+00,7.0253e-01,7.1166e-01,-0.0000e+00,6.0448e-01,7.9662e-01,-0.0000e+00,6.0448e-01,7.9662e-01,-0.0000e+00,4.9627e-01,8.6817e-01,-0.0000e+00,4.9627e-01,8.6817e-01,-0.0000e+00,3.7970e-01,9.2511e-01,-0.0000e+00,3.7970e-01,9.2511e-01,-0.0000e+00,2.5674e-01,9.6648e-01,-0.0000e+00,2.5674e-01,9.6648e-01,-0.0000e+00,1.2946e-01,9.9158e-01,-0.0000e+00,1.2946e-01,9.9158e-01,-0.0000e+00,1.2246e-16,1.0000e+00,-0.0000e+00,1.2246e-16,1.0000e+00});
			return Normal_7_1044_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1056, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1056_point()
		{
			MFVec3f Coordinate_7_1056_point = new MFVec3f(new double[] {2.5000e+00,1.7070e+00,1.0341e+01,2.4200e+00,1.7070e+00,1.0341e+01,2.5000e+00,1.7089e+00,1.0343e+01,2.4200e+00,1.7089e+00,1.0343e+01,2.5000e+00,1.7105e+00,1.0345e+01,2.4200e+00,1.7105e+00,1.0345e+01,2.5000e+00,1.7118e+00,1.0347e+01,2.4200e+00,1.7118e+00,1.0347e+01,2.5000e+00,1.7128e+00,1.0350e+01,2.4200e+00,1.7128e+00,1.0350e+01,2.5000e+00,1.7135e+00,1.0352e+01,2.4200e+00,1.7135e+00,1.0352e+01,2.5000e+00,1.7139e+00,1.0355e+01,2.4200e+00,1.7139e+00,1.0355e+01,2.5000e+00,1.7139e+00,1.0358e+01,2.4200e+00,1.7139e+00,1.0358e+01,2.5000e+00,1.7136e+00,1.0360e+01,2.4200e+00,1.7136e+00,1.0360e+01,2.5000e+00,1.7129e+00,1.0363e+01,2.4200e+00,1.7129e+00,1.0363e+01,2.5000e+00,1.7119e+00,1.0366e+01,2.4200e+00,1.7119e+00,1.0366e+01,2.5000e+00,1.7107e+00,1.0368e+01,2.4200e+00,1.7107e+00,1.0368e+01,2.5000e+00,1.7091e+00,1.0370e+01,2.4200e+00,1.7091e+00,1.0370e+01,2.5000e+00,1.7073e+00,1.0372e+01,2.4200e+00,1.7073e+00,1.0372e+01,2.5000e+00,1.7052e+00,1.0374e+01,2.4200e+00,1.7052e+00,1.0374e+01,2.5000e+00,1.7029e+00,1.0375e+01,2.4200e+00,1.7029e+00,1.0375e+01,2.5000e+00,1.7005e+00,1.0376e+01,2.4200e+00,1.7005e+00,1.0376e+01,2.5000e+00,1.6980e+00,1.0377e+01,2.4200e+00,1.6980e+00,1.0377e+01,2.5000e+00,1.6953e+00,1.0378e+01,2.4200e+00,1.6953e+00,1.0378e+01,2.5000e+00,1.6927e+00,1.0378e+01,2.4200e+00,1.6927e+00,1.0378e+01});
			return Coordinate_7_1056_point;
		}
		/** Large attribute array: Normal vector field, scene-graph level=7, element #1057, 120 total numbers made up of 40 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getNormal_7_1057_vector()
		{
			MFVec3f Normal_7_1057_vector = new MFVec3f(new double[] {0.0000e+00,6.7708e-01,-7.3591e-01,0.0000e+00,6.7708e-01,-7.3591e-01,0.0000e+00,7.6432e-01,-6.4483e-01,0.0000e+00,7.6432e-01,-6.4483e-01,0.0000e+00,8.3941e-01,-5.4350e-01,0.0000e+00,8.3941e-01,-5.4350e-01,0.0000e+00,9.0114e-01,-4.3353e-01,0.0000e+00,9.0114e-01,-4.3353e-01,0.0000e+00,9.4854e-01,-3.1666e-01,0.0000e+00,9.4854e-01,-3.1666e-01,0.0000e+00,9.8085e-01,-1.9475e-01,0.0000e+00,9.8085e-01,-1.9475e-01,0.0000e+00,9.9756e-01,-6.9746e-02,0.0000e+00,9.9756e-01,-6.9746e-02,0.0000e+00,9.9841e-01,5.6367e-02,0.0000e+00,9.9841e-01,5.6367e-02,0.0000e+00,9.8338e-01,1.8158e-01,0.0000e+00,9.8338e-01,1.8158e-01,0.0000e+00,9.5270e-01,3.0391e-01,0.0000e+00,9.5270e-01,3.0391e-01,0.0000e+00,9.0687e-01,4.2141e-01,0.0000e+00,9.0687e-01,4.2141e-01,0.0000e+00,8.4662e-01,5.3220e-01,0.0000e+00,8.4662e-01,5.3220e-01,0.0000e+00,7.7290e-01,6.3453e-01,0.0000e+00,7.7290e-01,6.3453e-01,0.0000e+00,6.8689e-01,7.2676e-01,0.0000e+00,6.8689e-01,7.2676e-01,0.0000e+00,5.8995e-01,8.0744e-01,0.0000e+00,5.8995e-01,8.0744e-01,0.0000e+00,4.8363e-01,8.7527e-01,0.0000e+00,4.8363e-01,8.7527e-01,0.0000e+00,3.6962e-01,9.2918e-01,0.0000e+00,3.6962e-01,9.2918e-01,0.0000e+00,2.4973e-01,9.6832e-01,0.0000e+00,2.4973e-01,9.6832e-01,0.0000e+00,1.2587e-01,9.9205e-01,0.0000e+00,1.2587e-01,9.9205e-01,0.0000e+00,0.0000e+00,1.0000e+00,0.0000e+00,0.0000e+00,1.0000e+00});
			return Normal_7_1057_vector;
		}
		/** Large attribute array: Coordinate point field, scene-graph level=7, element #1069, 174 total numbers made up of 58 3-tuple values.
		 * Reassemble split array as single method to improve readability and runnability.
		 * Provide large array values via separate methods, hoping to avoid 'code too large' Java compilation errors. 
		 * Individual Java methods (including aggregated initializations) are limited to 64KB.
		 * @see https://stackoverflow.com/questions/2407912/code-too-large-compilation-error-in-java
		 * @see https://stackoverflow.com/questions/11437905/java-too-many-constants-jvm-error
		 */
		private MFVec3f getCoordinate_7_1069_point()
		{
			MFVec3f Coordinate_7_1069_point = new MFVec3f(new double[] {2.4200e+00,1.2500e+00,1.0378e+01,2.4200e+00,1.6927e+00,1.0378e+01,2.4200e+00,1.6969e+00,1.0377e+01,2.4200e+00,1.7009e+00,1.0376e+01,2.4200e+00,1.7046e+00,1.0374e+01,2.4200e+00,1.7079e+00,1.0371e+01,2.4200e+00,1.7105e+00,1.0368e+01,2.4200e+00,1.7125e+00,1.0364e+01,2.4200e+00,1.7136e+00,1.0360e+01,2.4200e+00,1.7139e+00,1.0356e+01,2.4200e+00,1.7134e+00,1.0352e+01,2.4200e+00,1.7120e+00,1.0348e+01,2.4200e+00,1.7099e+00,1.0344e+01,2.4200e+00,1.7070e+00,1.0341e+01,2.4200e+00,1.3019e+00,9.9682e+00,2.4200e+00,1.2831e+00,9.9500e+00,2.4200e+00,1.2681e+00,9.9285e+00,2.4200e+00,1.2573e+00,9.9046e+00,2.4200e+00,1.2513e+00,9.8790e+00,2.4200e+00,1.2502e+00,9.8528e+00,2.4200e+00,1.2541e+00,9.8269e+00,2.4200e+00,1.2627e+00,9.8021e+00,2.4200e+00,1.2759e+00,9.7794e+00,2.4200e+00,1.2932e+00,9.7597e+00,2.4200e+00,1.3138e+00,9.7435e+00,2.4200e+00,1.3372e+00,9.7315e+00,2.4200e+00,1.3624e+00,9.7241e+00,2.4200e+00,1.3885e+00,9.7217e+00,2.4200e+00,1.8406e+00,9.7217e+00,2.4200e+00,1.8406e+00,9.8450e+00,2.4200e+00,1.3914e+00,9.8450e+00,2.4200e+00,1.3883e+00,9.8450e+00,2.4200e+00,1.3853e+00,9.8456e+00,2.4200e+00,1.3824e+00,9.8468e+00,2.4200e+00,1.3798e+00,9.8485e+00,2.4200e+00,1.3776e+00,9.8507e+00,2.4200e+00,1.3758e+00,9.8533e+00,2.4200e+00,1.3745e+00,9.8561e+00,2.4200e+00,1.3739e+00,9.8591e+00,2.4200e+00,1.3738e+00,9.8622e+00,2.4200e+00,1.3742e+00,9.8653e+00,2.4200e+00,1.3753e+00,9.8682e+00,2.4200e+00,1.3769e+00,9.8709e+00,2.4200e+00,1.3790e+00,9.8732e+00,2.4200e+00,1.8160e+00,1.0277e+01,2.4200e+00,1.8329e+00,1.0297e+01,2.4200e+00,1.8458e+00,1.0319e+01,2.4200e+00,1.8540e+00,1.0343e+01,2.4200e+00,1.8572e+00,1.0368e+01,2.4200e+00,1.8553e+00,1.0394e+01,2.4200e+00,1.8484e+00,1.0418e+01,2.4200e+00,1.8367e+00,1.0441e+01,2.4200e+00,1.8208e+00,1.0461e+01,2.4200e+00,1.8012e+00,1.0478e+01,2.4200e+00,1.7787e+00,1.0490e+01,2.4200e+00,1.7543e+00,1.0497e+01,2.4200e+00,1.7288e+00,1.0500e+01,2.4200e+00,1.2500e+00,1.0500e+01});
			return Coordinate_7_1069_point;
		}

	/** The initialized model object, created within initialize() method. */
	private X3D x3dModel;

	/** 
	 * Provide a 
	 * <a href="https://dzone.com/articles/java-copy-shallow-vs-deep-in-which-you-will-swim" target="_blank">shallow copy</a>
	 * of the X3D model.
	 * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/Core/X3D.html">X3D</a>
	 * @return NistCtc05Asme1Ap203Spri model
	 */
	public X3D getX3dModel()
	{	  
		return x3dModel;
	}
	   
    /** 
	 * Default main() method provided for test purposes, uses CommandLine to set global ConfigurationProperties for this object.
     * @param args array of input parameters, provided as arguments
	 * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/Core/X3D.html#handleArguments-java.lang.String:A-">X3D.handleArguments(args)</a>
	 * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/Core/X3D.html#validationReport--">X3D.validationReport()</a>
     * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/CommandLine.html">CommandLine</a>
     * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/CommandLine.html#USAGE">CommandLine.USAGE</a>
     * @see <a href="https://www.web3d.org/specifications/java/javadoc/org/web3d/x3d/jsail/ConfigurationProperties.html">ConfigurationProperties</a>
     */
    public static void main(String args[])
    {
        X3D thisExampleX3dModel = new NistCtc05Asme1Ap203Spri().getX3dModel();

		boolean hasArguments = (args != null) && (args.length > 0);
		boolean validate = true; // default
		boolean argumentsLoadNewModel = false;
		String  fileName = new String();

		if (args != null)
		{
			for (String arg : args)
			{
				if (arg.toLowerCase().startsWith("-v") || arg.toLowerCase().contains("validate"))
				{
					validate = true; // making sure
				}
				if (arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_X3D) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_CLASSICVRML) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_X3DB) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_VRML97) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_EXI) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_GZIP) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_ZIP) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_HTML) ||
					arg.toLowerCase().endsWith(X3D.FILE_EXTENSION_XHTML))
				{
					argumentsLoadNewModel = true;
					fileName = arg;
				}
			}
		}
		if      (argumentsLoadNewModel)
			System.out.println("WARNING: \"net.x3djsonld.data.NistCtc05Asme1Ap203Spri\" model invocation is attempting to load file \"" + fileName + "\" instead of simply validating itself... file loading ignored.");
		else if (hasArguments) // if no arguments provided, this method produces usage warning
			thisExampleX3dModel.handleArguments(args);

		if (validate)
		{
			System.out.print("Java program \"net.x3djsonld.data.NistCtc05Asme1Ap203Spri\" self-validation test results: ");
			String validationResults = thisExampleX3dModel.validationReport();
            if (validationResults.startsWith("\n"))
                System.out.println();
			System.out.println(validationResults.trim());
		}
    }
}
