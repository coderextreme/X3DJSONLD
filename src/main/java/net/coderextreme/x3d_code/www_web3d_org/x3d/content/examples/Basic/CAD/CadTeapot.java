package net.coderextreme.x3d_code.www_web3d_org.x3d.content.examples.Basic.CAD;
import org.web3d.x3d.jsail.*;
import org.web3d.x3d.jsail.CADGeometry.*;
import org.web3d.x3d.jsail.Core.*;
import org.web3d.x3d.jsail.CubeMapTexturing.*;
import org.web3d.x3d.jsail.DIS.*;
import org.web3d.x3d.jsail.EnvironmentalEffects.*;
import org.web3d.x3d.jsail.EnvironmentalSensor.*;
import org.web3d.x3d.jsail.EventUtilities.*;
import org.web3d.x3d.jsail.Followers.*;
import org.web3d.x3d.jsail.Geometry2D.*;
import org.web3d.x3d.jsail.Geometry3D.*;
import org.web3d.x3d.jsail.Geospatial.*;
import org.web3d.x3d.jsail.Grouping.*;
import org.web3d.x3d.jsail.HAnim.*;
import org.web3d.x3d.jsail.Interpolation.*;
import org.web3d.x3d.jsail.KeyDeviceSensor.*;
import org.web3d.x3d.jsail.Layering.*;
import org.web3d.x3d.jsail.Layout.*;
import org.web3d.x3d.jsail.Lighting.*;
import org.web3d.x3d.jsail.NURBS.*;
import org.web3d.x3d.jsail.Navigation.*;
import org.web3d.x3d.jsail.Networking.*;
import org.web3d.x3d.jsail.ParticleSystems.*;
import org.web3d.x3d.jsail.Picking.*;
import org.web3d.x3d.jsail.PointingDeviceSensor.*;
import org.web3d.x3d.jsail.Rendering.*;
import org.web3d.x3d.jsail.RigidBodyPhysics.*;
import org.web3d.x3d.jsail.Scripting.*;
import org.web3d.x3d.jsail.Shaders.*;
import org.web3d.x3d.jsail.Shape.*;
import org.web3d.x3d.jsail.Sound.*;
import org.web3d.x3d.jsail.Text.*;
import org.web3d.x3d.jsail.Texturing3D.*;
import org.web3d.x3d.jsail.Texturing.*;
import org.web3d.x3d.jsail.Time.*;
import org.web3d.x3d.jsail.VolumeRendering.*;
import org.web3d.x3d.jsail.fields.*;
import org.web3d.x3d.sai.*;
import org.web3d.x3d.sai.CADGeometry.*;
import org.web3d.x3d.sai.Core.*;
import org.web3d.x3d.sai.CubeMapTexturing.*;
import org.web3d.x3d.sai.DIS.*;
import org.web3d.x3d.sai.EnvironmentalEffects.*;
import org.web3d.x3d.sai.EnvironmentalSensor.*;
import org.web3d.x3d.sai.EventUtilities.*;
import org.web3d.x3d.sai.Followers.*;
import org.web3d.x3d.sai.Geometry2D.*;
import org.web3d.x3d.sai.Geometry3D.*;
import org.web3d.x3d.sai.Geospatial.*;
import org.web3d.x3d.sai.Grouping.*;
import org.web3d.x3d.sai.HAnim.*;
import org.web3d.x3d.sai.Interpolation.*;
import org.web3d.x3d.sai.KeyDeviceSensor.*;
import org.web3d.x3d.sai.Layering.*;
import org.web3d.x3d.sai.Layout.*;
import org.web3d.x3d.sai.Lighting.*;
import org.web3d.x3d.sai.NURBS.*;
import org.web3d.x3d.sai.Navigation.*;
import org.web3d.x3d.sai.Networking.*;
import org.web3d.x3d.sai.ParticleSystems.*;
import org.web3d.x3d.sai.Picking.*;
import org.web3d.x3d.sai.PointingDeviceSensor.*;
import org.web3d.x3d.sai.Rendering.*;
import org.web3d.x3d.sai.RigidBodyPhysics.*;
import org.web3d.x3d.sai.Scripting.*;
import org.web3d.x3d.sai.Shaders.*;
import org.web3d.x3d.sai.Shape.*;
import org.web3d.x3d.sai.Sound.*;
import org.web3d.x3d.sai.Text.*;
import org.web3d.x3d.sai.Texturing3D.*;
import org.web3d.x3d.sai.Texturing.*;
import org.web3d.x3d.sai.Time.*;
import org.web3d.x3d.sai.VolumeRendering.*;
public class CadTeapot {
  public static void main(String[] args) {
    ConfigurationProperties.setXsltEngine(ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA);
    ConfigurationProperties.setDeleteIntermediateFiles(false);
    new CadTeapot().initialize().toFileJSON("../x3d_code/www_web3d_org/x3d/content/examples/Basic/CAD/CadTeapot.new.json");
    }
    public X3DObject initialize() {
      X3DObject X3D0 =  new X3DObject().setProfile("CADInterchange").setVersion("3.1")
      .setHead(new headObject()
        .addComments(new CommentsBlock("superfluous for CADInterchange profile: <component level='2' name='CADGeometry'/>"))
        .addComponent(new componentObject().setName("EnvironmentalEffects").setLevel(1))
        .addMeta(new metaObject().setName("title").setContent("CadTeapot.x3d"))
        .addMeta(new metaObject().setName("description").setContent("Teapot model demonstrating proper hierarchy of CAD nodes: CADLayer, CADAssembly, CADPart, and then CADFace."))
        .addMeta(new metaObject().setName("creator").setContent("Alan Hudson, Don Brutzman"))
        .addMeta(new metaObject().setName("translator").setContent("Xj3D, http://www.xj3d.org"))
        .addMeta(new metaObject().setName("created").setContent("1 December 2005"))
        .addMeta(new metaObject().setName("modified").setContent("20 October 2019"))
        .addMeta(new metaObject().setName("reference").setContent("https://www.web3d.org/x3d/specifications/ISO-IEC-19775-Amendment1-X3DAbstractSpecification/Part01/components/CADGeometry.html"))
        .addMeta(new metaObject().setName("reference").setContent("TeapotOriginal.x3dv"))
        .addMeta(new metaObject().setName("Image").setContent("CadTeapot.png"))
        .addMeta(new metaObject().setName("subject").setContent("X3D CAD CADInterchange profile"))
        .addMeta(new metaObject().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/Basic/CAD/CadTeapot.x3d"))
        .addMeta(new metaObject().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new metaObject().setName("license").setContent("../license.html")))
      .setScene(new SceneObject()
        .addChild(new WorldInfoObject().setTitle("CadTeapot.x3d"))
        .addChild(new BackgroundObject().setSkyColor(new MFColorObject(new MFColor0().getArray())))
        .addChild(new ViewpointObject().setDescription("Hello CAD teapot").setPosition(new float[] {0f,0f,35f}))
        .addChild(new CADLayerObject().setName("Single topmost CADLayer for this model").setDEF("TopLayer")
          .addChild(new CADAssemblyObject().setName("Assembled Teapot")
            .addChild(new CADPartObject().setName("Body")
              .addChild(new CADFaceObject().setName("Teapot body IFS mesh")
                .setShape(new ShapeObject()
                  .setAppearance(new AppearanceObject().setDEF("APP01")
                    .setMaterial(new MaterialObject().setDiffuseColor(new float[] {0.3451f,0.5608f,0.8824f})))
                  .setGeometry(new IndexedFaceSetObject().setCoordIndex(new MFInt32Object(new MFInt321().getArray()).append(new MFInt322().getArray()).append(new MFInt323().getArray())).setCreaseAngle(1f)
                    .setCoord(new CoordinateObject().setPoint(new MFVec3fObject(new MFVec3f4().getArray())))))))
            .addChild(new CADPartObject().setName("Spout")
              .addChild(new CADFaceObject().setName("Teapot spout IFS mesh")
                .setShape(new ShapeObject()
                  .setAppearance(new AppearanceObject().setUSE("APP01"))
                  .setGeometry(new IndexedFaceSetObject().setCoordIndex(new MFInt32Object(new MFInt325().getArray())).setCreaseAngle(1f).setSolid(false)
                    .setCoord(new CoordinateObject().setPoint(new MFVec3fObject(new MFVec3f6().getArray())))))))
            .addChild(new CADPartObject().setName("Handle")
              .addChild(new CADFaceObject().setName("Teapot handle IFS mesh")
                .setShape(new ShapeObject()
                  .setAppearance(new AppearanceObject().setUSE("APP01"))
                  .setGeometry(new IndexedFaceSetObject().setCoordIndex(new MFInt32Object(new MFInt327().getArray())).setCreaseAngle(1f)
                    .setCoord(new CoordinateObject().setPoint(new MFVec3fObject(new MFVec3f8().getArray())))))))
            .addChild(new CADPartObject().setName("Lid")
              .addChild(new CADFaceObject().setName("Teapot lid IFS mesh")
                .setShape(new ShapeObject()
                  .setAppearance(new AppearanceObject().setUSE("APP01"))
                  .setGeometry(new IndexedFaceSetObject().setCoordIndex(new MFInt32Object(new MFInt329().getArray()).append(new MFInt3210().getArray())).setCreaseAngle(1f)
                    .setCoord(new CoordinateObject().setDEF("Teapot01-COORD").setPoint(new MFVec3fObject(new MFVec3f11().getArray())))))))
            .addComments(new CommentsBlock("TODO: want to add <Inline/> <CADPart DEF='InlineAnotherPart' name='BringInAnotherModel'> <CADFace name='HoldInline'> </CADFace> </CADPart>")))))      ;
    return X3D0;
    }
protected class MFColor0 {
  protected MFColorObject getArray() {
    return new MFColorObject(new float[] {0.9607843f,1f,0.9607843f});
  }
}
protected class MFInt321 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,15,20,21,-1,21,16,15,-1,16,21,22,-1,22,17,16,-1,17,22,23,-1,23,18,17,-1,18,23,24,-1,24,19,18,-1,20,25,26,-1,26,21,20,-1,21,26,27,-1,27,22,21,-1,22,27,28,-1,28,23,22,-1,23,28,29,-1,29,24,23,-1,25,30,31,-1,31,26,25,-1,26,31,32,-1,32,27,26,-1,27,32,33,-1,33,28,27,-1,28,33,34,-1,34,29,28,-1,30,35,36,-1,36,31,30,-1,31,36,37,-1,37,32,31,-1,32,37,38,-1,38,33,32,-1,33,38,39,-1,39,34,33,-1,35,40,41,-1,41,36,35,-1,36,41,42,-1,42,37,36,-1,37,42,43,-1,43,38,37,-1,38,43,44,-1,44,39,38,-1,40,45,46,-1,46,41,40,-1,41,46,47,-1,47,42,41,-1,42,47,48,-1,48,43,42,-1,43,48,49,-1,49,44,43,-1,45,50,51,-1,51,46,45,-1,46,51,52,-1,52,47,46,-1,47,52,53,-1,53,48,47,-1,48,53,54,-1,54,49,48,-1,50,55,56,-1,56,51,50,-1,51,56,57,-1,57,52,51,-1,52,57,58,-1,58,53,52,-1,53,58,59,-1,59,54,53,-1,55,60,61,-1,61,56,55,-1,56,61,62,-1,62,57,56,-1,57,62,63,-1,63,58,57,-1,58,63,64,-1,64,59,58,-1,60,65,66,-1,66,61,60,-1,61,66,67,-1,67,62,61,-1,62,67,68,-1,68,63,62,-1,63,68,69,-1,69,64,63,-1,65,70,71,-1,71,66,65,-1,66,71,72,-1,72,67,66,-1,67,72,73,-1,73,68,67,-1,68,73,74,-1,74,69,68,-1,70,75,76,-1,76,71,70,-1,71,76,77,-1,77,72,71,-1,72,77,78,-1,78,73,72,-1,73,78,79,-1,79,74,73,-1,75,0,1,-1,1,76,75,-1,76,1,2,-1,2,77,76,-1,77,2,3,-1,3,78,77,-1,78,3,4,-1,4,79,78,-1,4,9,84,-1,84,80,4,-1,80,84,85,-1,85,81,80,-1,81,85,86,-1,86,82,81,-1,82,86,87,-1,87,83,82,-1,9,14,88,-1,88,84,9,-1,84,88,89,-1,89,85,84,-1,85,89,90,-1,90,86,85,-1,86,90,91,-1,91,87,86,-1,14,19,92,-1,92,88,14,-1,88,92,93,-1,93,89,88,-1,89,93,94,-1,94,90,89,-1,90,94,95,-1,95,91,90,-1,19,24,96,-1,96,92,19,-1,92,96,97,-1,97,93,92,-1,93,97,98,-1,98,94,93,-1,94,98,99,-1,99,95,94,-1,24,29,100,-1,100,96,24,-1,96,100,101,-1,101,97,96,-1,97,101,102,-1,102,98,97,-1,98,102,103,-1,103,99,98,-1,29,34,104,-1,104,100,29,-1,100,104,105,-1,105,101,100,-1,101,105,106,-1,106,102,101,-1,102,106,107,-1,107,103,102,-1,34,39,108,-1,108,104,34,-1,104,108,109,-1,109,105,104,-1,105,109,110,-1,110,106,105,-1,106,110,111,-1,111,107,106,-1,39,44,112,-1,112,108,39,-1,108,112,113,-1,113,109,108,-1,109,113,114,-1,114,110,109,-1,110,114,115,-1,115,111,110,-1,44,49,116,-1,116,112,44,-1,112,116,117,-1,117,113,112,-1,113,117,118,-1,118,114,113,-1,114,118,119,-1,119,115,114,-1,49,54,120,-1,120,116,49,-1,116,120,121,-1,121,117,116,-1,117,121,122,-1,122,118,117,-1,118,122,123,-1,123,119,118,-1,54,59,124,-1,124,120,54,-1});
  }
}
protected class MFInt322 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {120,124,125,-1,125,121,120,-1,121,125,126,-1,126,122,121,-1,122,126,127,-1,127,123,122,-1,59,64,128,-1,128,124,59,-1,124,128,129,-1,129,125,124,-1,125,129,130,-1,130,126,125,-1,126,130,131,-1,131,127,126,-1,64,69,132,-1,132,128,64,-1,128,132,133,-1,133,129,128,-1,129,133,134,-1,134,130,129,-1,130,134,135,-1,135,131,130,-1,69,74,136,-1,136,132,69,-1,132,136,137,-1,137,133,132,-1,133,137,138,-1,138,134,133,-1,134,138,139,-1,139,135,134,-1,74,79,140,-1,140,136,74,-1,136,140,141,-1,141,137,136,-1,137,141,142,-1,142,138,137,-1,138,142,143,-1,143,139,138,-1,79,4,80,-1,80,140,79,-1,140,80,81,-1,81,141,140,-1,141,81,82,-1,82,142,141,-1,142,82,83,-1,83,143,142,-1,83,87,148,-1,148,144,83,-1,144,148,149,-1,149,145,144,-1,145,149,150,-1,150,146,145,-1,146,150,151,-1,151,147,146,-1,87,91,152,-1,152,148,87,-1,148,152,153,-1,153,149,148,-1,149,153,154,-1,154,150,149,-1,150,154,155,-1,155,151,150,-1,91,95,156,-1,156,152,91,-1,152,156,157,-1,157,153,152,-1,153,157,158,-1,158,154,153,-1,154,158,159,-1,159,155,154,-1,95,99,160,-1,160,156,95,-1,156,160,161,-1,161,157,156,-1,157,161,162,-1,162,158,157,-1,158,162,163,-1,163,159,158,-1,99,103,164,-1,164,160,99,-1,160,164,165,-1,165,161,160,-1,161,165,166,-1,166,162,161,-1,162,166,167,-1,167,163,162,-1,103,107,168,-1,168,164,103,-1,164,168,169,-1,169,165,164,-1,165,169,170,-1,170,166,165,-1,166,170,171,-1,171,167,166,-1,107,111,172,-1,172,168,107,-1,168,172,173,-1,173,169,168,-1,169,173,174,-1,174,170,169,-1,170,174,175,-1,175,171,170,-1,111,115,176,-1,176,172,111,-1,172,176,177,-1,177,173,172,-1,173,177,178,-1,178,174,173,-1,174,178,179,-1,179,175,174,-1,115,119,180,-1,180,176,115,-1,176,180,181,-1,181,177,176,-1,177,181,182,-1,182,178,177,-1,178,182,183,-1,183,179,178,-1,119,123,184,-1,184,180,119,-1,180,184,185,-1,185,181,180,-1,181,185,186,-1,186,182,181,-1,182,186,187,-1,187,183,182,-1,123,127,188,-1,188,184,123,-1,184,188,189,-1,189,185,184,-1,185,189,190,-1,190,186,185,-1,186,190,191,-1,191,187,186,-1,127,131,192,-1,192,188,127,-1,188,192,193,-1,193,189,188,-1,189,193,194,-1,194,190,189,-1,190,194,195,-1,195,191,190,-1,131,135,196,-1,196,192,131,-1,192,196,197,-1,197,193,192,-1,193,197,198,-1,198,194,193,-1,194,198,199,-1,199,195,194,-1,135,139,200,-1,200,196,135,-1,196,200,201,-1,201,197,196,-1,197,201,202,-1,202,198,197,-1,198,202,203,-1,203,199,198,-1,139,143,204,-1,204,200,139,-1,200,204,205,-1,205,201,200,-1,201,205,206,-1,206,202,201,-1,202,206,207,-1,207,203,202,-1,143,83,144,-1,144,204,143,-1,204,144,145,-1,145,205,204,-1,205,145,146,-1,146,206,205,-1,206,146,147,-1,147,207,206,-1,147,151,212,-1,212,208,147,-1,208,212,213,-1,213,209,208,-1,209,213,214,-1,214,210,209,-1,210,214,211,-1,211,211,210,-1,151,155,215,-1,215,212,151,-1,212,215,216,-1,216,213,212,-1,213,216,217,-1,217,214,213,-1,214,217,211,-1,211,211,214,-1,155,159,218,-1,218,215,155,-1,215,218,219,-1,219,216,215,-1,216,219,220,-1,220,217,216,-1,217,220,211,-1,211,211,217,-1,159,163,221,-1,221,218,159,-1,218,221,222,-1,222,219,218,-1,219,222,223,-1,223,220,219,-1,220,223,211,-1,211,211,220,-1,163,167,224,-1,224,221,163,-1,221,224,225,-1,225,222,221,-1});
  }
}
protected class MFInt323 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {222,225,226,-1,226,223,222,-1,223,226,211,-1,211,211,223,-1,167,171,227,-1,227,224,167,-1,224,227,228,-1,228,225,224,-1,225,228,229,-1,229,226,225,-1,226,229,211,-1,211,211,226,-1,171,175,230,-1,230,227,171,-1,227,230,231,-1,231,228,227,-1,228,231,232,-1,232,229,228,-1,229,232,211,-1,211,211,229,-1,175,179,233,-1,233,230,175,-1,230,233,234,-1,234,231,230,-1,231,234,235,-1,235,232,231,-1,232,235,211,-1,211,211,232,-1,179,183,236,-1,236,233,179,-1,233,236,237,-1,237,234,233,-1,234,237,238,-1,238,235,234,-1,235,238,211,-1,211,211,235,-1,183,187,239,-1,239,236,183,-1,236,239,240,-1,240,237,236,-1,237,240,241,-1,241,238,237,-1,238,241,211,-1,211,211,238,-1,187,191,242,-1,242,239,187,-1,239,242,243,-1,243,240,239,-1,240,243,244,-1,244,241,240,-1,241,244,211,-1,211,211,241,-1,191,195,245,-1,245,242,191,-1,242,245,246,-1,246,243,242,-1,243,246,247,-1,247,244,243,-1,244,247,211,-1,211,211,244,-1,195,199,248,-1,248,245,195,-1,245,248,249,-1,249,246,245,-1,246,249,250,-1,250,247,246,-1,247,250,211,-1,211,211,247,-1,199,203,251,-1,251,248,199,-1,248,251,252,-1,252,249,248,-1,249,252,253,-1,253,250,249,-1,250,253,211,-1,211,211,250,-1,203,207,254,-1,254,251,203,-1,251,254,255,-1,255,252,251,-1,252,255,256,-1,256,253,252,-1,253,256,211,-1,211,211,253,-1,207,147,208,-1,208,254,207,-1,254,208,209,-1,209,255,254,-1,255,209,210,-1,210,256,255,-1,256,210,211,-1,211,211,256,-1});
  }
}
protected class MFVec3f4 {
  protected MFVec3fObject getArray() {
    return new MFVec3fObject(new float[] {4.548f,7.797f,0f,4.485f,8.037f,0f,4.558f,8.116f,0f,4.708f,8.037f,0f,4.873f,7.797f,0f,4.196f,7.797f,1.785f,4.137f,8.037f,1.76f,4.205f,8.116f,1.789f,4.343f,8.037f,1.848f,4.495f,7.797f,1.913f,3.229f,7.797f,3.229f,3.184f,8.037f,3.184f,3.236f,8.116f,3.236f,3.343f,8.037f,3.343f,3.46f,7.797f,3.46f,1.785f,7.797f,4.196f,1.76f,8.037f,4.137f,1.789f,8.116f,4.205f,1.848f,8.037f,4.343f,1.913f,7.797f,4.495f,0f,7.797f,4.548f,0f,8.037f,4.485f,0f,8.116f,4.558f,0f,8.037f,4.708f,0f,7.797f,4.873f,-1.908f,7.797f,4.196f,-1.812f,8.037f,4.137f,-1.805f,8.116f,4.205f,-1.85f,8.037f,4.343f,-1.913f,7.797f,4.495f,-3.339f,7.797f,3.229f,-3.23f,8.037f,3.184f,-3.25f,8.116f,3.236f,-3.344f,8.037f,3.343f,-3.46f,7.797f,3.46f,-4.237f,7.797f,1.785f,-4.154f,8.037f,1.76f,-4.21f,8.116f,1.789f,-4.344f,8.037f,1.848f,-4.495f,7.797f,1.913f,-4.548f,7.797f,0f,-4.485f,8.037f,0f,-4.558f,8.116f,0f,-4.708f,8.037f,0f,-4.873f,7.797f,0f,-4.196f,7.797f,-1.785f,-4.137f,8.037f,-1.76f,-4.205f,8.116f,-1.789f,-4.343f,8.037f,-1.848f,-4.495f,7.797f,-1.913f,-3.229f,7.797f,-3.229f,-3.184f,8.037f,-3.184f,-3.236f,8.116f,-3.236f,-3.343f,8.037f,-3.343f,-3.46f,7.797f,-3.46f,-1.785f,7.797f,-4.196f,-1.76f,8.037f,-4.137f,-1.789f,8.116f,-4.205f,-1.848f,8.037f,-4.343f,-1.913f,7.797f,-4.495f,0f,7.797f,-4.548f,0f,8.037f,-4.485f,0f,8.116f,-4.558f,0f,8.037f,-4.708f,0f,7.797f,-4.873f,1.785f,7.797f,-4.196f,1.76f,8.037f,-4.137f,1.789f,8.116f,-4.205f,1.848f,8.037f,-4.343f,1.913f,7.797f,-4.495f,3.229f,7.797f,-3.229f,3.184f,8.037f,-3.184f,3.236f,8.116f,-3.236f,3.343f,8.037f,-3.343f,3.46f,7.797f,-3.46f,4.196f,7.797f,-1.785f,4.137f,8.037f,-1.76f,4.205f,8.116f,-1.789f,4.343f,8.037f,-1.848f,4.495f,7.797f,-1.913f,5.469f,6.521f,0f,5.99f,5.269f,0f,6.358f,4.062f,0f,6.497f,2.924f,0f,5.045f,6.521f,2.147f,5.525f,5.269f,2.351f,5.865f,4.062f,2.495f,5.994f,2.924f,2.55f,3.883f,6.521f,3.883f,4.253f,5.269f,4.253f,4.514f,4.062f,4.514f,4.613f,2.924f,4.613f,2.147f,6.521f,5.045f,2.351f,5.269f,5.525f,2.495f,4.062f,5.865f,2.55f,2.924f,5.994f,0f,6.521f,5.469f,0f,5.269f,5.99f,0f,4.062f,6.358f,0f,2.924f,6.497f,-2.147f,6.521f,5.045f,-2.351f,5.269f,5.525f,-2.495f,4.062f,5.865f,-2.55f,2.924f,5.994f,-3.883f,6.521f,3.883f,-4.253f,5.269f,4.253f,-4.514f,4.062f,4.514f,-4.613f,2.924f,4.613f,-5.045f,6.521f,2.147f,-5.525f,5.269f,2.351f,-5.865f,4.062f,2.495f,-5.994f,2.924f,2.55f,-5.469f,6.521f,0f,-5.99f,5.269f,0f,-6.358f,4.062f,0f,-6.497f,2.924f,0f,-5.045f,6.521f,-2.147f,-5.525f,5.269f,-2.351f,-5.865f,4.062f,-2.495f,-5.994f,2.924f,-2.55f,-3.883f,6.521f,-3.883f,-4.253f,5.269f,-4.253f,-4.514f,4.062f,-4.514f,-4.613f,2.924f,-4.613f,-2.147f,6.521f,-5.045f,-2.351f,5.269f,-5.525f,-2.495f,4.062f,-5.865f,-2.55f,2.924f,-5.994f,0f,6.521f,-5.469f,0f,5.269f,-5.99f,0f,4.062f,-6.358f,0f,2.924f,-6.497f,2.147f,6.521f,-5.045f,2.351f,5.269f,-5.525f,2.495f,4.062f,-5.865f,2.55f,2.924f,-5.994f,3.883f,6.521f,-3.883f,4.253f,5.269f,-4.253f,4.514f,4.062f,-4.514f,4.613f,2.924f,-4.613f,5.045f,6.521f,-2.147f,5.525f,5.269f,-2.351f,5.865f,4.062f,-2.495f,5.994f,2.924f,-2.55f,6.243f,1.961f,0f,5.685f,1.249f,0f,5.127f,0.7652f,0f,4.873f,0.4873f,0f,5.76f,1.961f,2.451f,5.244f,1.249f,2.231f,4.729f,0.7652f,2.012f,4.495f,0.4873f,1.913f,4.433f,1.961f,4.433f,4.036f,1.249f,4.036f,3.64f,0.7652f,3.64f,3.46f,0.4873f,3.46f,2.451f,1.961f,5.76f,2.231f,1.249f,5.244f,2.012f,0.7652f,4.729f,1.913f,0.4873f,4.495f,0f,1.961f,6.243f,0f,1.249f,5.685f,0f,0.7652f,5.127f,0f,0.4873f,4.873f,-2.451f,1.961f,5.76f,-2.231f,1.249f,5.244f,-2.012f,0.7652f,4.729f,-1.913f,0.4873f,4.495f,-4.433f,1.961f,4.433f,-4.036f,1.249f,4.036f,-3.64f,0.7652f,3.64f,-3.46f,0.4873f,3.46f,-5.76f,1.961f,2.451f,-5.244f,1.249f,2.231f,-4.729f,0.7652f,2.012f,-4.495f,0.4873f,1.913f,-6.243f,1.961f,0f,-5.685f,1.249f,0f,-5.127f,0.7652f,0f,-4.873f,0.4873f,0f,-5.76f,1.961f,-2.451f,-5.244f,1.249f,-2.231f,-4.729f,0.7652f,-2.012f,-4.495f,0.4873f,-1.913f,-4.433f,1.961f,-4.433f,-4.036f,1.249f,-4.036f,-3.64f,0.7652f,-3.64f,-3.46f,0.4873f,-3.46f,-2.451f,1.961f,-5.76f,-2.231f,1.249f,-5.244f,-2.012f,0.7652f,-4.729f,-1.913f,0.4873f,-4.495f,0f,1.961f,-6.243f,0f,1.249f,-5.685f,0f,0.7652f,-5.127f,0f,0.4873f,-4.873f,2.451f,1.961f,-5.76f,2.231f,1.249f,-5.244f,2.012f,0.7652f,-4.729f,1.913f,0.4873f,-4.495f,4.433f,1.961f,-4.433f,4.036f,1.249f,-4.036f,3.64f,0.7652f,-3.64f,3.46f,0.4873f,-3.46f,5.76f,1.961f,-2.451f,5.244f,1.249f,-2.231f,4.729f,0.7652f,-2.012f,4.495f,0.4873f,-1.913f,4.763f,0.3084f,0f,4.172f,0.1523f,0f,2.714f,0.04188f,0f,0f,0f,0f,4.393f,0.3084f,1.869f,3.849f,0.1523f,1.638f,2.504f,0.04188f,1.065f,3.381f,0.3084f,3.381f,2.962f,0.1523f,2.962f,1.927f,0.04188f,1.927f,1.869f,0.3084f,4.393f,1.638f,0.1523f,3.849f,1.065f,0.04188f,2.504f,0f,0.3084f,4.763f,0f,0.1523f,4.172f,0f,0.04188f,2.714f,-1.869f,0.3084f,4.393f,-1.638f,0.1523f,3.849f,-1.065f,0.04188f,2.504f,-3.381f,0.3084f,3.381f,-2.962f,0.1523f,2.962f,-1.927f,0.04188f,1.927f,-4.393f,0.3084f,1.869f,-3.849f,0.1523f,1.638f,-2.504f,0.04188f,1.065f,-4.763f,0.3084f,0f,-4.172f,0.1523f,0f,-2.714f,0.04188f,0f,-4.393f,0.3084f,-1.869f,-3.849f,0.1523f,-1.638f,-2.504f,0.04188f,-1.065f,-3.381f,0.3084f,-3.381f,-2.962f,0.1523f,-2.962f,-1.927f,0.04188f,-1.927f,-1.869f,0.3084f,-4.393f,-1.638f,0.1523f,-3.849f,-1.065f,0.04188f,-2.504f,0f,0.3084f,-4.763f,0f,0.1523f,-4.172f,0f,0.04188f,-2.714f,1.869f,0.3084f,-4.393f,1.638f,0.1523f,-3.849f,1.065f,0.04188f,-2.504f,3.381f,0.3084f,-3.381f,2.962f,0.1523f,-2.962f,1.927f,0.04188f,-1.927f,4.393f,0.3084f,-1.869f,3.849f,0.1523f,-1.638f,2.504f,0.04188f,-1.065f});
  }
}
protected class MFInt325 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,15,20,21,-1,21,16,15,-1,16,21,22,-1,22,17,16,-1,17,22,23,-1,23,18,17,-1,18,23,24,-1,24,19,18,-1,20,25,26,-1,26,21,20,-1,21,26,27,-1,27,22,21,-1,22,27,28,-1,28,23,22,-1,23,28,29,-1,29,24,23,-1,25,30,31,-1,31,26,25,-1,26,31,32,-1,32,27,26,-1,27,32,33,-1,33,28,27,-1,28,33,34,-1,34,29,28,-1,30,35,36,-1,36,31,30,-1,31,36,37,-1,37,32,31,-1,32,37,38,-1,38,33,32,-1,33,38,39,-1,39,34,33,-1,35,0,1,-1,1,36,35,-1,36,1,2,-1,2,37,36,-1,37,2,3,-1,3,38,37,-1,38,3,4,-1,4,39,38,-1,4,9,44,-1,44,40,4,-1,40,44,45,-1,45,41,40,-1,41,45,46,-1,46,42,41,-1,42,46,47,-1,47,43,42,-1,9,14,48,-1,48,44,9,-1,44,48,49,-1,49,45,44,-1,45,49,50,-1,50,46,45,-1,46,50,51,-1,51,47,46,-1,14,19,52,-1,52,48,14,-1,48,52,53,-1,53,49,48,-1,49,53,54,-1,54,50,49,-1,50,54,55,-1,55,51,50,-1,19,24,56,-1,56,52,19,-1,52,56,57,-1,57,53,52,-1,53,57,58,-1,58,54,53,-1,54,58,59,-1,59,55,54,-1,24,29,60,-1,60,56,24,-1,56,60,61,-1,61,57,56,-1,57,61,62,-1,62,58,57,-1,58,62,63,-1,63,59,58,-1,29,34,64,-1,64,60,29,-1,60,64,65,-1,65,61,60,-1,61,65,66,-1,66,62,61,-1,62,66,67,-1,67,63,62,-1,34,39,68,-1,68,64,34,-1,64,68,69,-1,69,65,64,-1,65,69,70,-1,70,66,65,-1,66,70,71,-1,71,67,66,-1,39,4,40,-1,40,68,39,-1,68,40,41,-1,41,69,68,-1,69,41,42,-1,42,70,69,-1,70,42,43,-1,43,71,70,-1});
  }
}
protected class MFVec3f6 {
  protected MFVec3fObject getArray() {
    return new MFVec3fObject(new float[] {5.523f,4.629f,0f,7.081f,4.987f,0f,7.756f,5.848f,0f,8.127f,6.891f,0f,8.771f,7.797f,0f,5.523f,4.211f,1.206f,7.2f,4.677f,1.089f,7.908f,5.667f,0.8314f,8.312f,6.825f,0.5739f,9.076f,7.797f,0.4568f,5.523f,3.289f,1.608f,7.462f,3.994f,1.452f,8.243f,5.269f,1.109f,8.72f,6.681f,0.7652f,9.746f,7.797f,0.6091f,5.523f,2.368f,1.206f,7.723f,3.31f,1.089f,8.578f,4.871f,0.8314f,9.129f,6.537f,0.5739f,10.42f,7.797f,0.4568f,5.523f,1.949f,0f,7.842f,3f,0f,8.731f,4.69f,0f,9.314f,6.472f,0f,10.72f,7.797f,0f,5.523f,2.368f,-1.206f,7.723f,3.31f,-1.089f,8.578f,4.871f,-0.8314f,9.129f,6.537f,-0.5739f,10.42f,7.797f,-0.4568f,5.523f,3.289f,-1.608f,7.462f,3.994f,-1.452f,8.243f,5.269f,-1.109f,8.72f,6.681f,-0.7652f,9.746f,7.797f,-0.6091f,5.523f,4.211f,-1.206f,7.2f,4.677f,-1.089f,7.908f,5.667f,-0.8314f,8.312f,6.825f,-0.5739f,9.076f,7.797f,-0.4568f,9.005f,7.934f,0f,9.177f,7.979f,0f,9.228f,7.934f,0f,9.096f,7.797f,0f,9.331f,7.94f,0.4283f,9.483f,7.99f,0.3655f,9.488f,7.943f,0.3027f,9.299f,7.797f,0.2741f,10.05f,7.955f,0.571f,10.16f,8.014f,0.4873f,10.06f,7.964f,0.4035f,9.746f,7.797f,0.3655f,10.77f,7.97f,0.4283f,10.83f,8.037f,0.3655f,10.63f,7.984f,0.3027f,10.19f,7.797f,0.2741f,11.09f,7.977f,0f,11.14f,8.048f,0f,10.89f,7.994f,0f,10.4f,7.797f,0f,10.77f,7.97f,-0.4283f,10.83f,8.037f,-0.3655f,10.63f,7.984f,-0.3027f,10.19f,7.797f,-0.2741f,10.05f,7.955f,-0.571f,10.16f,8.014f,-0.4873f,10.06f,7.964f,-0.4035f,9.746f,7.797f,-0.3655f,9.331f,7.94f,-0.4283f,9.483f,7.99f,-0.3655f,9.488f,7.943f,-0.3027f,9.299f,7.797f,-0.2741f});
  }
}
protected class MFInt327 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,15,20,21,-1,21,16,15,-1,16,21,22,-1,22,17,16,-1,17,22,23,-1,23,18,17,-1,18,23,24,-1,24,19,18,-1,20,25,26,-1,26,21,20,-1,21,26,27,-1,27,22,21,-1,22,27,28,-1,28,23,22,-1,23,28,29,-1,29,24,23,-1,25,30,31,-1,31,26,25,-1,26,31,32,-1,32,27,26,-1,27,32,33,-1,33,28,27,-1,28,33,34,-1,34,29,28,-1,30,35,36,-1,36,31,30,-1,31,36,37,-1,37,32,31,-1,32,37,38,-1,38,33,32,-1,33,38,39,-1,39,34,33,-1,35,0,1,-1,1,36,35,-1,36,1,2,-1,2,37,36,-1,37,2,3,-1,3,38,37,-1,38,3,4,-1,4,39,38,-1,4,9,44,-1,44,40,4,-1,40,44,45,-1,45,41,40,-1,41,45,46,-1,46,42,41,-1,42,46,47,-1,47,43,42,-1,9,14,48,-1,48,44,9,-1,44,48,49,-1,49,45,44,-1,45,49,50,-1,50,46,45,-1,46,50,51,-1,51,47,46,-1,14,19,52,-1,52,48,14,-1,48,52,53,-1,53,49,48,-1,49,53,54,-1,54,50,49,-1,50,54,55,-1,55,51,50,-1,19,24,56,-1,56,52,19,-1,52,56,57,-1,57,53,52,-1,53,57,58,-1,58,54,53,-1,54,58,59,-1,59,55,54,-1,24,29,60,-1,60,56,24,-1,56,60,61,-1,61,57,56,-1,57,61,62,-1,62,58,57,-1,58,62,63,-1,63,59,58,-1,29,34,64,-1,64,60,29,-1,60,64,65,-1,65,61,60,-1,61,65,66,-1,66,62,61,-1,62,66,67,-1,67,63,62,-1,34,39,68,-1,68,64,34,-1,64,68,69,-1,69,65,64,-1,65,69,70,-1,70,66,65,-1,66,70,71,-1,71,67,66,-1,39,4,40,-1,40,68,39,-1,68,40,41,-1,41,69,68,-1,69,41,42,-1,42,70,69,-1,70,42,43,-1,43,71,70,-1});
  }
}
protected class MFVec3f8 {
  protected MFVec3fObject getArray() {
    return new MFVec3fObject(new float[] {-5.198f,6.578f,0f,-6.715f,6.567f,0f,-7.837f,6.487f,0f,-8.533f,6.27f,0f,-8.771f,5.848f,0f,-5.147f,6.693f,0.5482f,-6.761f,6.679f,0.5482f,-7.945f,6.587f,0.5482f,-8.675f,6.336f,0.5482f,-8.924f,5.848f,0.5482f,-5.035f,6.944f,0.7309f,-6.86f,6.927f,0.7309f,-8.182f,6.807f,0.7309f,-8.987f,6.481f,0.7309f,-9.259f,5.848f,0.7309f,-4.924f,7.195f,0.5482f,-6.96f,7.174f,0.5482f,-8.42f,7.027f,0.5482f,-9.299f,6.627f,0.5482f,-9.594f,5.848f,0.5482f,-4.873f,7.309f,0f,-7.005f,7.287f,0f,-8.528f,7.127f,0f,-9.441f,6.693f,0f,-9.746f,5.848f,0f,-4.924f,7.195f,-0.5482f,-6.96f,7.174f,-0.5482f,-8.42f,7.027f,-0.5482f,-9.299f,6.627f,-0.5482f,-9.594f,5.848f,-0.5482f,-5.035f,6.944f,-0.7309f,-6.86f,6.927f,-0.7309f,-8.182f,6.807f,-0.7309f,-8.987f,6.481f,-0.7309f,-9.259f,5.848f,-0.7309f,-5.147f,6.693f,-0.5482f,-6.761f,6.679f,-0.5482f,-7.945f,6.587f,-0.5482f,-8.675f,6.336f,-0.5482f,-8.924f,5.848f,-0.5482f,-8.644f,5.185f,0f,-8.243f,4.386f,0f,-7.538f,3.586f,0f,-6.497f,2.924f,0f,-8.783f,5.121f,0.5482f,-8.342f,4.288f,0.5482f,-7.572f,3.466f,0.5482f,-6.446f,2.771f,0.5482f,-9.087f,4.98f,0.7309f,-8.558f,4.073f,0.7309f,-7.648f,3.201f,0.7309f,-6.335f,2.436f,0.7309f,-9.392f,4.84f,0.5482f,-8.774f,3.859f,0.5482f,-7.724f,2.936f,0.5482f,-6.223f,2.101f,0.5482f,-9.53f,4.776f,0f,-8.873f,3.761f,0f,-7.759f,2.815f,0f,-6.172f,1.949f,0f,-9.392f,4.84f,-0.5482f,-8.774f,3.859f,-0.5482f,-7.724f,2.936f,-0.5482f,-6.223f,2.101f,-0.5482f,-9.087f,4.98f,-0.7309f,-8.558f,4.073f,-0.7309f,-7.648f,3.201f,-0.7309f,-6.335f,2.436f,-0.7309f,-8.783f,5.121f,-0.5482f,-8.342f,4.288f,-0.5482f,-7.572f,3.466f,-0.5482f,-6.446f,2.771f,-0.5482f});
  }
}
protected class MFInt329 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {0,0,5,-1,5,1,0,-1,1,5,6,-1,6,2,1,-1,2,6,7,-1,7,3,2,-1,3,7,8,-1,8,4,3,-1,0,0,9,-1,9,5,0,-1,5,9,10,-1,10,6,5,-1,6,10,11,-1,11,7,6,-1,7,11,12,-1,12,8,7,-1,0,0,13,-1,13,9,0,-1,9,13,14,-1,14,10,9,-1,10,14,15,-1,15,11,10,-1,11,15,16,-1,16,12,11,-1,0,0,17,-1,17,13,0,-1,13,17,18,-1,18,14,13,-1,14,18,19,-1,19,15,14,-1,15,19,20,-1,20,16,15,-1,0,0,21,-1,21,17,0,-1,17,21,22,-1,22,18,17,-1,18,22,23,-1,23,19,18,-1,19,23,24,-1,24,20,19,-1,0,0,25,-1,25,21,0,-1,21,25,26,-1,26,22,21,-1,22,26,27,-1,27,23,22,-1,23,27,28,-1,28,24,23,-1,0,0,29,-1,29,25,0,-1,25,29,30,-1,30,26,25,-1,26,30,31,-1,31,27,26,-1,27,31,32,-1,32,28,27,-1,0,0,33,-1,33,29,0,-1,29,33,34,-1,34,30,29,-1,30,34,35,-1,35,31,30,-1,31,35,36,-1,36,32,31,-1,0,0,37,-1,37,33,0,-1,33,37,38,-1,38,34,33,-1,34,38,39,-1,39,35,34,-1,35,39,40,-1,40,36,35,-1,0,0,41,-1,41,37,0,-1,37,41,42,-1,42,38,37,-1,38,42,43,-1,43,39,38,-1,39,43,44,-1,44,40,39,-1,0,0,45,-1,45,41,0,-1,41,45,46,-1,46,42,41,-1,42,46,47,-1,47,43,42,-1,43,47,48,-1,48,44,43,-1,0,0,49,-1,49,45,0,-1,45,49,50,-1,50,46,45,-1,46,50,51,-1,51,47,46,-1,47,51,52,-1,52,48,47,-1,0,0,53,-1,53,49,0,-1,49,53,54,-1,54,50,49,-1,50,54,55,-1,55,51,50,-1,51,55,56,-1,56,52,51,-1,0,0,57,-1,57,53,0,-1,53,57,58,-1,58,54,53,-1,54,58,59,-1,59,55,54,-1,55,59,60,-1,60,56,55,-1,0,0,61,-1,61,57,0,-1,57,61,62,-1,62,58,57,-1,58,62,63,-1,63,59,58,-1,59,63,64,-1,64,60,59,-1,0,0,1,-1,1,61,0,-1,61,1,2,-1,2,62,61,-1,62,2,3,-1,3,63,62,-1,63,3,4,-1,4,64,63,-1,4,8,69,-1,69,65,4,-1,65,69,70,-1,70,66,65,-1,66,70,71,-1,71,67,66,-1,67,71,72,-1,72,68,67,-1,8,12,73,-1,73,69,8,-1,69,73,74,-1,74,70,69,-1,70,74,75,-1,75,71,70,-1,71,75,76,-1,76,72,71,-1,12,16,77,-1,77,73,12,-1,73,77,78,-1,78,74,73,-1,74,78,79,-1,79,75,74,-1,75,79,80,-1,80,76,75,-1,16,20,81,-1,81,77,16,-1,77,81,82,-1,82,78,77,-1,78,82,83,-1,83,79,78,-1,79,83,84,-1,84,80,79,-1,20,24,85,-1,85,81,20,-1,81,85,86,-1,86,82,81,-1,82,86,87,-1,87,83,82,-1,83,87,88,-1,88,84,83,-1,24,28,89,-1,89,85,24,-1,85,89,90,-1,90,86,85,-1,86,90,91,-1,91,87,86,-1,87,91,92,-1,92,88,87,-1,28,32,93,-1,93,89,28,-1,89,93,94,-1,94,90,89,-1,90,94,95,-1,95,91,90,-1,91,95,96,-1,96,92,91,-1,32,36,97,-1,97,93,32,-1,93,97,98,-1,98,94,93,-1,94,98,99,-1,99,95,94,-1,95,99,100,-1,100,96,95,-1,36,40,101,-1,101,97,36,-1,97,101,102,-1,102,98,97,-1,98,102,103,-1,103,99,98,-1,99,103,104,-1,104,100,99,-1,40,44,105,-1,105,101,40,-1,101,105,106,-1,106,102,101,-1,102,106,107,-1,107,103,102,-1,103,107,108,-1,108,104,103,-1,44,48,109,-1,109,105,44,-1});
  }
}
protected class MFInt3210 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {105,109,110,-1,110,106,105,-1,106,110,111,-1,111,107,106,-1,107,111,112,-1,112,108,107,-1,48,52,113,-1,113,109,48,-1,109,113,114,-1,114,110,109,-1,110,114,115,-1,115,111,110,-1,111,115,116,-1,116,112,111,-1,52,56,117,-1,117,113,52,-1,113,117,118,-1,118,114,113,-1,114,118,119,-1,119,115,114,-1,115,119,120,-1,120,116,115,-1,56,60,121,-1,121,117,56,-1,117,121,122,-1,122,118,117,-1,118,122,123,-1,123,119,118,-1,119,123,124,-1,124,120,119,-1,60,64,125,-1,125,121,60,-1,121,125,126,-1,126,122,121,-1,122,126,127,-1,127,123,122,-1,123,127,128,-1,128,124,123,-1,64,4,65,-1,65,125,64,-1,125,65,66,-1,66,126,125,-1,126,66,67,-1,67,127,126,-1,127,67,68,-1,68,128,127,-1});
  }
}
protected class MFVec3f11 {
  protected MFVec3fObject getArray() {
    return new MFVec3fObject(new float[] {0f,10.23f,0f,1.107f,10.07f,0f,1.056f,9.685f,0f,0.6396f,9.205f,0f,0.6497f,8.771f,0f,1.021f,10.07f,0.4355f,0.9743f,9.685f,0.4154f,0.5901f,9.205f,0.2514f,0.5994f,8.771f,0.255f,0.7867f,10.07f,0.7867f,0.7505f,9.685f,0.7505f,0.4544f,9.205f,0.4544f,0.4613f,8.771f,0.4613f,0.4355f,10.07f,1.021f,0.4154f,9.685f,0.9743f,0.2514f,9.205f,0.5901f,0.255f,8.771f,0.5994f,0f,10.07f,1.107f,0f,9.685f,1.056f,0f,9.205f,0.6396f,0f,8.771f,0.6497f,-0.4355f,10.07f,1.021f,-0.4154f,9.685f,0.9743f,-0.2514f,9.205f,0.5901f,-0.255f,8.771f,0.5994f,-0.7867f,10.07f,0.7867f,-0.7505f,9.685f,0.7505f,-0.4544f,9.205f,0.4544f,-0.4613f,8.771f,0.4613f,-1.021f,10.07f,0.4355f,-0.9743f,9.685f,0.4154f,-0.5901f,9.205f,0.2514f,-0.5994f,8.771f,0.255f,-1.107f,10.07f,0f,-1.056f,9.685f,0f,-0.6396f,9.205f,0f,-0.6497f,8.771f,0f,-1.021f,10.07f,-0.4355f,-0.9743f,9.685f,-0.4154f,-0.5901f,9.205f,-0.2514f,-0.5994f,8.771f,-0.255f,-0.7867f,10.07f,-0.7867f,-0.7505f,9.685f,-0.7505f,-0.4544f,9.205f,-0.4544f,-0.4613f,8.771f,-0.4613f,-0.4355f,10.07f,-1.021f,-0.4154f,9.685f,-0.9743f,-0.2514f,9.205f,-0.5901f,-0.255f,8.771f,-0.5994f,0f,10.07f,-1.107f,0f,9.685f,-1.056f,0f,9.205f,-0.6396f,0f,8.771f,-0.6497f,0.4355f,10.07f,-1.021f,0.4154f,9.685f,-0.9743f,0.2514f,9.205f,-0.5901f,0.255f,8.771f,-0.5994f,0.7867f,10.07f,-0.7867f,0.7505f,9.685f,-0.7505f,0.4544f,9.205f,-0.4544f,0.4613f,8.771f,-0.4613f,1.021f,10.07f,-0.4355f,0.9743f,9.685f,-0.4154f,0.5901f,9.205f,-0.2514f,0.5994f,8.771f,-0.255f,1.482f,8.482f,0f,2.68f,8.284f,0f,3.756f,8.086f,0f,4.223f,7.797f,0f,1.367f,8.482f,0.5818f,2.472f,8.284f,1.052f,3.465f,8.086f,1.474f,3.896f,7.797f,1.658f,1.052f,8.482f,1.052f,1.903f,8.284f,1.903f,2.667f,8.086f,2.667f,2.998f,7.797f,2.998f,0.5818f,8.482f,1.367f,1.052f,8.284f,2.472f,1.474f,8.086f,3.465f,1.658f,7.797f,3.896f,0f,8.482f,1.482f,0f,8.284f,2.68f,0f,8.086f,3.756f,0f,7.797f,4.223f,-0.5818f,8.482f,1.367f,-1.052f,8.284f,2.472f,-1.474f,8.086f,3.465f,-1.658f,7.797f,3.896f,-1.052f,8.482f,1.052f,-1.903f,8.284f,1.903f,-2.667f,8.086f,2.667f,-2.998f,7.797f,2.998f,-1.367f,8.482f,0.5818f,-2.472f,8.284f,1.052f,-3.465f,8.086f,1.474f,-3.896f,7.797f,1.658f,-1.482f,8.482f,0f,-2.68f,8.284f,0f,-3.756f,8.086f,0f,-4.223f,7.797f,0f,-1.367f,8.482f,-0.5818f,-2.472f,8.284f,-1.052f,-3.465f,8.086f,-1.474f,-3.896f,7.797f,-1.658f,-1.052f,8.482f,-1.052f,-1.903f,8.284f,-1.903f,-2.667f,8.086f,-2.667f,-2.998f,7.797f,-2.998f,-0.5818f,8.482f,-1.367f,-1.052f,8.284f,-2.472f,-1.474f,8.086f,-3.465f,-1.658f,7.797f,-3.896f,0f,8.482f,-1.482f,0f,8.284f,-2.68f,0f,8.086f,-3.756f,0f,7.797f,-4.223f,0.5818f,8.482f,-1.367f,1.052f,8.284f,-2.472f,1.474f,8.086f,-3.465f,1.658f,7.797f,-3.896f,1.052f,8.482f,-1.052f,1.903f,8.284f,-1.903f,2.667f,8.086f,-2.667f,2.998f,7.797f,-2.998f,1.367f,8.482f,-0.5818f,2.472f,8.284f,-1.052f,3.465f,8.086f,-1.474f,3.896f,7.797f,-1.658f});
  }
}
}
