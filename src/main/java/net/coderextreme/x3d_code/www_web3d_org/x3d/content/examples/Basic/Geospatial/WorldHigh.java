package net.coderextreme.x3d_code.www_web3d_org.x3d.content.examples.Basic.Geospatial;
import org.web3d.x3d.jsail.*;
import org.web3d.x3d.jsail.CADGeometry.*;
import org.web3d.x3d.jsail.Core.*;
import org.web3d.x3d.jsail.CubeMapTexturing.*;
import org.web3d.x3d.jsail.DIS.*;
import org.web3d.x3d.jsail.EnvironmentalEffects.*;
import org.web3d.x3d.jsail.EnvironmentalSensor.*;
import org.web3d.x3d.jsail.EventUtilities.*;
import org.web3d.x3d.jsail.Followers.*;
import org.web3d.x3d.jsail.Geometry2D.*;
import org.web3d.x3d.jsail.Geometry3D.*;
import org.web3d.x3d.jsail.Geospatial.*;
import org.web3d.x3d.jsail.Grouping.*;
import org.web3d.x3d.jsail.HAnim.*;
import org.web3d.x3d.jsail.Interpolation.*;
import org.web3d.x3d.jsail.KeyDeviceSensor.*;
import org.web3d.x3d.jsail.Layering.*;
import org.web3d.x3d.jsail.Layout.*;
import org.web3d.x3d.jsail.Lighting.*;
import org.web3d.x3d.jsail.NURBS.*;
import org.web3d.x3d.jsail.Navigation.*;
import org.web3d.x3d.jsail.Networking.*;
import org.web3d.x3d.jsail.ParticleSystems.*;
import org.web3d.x3d.jsail.Picking.*;
import org.web3d.x3d.jsail.PointingDeviceSensor.*;
import org.web3d.x3d.jsail.Rendering.*;
import org.web3d.x3d.jsail.RigidBodyPhysics.*;
import org.web3d.x3d.jsail.Scripting.*;
import org.web3d.x3d.jsail.Shaders.*;
import org.web3d.x3d.jsail.Shape.*;
import org.web3d.x3d.jsail.Sound.*;
import org.web3d.x3d.jsail.Text.*;
import org.web3d.x3d.jsail.Texturing3D.*;
import org.web3d.x3d.jsail.Texturing.*;
import org.web3d.x3d.jsail.Time.*;
import org.web3d.x3d.jsail.VolumeRendering.*;
import org.web3d.x3d.jsail.fields.*;
import org.web3d.x3d.sai.*;
import org.web3d.x3d.sai.CADGeometry.*;
import org.web3d.x3d.sai.Core.*;
import org.web3d.x3d.sai.CubeMapTexturing.*;
import org.web3d.x3d.sai.DIS.*;
import org.web3d.x3d.sai.EnvironmentalEffects.*;
import org.web3d.x3d.sai.EnvironmentalSensor.*;
import org.web3d.x3d.sai.EventUtilities.*;
import org.web3d.x3d.sai.Followers.*;
import org.web3d.x3d.sai.Geometry2D.*;
import org.web3d.x3d.sai.Geometry3D.*;
import org.web3d.x3d.sai.Geospatial.*;
import org.web3d.x3d.sai.Grouping.*;
import org.web3d.x3d.sai.HAnim.*;
import org.web3d.x3d.sai.Interpolation.*;
import org.web3d.x3d.sai.KeyDeviceSensor.*;
import org.web3d.x3d.sai.Layering.*;
import org.web3d.x3d.sai.Layout.*;
import org.web3d.x3d.sai.Lighting.*;
import org.web3d.x3d.sai.NURBS.*;
import org.web3d.x3d.sai.Navigation.*;
import org.web3d.x3d.sai.Networking.*;
import org.web3d.x3d.sai.ParticleSystems.*;
import org.web3d.x3d.sai.Picking.*;
import org.web3d.x3d.sai.PointingDeviceSensor.*;
import org.web3d.x3d.sai.Rendering.*;
import org.web3d.x3d.sai.RigidBodyPhysics.*;
import org.web3d.x3d.sai.Scripting.*;
import org.web3d.x3d.sai.Shaders.*;
import org.web3d.x3d.sai.Shape.*;
import org.web3d.x3d.sai.Sound.*;
import org.web3d.x3d.sai.Text.*;
import org.web3d.x3d.sai.Texturing3D.*;
import org.web3d.x3d.sai.Texturing.*;
import org.web3d.x3d.sai.Time.*;
import org.web3d.x3d.sai.VolumeRendering.*;
public class WorldHigh {
  public static void main(String[] args) {
    ConfigurationProperties.setXsltEngine(ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA);
    ConfigurationProperties.setDeleteIntermediateFiles(false);
    new WorldHigh().initialize().toFileJSON("../x3d_code/www_web3d_org/x3d/content/examples/Basic/Geospatial/WorldHigh.new.json");
    }
    public X3DObject initialize() {
      X3DObject X3D0 =  new X3DObject().setProfile("Immersive").setVersion("3.3")
      .setHead(new headObject()
        .addComponent(new componentObject().setName("Geospatial").setLevel(1))
        .addMeta(new metaObject().setName("title").setContent("WorldHigh.x3d"))
        .addMeta(new metaObject().setName("description").setContent("World selector with high vertical exaggeration."))
        .addMeta(new metaObject().setName("creator").setContent("Martin Reddy SRI authored the original scene."))
        .addMeta(new metaObject().setName("translator").setContent("Don Brutzman"))
        .addMeta(new metaObject().setName("translated").setContent("22 April 2003"))
        .addMeta(new metaObject().setName("modified").setContent("20 October 2019"))
        .addMeta(new metaObject().setName("reference").setContent("http://www.geovrml.org/examples"))
        .addMeta(new metaObject().setName("subject").setContent("X3D geospatial example"))
        .addMeta(new metaObject().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/Basic/Geospatial/WorldHigh.x3d"))
        .addMeta(new metaObject().setName("generator").setContent("Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html"))
        .addMeta(new metaObject().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new metaObject().setName("license").setContent("../license.html")))
      .setScene(new SceneObject()
        .addChild(new WorldInfoObject().setTitle("WorldHigh.x3d"))
        .addChild(new GroupObject()
          .addChild(new GeoViewpointObject().setDescription("Initial GeoViewpoint").setOrientation(new float[] {1f,0f,0f,-1.57f}).setPosition(new double[] {35d,-70d,13000000d}))
          .addChild(new BackgroundObject().setGroundColor(new MFColorObject(new MFColor0().getArray())).setSkyAngle(new MFFloatObject(new MFFloat1().getArray())).setSkyColor(new MFColorObject(new MFColor2().getArray())))
          .addChild(new GeoLocationObject().setGeoCoords(new double[] {35d,-70d,10000000d})
            .addChild(new TransformObject().setTranslation(new float[] {-1000000f,0f,-600000f})
              .addChild(new TouchSensorObject().setDEF("Touch1").setDescription("vertical scale times 1"))
              .addChild(new ShapeObject()
                .setAppearance(new AppearanceObject()
                  .setTexture(new ImageTextureObject().setUrl(new MFStringObject(new MFString3().getArray()))))
                .setGeometry(new BoxObject().setDEF("BOX").setSize(new float[] {200000f,200000f,200000f}))))
            .addChild(new TransformObject().setTranslation(new float[] {-1000000f,0f,-300000f})
              .addChild(new TouchSensorObject().setDEF("Touch50").setDescription("vertical scale times 50"))
              .addChild(new ShapeObject()
                .setAppearance(new AppearanceObject()
                  .setTexture(new ImageTextureObject().setUrl(new MFStringObject(new MFString4().getArray()))))
                .setGeometry(new BoxObject().setUSE("BOX"))))
            .addChild(new TransformObject().setTranslation(new float[] {-1000000f,0f,0f})
              .addChild(new TouchSensorObject().setDEF("Touch200").setDescription("vertical scale times 200"))
              .addChild(new ShapeObject()
                .setAppearance(new AppearanceObject()
                  .setTexture(new ImageTextureObject().setUrl(new MFStringObject(new MFString5().getArray()))))
                .setGeometry(new BoxObject().setUSE("BOX"))))
            .addChild(new TransformObject().setTranslation(new float[] {-1000000f,0f,300000f})
              .addChild(new TouchSensorObject().setDEF("TouchShaded").setDescription("simple shading no texture image"))
              .addChild(new ShapeObject()
                .setAppearance(new AppearanceObject()
                  .setTexture(new ImageTextureObject().setUrl(new MFStringObject(new MFString6().getArray()))))
                .setGeometry(new BoxObject().setUSE("BOX"))))
            .addChild(new TransformObject().setTranslation(new float[] {-1000000f,0f,600000f})
              .addChild(new TouchSensorObject().setDEF("TouchTextured").setDescription("apply texture image"))
              .addChild(new ShapeObject()
                .setAppearance(new AppearanceObject()
                  .setTexture(new ImageTextureObject().setUrl(new MFStringObject(new MFString7().getArray()))))
                .setGeometry(new BoxObject().setUSE("BOX")))))
          .addChild(new SphereSensorObject().setDEF("GeoSphere").setDescription("click and drag to rotate"))
          .addChild(new TransformObject().setDEF("GeoXform")
            .addChild(new ShapeObject()
              .setAppearance(new AppearanceObject()
                .setMaterial(new MaterialObject().setDiffuseColor(new float[] {0.75f,0.75f,0.75f}))
                .setTexture(new ImageTextureObject().setDEF("TEX")))
              .setGeometry(new GeoElevationGridObject().setDEF("GEOEG").setGeoGridOrigin(new double[] {-90d,-180d,0d}).setHeight(new MFDoubleObject(new MFDouble8().getArray()).append(new MFDouble9().getArray()).append(new MFDouble10().getArray()).append(new MFDouble11().getArray()).append(new MFDouble12().getArray()).append(new MFDouble13().getArray()).append(new MFDouble14().getArray()).append(new MFDouble15().getArray()).append(new MFDouble16().getArray()).append(new MFDouble17().getArray()).append(new MFDouble18().getArray()).append(new MFDouble19().getArray()).append(new MFDouble20().getArray()).append(new MFDouble21().getArray()).append(new MFDouble22().getArray()).append(new MFDouble23().getArray()).append(new MFDouble24().getArray())).setSolid(false).setXDimension(168).setXSpacing(2.15568d).setYScale(200f).setZDimension(84).setZSpacing(2.15568d)))))
        .addChild(new ScriptObject().setDEF("Return1")
          .addField(new fieldObject().setType("SFFloat").setName("value_changed").setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY))
          .addField(new fieldObject().setType("SFBool").setName("set_value").setAccessType(fieldObject.ACCESSTYPE_INPUTONLY))
          .setSourceCode("ecmascript:\n"+
"\n"+
"function set_value( value ) { \n"+
"           if ( value == true ) value_changed = 1.0;\n"+
"}"))
        .addChild(new ScriptObject().setDEF("Return50")
          .addField(new fieldObject().setType("SFFloat").setName("value_changed").setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY))
          .addField(new fieldObject().setType("SFBool").setName("set_value").setAccessType(fieldObject.ACCESSTYPE_INPUTONLY))
          .setSourceCode("ecmascript:\n"+
"\n"+
"function set_value( value ) { \n"+
"           if ( value == true ) value_changed = 50.0;\n"+
"}"))
        .addChild(new ScriptObject().setDEF("Return200")
          .addField(new fieldObject().setType("SFFloat").setName("value_changed").setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY))
          .addField(new fieldObject().setType("SFBool").setName("set_value").setAccessType(fieldObject.ACCESSTYPE_INPUTONLY))
          .setSourceCode("ecmascript:\n"+
"\n"+
"function set_value( value ) { \n"+
"           if ( value == true ) value_changed = 200.0;\n"+
"}"))
        .addChild(new ScriptObject().setDEF("ReturnShaded")
          .addField(new fieldObject().setType("MFString").setName("value_changed").setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY))
          .addField(new fieldObject().setType("SFBool").setName("set_value").setAccessType(fieldObject.ACCESSTYPE_INPUTONLY))
          .setSourceCode("ecmascript:\n"+
"\n"+
"function set_value( value ) { \n"+
"           if ( value == true ) value_changed = new MFString('');\n"+
"}"))
        .addChild(new ScriptObject().setDEF("ReturnTextured")
          .addField(new fieldObject().setType("MFString").setName("value_changed").setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY))
          .addField(new fieldObject().setType("SFBool").setName("set_value").setAccessType(fieldObject.ACCESSTYPE_INPUTONLY))
          .setSourceCode("ecmascript:\n"+
"\n"+
"function set_value( value ) { \n"+
"           if ( value == true ) value_changed = new MFString ('images/earth.gif', 'https://www.web3d.org/x3d/content/examples/Basic/Geospatial/images/earth.gif'); \n"+
"// Browser.print ('value_changed=' + value_changed);\n"+
"}"))
        .addChild(new ROUTEObject().setFromField("rotation_changed").setFromNode("GeoSphere").setToField("set_rotation").setToNode("GeoXform"))
        .addChild(new ROUTEObject().setFromField("isActive").setFromNode("Touch1").setToField("set_value").setToNode("Return1"))
        .addChild(new ROUTEObject().setFromField("value_changed").setFromNode("Return1").setToField("set_yScale").setToNode("GEOEG"))
        .addChild(new ROUTEObject().setFromField("isActive").setFromNode("Touch50").setToField("set_value").setToNode("Return50"))
        .addChild(new ROUTEObject().setFromField("value_changed").setFromNode("Return50").setToField("set_yScale").setToNode("GEOEG"))
        .addChild(new ROUTEObject().setFromField("isActive").setFromNode("Touch200").setToField("set_value").setToNode("Return200"))
        .addChild(new ROUTEObject().setFromField("value_changed").setFromNode("Return200").setToField("set_yScale").setToNode("GEOEG"))
        .addChild(new ROUTEObject().setFromField("isActive").setFromNode("TouchTextured").setToField("set_value").setToNode("ReturnTextured"))
        .addChild(new ROUTEObject().setFromField("value_changed").setFromNode("ReturnTextured").setToField("set_url").setToNode("TEX"))
        .addChild(new ROUTEObject().setFromField("isActive").setFromNode("TouchShaded").setToField("set_value").setToNode("ReturnShaded"))
        .addChild(new ROUTEObject().setFromField("value_changed").setFromNode("ReturnShaded").setToField("set_url").setToNode("TEX")))      ;
    return X3D0;
    }
protected class MFColor0 {
  protected MFColorObject getArray() {
    return new MFColorObject(new float[] {0f,0f,1f});
  }
}
protected class MFFloat1 {
  protected MFFloatObject getArray() {
    return new MFFloatObject(new float[] {1.57f});
  }
}
protected class MFColor2 {
  protected MFColorObject getArray() {
    return new MFColorObject(new float[] {0f,0f,1f,0f,0f,0f});
  }
}
protected class MFString3 {
  protected MFStringObject getArray() {
    return new MFStringObject(new java.lang.String[] {"images/x1.gif","https://www.web3d.org/x3d/content/examples/Basic/Geospatial/images/xl.jpg"});
  }
}
protected class MFString4 {
  protected MFStringObject getArray() {
    return new MFStringObject(new java.lang.String[] {"images/x50.gif","https://www.web3d.org/x3d/content/examples/Basic/Geospatial/images/x50.gif"});
  }
}
protected class MFString5 {
  protected MFStringObject getArray() {
    return new MFStringObject(new java.lang.String[] {"images/x200.gif","https://www.web3d.org/x3d/content/examples/Basic/Geospatial/images/x200.gif"});
  }
}
protected class MFString6 {
  protected MFStringObject getArray() {
    return new MFStringObject(new java.lang.String[] {"images/shaded.gif","https://www.web3d.org/x3d/content/examples/Basic/Geospatial/images/shaded.gif"});
  }
}
protected class MFString7 {
  protected MFStringObject getArray() {
    return new MFStringObject(new java.lang.String[] {"images/textured.gif","https://www.web3d.org/x3d/content/examples/Basic/Geospatial/images/textured.gif"});
  }
}
protected class MFDouble8 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,3094d,3092d,3089d,3081d,3068d,3045d,3017d,2990d,2971d,2957d,2940d,2927d,2906d,2881d,2851d,2831d,2822d,2819d,2816d,2817d,2824d,2837d,2851d,2861d,2864d,2859d,2845d,2826d,2808d,2798d,2788d,2778d,2767d,2753d,2734d,2700d,2643d,2602d,2592d,2587d,2584d,2581d,2577d,2572d,2566d,2560d,2556d,2554d,2555d,2558d,2560d,2562d,2564d,2564d,2564d,2563d,2559d,2549d,2534d,2518d,2501d,2488d,2472d,2458d,2449d,2445d,2445d,2449d,2457d,2469d,2485d,2499d,2510d,2522d,2533d,2544d,2554d,2562d,2570d,2578d,2584d,2591d,2598d,2605d,2621d,2641d,2661d,2682d,2697d,2707d,2715d,2721d,2725d,2728d,2729d,2731d,2735d,2743d,2758d,2783d,2811d,2864d,2914d,2953d,2981d,2999d,3009d,3019d,3031d,3041d,3050d,3058d,3065d,3071d,3076d,3080d,3083d,3086d,3088d,3089d,3090d,3091d,3091d,3091d,3092d,3092d,3092d,3092d,3093d,3093d,3094d,3094d,3095d,3095d,3094d,3093d,3092d,3091d,3090d,3089d,3089d,3088d,3088d,3087d,3086d,3086d,3085d,3085d,3085d,3084d,3082d,3080d,3078d,3076d,3075d,3075d,3076d,3077d,3079d,3081d,3083d,3086d,3088d,3090d,3091d,3093d,3094d,0d,2466d,2632d,2710d,2777d,2911d,2826d,1997d,1692d,2036d,833d,1107d,858d,653d,1097d,901d,1115d,1202d,1255d,1307d,1812d,1280d,1168d,1605d,3404d,3088d,2970d,2670d,2584d,2452d,2389d,2393d,2397d,2429d,2504d,2552d,2550d,2422d,2040d,1949d,1980d,1985d,1913d,1777d,1563d,1595d,1636d,1561d,1389d,1334d,1332d,1377d,1419d,1489d,1562d,1654d,1748d,1760d,1767d,1781d,1788d,1793d,1799d,1821d,1854d,1885d,1923d,1983d,2042d,2097d,2126d,2148d,2169d,2216d,2308d,2370d,2405d,2443d,2484d,2510d,2531d,2553d,2576d,2594d,2604d,2618d,2634d,2650d,2666d,2683d,2697d,2704d,2710d,2717d,2727d,2743d,2770d,2802d,2858d,2911d,2968d,3022d,3093d,3127d,3160d,3185d,3202d,3220d,3242d,3262d,3278d,3289d,3296d,3301d,3305d,3309d,3312d,3312d,3309d,3304d,3300d,3297d,3291d,3283d,3274d,3261d,3247d,3232d,3218d,3204d,3186d,3170d,3152d,3132d,3114d,3102d,3098d,3094d,3085d,3069d,3051d,3033d,3017d,3006d,2996d,2970d,2942d,2911d,2893d,2875d,2854d,2833d,2817d,2811d,2807d,2800d,2772d,2719d,2681d,2617d,2543d,2512d,2497d,2400d,2401d,2393d,2567d,2621d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,14d,57d,122d,193d,246d,317d,286d,270d,315d,378d,400d,413d,467d,565d,657d,734d,853d,931d,1049d,1186d,1312d,1420d,1529d,1634d,1805d,1904d,1974d,2007d,1998d,1959d,1914d,1883d,1750d,1635d,1504d,1377d,1298d,1233d,1107d,1037d,961d,928d,848d,661d,446d,142d,108d,550d,819d,1433d,1379d,1109d,1056d,1061d,1129d,1393d,1492d,1537d,1611d,1666d,1695d,1716d,1753d,1790d,1850d,1912d,2003d,2068d,2106d,2151d,2204d,2285d,2332d,2375d,2407d,2448d,2482d,2503d,2522d,2541d,2557d,2571d,2587d,2601d,2635d,2685d,2717d,2756d,2834d,2928d,2970d,3031d,3135d,3260d,3333d,3371d,3395d,3416d,3457d,3494d,3522d,3556d,3593d,3618d,3656d,3694d,3724d,3742d,3736d,3726d,3711d,3693d,3655d,3630d,3603d,3584d,3554d,3514d,3473d,3413d,3383d,3351d,3313d,3280d,3216d,3184d,3152d,3116d,3090d,3052d,3009d,2962d,2901d,2873d,2841d,2803d,2779d,2741d,2694d,2634d,2601d,2560d,2513d,2500d,2488d,2409d,2370d,2229d,2200d,1998d,2778d,1766d,1577d,804d,1492d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,67d,400d,550d,560d,435d,324d,358d,396d,497d,601d,677d,749d,838d,925d,997d,1101d,1189d,1300d,1437d,1545d,1706d,1857d,1996d,2065d,2092d,2186d,2208d,2120d,2070d,1962d,1777d,1695d,1377d,1184d,942d,709d,403d,255d,259d,305d,315d,144d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,150d,456d,712d,778d,790d,839d,965d,1069d,1175d,1288d,1470d,1609d,1695d,1800d,1892d,1939d,1979d,2012d,2058d,2114d,2221d,2292d,2400d,2463d,2496d,2524d,2564d,2611d,2698d,2769d,2862d,2968d,3016d,3075d,3165d,3239d,3323d,3411d,3481d,3524d,3577d,3626d,3672d,3700d,3720d,3744d,3770d,3796d,3842d,3891d,3928d,3963d,3986d,4002d,4022d,4031d,4017d,3983d,3921d,3869d,3810d,3755d,3699d,3667d,3640d,3598d,3528d,3446d,3400d,3358d,3280d,3236d,3188d,3141d,3099d,3034d,2974d,2914d,2798d,2709d,2663d,2637d,2602d,2524d,2432d,2371d,2314d,2216d,2158d,2044d,1824d,1652d,1559d,1981d,1158d,225d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble9 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,211d,248d,0d,0d,0d,0d,355d,571d,663d,606d,505d,497d,559d,785d,1000d,1177d,1318d,1415d,1492d,1520d,1560d,1633d,1712d,1765d,1808d,1892d,1909d,1934d,1986d,2033d,2015d,1960d,1960d,2020d,2051d,1832d,1882d,1432d,492d,261d,229d,0d,0d,163d,0d,0d,0d,0d,0d,0d,0d,0d,0d,378d,646d,711d,230d,0d,0d,0d,0d,0d,128d,586d,734d,843d,874d,895d,1175d,1404d,1533d,1796d,2013d,2183d,2257d,2298d,2357d,2427d,2546d,2665d,2754d,2803d,2917d,3008d,3058d,3110d,3190d,3223d,3295d,3348d,3391d,3445d,3527d,3571d,3594d,3608d,3641d,3668d,3670d,3667d,3655d,3614d,3553d,3501d,3489d,3510d,3573d,3633d,3681d,3708d,3726d,3749d,3769d,3772d,3778d,3773d,3769d,3765d,3787d,3790d,3777d,3751d,3720d,3679d,3600d,3500d,3428d,3389d,3354d,3305d,3235d,3175d,3123d,3030d,2965d,2923d,2895d,2826d,2757d,2620d,2553d,2500d,2392d,2345d,2316d,2298d,2264d,2187d,2138d,2164d,2089d,2096d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,94d,322d,0d,0d,0d,37d,820d,1228d,1501d,1681d,1899d,2041d,2077d,2173d,1974d,2024d,2166d,1885d,1687d,1524d,1388d,1282d,1243d,1221d,1243d,1282d,1311d,1372d,1408d,1435d,1443d,1448d,1427d,1019d,729d,535d,875d,717d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,59d,598d,1224d,1404d,1510d,1551d,1667d,1795d,1836d,1945d,2105d,2227d,2285d,2352d,2464d,2553d,2696d,2865d,2933d,2959d,3011d,3173d,3238d,3298d,3346d,3383d,3471d,3538d,3584d,3618d,3696d,3718d,3747d,3793d,3800d,3700d,3622d,3562d,3515d,3453d,3374d,3254d,3099d,3007d,2933d,2883d,2840d,2810d,2800d,2857d,2925d,2990d,3056d,3144d,3277d,3427d,3533d,3615d,3682d,3714d,3722d,3697d,3628d,3580d,3540d,3493d,3434d,3377d,3310d,3263d,3211d,3180d,3141d,3101d,3068d,3020d,2951d,2864d,2774d,2706d,2660d,2612d,2583d,2534d,2509d,2504d,2504d,2417d,2408d,2299d,2020d,1341d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,42d,692d,943d,761d,791d,1016d,993d,972d,1051d,915d,954d,345d,0d,0d,0d,0d,0d,0d,246d,799d,820d,839d,994d,1232d,1308d,1083d,926d,825d,514d,686d,1244d,1232d,1527d,1707d,613d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,382d,897d,1300d,2126d,2419d,2560d,2714d,2820d,2892d,2933d,2940d,3065d,3224d,3297d,3408d,3446d,3484d,3511d,3530d,3568d,3586d,3570d,3562d,3456d,3430d,3447d,3474d,3509d,3520d,3510d,3500d,3392d,3282d,3145d,2998d,2697d,2437d,2238d,2090d,1915d,1799d,1858d,2030d,2328d,2541d,2727d,3011d,3229d,3359d,3398d,3496d,3625d,3665d,3632d,3584d,3522d,3480d,3390d,3288d,3196d,3151d,3109d,3111d,3182d,3201d,3205d,3226d,3243d,3211d,3098d,2989d,2918d,2834d,2767d,2700d,2642d,2581d,2516d,2499d,2444d,2301d,1966d,1690d,1391d,818d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,297d,0d,0d,0d,0d,0d,5d,0d,0d,0d,0d,0d,0d,319d,0d,0d,0d,577d,1443d,1248d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,39d,469d,1220d,1600d,2018d,1567d,1763d,2344d,2713d,3034d,3086d,3097d,3016d,2993d,2961d,2892d,2668d,2776d,3135d,3045d,2431d,2393d,2599d,2779d,2898d,2940d,2976d,2968d,2987d,3087d,3121d,3095d,2927d,2746d,2529d,2000d,1546d,714d,107d,1193d,1395d,1694d,2135d,2559d,2760d,3011d,3163d,3246d,3367d,3477d,3449d,3399d,3383d,3338d,3249d,3114d,2992d,2918d,2899d,2917d,2957d,2997d,3022d,3050d,3096d,3144d,3190d,3161d,3046d,2956d,2822d,2650d,2622d,2525d,2375d,2317d,2334d,2371d,2309d,2292d,2300d,2308d,1847d,1874d,2476d,1337d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,861d,773d,2023d,1162d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,240d,398d,495d,162d,343d,540d,462d,0d,12d,0d,0d,462d,900d,1177d,1582d,1665d,1419d,1855d,2162d,2452d,2465d,2662d,2750d,2913d,2855d,2700d,2437d,2086d,1709d,1056d,0d,0d,1341d,1765d,2069d,2373d,2578d,2692d,2751d,2782d,2847d,2960d,2935d,2868d,2804d,2781d,2726d,2644d,2598d,2619d,2648d,2545d,2516d,2542d,2620d,2698d,2770d,2801d,2769d,2755d,2723d,2614d,2578d,2425d,2244d,2089d,1969d,1860d,1746d,1711d,1753d,1827d,1868d,344d,441d,1169d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble10 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,56d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,50d,0d,0d,0d,1003d,1388d,1508d,1348d,1734d,2238d,2013d,2065d,2027d,1826d,1685d,1298d,1091d,125d,0d,0d,0d,0d,1257d,1497d,1723d,1849d,1848d,2057d,2153d,2277d,2267d,2156d,2164d,2298d,2236d,2156d,2003d,1782d,1686d,1658d,1641d,1798d,2005d,2094d,2047d,1952d,2054d,2335d,2341d,2328d,2022d,1527d,1226d,466d,626d,629d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2045d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,256d,1133d,1450d,298d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,20d,10d,0d,937d,983d,1056d,0d,0d,1175d,106d,0d,0d,0d,0d,0d,0d,0d,869d,799d,574d,416d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,254d,1544d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble11 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,303d,211d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,295d,152d,0d,0d,0d,0d,0d,18d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2290d,513d,134d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,59d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble12 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1225d,285d,930d,173d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,914d,382d,59d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,273d,856d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1221d,847d,79d,9d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,565d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,620d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,253d,1493d,912d,702d,0d,27d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,47d,1650d,555d,292d,152d,27d,25d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,713d});
  }
}
protected class MFDouble13 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2003d,1286d,283d,212d,108d,129d,35d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,13d,128d,178d,293d,627d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,313d,1520d,401d,236d,99d,60d,0d,19d,2d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,239d,34d,0d,0d,0d,0d,0d,0d,0d,151d,1d,83d,69d,69d,152d,343d,331d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,419d,2757d,612d,1207d,121d,28d,23d,161d,108d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,125d,1691d,867d,894d,1410d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,304d,310d,414d,281d,98d,0d,0d,0d,0d,282d,137d,443d,71d,160d,278d,277d,153d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,894d,2080d,542d,230d,76d,41d,54d,152d,92d,128d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,993d,929d,1125d,1261d,1531d,1427d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,298d,489d,511d,440d,227d,234d,154d,239d,201d,173d,305d,6d,215d,90d,185d,156d,585d,570d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,4778d,841d,449d,110d,51d,71d,66d,399d,630d,1245d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,405d,914d,753d,1313d,1187d,1335d,1671d,752d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,90d,361d,562d,518d,427d,427d,381d,464d,435d,282d,108d,68d,39d,69d,155d,172d,196d,287d,289d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble14 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,3490d,5367d,939d,188d,104d,59d,147d,276d,677d,824d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1331d,1029d,959d,971d,1146d,1614d,1572d,1048d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,43d,395d,555d,559d,486d,493d,616d,932d,700d,448d,168d,78d,72d,113d,273d,341d,504d,342d,104d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2639d,4181d,396d,192d,110d,66d,184d,219d,302d,612d,901d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1351d,1258d,1196d,1111d,1088d,863d,1374d,404d,54d,0d,0d,0d,0d,143d,1132d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,163d,346d,484d,520d,380d,400d,459d,525d,812d,623d,298d,132d,116d,160d,227d,373d,178d,214d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2855d,4108d,2083d,274d,142d,77d,392d,288d,317d,446d,589d,914d,792d,2d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,110d,1320d,1612d,1280d,1030d,969d,985d,655d,426d,147d,4d,0d,0d,0d,200d,723d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,261d,253d,334d,308d,348d,495d,440d,617d,496d,339d,221d,298d,200d,276d,306d,300d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,4263d,3828d,2490d,475d,176d,91d,87d,498d,513d,500d,917d,741d,742d,325d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1110d,1224d,1260d,1155d,953d,978d,979d,1304d,1342d,476d,0d,0d,0d,0d,0d,914d,455d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,193d,228d,305d,485d,283d,327d,233d,253d,201d,198d,928d,356d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,549d,4016d,4256d,1245d,243d,298d,156d,121d,612d,800d,609d,921d,614d,773d,311d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,460d,1016d,1109d,1140d,1104d,996d,919d,1202d,850d,1272d,816d,336d,7d,0d,0d,9d,299d,912d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,133d,271d,641d,290d,198d,249d,235d,264d,0d,79d,380d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble15 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2380d,4562d,3977d,1144d,163d,260d,202d,300d,149d,564d,324d,589d,971d,787d,544d,710d,49d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1346d,1370d,1324d,1166d,1059d,1144d,1021d,1061d,724d,507d,696d,678d,597d,0d,0d,0d,304d,270d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,421d,108d,239d,148d,75d,0d,0d,23d,74d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,4277d,3058d,1972d,467d,193d,139d,203d,476d,491d,357d,302d,359d,460d,416d,767d,425d,1216d,187d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,824d,1580d,1358d,1303d,1052d,1125d,1182d,1275d,612d,1197d,1153d,609d,323d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,167d,311d,28d,0d,0d,43d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,41d,1061d,478d,425d,298d,165d,291d,219d,200d,198d,362d,264d,306d,213d,629d,589d,426d,645d,285d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,205d,1639d,1270d,1136d,1138d,1296d,1149d,1271d,1233d,1209d,1070d,505d,152d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,4575d,516d,219d,199d,203d,100d,97d,100d,97d,200d,200d,397d,305d,166d,316d,456d,560d,463d,353d,391d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,147d,1120d,1073d,934d,1084d,1129d,1388d,967d,1545d,1344d,973d,461d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,465d,0d,0d,0d,0d,0d,0d,0d,1d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,151d,2007d,384d,189d,196d,100d,81d,89d,62d,60d,100d,217d,200d,152d,361d,227d,401d,195d,340d,568d,184d,1d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,445d,861d,1022d,742d,714d,801d,601d,1234d,1101d,1225d,912d,581d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,10d,407d,0d,0d,0d,0d,0d,1d,0d,0d,0d,0d,0d,0d,0d,0d,1d,127d,1032d,301d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble16 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2192d,320d,142d,109d,99d,87d,65d,72d,41d,46d,99d,91d,102d,192d,150d,228d,179d,60d,305d,220d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,48d,411d,555d,476d,609d,533d,588d,876d,1488d,1121d,1229d,1566d,771d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,520d,1d,0d,0d,0d,0d,0d,0d,0d,146d,0d,0d,0d,0d,0d,0d,172d,3312d,368d,34d,0d,0d,0d,304d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,417d,176d,121d,100d,97d,60d,45d,34d,88d,75d,109d,21d,14d,3d,55d,62d,1d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1d,533d,679d,228d,339d,426d,455d,606d,724d,1573d,1304d,1153d,1595d,1151d,110d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1043d,62d,0d,0d,0d,106d,38d,0d,0d,141d,0d,0d,0d,0d,0d,0d,0d,640d,151d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,217d,1988d,205d,153d,198d,92d,57d,57d,56d,100d,200d,302d,294d,195d,1d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,143d,520d,564d,314d,492d,409d,447d,457d,712d,2134d,1362d,1133d,2438d,1487d,169d,13d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,105d,0d,0d,0d,318d,106d,614d,81d,0d,0d,0d,0d,437d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1273d,610d,251d,199d,152d,86d,400d,585d,95d,504d,301d,219d,141d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,740d,520d,507d,356d,381d,416d,430d,457d,448d,914d,618d,1052d,1309d,526d,268d,278d,63d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,913d,2d,23d,0d,0d,0d,549d,879d,864d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2105d,266d,151d,91d,224d,1005d,310d,174d,73d,192d,156d,85d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1d,715d,610d,487d,423d,456d,476d,605d,625d,707d,930d,847d,731d,716d,976d,243d,551d,177d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1539d,0d,1234d,0d,0d,0d,0d,0d,91d,337d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble17 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2189d,1916d,133d,103d,1003d,800d,939d,683d,50d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,152d,255d,78d,154d,158d,0d,0d,32d,122d,1492d,913d,927d,914d,470d,479d,609d,608d,612d,533d,427d,427d,989d,1198d,1145d,808d,544d,298d,185d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,2d,0d,0d,0d,0d,0d,0d,0d,0d,0d,165d,0d,0d,0d,0d,0d,0d,2099d,0d,0d,0d,200d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,51d,90d,1823d,1175d,73d,44d,143d,51d,37d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,305d,583d,375d,304d,608d,96d,234d,305d,263d,227d,127d,627d,439d,549d,376d,464d,855d,893d,570d,393d,395d,323d,1738d,1085d,2536d,933d,1212d,725d,751d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,70d,0d,0d,0d,0d,0d,0d,0d,0d,367d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,148d,857d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,352d,0d,0d,0d,66d,112d,99d,845d,609d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,131d,593d,369d,434d,305d,283d,149d,466d,433d,236d,721d,594d,602d,450d,330d,364d,396d,491d,493d,450d,397d,422d,426d,770d,2213d,3266d,660d,263d,963d,1152d,222d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,357d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1d,0d,0d,0d,0d,0d,0d,0d,22d,100d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,64d,39d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,49d,114d,248d,301d,359d,309d,238d,304d,299d,212d,290d,601d,360d,309d,276d,293d,506d,449d,605d,837d,488d,590d,558d,439d,523d,2082d,1720d,627d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,880d,582d,0d,0d,0d,0d,0d,0d,0d,0d,0d,711d,0d,29d,92d,600d,0d,0d,0d,0d,0d,0d,0d,47d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1719d,1201d,621d,90d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,29d,61d,58d,278d,306d,276d,263d,290d,303d,250d,367d,405d,572d,337d,310d,304d,310d,439d,877d,1200d,656d,564d,421d,404d,518d,1078d,1560d,0d,2003d,1100d,604d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,608d,250d,0d,0d,0d,0d,0d,0d,0d,0d,0d,116d,528d,189d,90d,643d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble18 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,116d,1574d,553d,2440d,164d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,32d,68d,134d,183d,311d,327d,248d,337d,363d,356d,391d,455d,517d,436d,357d,256d,231d,414d,1039d,652d,607d,460d,536d,373d,373d,499d,0d,0d,1596d,948d,1002d,939d,923d,0d,0d,0d,0d,0d,0d,0d,0d,0d,765d,579d,525d,31d,0d,0d,0d,0d,0d,0d,10d,0d,102d,860d,207d,288d,0d,0d,0d,0d,0d,0d,1517d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1609d,444d,1345d,468d,0d,0d,102d,19d,0d,0d,0d,0d,0d,0d,0d,402d,110d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,10d,84d,439d,380d,356d,333d,264d,466d,468d,405d,454d,455d,644d,561d,360d,418d,361d,473d,649d,581d,633d,381d,310d,366d,508d,0d,0d,372d,1439d,762d,474d,254d,269d,208d,27d,0d,0d,0d,0d,0d,0d,0d,611d,703d,374d,128d,579d,38d,0d,0d,0d,0d,13d,156d,490d,697d,331d,0d,0d,317d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,236d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,45d,1874d,2098d,2200d,0d,0d,0d,0d,33d,0d,0d,0d,0d,50d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,152d,145d,441d,282d,299d,206d,324d,363d,432d,608d,547d,571d,612d,559d,419d,1135d,1852d,573d,603d,659d,462d,354d,316d,329d,515d,0d,117d,1393d,778d,652d,333d,208d,152d,62d,143d,0d,0d,0d,0d,0d,0d,0d,512d,293d,296d,321d,344d,157d,1d,0d,0d,66d,579d,1483d,1103d,1336d,893d,22d,0d,7d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1417d,2142d,1879d,119d,0d,0d,0d,0d,0d,0d,0d,87d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,156d,305d,314d,247d,296d,271d,214d,363d,407d,551d,1945d,1240d,905d,820d,633d,653d,574d,475d,434d,678d,487d,232d,161d,338d,58d,0d,556d,920d,914d,609d,342d,128d,106d,136d,505d,319d,0d,0d,0d,0d,130d,16d,201d,526d,394d,559d,425d,621d,154d,9d,3d,1335d,210d,796d,1321d,1806d,681d,860d,85d,156d,188d,23d,17d,0d,1874d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,47d,0d,191d,1989d,1562d,1997d,153d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,202d,369d,327d,420d,304d,303d,317d,302d,473d,901d,1249d,888d,820d,573d,608d,363d,325d,301d,304d,304d,216d,404d,340d,0d,497d,1057d,847d,814d,840d,387d,88d,0d,0d,0d,0d,18d,0d,0d,240d,2d,44d,590d,253d,399d,136d,77d,66d,32d,26d,258d,432d,132d,166d,1804d,1881d,2133d,496d,775d,156d,913d,142d,507d,506d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble19 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,72d,0d,105d,2006d,1522d,1090d,342d,274d,0d,0d,0d,0d,0d,0d,0d,21d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,205d,474d,322d,410d,452d,261d,388d,388d,464d,496d,558d,520d,368d,579d,308d,182d,122d,166d,175d,251d,92d,340d,0d,1182d,941d,994d,645d,410d,101d,0d,0d,444d,16d,357d,1241d,1223d,1331d,59d,61d,192d,294d,467d,174d,140d,97d,131d,1123d,3641d,2507d,921d,110d,596d,3569d,3747d,1926d,2073d,1031d,172d,399d,478d,89d,243d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,202d,500d,1907d,1484d,1030d,323d,298d,60d,1d,0d,1d,0d,0d,0d,46d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1241d,373d,597d,523d,400d,359d,328d,304d,385d,560d,644d,453d,558d,309d,41d,100d,6d,-84d,208d,29d,673d,1368d,803d,685d,582d,433d,277d,0d,0d,1473d,2354d,3088d,468d,1569d,1176d,869d,343d,688d,109d,171d,215d,222d,878d,4632d,4548d,4565d,4629d,3598d,5201d,4039d,4052d,3739d,4100d,402d,373d,436d,529d,30d,182d,40d,49d,46d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1099d,2d,809d,1324d,1199d,1273d,822d,790d,462d,166d,92d,61d,144d,28d,143d,74d,19d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,512d,1052d,1042d,813d,760d,518d,537d,152d,160d,316d,589d,214d,0d,0d,199d,161d,204d,0d,0d,0d,0d,-405d,698d,805d,394d,141d,8d,47d,1056d,1710d,1359d,1230d,1069d,614d,756d,983d,1964d,1375d,169d,203d,438d,4504d,5130d,5215d,4869d,5001d,4536d,4641d,4788d,4163d,4965d,4780d,4673d,2166d,472d,1152d,1373d,68d,148d,75d,4d,5d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,853d,346d,628d,2499d,2316d,1767d,1250d,920d,362d,200d,102d,76d,39d,106d,176d,279d,195d,24d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,95d,1343d,1306d,1084d,1400d,693d,167d,23d,105d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,274d,796d,653d,366d,35d,1344d,1915d,1763d,1031d,872d,679d,1866d,792d,2290d,2307d,3269d,2616d,909d,1562d,4633d,5306d,4397d,5879d,4795d,4849d,5100d,4992d,4767d,4963d,4470d,4274d,3575d,3773d,1189d,2025d,717d,1278d,45d,26d,14d,0d,0d,0d,0d,0d,0d,400d,650d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,614d,1827d,835d,1627d,2143d,1833d,2082d,2343d,1363d,833d,597d,304d,335d,494d,70d,156d,244d,285d,503d,235d,30d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,448d,945d,910d,744d,139d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,316d,275d,296d,340d,2381d,1638d,1121d,2705d,1027d,1010d,1305d,1154d,518d,1383d,2118d,2407d,2648d,4322d,4973d,4832d,5256d,4815d,5112d,4867d,4935d,4960d,5092d,4337d,3864d,3960d,2876d,2578d,1923d,1239d,1365d,993d,66d,41d,189d,0d,0d,0d,74d,381d,0d,0d,0d,1300d,20d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble20 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,943d,1639d,1481d,2044d,2986d,1709d,3002d,2628d,1219d,899d,612d,438d,243d,243d,254d,122d,139d,284d,436d,556d,91d,6d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,312d,400d,1272d,38d,0d,0d,0d,0d,0d,0d,370d,0d,0d,0d,288d,0d,0d,387d,2019d,1053d,1487d,1569d,827d,581d,2132d,1510d,1454d,-28d,-28d,59d,1100d,127d,145d,190d,252d,578d,832d,2985d,4115d,2929d,1267d,1214d,1247d,1252d,3274d,3839d,2848d,2668d,3878d,4832d,3874d,2986d,1485d,1262d,1349d,1107d,1378d,69d,14d,2d,0d,0d,0d,119d,0d,0d,0d,0d,0d,300d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,183d,1218d,1371d,1805d,1902d,1378d,1427d,2675d,2138d,1406d,853d,609d,411d,328d,276d,184d,232d,281d,365d,273d,342d,184d,44d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,418d,444d,841d,927d,0d,0d,0d,0d,0d,0d,0d,323d,62d,485d,0d,0d,199d,1056d,1020d,1332d,1010d,1501d,1742d,2212d,877d,2068d,-9d,-28d,-28d,164d,48d,138d,175d,169d,338d,744d,496d,1071d,3538d,2342d,1386d,1035d,985d,946d,916d,808d,791d,842d,1397d,1575d,1190d,1200d,1586d,1036d,1278d,1211d,1404d,843d,18d,98d,0d,315d,484d,851d,0d,0d,0d,0d,0d,7d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1463d,2092d,1638d,1768d,1393d,1648d,2042d,2027d,2292d,1313d,1006d,667d,442d,366d,304d,180d,241d,206d,274d,175d,198d,365d,313d,270d,24d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,892d,770d,1032d,568d,848d,0d,0d,0d,0d,235d,201d,0d,0d,362d,556d,173d,117d,0d,0d,0d,0d,0d,0d,13d,1347d,3422d,-28d,-28d,6d,164d,45d,52d,101d,160d,260d,230d,523d,2431d,2291d,2131d,2308d,5436d,2132d,2864d,1051d,1453d,941d,450d,1224d,1577d,1123d,972d,1244d,1081d,1173d,1160d,1257d,1402d,1226d,795d,383d,54d,319d,581d,1015d,0d,0d,0d,0d,300d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,559d,1441d,1278d,1456d,2499d,1981d,2714d,2621d,1401d,872d,640d,537d,515d,255d,335d,303d,218d,268d,275d,176d,279d,183d,122d,29d,244d,65d,0d,89d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,42d,303d,1079d,960d,409d,360d,11d,0d,985d,682d,244d,84d,164d,32d,0d,0d,0d,0d,0d,254d,481d,207d,-16d,-28d,66d,-8d,125d,168d,40d,59d,102d,131d,433d,356d,314d,561d,453d,933d,1784d,807d,525d,430d,547d,955d,894d,1244d,1792d,2090d,1240d,1061d,1270d,1348d,696d,1126d,1084d,1062d,1223d,373d,152d,203d,281d,407d,146d,152d,33d,0d,0d,496d,0d,100d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,473d,426d,304d,1008d,1768d,1304d,1306d,913d,721d,854d,670d,550d,283d,427d,344d,287d,525d,276d,266d,321d,292d,365d,286d,380d,160d,365d,373d,29d,0d,374d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,100d,146d,255d,511d,1977d,1709d,2462d,485d,165d,226d,88d,942d,345d,147d,174d,0d,31d,17d,0d,47d,22d,123d,1d,-20d,-28d,-28d,-8d,11d,132d,107d,95d,146d,230d,335d,501d,399d,325d,325d,405d,662d,1907d,777d,798d,2281d,2072d,1322d,1822d,2290d,2448d,1936d,1530d,1265d,1256d,1119d,1048d,767d,979d,985d,181d,139d,171d,402d,136d,102d,340d,616d,0d,170d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble21 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,761d,110d,1280d,502d,853d,2012d,1066d,792d,823d,762d,673d,457d,487d,266d,338d,372d,460d,355d,275d,429d,301d,265d,295d,404d,590d,175d,0d,309d,304d,0d,0d,303d,161d,152d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,64d,281d,126d,167d,252d,136d,645d,479d,771d,193d,275d,380d,266d,370d,292d,211d,168d,168d,69d,117d,52d,146d,50d,29d,13d,-23d,1d,111d,222d,350d,102d,112d,256d,494d,423d,488d,781d,1051d,885d,678d,561d,829d,1286d,2529d,2829d,1060d,1820d,1971d,1664d,1593d,1033d,921d,2302d,1106d,1098d,664d,646d,718d,966d,401d,238d,363d,494d,265d,48d,74d,842d,321d,158d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,106d,1515d,687d,922d,1205d,1163d,1034d,714d,676d,711d,556d,578d,606d,268d,216d,395d,419d,381d,316d,203d,127d,79d,82d,232d,318d,421d,449d,540d,582d,609d,298d,153d,0d,81d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,151d,16d,0d,21d,96d,232d,421d,310d,456d,432d,260d,227d,268d,225d,182d,159d,103d,188d,212d,146d,173d,128d,157d,44d,61d,27d,80d,106d,246d,225d,306d,220d,161d,321d,332d,415d,374d,346d,187d,342d,566d,1986d,1202d,1928d,2340d,1537d,1419d,1746d,1698d,1464d,1317d,722d,860d,1139d,1354d,819d,779d,767d,696d,640d,591d,130d,216d,728d,1210d,588d,47d,680d,275d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,609d,1638d,1444d,728d,2182d,1459d,1185d,888d,713d,701d,700d,514d,536d,280d,259d,249d,306d,305d,301d,202d,153d,73d,0d,0d,117d,300d,467d,529d,624d,603d,545d,612d,305d,306d,78d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,47d,152d,0d,76d,53d,0d,0d,-1d,23d,72d,33d,4d,59d,86d,127d,164d,175d,141d,132d,148d,158d,202d,220d,140d,146d,238d,217d,285d,145d,152d,245d,403d,313d,252d,161d,228d,338d,374d,218d,117d,97d,139d,137d,266d,250d,263d,651d,808d,1045d,1048d,1519d,2259d,1041d,512d,910d,451d,1708d,980d,1192d,813d,760d,628d,630d,341d,315d,398d,589d,633d,634d,200d,29d,32d,0d,0d,0d,0d,0d,0d,120d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,103d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,243d,487d,623d,912d,1219d,1250d,975d,637d,754d,627d,618d,594d,476d,389d,366d,307d,252d,226d,175d,146d,126d,67d,65d,14d,0d,0d,152d,292d,426d,478d,476d,533d,512d,293d,79d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,63d,0d,0d,0d,0d,0d,0d,42d,0d,0d,0d,0d,37d,141d,160d,129d,201d,206d,229d,141d,119d,132d,203d,134d,73d,146d,228d,136d,137d,530d,270d,179d,155d,130d,128d,112d,103d,108d,113d,147d,124d,201d,145d,955d,442d,727d,510d,684d,381d,565d,562d,619d,761d,973d,1283d,1419d,923d,1076d,618d,1122d,532d,460d,432d,909d,808d,0d,260d,0d,0d,0d,0d,0d,0d,0d,0d,407d,210d,746d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,563d,155d,0d,0d,0d,0d,0d,0d,0d,0d,762d,782d,1378d,1583d,1713d,1787d,999d,773d,727d,634d,685d,300d,521d,483d,489d,338d,342d,271d,212d,189d,1d,0d,0d,0d,0d,0d,0d,0d,211d,305d,176d,305d,273d,500d,547d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,619d,257d,0d,0d,0d,0d,0d,4d,0d,175d,49d,20d,0d,154d,84d,117d,73d,62d,232d,173d,131d,109d,150d,136d,154d,176d,77d,162d,96d,173d,333d,244d,130d,74d,65d,91d,68d,53d,133d,134d,135d,119d,68d,125d,183d,217d,244d,285d,302d,428d,458d,386d,640d,666d,865d,655d,1292d,803d,1818d,1067d,1072d,931d,906d,1102d,1082d,606d,744d,876d,0d,0d,0d,0d,0d,0d,0d,0d,206d,268d,161d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble22 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,365d,129d,53d,243d,0d,0d,0d,0d,0d,0d,0d,1110d,310d,1297d,1149d,1872d,1285d,596d,492d,448d,440d,764d,304d,264d,210d,210d,304d,414d,492d,305d,172d,0d,0d,0d,0d,0d,0d,0d,0d,9d,116d,158d,233d,0d,0d,79d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,16d,885d,220d,146d,68d,24d,31d,0d,0d,56d,55d,98d,27d,71d,146d,184d,153d,121d,152d,190d,175d,178d,200d,201d,168d,490d,69d,72d,94d,46d,84d,89d,57d,92d,69d,33d,96d,125d,135d,118d,127d,477d,563d,368d,271d,351d,352d,655d,458d,487d,294d,1309d,953d,441d,496d,564d,445d,497d,455d,208d,418d,438d,802d,693d,367d,0d,0d,601d,0d,175d,144d,0d,0d,668d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1d,30d,11d,151d,113d,424d,1349d,29d,1898d,1318d,685d,3177d,1221d,1162d,887d,1008d,1451d,1234d,686d,1800d,254d,151d,143d,176d,156d,268d,354d,403d,376d,322d,306d,303d,152d,21d,0d,0d,0d,0d,0d,0d,0d,0d,311d,515d,0d,0d,0d,57d,0d,0d,0d,0d,0d,0d,0d,1213d,1132d,976d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,120d,1370d,907d,675d,575d,314d,0d,0d,64d,146d,136d,84d,1d,143d,23d,211d,126d,124d,214d,92d,118d,121d,177d,115d,166d,353d,88d,99d,128d,39d,38d,41d,40d,113d,47d,82d,99d,137d,120d,143d,264d,293d,375d,412d,382d,390d,426d,371d,267d,337d,360d,326d,309d,249d,332d,369d,349d,280d,93d,228d,263d,368d,1320d,981d,1505d,2126d,843d,903d,833d,495d,822d,0d,0d,242d,0d,126d,397d,483d,721d,0d,0d,0d,0d,0d,0d,1d,0d,0d,0d,0d,357d,61d,225d,879d,262d,1219d,888d,706d,490d,678d,727d,560d,1187d,1273d,1799d,1896d,924d,319d,294d,390d,265d,283d,315d,464d,540d,361d,305d,320d,236d,158d,82d,134d,1d,0d,0d,0d,0d,0d,0d,0d,0d,0d,148d,198d,593d,318d,0d,0d,0d,0d,0d,0d,1107d,2120d,2620d,2563d,4d,0d,0d,0d,0d,0d,0d,0d,0d,0d,17d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,240d,600d,390d,257d,276d,0d,15d,143d,120d,96d,183d,157d,153d,92d,95d,11d,201d,242d,121d,197d,150d,139d,110d,784d,85d,143d,6d,23d,76d,104d,86d,88d,57d,68d,41d,94d,31d,273d,227d,498d,467d,345d,527d,451d,234d,339d,342d,307d,363d,347d,154d,117d,98d,155d,134d,108d,102d,233d,414d,1126d,850d,1577d,673d,1707d,935d,1185d,665d,471d,775d,1125d,962d,576d,626d,1009d,79d,135d,223d,97d,162d,133d,239d,269d,238d,530d,0d,68d,245d,228d,88d,330d,46d,109d,474d,535d,365d,675d,352d,523d,1295d,535d,314d,483d,522d,34d,296d,200d,432d,156d,156d,440d,342d,555d,528d,317d,276d,213d,151d,152d,149d,301d,305d,275d,188d,0d,0d,0d,0d,0d,0d,23d,152d,304d,0d,59d,313d,0d,0d,0d,0d,879d,1110d,1976d,2556d,2434d,1337d,641d,160d,0d,0d,0d,0d,0d,0d,482d,572d,108d,683d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,740d,697d,413d,106d,0d,37d,154d,266d,126d,74d,0d,0d,0d,43d,28d,53d,100d,142d,85d,65d,52d,64d,286d,214d,1d,17d,38d,7d,72d,66d,14d,35d,35d,79d,36d,105d,342d,262d,499d,864d,304d,608d,772d,431d,417d,545d,478d,413d,334d,229d,209d,110d,104d,539d,1197d,624d,858d,612d,959d,1410d,916d,505d,621d,605d,44d,455d,534d,517d,288d,371d,605d,1143d,283d,392d,108d,250d,173d,546d,219d,0d,0d,0d,0d,0d,0d,164d,254d,483d,511d,1268d,511d,1300d,676d,856d,802d,490d,276d,887d,1d,218d,178d,158d,269d,257d,387d,548d,234d,173d,0d,0d,0d,121d,61d,24d,0d,0d,28d,75d,216d,189d,0d,122d,421d,0d,0d,0d,34d,0d,196d,365d,251d,0d,0d,0d,0d,0d,0d,21d,558d,1168d,2262d,2546d,2778d,2897d,2900d,2119d,644d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,517d,1100d,432d,438d,184d,259d,280d,366d,159d,219d,262d,250d,0d,0d,50d,0d,41d,40d,40d,149d,151d,141d,148d,163d,116d,57d,29d,0d,25d,15d,54d,73d,117d,30d,442d,448d,657d,850d,911d,672d,206d,376d,321d,340d,400d,304d,362d,65d,217d,221d,52d,97d,251d,895d,432d,219d,156d,1252d,316d,130d,56d,72d,286d,84d,38d,39d,80d,340d,36d,107d,203d,967d,298d,247d,404d,879d});
  }
}
protected class MFDouble23 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,45d,45d,52d,47d,26d,122d,60d,19d,30d,0d,0d,0d,0d,0d,1d,0d,0d,37d,0d,0d,0d,227d,295d,183d,110d,113d,152d,57d,18d,0d,0d,243d,18d,0d,0d,0d,98d,0d,45d,72d,312d,1098d,715d,466d,0d,0d,0d,0d,0d,0d,282d,0d,657d,1718d,2323d,2566d,2778d,2999d,3070d,3048d,2883d,2015d,940d,1613d,1250d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,520d,296d,300d,188d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,12d,0d,0d,0d,10d,27d,15d,21d,51d,46d,74d,5d,60d,69d,148d,814d,1131d,393d,507d,441d,327d,277d,707d,584d,504d,152d,165d,137d,220d,224d,133d,54d,389d,851d,247d,119d,71d,193d,529d,94d,33d,27d,187d,70d,181d,7d,26d,13d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,151d,213d,175d,251d,198d,159d,275d,304d,81d,46d,0d,0d,101d,152d,313d,0d,0d,274d,0d,228d,152d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,575d,1857d,2033d,2357d,2590d,2752d,2926d,3054d,3118d,3004d,2628d,2215d,1799d,1577d,715d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,311d,0d,0d,0d,0d,0d,0d,23d,28d,0d,0d,11d,5d,0d,52d,62d,18d,99d,13d,122d,51d,42d,71d,34d,155d,365d,134d,116d,115d,78d,49d,65d,62d,248d,214d,1d,0d,0d,0d,0d,15d,18d,13d,1d,2d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1d,179d,29d,62d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,22d,1243d,1906d,2155d,2439d,2789d,2896d,2919d,2917d,2846d,2675d,2404d,2247d,1977d,1229d,951d,612d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,642d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,21d,131d,158d,232d,321d,225d,17d,79d,48d,119d,133d,0d,65d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,77d,0d,0d,0d,0d,62d,0d,0d,94d,0d,19d,0d,100d,131d,0d,344d,310d,0d,0d,892d,0d,0d,0d,0d,278d,824d,640d,1039d,568d,866d,1033d,1487d,1747d,1986d,2306d,2437d,2570d,2561d,2481d,2472d,2393d,2287d,2257d,2142d,2345d,990d,1d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,199d,272d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,19d,11d,15d,276d,128d,184d,1d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,1d,4d,0d,0d,292d,163d,0d,103d,0d,0d,575d,756d,301d,524d,260d,1315d,1501d,450d,0d,68d,382d,743d,926d,1058d,1204d,1742d,2094d,2129d,2280d,2248d,2286d,2358d,2445d,2421d,2331d,2282d,2117d,1978d,1799d,1638d,1401d,1273d,310d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,288d,0d,580d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,379d,311d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
protected class MFDouble24 {
  protected MFDoubleObject getArray() {
    return new MFDoubleObject(new double[] {0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,538d,0d,0d,181d,594d,519d,0d,600d,1191d,1844d,1219d,971d,0d,609d,192d,378d,991d,1194d,1186d,1228d,1230d,1152d,1269d,1378d,1682d,1783d,1522d,1183d,965d,913d,862d,339d,268d,967d,1222d,745d,1d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,173d,276d,0d,0d,146d,0d,299d,41d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,679d,36d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,122d,581d,288d,1d,515d,597d,0d,13d,0d,0d,0d,0d,0d,0d,0d,270d,0d,0d,1d,1d,147d,8d,328d,410d,579d,478d,53d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d,0d});
  }
}
}
