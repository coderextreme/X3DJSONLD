package net.coderextreme.data;
import org.web3d.x3d.jsail.*;
import org.web3d.x3d.jsail.CADGeometry.*;
import org.web3d.x3d.jsail.Core.*;
import org.web3d.x3d.jsail.CubeMapTexturing.*;
import org.web3d.x3d.jsail.DIS.*;
import org.web3d.x3d.jsail.EnvironmentalEffects.*;
import org.web3d.x3d.jsail.EnvironmentalSensor.*;
import org.web3d.x3d.jsail.EventUtilities.*;
import org.web3d.x3d.jsail.Followers.*;
import org.web3d.x3d.jsail.Geometry2D.*;
import org.web3d.x3d.jsail.Geometry3D.*;
import org.web3d.x3d.jsail.Geospatial.*;
import org.web3d.x3d.jsail.Grouping.*;
import org.web3d.x3d.jsail.HAnim.*;
import org.web3d.x3d.jsail.Interpolation.*;
import org.web3d.x3d.jsail.KeyDeviceSensor.*;
import org.web3d.x3d.jsail.Layering.*;
import org.web3d.x3d.jsail.Layout.*;
import org.web3d.x3d.jsail.Lighting.*;
import org.web3d.x3d.jsail.NURBS.*;
import org.web3d.x3d.jsail.Navigation.*;
import org.web3d.x3d.jsail.Networking.*;
import org.web3d.x3d.jsail.ParticleSystems.*;
import org.web3d.x3d.jsail.Picking.*;
import org.web3d.x3d.jsail.PointingDeviceSensor.*;
import org.web3d.x3d.jsail.Rendering.*;
import org.web3d.x3d.jsail.RigidBodyPhysics.*;
import org.web3d.x3d.jsail.Scripting.*;
import org.web3d.x3d.jsail.Shaders.*;
import org.web3d.x3d.jsail.Shape.*;
import org.web3d.x3d.jsail.Sound.*;
import org.web3d.x3d.jsail.Text.*;
import org.web3d.x3d.jsail.Texturing3D.*;
import org.web3d.x3d.jsail.Texturing.*;
import org.web3d.x3d.jsail.Time.*;
import org.web3d.x3d.jsail.VolumeRendering.*;
import org.web3d.x3d.jsail.fields.*;
import org.web3d.x3d.sai.*;
import org.web3d.x3d.sai.CADGeometry.*;
import org.web3d.x3d.sai.Core.*;
import org.web3d.x3d.sai.CubeMapTexturing.*;
import org.web3d.x3d.sai.DIS.*;
import org.web3d.x3d.sai.EnvironmentalEffects.*;
import org.web3d.x3d.sai.EnvironmentalSensor.*;
import org.web3d.x3d.sai.EventUtilities.*;
import org.web3d.x3d.sai.Followers.*;
import org.web3d.x3d.sai.Geometry2D.*;
import org.web3d.x3d.sai.Geometry3D.*;
import org.web3d.x3d.sai.Geospatial.*;
import org.web3d.x3d.sai.Grouping.*;
import org.web3d.x3d.sai.HAnim.*;
import org.web3d.x3d.sai.Interpolation.*;
import org.web3d.x3d.sai.KeyDeviceSensor.*;
import org.web3d.x3d.sai.Layering.*;
import org.web3d.x3d.sai.Layout.*;
import org.web3d.x3d.sai.Lighting.*;
import org.web3d.x3d.sai.NURBS.*;
import org.web3d.x3d.sai.Navigation.*;
import org.web3d.x3d.sai.Networking.*;
import org.web3d.x3d.sai.ParticleSystems.*;
import org.web3d.x3d.sai.Picking.*;
import org.web3d.x3d.sai.PointingDeviceSensor.*;
import org.web3d.x3d.sai.Rendering.*;
import org.web3d.x3d.sai.RigidBodyPhysics.*;
import org.web3d.x3d.sai.Scripting.*;
import org.web3d.x3d.sai.Shaders.*;
import org.web3d.x3d.sai.Shape.*;
import org.web3d.x3d.sai.Sound.*;
import org.web3d.x3d.sai.Text.*;
import org.web3d.x3d.sai.Texturing3D.*;
import org.web3d.x3d.sai.Texturing.*;
import org.web3d.x3d.sai.Time.*;
import org.web3d.x3d.sai.VolumeRendering.*;
public class Teapot {
  public static void main(String[] args) {
    ConfigurationProperties.setShowDefaultAttributes(true);
    ConfigurationProperties.setXsltEngine(ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA);
    ConfigurationProperties.setDeleteIntermediateFiles(false);
    new Teapot().initialize().toFileJSON("../data/Teapot.new.json");
    }
    public X3DObject initialize() {
      X3DObject X3D0 =  new X3DObject().setProfile("Interchange").setVersion("3.0")
      .setHead(new headObject()
        .addMeta(new metaObject().setName("title").setContent("MooringBuoy.x3d"))
        .addMeta(new metaObject().setName("description").setContent("A mooring buoy used in Naval Harbors"))
        .addMeta(new metaObject().setName("creator").setContent("LT Patrick Sullivan"))
        .addMeta(new metaObject().setName("created").setContent("28 July 2006"))
        .addMeta(new metaObject().setName("modified").setContent("12 January 2014"))
        .addMeta(new metaObject().setName("identifier").setContent("https://savage.nps.edu/Savage/HarborEquipment/Buoys/MooringBuoy.x3d"))
        .addMeta(new metaObject().setName("generator").setContent("VizX3D, http://www.vivaty.com/downloads/studio"))
        .addMeta(new metaObject().setName("generator").setContent("Wings3D, http://www.wings3d.com"))
        .addMeta(new metaObject().setName("generator").setContent("X3D-Edit, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new metaObject().setName("license").setContent("../../license.html")))
      .setScene(new SceneObject()
        .addChild(new TransformObject().setScale(new float[] {0.3f,0.3f,0.3f})
          .addChild(new GroupObject().setDEF("MooringBuoyWithHook")
            .addChild(new TransformObject().setDEF("Hook")
              .addChild(new ShapeObject()
                .setAppearance(new AppearanceObject()
                  .setMaterial(new MaterialObject().setDEF("Black_mat").setDiffuseColor(new float[] {0f,0f,0f})))
                .setGeometry(new IndexedFaceSetObject().setCoordIndex(new MFInt32Object(new MFInt320().getArray()).append(new MFInt321().getArray())).setCreaseAngle(0.524f)
                  .setCoord(new CoordinateObject().setPoint(new MFVec3fObject(new MFVec3f2().getArray()))))))
            .addChild(new TransformObject().setDEF("MooringBuoy")
              .addChild(new ShapeObject()
                .setAppearance(new AppearanceObject()
                  .setMaterial(new MaterialObject().setDEF("default_mat").setAmbientIntensity(1f).setDiffuseColor(new float[] {0.50196f,0.50196f,0.50196f}).setShininess(1f))
                  .setTexture(new ImageTextureObject().setUrl(new MFStringObject(new MFString3().getArray()))))
                .setGeometry(new IndexedFaceSetObject().setCoordIndex(new MFInt32Object(new MFInt324().getArray()).append(new MFInt325().getArray()).append(new MFInt326().getArray())).setCreaseAngle(1.047f).setTexCoordIndex(new MFInt32Object(new MFInt327().getArray()).append(new MFInt328().getArray()).append(new MFInt329().getArray()))
                  .setCoord(new CoordinateObject().setPoint(new MFVec3fObject(new MFVec3f10().getArray()).append(new MFVec3f11().getArray())))
                  .setTexCoord(new TextureCoordinateObject().setPoint(new MFVec2fObject(new MFVec2f12().getArray())))))))))      ;
    return X3D0;
    }
protected class MFInt320 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {0,1,2,-1,0,2,3,-1,0,4,5,-1,0,5,6,-1,0,3,7,-1,0,7,4,-1,0,6,8,-1,0,8,1,-1,1,9,10,-1,1,10,2,-1,1,8,11,-1,1,11,9,-1,9,12,13,-1,9,13,10,-1,9,11,14,-1,9,14,12,-1,12,15,16,-1,12,16,13,-1,12,14,17,-1,12,17,15,-1,15,18,19,-1,15,19,16,-1,15,17,20,-1,15,20,18,-1,18,21,22,-1,18,22,19,-1,18,20,23,-1,18,23,21,-1,21,24,25,-1,21,25,22,-1,21,23,26,-1,21,26,24,-1,24,27,28,-1,24,28,25,-1,24,26,29,-1,24,29,27,-1,27,30,31,-1,27,31,28,-1,27,29,32,-1,27,32,30,-1,30,33,34,-1,30,34,31,-1,30,32,35,-1,30,35,33,-1,33,36,37,-1,33,37,34,-1,33,35,38,-1,33,38,36,-1,36,39,40,-1,36,40,37,-1,36,38,41,-1,36,41,39,-1,39,42,43,-1,39,43,40,-1,39,41,44,-1,39,44,42,-1,42,45,46,-1,42,46,43,-1,42,44,47,-1,42,47,45,-1,45,4,7,-1,45,7,46,-1,45,47,5,-1,45,5,4,-1,3,2,10,-1,3,10,13,-1,3,13,16,-1,3,16,19,-1,3,19,22,-1,3,22,25,-1,3,25,28,-1,3,28,31,-1,3,31,34,-1,3,34,37,-1,3,37,40,-1,3,40,43,-1,3,43,46,-1,3,46,7,-1,8,6,48,-1,8,48,49,-1,8,49,50,-1,8,50,11,-1,6,5,51,-1,6,51,48,-1,5,47,52,-1,5,52,51,-1,47,44,53,-1,47,53,52,-1,44,41,54,-1,44,54,53,-1,41,38,55,-1,41,55,54,-1,38,35,56,-1,38,56,55,-1,35,32,57,-1,35,57,56,-1,32,29,58,-1,32,58,57,-1,29,26,59,-1,29,59,58,-1,26,23,60,-1,26,60,59,-1,23,20,61,-1,23,61,60,-1,20,17,62,-1,20,62,61,-1,17,14,63,-1,17,63,62,-1,14,11,50,-1,14,50,63,-1,49,48,64,-1,49,64,65,-1,49,65,66,-1,49,66,50,-1,48,51,67,-1,48,67,64,-1,51,52,68,-1,51,68,67,-1,52,53,69,-1,52,69,68,-1,53,54,70,-1,53,70,69,-1,54,55,71,-1,54,71,70,-1,55,56,72,-1,55,72,71,-1,56,57,73,-1,56,73,72,-1,57,58,74,-1,57,74,73,-1,58,59,75,-1,58,75,74,-1,59,60,76,-1,59,76,75,-1,60,61,77,-1,60,77,76,-1,61,62,78,-1,61,78,77,-1,62,63,79,-1,62,79,78,-1,63,50,66,-1,63,66,79,-1,65,64,80,-1,65,80,81,-1,65,81,82,-1,65,82,66,-1,64,67,83,-1,64,83,80,-1,67,68,84,-1,67,84,83,-1,68,69,85,-1,68,85,84,-1,69,70,86,-1,69,86,85,-1,70,71,87,-1,70,87,86,-1,71,72,88,-1,71,88,87,-1,72,73,89,-1,72,89,88,-1,73,74,90,-1,73,90,89,-1,74,75,91,-1,74,91,90,-1,75,76,92,-1,75,92,91,-1,76,77,93,-1,76,93,92,-1,77,78,94,-1,77,94,93,-1,78,79,95,-1,78,95,94,-1,79,66,82,-1,79,82,95,-1,81,80,83,-1,81,83,84,-1,81,84,85,-1,81,85,86,-1,81,86,87,-1,81,87,88,-1,81,88,89,-1,81,89,90,-1,81,90,91,-1,81,91,92,-1,81,92,93,-1,81,93,94,-1,81,94,95,-1,81,95,82,-1,96,97,98,-1,96,98,99,-1,96,100,101,-1,96,101,102,-1,96,102,103,-1,96,103,97,-1,96,99,104,-1,96,104,100,-1,97,105,106,-1,97,106,98,-1,97,103,107,-1,97,107,105,-1,105,108,109,-1,105,109,106,-1,105,107,110,-1,105,110,108,-1,108,111,112,-1,108,112,109,-1,108,110,113,-1,108,113,111,-1,111,114,115,-1,111,115,112,-1});
  }
}
protected class MFInt321 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {111,113,116,-1,111,116,114,-1,114,117,118,-1,114,118,115,-1,114,116,119,-1,114,119,117,-1,117,120,121,-1,117,121,118,-1,117,119,122,-1,117,122,120,-1,120,123,124,-1,120,124,121,-1,120,122,125,-1,120,125,123,-1,123,126,127,-1,123,127,124,-1,123,125,128,-1,123,128,126,-1,126,129,130,-1,126,130,127,-1,126,128,131,-1,126,131,129,-1,129,132,133,-1,129,133,130,-1,129,131,134,-1,129,134,132,-1,132,135,136,-1,132,136,133,-1,132,134,137,-1,132,137,135,-1,135,138,139,-1,135,139,136,-1,135,137,140,-1,135,140,138,-1,138,141,142,-1,138,142,139,-1,138,140,143,-1,138,143,141,-1,141,100,104,-1,141,104,142,-1,141,143,101,-1,141,101,100,-1,102,101,143,-1,102,143,140,-1,102,140,137,-1,102,137,134,-1,102,134,131,-1,102,131,128,-1,102,128,125,-1,102,125,122,-1,102,122,119,-1,102,119,116,-1,102,116,113,-1,102,113,110,-1,102,110,107,-1,102,107,103,-1,98,106,144,-1,98,144,145,-1,98,145,146,-1,98,146,99,-1,99,146,147,-1,99,147,104,-1,104,147,148,-1,104,148,142,-1,142,148,149,-1,142,149,139,-1,139,149,150,-1,139,150,136,-1,136,150,151,-1,136,151,133,-1,133,151,152,-1,133,152,130,-1,130,152,153,-1,130,153,127,-1,127,153,154,-1,127,154,124,-1,124,154,155,-1,124,155,121,-1,121,155,156,-1,121,156,118,-1,118,156,157,-1,118,157,115,-1,115,157,158,-1,115,158,112,-1,112,158,159,-1,112,159,109,-1,109,159,144,-1,109,144,106,-1,145,144,160,-1,145,160,161,-1,145,161,162,-1,145,162,146,-1,146,162,163,-1,146,163,147,-1,147,163,164,-1,147,164,148,-1,148,164,165,-1,148,165,149,-1,149,165,166,-1,149,166,150,-1,150,166,167,-1,150,167,151,-1,151,167,168,-1,151,168,152,-1,152,168,169,-1,152,169,153,-1,153,169,170,-1,153,170,154,-1,154,170,171,-1,154,171,155,-1,155,171,172,-1,155,172,156,-1,156,172,173,-1,156,173,157,-1,157,173,174,-1,157,174,158,-1,158,174,175,-1,158,175,159,-1,159,175,160,-1,159,160,144,-1,161,160,176,-1,161,176,177,-1,161,177,178,-1,161,178,162,-1,162,178,179,-1,162,179,163,-1,163,179,180,-1,163,180,164,-1,164,180,181,-1,164,181,165,-1,165,181,182,-1,165,182,166,-1,166,182,183,-1,166,183,167,-1,167,183,184,-1,167,184,168,-1,168,184,185,-1,168,185,169,-1,169,185,186,-1,169,186,170,-1,170,186,187,-1,170,187,171,-1,171,187,188,-1,171,188,172,-1,172,188,189,-1,172,189,173,-1,173,189,190,-1,173,190,174,-1,174,190,191,-1,174,191,175,-1,175,191,176,-1,175,176,160,-1,177,176,191,-1,177,191,190,-1,177,190,189,-1,177,189,188,-1,177,188,187,-1,177,187,186,-1,177,186,185,-1,177,185,184,-1,177,184,183,-1,177,183,182,-1,177,182,181,-1,177,181,180,-1,177,180,179,-1,177,179,178,-1});
  }
}
protected class MFVec3f2 {
  protected MFVec3fObject getArray() {
    return new MFVec3fObject(new float[] {-0.07f,0.57f,0f,-0.08f,0.57f,0.01f,-0.08f,0.5f,0.01f,-0.07f,0.5f,0f,-0.08f,0.57f,-0.01f,-0.08f,0.6f,-0.01f,-0.08f,0.6f,0f,-0.08f,0.5f,-0.01f,-0.08f,0.6f,0.01f,-0.08f,0.57f,0.02f,-0.08f,0.5f,0.02f,-0.09f,0.6f,0.02f,-0.09f,0.57f,0.02f,-0.09f,0.5f,0.02f,-0.09f,0.6f,0.02f,-0.1f,0.57f,0.03f,-0.1f,0.5f,0.03f,-0.1f,0.61f,0.03f,-0.11f,0.57f,0.02f,-0.11f,0.5f,0.02f,-0.11f,0.61f,0.02f,-0.12f,0.57f,0.02f,-0.12f,0.5f,0.02f,-0.12f,0.62f,0.02f,-0.12f,0.57f,0.01f,-0.12f,0.5f,0.01f,-0.12f,0.62f,0.01f,-0.13f,0.57f,0f,-0.13f,0.5f,0f,-0.12f,0.62f,0f,-0.12f,0.57f,-0.01f,-0.12f,0.5f,-0.01f,-0.12f,0.62f,-0.01f,-0.12f,0.57f,-0.02f,-0.12f,0.5f,-0.02f,-0.12f,0.62f,-0.02f,-0.11f,0.57f,-0.02f,-0.11f,0.5f,-0.02f,-0.11f,0.61f,-0.02f,-0.1f,0.57f,-0.03f,-0.1f,0.5f,-0.03f,-0.1f,0.61f,-0.03f,-0.09f,0.57f,-0.02f,-0.09f,0.5f,-0.02f,-0.09f,0.6f,-0.02f,-0.08f,0.57f,-0.02f,-0.08f,0.5f,-0.02f,-0.09f,0.6f,-0.02f,-0.06f,0.63f,0f,-0.06f,0.63f,0.01f,-0.07f,0.63f,0.02f,-0.06f,0.63f,-0.01f,-0.07f,0.63f,-0.02f,-0.07f,0.64f,-0.02f,-0.08f,0.64f,-0.03f,-0.09f,0.65f,-0.02f,-0.09f,0.66f,-0.02f,-0.1f,0.66f,-0.01f,-0.1f,0.66f,0f,-0.1f,0.66f,0.01f,-0.09f,0.66f,0.02f,-0.09f,0.65f,0.02f,-0.08f,0.64f,0.03f,-0.07f,0.64f,0.02f,-0.03f,0.65f,0f,-0.03f,0.65f,0.01f,-0.04f,0.66f,0.02f,-0.03f,0.65f,-0.01f,-0.04f,0.66f,-0.02f,-0.04f,0.67f,-0.02f,-0.04f,0.68f,-0.03f,-0.04f,0.69f,-0.02f,-0.04f,0.69f,-0.02f,-0.04f,0.7f,-0.01f,-0.04f,0.7f,0f,-0.04f,0.7f,0.01f,-0.04f,0.69f,0.02f,-0.04f,0.69f,0.02f,-0.04f,0.68f,0.03f,-0.04f,0.67f,0.02f,0f,0.65f,0f,0f,0.66f,0.01f,0f,0.66f,0.02f,0f,0.66f,-0.01f,0f,0.66f,-0.02f,0f,0.67f,-0.02f,0f,0.68f,-0.03f,0f,0.69f,-0.02f,0f,0.7f,-0.02f,0f,0.7f,-0.01f,0f,0.71f,0f,0f,0.7f,0.01f,0f,0.7f,0.02f,0f,0.69f,0.02f,0f,0.68f,0.03f,0f,0.67f,0.02f,0.07f,0.57f,0f,0.07f,0.57f,0.01f,0.07f,0.59f,0.01f,0.07f,0.59f,0f,0.07f,0.57f,-0.01f,0.07f,0.5f,-0.01f,0.07f,0.5f,0f,0.07f,0.5f,0.01f,0.07f,0.59f,-0.01f,0.08f,0.57f,0.02f,0.08f,0.6f,0.02f,0.07f,0.5f,0.02f,0.08f,0.57f,0.02f,0.09f,0.6f,0.02f,0.08f,0.5f,0.02f,0.09f,0.57f,0.03f,0.09f,0.61f,0.03f,0.09f,0.5f,0.03f,0.1f,0.57f,0.02f,0.1f,0.61f,0.02f,0.1f,0.5f,0.02f,0.11f,0.57f,0.02f,0.11f,0.62f,0.02f,0.11f,0.5f,0.02f,0.12f,0.57f,0.01f,0.12f,0.62f,0.01f,0.12f,0.5f,0.01f,0.12f,0.57f,0f,0.12f,0.62f,0f,0.12f,0.5f,0f,0.12f,0.57f,-0.01f,0.12f,0.62f,-0.01f,0.12f,0.5f,-0.01f,0.11f,0.57f,-0.02f,0.11f,0.62f,-0.02f,0.11f,0.5f,-0.02f,0.1f,0.57f,-0.02f,0.1f,0.61f,-0.02f,0.1f,0.5f,-0.02f,0.09f,0.57f,-0.03f,0.09f,0.61f,-0.03f,0.09f,0.5f,-0.03f,0.08f,0.57f,-0.02f,0.09f,0.6f,-0.02f,0.08f,0.5f,-0.02f,0.08f,0.57f,-0.02f,0.08f,0.6f,-0.02f,0.07f,0.5f,-0.02f,0.06f,0.63f,0.02f,0.06f,0.63f,0.01f,0.05f,0.63f,0f,0.06f,0.63f,-0.01f,0.06f,0.63f,-0.02f,0.07f,0.64f,-0.02f,0.07f,0.64f,-0.03f,0.08f,0.65f,-0.02f,0.09f,0.65f,-0.02f,0.09f,0.66f,-0.01f,0.09f,0.66f,0f,0.09f,0.66f,0.01f,0.09f,0.65f,0.02f,0.08f,0.65f,0.02f,0.07f,0.64f,0.03f,0.07f,0.64f,0.02f,0.03f,0.66f,0.02f,0.03f,0.65f,0.01f,0.03f,0.65f,0f,0.03f,0.65f,-0.01f,0.03f,0.66f,-0.02f,0.03f,0.67f,-0.02f,0.03f,0.68f,-0.03f,0.03f,0.69f,-0.02f,0.03f,0.69f,-0.02f,0.04f,0.7f,-0.01f,0.04f,0.7f,0f,0.04f,0.7f,0.01f,0.03f,0.69f,0.02f,0.03f,0.69f,0.02f,0.03f,0.68f,0.03f,0.03f,0.67f,0.02f,0f,0.66f,0.02f,0f,0.66f,0.01f,0f,0.65f,0f,0f,0.66f,-0.01f,0f,0.66f,-0.02f,0f,0.67f,-0.02f,0f,0.68f,-0.03f,0f,0.69f,-0.02f,0f,0.7f,-0.02f,0f,0.7f,-0.01f,0f,0.71f,0f,0f,0.7f,0.01f,0f,0.7f,0.02f,0f,0.69f,0.02f,0f,0.68f,0.03f,0f,0.67f,0.02f});
  }
}
protected class MFString3 {
  protected MFStringObject getArray() {
    return new MFStringObject(new java.lang.String[] {"examples/Savage/HarborEquipment/Buoys/textures/MooringBuoy.jpg"});
  }
}
protected class MFInt324 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {0,1,2,-1,0,2,3,-1,0,4,5,-1,0,5,6,-1,0,3,7,-1,0,7,4,-1,0,6,8,-1,0,8,1,-1,1,9,10,-1,1,10,2,-1,1,8,11,-1,1,11,9,-1,9,12,13,-1,9,13,10,-1,9,11,14,-1,9,14,12,-1,12,15,16,-1,12,16,13,-1,12,14,17,-1,12,17,15,-1,15,18,19,-1,15,19,16,-1,15,17,20,-1,15,20,18,-1,18,21,22,-1,18,22,19,-1,18,20,23,-1,18,23,21,-1,21,24,25,-1,21,25,22,-1,21,23,26,-1,21,26,24,-1,24,27,28,-1,24,28,25,-1,24,26,29,-1,24,29,27,-1,27,30,31,-1,27,31,28,-1,27,29,32,-1,27,32,30,-1,30,33,34,-1,30,34,31,-1,30,32,35,-1,30,35,33,-1,33,36,37,-1,33,37,34,-1,33,35,38,-1,33,38,36,-1,36,39,40,-1,36,40,37,-1,36,38,41,-1,36,41,39,-1,39,42,43,-1,39,43,40,-1,39,41,44,-1,39,44,42,-1,42,45,46,-1,42,46,43,-1,42,44,47,-1,42,47,45,-1,45,48,49,-1,45,49,46,-1,45,47,50,-1,45,50,48,-1,48,51,52,-1,48,52,49,-1,48,50,53,-1,48,53,51,-1,51,54,55,-1,51,55,52,-1,51,53,56,-1,51,56,54,-1,54,57,58,-1,54,58,55,-1,54,56,59,-1,54,59,57,-1,57,60,61,-1,57,61,58,-1,57,59,62,-1,57,62,60,-1,60,63,64,-1,60,64,61,-1,60,62,65,-1,60,65,63,-1,63,66,67,-1,63,67,64,-1,63,65,68,-1,63,68,66,-1,66,69,70,-1,66,70,67,-1,66,68,71,-1,66,71,69,-1,69,72,73,-1,69,73,70,-1,69,71,74,-1,69,74,72,-1,72,75,76,-1,72,76,73,-1,72,74,77,-1,72,77,75,-1,75,78,79,-1,75,79,76,-1,75,77,80,-1,75,80,78,-1,78,81,82,-1,78,82,79,-1,78,80,83,-1,78,83,81,-1,81,84,85,-1,81,85,82,-1,81,83,86,-1,81,86,84,-1,84,87,88,-1,84,88,85,-1,84,86,89,-1,84,89,87,-1,87,90,91,-1,87,91,88,-1,87,89,92,-1,87,92,90,-1,90,93,94,-1,90,94,91,-1,90,92,95,-1,90,95,93,-1,93,4,7,-1,93,7,94,-1,93,95,5,-1,93,5,4,-1,3,2,96,-1,3,96,97,-1,3,97,98,-1,3,98,7,-1,2,10,99,-1,2,99,96,-1,10,13,100,-1,10,100,99,-1,13,16,101,-1,13,101,100,-1,16,19,102,-1,16,102,101,-1,19,22,103,-1,19,103,102,-1,22,25,104,-1,22,104,103,-1,25,28,105,-1,25,105,104,-1,28,31,106,-1,28,106,105,-1,31,34,107,-1,31,107,106,-1,34,37,108,-1,34,108,107,-1,37,40,109,-1,37,109,108,-1,40,43,110,-1,40,110,109,-1,43,46,111,-1,43,111,110,-1,46,49,112,-1,46,112,111,-1,49,52,113,-1,49,113,112,-1,52,55,114,-1,52,114,113,-1,55,58,115,-1,55,115,114,-1,58,61,116,-1,58,116,115,-1,61,64,117,-1,61,117,116,-1,64,67,118,-1,64,118,117,-1,67,70,119,-1,67,119,118,-1,70,73,120,-1,70,120,119,-1,73,76,121,-1,73,121,120,-1,76,79,122,-1,76,122,121,-1,79,82,123,-1,79,123,122,-1,82,85,124,-1,82,124,123,-1,85,88,125,-1,85,125,124,-1,88,91,126,-1,88,126,125,-1,91,94,127,-1,91,127,126,-1,94,7,98,-1,94,98,127,-1,8,6,128,-1,8,128,129,-1,8,129,130,-1,8,130,11,-1,6,5,131,-1,6,131,128,-1,5,95,132,-1,5,132,131,-1,95,92,133,-1,95,133,132,-1,92,89,134,-1,92,134,133,-1,89,86,135,-1,89,135,134,-1,86,83,136,-1,86,136,135,-1,83,80,137,-1,83,137,136,-1});
  }
}
protected class MFInt325 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {80,77,138,-1,80,138,137,-1,77,74,139,-1,77,139,138,-1,74,71,140,-1,74,140,139,-1,71,68,141,-1,71,141,140,-1,68,65,142,-1,68,142,141,-1,65,62,143,-1,65,143,142,-1,62,59,144,-1,62,144,143,-1,59,56,145,-1,59,145,144,-1,56,53,146,-1,56,146,145,-1,53,50,147,-1,53,147,146,-1,50,47,148,-1,50,148,147,-1,47,44,149,-1,47,149,148,-1,44,41,150,-1,44,150,149,-1,41,38,151,-1,41,151,150,-1,38,35,152,-1,38,152,151,-1,35,32,153,-1,35,153,152,-1,32,29,154,-1,32,154,153,-1,29,26,155,-1,29,155,154,-1,26,23,156,-1,26,156,155,-1,23,20,157,-1,23,157,156,-1,20,17,158,-1,20,158,157,-1,17,14,159,-1,17,159,158,-1,14,11,130,-1,14,130,159,-1,129,128,160,-1,129,160,161,-1,129,161,162,-1,129,162,130,-1,128,131,163,-1,128,163,160,-1,131,132,164,-1,131,164,163,-1,132,133,165,-1,132,165,164,-1,133,134,166,-1,133,166,165,-1,134,135,167,-1,134,167,166,-1,135,136,168,-1,135,168,167,-1,136,137,169,-1,136,169,168,-1,137,138,170,-1,137,170,169,-1,138,139,171,-1,138,171,170,-1,139,140,172,-1,139,172,171,-1,140,141,173,-1,140,173,172,-1,141,142,174,-1,141,174,173,-1,142,143,175,-1,142,175,174,-1,143,144,176,-1,143,176,175,-1,144,145,177,-1,144,177,176,-1,145,146,178,-1,145,178,177,-1,146,147,179,-1,146,179,178,-1,147,148,180,-1,147,180,179,-1,148,149,181,-1,148,181,180,-1,149,150,182,-1,149,182,181,-1,150,151,183,-1,150,183,182,-1,151,152,184,-1,151,184,183,-1,152,153,185,-1,152,185,184,-1,153,154,186,-1,153,186,185,-1,154,155,187,-1,154,187,186,-1,155,156,188,-1,155,188,187,-1,156,157,189,-1,156,189,188,-1,157,158,190,-1,157,190,189,-1,158,159,191,-1,158,191,190,-1,159,130,162,-1,159,162,191,-1,161,160,192,-1,161,192,193,-1,161,193,194,-1,161,194,162,-1,160,163,195,-1,160,195,192,-1,163,164,196,-1,163,196,195,-1,164,165,197,-1,164,197,196,-1,165,166,198,-1,165,198,197,-1,166,167,199,-1,166,199,198,-1,167,168,200,-1,167,200,199,-1,168,169,201,-1,168,201,200,-1,169,170,202,-1,169,202,201,-1,170,171,203,-1,170,203,202,-1,171,172,204,-1,171,204,203,-1,172,173,205,-1,172,205,204,-1,173,174,206,-1,173,206,205,-1,174,175,207,-1,174,207,206,-1,175,176,208,-1,175,208,207,-1,176,177,209,-1,176,209,208,-1,177,178,210,-1,177,210,209,-1,178,179,211,-1,178,211,210,-1,179,180,212,-1,179,212,211,-1,180,181,213,-1,180,213,212,-1,181,182,214,-1,181,214,213,-1,182,183,215,-1,182,215,214,-1,183,184,216,-1,183,216,215,-1,184,185,217,-1,184,217,216,-1,185,186,218,-1,185,218,217,-1,186,187,219,-1,186,219,218,-1,187,188,220,-1,187,220,219,-1,188,189,221,-1,188,221,220,-1,189,190,222,-1,189,222,221,-1,190,191,223,-1,190,223,222,-1,191,162,194,-1,191,194,223,-1,97,96,99,-1,97,99,100,-1,97,100,101,-1,97,101,102,-1,97,102,103,-1,97,103,104,-1,97,104,105,-1,97,105,106,-1,97,106,107,-1,97,107,108,-1,97,108,109,-1,97,109,110,-1,97,110,111,-1,97,111,112,-1,97,112,113,-1,97,113,114,-1,97,114,115,-1,97,115,116,-1,97,116,117,-1,97,117,118,-1,97,118,119,-1,97,119,120,-1,97,120,121,-1,97,121,122,-1,97,122,123,-1,97,123,124,-1,97,124,125,-1,97,125,126,-1,97,126,127,-1,97,127,98,-1,193,192,224,-1,193,224,225,-1,193,225,226,-1,193,226,194,-1,192,195,227,-1,192,227,224,-1});
  }
}
protected class MFInt326 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {195,196,228,-1,195,228,227,-1,196,197,229,-1,196,229,228,-1,197,198,230,-1,197,230,229,-1,198,199,231,-1,198,231,230,-1,199,200,232,-1,199,232,231,-1,200,201,233,-1,200,233,232,-1,201,202,234,-1,201,234,233,-1,202,203,235,-1,202,235,234,-1,203,204,236,-1,203,236,235,-1,204,205,237,-1,204,237,236,-1,205,206,238,-1,205,238,237,-1,206,207,239,-1,206,239,238,-1,207,208,240,-1,207,240,239,-1,208,209,241,-1,208,241,240,-1,209,210,242,-1,209,242,241,-1,210,211,243,-1,210,243,242,-1,211,212,244,-1,211,244,243,-1,212,213,245,-1,212,245,244,-1,213,214,246,-1,213,246,245,-1,214,215,247,-1,214,247,246,-1,215,216,248,-1,215,248,247,-1,216,217,249,-1,216,249,248,-1,217,218,250,-1,217,250,249,-1,218,219,251,-1,218,251,250,-1,219,220,252,-1,219,252,251,-1,220,221,253,-1,220,253,252,-1,221,222,254,-1,221,254,253,-1,222,223,255,-1,222,255,254,-1,223,194,226,-1,223,226,255,-1,225,224,256,-1,225,256,257,-1,225,257,258,-1,225,258,226,-1,224,227,259,-1,224,259,256,-1,227,228,260,-1,227,260,259,-1,228,229,261,-1,228,261,260,-1,229,230,262,-1,229,262,261,-1,230,231,263,-1,230,263,262,-1,231,232,264,-1,231,264,263,-1,232,233,265,-1,232,265,264,-1,233,234,266,-1,233,266,265,-1,234,235,267,-1,234,267,266,-1,235,236,268,-1,235,268,267,-1,236,237,269,-1,236,269,268,-1,237,238,270,-1,237,270,269,-1,238,239,271,-1,238,271,270,-1,239,240,272,-1,239,272,271,-1,240,241,273,-1,240,273,272,-1,241,242,274,-1,241,274,273,-1,242,243,275,-1,242,275,274,-1,243,244,276,-1,243,276,275,-1,244,245,277,-1,244,277,276,-1,245,246,278,-1,245,278,277,-1,246,247,279,-1,246,279,278,-1,247,248,280,-1,247,280,279,-1,248,249,281,-1,248,281,280,-1,249,250,282,-1,249,282,281,-1,250,251,283,-1,250,283,282,-1,251,252,284,-1,251,284,283,-1,252,253,285,-1,252,285,284,-1,253,254,286,-1,253,286,285,-1,254,255,287,-1,254,287,286,-1,255,226,258,-1,255,258,287,-1,257,256,259,-1,257,259,260,-1,257,260,261,-1,257,261,262,-1,257,262,263,-1,257,263,264,-1,257,264,265,-1,257,265,266,-1,257,266,267,-1,257,267,268,-1,257,268,269,-1,257,269,270,-1,257,270,271,-1,257,271,272,-1,257,272,273,-1,257,273,274,-1,257,274,275,-1,257,275,276,-1,257,276,277,-1,257,277,278,-1,257,278,279,-1,257,279,280,-1,257,280,281,-1,257,281,282,-1,257,282,283,-1,257,283,284,-1,257,284,285,-1,257,285,286,-1,257,286,287,-1,257,287,258,-1});
  }
}
protected class MFInt327 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {0,1,2,-1,0,2,3,-1,0,4,5,-1,0,5,6,-1,0,3,7,-1,0,7,4,-1,0,6,8,-1,0,8,1,-1,1,9,10,-1,1,10,2,-1,1,8,11,-1,1,11,9,-1,9,12,13,-1,9,13,10,-1,9,11,14,-1,9,14,12,-1,12,15,16,-1,12,16,13,-1,12,14,17,-1,12,17,15,-1,15,18,19,-1,15,19,16,-1,15,17,20,-1,15,20,18,-1,18,21,22,-1,18,22,19,-1,18,20,23,-1,18,23,21,-1,21,24,25,-1,21,25,22,-1,21,23,26,-1,21,26,24,-1,24,27,28,-1,24,28,25,-1,24,26,29,-1,24,29,27,-1,27,30,31,-1,27,31,28,-1,27,29,32,-1,27,32,30,-1,30,33,34,-1,30,34,31,-1,30,32,35,-1,30,35,33,-1,33,36,37,-1,33,37,34,-1,33,35,38,-1,33,38,36,-1,36,39,40,-1,36,40,37,-1,36,38,41,-1,36,41,39,-1,39,42,43,-1,39,43,40,-1,39,41,44,-1,39,44,42,-1,42,45,46,-1,42,46,43,-1,42,44,47,-1,42,47,45,-1,45,48,49,-1,45,49,46,-1,45,47,50,-1,45,50,48,-1,48,51,52,-1,48,52,49,-1,48,50,53,-1,48,53,51,-1,51,54,55,-1,51,55,52,-1,51,53,56,-1,51,56,54,-1,54,57,58,-1,54,58,55,-1,54,56,59,-1,54,59,57,-1,57,60,61,-1,57,61,58,-1,57,59,62,-1,57,62,60,-1,60,63,64,-1,60,64,61,-1,60,62,65,-1,60,65,63,-1,63,66,67,-1,63,67,64,-1,63,65,68,-1,63,68,66,-1,66,69,70,-1,66,70,67,-1,66,68,71,-1,66,71,69,-1,69,72,73,-1,69,73,70,-1,69,71,74,-1,69,74,72,-1,72,75,76,-1,72,76,73,-1,72,74,77,-1,72,77,75,-1,78,79,80,-1,78,80,81,-1,78,82,83,-1,78,83,79,-1,79,84,85,-1,79,85,80,-1,79,83,86,-1,79,86,84,-1,84,87,88,-1,84,88,85,-1,84,86,89,-1,84,89,87,-1,87,90,91,-1,87,91,88,-1,87,89,92,-1,87,92,90,-1,90,93,94,-1,90,94,91,-1,90,92,95,-1,90,95,93,-1,93,96,97,-1,93,97,94,-1,93,95,98,-1,93,98,96,-1,96,4,7,-1,96,7,97,-1,96,98,5,-1,96,5,4,-1,3,2,99,-1,3,99,100,-1,3,100,101,-1,3,101,7,-1,2,10,102,-1,2,102,99,-1,10,13,103,-1,10,103,102,-1,13,16,104,-1,13,104,103,-1,16,19,105,-1,16,105,104,-1,19,22,106,-1,19,106,105,-1,22,25,107,-1,22,107,106,-1,25,28,108,-1,25,108,107,-1,28,31,109,-1,28,109,108,-1,31,34,110,-1,31,110,109,-1,34,37,111,-1,34,111,110,-1,37,40,112,-1,37,112,111,-1,40,43,113,-1,40,113,112,-1,43,46,114,-1,43,114,113,-1,46,49,115,-1,46,115,114,-1,49,52,116,-1,49,116,115,-1,52,55,117,-1,52,117,116,-1,55,58,118,-1,55,118,117,-1,58,61,119,-1,58,119,118,-1,61,64,120,-1,61,120,119,-1,64,67,121,-1,64,121,120,-1,67,70,122,-1,67,122,121,-1,70,73,123,-1,70,123,122,-1,73,76,124,-1,73,124,123,-1,81,80,125,-1,81,125,126,-1,80,85,127,-1,80,127,125,-1,85,88,128,-1,85,128,127,-1,88,91,129,-1,88,129,128,-1,91,94,130,-1,91,130,129,-1,94,97,131,-1,94,131,130,-1,97,7,101,-1,97,101,131,-1,8,6,132,-1,8,132,133,-1,8,133,134,-1,8,134,11,-1,6,5,135,-1,6,135,132,-1,5,98,136,-1,5,136,135,-1,98,95,137,-1,98,137,136,-1,95,92,138,-1,95,138,137,-1,92,89,139,-1,92,139,138,-1,89,86,140,-1,89,140,139,-1,86,83,141,-1,86,141,140,-1});
  }
}
protected class MFInt328 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {83,82,142,-1,83,142,141,-1,77,74,143,-1,77,143,144,-1,74,71,145,-1,74,145,143,-1,71,68,146,-1,71,146,145,-1,68,65,147,-1,68,147,146,-1,65,62,148,-1,65,148,147,-1,62,59,149,-1,62,149,148,-1,59,56,150,-1,59,150,149,-1,56,53,151,-1,56,151,150,-1,53,50,152,-1,53,152,151,-1,50,47,153,-1,50,153,152,-1,47,44,154,-1,47,154,153,-1,44,41,155,-1,44,155,154,-1,41,38,156,-1,41,156,155,-1,38,35,157,-1,38,157,156,-1,35,32,158,-1,35,158,157,-1,32,29,159,-1,32,159,158,-1,29,26,160,-1,29,160,159,-1,26,23,161,-1,26,161,160,-1,23,20,162,-1,23,162,161,-1,20,17,163,-1,20,163,162,-1,17,14,164,-1,17,164,163,-1,14,11,134,-1,14,134,164,-1,133,132,165,-1,133,165,166,-1,133,166,167,-1,133,167,134,-1,132,135,168,-1,132,168,165,-1,135,136,169,-1,135,169,168,-1,136,137,170,-1,136,170,169,-1,137,138,171,-1,137,171,170,-1,138,139,172,-1,138,172,171,-1,139,140,173,-1,139,173,172,-1,140,141,174,-1,140,174,173,-1,141,142,175,-1,141,175,174,-1,144,143,176,-1,144,176,177,-1,143,145,178,-1,143,178,176,-1,145,146,179,-1,145,179,178,-1,146,147,180,-1,146,180,179,-1,147,148,181,-1,147,181,180,-1,148,149,182,-1,148,182,181,-1,149,150,183,-1,149,183,182,-1,150,151,184,-1,150,184,183,-1,151,152,185,-1,151,185,184,-1,152,153,186,-1,152,186,185,-1,153,154,187,-1,153,187,186,-1,154,155,188,-1,154,188,187,-1,155,156,189,-1,155,189,188,-1,156,157,190,-1,156,190,189,-1,157,158,191,-1,157,191,190,-1,158,159,192,-1,158,192,191,-1,159,160,193,-1,159,193,192,-1,160,161,194,-1,160,194,193,-1,161,162,195,-1,161,195,194,-1,162,163,196,-1,162,196,195,-1,163,164,197,-1,163,197,196,-1,164,134,167,-1,164,167,197,-1,166,165,198,-1,166,198,199,-1,166,199,200,-1,166,200,167,-1,165,168,201,-1,165,201,198,-1,168,169,202,-1,168,202,201,-1,169,170,203,-1,169,203,202,-1,170,171,204,-1,170,204,203,-1,171,172,205,-1,171,205,204,-1,172,173,206,-1,172,206,205,-1,173,174,207,-1,173,207,206,-1,174,175,208,-1,174,208,207,-1,177,176,209,-1,177,209,210,-1,176,178,211,-1,176,211,209,-1,178,179,212,-1,178,212,211,-1,179,180,213,-1,179,213,212,-1,180,181,214,-1,180,214,213,-1,181,182,215,-1,181,215,214,-1,182,183,216,-1,182,216,215,-1,183,184,217,-1,183,217,216,-1,184,185,218,-1,184,218,217,-1,185,186,219,-1,185,219,218,-1,186,187,220,-1,186,220,219,-1,187,188,221,-1,187,221,220,-1,188,189,222,-1,188,222,221,-1,189,190,223,-1,189,223,222,-1,190,191,224,-1,190,224,223,-1,191,192,225,-1,191,225,224,-1,192,193,226,-1,192,226,225,-1,193,194,227,-1,193,227,226,-1,194,195,228,-1,194,228,227,-1,195,196,229,-1,195,229,228,-1,196,197,230,-1,196,230,229,-1,197,167,200,-1,197,200,230,-1,100,99,102,-1,100,102,103,-1,100,103,104,-1,100,104,105,-1,100,105,106,-1,100,106,107,-1,100,107,108,-1,100,108,109,-1,100,109,110,-1,100,110,111,-1,100,111,112,-1,100,112,113,-1,100,113,114,-1,100,114,115,-1,100,115,116,-1,100,116,117,-1,100,117,118,-1,100,118,119,-1,100,119,120,-1,100,120,121,-1,100,121,122,-1,100,122,123,-1,100,123,126,-1,100,126,125,-1,100,125,127,-1,100,127,128,-1,100,128,129,-1,100,129,130,-1,100,130,131,-1,100,131,101,-1,199,198,198,-1,199,198,231,-1,199,231,232,-1,199,232,200,-1,198,201,233,-1,198,233,198,-1});
  }
}
protected class MFInt329 {
  protected MFInt32Object getArray() {
    return new MFInt32Object(new int[] {201,202,234,-1,201,234,233,-1,202,203,235,-1,202,235,234,-1,203,204,204,-1,203,204,235,-1,204,205,236,-1,204,236,204,-1,205,206,237,-1,205,237,236,-1,206,207,238,-1,206,238,237,-1,207,208,208,-1,207,208,238,-1,210,209,239,-1,210,239,210,-1,209,211,240,-1,209,240,239,-1,211,212,241,-1,211,241,240,-1,212,213,213,-1,212,213,241,-1,213,214,242,-1,213,242,213,-1,214,215,243,-1,214,243,242,-1,215,216,244,-1,215,244,243,-1,216,217,217,-1,216,217,244,-1,217,218,245,-1,217,245,217,-1,218,219,246,-1,218,246,245,-1,219,220,247,-1,219,247,246,-1,220,221,221,-1,220,221,247,-1,221,222,248,-1,221,248,221,-1,222,223,249,-1,222,249,248,-1,223,224,250,-1,223,250,249,-1,224,225,225,-1,224,225,250,-1,225,226,251,-1,225,251,225,-1,226,227,252,-1,226,252,251,-1,227,228,253,-1,227,253,252,-1,228,229,229,-1,228,229,253,-1,229,230,254,-1,229,254,229,-1,230,200,232,-1,230,232,254,-1,231,198,255,-1,231,255,256,-1,231,256,257,-1,231,257,232,-1,198,233,258,-1,198,258,255,-1,233,234,259,-1,233,259,258,-1,234,235,260,-1,234,260,259,-1,235,204,261,-1,235,261,260,-1,204,236,262,-1,204,262,261,-1,236,237,263,-1,236,263,262,-1,237,238,264,-1,237,264,263,-1,238,208,265,-1,238,265,264,-1,210,239,266,-1,210,266,267,-1,239,240,268,-1,239,268,266,-1,240,241,269,-1,240,269,268,-1,241,213,270,-1,241,270,269,-1,213,242,271,-1,213,271,270,-1,242,243,272,-1,242,272,271,-1,243,244,273,-1,243,273,272,-1,244,217,274,-1,244,274,273,-1,217,245,275,-1,217,275,274,-1,245,246,276,-1,245,276,275,-1,246,247,277,-1,246,277,276,-1,247,221,278,-1,247,278,277,-1,221,248,279,-1,221,279,278,-1,248,249,280,-1,248,280,279,-1,249,250,281,-1,249,281,280,-1,250,225,282,-1,250,282,281,-1,225,251,283,-1,225,283,282,-1,251,252,284,-1,251,284,283,-1,252,253,285,-1,252,285,284,-1,253,229,286,-1,253,286,285,-1,229,254,287,-1,229,287,286,-1,254,232,257,-1,254,257,287,-1,256,255,258,-1,256,258,259,-1,256,259,260,-1,256,260,261,-1,256,261,262,-1,256,262,263,-1,256,263,264,-1,256,264,265,-1,256,265,266,-1,256,266,268,-1,256,268,269,-1,256,269,270,-1,256,270,271,-1,256,271,272,-1,256,272,273,-1,256,273,274,-1,256,274,275,-1,256,275,276,-1,256,276,277,-1,256,277,278,-1,256,278,279,-1,256,279,280,-1,256,280,281,-1,256,281,282,-1,256,282,283,-1,256,283,284,-1,256,284,285,-1,256,285,286,-1,256,286,287,-1,256,287,257,-1});
  }
}
protected class MFVec3f10 {
  protected MFVec3fObject getArray() {
    return new MFVec3fObject(new float[] {1f,0.276f,0f,0.98079f,0.276f,0.19509f,0.98079f,-0.6623f,0.19509f,1f,-0.6623f,0f,0.98079f,0.276f,-0.19509f,0.93371f,0.34f,-0.18573f,0.952f,0.34f,0f,0.98079f,-0.6623f,-0.19509f,0.93371f,0.34f,0.18573f,0.92388f,0.276f,0.38268f,0.92388f,-0.6623f,0.38268f,0.87953f,0.34f,0.36432f,0.83147f,0.276f,0.55557f,0.83147f,-0.6623f,0.55557f,0.79156f,0.34f,0.5289f,0.70711f,0.276f,0.70711f,0.70711f,-0.6623f,0.70711f,0.67317f,0.34f,0.67317f,0.55557f,0.276f,0.83147f,0.55557f,-0.6623f,0.83147f,0.5289f,0.34f,0.79156f,0.38268f,0.276f,0.92388f,0.38268f,-0.6623f,0.92388f,0.36432f,0.34f,0.87953f,0.19509f,0.276f,0.98079f,0.19509f,-0.6623f,0.98079f,0.18573f,0.34f,0.93371f,0f,0.276f,1f,0f,-0.6623f,1f,0f,0.34f,0.952f,-0.19509f,0.276f,0.98079f,-0.19509f,-0.6623f,0.98079f,-0.18573f,0.34f,0.93371f,-0.38268f,0.276f,0.92388f,-0.38268f,-0.6623f,0.92388f,-0.36432f,0.34f,0.87953f,-0.55557f,0.276f,0.83147f,-0.55557f,-0.6623f,0.83147f,-0.5289f,0.34f,0.79156f,-0.70711f,0.276f,0.70711f,-0.70711f,-0.6623f,0.70711f,-0.67317f,0.34f,0.67317f,-0.83147f,0.276f,0.55557f,-0.83147f,-0.6623f,0.55557f,-0.79156f,0.34f,0.5289f,-0.92388f,0.276f,0.38268f,-0.92388f,-0.6623f,0.38268f,-0.87953f,0.34f,0.36432f,-0.98079f,0.276f,0.19509f,-0.98079f,-0.6623f,0.19509f,-0.93371f,0.34f,0.18573f,-1f,0.276f,0f,-1f,-0.6623f,0f,-0.952f,0.34f,0f,-0.98079f,0.276f,-0.19509f,-0.98079f,-0.6623f,-0.19509f,-0.93371f,0.34f,-0.18573f,-0.92388f,0.276f,-0.38268f,-0.92388f,-0.6623f,-0.38268f,-0.87953f,0.34f,-0.36432f,-0.83147f,0.276f,-0.55557f,-0.83147f,-0.6623f,-0.55557f,-0.79156f,0.34f,-0.5289f,-0.70711f,0.276f,-0.70711f,-0.70711f,-0.6623f,-0.70711f,-0.67317f,0.34f,-0.67317f,-0.55557f,0.276f,-0.83147f,-0.55557f,-0.6623f,-0.83147f,-0.5289f,0.34f,-0.79156f,-0.38268f,0.276f,-0.92388f,-0.38268f,-0.6623f,-0.92388f,-0.36432f,0.34f,-0.87953f,-0.19509f,0.276f,-0.98079f,-0.19509f,-0.6623f,-0.98079f,-0.18573f,0.34f,-0.93371f,0f,0.276f,-1f,0f,-0.6623f,-1f,0f,0.34f,-0.952f,0.19509f,0.276f,-0.98079f,0.19509f,-0.6623f,-0.98079f,0.18573f,0.34f,-0.93371f,0.38268f,0.276f,-0.92388f,0.38268f,-0.6623f,-0.92388f,0.36432f,0.34f,-0.87953f,0.55557f,0.276f,-0.83147f,0.55557f,-0.6623f,-0.83147f,0.5289f,0.34f,-0.79156f,0.70711f,0.276f,-0.70711f,0.70711f,-0.6623f,-0.70711f,0.67317f,0.34f,-0.67317f,0.83147f,0.276f,-0.55557f,0.83147f,-0.6623f,-0.55557f,0.79156f,0.34f,-0.5289f,0.92388f,0.276f,-0.38268f,0.92388f,-0.6623f,-0.38268f,0.87953f,0.34f,-0.36432f,0.28009f,-1.53955f,0.05571f,0.28558f,-1.53955f,0f,0.28009f,-1.53955f,-0.05571f,0.26384f,-1.53955f,0.10929f,0.23745f,-1.53955f,0.15866f,0.20194f,-1.53955f,0.20194f,0.15866f,-1.53955f,0.23745f,0.10929f,-1.53955f,0.26384f,0.05571f,-1.53955f,0.28009f,0f,-1.53955f,0.28558f,-0.05571f,-1.53955f,0.28009f,-0.10929f,-1.53955f,0.26384f,-0.15866f,-1.53955f,0.23745f,-0.20194f,-1.53955f,0.20194f,-0.23745f,-1.53955f,0.15866f,-0.26384f,-1.53955f,0.10929f,-0.28009f,-1.53955f,0.05571f,-0.28558f,-1.53955f,0f,-0.28009f,-1.53955f,-0.05571f,-0.26384f,-1.53955f,-0.10929f,-0.23745f,-1.53955f,-0.15866f,-0.20194f,-1.53955f,-0.20194f,-0.15866f,-1.53955f,-0.23745f,-0.10929f,-1.53955f,-0.26384f,-0.05571f,-1.53955f,-0.28009f,0f,-1.53955f,-0.28558f,0.05571f,-1.53955f,-0.28009f,0.10929f,-1.53955f,-0.26384f,0.15866f,-1.53955f,-0.23745f,0.20194f,-1.53955f,-0.20194f,0.23745f,-1.53955f,-0.15866f,0.26384f,-1.53955f,-0.10929f,0.78826f,0.43956f,0f,0.77311f,0.43956f,0.15378f,0.72825f,0.43956f,0.30165f,0.77311f,0.43956f,-0.15378f,0.72825f,0.43956f,-0.30165f,0.65541f,0.43956f,-0.43793f,0.55738f,0.43956f,-0.55738f,0.43793f,0.43956f,-0.65541f,0.30165f,0.43956f,-0.72825f,0.15378f,0.43956f,-0.77311f,0f,0.43956f,-0.78826f,-0.15378f,0.43956f,-0.77311f,-0.30165f,0.43956f,-0.72825f,-0.43793f,0.43956f,-0.65541f,-0.55738f,0.43956f,-0.55738f,-0.65541f,0.43956f,-0.43793f,-0.72825f,0.43956f,-0.30165f,-0.77311f,0.43956f,-0.15378f,-0.78826f,0.43956f,0f,-0.77311f,0.43956f,0.15378f,-0.72825f,0.43956f,0.30165f,-0.65541f,0.43956f,0.43793f,-0.55738f,0.43956f,0.55738f,-0.43793f,0.43956f,0.65541f,-0.30165f,0.43956f,0.72825f,-0.15378f,0.43956f,0.77311f,0f,0.43956f,0.78826f,0.15378f,0.43956f,0.77311f,0.30165f,0.43956f,0.72825f,0.43793f,0.43956f,0.65541f,0.55738f,0.43956f,0.55738f,0.65541f,0.43956f,0.43793f,0.29638f,0.50356f,0f,0.29069f,0.50356f,0.05782f,0.27382f,0.50356f,0.11342f,0.29069f,0.50356f,-0.05782f,0.27382f,0.50356f,-0.11342f,0.24643f,0.50356f,-0.16466f,0.20958f,0.50356f,-0.20958f,0.16466f,0.50356f,-0.24643f,0.11342f,0.50356f,-0.27382f,0.05782f,0.50356f,-0.29069f,0f,0.50356f,-0.29638f,-0.05782f,0.50356f,-0.29069f,-0.11342f,0.50356f,-0.27382f,-0.16466f,0.50356f,-0.24643f,-0.20958f,0.50356f,-0.20958f,-0.24643f,0.50356f,-0.16466f,-0.27382f,0.50356f,-0.11342f,-0.29069f,0.50356f,-0.05782f,-0.29638f,0.50356f,0f,-0.29069f,0.50356f,0.05782f,-0.27382f,0.50356f,0.11342f,-0.24643f,0.50356f,0.16466f,-0.20958f,0.50356f,0.20958f,-0.16466f,0.50356f,0.24643f,-0.11342f,0.50356f,0.27382f,-0.05782f,0.50356f,0.29069f,0f,0.50356f,0.29638f,0.05782f,0.50356f,0.29069f,0.11342f,0.50356f,0.27382f,0.16466f,0.50356f,0.24643f,0.20958f,0.50356f,0.20958f,0.24643f,0.50356f,0.16466f,0.29638f,0.5398f,0f,0.29069f,0.5398f,0.05782f,0.27382f,0.5398f,0.11342f,0.29069f,0.5398f,-0.05782f,0.27382f,0.5398f,-0.11342f,0.24643f,0.5398f,-0.16466f,0.20958f,0.5398f,-0.20958f,0.16466f,0.5398f,-0.24643f,0.11342f,0.5398f,-0.27382f,0.05782f,0.5398f,-0.29069f,0f,0.5398f,-0.29638f,-0.05782f,0.5398f,-0.29069f,-0.11342f,0.5398f,-0.27382f,-0.16466f,0.5398f,-0.24643f,-0.20958f,0.5398f,-0.20958f,-0.24643f,0.5398f,-0.16466f,-0.27382f,0.5398f,-0.11342f,-0.29069f,0.5398f,-0.05782f,-0.29638f,0.5398f,0f,-0.29069f,0.5398f,0.05782f,-0.27382f,0.5398f,0.11342f,-0.24643f,0.5398f,0.16466f,-0.20958f,0.5398f,0.20958f,-0.16466f,0.5398f,0.24643f,-0.11342f,0.5398f,0.27382f,-0.05782f,0.5398f,0.29069f,0f,0.5398f,0.29638f,0.05782f,0.5398f,0.29069f,0.11342f,0.5398f,0.27382f,0.16466f,0.5398f,0.24643f,0.20958f,0.5398f,0.20958f,0.24643f,0.5398f,0.16466f,0.25311f,0.5398f,0f,0.24825f,0.5398f,0.04938f,0.23385f,0.5398f,0.09686f,0.24825f,0.5398f,-0.04938f,0.23385f,0.5398f,-0.09686f,0.21046f,0.5398f,-0.14062f,0.17898f,0.5398f,-0.17898f,0.14062f,0.5398f,-0.21046f,0.09686f,0.5398f,-0.23385f,0.04938f,0.5398f,-0.24825f,0f,0.5398f,-0.25311f,-0.04938f,0.5398f,-0.24825f,-0.09686f,0.5398f,-0.23385f,-0.14062f,0.5398f,-0.21046f,-0.17898f,0.5398f,-0.17898f,-0.21046f,0.5398f,-0.14062f,-0.23385f,0.5398f,-0.09686f,-0.24825f,0.5398f,-0.04938f,-0.25311f,0.5398f,0f,-0.24825f,0.5398f,0.04938f,-0.23385f,0.5398f,0.09686f,-0.21046f,0.5398f,0.14062f,-0.17898f,0.5398f,0.17898f,-0.14062f,0.5398f,0.21046f,-0.09686f,0.5398f,0.23385f,-0.04938f,0.5398f,0.24825f,0f,0.5398f,0.25311f,0.04938f,0.5398f,0.24825f,0.09686f,0.5398f,0.23385f,0.14062f,0.5398f,0.21046f,0.17898f,0.5398f,0.17898f,0.21046f,0.5398f,0.14062f,0.25311f,0.51249f,0f,0.24825f,0.51249f,0.04938f,0.23385f,0.51249f,0.09686f,0.24825f,0.51249f,-0.04938f,0.23385f,0.51249f,-0.09686f,0.21046f,0.51249f,-0.14062f,0.17898f,0.51249f,-0.17898f,0.14062f,0.51249f,-0.21046f,0.09686f,0.51249f,-0.23385f,0.04938f,0.51249f,-0.24825f,0f,0.51249f,-0.25311f,-0.04938f,0.51249f,-0.24825f,-0.09686f,0.51249f,-0.23385f,-0.14062f,0.51249f,-0.21046f,-0.17898f,0.51249f,-0.17898f,-0.21046f,0.51249f,-0.14062f,-0.23385f,0.51249f,-0.09686f,-0.24825f,0.51249f,-0.04938f,-0.25311f,0.51249f,0f,-0.24825f,0.51249f,0.04938f,-0.23385f,0.51249f,0.09686f,-0.21046f,0.51249f,0.14062f,-0.17898f,0.51249f,0.17898f,-0.14062f,0.51249f,0.21046f});
  }
}
protected class MFVec3f11 {
  protected MFVec3fObject getArray() {
    return new MFVec3fObject(new float[] {-0.09686f,0.51249f,0.23385f,-0.04938f,0.51249f,0.24825f,0f,0.51249f,0.25311f,0.04938f,0.51249f,0.24825f,0.09686f,0.51249f,0.23385f,0.14062f,0.51249f,0.21046f,0.17898f,0.51249f,0.17898f,0.21046f,0.51249f,0.14062f});
  }
}
protected class MFVec2f12 {
  protected MFVec2fObject getArray() {
    return new MFVec2fObject(new float[] {0.75f,0.873f,0.719f,0.873f,0.719f,0.422f,0.75f,0.422f,0.781f,0.873f,0.781f,0.904f,0.75f,0.904f,0.781f,0.422f,0.719f,0.904f,0.688f,0.873f,0.688f,0.422f,0.687f,0.904f,0.656f,0.873f,0.656f,0.422f,0.656f,0.904f,0.625f,0.873f,0.625f,0.422f,0.625f,0.904f,0.594f,0.873f,0.594f,0.422f,0.594f,0.904f,0.562f,0.873f,0.562f,0.422f,0.563f,0.904f,0.531f,0.873f,0.531f,0.422f,0.531f,0.904f,0.5f,0.873f,0.5f,0.422f,0.5f,0.904f,0.469f,0.873f,0.469f,0.422f,0.469f,0.904f,0.438f,0.873f,0.438f,0.422f,0.437f,0.904f,0.406f,0.873f,0.406f,0.422f,0.406f,0.904f,0.375f,0.873f,0.375f,0.422f,0.375f,0.904f,0.344f,0.873f,0.344f,0.422f,0.344f,0.904f,0.312f,0.873f,0.312f,0.422f,0.313f,0.904f,0.281f,0.873f,0.281f,0.422f,0.281f,0.904f,0.25f,0.873f,0.25f,0.422f,0.25f,0.904f,0.219f,0.873f,0.219f,0.422f,0.219f,0.904f,0.188f,0.873f,0.188f,0.422f,0.187f,0.904f,0.156f,0.873f,0.156f,0.422f,0.156f,0.904f,0.125f,0.873f,0.125f,0.422f,0.125f,0.904f,0.094f,0.873f,0.094f,0.422f,0.094f,0.904f,0.062f,0.873f,0.062f,0.422f,0.063f,0.904f,0.031f,0.873f,0.031f,0.422f,0.031f,0.904f,0f,0.873f,0f,0.422f,0f,0.904f,1f,0.873f,0.969f,0.873f,0.969f,0.422f,1f,0.422f,1f,0.904f,0.969f,0.904f,0.938f,0.873f,0.938f,0.422f,0.937f,0.904f,0.906f,0.873f,0.906f,0.422f,0.906f,0.904f,0.875f,0.873f,0.875f,0.422f,0.875f,0.904f,0.844f,0.873f,0.844f,0.422f,0.844f,0.904f,0.812f,0.873f,0.812f,0.422f,0.813f,0.904f,0.719f,0f,0.75f,0f,0.781f,0f,0.687f,0f,0.656f,0f,0.625f,0f,0.594f,0f,0.563f,0f,0.531f,0f,0.5f,0f,0.469f,0f,0.437f,0f,0.406f,0f,0.375f,0f,0.344f,0f,0.313f,0f,0.281f,0f,0.25f,0f,0.219f,0f,0.187f,0f,0.156f,0f,0.125f,0f,0.094f,0f,0.063f,0f,0.031f,0f,0f,0f,0.969f,0f,1f,0f,0.937f,0f,0.906f,0f,0.875f,0f,0.844f,0f,0.813f,0f,0.75f,0.952f,0.719f,0.952f,0.687f,0.952f,0.781f,0.952f,0.813f,0.952f,0.844f,0.952f,0.875f,0.952f,0.906f,0.952f,0.937f,0.952f,0.969f,0.952f,1f,0.952f,0.031f,0.952f,0f,0.952f,0.063f,0.952f,0.094f,0.952f,0.125f,0.952f,0.156f,0.952f,0.187f,0.952f,0.219f,0.952f,0.25f,0.952f,0.281f,0.952f,0.313f,0.952f,0.344f,0.952f,0.375f,0.952f,0.406f,0.952f,0.437f,0.952f,0.469f,0.952f,0.5f,0.952f,0.531f,0.952f,0.563f,0.952f,0.594f,0.952f,0.625f,0.952f,0.656f,0.952f,0.75f,0.983f,0.719f,0.983f,0.688f,0.983f,0.781f,0.983f,0.812f,0.983f,0.844f,0.983f,0.875f,0.983f,0.906f,0.983f,0.938f,0.983f,0.969f,0.983f,1f,0.983f,0.031f,0.983f,0f,0.983f,0.062f,0.983f,0.094f,0.983f,0.125f,0.983f,0.156f,0.983f,0.188f,0.983f,0.219f,0.983f,0.25f,0.983f,0.281f,0.983f,0.312f,0.983f,0.344f,0.983f,0.375f,0.983f,0.406f,0.983f,0.438f,0.983f,0.469f,0.983f,0.5f,0.983f,0.531f,0.983f,0.562f,0.983f,0.594f,0.983f,0.625f,0.983f,0.656f,0.983f,0.75f,1f,0.719f,1f,0.688f,1f,0.781f,1f,0.812f,1f,0.844f,1f,0.875f,1f,0.906f,1f,0.938f,1f,0.969f,1f,1f,1f,0.031f,1f,0f,1f,0.062f,1f,0.094f,1f,0.125f,1f,0.156f,1f,0.188f,1f,0.219f,1f,0.25f,1f,0.281f,1f,0.312f,1f,0.344f,1f,0.375f,1f,0.406f,1f,0.438f,1f,0.469f,1f,0.5f,1f,0.531f,1f,0.562f,1f,0.594f,1f,0.625f,1f,0.656f,1f,0.719f,1f,0.688f,1f,0.781f,1f,0.813f,1f,0.844f,1f,0.906f,1f,0.938f,1f,0.969f,1f,0.031f,1f,0.063f,1f,0.094f,1f,0.156f,1f,0.187f,1f,0.219f,1f,0.281f,1f,0.313f,1f,0.344f,1f,0.406f,1f,0.437f,1f,0.469f,1f,0.531f,1f,0.563f,1f,0.594f,1f,0.656f,1f,0.75f,0.987f,0.719f,0.987f,0.688f,0.987f,0.781f,0.987f,0.813f,0.987f,0.844f,0.987f,0.875f,0.987f,0.906f,0.987f,0.938f,0.987f,0.969f,0.987f,1f,0.987f,0.031f,0.987f,0f,0.987f,0.063f,0.987f,0.094f,0.987f,0.125f,0.987f,0.156f,0.987f,0.187f,0.987f,0.219f,0.987f,0.25f,0.987f,0.281f,0.987f,0.313f,0.987f,0.344f,0.987f,0.375f,0.987f,0.406f,0.987f,0.437f,0.987f,0.469f,0.987f,0.5f,0.987f,0.531f,0.987f,0.563f,0.987f,0.594f,0.987f,0.625f,0.987f,0.656f,0.987f});
  }
}
}
