
package main

import (
	"encoding/xml"
	"fmt"
	"io"
	"log"
	"net/http"
	"os"

	"gox3d/x3d" // Assumes your module is named x3d-go-tester

	// Imports for the CGo-based libxml2 wrapper
	"github.com/lestrrat-go/libxml2"
	"github.com/lestrrat-go/libxml2/xsd"
)

// ... (Helper functions remain the same) ...
func stringPtr(s string) *string { return &s }
func floatPtr(f float32) *float32 { return &f }
func doublePtr(d float64) *float64 { return &d }
func boolPtr(b bool) *bool       { return &b }
func int32Ptr(i int32) *int32    { return &i }

func downloadSchemaIfNotExists(url, filepath string) error {
	// ... (function is correct, no changes) ...
	if _, err := os.Stat(filepath); err == nil {
		fmt.Printf("Schema file '%s' already exists. Skipping download.\n", filepath)
		return nil
	}
	fmt.Printf("Downloading X3D schema from %s to %s...\n", url, filepath)
	resp, err := http.Get(url)
	if err != nil { return fmt.Errorf("failed to download schema: %w", err) }
	defer resp.Body.Close()
	if resp.StatusCode != http.StatusOK { return fmt.Errorf("bad status: %s", resp.Status) }
	out, err := os.Create(filepath)
	if err != nil { return fmt.Errorf("failed to create schema file: %w", err) }
	defer out.Close()
	_, err = io.Copy(out, resp.Body)
	if err != nil { return fmt.Errorf("failed to save schema: %w", err) }
	fmt.Println("Schema downloaded successfully.")
	return nil
}

// Updated validation function to print detailed errors
func validateXMLWithSchema(xmlData []byte, schemaPath string) error {
	schema, err := xsd.ParseFromFile(schemaPath)
	if err != nil { return fmt.Errorf("failed to parse schema file %s: %w", schemaPath, err) }
	defer schema.Free()
	doc, err := libxml2.Parse(xmlData)
	if err != nil { return fmt.Errorf("failed to parse XML data: %w", err) }
	defer doc.Free()

	validationErr := schema.Validate(doc)
	if validationErr != nil {
		errorLog := ""
		if schemaErrors, ok := validationErr.(xsd.SchemaValidationError); ok {
			for i, e := range schemaErrors.Errors() {
				errorLog += fmt.Sprintf("Error %d: %s\n", i+1, e.Error())
			}
			return fmt.Errorf("schema validation failed with %d errors:\n%s", len(schemaErrors.Errors()), errorLog)
		}
		return fmt.Errorf("schema validation failed: %w", validationErr)
	}
	return nil
}

func main() {
	fmt.Println("--- Building and Testing an X3D Scene in Go ---")

	const schemaURL = "https://www.web3d.org/specifications/x3d-4.0.xsd"
	const schemaFilename = "x3d-4.0.xsd"
	if err := downloadSchemaIfNotExists(schemaURL, schemaFilename); err != nil {
		log.Fatalf("Could not prepare schema file: %v", err)
	}
    sceneRoot := &x3d.X3D{
        Profile: stringPtr("Immersive"),
        Version: stringPtr("4.0"),
        Head: &x3d.Head{
            Metas: []*x3d.Meta{
                &x3d.Meta{
                    Name: stringPtr("title"),
                    Content: stringPtr("FlowerSet.x3d"),
            },
            &x3d.Meta{
                Name: stringPtr("description"),
                Content: stringPtr("Set of three flowers for for the aromatic pleasure of the viewer. Carol did coordinates for stage and beginning to end flowers."),
            },
            &x3d.Meta{
                Name: stringPtr("creator"),
                Content: stringPtr("Carol McDonald"),
            },
            &x3d.Meta{
                Name: stringPtr("translator"),
                Content: stringPtr("Joe Williams and Don Brutzman"),
            },
            &x3d.Meta{
                Name: stringPtr("created"),
                Content: stringPtr("26 June 2023"),
            },
            &x3d.Meta{
                Name: stringPtr("modified"),
                Content: stringPtr("Tue, 09 Sep 2025 19:37:49 GMT"),
            },
            &x3d.Meta{
                Name: stringPtr("reference"),
                Content: stringPtr("https://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/content/examples/HumanoidAnimation/WinterAndSpring/originals/Flower.Set.x3d"),
            },
            &x3d.Meta{
                Name: stringPtr("identifier"),
                Content: stringPtr("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/WinterAndSpring/FlowerSet.x3d"),
            },
            },
        },
        Scene: &x3d.Scene{
            Children: []x3d.X3DChildNode{
                &x3d.WorldInfo{
                    Title: stringPtr("FlowerSet.x3d"),
                },
                &x3d.Background{
                    SkyColor: &x3d.MFColor{[3]float32{1.0,1.0,1.0}},
                },
                &x3d.NavigationInfo{
                    Type: x3d.MFString{"EXAMINE"},
                    Speed: floatPtr(3.0),
                },
                &x3d.TimeSensor{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("FlowerStartTIME"),
                    },
                    Loop: boolPtr(true),
                    StopTime: doublePtr(1757446669.224),
                },
                &x3d.TimeSensor{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("FlowerDelayTIME"),
                    },
                    CycleInterval: doublePtr(2.0),
                    StartTime: doublePtr(1757446669.224),
                },
                &x3d.TimeSensor{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("FlowerHeartTimer"),
                    },
                    CycleInterval: doublePtr(100.0),
                },
                &x3d.BooleanFilter{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("FlowerDelayFILTER"),
                    },
                },
                &x3d.TimeTrigger{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("FlowerTRIGGER"),
                    },
                },
                &x3d.TimeSensor{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("PetalTime"),
                    },
                    CycleInterval: doublePtr(4.0),
                    Loop: boolPtr(true),
                },
                &x3d.Group{
                        CoreX3DNode: x3d.CoreX3DNode{
                            DEF: stringPtr("FlowerSet"),
                        },
                    Children: []x3d.X3DNode{
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerStem"),
                                },
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        DEF: stringPtr("Stem1"),
                                    },
                                    Appearance: &x3d.Appearance{
                                        Material: &x3d.Material{
                                            AmbientIntensity: floatPtr(0.0),
                                            DiffuseColor: &x3d.SFColor{0.0, 0.5, 0.0},
                                            Shininess: floatPtr(1.0),
                                        },
                                    },
                                    Geometry: &x3d.IndexedFaceSet{
                                        Solid: boolPtr(false),
                                        TexCoordIndex: []int32{18, 334, 336, -1, 18, 336, 333, -1, 333, 336, 335, -1, 333, 335, 17, -1, 20, 328, 332, -1, 20, 332, 330, -1, 330, 332, 331, -1, 330, 331, 19, -1, 21, 325, 329, -1, 21, 329, 327, -1, 327, 329, 328, -1, 327, 328, 20, -1, 22, 324, 326, -1, 22, 326, 323, -1, 323, 326, 325, -1, 323, 325, 21, -1, 24, 318, 322, -1, 24, 322, 320, -1, 320, 322, 321, -1, 320, 321, 23, -1, 25, 315, 319, -1, 25, 319, 317, -1, 317, 319, 318, -1, 317, 318, 24, -1, 26, 314, 316, -1, 26, 316, 313, -1, 313, 316, 315, -1, 313, 315, 25, -1, 28, 308, 312, -1, 28, 312, 310, -1, 310, 312, 311, -1, 310, 311, 27, -1, 29, 305, 309, -1, 29, 309, 307, -1, 307, 309, 308, -1, 307, 308, 28, -1, 30, 304, 306, -1, 30, 306, 303, -1, 303, 306, 305, -1, 303, 305, 29, -1, 32, 298, 302, -1, 32, 302, 300, -1, 300, 302, 301, -1, 300, 301, 31, -1, 33, 297, 299, -1, 33, 299, 296, -1, 296, 299, 298, -1, 296, 298, 32, -1, 333, 17, 34, -1, 35, 18, 333, -1, 34, 35, 333, -1, 36, 19, 18, -1, 36, 18, 35, -1, 330, 19, 36, -1, 37, 20, 330, -1, 36, 37, 330, -1, 327, 20, 37, -1, 38, 21, 327, -1, 37, 38, 327, -1, 323, 21, 38, -1, 39, 22, 323, -1, 38, 39, 323, -1, 40, 23, 22, -1, 40, 22, 39, -1, 320, 23, 40, -1, 41, 24, 320, -1, 40, 41, 320, -1, 317, 24, 41, -1, 42, 25, 317, -1, 41, 42, 317, -1, 313, 25, 42, -1, 43, 26, 313, -1, 42, 43, 313, -1, 44, 27, 26, -1, 44, 26, 43, -1, 310, 27, 44, -1, 45, 28, 310, -1, 44, 45, 310, -1, 307, 28, 45, -1, 46, 29, 307, -1, 45, 46, 307, -1, 303, 29, 46, -1, 47, 30, 303, -1, 46, 47, 303, -1, 48, 31, 30, -1, 48, 30, 47, -1, 300, 31, 48, -1, 49, 32, 300, -1, 48, 49, 300, -1, 296, 32, 49, -1, 50, 33, 296, -1, 49, 50, 296, -1, 52, 35, 34, -1, 52, 34, 51, -1, 53, 36, 35, -1, 53, 35, 52, -1, 54, 37, 36, -1, 54, 36, 53, -1, 55, 38, 37, -1, 55, 37, 54, -1, 56, 39, 38, -1, 56, 38, 55, -1, 57, 40, 39, -1, 57, 39, 56, -1, 58, 41, 40, -1, 58, 40, 57, -1, 59, 42, 41, -1, 59, 41, 58, -1, 60, 43, 42, -1, 60, 42, 59, -1, 61, 44, 43, -1, 61, 43, 60, -1, 62, 45, 44, -1, 62, 44, 61, -1, 63, 46, 45, -1, 63, 45, 62, -1, 64, 47, 46, -1, 64, 46, 63, -1, 65, 48, 47, -1, 65, 47, 64, -1, 66, 49, 48, -1, 66, 48, 65, -1, 67, 50, 49, -1, 67, 49, 66, -1, 69, 52, 51, -1, 69, 51, 68, -1, 70, 53, 52, -1, 70, 52, 69, -1, 71, 54, 53, -1, 71, 53, 70, -1, 72, 55, 54, -1, 72, 54, 71, -1, 73, 56, 55, -1, 73, 55, 72, -1, 74, 57, 56, -1, 74, 56, 73, -1, 75, 58, 57, -1, 75, 57, 74, -1, 76, 59, 58, -1, 76, 58, 75, -1, 77, 60, 59, -1, 77, 59, 76, -1, 78, 61, 60, -1, 78, 60, 77, -1, 79, 62, 61, -1, 79, 61, 78, -1, 80, 63, 62, -1, 80, 62, 79, -1, 81, 64, 63, -1, 81, 63, 80, -1, 82, 65, 64, -1, 82, 64, 81, -1, 83, 66, 65, -1, 83, 65, 82, -1, 84, 67, 66, -1, 84, 66, 83, -1, 86, 69, 68, -1, 86, 68, 85, -1, 87, 70, 69, -1, 87, 69, 86, -1, 88, 71, 70, -1, 88, 70, 87, -1, 89, 72, 71, -1, 89, 71, 88, -1, 90, 73, 72, -1, 90, 72, 89, -1, 91, 74, 73, -1, 91, 73, 90, -1, 92, 75, 74, -1, 92, 74, 91, -1, 93, 76, 75, -1, 93, 75, 92, -1, 94, 77, 76, -1, 94, 76, 93, -1, 95, 78, 77, -1, 95, 77, 94, -1, 96, 79, 78, -1, 96, 78, 95, -1, 97, 80, 79, -1, 97, 79, 96, -1, 98, 81, 80, -1, 98, 80, 97, -1, 99, 82, 81, -1, 99, 81, 98, -1, 100, 83, 82, -1, 100, 82, 99, -1, 101, 84, 83, -1, 101, 83, 100, -1, 103, 86, 85, -1, 103, 85, 102, -1, 104, 87, 86, -1, 104, 86, 103, -1, 105, 88, 87, -1, 105, 87, 104, -1, 106, 89, 88, -1, 106, 88, 105, -1, 107, 90, 89, -1, 107, 89, 106, -1, 108, 91, 90, -1, 108, 90, 107, -1, 109, 92, 91, -1, 109, 91, 108, -1, 110, 93, 92, -1, 110, 92, 109, -1, 111, 94, 93, -1, 111, 93, 110, -1, 112, 95, 94, -1, 112, 94, 111, -1, 113, 96, 95, -1, 113, 95, 112, -1, 114, 97, 96, -1, 114, 96, 113, -1, 115, 98, 97, -1, 115, 97, 114, -1, 116, 99, 98, -1, 116, 98, 115, -1, 117, 100, 99, -1, 117, 99, 116, -1, 118, 101, 100, -1, 118, 100, 117, -1, 120, 103, 102, -1, 120, 102, 119, -1, 121, 104, 103, -1, 121, 103, 120, -1, 122, 105, 104, -1, 122, 104, 121, -1, 123, 106, 105, -1, 123, 105, 122, -1, 124, 107, 106, -1, 124, 106, 123, -1, 125, 108, 107, -1, 125, 107, 124, -1, 126, 109, 108, -1, 126, 108, 125, -1, 127, 110, 109, -1, 127, 109, 126, -1, 128, 111, 110, -1, 128, 110, 127, -1, 129, 112, 111, -1, 129, 111, 128, -1, 130, 113, 112, -1, 130, 112, 129, -1, 131, 114, 113, -1, 131, 113, 130, -1, 132, 115, 114, -1, 132, 114, 131, -1, 133, 116, 115, -1, 133, 115, 132, -1, 134, 117, 116, -1, 134, 116, 133, -1, 135, 118, 117, -1, 135, 117, 134, -1, 137, 120, 119, -1, 137, 119, 136, -1, 138, 121, 120, -1, 138, 120, 137, -1, 139, 122, 121, -1, 139, 121, 138, -1, 140, 123, 122, -1, 140, 122, 139, -1, 141, 124, 123, -1, 141, 123, 140, -1, 142, 125, 124, -1, 142, 124, 141, -1, 143, 126, 125, -1, 143, 125, 142, -1, 144, 127, 126, -1, 144, 126, 143, -1, 145, 128, 127, -1, 145, 127, 144, -1, 146, 129, 128, -1, 146, 128, 145, -1, 147, 130, 129, -1, 147, 129, 146, -1, 148, 131, 130, -1, 148, 130, 147, -1, 149, 132, 131, -1, 149, 131, 148, -1, 150, 133, 132, -1, 150, 132, 149, -1, 151, 134, 133, -1, 151, 133, 150, -1, 152, 135, 134, -1, 152, 134, 151, -1, 154, 137, 136, -1, 154, 136, 153, -1, 155, 138, 137, -1, 155, 137, 154, -1, 156, 139, 138, -1, 156, 138, 155, -1, 157, 140, 139, -1, 157, 139, 156, -1, 158, 141, 140, -1, 158, 140, 157, -1, 159, 142, 141, -1, 159, 141, 158, -1, 160, 143, 142, -1, 160, 142, 159, -1, 161, 144, 143, -1, 161, 143, 160, -1, 162, 145, 144, -1, 162, 144, 161, -1, 163, 146, 145, -1, 163, 145, 162, -1, 164, 147, 146, -1, 164, 146, 163, -1, 165, 148, 147, -1, 165, 147, 164, -1, 166, 149, 148, -1, 166, 148, 165, -1, 167, 150, 149, -1, 167, 149, 166, -1, 168, 151, 150, -1, 168, 150, 167, -1, 169, 152, 151, -1, 169, 151, 168, -1, 171, 154, 153, -1, 171, 153, 170, -1, 172, 155, 154, -1, 172, 154, 171, -1, 173, 156, 155, -1, 173, 155, 172, -1, 174, 157, 156, -1, 174, 156, 173, -1, 175, 158, 157, -1, 175, 157, 174, -1, 176, 159, 158, -1, 176, 158, 175, -1, 177, 160, 159, -1, 177, 159, 176, -1, 178, 161, 160, -1, 178, 160, 177, -1, 179, 162, 161, -1, 179, 161, 178, -1, 180, 163, 162, -1, 180, 162, 179, -1, 181, 164, 163, -1, 181, 163, 180, -1, 182, 165, 164, -1, 182, 164, 181, -1, 183, 166, 165, -1, 183, 165, 182, -1, 184, 167, 166, -1, 184, 166, 183, -1, 185, 168, 167, -1, 185, 167, 184, -1, 186, 169, 168, -1, 186, 168, 185, -1, 188, 171, 170, -1, 188, 170, 187, -1, 189, 172, 171, -1, 189, 171, 188, -1, 190, 173, 172, -1, 190, 172, 189, -1, 191, 174, 173, -1, 191, 173, 190, -1, 192, 175, 174, -1, 192, 174, 191, -1, 193, 176, 175, -1, 193, 175, 192, -1, 194, 177, 176, -1, 194, 176, 193, -1, 195, 178, 177, -1, 195, 177, 194, -1, 196, 179, 178, -1, 196, 178, 195, -1, 197, 180, 179, -1, 197, 179, 196, -1, 198, 181, 180, -1, 198, 180, 197, -1, 199, 182, 181, -1, 199, 181, 198, -1, 200, 183, 182, -1, 200, 182, 199, -1, 201, 184, 183, -1, 201, 183, 200, -1, 202, 185, 184, -1, 202, 184, 201, -1, 203, 186, 185, -1, 203, 185, 202, -1, 205, 188, 187, -1, 205, 187, 204, -1, 206, 189, 188, -1, 206, 188, 205, -1, 207, 190, 189, -1, 207, 189, 206, -1, 208, 191, 190, -1, 208, 190, 207, -1, 209, 192, 191, -1, 209, 191, 208, -1, 210, 193, 192, -1, 210, 192, 209, -1, 211, 194, 193, -1, 211, 193, 210, -1, 212, 195, 194, -1, 212, 194, 211, -1, 213, 196, 195, -1, 213, 195, 212, -1, 214, 197, 196, -1, 214, 196, 213, -1, 215, 198, 197, -1, 215, 197, 214, -1, 216, 199, 198, -1, 216, 198, 215, -1, 217, 200, 199, -1, 217, 199, 216, -1, 218, 201, 200, -1, 218, 200, 217, -1, 219, 202, 201, -1, 219, 201, 218, -1, 220, 203, 202, -1, 220, 202, 219, -1, 256, 222, 205, -1, 204, 221, 256, -1, 205, 204, 256, -1, 223, 206, 205, -1, 223, 205, 222, -1, 260, 224, 207, -1, 206, 223, 260, -1, 207, 206, 260, -1, 264, 225, 208, -1, 207, 224, 264, -1, 208, 207, 264, -1, 267, 226, 209, -1, 208, 225, 267, -1, 209, 208, 267, -1, 227, 210, 209, -1, 227, 209, 226, -1, 270, 228, 211, -1, 210, 227, 270, -1, 211, 210, 270, -1, 274, 229, 212, -1, 211, 228, 274, -1, 212, 211, 274, -1, 277, 230, 213, -1, 212, 229, 277, -1, 213, 212, 277, -1, 231, 214, 213, -1, 231, 213, 230, -1, 280, 232, 215, -1, 214, 231, 280, -1, 215, 214, 280, -1, 284, 233, 216, -1, 215, 232, 284, -1, 216, 215, 284, -1, 287, 234, 217, -1, 216, 233, 287, -1, 217, 216, 287, -1, 235, 218, 217, -1, 235, 217, 234, -1, 290, 236, 219, -1, 218, 235, 290, -1, 219, 218, 290, -1, 294, 237, 220, -1, 219, 236, 294, -1, 220, 219, 294, -1, 255, 222, 256, -1, 255, 256, 258, -1, 258, 256, 221, -1, 258, 221, 257, -1, 259, 224, 260, -1, 259, 260, 262, -1, 262, 260, 223, -1, 262, 223, 261, -1, 263, 225, 264, -1, 263, 264, 265, -1, 265, 264, 224, -1, 265, 224, 259, -1, 266, 226, 267, -1, 266, 267, 268, -1, 268, 267, 225, -1, 268, 225, 263, -1, 269, 228, 270, -1, 269, 270, 272, -1, 272, 270, 227, -1, 272, 227, 271, -1, 273, 229, 274, -1, 273, 274, 275, -1, 275, 274, 228, -1, 275, 228, 269, -1, 276, 230, 277, -1, 276, 277, 278, -1, 278, 277, 229, -1, 278, 229, 273, -1, 279, 232, 280, -1, 279, 280, 282, -1, 282, 280, 231, -1, 282, 231, 281, -1, 283, 233, 284, -1, 283, 284, 285, -1, 285, 284, 232, -1, 285, 232, 279, -1, 286, 234, 287, -1, 286, 287, 288, -1, 288, 287, 233, -1, 288, 233, 283, -1, 289, 236, 290, -1, 289, 290, 292, -1, 292, 290, 235, -1, 292, 235, 291, -1, 293, 237, 294, -1, 293, 294, 295, -1, 295, 294, 236, -1, 295, 236, 289, -1, 336, 1, 0, -1, 2, 1, 334, -1, 2, 334, 331, -1, 0, 335, 336, -1, 1, 336, 334, -1, 4, 3, 329, -1, 4, 329, 325, -1, 4, 326, 5, -1, 7, 6, 321, -1, 7, 321, 322, -1, 6, 5, 324, -1, 6, 324, 321, -1, 8, 7, 318, -1, 8, 318, 319, -1, 2, 331, 332, -1, 3, 2, 332, -1, 3, 332, 328, -1, 331, 334, 18, -1, 331, 18, 19, -1, 3, 328, 329, -1, 4, 325, 326, -1, 321, 324, 22, -1, 321, 22, 23, -1, 7, 322, 318, -1, 5, 326, 324, -1, 315, 8, 319, -1, 10, 9, 314, -1, 10, 314, 311, -1, 315, 316, 8, -1, 316, 9, 8, -1, 9, 316, 314, -1, 311, 314, 26, -1, 311, 26, 27, -1, 312, 10, 311, -1, 11, 309, 12, -1, 12, 306, 13, -1, 15, 14, 301, -1, 15, 301, 302, -1, 14, 13, 304, -1, 14, 304, 301, -1, 15, 299, 16, -1, 312, 308, 11, -1, 312, 11, 10, -1, 11, 308, 309, -1, 12, 309, 305, -1, 13, 306, 304, -1, 12, 305, 306, -1, 15, 302, 298, -1, 16, 299, 297, -1, 30, 31, 301, -1, 30, 301, 304, -1, 15, 298, 299, -1, 223, 222, 255, -1, 223, 255, 261, -1, 239, 255, 258, -1, 261, 255, 239, -1, 261, 239, 240, -1, 258, 257, 238, -1, 227, 226, 266, -1, 227, 266, 271, -1, 241, 265, 259, -1, 242, 268, 263, -1, 263, 265, 242, -1, 259, 262, 241, -1, 262, 261, 240, -1, 238, 239, 258, -1, 262, 240, 241, -1, 241, 242, 265, -1, 268, 243, 266, -1, 242, 243, 268, -1, 243, 244, 271, -1, 243, 271, 266, -1, 244, 272, 271, -1, 245, 269, 272, -1, 269, 245, 275, -1, 275, 246, 273, -1, 246, 275, 245, -1, 244, 245, 272, -1, 231, 230, 276, -1, 231, 276, 281, -1, 281, 276, 247, -1, 281, 247, 248, -1, 248, 282, 281, -1, 276, 278, 247, -1, 235, 234, 286, -1, 235, 286, 291, -1, 250, 283, 285, -1, 251, 286, 288, -1, 288, 283, 250, -1, 285, 279, 249, -1, 279, 282, 249, -1, 246, 247, 278, -1, 246, 278, 273, -1, 282, 248, 249, -1, 249, 250, 285, -1, 291, 286, 251, -1, 291, 251, 252, -1, 250, 251, 288, -1, 253, 289, 292, -1, 253, 295, 289, -1, 253, 254, 295, -1, 254, 293, 295, -1, 252, 253, 292, -1, 252, 292, 291, -1, 346, 345, 344, -1, 347, 346, 344, -1, 347, 341, 340, -1, 343, 347, 344, -1, 342, 347, 343, -1, 342, 341, 347, -1, 340, 348, 347, -1, 351, 350, 349, -1, 351, 348, 339, -1, 352, 351, 338, -1, 340, 339, 348, -1, 351, 339, 338, -1, 352, 338, 337, -1, 349, 348, 351, -1, 364, 362, 363, -1, 367, 358, 362, -1, 362, 364, 367, -1, 360, 361, 362, -1, 362, 359, 360, -1, 362, 358, 359, -1, 366, 364, 365, -1, 358, 367, 355, -1, 354, 367, 368, -1, 368, 353, 354, -1, 357, 358, 356, -1, 356, 358, 355, -1, 355, 367, 354, -1, 367, 364, 366, -1},
                                        CoordIndex: []int32{18, 334, 336, -1, 18, 336, 333, -1, 333, 336, 335, -1, 333, 335, 17, -1, 20, 328, 332, -1, 20, 332, 330, -1, 330, 332, 331, -1, 330, 331, 19, -1, 21, 325, 329, -1, 21, 329, 327, -1, 327, 329, 328, -1, 327, 328, 20, -1, 22, 324, 326, -1, 22, 326, 323, -1, 323, 326, 325, -1, 323, 325, 21, -1, 24, 318, 322, -1, 24, 322, 320, -1, 320, 322, 321, -1, 320, 321, 23, -1, 25, 315, 319, -1, 25, 319, 317, -1, 317, 319, 318, -1, 317, 318, 24, -1, 26, 314, 316, -1, 26, 316, 313, -1, 313, 316, 315, -1, 313, 315, 25, -1, 28, 308, 312, -1, 28, 312, 310, -1, 310, 312, 311, -1, 310, 311, 27, -1, 29, 305, 309, -1, 29, 309, 307, -1, 307, 309, 308, -1, 307, 308, 28, -1, 30, 304, 306, -1, 30, 306, 303, -1, 303, 306, 305, -1, 303, 305, 29, -1, 32, 298, 302, -1, 32, 302, 300, -1, 300, 302, 301, -1, 300, 301, 31, -1, 33, 297, 299, -1, 33, 299, 296, -1, 296, 299, 298, -1, 296, 298, 32, -1, 333, 17, 34, -1, 35, 18, 333, -1, 34, 35, 333, -1, 36, 19, 18, -1, 36, 18, 35, -1, 330, 19, 36, -1, 37, 20, 330, -1, 36, 37, 330, -1, 327, 20, 37, -1, 38, 21, 327, -1, 37, 38, 327, -1, 323, 21, 38, -1, 39, 22, 323, -1, 38, 39, 323, -1, 40, 23, 22, -1, 40, 22, 39, -1, 320, 23, 40, -1, 41, 24, 320, -1, 40, 41, 320, -1, 317, 24, 41, -1, 42, 25, 317, -1, 41, 42, 317, -1, 313, 25, 42, -1, 43, 26, 313, -1, 42, 43, 313, -1, 44, 27, 26, -1, 44, 26, 43, -1, 310, 27, 44, -1, 45, 28, 310, -1, 44, 45, 310, -1, 307, 28, 45, -1, 46, 29, 307, -1, 45, 46, 307, -1, 303, 29, 46, -1, 47, 30, 303, -1, 46, 47, 303, -1, 48, 31, 30, -1, 48, 30, 47, -1, 300, 31, 48, -1, 49, 32, 300, -1, 48, 49, 300, -1, 296, 32, 49, -1, 50, 33, 296, -1, 49, 50, 296, -1, 52, 35, 34, -1, 52, 34, 51, -1, 53, 36, 35, -1, 53, 35, 52, -1, 54, 37, 36, -1, 54, 36, 53, -1, 55, 38, 37, -1, 55, 37, 54, -1, 56, 39, 38, -1, 56, 38, 55, -1, 57, 40, 39, -1, 57, 39, 56, -1, 58, 41, 40, -1, 58, 40, 57, -1, 59, 42, 41, -1, 59, 41, 58, -1, 60, 43, 42, -1, 60, 42, 59, -1, 61, 44, 43, -1, 61, 43, 60, -1, 62, 45, 44, -1, 62, 44, 61, -1, 63, 46, 45, -1, 63, 45, 62, -1, 64, 47, 46, -1, 64, 46, 63, -1, 65, 48, 47, -1, 65, 47, 64, -1, 66, 49, 48, -1, 66, 48, 65, -1, 67, 50, 49, -1, 67, 49, 66, -1, 69, 52, 51, -1, 69, 51, 68, -1, 70, 53, 52, -1, 70, 52, 69, -1, 71, 54, 53, -1, 71, 53, 70, -1, 72, 55, 54, -1, 72, 54, 71, -1, 73, 56, 55, -1, 73, 55, 72, -1, 74, 57, 56, -1, 74, 56, 73, -1, 75, 58, 57, -1, 75, 57, 74, -1, 76, 59, 58, -1, 76, 58, 75, -1, 77, 60, 59, -1, 77, 59, 76, -1, 78, 61, 60, -1, 78, 60, 77, -1, 79, 62, 61, -1, 79, 61, 78, -1, 80, 63, 62, -1, 80, 62, 79, -1, 81, 64, 63, -1, 81, 63, 80, -1, 82, 65, 64, -1, 82, 64, 81, -1, 83, 66, 65, -1, 83, 65, 82, -1, 84, 67, 66, -1, 84, 66, 83, -1, 86, 69, 68, -1, 86, 68, 85, -1, 87, 70, 69, -1, 87, 69, 86, -1, 88, 71, 70, -1, 88, 70, 87, -1, 89, 72, 71, -1, 89, 71, 88, -1, 90, 73, 72, -1, 90, 72, 89, -1, 91, 74, 73, -1, 91, 73, 90, -1, 92, 75, 74, -1, 92, 74, 91, -1, 93, 76, 75, -1, 93, 75, 92, -1, 94, 77, 76, -1, 94, 76, 93, -1, 95, 78, 77, -1, 95, 77, 94, -1, 96, 79, 78, -1, 96, 78, 95, -1, 97, 80, 79, -1, 97, 79, 96, -1, 98, 81, 80, -1, 98, 80, 97, -1, 99, 82, 81, -1, 99, 81, 98, -1, 100, 83, 82, -1, 100, 82, 99, -1, 101, 84, 83, -1, 101, 83, 100, -1, 103, 86, 85, -1, 103, 85, 102, -1, 104, 87, 86, -1, 104, 86, 103, -1, 105, 88, 87, -1, 105, 87, 104, -1, 106, 89, 88, -1, 106, 88, 105, -1, 107, 90, 89, -1, 107, 89, 106, -1, 108, 91, 90, -1, 108, 90, 107, -1, 109, 92, 91, -1, 109, 91, 108, -1, 110, 93, 92, -1, 110, 92, 109, -1, 111, 94, 93, -1, 111, 93, 110, -1, 112, 95, 94, -1, 112, 94, 111, -1, 113, 96, 95, -1, 113, 95, 112, -1, 114, 97, 96, -1, 114, 96, 113, -1, 115, 98, 97, -1, 115, 97, 114, -1, 116, 99, 98, -1, 116, 98, 115, -1, 117, 100, 99, -1, 117, 99, 116, -1, 118, 101, 100, -1, 118, 100, 117, -1, 120, 103, 102, -1, 120, 102, 119, -1, 121, 104, 103, -1, 121, 103, 120, -1, 122, 105, 104, -1, 122, 104, 121, -1, 123, 106, 105, -1, 123, 105, 122, -1, 124, 107, 106, -1, 124, 106, 123, -1, 125, 108, 107, -1, 125, 107, 124, -1, 126, 109, 108, -1, 126, 108, 125, -1, 127, 110, 109, -1, 127, 109, 126, -1, 128, 111, 110, -1, 128, 110, 127, -1, 129, 112, 111, -1, 129, 111, 128, -1, 130, 113, 112, -1, 130, 112, 129, -1, 131, 114, 113, -1, 131, 113, 130, -1, 132, 115, 114, -1, 132, 114, 131, -1, 133, 116, 115, -1, 133, 115, 132, -1, 134, 117, 116, -1, 134, 116, 133, -1, 135, 118, 117, -1, 135, 117, 134, -1, 137, 120, 119, -1, 137, 119, 136, -1, 138, 121, 120, -1, 138, 120, 137, -1, 139, 122, 121, -1, 139, 121, 138, -1, 140, 123, 122, -1, 140, 122, 139, -1, 141, 124, 123, -1, 141, 123, 140, -1, 142, 125, 124, -1, 142, 124, 141, -1, 143, 126, 125, -1, 143, 125, 142, -1, 144, 127, 126, -1, 144, 126, 143, -1, 145, 128, 127, -1, 145, 127, 144, -1, 146, 129, 128, -1, 146, 128, 145, -1, 147, 130, 129, -1, 147, 129, 146, -1, 148, 131, 130, -1, 148, 130, 147, -1, 149, 132, 131, -1, 149, 131, 148, -1, 150, 133, 132, -1, 150, 132, 149, -1, 151, 134, 133, -1, 151, 133, 150, -1, 152, 135, 134, -1, 152, 134, 151, -1, 154, 137, 136, -1, 154, 136, 153, -1, 155, 138, 137, -1, 155, 137, 154, -1, 156, 139, 138, -1, 156, 138, 155, -1, 157, 140, 139, -1, 157, 139, 156, -1, 158, 141, 140, -1, 158, 140, 157, -1, 159, 142, 141, -1, 159, 141, 158, -1, 160, 143, 142, -1, 160, 142, 159, -1, 161, 144, 143, -1, 161, 143, 160, -1, 162, 145, 144, -1, 162, 144, 161, -1, 163, 146, 145, -1, 163, 145, 162, -1, 164, 147, 146, -1, 164, 146, 163, -1, 165, 148, 147, -1, 165, 147, 164, -1, 166, 149, 148, -1, 166, 148, 165, -1, 167, 150, 149, -1, 167, 149, 166, -1, 168, 151, 150, -1, 168, 150, 167, -1, 169, 152, 151, -1, 169, 151, 168, -1, 171, 154, 153, -1, 171, 153, 170, -1, 172, 155, 154, -1, 172, 154, 171, -1, 173, 156, 155, -1, 173, 155, 172, -1, 174, 157, 156, -1, 174, 156, 173, -1, 175, 158, 157, -1, 175, 157, 174, -1, 176, 159, 158, -1, 176, 158, 175, -1, 177, 160, 159, -1, 177, 159, 176, -1, 178, 161, 160, -1, 178, 160, 177, -1, 179, 162, 161, -1, 179, 161, 178, -1, 180, 163, 162, -1, 180, 162, 179, -1, 181, 164, 163, -1, 181, 163, 180, -1, 182, 165, 164, -1, 182, 164, 181, -1, 183, 166, 165, -1, 183, 165, 182, -1, 184, 167, 166, -1, 184, 166, 183, -1, 185, 168, 167, -1, 185, 167, 184, -1, 186, 169, 168, -1, 186, 168, 185, -1, 188, 171, 170, -1, 188, 170, 187, -1, 189, 172, 171, -1, 189, 171, 188, -1, 190, 173, 172, -1, 190, 172, 189, -1, 191, 174, 173, -1, 191, 173, 190, -1, 192, 175, 174, -1, 192, 174, 191, -1, 193, 176, 175, -1, 193, 175, 192, -1, 194, 177, 176, -1, 194, 176, 193, -1, 195, 178, 177, -1, 195, 177, 194, -1, 196, 179, 178, -1, 196, 178, 195, -1, 197, 180, 179, -1, 197, 179, 196, -1, 198, 181, 180, -1, 198, 180, 197, -1, 199, 182, 181, -1, 199, 181, 198, -1, 200, 183, 182, -1, 200, 182, 199, -1, 201, 184, 183, -1, 201, 183, 200, -1, 202, 185, 184, -1, 202, 184, 201, -1, 203, 186, 185, -1, 203, 185, 202, -1, 205, 188, 187, -1, 205, 187, 204, -1, 206, 189, 188, -1, 206, 188, 205, -1, 207, 190, 189, -1, 207, 189, 206, -1, 208, 191, 190, -1, 208, 190, 207, -1, 209, 192, 191, -1, 209, 191, 208, -1, 210, 193, 192, -1, 210, 192, 209, -1, 211, 194, 193, -1, 211, 193, 210, -1, 212, 195, 194, -1, 212, 194, 211, -1, 213, 196, 195, -1, 213, 195, 212, -1, 214, 197, 196, -1, 214, 196, 213, -1, 215, 198, 197, -1, 215, 197, 214, -1, 216, 199, 198, -1, 216, 198, 215, -1, 217, 200, 199, -1, 217, 199, 216, -1, 218, 201, 200, -1, 218, 200, 217, -1, 219, 202, 201, -1, 219, 201, 218, -1, 220, 203, 202, -1, 220, 202, 219, -1, 256, 222, 205, -1, 204, 221, 256, -1, 205, 204, 256, -1, 223, 206, 205, -1, 223, 205, 222, -1, 260, 224, 207, -1, 206, 223, 260, -1, 207, 206, 260, -1, 264, 225, 208, -1, 207, 224, 264, -1, 208, 207, 264, -1, 267, 226, 209, -1, 208, 225, 267, -1, 209, 208, 267, -1, 227, 210, 209, -1, 227, 209, 226, -1, 270, 228, 211, -1, 210, 227, 270, -1, 211, 210, 270, -1, 274, 229, 212, -1, 211, 228, 274, -1, 212, 211, 274, -1, 277, 230, 213, -1, 212, 229, 277, -1, 213, 212, 277, -1, 231, 214, 213, -1, 231, 213, 230, -1, 280, 232, 215, -1, 214, 231, 280, -1, 215, 214, 280, -1, 284, 233, 216, -1, 215, 232, 284, -1, 216, 215, 284, -1, 287, 234, 217, -1, 216, 233, 287, -1, 217, 216, 287, -1, 235, 218, 217, -1, 235, 217, 234, -1, 290, 236, 219, -1, 218, 235, 290, -1, 219, 218, 290, -1, 294, 237, 220, -1, 219, 236, 294, -1, 220, 219, 294, -1, 255, 222, 256, -1, 255, 256, 258, -1, 258, 256, 221, -1, 258, 221, 257, -1, 259, 224, 260, -1, 259, 260, 262, -1, 262, 260, 223, -1, 262, 223, 261, -1, 263, 225, 264, -1, 263, 264, 265, -1, 265, 264, 224, -1, 265, 224, 259, -1, 266, 226, 267, -1, 266, 267, 268, -1, 268, 267, 225, -1, 268, 225, 263, -1, 269, 228, 270, -1, 269, 270, 272, -1, 272, 270, 227, -1, 272, 227, 271, -1, 273, 229, 274, -1, 273, 274, 275, -1, 275, 274, 228, -1, 275, 228, 269, -1, 276, 230, 277, -1, 276, 277, 278, -1, 278, 277, 229, -1, 278, 229, 273, -1, 279, 232, 280, -1, 279, 280, 282, -1, 282, 280, 231, -1, 282, 231, 281, -1, 283, 233, 284, -1, 283, 284, 285, -1, 285, 284, 232, -1, 285, 232, 279, -1, 286, 234, 287, -1, 286, 287, 288, -1, 288, 287, 233, -1, 288, 233, 283, -1, 289, 236, 290, -1, 289, 290, 292, -1, 292, 290, 235, -1, 292, 235, 291, -1, 293, 237, 294, -1, 293, 294, 295, -1, 295, 294, 236, -1, 295, 236, 289, -1, 336, 1, 0, -1, 2, 1, 334, -1, 2, 334, 331, -1, 0, 335, 336, -1, 1, 336, 334, -1, 4, 3, 329, -1, 4, 329, 325, -1, 4, 326, 5, -1, 7, 6, 321, -1, 7, 321, 322, -1, 6, 5, 324, -1, 6, 324, 321, -1, 8, 7, 318, -1, 8, 318, 319, -1, 2, 331, 332, -1, 3, 2, 332, -1, 3, 332, 328, -1, 331, 334, 18, -1, 331, 18, 19, -1, 3, 328, 329, -1, 4, 325, 326, -1, 321, 324, 22, -1, 321, 22, 23, -1, 7, 322, 318, -1, 5, 326, 324, -1, 315, 8, 319, -1, 10, 9, 314, -1, 10, 314, 311, -1, 315, 316, 8, -1, 316, 9, 8, -1, 9, 316, 314, -1, 311, 314, 26, -1, 311, 26, 27, -1, 312, 10, 311, -1, 11, 309, 12, -1, 12, 306, 13, -1, 15, 14, 301, -1, 15, 301, 302, -1, 14, 13, 304, -1, 14, 304, 301, -1, 15, 299, 16, -1, 312, 308, 11, -1, 312, 11, 10, -1, 11, 308, 309, -1, 12, 309, 305, -1, 13, 306, 304, -1, 12, 305, 306, -1, 15, 302, 298, -1, 16, 299, 297, -1, 30, 31, 301, -1, 30, 301, 304, -1, 15, 298, 299, -1, 223, 222, 255, -1, 223, 255, 261, -1, 239, 255, 258, -1, 261, 255, 239, -1, 261, 239, 240, -1, 258, 257, 238, -1, 227, 226, 266, -1, 227, 266, 271, -1, 241, 265, 259, -1, 242, 268, 263, -1, 263, 265, 242, -1, 259, 262, 241, -1, 262, 261, 240, -1, 238, 239, 258, -1, 262, 240, 241, -1, 241, 242, 265, -1, 268, 243, 266, -1, 242, 243, 268, -1, 243, 244, 271, -1, 243, 271, 266, -1, 244, 272, 271, -1, 245, 269, 272, -1, 269, 245, 275, -1, 275, 246, 273, -1, 246, 275, 245, -1, 244, 245, 272, -1, 231, 230, 276, -1, 231, 276, 281, -1, 281, 276, 247, -1, 281, 247, 248, -1, 248, 282, 281, -1, 276, 278, 247, -1, 235, 234, 286, -1, 235, 286, 291, -1, 250, 283, 285, -1, 251, 286, 288, -1, 288, 283, 250, -1, 285, 279, 249, -1, 279, 282, 249, -1, 246, 247, 278, -1, 246, 278, 273, -1, 282, 248, 249, -1, 249, 250, 285, -1, 291, 286, 251, -1, 291, 251, 252, -1, 250, 251, 288, -1, 253, 289, 292, -1, 253, 295, 289, -1, 253, 254, 295, -1, 254, 293, 295, -1, 252, 253, 292, -1, 252, 292, 291, -1, 346, 345, 344, -1, 347, 346, 344, -1, 347, 341, 340, -1, 343, 347, 344, -1, 342, 347, 343, -1, 342, 341, 347, -1, 340, 348, 347, -1, 351, 350, 349, -1, 351, 348, 339, -1, 352, 351, 338, -1, 340, 339, 348, -1, 351, 339, 338, -1, 352, 338, 337, -1, 349, 348, 351, -1, 364, 362, 363, -1, 367, 358, 362, -1, 362, 364, 367, -1, 360, 361, 362, -1, 362, 359, 360, -1, 362, 358, 359, -1, 366, 364, 365, -1, 358, 367, 355, -1, 354, 367, 368, -1, 368, 353, 354, -1, 357, 358, 356, -1, 356, 358, 355, -1, 355, 367, 354, -1, 367, 364, 366, -1},
                                        Coord: &x3d.Coordinate{
                                            Point: &x3d.MFVec3f{[3]float32{0.0,-0.002022875,-0.007740024},[3]float32{-0.00301528,-0.002240038,-0.007063307},[3]float32{-0.005670327,-0.002109013,-0.005234449},[3]float32{-0.007394051,-0.001639661,-0.002576728},[3]float32{-0.007936819,-0.00097084,0.000253732},[3]float32{-0.007341742,-0.000129539,0.003175223},[3]float32{-0.005553421,0.000765909,0.005707268},[3]float32{-0.002884633,0.001531687,0.007302933},[3]float32{0.0,0.002022875,0.007740024},[3]float32{0.00301528,0.002240038,0.007063307},[3]float32{0.005670327,0.002109013,0.005234449},[3]float32{0.007394051,0.001639661,0.002576728},[3]float32{0.007936819,0.00097084,-0.000253732},[3]float32{0.007341742,0.000129539,-0.003175223},[3]float32{0.005553421,-0.000765909,-0.005707268},[3]float32{0.002884633,-0.001531687,-0.007302933},[3]float32{0.0,-0.002022875,-0.007740024},[3]float32{0.002086147,-0.01920748,-0.003567731},[3]float32{-0.000932817,-0.01939429,-0.002898382},[3]float32{-0.003585642,-0.01928158,-0.001065078},[3]float32{-0.005301403,-0.01887781,0.001608567},[3]float32{-0.005832826,-0.01830245,0.004461718},[3]float32{-0.005223477,-0.01757871,0.007411753},[3]float32{-0.003419966,-0.01680839,0.009974177},[3]float32{-0.000738188,-0.01614962,0.01159582},[3]float32{0.002154778,-0.01572707,0.01204958},[3]float32{0.005173741,-0.01554026,0.01138023},[3]float32{0.007826566,-0.01565297,0.009546926},[3]float32{0.009542327,-0.01605674,0.006873282},[3]float32{0.01007375,-0.0166321,0.004020131},[3]float32{0.009464402,-0.01735584,0.001070096},[3]float32{0.00766089,-0.01812616,-0.001492329},[3]float32{0.004979112,-0.01878493,-0.003113975},[3]float32{0.002086147,-0.01920748,-0.003567731},[3]float32{0.003851785,-0.03657144,-0.000036454},[3]float32{0.000829703,-0.0367276,0.000626659},[3]float32{-0.00182124,-0.03663338,0.002463726},[3]float32{-0.003530263,-0.03629588,0.005150847},[3]float32{-0.004052083,-0.03581496,0.008023203},[3]float32{-0.003430655,-0.03521001,0.0109974},[3]float32{-0.001614287,-0.03456612,0.01358553},[3]float32{0.001078485,-0.03401548,0.01522917},[3]float32{0.003978502,-0.03366228,0.01569703},[3]float32{0.007000585,-0.03350613,0.01503392},[3]float32{0.009651528,-0.03360034,0.01319685},[3]float32{0.01136055,-0.03393784,0.01050973},[3]float32{0.01188237,-0.03441877,0.007637372},[3]float32{0.01126094,-0.03502372,0.004663179},[3]float32{0.009444575,-0.0356676,0.002075042},[3]float32{0.006751802,-0.03621824,0.000431406},[3]float32{0.003851785,-0.03657144,-0.000036454},[3]float32{0.0052964,-0.05408161,0.002852776},[3]float32{0.002271767,-0.05420684,0.003510787},[3]float32{-0.000377637,-0.05413128,0.005350932},[3]float32{-0.002081146,-0.05386062,0.008049081},[3]float32{-0.002595109,-0.05347492,0.01093715},[3]float32{-0.001963799,-0.05298976,0.01393111},[3]float32{-0.000136912,-0.05247337,0.01654028},[3]float32{0.002564856,-0.05203177,0.01820191},[3]float32{0.005470643,-0.05174851,0.01868131},[3]float32{0.008495276,-0.05162327,0.0180233},[3]float32{0.01114468,-0.05169883,0.01618315},[3]float32{0.01284819,-0.0519695,0.01348501},[3]float32{0.01336215,-0.0523552,0.01059694},[3]float32{0.01273084,-0.05284036,0.007602978},[3]float32{0.01090396,-0.05335674,0.004993803},[3]float32{0.008202188,-0.05379835,0.003332177},[3]float32{0.0052964,-0.05408161,0.002852776},[3]float32{0.006419992,-0.07170875,0.00509996},[3]float32{0.003393375,-0.07180285,0.005754003},[3]float32{0.000745168,-0.07174607,0.007596542},[3]float32{-0.000954053,-0.07154268,0.01030327},[3]float32{-0.001461905,-0.07125285,0.01320356},[3]float32{-0.000822909,-0.07088828,0.01621289},[3]float32{0.00101216,-0.07050025,0.01883843},[3]float32{0.003720924,-0.07016841,0.02051405},[3]float32{0.0066312,-0.06995555,0.02100242},[3]float32{0.009657817,-0.06986144,0.02034838},[3]float32{0.01230602,-0.06991822,0.01850584},[3]float32{0.01400524,-0.07012161,0.01579912},[3]float32{0.0145131,-0.07041144,0.01289883},[3]float32{0.0138741,-0.07077602,0.009889493},[3]float32{0.01203903,-0.07116405,0.007263956},[3]float32{0.009330267,-0.07149589,0.005588336},[3]float32{0.006419992,-0.07170875,0.00509996},[3]float32{0.007222552,-0.08942338,0.00670508},[3]float32{0.004194518,-0.0894862,0.007356288},[3]float32{0.001547166,-0.0894483,0.009200538},[3]float32{-0.000148992,-0.08931252,0.01191339},[3]float32{-0.00065248,-0.08911903,0.01482241},[3]float32{-0.000007993,-0.08887564,0.01784272},[3]float32{0.001832919,-0.08861659,0.02047995},[3]float32{0.004546682,-0.08839506,0.02216556},[3]float32{0.007460163,-0.08825296,0.02266035},[3]float32{0.0104882,-0.08819014,0.02200914},[3]float32{0.01313555,-0.08822805,0.02016489},[3]float32{0.01483171,-0.08836383,0.01745204},[3]float32{0.01533519,-0.08855731,0.01454302},[3]float32{0.01469071,-0.0888007,0.01152271},[3]float32{0.01284979,-0.08905975,0.008885481},[3]float32{0.01013603,-0.08928128,0.007199867},[3]float32{0.007222552,-0.08942338,0.00670508},[3]float32{0.007704094,-0.1071964,0.007668164},[3]float32{0.00467521,-0.1072278,0.008317672},[3]float32{0.002028371,-0.1072088,0.01016295},[3]float32{0.000334051,-0.1071409,0.01287947},[3]float32{-0.000166818,-0.1070441,0.01579373},[3]float32{0.000480963,-0.1069223,0.01882063},[3]float32{0.002325381,-0.1067926,0.02146487},[3]float32{0.005042143,-0.1066818,0.02315648},[3]float32{0.007957546,-0.1066107,0.02365512},[3]float32{0.01098643,-0.1065792,0.02300561},[3]float32{0.01363327,-0.1065982,0.02116033},[3]float32{0.01532759,-0.1066661,0.01844381},[3]float32{0.01582846,-0.106763,0.01552955},[3]float32{0.01518068,-0.1068848,0.01250265},[3]float32{0.01333626,-0.1070144,0.00985841},[3]float32{0.0106195,-0.1071253,0.008166798},[3]float32{0.007704094,-0.1071964,0.007668164},[3]float32{0.007864625,-0.1249986,0.007989226},[3]float32{0.004835457,-0.1249986,0.008638166},[3]float32{0.002188789,-0.1249986,0.01048378},[3]float32{0.000495082,-0.1249986,0.01320154},[3]float32{-0.000004914,-0.1249986,0.01611754},[3]float32{0.000643965,-0.1249986,0.01914664},[3]float32{0.002489553,-0.1249986,0.02179321},[3]float32{0.005207313,-0.1249986,0.02348682},[3]float32{0.008123359,-0.1249986,0.02398674},[3]float32{0.01115253,-0.1249986,0.0233378},[3]float32{0.01379919,-0.1249986,0.02149218},[3]float32{0.0154929,-0.1249986,0.01877443},[3]float32{0.0159929,-0.1249986,0.01585843},[3]float32{0.01534402,-0.1249986,0.01282933},[3]float32{0.01349843,-0.1249986,0.01018275},[3]float32{0.01078067,-0.1249986,0.008489142},[3]float32{0.007864625,-0.1249986,0.007989226},[3]float32{0.007704144,-0.1428009,0.007668264},[3]float32{0.004675259,-0.1427694,0.008317771},[3]float32{0.002028421,-0.1427884,0.01016305},[3]float32{0.000334101,-0.1428563,0.01287957},[3]float32{-0.000166768,-0.1429531,0.01579383},[3]float32{0.000481014,-0.1430749,0.01882073},[3]float32{0.002325432,-0.1432045,0.02146497},[3]float32{0.005042194,-0.1433154,0.02315659},[3]float32{0.007957598,-0.1433865,0.02365522},[3]float32{0.01098648,-0.1434179,0.02300571},[3]float32{0.01363332,-0.143399,0.02116044},[3]float32{0.01532764,-0.143331,0.01844391},[3]float32{0.01582851,-0.1432342,0.01552965},[3]float32{0.01518073,-0.1431124,0.01250275},[3]float32{0.01333631,-0.1429828,0.00985851},[3]float32{0.01061955,-0.142872,0.008166898},[3]float32{0.007704144,-0.1428009,0.007668264},[3]float32{0.007222651,-0.1605739,0.006705278},[3]float32{0.004194617,-0.1605111,0.007356486},[3]float32{0.001547265,-0.160549,0.009200736},[3]float32{-0.000148893,-0.1606847,0.01191359},[3]float32{-0.00065238,-0.1608782,0.01482261},[3]float32{-0.000007892,-0.1611216,0.01784292},[3]float32{0.001833021,-0.1613806,0.02048015},[3]float32{0.004546784,-0.1616021,0.02216577},[3]float32{0.007460265,-0.1617442,0.02266055},[3]float32{0.0104883,-0.161807,0.02200935},[3]float32{0.01313565,-0.1617691,0.0201651},[3]float32{0.01483181,-0.1616334,0.01745224},[3]float32{0.0153353,-0.1614399,0.01454322},[3]float32{0.01469081,-0.1611965,0.01152291},[3]float32{0.0128499,-0.1609375,0.008885682},[3]float32{0.01013613,-0.160716,0.007200066},[3]float32{0.007222651,-0.1605739,0.006705278},[3]float32{0.006420146,-0.1782884,0.005100268},[3]float32{0.003393529,-0.1781943,0.00575431},[3]float32{0.000745322,-0.1782511,0.00759685},[3]float32{-0.000953898,-0.1784545,0.01030358},[3]float32{-0.00146175,-0.1787443,0.01320387},[3]float32{-0.000822752,-0.1791088,0.0162132},[3]float32{0.001012317,-0.1794969,0.01883874},[3]float32{0.003721083,-0.1798287,0.02051437},[3]float32{0.006631359,-0.1800415,0.02100274},[3]float32{0.009657976,-0.1801356,0.0203487},[3]float32{0.01230618,-0.1800788,0.01850616},[3]float32{0.0140054,-0.1798755,0.01579943},[3]float32{0.01451326,-0.1795857,0.01289914},[3]float32{0.01387426,-0.1792211,0.009889807},[3]float32{0.01203919,-0.1788331,0.007264267},[3]float32{0.009330422,-0.1785013,0.005588646},[3]float32{0.006420146,-0.1782884,0.005100268},[3]float32{0.005296629,-0.1959153,0.002853233},[3]float32{0.002271995,-0.19579,0.003511244},[3]float32{-0.000377408,-0.1958656,0.005351389},[3]float32{-0.002080917,-0.1961362,0.008049539},[3]float32{-0.002594879,-0.1965219,0.01093761},[3]float32{-0.001963567,-0.1970071,0.01393157},[3]float32{-0.000136679,-0.1975234,0.01654075},[3]float32{0.002565091,-0.197965,0.01820238},[3]float32{0.005470879,-0.1982483,0.01868178},[3]float32{0.008495512,-0.1983735,0.01802377},[3]float32{0.01114492,-0.1982979,0.01618363},[3]float32{0.01284842,-0.1980273,0.01348548},[3]float32{0.01336239,-0.1976416,0.01059741},[3]float32{0.01273108,-0.1971565,0.007603443},[3]float32{0.01090419,-0.1966401,0.004994265},[3]float32{0.008202417,-0.1961985,0.003332636},[3]float32{0.005296629,-0.1959153,0.002853233},[3]float32{0.003852099,-0.2134251,-0.000035827},[3]float32{0.000830016,-0.213269,0.000627285},[3]float32{-0.001820927,-0.2133632,0.002464353},[3]float32{-0.003529948,-0.2137007,0.005151477},[3]float32{-0.004051766,-0.2141816,0.008023837},[3]float32{-0.003430337,-0.2147865,0.01099803},[3]float32{-0.001613967,-0.2154304,0.01358618},[3]float32{0.001078808,-0.215981,0.01522981},[3]float32{0.003978827,-0.2163342,0.01569768},[3]float32{0.007000909,-0.2164903,0.01503457},[3]float32{0.009651852,-0.2163961,0.0131975},[3]float32{0.01136087,-0.2160587,0.01051037},[3]float32{0.01188269,-0.2155777,0.007638014},[3]float32{0.01126126,-0.2149728,0.004663817},[3]float32{0.009444892,-0.214329,0.002075676},[3]float32{0.006752118,-0.2137783,0.000432036},[3]float32{0.003852099,-0.2134251,-0.000035827},[3]float32{0.002086556,-0.2307889,-0.003566912},[3]float32{-0.000932409,-0.230602,-0.002897565},[3]float32{-0.003585233,-0.2307148,-0.00106426},[3]float32{-0.005300993,-0.2311185,0.001609388},[3]float32{-0.005832413,-0.2316938,0.004462543},[3]float32{-0.005223062,-0.2324176,0.007412584},[3]float32{-0.003419547,-0.2331879,0.009975014},[3]float32{-0.000737766,-0.2338466,0.01159667},[3]float32{0.0021552,-0.2342691,0.01205042},[3]float32{0.005174165,-0.2344559,0.01138108},[3]float32{0.007826989,-0.2343432,0.009547772},[3]float32{0.009542749,-0.2339395,0.006874125},[3]float32{0.01007417,-0.2333641,0.004020969},[3]float32{0.009464818,-0.2326404,0.001070929},[3]float32{0.007661304,-0.2318701,-0.001491502},[3]float32{0.004979522,-0.2312114,-0.003113153},[3]float32{0.002086556,-0.2307889,-0.003566912},[3]float32{0.0,-0.2479771,-0.007740024},[3]float32{-0.00301528,-0.24776,-0.007063307},[3]float32{-0.005670327,-0.247891,-0.005234449},[3]float32{-0.007394051,-0.2483603,-0.002576728},[3]float32{-0.007936819,-0.2490292,0.000253732},[3]float32{-0.007341742,-0.2498705,0.003175223},[3]float32{-0.005553421,-0.2507659,0.005707268},[3]float32{-0.002884633,-0.2515317,0.007302933},[3]float32{0.0,-0.2520229,0.007740024},[3]float32{0.00301528,-0.25224,0.007063307},[3]float32{0.005670327,-0.252109,0.005234449},[3]float32{0.007394051,-0.2516397,0.002576728},[3]float32{0.007936819,-0.2509708,-0.000253732},[3]float32{0.007341742,-0.2501296,-0.003175223},[3]float32{0.005553421,-0.2492341,-0.005707268},[3]float32{0.002884633,-0.2484683,-0.007302933},[3]float32{0.0,-0.2479771,-0.007740024},[3]float32{-0.001933789,-0.2392047,-0.004900325},[3]float32{0.000592624,-0.2306629,-0.003386314},[3]float32{0.001083405,-0.2394067,-0.005573215},[3]float32{-0.000409333,-0.2392706,-0.005390228},[3]float32{-0.00630727,-0.2397632,-0.000403167},[3]float32{-0.004587974,-0.2308855,0.000205124},[3]float32{-0.004587681,-0.2393266,-0.003069157},[3]float32{-0.005592042,-0.2395113,-0.001803013},[3]float32{-0.006844146,-0.2403855,0.002439077},[3]float32{-0.005709214,-0.2313948,0.003056294},[3]float32{-0.006718112,-0.2400621,0.001038499},[3]float32{-0.006241657,-0.2411681,0.005375393},[3]float32{-0.005684278,-0.2320357,0.005925977},[3]float32{-0.006699252,-0.2407552,0.003896027},[3]float32{-0.001769913,-0.2427136,0.009532372},[3]float32{-0.002150809,-0.2335412,0.01092978},[3]float32{-0.004445447,-0.2420012,0.007923215},[3]float32{-0.00318006,-0.2423833,0.008871278},[3]float32{0.001119047,-0.2431705,0.009978118},[3]float32{0.000726006,-0.2340908,0.01196307},[3]float32{-0.000308457,-0.2429777,0.009894148},[3]float32{0.00413624,-0.2433726,0.009305228},[3]float32{0.003649132,-0.2343951,0.01186983},[3]float32{0.002611784,-0.2433067,0.009795131},[3]float32{0.008509722,-0.242814,0.00480807},[3]float32{0.008829731,-0.2341725,0.008278389},[3]float32{0.006790133,-0.2432507,0.00747406},[3]float32{0.007794494,-0.243066,0.006207915},[3]float32{0.009046597,-0.2421918,0.001965826},[3]float32{0.00995097,-0.2336631,0.005427219},[3]float32{0.008920563,-0.2425152,0.003366404},[3]float32{0.008444109,-0.2414092,-0.00097049},[3]float32{0.009926034,-0.2330223,0.002557536},[3]float32{0.008901704,-0.2418221,0.000508876},[3]float32{0.003972365,-0.2398637,-0.005127469},[3]float32{0.006392566,-0.2315168,-0.002446267},[3]float32{0.006647899,-0.2405761,-0.003518311},[3]float32{0.005382512,-0.240194,-0.004466374},[3]float32{0.001083405,-0.2394067,-0.005573215},[3]float32{0.00351575,-0.2309672,-0.003479561},[3]float32{0.002510908,-0.2395996,-0.005489245},[3]float32{0.00351534,-0.01902915,-0.003480381},[3]float32{0.001083183,-0.01059143,-0.005573659},[3]float32{0.003972142,-0.01013446,-0.005127915},[3]float32{0.002510686,-0.01039858,-0.00548969},[3]float32{0.006392153,-0.01847953,-0.002447091},[3]float32{0.006647674,-0.009422042,-0.00351876},[3]float32{0.005382288,-0.009804192,-0.004466821},[3]float32{0.009925616,-0.01697399,0.0025567},[3]float32{0.008443884,-0.008588986,-0.000970941},[3]float32{0.00904637,-0.007806303,0.001965371},[3]float32{0.008901478,-0.008176036,0.000508423},[3]float32{0.00995055,-0.01633309,0.005426378},[3]float32{0.008509493,-0.007184084,0.004807613},[3]float32{0.008920335,-0.007482947,0.003365949},[3]float32{0.008829308,-0.01582375,0.008277544},[3]float32{0.006789904,-0.006747434,0.007473601},[3]float32{0.007794265,-0.006932123,0.006207458},[3]float32{0.003648709,-0.01560113,0.01186898},[3]float32{0.004136011,-0.006625538,0.009304768},[3]float32{0.001118818,-0.00682757,0.00997766},[3]float32{0.002611555,-0.006691372,0.009794673},[3]float32{0.000725584,-0.0159054,0.01196223},[3]float32{-0.001770141,-0.007284535,0.009531916},[3]float32{-0.000308685,-0.007020421,0.00989369},[3]float32{-0.002151229,-0.01645502,0.01092894},[3]float32{-0.004445674,-0.007996957,0.00792276},[3]float32{-0.003180288,-0.007614807,0.008870822},[3]float32{-0.005684691,-0.01796056,0.005925148},[3]float32{-0.006241883,-0.008830013,0.005374942},[3]float32{-0.00684437,-0.009612695,0.00243863},[3]float32{-0.006699477,-0.009242963,0.003895578},[3]float32{-0.005709626,-0.01860146,0.003055471},[3]float32{-0.006307492,-0.01023492,-0.000403612},[3]float32{-0.006718335,-0.009936052,0.001038052},[3]float32{-0.004588384,-0.0191108,0.000204304},[3]float32{-0.004587903,-0.01067157,-0.0030696},[3]float32{-0.005592264,-0.01048688,-0.001803457},[3]float32{0.000592215,-0.01933342,-0.003387132},[3]float32{-0.00193401,-0.01079346,-0.004900767},[3]float32{0.001083183,-0.01059143,-0.005573659},[3]float32{-0.000409554,-0.01072763,-0.005390672},[3]float32{0.0,-0.002022875,-0.007740024},[3]float32{0.002884633,-0.001531687,-0.007302933},[3]float32{0.005553421,-0.000765909,-0.005707268},[3]float32{0.007341742,0.000129539,-0.003175223},[3]float32{0.007936819,0.00097084,-0.000253732},[3]float32{0.007394051,0.001639661,0.002576728},[3]float32{0.005670327,0.002109013,0.005234449},[3]float32{0.00301528,0.002240038,0.007063307},[3]float32{0.0,0.002022875,0.007740024},[3]float32{-0.002884633,0.001531687,0.007302933},[3]float32{-0.005553421,0.000765909,0.005707268},[3]float32{-0.007341742,-0.000129539,0.003175223},[3]float32{-0.007936819,-0.00097084,0.000253732},[3]float32{-0.007394051,-0.001639661,-0.002576728},[3]float32{-0.005670327,-0.002109013,-0.005234449},[3]float32{-0.00301528,-0.002240038,-0.007063307},[3]float32{0.0,-0.2479771,-0.007740024},[3]float32{0.002884633,-0.2484683,-0.007302933},[3]float32{0.005553421,-0.2492341,-0.005707268},[3]float32{0.007341742,-0.2501296,-0.003175223},[3]float32{0.007936819,-0.2509708,-0.000253732},[3]float32{0.007394051,-0.2516397,0.002576728},[3]float32{0.005670327,-0.252109,0.005234449},[3]float32{0.00301528,-0.25224,0.007063307},[3]float32{0.0,-0.2520229,0.007740024},[3]float32{-0.002884633,-0.2515317,0.007302933},[3]float32{-0.005553421,-0.2507659,0.005707268},[3]float32{-0.007341742,-0.2498705,0.003175223},[3]float32{-0.007936819,-0.2490292,0.000253732},[3]float32{-0.007394051,-0.2483603,-0.002576728},[3]float32{-0.005670327,-0.247891,-0.005234449},[3]float32{-0.00301528,-0.24776,-0.007063307}},
                                        },
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal01"),
                                },
                                Rotation: &x3d.SFRotation{-0.25389813250098, 0.967230964315443, 0.0, 6.28023975869406},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        DEF: stringPtr("FlowerPetal"),
                                    },
                                    Appearance: &x3d.Appearance{
                                        Material: &x3d.Material{
                                            AmbientIntensity: floatPtr(0.0),
                                            DiffuseColor: &x3d.SFColor{1.0, 0.0, 0.0},
                                            Shininess: floatPtr(1.0),
                                        },
                                    },
                                    Geometry: &x3d.IndexedFaceSet{
                                        Solid: boolPtr(false),
                                        TexCoordIndex: []int32{14, 13, 12, -1, 12, 15, 14, -1, 16, 15, 12, -1, 11, 10, 0, -1, 11, 0, 16, -1, 9, 1, 10, -1, 16, 12, 11, -1, 9, 2, 1, -1, 0, 10, 1, -1, 9, 8, 2, -1, 3, 2, 8, -1, 3, 7, 6, -1, 5, 4, 6, -1, 3, 6, 4, -1, 3, 8, 7, -1, 18, 36, 35, -1, 18, 35, 17, -1, 20, 38, 37, -1, 20, 37, 19, -1, 19, 37, 36, -1, 19, 36, 18, -1, 22, 40, 39, -1, 22, 39, 21, -1, 24, 42, 41, -1, 24, 41, 23, -1, 25, 43, 42, -1, 25, 42, 24, -1, 23, 41, 40, -1, 23, 40, 22, -1, 21, 39, 38, -1, 21, 38, 20, -1, 27, 45, 44, -1, 27, 44, 26, -1, 29, 47, 46, -1, 29, 46, 28, -1, 28, 46, 45, -1, 28, 45, 27, -1, 31, 49, 48, -1, 31, 48, 30, -1, 33, 51, 50, -1, 33, 50, 32, -1, 34, 52, 51, -1, 34, 51, 33, -1, 32, 50, 49, -1, 32, 49, 31, -1, 30, 48, 47, -1, 30, 47, 29, -1, 26, 44, 43, -1, 26, 43, 25, -1, 67, 65, 66, -1, 65, 67, 68, -1, 64, 65, 68, -1, 69, 63, 64, -1, 69, 53, 63, -1, 62, 63, 53, -1, 69, 64, 68, -1, 61, 62, 54, -1, 53, 54, 62, -1, 61, 54, 55, -1, 60, 61, 55, -1, 56, 59, 60, -1, 57, 58, 56, -1, 59, 56, 58, -1, 56, 60, 55, -1},
                                        CoordIndex: []int32{14, 13, 12, -1, 12, 15, 14, -1, 16, 15, 12, -1, 11, 10, 0, -1, 11, 0, 16, -1, 9, 1, 10, -1, 16, 12, 11, -1, 9, 2, 1, -1, 0, 10, 1, -1, 9, 8, 2, -1, 3, 2, 8, -1, 3, 7, 6, -1, 5, 4, 6, -1, 3, 6, 4, -1, 3, 8, 7, -1, 18, 36, 35, -1, 18, 35, 17, -1, 20, 38, 37, -1, 20, 37, 19, -1, 19, 37, 36, -1, 19, 36, 18, -1, 22, 40, 39, -1, 22, 39, 21, -1, 24, 42, 41, -1, 24, 41, 23, -1, 25, 43, 42, -1, 25, 42, 24, -1, 23, 41, 40, -1, 23, 40, 22, -1, 21, 39, 38, -1, 21, 38, 20, -1, 27, 45, 44, -1, 27, 44, 26, -1, 29, 47, 46, -1, 29, 46, 28, -1, 28, 46, 45, -1, 28, 45, 27, -1, 31, 49, 48, -1, 31, 48, 30, -1, 33, 51, 50, -1, 33, 50, 32, -1, 34, 52, 51, -1, 34, 51, 33, -1, 32, 50, 49, -1, 32, 49, 31, -1, 30, 48, 47, -1, 30, 47, 29, -1, 26, 44, 43, -1, 26, 43, 25, -1, 67, 65, 66, -1, 65, 67, 68, -1, 64, 65, 68, -1, 69, 63, 64, -1, 69, 53, 63, -1, 62, 63, 53, -1, 69, 64, 68, -1, 61, 62, 54, -1, 53, 54, 62, -1, 61, 54, 55, -1, 60, 61, 55, -1, 56, 59, 60, -1, 57, 58, 56, -1, 59, 56, 58, -1, 56, 60, 55, -1},
                                        Coord: &x3d.Coordinate{
                                            Point: &x3d.MFVec3f{[3]float32{0.04385769,0.02648776,0.04485641},[3]float32{0.05110346,0.0351809,0.05806774},[3]float32{0.05742626,0.04387983,0.07175172},[3]float32{0.06256038,0.05286236,0.08657927},[3]float32{0.06352045,0.06117609,0.1021987},[3]float32{0.05089261,0.05736443,0.1011314},[3]float32{0.03992543,0.04915393,0.0907154},[3]float32{0.03029698,0.04047513,0.0787232},[3]float32{0.02162369,0.03164305,0.0659566},[3]float32{0.01405397,0.02305672,0.0531141},[3]float32{0.007210886,0.01431384,0.03960512},[3]float32{0.001431621,0.005554617,0.02553259},[3]float32{-0.002379125,-0.003031186,0.01081163},[3]float32{0.003381157,-0.007331477,-0.000395989},[3]float32{0.01643004,0.00051167,0.008267757},[3]float32{0.02624504,0.008666251,0.01915154},[3]float32{0.03583432,0.01786377,0.03216781},[3]float32{0.04385769,0.02648776,0.04485641},[3]float32{0.05110346,0.0351809,0.05806774},[3]float32{0.05742626,0.04387983,0.07175172},[3]float32{0.06256038,0.05286236,0.08657927},[3]float32{0.06352045,0.06117609,0.1021987},[3]float32{0.05089261,0.05736443,0.1011314},[3]float32{0.03992543,0.04915393,0.0907154},[3]float32{0.03029698,0.04047513,0.0787232},[3]float32{0.02162369,0.03164305,0.0659566},[3]float32{0.01405397,0.02305672,0.0531141},[3]float32{0.007210886,0.01431384,0.03960512},[3]float32{0.001431621,0.005554617,0.02553259},[3]float32{-0.002379125,-0.003031186,0.01081163},[3]float32{0.003381157,-0.007331477,-0.000395989},[3]float32{0.01643004,0.00051167,0.008267757},[3]float32{0.02624504,0.008666251,0.01915154},[3]float32{0.03583432,0.01786377,0.03216781},[3]float32{0.04385769,0.02648776,0.04485641},[3]float32{0.04475212,0.02302366,0.04664526},[3]float32{0.05199789,0.0317168,0.05985659},[3]float32{0.05832068,0.04041572,0.07354058},[3]float32{0.06345481,0.04939826,0.08836813},[3]float32{0.06441488,0.05771199,0.1039876},[3]float32{0.05178704,0.05390033,0.1029202},[3]float32{0.04081986,0.04568983,0.09250425},[3]float32{0.03119141,0.03701103,0.08051205},[3]float32{0.02251811,0.02817895,0.06774545},[3]float32{0.0149484,0.01959262,0.05490296},[3]float32{0.008105312,0.01084974,0.04139397},[3]float32{0.002326048,0.002090515,0.02732145},[3]float32{-0.001484698,-0.006495288,0.01260048},[3]float32{0.004275584,-0.01079558,0.001392865},[3]float32{0.01732447,-0.002952432,0.01005661},[3]float32{0.02713947,0.00520215,0.02094039},[3]float32{0.03672875,0.01439966,0.03395666},[3]float32{0.04475212,0.02302366,0.04664526},[3]float32{0.04475212,0.02302366,0.04664526},[3]float32{0.05199789,0.0317168,0.05985659},[3]float32{0.05832068,0.04041572,0.07354058},[3]float32{0.06345481,0.04939826,0.08836813},[3]float32{0.06441488,0.05771199,0.1039876},[3]float32{0.05178704,0.05390033,0.1029202},[3]float32{0.04081986,0.04568983,0.09250425},[3]float32{0.03119141,0.03701103,0.08051205},[3]float32{0.02251811,0.02817895,0.06774545},[3]float32{0.0149484,0.01959262,0.05490296},[3]float32{0.008105312,0.01084974,0.04139397},[3]float32{0.002326048,0.002090515,0.02732145},[3]float32{-0.001484698,-0.006495288,0.01260048},[3]float32{0.004275584,-0.01079558,0.001392865},[3]float32{0.01732447,-0.002952432,0.01005661},[3]float32{0.02713947,0.00520215,0.02094039},[3]float32{0.03672875,0.01439966,0.03395666}},
                                        },
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal02"),
                                },
                                Rotation: &x3d.SFRotation{-0.253124221850263, 0.967433784975849, 0.0, 0.485680664507531},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal03"),
                                },
                                Rotation: &x3d.SFRotation{-0.25095138615581, 0.967999691005363, 0.0, 0.980128158157223},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal04"),
                                },
                                Rotation: &x3d.SFRotation{-0.247835417280076, 0.968802150050056, 0.0, 1.4910078849199},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal05"),
                                },
                                Rotation: &x3d.SFRotation{-0.244531665294419, 0.96964130722053, 0.0, 2.02310414098241},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal06"),
                                },
                                Rotation: &x3d.SFRotation{-0.241981679348975, 0.970280818556901, 0.0, 2.575842752253},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal07"),
                                },
                                Rotation: &x3d.SFRotation{-0.241018380977703, 0.970520551060557, 0.0, 3.14160062499558},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal08"),
                                },
                                Rotation: &x3d.SFRotation{-0.241981731719399, 0.970280805496059, 0.0, 3.70735830001676},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal09"),
                                },
                                Rotation: &x3d.SFRotation{-0.244531751937197, 0.969641285370278, 0.0, 4.26009640570475},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal10"),
                                },
                                Rotation: &x3d.SFRotation{-0.247835511505401, 0.968802125945673, 0.0, 4.79219204352623},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal11"),
                                },
                                Rotation: &x3d.SFRotation{-0.250951463226849, 0.967999671024894, 0.0, 5.3030712231217},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal12"),
                                },
                                Rotation: &x3d.SFRotation{-0.253124264594588, 0.967433773792007, 0.0, 5.79751835476622},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerCenterSphere"),
                                },
                                Translation: &x3d.SFVec3f{0.0, 0.01, 0.0},
                                Scale: &x3d.SFVec3f{1.0, 1.5, 1.0},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        DEF: stringPtr("FlowerCenter"),
                                    },
                                    Appearance: &x3d.Appearance{
                                        Material: &x3d.Material{
                                            AmbientIntensity: floatPtr(1.0),
                                            DiffuseColor: &x3d.SFColor{1.0, 1.0, 0.0},
                                            EmissiveColor: &x3d.SFColor{1.0, 1.0, 0.0},
                                            Shininess: floatPtr(1.0),
                                        },
                                    },
                                    Geometry: &x3d.Sphere{
                                        Radius: floatPtr(0.015),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("Stem2"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("Stem1"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal01a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.25389813250098, 0.967230964315443, 0.0, 6.28023975869406},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal02a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.253124221850263, 0.967433784975849, 0.0, 0.485680664507531},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal03a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.25095138615581, 0.967999691005363, 0.0, 0.980128158157223},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal04a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.247835417280076, 0.968802150050056, 0.0, 1.4910078849199},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal05a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.244531665294419, 0.96964130722053, 0.0, 2.02310414098241},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal06a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.241981679348975, 0.970280818556901, 0.0, 2.575842752253},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal07a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.241018380977703, 0.970520551060557, 0.0, 3.14160062499558},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal08a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.241981731719399, 0.970280805496059, 0.0, 3.70735830001676},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal09a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.244531751937197, 0.969641285370278, 0.0, 4.26009640570475},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal10a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.247835511505401, 0.968802125945673, 0.0, 4.79219204352623},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal11a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.250951463226849, 0.967999671024894, 0.0, 5.3030712231217},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("FlowerPetal12a"),
                                },
                                Translation: &x3d.SFVec3f{0.25, 0.0, 0.0},
                                Rotation: &x3d.SFRotation{-0.253124264594588, 0.967433773792007, 0.0, 5.79751835476622},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerPetal"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                Translation: &x3d.SFVec3f{0.25, 0.01, 0.0},
                                Scale: &x3d.SFVec3f{1.0, 1.5, 1.0},
                            Children: []x3d.X3DNode{
                                &x3d.Shape{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        USE: stringPtr("FlowerCenter"),
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("BorderFlower01"),
                                },
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("Stem1"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal01b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.25389813250098, 0.967230964315443, 0.0, 6.28023975869406},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal02b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.253124221850263, 0.967433784975849, 0.0, 0.485680664507531},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal03b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.25095138615581, 0.967999691005363, 0.0, 0.980128158157223},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal04b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.247835417280076, 0.968802150050056, 0.0, 1.4910078849199},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal05b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.244531665294419, 0.96964130722053, 0.0, 2.02310414098241},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal06b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.241981679348975, 0.970280818556901, 0.0, 2.575842752253},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal07b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.241018380977703, 0.970520551060557, 0.0, 3.14160062499558},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal08b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.241981731719399, 0.970280805496059, 0.0, 3.70735830001676},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal09b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.244531751937197, 0.969641285370278, 0.0, 4.26009640570475},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal10b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.247835511505401, 0.968802125945673, 0.0, 4.79219204352623},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal11b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.250951463226849, 0.967999671024894, 0.0, 5.3030712231217},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("FlowerPetal12b"),
                                        },
                                        Translation: &x3d.SFVec3f{0.5, 0.0, 0.0},
                                        Rotation: &x3d.SFRotation{-0.253124264594588, 0.967433773792007, 0.0, 5.79751835476622},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerPetal"),
                                            },
                                        },
                                    },
                                },
                                &x3d.Transform{
                                        Translation: &x3d.SFVec3f{0.5, 0.01, 0.0},
                                        Scale: &x3d.SFVec3f{1.0, 1.5, 1.0},
                                    Children: []x3d.X3DNode{
                                        &x3d.Shape{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                USE: stringPtr("FlowerCenter"),
                                            },
                                        },
                                    },
                                },
                            },
                        },
                    },
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal01Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 0.0, 1.0, 0.0, -0.5, 1.0, 0.0, 6.28, 0.5, 1.0, 0.0, 6.28, 0.0, 0.0, 1.0, 0.0},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal02Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 0.5236, -0.5, 1.0, 0.0, 0.5236, 0.5, 1.0, 0.0, 0.5236, 0.0, 1.0, 0.0, 0.5236},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal03Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 1.0472, -0.5, 1.0, 0.0, 1.0472, 0.5, 1.0, 0.0, 1.0472, 0.0, 1.0, 0.0, 1.0472},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal04Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 1.5708, -0.5, 1.0, 0.0, 1.5708, 0.5, 1.0, 0.0, 1.5708, 0.0, 1.0, 0.0, 1.5708},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal05Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 2.0944, -0.5, 1.0, 0.0, 2.0944, 0.5, 1.0, 0.0, 2.0944, 0.0, 1.0, 0.0, 2.0944},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal06Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 2.618, -0.5, 1.0, 0.0, 2.618, 0.5, 1.0, 0.0, 2.618, 0.0, 1.0, 0.0, 2.618},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal07Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 3.1416, -0.5, 1.0, 0.0, 3.1416, 0.5, 1.0, 0.0, 3.1416, 0.0, 1.0, 0.0, 3.1416},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal08Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 3.6652, -0.5, 1.0, 0.0, 3.6652, 0.5, 1.0, 0.0, 3.6652, 0.0, 1.0, 0.0, 3.6652},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal09Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 4.1888, -0.5, 1.0, 0.0, 4.1888, 0.5, 1.0, 0.0, 4.1888, 0.0, 1.0, 0.0, 4.1888},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal10Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 4.7124, -0.5, 1.0, 0.0, 4.7124, 0.5, 1.0, 0.0, 4.7124, 0.0, 1.0, 0.0, 4.7124},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal11Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 5.236, -0.5, 1.0, 0.0, 5.236, 0.5, 1.0, 0.0, 5.236, 0.0, 1.0, 0.0, 5.236},
                },
                &x3d.OrientationInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("Petal12Move"),
                    },
                    Key: x3d.MFFloat{0.0, 0.23, 0.55, 1.0},
                    KeyValue: x3d.MFRotation{0.0, 1.0, 0.0, 5.7596, -0.5, 1.0, 0.0, 5.7596, 0.5, 1.0, 0.0, 5.7596, 0.0, 1.0, 0.0, 5.7596},
                },
                &x3d.Group{
                        CoreX3DNode: x3d.CoreX3DNode{
                            DEF: stringPtr("BorderFlowers"),
                        },
                    Children: []x3d.X3DNode{
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlowerSpecial"),
                                },
                                Translation: &x3d.SFVec3f{7.0, 0.35, 0.0},
                                Scale: &x3d.SFVec3f{2.0, 2.0, 2.0},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower01"),
                                },
                                Translation: &x3d.SFVec3f{9.198902, 0.25, -0.863062},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower02"),
                                },
                                Translation: &x3d.SFVec3f{13.13242, 0.25, 0.935333},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower03"),
                                },
                                Translation: &x3d.SFVec3f{17.52433, 0.25, 1.916645},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower04"),
                                },
                                Translation: &x3d.SFVec3f{20.60856, 0.25, 5.182358},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower05"),
                                },
                                Translation: &x3d.SFVec3f{21.64926, 0.25, 9.571372},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower06"),
                                },
                                Translation: &x3d.SFVec3f{21.48226, 0.25, 14.11668},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower07"),
                                },
                                Translation: &x3d.SFVec3f{24.02613, 0.25, 17.74993},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower08"),
                                },
                                Translation: &x3d.SFVec3f{26.9932, 0.25, 21.15544},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower09"),
                                },
                                Translation: &x3d.SFVec3f{27.82307, 0.25, 25.58628},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("rFlower10"),
                                },
                                Translation: &x3d.SFVec3f{27.49279, 0.25, 30.1268},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower01"),
                                },
                                Translation: &x3d.SFVec3f{-1.441, 0.25, 0.1745},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower02"),
                                },
                                Translation: &x3d.SFVec3f{0.2505, 0.25, 4.274},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower03"),
                                },
                                Translation: &x3d.SFVec3f{3.55, 0.25, 7.177},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower04"),
                                },
                                Translation: &x3d.SFVec3f{7.952796, 0.25, 7.761609},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower05"),
                                },
                                Translation: &x3d.SFVec3f{11.54255, 0.25, 0.060083},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower06"),
                                },
                                Translation: &x3d.SFVec3f{12.36343, 0.25, 14.36499},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower07"),
                                },
                                Translation: &x3d.SFVec3f{12.33216, 0.25, 18.81194},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower08"),
                                },
                                Translation: &x3d.SFVec3f{14.54865, 0.0, 22.60859},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower09"),
                                },
                                Translation: &x3d.SFVec3f{17.73875, 0.25, 25.70914},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                        &x3d.Transform{
                                CoreX3DNode: x3d.CoreX3DNode{
                                    DEF: stringPtr("lFlower10"),
                                },
                                Translation: &x3d.SFVec3f{18.51515, 0.25, 30.00324},
                            Children: []x3d.X3DNode{
                                &x3d.Transform{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            USE: stringPtr("BorderFlower01"),
                                        },
                                    Children: []x3d.X3DNode{
                                    },
                                },
                            },
                        },
                    },
                },
                &x3d.Group{
                    Children: []x3d.X3DNode{
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("lFlower01_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.787, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{-1.441071,0.25,0.174511},[3]float32{-1.441071,0.25,0.174511},[3]float32{5.0,1.25,16.0},[3]float32{21.75,2.25,32.0},[3]float32{21.75,2.25,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("lFlower02_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{0.250537,0.25,4.273979},[3]float32{0.250537,0.25,4.273979},[3]float32{21.55,2.35,32.0},[3]float32{21.55,2.35,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("lFlower03_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{3.550097,0.25,7.177285},[3]float32{3.550097,0.25,7.177285},[3]float32{21.55,2.45,32.0},[3]float32{21.55,2.45,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("lFlower04_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{7.952796,0.25,7.761609},[3]float32{7.952796,0.25,7.761609},[3]float32{21.45,2.55,32.0},[3]float32{21.45,2.55,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("lFlower05_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{11.54255,0.25,10.06008},[3]float32{11.54255,0.25,10.06008},[3]float32{21.55,2.45,32.0},[3]float32{21.55,2.45,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("lFlower06_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{12.36343,0.25,14.36499},[3]float32{12.36343,0.25,14.36499},[3]float32{21.36,2.79,32.0},[3]float32{21.36,2.79,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("lFlower07_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{12.33216,0.25,18.81194},[3]float32{12.33216,0.25,18.81194},[3]float32{21.45,2.9,32.0},[3]float32{21.45,2.9,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("lFlower08_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{14.54865,0.25,22.60859},[3]float32{14.54865,0.25,22.60859},[3]float32{21.59,2.86,32.0},[3]float32{21.59,2.86,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("rFlower01_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{9.198902,0.25,-0.863062},[3]float32{9.198902,0.25,-0.863062},[3]float32{21.85,2.35,32.0},[3]float32{21.85,2.35,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("rFlower02_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{13.13242,0.25,0.935333},[3]float32{13.13242,0.25,0.935333},[3]float32{21.95,2.45,32.0},[3]float32{21.95,2.45,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("rFlower03_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{17.52433,0.25,1.916645},[3]float32{17.52433,0.25,1.916645},[3]float32{22.05,2.55,32.0},[3]float32{22.05,2.55,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("rFlower04_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{20.60856,0.25,5.182358},[3]float32{20.60856,0.25,5.182358},[3]float32{22.15,2.65,32.0},[3]float32{22.15,2.65,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("rFlower05_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{21.64926,0.25,9.571372},[3]float32{21.64926,0.25,9.571372},[3]float32{22.14,2.79,32.0},[3]float32{22.14,2.79,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("rFlower06_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{21.48226,0.25,14.11668},[3]float32{21.48226,0.25,14.11668},[3]float32{22.06,2.9,32.0},[3]float32{22.06,2.9,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("rFlower07_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{24.02613,0.25,17.74993},[3]float32{24.02613,0.25,17.74993},[3]float32{21.91,2.86,32.0},[3]float32{21.91,2.86,32.0}},
                        },
                        &x3d.PositionInterpolator{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("rFlower08_TranslationInterpolator"),
                            },
                            Key: x3d.MFFloat{0.0, 0.785, 0.81, 1.0},
                            KeyValue: &x3d.MFVec3f{[3]float32{26.9932,0.25,21.15544},[3]float32{26.9932,0.25,21.15544},[3]float32{21.75,2.85,32.0},[3]float32{21.75,2.85,32.0}},
                        },
                    },
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerStartTIME"),
                    FromField: stringPtr("cycleTime"),
                    ToNode: stringPtr("FlowerStartTIME"),
                    ToField: stringPtr("set_stopTime"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerStartTIME"),
                    FromField: stringPtr("stopTime_changed"),
                    ToNode: stringPtr("FlowerDelayTIME"),
                    ToField: stringPtr("set_startTime"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerDelayTIME"),
                    FromField: stringPtr("isActive"),
                    ToNode: stringPtr("FlowerDelayFILTER"),
                    ToField: stringPtr("set_boolean"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerDelayFILTER"),
                    FromField: stringPtr("inputFalse"),
                    ToNode: stringPtr("FlowerTRIGGER"),
                    ToField: stringPtr("set_boolean"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerTRIGGER"),
                    FromField: stringPtr("triggerTime"),
                    ToNode: stringPtr("FlowerHeartTimer"),
                    ToField: stringPtr("set_startTime"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal01Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal02Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal03Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal04Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal05Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal06Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal07Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal08Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal09Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal10Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal11Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("PetalTime"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("Petal12Move"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal01Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal01"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal02Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal02"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal03Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal03"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal04Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal04"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal05Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal05"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal06Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal06"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal07Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal07"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal08Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal08"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal09Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal09"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal10Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal10"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal11Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal11"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal12Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal12"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal01Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal01a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal02Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal02a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal03Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal03a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal04Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal04a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal05Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal05a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal06Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal06a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal07Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal07a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal08Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal08a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal09Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal09a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal10Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal10a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal11Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal11a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal12Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal12a"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal01Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal01b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal02Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal02b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal03Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal03b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal04Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal04b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal05Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal05b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal06Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal06b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal07Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal07b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal08Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal08b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal09Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal09b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal10Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal10b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal11Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal11b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("Petal12Move"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("FlowerPetal12b"),
                    ToField: stringPtr("set_rotation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("lFlower01_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("lFlower02_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("lFlower03_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("lFlower04_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("lFlower05_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("lFlower06_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("lFlower07_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("lFlower08_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("rFlower01_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("rFlower02_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("rFlower03_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("rFlower04_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("rFlower05_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("rFlower06_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("rFlower07_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("FlowerHeartTimer"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("rFlower08_TranslationInterpolator"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("lFlower01_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("lFlower01"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("lFlower02_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("lFlower02"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("lFlower03_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("lFlower03"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("lFlower04_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("lFlower04"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("lFlower05_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("lFlower05"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("lFlower06_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("lFlower06"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("lFlower07_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("lFlower07"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("lFlower08_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("lFlower08"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("rFlower01_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("rFlower01"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("rFlower02_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("rFlower02"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("rFlower03_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("rFlower03"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("rFlower04_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("rFlower04"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("rFlower05_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("rFlower05"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("rFlower06_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("rFlower06"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("rFlower07_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("rFlower07"),
                    ToField: stringPtr("set_translation"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("rFlower08_TranslationInterpolator"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("rFlower08"),
                    ToField: stringPtr("set_translation"),
                },
            },
        },
    }


	fmt.Println("\n--- Validating the generated scene (internal logic) ---")
	err := sceneRoot.Scene.Validate()
	if err != nil {
		log.Fatalf("Scene validation failed: %v", err)
	}
	fmt.Println("✅ Internal scene validation successful!")
	fmt.Println("\n--- Serializing scene to XML ---")
	output, err := xml.MarshalIndent(sceneRoot, "", "  ")

	if err != nil {
		log.Fatalf("XML Marshaling failed: %v", err)
	}
	/*
	fmt.Println("\n--- Validating XML against X3D 4.0 Schema (using libxml2) ---")
	err = validateXMLWithSchema(output, schemaFilename)
	if err != nil {
		fmt.Printf("--- Invalid Generated XML ---\n%s\n---------------------------\n", string(output))
		log.Fatalf("Schema validation failed for generated XML: %v", err)
	}
	fmt.Println("✅ XML is valid against the X3D 4.0 schema!")
	*/
	filename := "../data/FlowerSet.new.go.x3d"
	file, err := os.OpenFile(filename, os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		fmt.Printf("Error opening file: %v\n", err)
		return
	}
	defer file.Close() // Ensure the file is closed when the function exits

	// Write the string content to the file
	header := "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE X3D PUBLIC \"ISO//Web3D//DTD X3D 4.0//EN\" \"https://www.web3d.org/specifications/x3d-4.0.dtd\">\n"
	_, err = file.WriteString(header)
	if err != nil {
		fmt.Printf("Error writing header to file: %v\n", err)
		return
	}

	_, err = file.Write(output)
	if err != nil {
		fmt.Printf("Error writing bytes to file: %v\n", err)
		return
	}

	fmt.Printf("\n✅ Scene successfully written to %s\n", filename)
	fmt.Printf("   You can view the generated XML below:\n\n%s\n", string(output))
}