
package main

import (
	"encoding/xml"
	"fmt"
	"io"
	"log"
	"net/http"
	"os"

	"gox3d/x3d" // Assumes your module is named x3d-go-tester

	// Imports for the CGo-based libxml2 wrapper
	"github.com/lestrrat-go/libxml2"
	"github.com/lestrrat-go/libxml2/xsd"
)

// ... (Helper functions remain the same) ...
func stringPtr(s string) *string { return &s }
func floatPtr(f float32) *float32 { return &f }
func doublePtr(d float64) *float64 { return &d }
func boolPtr(b bool) *bool       { return &b }
func int32Ptr(i int32) *int32    { return &i }

func downloadSchemaIfNotExists(url, filepath string) error {
	// ... (function is correct, no changes) ...
	if _, err := os.Stat(filepath); err == nil {
		fmt.Printf("Schema file '%s' already exists. Skipping download.\n", filepath)
		return nil
	}
	fmt.Printf("Downloading X3D schema from %s to %s...\n", url, filepath)
	resp, err := http.Get(url)
	if err != nil { return fmt.Errorf("failed to download schema: %w", err) }
	defer resp.Body.Close()
	if resp.StatusCode != http.StatusOK { return fmt.Errorf("bad status: %s", resp.Status) }
	out, err := os.Create(filepath)
	if err != nil { return fmt.Errorf("failed to create schema file: %w", err) }
	defer out.Close()
	_, err = io.Copy(out, resp.Body)
	if err != nil { return fmt.Errorf("failed to save schema: %w", err) }
	fmt.Println("Schema downloaded successfully.")
	return nil
}

// Updated validation function to print detailed errors
func validateXMLWithSchema(xmlData []byte, schemaPath string) error {
	schema, err := xsd.ParseFromFile(schemaPath)
	if err != nil { return fmt.Errorf("failed to parse schema file %s: %w", schemaPath, err) }
	defer schema.Free()
	doc, err := libxml2.Parse(xmlData)
	if err != nil { return fmt.Errorf("failed to parse XML data: %w", err) }
	defer doc.Free()

	validationErr := schema.Validate(doc)
	if validationErr != nil {
		errorLog := ""
		if schemaErrors, ok := validationErr.(xsd.SchemaValidationError); ok {
			for i, e := range schemaErrors.Errors() {
				errorLog += fmt.Sprintf("Error %d: %s\n", i+1, e.Error())
			}
			return fmt.Errorf("schema validation failed with %d errors:\n%s", len(schemaErrors.Errors()), errorLog)
		}
		return fmt.Errorf("schema validation failed: %w", validationErr)
	}
	return nil
}

func main() {
	fmt.Println("--- Building and Testing an X3D Scene in Go ---")

	const schemaURL = "https://www.web3d.org/specifications/x3d-4.0.xsd"
	const schemaFilename = "x3d-4.0.xsd"
	if err := downloadSchemaIfNotExists(schemaURL, schemaFilename); err != nil {
		log.Fatalf("Could not prepare schema file: %v", err)
	}
    sceneRoot := &x3d.X3D{
        Profile: stringPtr("Immersive"),
        Version: stringPtr("4.0"),
        Head: &x3d.Head{
            Components: []*x3d.Component{
                &x3d.Component{
                    Name: stringPtr("HAnim"),
                    Level: int32Ptr(3),
            },
        },
            Metas: []*x3d.Meta{
                &x3d.Meta{
                    Name: stringPtr("title"),
                    Content: stringPtr("JinFacsAu44SquintMorpher.x3d"),
            },
            &x3d.Meta{
                Name: stringPtr("description"),
                Content: stringPtr("Facial Action Coding System (FACS) example for Action Unit (AU) 44, Squint Morpher."),
            },
            &x3d.Meta{
                Name: stringPtr("creator"),
                Content: stringPtr("Yujin Jung"),
            },
            &x3d.Meta{
                Name: stringPtr("translator"),
                Content: stringPtr("Chul Hee Jung"),
            },
            &x3d.Meta{
                Name: stringPtr("translator"),
                Content: stringPtr("Myeong Won Lee"),
            },
            &x3d.Meta{
                Name: stringPtr("translator"),
                Content: stringPtr("Don Brutzman"),
            },
            &x3d.Meta{
                Name: stringPtr("translator"),
                Content: stringPtr("Joe D. Williams"),
            },
            &x3d.Meta{
                Name: stringPtr("created"),
                Content: stringPtr("16 December 2021"),
            },
            &x3d.Meta{
                Name: stringPtr("modified"),
                Content: stringPtr("Tue, 09 Sep 2025 19:38:38 GMT"),
            },
            &x3d.Meta{
                Name: stringPtr("reference"),
                Content: stringPtr("originals/README.html"),
            },
            &x3d.Meta{
                Name: stringPtr("reference"),
                Content: stringPtr("originals/FACS_AU44(Jin)_Squint_Morpher.x3d"),
            },
            &x3d.Meta{
                Name: stringPtr("reference"),
                Content: stringPtr("https://en.wikipedia.org/wiki/Facial_Action_Coding_System"),
            },
            &x3d.Meta{
                Name: stringPtr("reference"),
                Content: stringPtr("https://web.cs.wpi.edu/~matt/courses/cs563/talks/face_anim/ekman.html"),
            },
            &x3d.Meta{
                Name: stringPtr("reference"),
                Content: stringPtr("Bryn Farnsworth, FACS Visual Guidebook https://imotions.com/blog/learning/research-fundamentals/facial-action-coding-system"),
            },
            &x3d.Meta{
                Name: stringPtr("generator"),
                Content: stringPtr("Suwon VRLAB X3D Converter"),
            },
            &x3d.Meta{
                Name: stringPtr("generator"),
                Content: stringPtr("X3D-Edit 4.0, https://savage.nps.edu/X3D-Edit"),
            },
            &x3d.Meta{
                Name: stringPtr("generator"),
                Content: stringPtr("x3d-tidy V2.2.1, https://www.npmjs.com/package/x3d-tidy"),
            },
            },
        },
        Scene: &x3d.Scene{
            Children: []x3d.X3DChildNode{
                &x3d.Viewpoint{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("HelloJin"),
                    },
                    Description: stringPtr("Hello Jin! 안녕하세요 진!"),
                    Position: &x3d.SFVec3f{0.0, 20.0, 60.0},
                },
                &x3d.TimeSensor{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("JinSquint_Clock"),
                    },
                    CycleInterval: doublePtr(0.99),
                    Loop: boolPtr(true),
                },
                &x3d.ScalarInterpolator{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("AnimationAdapter_JinSquint"),
                    },
                    Key: x3d.MFFloat{0.0, 0.25, 0.5, 0.75, 1.0},
                    KeyValue: x3d.MFFloat{0.0, 0.5, 1.0, 0.5, 0.0},
                },
                &x3d.HAnimHumanoid{
                    CoreX3DNode: x3d.CoreX3DNode{
                        DEF: stringPtr("hanim_humanoid"),
                    },
                    Name: stringPtr("humanoid"),
                    Skeleton: []x3d.X3DNode{
                        &x3d.HAnimJoint{
                            CoreX3DNode: x3d.CoreX3DNode{
                                DEF: stringPtr("hanim_root"),
                            },
                            Name: stringPtr("humanoid_root"),
                            Children: []x3d.X3DNode{
                                &x3d.HAnimSegment{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        DEF: stringPtr("hanim_sacrum"),
                                    },
                                    Name: stringPtr("sacrum"),
                                    &x3d.WorldInfo{
                                        Title: stringPtr("JinFacsAu44SquintMorpher.x3d"),
                                    },
                                    &x3d.Background{
                                        SkyColor: &x3d.MFColor{[3]float32{0.8,0.9,1.0}},
                                    },
                                    &x3d.NavigationInfo{
                                        Type: x3d.MFString{"EXAMINE"},
                                    },
                            },
                            Children: []x3d.X3DNode{
                                &x3d.HAnimJoint{
                                    CoreX3DNode: x3d.CoreX3DNode{
                                        DEF: stringPtr("hanim_skullbase"),
                                    },
                                    Name: stringPtr("skullbase"),
                                    Children: []x3d.X3DNode{
                                        &x3d.HAnimSegment{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("hanim_Lower_teeth"),
                                            },
                                            Name: stringPtr("lower_teeth"),
                                            Displacers: &x3d.HAnimDisplacer{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Lower_teeth_MorphInterpolator_JinSquint"),
                                                },
                                                Name: stringPtr("lower_teeth_morphinterpolator"),
                                                Weight: floatPtr(0.6989899),
                                            },
                                            Coord: &x3d.Coordinate{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Lower_teeth_COORD"),
                                                },
                                                Point: &x3d.MFVec3f{[3]float32{2.49,-0.346,-1.665},[3]float32{2.488,0.1468,-1.593},[3]float32{1.904,0.2897,-1.545},[3]float32{2.499,-0.444,-0.9669},[3]float32{2.786,0.06917,-0.9244},[3]float32{2.157,0.2012,-0.9269},[3]float32{2.398,-0.5365,-0.3089},[3]float32{2.674,-0.03385,-0.1909},[3]float32{2.131,0.1021,-0.2568},[3]float32{2.124,-0.6222,0.3018},[3]float32{2.368,-0.1295,0.4901},[3]float32{2.006,0.01241,0.3815},[3]float32{1.712,-0.7021,0.7777},[3]float32{1.909,-0.2185,1.124},[3]float32{1.713,-0.0744,0.9995},[3]float32{1.197,-0.75,1.101},[3]float32{1.335,-0.2719,1.504},[3]float32{1.253,-0.1234,1.348},[3]float32{0.6088,-0.7719,1.344},[3]float32{0.679,-0.2963,1.678},[3]float32{0.6546,-0.1459,1.508},[3]float32{0.0,-0.3025,1.722},[3]float32{0.0,-0.151,1.545},[3]float32{1.901,0.2634,-1.551},[3]float32{1.93,0.0002013,-1.034},[3]float32{1.906,-0.1155,-0.4374},[3]float32{1.794,-0.1957,0.1341},[3]float32{1.533,-0.2733,0.6859},[3]float32{1.121,-0.3171,0.9981},[3]float32{0.5859,-0.3372,1.141},[3]float32{0.0,-0.3419,1.174},[3]float32{2.405,0.2839,-1.554},[3]float32{1.988,0.293,-1.533},[3]float32{2.213,0.2428,-0.9146},[3]float32{2.185,0.1482,-0.2411},[3]float32{2.054,0.05845,0.3977},[3]float32{1.749,-0.03285,1.048},[3]float32{1.275,-0.08119,1.392},[3]float32{0.6617,-0.1034,1.55},[3]float32{0.6764,-0.1281,1.683},[3]float32{1.33,-0.1046,1.516},[3]float32{1.895,-0.05298,1.148},[3]float32{2.345,0.03838,0.4979},[3]float32{2.642,0.1326,-0.1729},[3]float32{2.743,0.2346,-0.899},[3]float32{0.0,0.2369,-1.479},[3]float32{2.23,0.7878,-1.476},[3]float32{2.257,0.7123,-0.9376},[3]float32{2.702,0.7112,-0.9303},[3]float32{2.682,0.79,-1.491},[3]float32{0.5807,0.3499,1.642},[3]float32{0.08538,0.3469,1.663},[3]float32{0.08698,0.3321,1.769},[3]float32{0.5887,0.3357,1.743},[3]float32{0.7603,0.3393,1.717},[3]float32{1.244,0.3562,1.597},[3]float32{1.21,0.3696,1.502},[3]float32{0.7458,0.3532,1.619},[3]float32{1.402,0.3657,1.53},[3]float32{1.811,0.4028,1.265},[3]float32{1.714,0.4139,1.186},[3]float32{1.351,0.3785,1.438},[3]float32{1.943,0.4212,1.134},[3]float32{2.266,0.491,0.6374},[3]float32{2.054,0.5025,0.5555},[3]float32{1.813,0.4322,1.056},[3]float32{2.365,0.5149,0.4677},[3]float32{2.572,0.5841,-0.02519},[3]float32{2.216,0.5928,-0.08726},[3]float32{2.106,0.526,0.3881},[3]float32{2.626,0.6092,-0.204},[3]float32{2.692,0.6845,-0.7402},[3]float32{2.26,0.6874,-0.7606},[3]float32{2.233,0.6163,-0.2546},[3]float32{1.901,0.7339,-1.485},[3]float32{2.295,0.8405,-1.396},[3]float32{2.314,0.7849,-1.0},[3]float32{2.638,0.7846,-0.9984},[3]float32{2.623,0.8416,-1.404},[3]float32{0.5147,0.4098,1.67},[3]float32{0.153,0.4075,1.686},[3]float32{0.1549,0.3975,1.757},[3]float32{0.5193,0.4001,1.739},[3]float32{0.8237,0.4065,1.694},[3]float32{1.172,0.4186,1.607},[3]float32{1.152,0.4277,1.542},[3]float32{0.8114,0.4157,1.627},[3]float32{1.449,0.4354,1.488},[3]float32{1.739,0.4621,1.298},[3]float32{1.679,0.4699,1.242},[3]float32{1.409,0.4439,1.427},[3]float32{1.968,0.4948,1.064},[3]float32{2.192,0.5458,0.7013},[3]float32{2.053,0.5539,0.6439},[3]float32{1.864,0.5026,1.009},[3]float32{2.357,0.5884,0.3984},[3]float32{2.494,0.6385,0.0419},[3]float32{2.251,0.6451,-0.005292},[3]float32{2.157,0.5961,0.3436},[3]float32{2.581,0.683,-0.275},[3]float32{2.623,0.7373,-0.6614},[3]float32{2.316,0.74,-0.6806},[3]float32{2.291,0.6875,-0.3073},[3]float32{2.228,0.4099,-1.53},[3]float32{2.256,0.334,-0.9894},[3]float32{2.704,0.3329,-0.9821},[3]float32{2.683,0.4121,-1.546},[3]float32{0.582,-0.02776,1.586},[3]float32{0.08377,-0.03077,1.607},[3]float32{0.08547,-0.04648,1.719},[3]float32{0.5905,-0.04281,1.693},[3]float32{0.7592,-0.03927,1.668},[3]float32{1.246,-0.02229,1.547},[3]float32{1.21,-0.00807,1.445},[3]float32{0.7438,-0.02453,1.563},[3]float32{1.402,-0.01297,1.48},[3]float32{1.815,0.02459,1.213},[3]float32{1.713,0.03626,1.13},[3]float32{1.348,0.0006513,1.383},[3]float32{1.945,0.04273,1.084},[3]float32{2.27,0.1129,0.5843},[3]float32{2.052,0.1247,0.5001},[3]float32{1.81,0.05413,1.003},[3]float32{2.367,0.1364,0.4167},[3]float32{2.575,0.2061,-0.07931},[3]float32{2.214,0.215,-0.1423},[3]float32{2.104,0.1478,0.3357},[3]float32{2.628,0.2309,-0.2555},[3]float32{2.694,0.3066,-0.7946},[3]float32{2.258,0.3095,-0.8152},[3]float32{2.231,0.238,-0.3065},[3]float32{1.901,0.3337,-1.541},[3]float32{-2.49,-0.346,-1.665},[3]float32{-2.488,0.1468,-1.593},[3]float32{-2.786,0.06917,-0.9244},[3]float32{-2.499,-0.444,-0.9669},[3]float32{-1.904,0.2897,-1.545},[3]float32{-1.901,0.2634,-1.551},[3]float32{-1.93,0.0002014,-1.034},[3]float32{-2.157,0.2012,-0.9269},[3]float32{-2.674,-0.03385,-0.1909},[3]float32{-2.398,-0.5365,-0.3089},[3]float32{-1.906,-0.1155,-0.4374},[3]float32{-2.131,0.1021,-0.2568},[3]float32{-2.368,-0.1295,0.4901},[3]float32{-2.124,-0.6222,0.3018},[3]float32{-1.794,-0.1957,0.1341},[3]float32{-2.006,0.01241,0.3815},[3]float32{-1.909,-0.2185,1.124},[3]float32{-1.712,-0.7021,0.7777},[3]float32{-1.533,-0.2733,0.6859},[3]float32{-1.713,-0.0744,0.9995},[3]float32{-1.335,-0.2719,1.504},[3]float32{-1.197,-0.75,1.101},[3]float32{-1.121,-0.3171,0.9981},[3]float32{-1.253,-0.1234,1.348},[3]float32{-0.679,-0.2963,1.678},[3]float32{-0.6088,-0.7719,1.344},[3]float32{-0.5859,-0.3372,1.141},[3]float32{-0.6546,-0.1459,1.508},[3]float32{0.0,-0.7775,1.407},[3]float32{-2.213,0.2428,-0.9146},[3]float32{-1.988,0.293,-1.533},[3]float32{-2.185,0.1482,-0.2411},[3]float32{-2.054,0.05845,0.3977},[3]float32{-1.749,-0.03285,1.048},[3]float32{-1.275,-0.08119,1.392},[3]float32{-0.6617,-0.1034,1.55},[3]float32{0.0,-0.1079,1.582},[3]float32{-0.6764,-0.1281,1.683},[3]float32{0.0,-0.1336,1.722},[3]float32{-1.33,-0.1046,1.516},[3]float32{-1.895,-0.05298,1.148},[3]float32{-2.345,0.03838,0.4979},[3]float32{-2.642,0.1326,-0.1729},[3]float32{-2.743,0.2346,-0.899},[3]float32{-2.405,0.2839,-1.554},[3]float32{-2.295,0.8405,-1.396},[3]float32{-2.314,0.7849,-1.0},[3]float32{-2.638,0.7846,-0.9984},[3]float32{-2.623,0.8416,-1.404},[3]float32{-0.5147,0.4098,1.67},[3]float32{-0.153,0.4075,1.686},[3]float32{-0.1549,0.3975,1.757},[3]float32{-0.5193,0.4001,1.739},[3]float32{-0.8237,0.4065,1.694},[3]float32{-1.172,0.4186,1.607},[3]float32{-1.152,0.4277,1.542},[3]float32{-0.8114,0.4157,1.627},[3]float32{-1.449,0.4354,1.488},[3]float32{-1.739,0.4621,1.298},[3]float32{-1.679,0.4699,1.242},[3]float32{-1.409,0.4439,1.427},[3]float32{-1.968,0.4948,1.064},[3]float32{-2.192,0.5458,0.7013},[3]float32{-2.053,0.5539,0.6439},[3]float32{-1.864,0.5026,1.009},[3]float32{-2.357,0.5884,0.3984},[3]float32{-2.494,0.6385,0.0419},[3]float32{-2.251,0.6451,-0.005292},[3]float32{-2.157,0.5961,0.3436},[3]float32{-2.581,0.683,-0.275},[3]float32{-2.623,0.7373,-0.6614},[3]float32{-2.316,0.74,-0.6806},[3]float32{-2.291,0.6875,-0.3073},[3]float32{-2.256,0.334,-0.9894},[3]float32{-2.228,0.4099,-1.53},[3]float32{-2.704,0.3329,-0.9821},[3]float32{-2.683,0.4121,-1.546},[3]float32{-0.08377,-0.03077,1.607},[3]float32{-0.582,-0.02776,1.586},[3]float32{-0.08547,-0.04648,1.719},[3]float32{-0.5905,-0.04281,1.693},[3]float32{-1.246,-0.02229,1.547},[3]float32{-0.7592,-0.03927,1.668},[3]float32{-1.21,-0.00807,1.445},[3]float32{-0.7438,-0.02453,1.563},[3]float32{-1.815,0.02459,1.213},[3]float32{-1.402,-0.01297,1.48},[3]float32{-1.713,0.03626,1.13},[3]float32{-1.348,0.0006513,1.383},[3]float32{-2.27,0.1129,0.5843},[3]float32{-1.945,0.04273,1.084},[3]float32{-2.052,0.1247,0.5001},[3]float32{-1.81,0.05413,1.003},[3]float32{-2.575,0.2061,-0.07931},[3]float32{-2.367,0.1364,0.4167},[3]float32{-2.214,0.215,-0.1423},[3]float32{-2.104,0.1478,0.3357},[3]float32{-2.694,0.3066,-0.7946},[3]float32{-2.628,0.2309,-0.2555},[3]float32{-2.258,0.3095,-0.8152},[3]float32{-2.231,0.238,-0.3065},[3]float32{-1.901,0.3337,-1.541},[3]float32{0.0,0.3834,-1.651},[3]float32{-2.23,0.7878,-1.476},[3]float32{-2.257,0.7123,-0.9376},[3]float32{-2.702,0.7112,-0.9303},[3]float32{-2.682,0.79,-1.491},[3]float32{-0.5807,0.3499,1.642},[3]float32{-0.08538,0.3469,1.663},[3]float32{-0.08698,0.3321,1.769},[3]float32{-0.5887,0.3357,1.743},[3]float32{-0.7603,0.3393,1.717},[3]float32{-1.244,0.3562,1.597},[3]float32{-1.21,0.3696,1.502},[3]float32{-0.7458,0.3532,1.619},[3]float32{-1.402,0.3657,1.53},[3]float32{-1.811,0.4028,1.265},[3]float32{-1.714,0.4139,1.186},[3]float32{-1.351,0.3785,1.438},[3]float32{-1.943,0.4212,1.134},[3]float32{-2.266,0.491,0.6374},[3]float32{-2.054,0.5025,0.5555},[3]float32{-1.813,0.4322,1.056},[3]float32{-2.365,0.5149,0.4677},[3]float32{-2.572,0.5841,-0.02519},[3]float32{-2.216,0.5928,-0.08726},[3]float32{-2.106,0.526,0.3881},[3]float32{-2.626,0.6092,-0.204},[3]float32{-2.692,0.6845,-0.7402},[3]float32{-2.26,0.6874,-0.7606},[3]float32{-2.233,0.6163,-0.2546},[3]float32{-1.901,0.7339,-1.485},[3]float32{0.0,0.7348,-1.492},[3]float32{2.792,-0.12,-1.345},[3]float32{2.142,0.1908,-1.295},[3]float32{2.754,-0.2268,-0.5846},[3]float32{2.151,0.01335,-0.6048},[3]float32{2.546,-0.3259,0.1205},[3]float32{2.083,-0.07765,0.04301},[3]float32{2.157,-0.4204,0.7935},[3]float32{1.879,-0.1684,0.689},[3]float32{1.636,-0.4934,1.191},[3]float32{1.501,-0.238,1.185},[3]float32{1.014,-0.5308,1.507},[3]float32{0.9654,-0.2718,1.425},[3]float32{0.3407,-0.5451,1.681},[3]float32{0.3302,-0.2846,1.516},[3]float32{2.154,0.2911,-1.276},[3]float32{2.162,0.1932,-0.579},[3]float32{2.094,0.102,0.07051},[3]float32{1.889,0.01079,0.7195},[3]float32{1.508,-0.05933,1.219},[3]float32{0.9686,-0.09341,1.461},[3]float32{0.3311,-0.1062,1.552},[3]float32{0.3399,-0.1836,1.72},[3]float32{1.011,-0.1695,1.62},[3]float32{1.63,-0.1323,1.355},[3]float32{2.148,-0.05961,0.8372},[3]float32{2.536,0.03458,0.1667},[3]float32{2.743,0.1333,-0.5359},[3]float32{2.781,0.2391,-1.289},[3]float32{1.428,0.1563,-1.429},[3]float32{1.434,-0.01467,-0.9757},[3]float32{1.388,-0.07533,-0.5439},[3]float32{1.253,-0.1358,-0.1132},[3]float32{1.001,-0.1822,0.2172},[3]float32{0.6436,-0.2048,0.3777},[3]float32{0.2202,-0.2133,0.4382},[3]float32{2.468,0.8129,-1.2},[3]float32{0.3355,0.4037,1.713},[3]float32{0.9899,0.4171,1.618},[3]float32{1.569,0.4528,1.364},[3]float32{2.019,0.5243,0.8547},[3]float32{2.315,0.617,0.1947},[3]float32{2.453,0.7119,-0.4811},[3]float32{2.166,0.3011,-1.269},[3]float32{2.484,0.2498,-0.9033},[3]float32{2.769,0.3019,-1.274},[3]float32{2.452,0.3533,-1.64},[3]float32{0.332,-0.09714,1.566},[3]float32{0.0005066,-0.1099,1.657},[3]float32{0.3389,-0.1181,1.716},[3]float32{0.6704,-0.1054,1.625},[3]float32{1.007,-0.1041,1.616},[3]float32{1.308,-0.08306,1.466},[3]float32{0.9723,-0.08433,1.475},[3]float32{0.6714,-0.1054,1.625},[3]float32{1.622,-0.06717,1.353},[3]float32{1.829,-0.03411,1.118},[3]float32{1.516,-0.04993,1.23},[3]float32{1.309,-0.08299,1.466},[3]float32{2.138,0.005099,0.8386},[3]float32{2.208,0.05989,0.4486},[3]float32{1.9,0.02077,0.727},[3]float32{1.83,-0.03402,1.117},[3]float32{2.524,0.09887,0.171},[3]float32{2.422,0.1513,-0.2023},[3]float32{2.106,0.1124,0.07454},[3]float32{2.209,0.05998,0.4479},[3]float32{2.731,0.1972,-0.5289},[3]float32{2.484,0.2497,-0.9026},[3]float32{2.174,0.2039,-0.5768},[3]float32{2.422,0.1514,-0.2032},[3]float32{1.061,0.3095,-1.659},[3]float32{2.173,0.8125,-1.197},[3]float32{2.483,0.762,-0.8372},[3]float32{2.763,0.8133,-1.203},[3]float32{2.452,0.8638,-1.563},[3]float32{0.3324,0.4128,1.648},[3]float32{0.006795,0.4015,1.729},[3]float32{0.3385,0.3946,1.778},[3]float32{0.6641,0.4059,1.697},[3]float32{1.005,0.4086,1.678},[3]float32{1.302,0.4281,1.54},[3]float32{0.9747,0.4257,1.557},[3]float32{0.6778,0.4062,1.695},[3]float32{1.616,0.4453,1.417},[3]float32{1.823,0.4767,1.194},[3]float32{1.522,0.4603,1.31},[3]float32{1.315,0.4289,1.534},[3]float32{2.13,0.517,0.9063},[3]float32{2.205,0.5706,0.5253},[3]float32{1.908,0.5315,0.8031},[3]float32{1.833,0.478,1.184},[3]float32{2.516,0.6105,0.241},[3]float32{2.419,0.6619,-0.1246},[3]float32{2.114,0.6235,0.1483},[3]float32{2.211,0.5722,0.5139},[3]float32{2.724,0.7087,-0.4577},[3]float32{2.483,0.7602,-0.8248},[3]float32{2.181,0.7152,-0.5044},[3]float32{2.422,0.6636,-0.1373},[3]float32{2.167,0.5622,-1.232},[3]float32{2.484,0.511,-0.8673},[3]float32{2.768,0.563,-1.238},[3]float32{2.452,0.6143,-1.603},[3]float32{0.3321,0.1635,1.607},[3]float32{0.00152,0.1512,1.694},[3]float32{0.3388,0.1434,1.749},[3]float32{0.6694,0.1557,1.662},[3]float32{1.007,0.1575,1.649},[3]float32{1.307,0.178,1.503},[3]float32{0.9732,0.1763,1.515},[3]float32{0.6725,0.1557,1.662},[3]float32{1.62,0.1943,1.387},[3]float32{1.828,0.2269,1.155},[3]float32{1.518,0.2108,1.27},[3]float32{1.311,0.1782,1.502},[3]float32{2.135,0.2664,0.8739},[3]float32{2.208,0.3209,0.4857},[3]float32{1.903,0.2817,0.7651},[3]float32{1.83,0.2271,1.153},[3]float32{2.522,0.36,0.2072},[3]float32{2.421,0.4123,-0.1648},[3]float32{2.108,0.3734,0.1118},[3]float32{2.209,0.3212,0.4837},[3]float32{2.729,0.4583,-0.4924},[3]float32{2.484,0.5107,-0.8651},[3]float32{2.176,0.465,-0.54},[3]float32{2.422,0.4127,-0.1673},[3]float32{1.061,0.5794,-1.621},[3]float32{-2.792,-0.12,-1.345},[3]float32{-2.142,0.1908,-1.295},[3]float32{-2.754,-0.2268,-0.5846},[3]float32{-2.151,0.01335,-0.6048},[3]float32{-2.546,-0.3259,0.1205},[3]float32{-2.083,-0.07765,0.04301},[3]float32{-2.157,-0.4204,0.7935},[3]float32{-1.879,-0.1684,0.689},[3]float32{-1.636,-0.4934,1.191},[3]float32{-1.501,-0.238,1.185},[3]float32{-1.014,-0.5308,1.507},[3]float32{-0.9654,-0.2718,1.425},[3]float32{-0.3407,-0.5451,1.681},[3]float32{-0.3302,-0.2846,1.516},[3]float32{-2.154,0.2911,-1.276},[3]float32{-2.162,0.1932,-0.579},[3]float32{-2.094,0.102,0.07051},[3]float32{-1.889,0.01079,0.7195},[3]float32{-1.508,-0.05933,1.219},[3]float32{-0.9686,-0.09341,1.461},[3]float32{-0.3311,-0.1062,1.552},[3]float32{-0.3399,-0.1836,1.72},[3]float32{-1.011,-0.1695,1.62},[3]float32{-1.63,-0.1323,1.355},[3]float32{-2.148,-0.05961,0.8372},[3]float32{-2.536,0.03458,0.1667},[3]float32{-2.743,0.1333,-0.5359},[3]float32{-2.781,0.2391,-1.289},[3]float32{-1.428,0.1563,-1.429},[3]float32{-1.434,-0.01467,-0.9757},[3]float32{-1.388,-0.07533,-0.5439},[3]float32{-1.253,-0.1358,-0.1132},[3]float32{-1.001,-0.1822,0.2172},[3]float32{-0.6436,-0.2048,0.3777},[3]float32{-0.2202,-0.2133,0.4382},[3]float32{-2.468,0.8129,-1.2},[3]float32{-0.3355,0.4037,1.713},[3]float32{-0.9899,0.4171,1.618},[3]float32{-1.569,0.4528,1.364},[3]float32{-2.019,0.5243,0.8547},[3]float32{-2.315,0.617,0.1947},[3]float32{-2.453,0.7119,-0.4811},[3]float32{-2.166,0.3011,-1.269},[3]float32{-2.484,0.2498,-0.9033},[3]float32{-2.769,0.3019,-1.274},[3]float32{-2.452,0.3533,-1.64},[3]float32{-0.332,-0.09714,1.566},[3]float32{-0.0005066,-0.1099,1.657},[3]float32{-0.3389,-0.1181,1.716},[3]float32{-0.6704,-0.1054,1.625},[3]float32{-1.007,-0.1041,1.616},[3]float32{-1.308,-0.08306,1.466},[3]float32{-0.9723,-0.08433,1.475},[3]float32{-0.6714,-0.1054,1.625},[3]float32{-1.622,-0.06717,1.353},[3]float32{-1.829,-0.03411,1.118},[3]float32{-1.516,-0.04993,1.23},[3]float32{-1.309,-0.08299,1.466},[3]float32{-2.138,0.005099,0.8386},[3]float32{-2.208,0.05989,0.4486},[3]float32{-1.9,0.02077,0.727},[3]float32{-1.83,-0.03402,1.117},[3]float32{-2.524,0.09887,0.171},[3]float32{-2.422,0.1513,-0.2023},[3]float32{-2.106,0.1124,0.07454},[3]float32{-2.209,0.05998,0.4479},[3]float32{-2.731,0.1972,-0.5289},[3]float32{-2.484,0.2497,-0.9026},[3]float32{-2.174,0.2039,-0.5768},[3]float32{-2.422,0.1514,-0.2032},[3]float32{-1.061,0.3095,-1.659},[3]float32{-2.173,0.8125,-1.197},[3]float32{-2.483,0.762,-0.8372},[3]float32{-2.763,0.8133,-1.203},[3]float32{-2.452,0.8638,-1.563},[3]float32{-0.3324,0.4128,1.648},[3]float32{-0.006795,0.4015,1.729},[3]float32{-0.3385,0.3946,1.778},[3]float32{-0.6641,0.4059,1.697},[3]float32{-1.005,0.4086,1.678},[3]float32{-1.302,0.4281,1.54},[3]float32{-0.9747,0.4257,1.557},[3]float32{-0.6778,0.4062,1.695},[3]float32{-1.616,0.4453,1.417},[3]float32{-1.823,0.4767,1.194},[3]float32{-1.522,0.4603,1.31},[3]float32{-1.315,0.4289,1.534},[3]float32{-2.13,0.517,0.9063},[3]float32{-2.205,0.5706,0.5253},[3]float32{-1.908,0.5315,0.8031},[3]float32{-1.833,0.478,1.184},[3]float32{-2.516,0.6105,0.241},[3]float32{-2.419,0.6619,-0.1246},[3]float32{-2.114,0.6235,0.1483},[3]float32{-2.211,0.5722,0.5139},[3]float32{-2.724,0.7087,-0.4577},[3]float32{-2.483,0.7602,-0.8248},[3]float32{-2.181,0.7152,-0.5044},[3]float32{-2.422,0.6636,-0.1373},[3]float32{-2.167,0.5622,-1.232},[3]float32{-2.484,0.511,-0.8673},[3]float32{-2.768,0.563,-1.238},[3]float32{-2.452,0.6143,-1.603},[3]float32{-0.3321,0.1635,1.607},[3]float32{-0.00152,0.1512,1.694},[3]float32{-0.3388,0.1434,1.749},[3]float32{-0.6694,0.1557,1.662},[3]float32{-1.007,0.1575,1.649},[3]float32{-1.307,0.178,1.503},[3]float32{-0.9732,0.1763,1.515},[3]float32{-0.6725,0.1557,1.662},[3]float32{-1.62,0.1943,1.387},[3]float32{-1.828,0.2269,1.155},[3]float32{-1.518,0.2108,1.27},[3]float32{-1.311,0.1782,1.502},[3]float32{-2.135,0.2664,0.8739},[3]float32{-2.208,0.3209,0.4857},[3]float32{-1.903,0.2817,0.7651},[3]float32{-1.83,0.2271,1.153},[3]float32{-2.522,0.36,0.2072},[3]float32{-2.421,0.4123,-0.1648},[3]float32{-2.108,0.3734,0.1118},[3]float32{-2.209,0.3212,0.4837},[3]float32{-2.729,0.4583,-0.4924},[3]float32{-2.484,0.5107,-0.8651},[3]float32{-2.176,0.465,-0.54},[3]float32{-2.422,0.4127,-0.1673},[3]float32{-1.061,0.5794,-1.621},[3]float32{2.49,-0.07094,-1.626},[3]float32{1.901,0.2752,-1.55},[3]float32{2.789,-0.1743,-0.9587},[3]float32{2.502,-0.3954,-1.313},[3]float32{2.79,0.1233,-1.309},[3]float32{2.145,0.2664,-1.283},[3]float32{2.677,-0.2774,-0.2243},[3]float32{2.468,-0.4911,-0.6317},[3]float32{2.751,0.01671,-0.5509},[3]float32{2.154,0.1483,-0.5857},[3]float32{2.371,-0.3732,0.4573},[3]float32{2.281,-0.5799,0.00001332},[3]float32{2.544,-0.08225,0.1536},[3]float32{2.085,0.05721,0.06252},[3]float32{1.911,-0.4622,0.9992},[3]float32{1.933,-0.6646,0.603},[3]float32{2.155,-0.1767,0.826},[3]float32{1.881,-0.03364,0.7093},[3]float32{1.336,-0.5157,1.362},[3]float32{1.466,-0.73,0.946},[3]float32{1.634,-0.2497,1.345},[3]float32{1.503,-0.1034,1.206},[3]float32{0.6794,-0.5402,1.623},[3]float32{0.9086,-0.7635,1.235},[3]float32{1.013,-0.287,1.611},[3]float32{0.9662,-0.1373,1.447},[3]float32{0.0,-0.5464,1.691},[3]float32{0.3053,-0.7763,1.398},[3]float32{0.3405,-0.3012,1.712},[3]float32{0.3304,-0.15,1.538},[3]float32{2.154,0.08114,-0.9441},[3]float32{2.128,-0.03282,-0.2761},[3]float32{2.003,-0.1224,0.3617},[3]float32{1.711,-0.2091,0.9787},[3]float32{1.252,-0.258,1.327},[3]float32{0.6541,-0.2804,1.486},[3]float32{0.0,-0.2855,1.523},[3]float32{1.963,0.1317,-1.336},[3]float32{1.972,-0.08361,-0.7101},[3]float32{1.909,-0.167,-0.1163},[3]float32{1.722,-0.2502,0.4758},[3]float32{1.376,-0.314,0.9301},[3]float32{0.8849,-0.345,1.151},[3]float32{0.3027,-0.3567,1.234},[3]float32{2.162,0.2932,-1.271},[3]float32{2.171,0.1958,-0.5782},[3]float32{2.102,0.1044,0.07263},[3]float32{1.897,0.01291,0.7241},[3]float32{1.514,-0.05759,1.226},[3]float32{0.9712,-0.0919,1.47},[3]float32{0.3317,-0.1047,1.561},[3]float32{0.3392,-0.14,1.717},[3]float32{1.009,-0.126,1.617},[3]float32{1.625,-0.08896,1.353},[3]float32{2.141,-0.01654,0.8378},[3]float32{2.528,0.07737,0.1693},[3]float32{2.734,0.1758,-0.5314},[3]float32{2.773,0.2808,-1.279},[3]float32{2.481,0.25,-1.57},[3]float32{1.912,0.2936,-1.537},[3]float32{2.166,0.2411,-0.9202},[3]float32{2.14,0.1469,-0.2495},[3]float32{2.014,0.05701,0.3904},[3]float32{1.72,-0.03018,1.011},[3]float32{1.257,-0.07947,1.362},[3]float32{0.656,-0.102,1.523},[3]float32{0.0,-0.1072,1.559},[3]float32{0.6776,-0.1788,1.686},[3]float32{1.331,-0.1545,1.512},[3]float32{1.903,-0.1013,1.134},[3]float32{2.361,-0.01256,0.5023},[3]float32{2.666,0.08285,-0.1769},[3]float32{2.778,0.1855,-0.9075},[3]float32{1.153,0.2636,-1.602},[3]float32{1.256,0.07775,-1.259},[3]float32{1.241,-0.003568,-0.8708},[3]float32{1.167,-0.05593,-0.498},[3]float32{0.9965,-0.106,-0.1419},[3]float32{0.7287,-0.1347,0.06276},[3]float32{0.3811,-0.1479,0.1564},[3]float32{0.0,-0.151,0.1785},[3]float32{2.197,0.294,-1.54},[3]float32{2.484,0.2443,-0.9037},[3]float32{0.6709,-0.1108,1.624},[3]float32{1.309,-0.08845,1.465},[3]float32{1.83,-0.03947,1.117},[3]float32{2.209,0.05452,0.4475},[3]float32{2.422,0.146,-0.2035},[3]float32{2.227,0.3392,-1.54},[3]float32{2.255,0.2632,-0.9991},[3]float32{2.704,0.2622,-0.9918},[3]float32{2.684,0.3414,-1.556},[3]float32{2.169,0.75,-1.206},[3]float32{2.484,0.6989,-0.8424},[3]float32{2.766,0.7507,-1.211},[3]float32{2.452,0.8018,-1.575},[3]float32{0.5823,-0.09826,1.574},[3]float32{0.08337,-0.1013,1.596},[3]float32{0.08511,-0.1174,1.71},[3]float32{0.591,-0.1137,1.684},[3]float32{0.3323,0.3508,1.635},[3]float32{0.003092,0.3389,1.72},[3]float32{0.3387,0.3315,1.773},[3]float32{0.6678,0.3434,1.688},[3]float32{0.7589,-0.1101,1.659},[3]float32{1.247,-0.09314,1.538},[3]float32{1.21,-0.07857,1.434},[3]float32{0.7432,-0.09504,1.552},[3]float32{1.006,0.3455,1.673},[3]float32{1.306,0.3656,1.53},[3]float32{0.9738,0.3637,1.544},[3]float32{0.6741,0.3435,1.688},[3]float32{1.402,-0.08385,1.472},[3]float32{1.816,-0.04618,1.204},[3]float32{1.712,-0.03426,1.119},[3]float32{1.347,-0.06991,1.373},[3]float32{1.618,0.3823,1.412},[3]float32{1.826,0.4144,1.183},[3]float32{1.52,0.3982,1.298},[3]float32{1.312,0.366,1.527},[3]float32{1.946,-0.02806,1.075},[3]float32{2.271,0.04218,0.5746},[3]float32{2.051,0.05412,0.4896},[3]float32{1.809,-0.0165,0.9923},[3]float32{2.133,0.4542,0.8992},[3]float32{2.207,0.5084,0.5133},[3]float32{1.905,0.4692,0.7925},[3]float32{1.831,0.415,1.178},[3]float32{2.368,0.06568,0.4073},[3]float32{2.576,0.1355,-0.08942},[3]float32{2.214,0.1443,-0.1527},[3]float32{2.103,0.07712,0.3259},[3]float32{2.52,0.5478,0.2331},[3]float32{2.421,0.5998,-0.1369},[3]float32{2.11,0.5611,0.1386},[3]float32{2.209,0.5091,0.5086},[3]float32{2.628,0.1601,-0.265},[3]float32{2.695,0.236,-0.8048},[3]float32{2.257,0.2389,-0.8255},[3]float32{2.231,0.1673,-0.3162},[3]float32{2.728,0.646,-0.4662},[3]float32{2.483,0.6982,-0.8372},[3]float32{2.178,0.6527,-0.5135},[3]float32{2.422,0.6006,-0.1425},[3]float32{0.9505,0.7345,-1.49},[3]float32{1.901,0.2678,-1.551},[3]float32{2.249,0.8126,-1.198},[3]float32{2.479,0.775,-0.9302},[3]float32{2.687,0.8132,-1.202},[3]float32{2.456,0.8508,-1.47},[3]float32{2.233,0.85,-1.464},[3]float32{2.26,0.7752,-0.9315},[3]float32{2.699,0.7742,-0.9243},[3]float32{2.679,0.8522,-1.48},[3]float32{0.3333,0.4102,1.667},[3]float32{0.09134,0.4021,1.725},[3]float32{0.3376,0.3972,1.759},[3]float32{0.5796,0.4054,1.701},[3]float32{0.5782,0.412,1.654},[3]float32{0.08821,0.4091,1.675},[3]float32{0.08971,0.3951,1.774},[3]float32{0.5857,0.3987,1.749},[3]float32{1.001,0.4111,1.661},[3]float32{1.222,0.4253,1.56},[3]float32{0.9791,0.4232,1.574},[3]float32{0.7581,0.409,1.675},[3]float32{0.7626,0.4024,1.722},[3]float32{1.24,0.4191,1.604},[3]float32{1.208,0.4316,1.514},[3]float32{0.749,0.4154,1.63},[3]float32{1.602,0.4474,1.402},[3]float32{1.757,0.4705,1.238},[3]float32{1.536,0.4582,1.325},[3]float32{1.381,0.4351,1.49},[3]float32{1.402,0.4288,1.534},[3]float32{1.806,0.4655,1.274},[3]float32{1.713,0.476,1.199},[3]float32{1.355,0.4409,1.448},[3]float32{2.1,0.519,0.8923},[3]float32{2.158,0.5587,0.6097},[3]float32{1.938,0.5296,0.8171},[3]float32{1.881,0.4899,1.1},[3]float32{1.942,0.4843,1.139},[3]float32{2.262,0.5534,0.6474},[3]float32{2.056,0.5646,0.5678},[3]float32{1.816,0.4949,1.064},[3]float32{2.464,0.6122,0.2289},[3]float32{2.393,0.6503,-0.04252},[3]float32{2.166,0.6218,0.1605},[3]float32{2.237,0.5837,0.4319},[3]float32{2.364,0.5779,0.4731},[3]float32{2.568,0.6464,-0.01431},[3]float32{2.218,0.6549,-0.07527},[3]float32{2.11,0.5889,0.3951},[3]float32{2.654,0.7095,-0.4638},[3]float32{2.475,0.7478,-0.7365},[3]float32{2.252,0.7144,-0.4984},[3]float32{2.43,0.676,-0.2256},[3]float32{2.624,0.6722,-0.1983},[3]float32{2.689,0.7467,-0.7288},[3]float32{2.262,0.7496,-0.7489},[3]float32{2.236,0.6792,-0.2482},[3]float32{2.228,0.6003,-1.503},[3]float32{2.256,0.5244,-0.9629},[3]float32{2.703,0.5234,-0.9556},[3]float32{2.683,0.6025,-1.519},[3]float32{0.5817,0.1625,1.614},[3]float32{0.08417,0.1595,1.635},[3]float32{0.08583,0.1441,1.744},[3]float32{0.5901,0.1478,1.718},[3]float32{0.7594,0.1513,1.693},[3]float32{1.246,0.1683,1.572},[3]float32{1.21,0.1822,1.474},[3]float32{0.7444,0.1657,1.591},[3]float32{1.401,0.1776,1.506},[3]float32{1.813,0.2151,1.239},[3]float32{1.713,0.2265,1.158},[3]float32{1.349,0.1909,1.411},[3]float32{1.944,0.2332,1.11},[3]float32{2.268,0.3033,0.6108},[3]float32{2.053,0.315,0.5275},[3]float32{1.811,0.2445,1.03},[3]float32{2.366,0.3269,0.4429},[3]float32{2.574,0.3965,-0.05237},[3]float32{2.215,0.4053,-0.115},[3]float32{2.104,0.3382,0.3624},[3]float32{2.627,0.4213,-0.2291},[3]float32{2.693,0.497,-0.7676},[3]float32{2.258,0.4999,-0.7881},[3]float32{2.232,0.4285,-0.28},[3]float32{1.901,0.507,-1.517},[3]float32{2.167,0.3718,-1.259},[3]float32{2.484,0.3205,-0.8937},[3]float32{2.769,0.3726,-1.265},[3]float32{2.452,0.4239,-1.63},[3]float32{0.332,-0.0267,1.578},[3]float32{0.001013,-0.03918,1.667},[3]float32{0.3389,-0.04721,1.724},[3]float32{0.6699,-0.03473,1.635},[3]float32{1.007,-0.03319,1.624},[3]float32{1.308,-0.01239,1.476},[3]float32{0.9727,-0.01389,1.487},[3]float32{0.672,-0.03468,1.635},[3]float32{1.621,0.003701,1.362},[3]float32{1.829,0.03652,1.128},[3]float32{1.517,0.02057,1.242},[3]float32{1.31,-0.01226,1.475},[3]float32{2.137,0.07588,0.8478},[3]float32{2.208,0.1305,0.4587},[3]float32{1.901,0.09136,0.7376},[3]float32{1.83,0.0367,1.127},[3]float32{2.523,0.1696,0.1807},[3]float32{2.421,0.2219,-0.192},[3]float32{2.107,0.1831,0.08474},[3]float32{2.209,0.1307,0.4574},[3]float32{2.73,0.2679,-0.5191},[3]float32{2.484,0.3203,-0.8922},[3]float32{2.175,0.2746,-0.5668},[3]float32{2.422,0.2222,-0.1937},[3]float32{1.061,0.3846,-1.648},[3]float32{-2.49,-0.07094,-1.626},[3]float32{-2.79,0.1233,-1.309},[3]float32{-2.789,-0.1743,-0.9587},[3]float32{-2.502,-0.3954,-1.313},[3]float32{-1.901,0.2752,-1.55},[3]float32{-1.963,0.1317,-1.336},[3]float32{-2.154,0.08114,-0.9441},[3]float32{-2.145,0.2664,-1.283},[3]float32{-2.751,0.01671,-0.5509},[3]float32{-2.677,-0.2774,-0.2243},[3]float32{-2.468,-0.4911,-0.6317},[3]float32{-1.972,-0.08361,-0.7101},[3]float32{-2.128,-0.03282,-0.2761},[3]float32{-2.154,0.1483,-0.5857},[3]float32{-2.544,-0.08225,0.1536},[3]float32{-2.371,-0.3732,0.4573},[3]float32{-2.281,-0.5799,0.00001332},[3]float32{-1.909,-0.167,-0.1163},[3]float32{-2.003,-0.1224,0.3617},[3]float32{-2.085,0.05721,0.06252},[3]float32{-2.155,-0.1767,0.826},[3]float32{-1.911,-0.4622,0.9992},[3]float32{-1.933,-0.6646,0.603},[3]float32{-1.722,-0.2502,0.4758},[3]float32{-1.711,-0.2091,0.9787},[3]float32{-1.881,-0.03364,0.7093},[3]float32{-1.634,-0.2497,1.345},[3]float32{-1.336,-0.5157,1.362},[3]float32{-1.466,-0.73,0.946},[3]float32{-1.376,-0.314,0.9301},[3]float32{-1.252,-0.258,1.327},[3]float32{-1.503,-0.1034,1.206},[3]float32{-1.013,-0.287,1.611},[3]float32{-0.6794,-0.5402,1.623},[3]float32{-0.9086,-0.7635,1.235},[3]float32{-0.8849,-0.345,1.151},[3]float32{-0.6541,-0.2804,1.486},[3]float32{-0.9662,-0.1373,1.447},[3]float32{-0.3405,-0.3012,1.712},[3]float32{-0.3053,-0.7763,1.398},[3]float32{-0.3027,-0.3567,1.234},[3]float32{-0.3304,-0.15,1.538},[3]float32{-2.166,0.2411,-0.9202},[3]float32{-2.162,0.2932,-1.271},[3]float32{-1.912,0.2936,-1.537},[3]float32{-2.14,0.1469,-0.2495},[3]float32{-2.171,0.1958,-0.5782},[3]float32{-2.014,0.05701,0.3904},[3]float32{-2.102,0.1044,0.07263},[3]float32{-1.72,-0.03018,1.011},[3]float32{-1.897,0.01291,0.7241},[3]float32{-1.257,-0.07947,1.362},[3]float32{-1.514,-0.05759,1.226},[3]float32{-0.656,-0.102,1.523},[3]float32{-0.9712,-0.0919,1.47},[3]float32{-0.3317,-0.1047,1.561},[3]float32{-0.6776,-0.1788,1.686},[3]float32{-0.3392,-0.14,1.717},[3]float32{0.0,-0.185,1.73},[3]float32{-1.331,-0.1545,1.512},[3]float32{-1.009,-0.126,1.617},[3]float32{-1.903,-0.1013,1.134},[3]float32{-1.625,-0.08896,1.353},[3]float32{-2.361,-0.01256,0.5023},[3]float32{-2.141,-0.01654,0.8378},[3]float32{-2.666,0.08285,-0.1769},[3]float32{-2.528,0.07737,0.1693},[3]float32{-2.778,0.1855,-0.9075},[3]float32{-2.734,0.1758,-0.5314},[3]float32{-2.481,0.25,-1.57},[3]float32{-2.773,0.2808,-1.279},[3]float32{-1.153,0.2636,-1.602},[3]float32{-1.256,0.07775,-1.259},[3]float32{-1.241,-0.003568,-0.8708},[3]float32{-1.167,-0.05593,-0.498},[3]float32{-0.9965,-0.106,-0.1419},[3]float32{-0.7287,-0.1347,0.06276},[3]float32{-0.3811,-0.1479,0.1564},[3]float32{-2.249,0.8126,-1.198},[3]float32{-2.479,0.775,-0.9302},[3]float32{-2.687,0.8132,-1.202},[3]float32{-2.456,0.8508,-1.47},[3]float32{-0.3333,0.4102,1.667},[3]float32{-0.09134,0.4021,1.725},[3]float32{-0.3376,0.3972,1.759},[3]float32{-0.5796,0.4054,1.701},[3]float32{-1.001,0.4111,1.661},[3]float32{-1.222,0.4253,1.56},[3]float32{-0.9791,0.4232,1.574},[3]float32{-0.7581,0.409,1.675},[3]float32{-1.602,0.4474,1.402},[3]float32{-1.757,0.4705,1.238},[3]float32{-1.536,0.4582,1.325},[3]float32{-1.381,0.4351,1.49},[3]float32{-2.1,0.519,0.8923},[3]float32{-2.158,0.5587,0.6097},[3]float32{-1.938,0.5296,0.8171},[3]float32{-1.881,0.4899,1.1},[3]float32{-2.464,0.6122,0.2289},[3]float32{-2.393,0.6503,-0.04252},[3]float32{-2.166,0.6218,0.1605},[3]float32{-2.237,0.5837,0.4319},[3]float32{-2.654,0.7095,-0.4638},[3]float32{-2.475,0.7478,-0.7365},[3]float32{-2.252,0.7144,-0.4984},[3]float32{-2.43,0.676,-0.2256},[3]float32{-2.255,0.2632,-0.9991},[3]float32{-2.167,0.3718,-1.259},[3]float32{-2.227,0.3392,-1.54},[3]float32{-2.484,0.2443,-0.9037},[3]float32{-2.704,0.2622,-0.9918},[3]float32{-2.484,0.3205,-0.8937},[3]float32{-2.684,0.3414,-1.556},[3]float32{-2.769,0.3726,-1.265},[3]float32{-2.197,0.294,-1.54},[3]float32{-2.452,0.4239,-1.63},[3]float32{-0.08337,-0.1013,1.596},[3]float32{-0.332,-0.0267,1.578},[3]float32{-0.5823,-0.09826,1.574},[3]float32{0.0,-0.1153,1.656},[3]float32{-0.08511,-0.1174,1.71},[3]float32{-0.001013,-0.03918,1.667},[3]float32{-0.591,-0.1137,1.684},[3]float32{-0.3389,-0.04721,1.724},[3]float32{-0.6709,-0.1108,1.624},[3]float32{-0.6699,-0.03473,1.635},[3]float32{-1.247,-0.09314,1.538},[3]float32{-1.007,-0.03319,1.624},[3]float32{-0.7589,-0.1101,1.659},[3]float32{-1.309,-0.08845,1.465},[3]float32{-1.21,-0.07857,1.434},[3]float32{-1.308,-0.01239,1.476},[3]float32{-0.7432,-0.09504,1.552},[3]float32{-0.9727,-0.01389,1.487},[3]float32{-0.672,-0.03468,1.635},[3]float32{-1.816,-0.04618,1.204},[3]float32{-1.621,0.003701,1.362},[3]float32{-1.402,-0.08385,1.472},[3]float32{-1.83,-0.03947,1.117},[3]float32{-1.712,-0.03426,1.119},[3]float32{-1.829,0.03652,1.128},[3]float32{-1.347,-0.06991,1.373},[3]float32{-1.517,0.02057,1.242},[3]float32{-1.31,-0.01226,1.475},[3]float32{-2.271,0.04218,0.5746},[3]float32{-2.137,0.07588,0.8478},[3]float32{-1.946,-0.02806,1.075},[3]float32{-2.209,0.05452,0.4475},[3]float32{-2.051,0.05412,0.4896},[3]float32{-2.208,0.1305,0.4587},[3]float32{-1.809,-0.0165,0.9923},[3]float32{-1.901,0.09136,0.7376},[3]float32{-1.83,0.0367,1.127},[3]float32{-2.576,0.1355,-0.08942},[3]float32{-2.523,0.1696,0.1807},[3]float32{-2.368,0.06568,0.4073},[3]float32{-2.422,0.146,-0.2035},[3]float32{-2.214,0.1443,-0.1527},[3]float32{-2.421,0.2219,-0.192},[3]float32{-2.103,0.07712,0.3259},[3]float32{-2.107,0.1831,0.08474},[3]float32{-2.209,0.1307,0.4574},[3]float32{-2.695,0.236,-0.8048},[3]float32{-2.73,0.2679,-0.5191},[3]float32{-2.628,0.1601,-0.265},[3]float32{-2.257,0.2389,-0.8255},[3]float32{-2.484,0.3203,-0.8922},[3]float32{-2.231,0.1673,-0.3162},[3]float32{-2.175,0.2746,-0.5668},[3]float32{-2.422,0.2222,-0.1937},[3]float32{-1.901,0.2678,-1.551},[3]float32{-1.061,0.3846,-1.648},[3]float32{0.0,0.3076,-1.662},[3]float32{-2.169,0.75,-1.206},[3]float32{-2.26,0.7752,-0.9315},[3]float32{-2.233,0.85,-1.464},[3]float32{-2.484,0.6989,-0.8424},[3]float32{-2.699,0.7742,-0.9243},[3]float32{-2.766,0.7507,-1.211},[3]float32{-2.679,0.8522,-1.48},[3]float32{-2.452,0.8018,-1.575},[3]float32{-0.3323,0.3508,1.635},[3]float32{-0.08821,0.4091,1.675},[3]float32{-0.5782,0.412,1.654},[3]float32{-0.003092,0.3389,1.72},[3]float32{-0.08971,0.3951,1.774},[3]float32{-0.3387,0.3315,1.773},[3]float32{-0.5857,0.3987,1.749},[3]float32{-0.6678,0.3434,1.688},[3]float32{-1.006,0.3455,1.673},[3]float32{-1.24,0.4191,1.604},[3]float32{-0.7626,0.4024,1.722},[3]float32{-1.306,0.3656,1.53},[3]float32{-1.208,0.4316,1.514},[3]float32{-0.9738,0.3637,1.544},[3]float32{-0.749,0.4154,1.63},[3]float32{-0.6741,0.3435,1.688},[3]float32{-1.618,0.3823,1.412},[3]float32{-1.806,0.4655,1.274},[3]float32{-1.402,0.4288,1.534},[3]float32{-1.826,0.4144,1.183},[3]float32{-1.713,0.476,1.199},[3]float32{-1.52,0.3982,1.298},[3]float32{-1.355,0.4409,1.448},[3]float32{-1.312,0.366,1.527},[3]float32{-2.133,0.4542,0.8992},[3]float32{-2.262,0.5534,0.6474},[3]float32{-1.942,0.4843,1.139},[3]float32{-2.207,0.5084,0.5133},[3]float32{-2.056,0.5646,0.5678},[3]float32{-1.905,0.4692,0.7925},[3]float32{-1.816,0.4949,1.064},[3]float32{-1.831,0.415,1.178},[3]float32{-2.52,0.5478,0.2331},[3]float32{-2.568,0.6464,-0.01431},[3]float32{-2.364,0.5779,0.4731},[3]float32{-2.421,0.5998,-0.1369},[3]float32{-2.218,0.6549,-0.07527},[3]float32{-2.11,0.5611,0.1386},[3]float32{-2.11,0.5889,0.3951},[3]float32{-2.209,0.5091,0.5086},[3]float32{-2.728,0.646,-0.4662},[3]float32{-2.689,0.7467,-0.7288},[3]float32{-2.624,0.6722,-0.1983},[3]float32{-2.483,0.6982,-0.8372},[3]float32{-2.262,0.7496,-0.7489},[3]float32{-2.178,0.6527,-0.5135},[3]float32{-2.236,0.6792,-0.2482},[3]float32{-2.422,0.6006,-0.1425},[3]float32{-2.256,0.5244,-0.9629},[3]float32{-2.228,0.6003,-1.503},[3]float32{-2.703,0.5234,-0.9556},[3]float32{-2.683,0.6025,-1.519},[3]float32{-0.08417,0.1595,1.635},[3]float32{-0.5817,0.1625,1.614},[3]float32{-0.08583,0.1441,1.744},[3]float32{-0.5901,0.1478,1.718},[3]float32{-1.246,0.1683,1.572},[3]float32{-0.7594,0.1513,1.693},[3]float32{-1.21,0.1822,1.474},[3]float32{-0.7444,0.1657,1.591},[3]float32{-1.813,0.2151,1.239},[3]float32{-1.401,0.1776,1.506},[3]float32{-1.713,0.2265,1.158},[3]float32{-1.349,0.1909,1.411},[3]float32{-2.268,0.3033,0.6108},[3]float32{-1.944,0.2332,1.11},[3]float32{-2.053,0.315,0.5275},[3]float32{-1.811,0.2445,1.03},[3]float32{-2.574,0.3965,-0.05237},[3]float32{-2.366,0.3269,0.4429},[3]float32{-2.215,0.4053,-0.115},[3]float32{-2.104,0.3382,0.3624},[3]float32{-2.693,0.497,-0.7676},[3]float32{-2.627,0.4213,-0.2291},[3]float32{-2.258,0.4999,-0.7881},[3]float32{-2.232,0.4285,-0.28},[3]float32{-1.901,0.507,-1.517},[3]float32{-0.9505,0.7345,-1.49},[3]float32{0.0,0.579,-1.624}},
                                            },
                                            &x3d.Transform{
                                                    CoreX3DNode: x3d.CoreX3DNode{
                                                        DEF: stringPtr("Lower_teeth"),
                                                    },
                                                    Translation: &x3d.SFVec3f{0.0, 8.43, 11.43},
                                                Children: []x3d.X3DNode{
                                                    &x3d.Shape{
                                                        Appearance: &x3d.Appearance{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("BaseAppearance"),
                                                            },
                                                            Material: &x3d.Material{
                                                                CoreX3DNode: x3d.CoreX3DNode{
                                                                    DEF: stringPtr("BaseMaterial"),
                                                                },
                                                                AmbientIntensity: floatPtr(1.0),
                                                                DiffuseColor: &x3d.SFColor{0.588, 0.588, 0.588},
                                                                Shininess: floatPtr(0.145),
                                                            },
                                                            Texture: &x3d.ImageTexture{
                                                                CoreX3DNode: x3d.CoreX3DNode{
                                                                    DEF: stringPtr("JinImageAtlas"),
                                                                },
                                                                Url: x3d.MFString{"JinImageAtlas.jpg", "https://www.web3d.org/x3d/content/examples/HumanoidAnimation/FacialAnimation/JinImageAtlas.jpg"},
                                                            },
                                                        },
                                                        Geometry: &x3d.IndexedFaceSet{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Lower_teeth-FACES"),
                                                            },
                                                            Solid: boolPtr(false),
                                                            CreaseAngle: floatPtr(3.14159),
                                                            TexCoordIndex: []int32{0, 1, 2, -1, 2, 3, 0, -1, 4, 5, 2, -1, 2, 1, 4, -1, 6, 7, 2, -1, 2, 5, 6, -1, 8, 3, 2, -1, 2, 7, 8, -1, 9, 10, 11, -1, 11, 12, 9, -1, 13, 14, 11, -1, 11, 10, 13, -1, 15, 16, 11, -1, 11, 14, 15, -1, 17, 12, 11, -1, 11, 16, 17, -1, 8, 7, 18, -1, 18, 19, 8, -1, 6, 20, 18, -1, 18, 7, 6, -1, 21, 22, 18, -1, 18, 20, 21, -1, 23, 19, 18, -1, 18, 22, 23, -1, 17, 16, 24, -1, 24, 25, 17, -1, 15, 26, 24, -1, 24, 16, 15, -1, 27, 28, 24, -1, 24, 26, 27, -1, 29, 25, 24, -1, 24, 28, 29, -1, 23, 22, 30, -1, 30, 31, 23, -1, 21, 32, 30, -1, 30, 22, 21, -1, 33, 34, 30, -1, 30, 32, 33, -1, 35, 31, 30, -1, 30, 34, 35, -1, 29, 28, 36, -1, 36, 37, 29, -1, 27, 38, 36, -1, 36, 28, 27, -1, 39, 40, 36, -1, 36, 38, 39, -1, 41, 37, 36, -1, 36, 40, 41, -1, 35, 34, 42, -1, 42, 43, 35, -1, 33, 44, 42, -1, 42, 34, 33, -1, 45, 46, 42, -1, 42, 44, 45, -1, 47, 43, 42, -1, 42, 46, 47, -1, 41, 40, 48, -1, 48, 87, 41, -1, 39, 88, 48, -1, 48, 40, 39, -1, 145, 146, 48, -1, 48, 88, 145, -1, 147, 87, 48, -1, 48, 146, 147, -1, 47, 46, 148, -1, 148, 149, 47, -1, 45, 150, 148, -1, 148, 46, 45, -1, 151, 152, 148, -1, 148, 150, 151, -1, 153, 149, 148, -1, 148, 152, 153, -1, 147, 146, 154, -1, 154, 155, 147, -1, 145, 156, 154, -1, 154, 146, 145, -1, 157, 158, 154, -1, 154, 156, 157, -1, 159, 155, 154, -1, 154, 158, 159, -1, 153, 152, 160, -1, 160, 161, 153, -1, 151, 162, 160, -1, 160, 152, 151, -1, 163, 164, 160, -1, 160, 162, 163, -1, 165, 161, 160, -1, 160, 164, 165, -1, 159, 158, 166, -1, 166, 167, 159, -1, 157, 168, 166, -1, 166, 158, 157, -1, 169, 170, 166, -1, 166, 168, 169, -1, 171, 167, 166, -1, 166, 170, 171, -1, 165, 164, 172, -1, 172, 173, 165, -1, 163, 174, 172, -1, 172, 164, 163, -1, 175, 176, 172, -1, 172, 174, 175, -1, 177, 173, 172, -1, 172, 176, 177, -1, 171, 170, 178, -1, 178, 179, 171, -1, 169, 180, 178, -1, 178, 170, 169, -1, 181, 182, 178, -1, 178, 180, 181, -1, 183, 179, 178, -1, 178, 182, 183, -1, 9, 12, 184, -1, 184, 185, 9, -1, 17, 186, 184, -1, 184, 12, 17, -1, 187, 188, 184, -1, 184, 186, 187, -1, 189, 185, 184, -1, 184, 188, 189, -1, 17, 25, 190, -1, 190, 186, 17, -1, 29, 191, 190, -1, 190, 25, 29, -1, 192, 193, 190, -1, 190, 191, 192, -1, 187, 186, 190, -1, 190, 193, 187, -1, 29, 37, 194, -1, 194, 191, 29, -1, 41, 195, 194, -1, 194, 37, 41, -1, 262, 263, 194, -1, 194, 195, 262, -1, 192, 191, 194, -1, 194, 263, 192, -1, 41, 87, 292, -1, 292, 195, 41, -1, 147, 293, 292, -1, 292, 87, 147, -1, 294, 295, 292, -1, 292, 293, 294, -1, 262, 195, 292, -1, 292, 295, 262, -1, 147, 155, 296, -1, 296, 293, 147, -1, 159, 297, 296, -1, 296, 155, 159, -1, 298, 299, 296, -1, 296, 297, 298, -1, 294, 293, 296, -1, 296, 299, 294, -1, 159, 167, 300, -1, 300, 297, 159, -1, 171, 301, 300, -1, 300, 167, 171, -1, 302, 303, 300, -1, 300, 301, 302, -1, 298, 297, 300, -1, 300, 303, 298, -1, 171, 179, 304, -1, 304, 301, 171, -1, 183, 305, 304, -1, 304, 179, 183, -1, 306, 307, 304, -1, 304, 305, 306, -1, 302, 301, 304, -1, 304, 307, 302, -1, 175, 174, 308, -1, 308, 309, 175, -1, 163, 310, 308, -1, 308, 174, 163, -1, 311, 312, 308, -1, 308, 310, 311, -1, 313, 309, 308, -1, 308, 312, 313, -1, 163, 162, 314, -1, 314, 310, 163, -1, 151, 315, 314, -1, 314, 162, 151, -1, 316, 317, 314, -1, 314, 315, 316, -1, 311, 310, 314, -1, 314, 317, 311, -1, 151, 150, 318, -1, 318, 315, 151, -1, 45, 319, 318, -1, 318, 150, 45, -1, 320, 321, 318, -1, 318, 319, 320, -1, 316, 315, 318, -1, 318, 321, 316, -1, 45, 44, 322, -1, 322, 319, 45, -1, 33, 323, 322, -1, 322, 44, 33, -1, 324, 325, 322, -1, 322, 323, 324, -1, 320, 319, 322, -1, 322, 325, 320, -1, 33, 32, 326, -1, 326, 323, 33, -1, 21, 327, 326, -1, 326, 32, 21, -1, 328, 364, 326, -1, 326, 327, 328, -1, 324, 323, 326, -1, 326, 364, 324, -1, 21, 20, 421, -1, 421, 327, 21, -1, 6, 422, 421, -1, 421, 20, 6, -1, 423, 424, 421, -1, 421, 422, 423, -1, 328, 327, 421, -1, 421, 424, 328, -1, 6, 5, 425, -1, 425, 422, 6, -1, 4, 426, 425, -1, 425, 5, 4, -1, 427, 428, 425, -1, 425, 426, 427, -1, 423, 422, 425, -1, 425, 428, 423, -1, 15, 14, 429, -1, 429, 430, 15, -1, 13, 431, 429, -1, 429, 14, 13, -1, 432, 430, 429, -1, 429, 431, 432, -1, 27, 26, 433, -1, 433, 434, 27, -1, 15, 430, 433, -1, 433, 26, 15, -1, 432, 434, 433, -1, 433, 430, 432, -1, 39, 38, 435, -1, 435, 436, 39, -1, 27, 434, 435, -1, 435, 38, 27, -1, 432, 436, 435, -1, 435, 434, 432, -1, 145, 88, 437, -1, 437, 438, 145, -1, 39, 436, 437, -1, 437, 88, 39, -1, 432, 438, 437, -1, 437, 436, 432, -1, 157, 156, 439, -1, 439, 440, 157, -1, 145, 438, 439, -1, 439, 156, 145, -1, 432, 440, 439, -1, 439, 438, 432, -1, 169, 168, 441, -1, 441, 442, 169, -1, 157, 440, 441, -1, 441, 168, 157, -1, 432, 442, 441, -1, 441, 440, 432, -1, 181, 180, 443, -1, 443, 444, 181, -1, 169, 442, 443, -1, 443, 180, 169, -1, 432, 444, 443, -1, 443, 442, 432, -1, 49, 50, 51, -1, 51, 52, 49, -1, 53, 54, 51, -1, 51, 50, 53, -1, 55, 56, 51, -1, 51, 54, 55, -1, 57, 52, 51, -1, 51, 56, 57, -1, 58, 59, 60, -1, 60, 61, 58, -1, 62, 63, 60, -1, 60, 59, 62, -1, 64, 65, 60, -1, 60, 63, 64, -1, 66, 61, 60, -1, 60, 65, 66, -1, 67, 68, 69, -1, 69, 70, 67, -1, 71, 72, 69, -1, 69, 68, 71, -1, 73, 74, 69, -1, 69, 72, 73, -1, 75, 70, 69, -1, 69, 74, 75, -1, 76, 77, 78, -1, 78, 79, 76, -1, 80, 81, 78, -1, 78, 77, 80, -1, 82, 83, 78, -1, 78, 81, 82, -1, 84, 79, 78, -1, 78, 83, 84, -1, 85, 86, 89, -1, 89, 90, 85, -1, 91, 92, 89, -1, 89, 86, 91, -1, 93, 94, 89, -1, 89, 92, 93, -1, 95, 90, 89, -1, 89, 94, 95, -1, 96, 97, 98, -1, 98, 99, 96, -1, 100, 101, 98, -1, 98, 97, 100, -1, 102, 103, 98, -1, 98, 101, 102, -1, 104, 99, 98, -1, 98, 103, 104, -1, 105, 106, 107, -1, 107, 108, 105, -1, 109, 110, 107, -1, 107, 106, 109, -1, 111, 112, 107, -1, 107, 110, 111, -1, 113, 108, 107, -1, 107, 112, 113, -1, 114, 115, 116, -1, 116, 117, 114, -1, 118, 119, 116, -1, 116, 115, 118, -1, 120, 121, 116, -1, 116, 119, 120, -1, 122, 117, 116, -1, 116, 121, 122, -1, 118, 123, 124, -1, 124, 119, 118, -1, 125, 126, 124, -1, 124, 123, 125, -1, 127, 128, 124, -1, 124, 126, 127, -1, 120, 119, 124, -1, 124, 128, 120, -1, 125, 129, 130, -1, 130, 126, 125, -1, 131, 132, 130, -1, 130, 129, 131, -1, 133, 134, 130, -1, 130, 132, 133, -1, 127, 126, 130, -1, 130, 134, 127, -1, 131, 135, 136, -1, 136, 132, 131, -1, 114, 117, 136, -1, 136, 135, 114, -1, 122, 137, 136, -1, 136, 117, 122, -1, 133, 132, 136, -1, 136, 137, 133, -1, 138, 139, 140, -1, 140, 141, 138, -1, 142, 143, 140, -1, 140, 139, 142, -1, 144, 196, 140, -1, 140, 143, 144, -1, 197, 141, 140, -1, 140, 196, 197, -1, 142, 198, 199, -1, 199, 143, 142, -1, 200, 201, 199, -1, 199, 198, 200, -1, 202, 203, 199, -1, 199, 201, 202, -1, 144, 143, 199, -1, 199, 203, 144, -1, 200, 204, 205, -1, 205, 201, 200, -1, 206, 207, 205, -1, 205, 204, 206, -1, 208, 209, 205, -1, 205, 207, 208, -1, 202, 201, 205, -1, 205, 209, 202, -1, 206, 210, 211, -1, 211, 207, 206, -1, 138, 141, 211, -1, 211, 210, 138, -1, 197, 212, 211, -1, 211, 141, 197, -1, 208, 207, 211, -1, 211, 212, 208, -1, 206, 213, 214, -1, 214, 215, 206, -1, 216, 217, 214, -1, 214, 213, 216, -1, 218, 219, 214, -1, 214, 217, 218, -1, 220, 215, 214, -1, 214, 219, 220, -1, 216, 221, 222, -1, 222, 217, 216, -1, 223, 224, 222, -1, 222, 221, 223, -1, 225, 226, 222, -1, 222, 224, 225, -1, 218, 217, 222, -1, 222, 226, 218, -1, 223, 227, 228, -1, 228, 224, 223, -1, 138, 229, 228, -1, 228, 227, 138, -1, 230, 231, 228, -1, 228, 229, 230, -1, 225, 224, 228, -1, 228, 231, 225, -1, 138, 210, 232, -1, 232, 229, 138, -1, 206, 215, 232, -1, 232, 210, 206, -1, 220, 233, 232, -1, 232, 215, 220, -1, 230, 229, 232, -1, 232, 233, 230, -1, 216, 234, 235, -1, 235, 236, 216, -1, 237, 238, 235, -1, 235, 234, 237, -1, 239, 240, 235, -1, 235, 238, 239, -1, 241, 236, 235, -1, 235, 240, 241, -1, 237, 242, 243, -1, 243, 238, 237, -1, 244, 245, 243, -1, 243, 242, 244, -1, 246, 247, 243, -1, 243, 245, 246, -1, 239, 238, 243, -1, 243, 247, 239, -1, 244, 248, 249, -1, 249, 245, 244, -1, 223, 250, 249, -1, 249, 248, 223, -1, 251, 252, 249, -1, 249, 250, 251, -1, 246, 245, 249, -1, 249, 252, 246, -1, 223, 221, 253, -1, 253, 250, 223, -1, 216, 236, 253, -1, 253, 221, 216, -1, 241, 254, 253, -1, 253, 236, 241, -1, 251, 250, 253, -1, 253, 254, 251, -1, 237, 255, 256, -1, 256, 257, 237, -1, 258, 259, 256, -1, 256, 255, 258, -1, 260, 261, 256, -1, 256, 259, 260, -1, 264, 257, 256, -1, 256, 261, 264, -1, 258, 265, 266, -1, 266, 259, 258, -1, 267, 268, 266, -1, 266, 265, 267, -1, 269, 270, 266, -1, 266, 268, 269, -1, 260, 259, 266, -1, 266, 270, 260, -1, 267, 271, 272, -1, 272, 268, 267, -1, 244, 273, 272, -1, 272, 271, 244, -1, 274, 275, 272, -1, 272, 273, 274, -1, 269, 268, 272, -1, 272, 275, 269, -1, 244, 242, 276, -1, 276, 273, 244, -1, 237, 257, 276, -1, 276, 242, 237, -1, 264, 277, 276, -1, 276, 257, 264, -1, 274, 273, 276, -1, 276, 277, 274, -1, 258, 278, 279, -1, 279, 280, 258, -1, 281, 282, 279, -1, 279, 278, 281, -1, 283, 284, 279, -1, 279, 282, 283, -1, 285, 280, 279, -1, 279, 284, 285, -1, 281, 286, 287, -1, 287, 282, 281, -1, 288, 289, 287, -1, 287, 286, 288, -1, 290, 291, 287, -1, 287, 289, 290, -1, 283, 282, 287, -1, 287, 291, 283, -1, 288, 329, 330, -1, 330, 289, 288, -1, 267, 331, 330, -1, 330, 329, 267, -1, 332, 333, 330, -1, 330, 331, 332, -1, 290, 289, 330, -1, 330, 333, 290, -1, 267, 265, 334, -1, 334, 331, 267, -1, 258, 280, 334, -1, 334, 265, 258, -1, 285, 335, 334, -1, 334, 280, 285, -1, 332, 331, 334, -1, 334, 335, 332, -1, 281, 336, 337, -1, 337, 338, 281, -1, 125, 339, 337, -1, 337, 336, 125, -1, 340, 341, 337, -1, 337, 339, 340, -1, 342, 338, 337, -1, 337, 341, 342, -1, 125, 123, 343, -1, 343, 339, 125, -1, 118, 344, 343, -1, 343, 123, 118, -1, 345, 346, 343, -1, 343, 344, 345, -1, 340, 339, 343, -1, 343, 346, 340, -1, 118, 347, 348, -1, 348, 344, 118, -1, 288, 349, 348, -1, 348, 347, 288, -1, 350, 351, 348, -1, 348, 349, 350, -1, 345, 344, 348, -1, 348, 351, 345, -1, 288, 286, 352, -1, 352, 349, 288, -1, 281, 338, 352, -1, 352, 286, 281, -1, 342, 353, 352, -1, 352, 338, 342, -1, 350, 349, 352, -1, 352, 353, 350, -1, 432, 431, 445, -1, 445, 446, 432, -1, 13, 447, 445, -1, 445, 431, 13, -1, 448, 449, 445, -1, 445, 447, 448, -1, 450, 446, 445, -1, 445, 449, 450, -1, 354, 355, 356, -1, 356, 357, 354, -1, 358, 359, 356, -1, 356, 355, 358, -1, 53, 50, 356, -1, 356, 359, 53, -1, 49, 357, 356, -1, 356, 50, 49, -1, 358, 360, 361, -1, 361, 359, 358, -1, 362, 363, 361, -1, 361, 360, 362, -1, 55, 54, 361, -1, 361, 363, 55, -1, 53, 359, 361, -1, 361, 54, 53, -1, 362, 365, 366, -1, 366, 363, 362, -1, 367, 368, 366, -1, 366, 365, 367, -1, 57, 56, 366, -1, 366, 368, 57, -1, 55, 363, 366, -1, 366, 56, 55, -1, 367, 369, 370, -1, 370, 368, 367, -1, 354, 357, 370, -1, 370, 369, 354, -1, 49, 52, 370, -1, 370, 357, 49, -1, 57, 368, 370, -1, 370, 52, 57, -1, 371, 372, 373, -1, 373, 374, 371, -1, 375, 376, 373, -1, 373, 372, 375, -1, 62, 59, 373, -1, 373, 376, 62, -1, 58, 374, 373, -1, 373, 59, 58, -1, 375, 377, 378, -1, 378, 376, 375, -1, 379, 380, 378, -1, 378, 377, 379, -1, 64, 63, 378, -1, 378, 380, 64, -1, 62, 376, 378, -1, 378, 63, 62, -1, 379, 381, 382, -1, 382, 380, 379, -1, 383, 384, 382, -1, 382, 381, 383, -1, 66, 65, 382, -1, 382, 384, 66, -1, 64, 380, 382, -1, 382, 65, 64, -1, 383, 385, 386, -1, 386, 384, 383, -1, 371, 374, 386, -1, 386, 385, 371, -1, 58, 61, 386, -1, 386, 374, 58, -1, 66, 384, 386, -1, 386, 61, 66, -1, 387, 388, 389, -1, 389, 390, 387, -1, 391, 392, 389, -1, 389, 388, 391, -1, 71, 68, 389, -1, 389, 392, 71, -1, 67, 390, 389, -1, 389, 68, 67, -1, 391, 393, 394, -1, 394, 392, 391, -1, 395, 396, 394, -1, 394, 393, 395, -1, 73, 72, 394, -1, 394, 396, 73, -1, 71, 392, 394, -1, 394, 72, 71, -1, 395, 397, 398, -1, 398, 396, 395, -1, 399, 400, 398, -1, 398, 397, 399, -1, 75, 74, 398, -1, 398, 400, 75, -1, 73, 396, 398, -1, 398, 74, 73, -1, 399, 401, 402, -1, 402, 400, 399, -1, 387, 390, 402, -1, 402, 401, 387, -1, 67, 70, 402, -1, 402, 390, 67, -1, 75, 400, 402, -1, 402, 70, 75, -1, 403, 404, 405, -1, 405, 406, 403, -1, 407, 408, 405, -1, 405, 404, 407, -1, 80, 77, 405, -1, 405, 408, 80, -1, 76, 406, 405, -1, 405, 77, 76, -1, 407, 409, 410, -1, 410, 408, 407, -1, 411, 412, 410, -1, 410, 409, 411, -1, 82, 81, 410, -1, 410, 412, 82, -1, 80, 408, 410, -1, 410, 81, 80, -1, 411, 413, 414, -1, 414, 412, 411, -1, 415, 416, 414, -1, 414, 413, 415, -1, 84, 83, 414, -1, 414, 416, 84, -1, 82, 412, 414, -1, 414, 83, 82, -1, 415, 417, 418, -1, 418, 416, 415, -1, 403, 406, 418, -1, 418, 417, 403, -1, 76, 79, 418, -1, 418, 406, 76, -1, 84, 416, 418, -1, 418, 79, 84, -1, 419, 420, 457, -1, 457, 458, 419, -1, 459, 460, 457, -1, 457, 420, 459, -1, 91, 86, 457, -1, 457, 460, 91, -1, 85, 458, 457, -1, 457, 86, 85, -1, 459, 461, 462, -1, 462, 460, 459, -1, 463, 464, 462, -1, 462, 461, 463, -1, 93, 92, 462, -1, 462, 464, 93, -1, 91, 460, 462, -1, 462, 92, 91, -1, 463, 465, 466, -1, 466, 464, 463, -1, 467, 468, 466, -1, 466, 465, 467, -1, 95, 94, 466, -1, 466, 468, 95, -1, 93, 464, 466, -1, 466, 94, 93, -1, 467, 469, 470, -1, 470, 468, 467, -1, 419, 458, 470, -1, 470, 469, 419, -1, 85, 90, 470, -1, 470, 458, 85, -1, 95, 468, 470, -1, 470, 90, 95, -1, 471, 472, 473, -1, 473, 474, 471, -1, 475, 476, 473, -1, 473, 472, 475, -1, 100, 97, 473, -1, 473, 476, 100, -1, 96, 474, 473, -1, 473, 97, 96, -1, 475, 477, 478, -1, 478, 476, 475, -1, 479, 480, 478, -1, 478, 477, 479, -1, 102, 101, 478, -1, 478, 480, 102, -1, 100, 476, 478, -1, 478, 101, 100, -1, 479, 481, 482, -1, 482, 480, 479, -1, 483, 484, 482, -1, 482, 481, 483, -1, 104, 103, 482, -1, 482, 484, 104, -1, 102, 480, 482, -1, 482, 103, 102, -1, 483, 485, 486, -1, 486, 484, 483, -1, 471, 474, 486, -1, 486, 485, 471, -1, 96, 99, 486, -1, 486, 474, 96, -1, 104, 484, 486, -1, 486, 99, 104, -1, 487, 488, 489, -1, 489, 490, 487, -1, 491, 493, 489, -1, 489, 488, 491, -1, 109, 106, 489, -1, 489, 493, 109, -1, 105, 490, 489, -1, 489, 106, 105, -1, 491, 494, 495, -1, 495, 493, 491, -1, 496, 497, 495, -1, 495, 494, 496, -1, 111, 110, 495, -1, 495, 497, 111, -1, 109, 493, 495, -1, 495, 110, 109, -1, 496, 498, 499, -1, 499, 497, 496, -1, 500, 501, 499, -1, 499, 498, 500, -1, 113, 112, 499, -1, 499, 501, 113, -1, 111, 497, 499, -1, 499, 112, 111, -1, 500, 502, 503, -1, 503, 501, 500, -1, 487, 490, 503, -1, 503, 502, 487, -1, 105, 108, 503, -1, 503, 490, 105, -1, 113, 501, 503, -1, 503, 108, 113, -1, 120, 504, 505, -1, 505, 121, 120, -1, 358, 355, 505, -1, 505, 504, 358, -1, 354, 506, 505, -1, 505, 355, 354, -1, 122, 121, 505, -1, 505, 506, 122, -1, 127, 507, 508, -1, 508, 128, 127, -1, 362, 360, 508, -1, 508, 507, 362, -1, 358, 504, 508, -1, 508, 360, 358, -1, 120, 128, 508, -1, 508, 504, 120, -1, 133, 509, 510, -1, 510, 134, 133, -1, 367, 365, 510, -1, 510, 509, 367, -1, 362, 507, 510, -1, 510, 365, 362, -1, 127, 134, 510, -1, 510, 507, 127, -1, 122, 506, 511, -1, 511, 137, 122, -1, 354, 369, 511, -1, 511, 506, 354, -1, 367, 509, 511, -1, 511, 369, 367, -1, 133, 137, 511, -1, 511, 509, 133, -1, 144, 512, 513, -1, 513, 196, 144, -1, 375, 372, 513, -1, 513, 512, 375, -1, 371, 514, 513, -1, 513, 372, 371, -1, 197, 196, 513, -1, 513, 514, 197, -1, 202, 515, 516, -1, 516, 203, 202, -1, 379, 377, 516, -1, 516, 515, 379, -1, 375, 512, 516, -1, 516, 377, 375, -1, 144, 203, 516, -1, 516, 512, 144, -1, 208, 517, 518, -1, 518, 209, 208, -1, 383, 381, 518, -1, 518, 517, 383, -1, 379, 515, 518, -1, 518, 381, 379, -1, 202, 209, 518, -1, 518, 515, 202, -1, 197, 514, 519, -1, 519, 212, 197, -1, 371, 385, 519, -1, 519, 514, 371, -1, 383, 517, 519, -1, 519, 385, 383, -1, 208, 212, 519, -1, 519, 517, 208, -1, 218, 520, 521, -1, 521, 219, 218, -1, 391, 388, 521, -1, 521, 520, 391, -1, 387, 522, 521, -1, 521, 388, 387, -1, 220, 219, 521, -1, 521, 522, 220, -1, 225, 523, 524, -1, 524, 226, 225, -1, 395, 393, 524, -1, 524, 523, 395, -1, 391, 520, 524, -1, 524, 393, 391, -1, 218, 226, 524, -1, 524, 520, 218, -1, 230, 525, 526, -1, 526, 231, 230, -1, 399, 397, 526, -1, 526, 525, 399, -1, 395, 523, 526, -1, 526, 397, 395, -1, 225, 231, 526, -1, 526, 523, 225, -1, 220, 522, 527, -1, 527, 233, 220, -1, 387, 401, 527, -1, 527, 522, 387, -1, 399, 525, 527, -1, 527, 401, 399, -1, 230, 233, 527, -1, 527, 525, 230, -1, 239, 528, 529, -1, 529, 240, 239, -1, 407, 404, 529, -1, 529, 528, 407, -1, 403, 530, 529, -1, 529, 404, 403, -1, 241, 240, 529, -1, 529, 530, 241, -1, 246, 531, 532, -1, 532, 247, 246, -1, 411, 409, 532, -1, 532, 531, 411, -1, 407, 528, 532, -1, 532, 409, 407, -1, 239, 247, 532, -1, 532, 528, 239, -1, 251, 533, 534, -1, 534, 252, 251, -1, 415, 413, 534, -1, 534, 533, 415, -1, 411, 531, 534, -1, 534, 413, 411, -1, 246, 252, 534, -1, 534, 531, 246, -1, 241, 530, 535, -1, 535, 254, 241, -1, 403, 417, 535, -1, 535, 530, 403, -1, 415, 533, 535, -1, 535, 417, 415, -1, 251, 254, 535, -1, 535, 533, 251, -1, 260, 536, 537, -1, 537, 261, 260, -1, 459, 420, 537, -1, 537, 536, 459, -1, 419, 538, 537, -1, 537, 420, 419, -1, 264, 261, 537, -1, 537, 538, 264, -1, 269, 539, 540, -1, 540, 270, 269, -1, 463, 461, 540, -1, 540, 539, 463, -1, 459, 536, 540, -1, 540, 461, 459, -1, 260, 270, 540, -1, 540, 536, 260, -1, 274, 541, 542, -1, 542, 275, 274, -1, 467, 465, 542, -1, 542, 541, 467, -1, 463, 539, 542, -1, 542, 465, 463, -1, 269, 275, 542, -1, 542, 539, 269, -1, 264, 538, 543, -1, 543, 277, 264, -1, 419, 469, 543, -1, 543, 538, 419, -1, 467, 541, 543, -1, 543, 469, 467, -1, 274, 277, 543, -1, 543, 541, 274, -1, 283, 544, 545, -1, 545, 284, 283, -1, 475, 472, 545, -1, 545, 544, 475, -1, 471, 546, 545, -1, 545, 472, 471, -1, 285, 284, 545, -1, 545, 546, 285, -1, 290, 547, 548, -1, 548, 291, 290, -1, 479, 477, 548, -1, 548, 547, 479, -1, 475, 544, 548, -1, 548, 477, 475, -1, 283, 291, 548, -1, 548, 544, 283, -1, 332, 598, 600, -1, 600, 333, 332, -1, 483, 481, 600, -1, 600, 598, 483, -1, 479, 547, 600, -1, 600, 481, 479, -1, 290, 333, 600, -1, 600, 547, 290, -1, 285, 546, 602, -1, 602, 335, 285, -1, 471, 485, 602, -1, 602, 546, 471, -1, 483, 598, 602, -1, 602, 485, 483, -1, 332, 335, 602, -1, 602, 598, 332, -1, 340, 604, 606, -1, 606, 341, 340, -1, 491, 488, 606, -1, 606, 604, 491, -1, 487, 609, 606, -1, 606, 488, 487, -1, 342, 341, 606, -1, 606, 609, 342, -1, 345, 616, 642, -1, 642, 346, 345, -1, 496, 494, 642, -1, 642, 616, 496, -1, 491, 604, 642, -1, 642, 494, 491, -1, 340, 346, 642, -1, 642, 604, 340, -1, 350, 643, 644, -1, 644, 351, 350, -1, 500, 498, 644, -1, 644, 643, 500, -1, 496, 616, 644, -1, 644, 498, 496, -1, 345, 351, 644, -1, 644, 616, 345, -1, 342, 609, 645, -1, 645, 353, 342, -1, 487, 502, 645, -1, 645, 609, 487, -1, 500, 643, 645, -1, 645, 502, 500, -1, 350, 353, 645, -1, 645, 643, 350, -1, 448, 451, 452, -1, 452, 449, 448, -1, 453, 454, 452, -1, 452, 451, 453, -1, 455, 456, 452, -1, 452, 454, 455, -1, 450, 449, 452, -1, 452, 456, 450, -1, 492, 549, 550, -1, 550, 551, 492, -1, 552, 553, 550, -1, 550, 549, 552, -1, 554, 555, 550, -1, 550, 553, 554, -1, 556, 551, 550, -1, 550, 555, 556, -1, 557, 558, 559, -1, 559, 560, 557, -1, 561, 562, 559, -1, 559, 558, 561, -1, 563, 564, 559, -1, 559, 562, 563, -1, 565, 560, 559, -1, 559, 564, 565, -1, 552, 566, 567, -1, 567, 553, 552, -1, 568, 569, 567, -1, 567, 566, 568, -1, 570, 571, 567, -1, 567, 569, 570, -1, 554, 553, 567, -1, 567, 571, 554, -1, 561, 572, 573, -1, 573, 562, 561, -1, 574, 575, 573, -1, 573, 572, 574, -1, 576, 577, 573, -1, 573, 575, 576, -1, 563, 562, 573, -1, 573, 577, 563, -1, 568, 578, 579, -1, 579, 569, 568, -1, 580, 581, 579, -1, 579, 578, 580, -1, 582, 583, 579, -1, 579, 581, 582, -1, 570, 569, 579, -1, 579, 583, 570, -1, 574, 584, 585, -1, 585, 575, 574, -1, 586, 587, 585, -1, 585, 584, 586, -1, 588, 589, 585, -1, 585, 587, 588, -1, 576, 575, 585, -1, 585, 589, 576, -1, 580, 590, 591, -1, 591, 581, 580, -1, 592, 593, 591, -1, 591, 590, 592, -1, 594, 595, 591, -1, 591, 593, 594, -1, 582, 581, 591, -1, 591, 595, 582, -1, 586, 596, 597, -1, 597, 587, 586, -1, 599, 601, 597, -1, 597, 596, 599, -1, 603, 605, 597, -1, 597, 601, 603, -1, 588, 587, 597, -1, 597, 605, 588, -1, 592, 607, 608, -1, 608, 593, 592, -1, 610, 611, 608, -1, 608, 607, 610, -1, 612, 613, 608, -1, 608, 611, 612, -1, 594, 593, 608, -1, 608, 613, 594, -1, 599, 614, 615, -1, 615, 601, 599, -1, 617, 618, 615, -1, 615, 614, 617, -1, 619, 620, 615, -1, 615, 618, 619, -1, 603, 601, 615, -1, 615, 620, 603, -1, 610, 621, 622, -1, 622, 611, 610, -1, 623, 624, 622, -1, 622, 621, 623, -1, 625, 626, 622, -1, 622, 624, 625, -1, 612, 611, 622, -1, 622, 626, 612, -1, 617, 627, 628, -1, 628, 618, 617, -1, 629, 630, 628, -1, 628, 627, 629, -1, 631, 632, 628, -1, 628, 630, 631, -1, 619, 618, 628, -1, 628, 632, 619, -1, 623, 633, 634, -1, 634, 624, 623, -1, 177, 176, 634, -1, 634, 633, 177, -1, 175, 635, 634, -1, 634, 176, 175, -1, 625, 624, 634, -1, 634, 635, 625, -1, 629, 636, 637, -1, 637, 630, 629, -1, 183, 182, 637, -1, 637, 636, 183, -1, 181, 638, 637, -1, 637, 182, 181, -1, 631, 630, 637, -1, 637, 638, 631, -1, 557, 639, 640, -1, 640, 558, 557, -1, 641, 707, 640, -1, 640, 639, 641, -1, 708, 793, 640, -1, 640, 707, 708, -1, 561, 558, 640, -1, 640, 793, 561, -1, 561, 793, 822, -1, 822, 572, 561, -1, 708, 823, 822, -1, 822, 793, 708, -1, 824, 825, 822, -1, 822, 823, 824, -1, 574, 572, 822, -1, 822, 825, 574, -1, 574, 825, 826, -1, 826, 584, 574, -1, 824, 827, 826, -1, 826, 825, 824, -1, 828, 829, 826, -1, 826, 827, 828, -1, 586, 584, 826, -1, 826, 829, 586, -1, 586, 829, 830, -1, 830, 596, 586, -1, 828, 831, 830, -1, 830, 829, 828, -1, 832, 833, 830, -1, 830, 831, 832, -1, 599, 596, 830, -1, 830, 833, 599, -1, 599, 833, 834, -1, 834, 614, 599, -1, 832, 835, 834, -1, 834, 833, 832, -1, 836, 837, 834, -1, 834, 835, 836, -1, 617, 614, 834, -1, 834, 837, 617, -1, 617, 837, 838, -1, 838, 627, 617, -1, 836, 839, 838, -1, 838, 837, 836, -1, 840, 841, 838, -1, 838, 839, 840, -1, 629, 627, 838, -1, 838, 841, 629, -1, 629, 841, 842, -1, 842, 636, 629, -1, 840, 843, 842, -1, 842, 841, 840, -1, 306, 305, 842, -1, 842, 843, 306, -1, 183, 636, 842, -1, 842, 305, 183, -1, 175, 309, 844, -1, 844, 635, 175, -1, 313, 845, 844, -1, 844, 309, 313, -1, 846, 847, 844, -1, 844, 845, 846, -1, 625, 635, 844, -1, 844, 847, 625, -1, 625, 847, 848, -1, 848, 626, 625, -1, 846, 849, 848, -1, 848, 847, 846, -1, 850, 851, 848, -1, 848, 849, 850, -1, 612, 626, 848, -1, 848, 851, 612, -1, 612, 851, 852, -1, 852, 613, 612, -1, 850, 853, 852, -1, 852, 851, 850, -1, 854, 855, 852, -1, 852, 853, 854, -1, 594, 613, 852, -1, 852, 855, 594, -1, 594, 855, 856, -1, 856, 595, 594, -1, 854, 857, 856, -1, 856, 855, 854, -1, 858, 859, 856, -1, 856, 857, 858, -1, 582, 595, 856, -1, 856, 859, 582, -1, 582, 859, 860, -1, 860, 583, 582, -1, 858, 861, 860, -1, 860, 859, 858, -1, 862, 863, 860, -1, 860, 861, 862, -1, 570, 583, 860, -1, 860, 863, 570, -1, 570, 863, 864, -1, 864, 571, 570, -1, 862, 865, 864, -1, 864, 863, 862, -1, 866, 867, 864, -1, 864, 865, 866, -1, 554, 571, 864, -1, 864, 867, 554, -1, 554, 867, 868, -1, 868, 555, 554, -1, 866, 869, 868, -1, 868, 867, 866, -1, 871, 872, 868, -1, 868, 869, 871, -1, 556, 555, 868, -1, 868, 872, 556, -1, 563, 874, 875, -1, 875, 564, 563, -1, 432, 877, 875, -1, 875, 874, 432, -1, 565, 564, 875, -1, 875, 877, 565, -1, 576, 878, 880, -1, 880, 577, 576, -1, 432, 874, 880, -1, 880, 878, 432, -1, 563, 577, 880, -1, 880, 874, 563, -1, 588, 881, 883, -1, 883, 589, 588, -1, 432, 878, 883, -1, 883, 881, 432, -1, 576, 589, 883, -1, 883, 878, 576, -1, 603, 884, 885, -1, 885, 605, 603, -1, 432, 881, 885, -1, 885, 884, 432, -1, 588, 605, 885, -1, 885, 881, 588, -1, 619, 887, 888, -1, 888, 620, 619, -1, 432, 884, 888, -1, 888, 887, 432, -1, 603, 620, 888, -1, 888, 884, 603, -1, 631, 889, 890, -1, 890, 632, 631, -1, 432, 887, 890, -1, 890, 889, 432, -1, 619, 632, 890, -1, 890, 887, 619, -1, 181, 444, 891, -1, 891, 638, 181, -1, 432, 889, 891, -1, 891, 444, 432, -1, 631, 638, 891, -1, 891, 889, 631, -1, 646, 647, 648, -1, 648, 649, 646, -1, 650, 651, 648, -1, 648, 647, 650, -1, 652, 653, 648, -1, 648, 651, 652, -1, 654, 649, 648, -1, 648, 653, 654, -1, 655, 656, 657, -1, 657, 658, 655, -1, 659, 660, 657, -1, 657, 656, 659, -1, 661, 662, 657, -1, 657, 660, 661, -1, 663, 658, 657, -1, 657, 662, 663, -1, 664, 665, 666, -1, 666, 667, 664, -1, 668, 669, 666, -1, 666, 665, 668, -1, 670, 671, 666, -1, 666, 669, 670, -1, 672, 667, 666, -1, 666, 671, 672, -1, 673, 674, 675, -1, 675, 676, 673, -1, 677, 678, 675, -1, 675, 674, 677, -1, 679, 680, 675, -1, 675, 678, 679, -1, 681, 676, 675, -1, 675, 680, 681, -1, 682, 683, 684, -1, 684, 685, 682, -1, 686, 687, 684, -1, 684, 683, 686, -1, 688, 689, 684, -1, 684, 687, 688, -1, 690, 685, 684, -1, 684, 689, 690, -1, 691, 692, 693, -1, 693, 694, 691, -1, 695, 696, 693, -1, 693, 692, 695, -1, 697, 698, 693, -1, 693, 696, 697, -1, 699, 694, 693, -1, 693, 698, 699, -1, 700, 701, 702, -1, 702, 703, 700, -1, 704, 705, 702, -1, 702, 701, 704, -1, 706, 709, 702, -1, 702, 705, 706, -1, 710, 703, 702, -1, 702, 709, 710, -1, 711, 712, 713, -1, 713, 714, 711, -1, 715, 716, 713, -1, 713, 712, 715, -1, 717, 718, 713, -1, 713, 716, 717, -1, 719, 714, 713, -1, 713, 718, 719, -1, 719, 718, 720, -1, 720, 721, 719, -1, 717, 722, 720, -1, 720, 718, 717, -1, 723, 724, 720, -1, 720, 722, 723, -1, 725, 721, 720, -1, 720, 724, 725, -1, 725, 724, 726, -1, 726, 727, 725, -1, 723, 728, 726, -1, 726, 724, 723, -1, 729, 730, 726, -1, 726, 728, 729, -1, 731, 727, 726, -1, 726, 730, 731, -1, 731, 730, 732, -1, 732, 733, 731, -1, 729, 734, 732, -1, 732, 730, 729, -1, 715, 712, 732, -1, 732, 734, 715, -1, 711, 733, 732, -1, 732, 712, 711, -1, 735, 736, 737, -1, 737, 738, 735, -1, 739, 740, 737, -1, 737, 736, 739, -1, 741, 742, 737, -1, 737, 740, 741, -1, 142, 738, 737, -1, 737, 742, 142, -1, 142, 742, 743, -1, 743, 198, 142, -1, 741, 744, 743, -1, 743, 742, 741, -1, 745, 746, 743, -1, 743, 744, 745, -1, 200, 198, 743, -1, 743, 746, 200, -1, 200, 746, 747, -1, 747, 748, 200, -1, 745, 749, 747, -1, 747, 746, 745, -1, 750, 751, 747, -1, 747, 749, 750, -1, 752, 748, 747, -1, 747, 751, 752, -1, 752, 751, 753, -1, 753, 754, 752, -1, 750, 755, 753, -1, 753, 751, 750, -1, 739, 736, 753, -1, 753, 755, 739, -1, 735, 754, 753, -1, 753, 736, 735, -1, 752, 756, 757, -1, 757, 758, 752, -1, 759, 760, 757, -1, 757, 756, 759, -1, 761, 762, 757, -1, 757, 760, 761, -1, 763, 758, 757, -1, 757, 762, 763, -1, 763, 762, 764, -1, 764, 765, 763, -1, 761, 766, 764, -1, 764, 762, 761, -1, 767, 768, 764, -1, 764, 766, 767, -1, 769, 765, 764, -1, 764, 768, 769, -1, 769, 768, 770, -1, 770, 771, 769, -1, 767, 772, 770, -1, 770, 768, 767, -1, 773, 774, 770, -1, 770, 772, 773, -1, 735, 771, 770, -1, 770, 774, 735, -1, 735, 774, 775, -1, 775, 754, 735, -1, 773, 776, 775, -1, 775, 774, 773, -1, 759, 756, 775, -1, 775, 776, 759, -1, 752, 754, 775, -1, 775, 756, 752, -1, 763, 777, 778, -1, 778, 779, 763, -1, 780, 781, 778, -1, 778, 777, 780, -1, 782, 783, 778, -1, 778, 781, 782, -1, 784, 779, 778, -1, 778, 783, 784, -1, 784, 783, 785, -1, 785, 786, 784, -1, 782, 787, 785, -1, 785, 783, 782, -1, 788, 789, 785, -1, 785, 787, 788, -1, 790, 786, 785, -1, 785, 789, 790, -1, 790, 789, 791, -1, 791, 792, 790, -1, 788, 794, 791, -1, 791, 789, 788, -1, 795, 796, 791, -1, 791, 794, 795, -1, 769, 792, 791, -1, 791, 796, 769, -1, 769, 796, 797, -1, 797, 765, 769, -1, 795, 798, 797, -1, 797, 796, 795, -1, 780, 777, 797, -1, 797, 798, 780, -1, 763, 765, 797, -1, 797, 777, 763, -1, 784, 799, 800, -1, 800, 801, 784, -1, 802, 803, 800, -1, 800, 799, 802, -1, 804, 805, 800, -1, 800, 803, 804, -1, 806, 801, 800, -1, 800, 805, 806, -1, 806, 805, 807, -1, 807, 808, 806, -1, 804, 809, 807, -1, 807, 805, 804, -1, 810, 811, 807, -1, 807, 809, 810, -1, 812, 808, 807, -1, 807, 811, 812, -1, 812, 811, 813, -1, 813, 814, 812, -1, 810, 815, 813, -1, 813, 811, 810, -1, 816, 817, 813, -1, 813, 815, 816, -1, 790, 814, 813, -1, 813, 817, 790, -1, 790, 817, 818, -1, 818, 786, 790, -1, 816, 819, 818, -1, 818, 817, 816, -1, 802, 799, 818, -1, 818, 819, 802, -1, 784, 786, 818, -1, 818, 799, 784, -1, 806, 820, 821, -1, 821, 870, 806, -1, 873, 876, 821, -1, 821, 820, 873, -1, 879, 882, 821, -1, 821, 876, 879, -1, 886, 870, 821, -1, 821, 882, 886, -1, 886, 882, 900, -1, 900, 901, 886, -1, 879, 902, 900, -1, 900, 882, 879, -1, 903, 904, 900, -1, 900, 902, 903, -1, 905, 901, 900, -1, 900, 904, 905, -1, 905, 904, 906, -1, 906, 907, 905, -1, 903, 908, 906, -1, 906, 904, 903, -1, 909, 910, 906, -1, 906, 908, 909, -1, 812, 907, 906, -1, 906, 910, 812, -1, 812, 910, 911, -1, 911, 808, 812, -1, 909, 912, 911, -1, 911, 910, 909, -1, 873, 820, 911, -1, 911, 912, 873, -1, 806, 808, 911, -1, 911, 820, 806, -1, 886, 913, 914, -1, 914, 915, 886, -1, 916, 917, 914, -1, 914, 913, 916, -1, 918, 919, 914, -1, 914, 917, 918, -1, 725, 915, 914, -1, 914, 919, 725, -1, 725, 919, 920, -1, 920, 721, 725, -1, 918, 921, 920, -1, 920, 919, 918, -1, 922, 923, 920, -1, 920, 921, 922, -1, 719, 721, 920, -1, 920, 923, 719, -1, 719, 923, 924, -1, 924, 925, 719, -1, 922, 926, 924, -1, 924, 923, 922, -1, 927, 928, 924, -1, 924, 926, 927, -1, 905, 925, 924, -1, 924, 928, 905, -1, 905, 928, 929, -1, 929, 901, 905, -1, 927, 930, 929, -1, 929, 928, 927, -1, 916, 913, 929, -1, 929, 930, 916, -1, 886, 901, 929, -1, 929, 913, 886, -1, 432, 446, 892, -1, 892, 877, 432, -1, 450, 893, 892, -1, 892, 446, 450, -1, 894, 895, 892, -1, 892, 893, 894, -1, 565, 877, 892, -1, 892, 895, 565, -1, 931, 932, 933, -1, 933, 934, 931, -1, 646, 649, 933, -1, 933, 932, 646, -1, 654, 935, 933, -1, 933, 649, 654, -1, 936, 934, 933, -1, 933, 935, 936, -1, 936, 935, 937, -1, 937, 938, 936, -1, 654, 653, 937, -1, 937, 935, 654, -1, 652, 939, 937, -1, 937, 653, 652, -1, 940, 938, 937, -1, 937, 939, 940, -1, 940, 939, 941, -1, 941, 942, 940, -1, 652, 651, 941, -1, 941, 939, 652, -1, 650, 943, 941, -1, 941, 651, 650, -1, 944, 942, 941, -1, 941, 943, 944, -1, 944, 943, 945, -1, 945, 946, 944, -1, 650, 647, 945, -1, 945, 943, 650, -1, 646, 932, 945, -1, 945, 647, 646, -1, 931, 946, 945, -1, 945, 932, 931, -1, 947, 948, 949, -1, 949, 950, 947, -1, 655, 658, 949, -1, 949, 948, 655, -1, 663, 951, 949, -1, 949, 658, 663, -1, 952, 950, 949, -1, 949, 951, 952, -1, 952, 951, 953, -1, 953, 954, 952, -1, 663, 662, 953, -1, 953, 951, 663, -1, 661, 955, 953, -1, 953, 662, 661, -1, 956, 954, 953, -1, 953, 955, 956, -1, 956, 955, 957, -1, 957, 958, 956, -1, 661, 660, 957, -1, 957, 955, 661, -1, 659, 959, 957, -1, 957, 660, 659, -1, 960, 958, 957, -1, 957, 959, 960, -1, 960, 959, 961, -1, 961, 962, 960, -1, 659, 656, 961, -1, 961, 959, 659, -1, 655, 948, 961, -1, 961, 656, 655, -1, 947, 962, 961, -1, 961, 948, 947, -1, 963, 964, 965, -1, 965, 966, 963, -1, 664, 667, 965, -1, 965, 964, 664, -1, 672, 967, 965, -1, 965, 667, 672, -1, 968, 966, 965, -1, 965, 967, 968, -1, 968, 967, 969, -1, 969, 970, 968, -1, 672, 671, 969, -1, 969, 967, 672, -1, 670, 971, 969, -1, 969, 671, 670, -1, 972, 970, 969, -1, 969, 971, 972, -1, 972, 971, 973, -1, 973, 974, 972, -1, 670, 669, 973, -1, 973, 971, 670, -1, 668, 975, 973, -1, 973, 669, 668, -1, 976, 974, 973, -1, 973, 975, 976, -1, 976, 975, 977, -1, 977, 978, 976, -1, 668, 665, 977, -1, 977, 975, 668, -1, 664, 964, 977, -1, 977, 665, 664, -1, 963, 978, 977, -1, 977, 964, 963, -1, 979, 980, 981, -1, 981, 982, 979, -1, 673, 676, 981, -1, 981, 980, 673, -1, 681, 983, 981, -1, 981, 676, 681, -1, 984, 982, 981, -1, 981, 983, 984, -1, 984, 983, 985, -1, 985, 986, 984, -1, 681, 680, 985, -1, 985, 983, 681, -1, 679, 987, 985, -1, 985, 680, 679, -1, 988, 986, 985, -1, 985, 987, 988, -1, 988, 987, 989, -1, 989, 990, 988, -1, 679, 678, 989, -1, 989, 987, 679, -1, 677, 991, 989, -1, 989, 678, 677, -1, 992, 990, 989, -1, 989, 991, 992, -1, 992, 991, 993, -1, 993, 994, 992, -1, 677, 674, 993, -1, 993, 991, 677, -1, 673, 980, 993, -1, 993, 674, 673, -1, 979, 994, 993, -1, 993, 980, 979, -1, 995, 996, 997, -1, 997, 998, 995, -1, 682, 685, 997, -1, 997, 996, 682, -1, 690, 999, 997, -1, 997, 685, 690, -1, 1000, 998, 997, -1, 997, 999, 1000, -1, 1000, 999, 1001, -1, 1001, 1002, 1000, -1, 690, 689, 1001, -1, 1001, 999, 690, -1, 688, 1003, 1001, -1, 1001, 689, 688, -1, 1004, 1002, 1001, -1, 1001, 1003, 1004, -1, 1004, 1003, 1005, -1, 1005, 1006, 1004, -1, 688, 687, 1005, -1, 1005, 1003, 688, -1, 686, 1007, 1005, -1, 1005, 687, 686, -1, 1008, 1006, 1005, -1, 1005, 1007, 1008, -1, 1008, 1007, 1009, -1, 1009, 1010, 1008, -1, 686, 683, 1009, -1, 1009, 1007, 686, -1, 682, 996, 1009, -1, 1009, 683, 682, -1, 995, 1010, 1009, -1, 1009, 996, 995, -1, 1011, 1012, 1013, -1, 1013, 1014, 1011, -1, 691, 694, 1013, -1, 1013, 1012, 691, -1, 699, 1015, 1013, -1, 1013, 694, 699, -1, 1016, 1014, 1013, -1, 1013, 1015, 1016, -1, 1016, 1015, 1017, -1, 1017, 1018, 1016, -1, 699, 698, 1017, -1, 1017, 1015, 699, -1, 697, 1019, 1017, -1, 1017, 698, 697, -1, 1020, 1018, 1017, -1, 1017, 1019, 1020, -1, 1020, 1019, 1021, -1, 1021, 1022, 1020, -1, 697, 696, 1021, -1, 1021, 1019, 697, -1, 695, 1023, 1021, -1, 1021, 696, 695, -1, 1024, 1022, 1021, -1, 1021, 1023, 1024, -1, 1024, 1023, 1025, -1, 1025, 1026, 1024, -1, 695, 692, 1025, -1, 1025, 1023, 695, -1, 691, 1012, 1025, -1, 1025, 692, 691, -1, 1011, 1026, 1025, -1, 1025, 1012, 1011, -1, 1027, 1028, 1029, -1, 1029, 1030, 1027, -1, 700, 703, 1029, -1, 1029, 1028, 700, -1, 710, 1031, 1029, -1, 1029, 703, 710, -1, 1032, 1030, 1029, -1, 1029, 1031, 1032, -1, 1032, 1031, 1033, -1, 1033, 1034, 1032, -1, 710, 709, 1033, -1, 1033, 1031, 710, -1, 706, 1035, 1033, -1, 1033, 709, 706, -1, 1036, 1034, 1033, -1, 1033, 1035, 1036, -1, 1036, 1035, 1037, -1, 1037, 1038, 1036, -1, 706, 705, 1037, -1, 1037, 1035, 706, -1, 704, 1039, 1037, -1, 1037, 705, 704, -1, 1040, 1038, 1037, -1, 1037, 1039, 1040, -1, 1040, 1039, 1041, -1, 1041, 1042, 1040, -1, 704, 701, 1041, -1, 1041, 1039, 704, -1, 700, 1028, 1041, -1, 1041, 701, 700, -1, 1027, 1042, 1041, -1, 1041, 1028, 1027, -1, 717, 716, 1043, -1, 1043, 1044, 717, -1, 715, 1045, 1043, -1, 1043, 716, 715, -1, 931, 934, 1043, -1, 1043, 1045, 931, -1, 936, 1044, 1043, -1, 1043, 934, 936, -1, 723, 722, 1046, -1, 1046, 1047, 723, -1, 717, 1044, 1046, -1, 1046, 722, 717, -1, 936, 938, 1046, -1, 1046, 1044, 936, -1, 940, 1047, 1046, -1, 1046, 938, 940, -1, 729, 728, 1048, -1, 1048, 1049, 729, -1, 723, 1047, 1048, -1, 1048, 728, 723, -1, 940, 942, 1048, -1, 1048, 1047, 940, -1, 944, 1049, 1048, -1, 1048, 942, 944, -1, 715, 734, 1050, -1, 1050, 1045, 715, -1, 729, 1049, 1050, -1, 1050, 734, 729, -1, 944, 946, 1050, -1, 1050, 1049, 944, -1, 931, 1045, 1050, -1, 1050, 946, 931, -1, 741, 740, 1051, -1, 1051, 1052, 741, -1, 739, 1053, 1051, -1, 1051, 740, 739, -1, 947, 950, 1051, -1, 1051, 1053, 947, -1, 952, 1052, 1051, -1, 1051, 950, 952, -1, 745, 744, 1054, -1, 1054, 1055, 745, -1, 741, 1052, 1054, -1, 1054, 744, 741, -1, 952, 954, 1054, -1, 1054, 1052, 952, -1, 956, 1055, 1054, -1, 1054, 954, 956, -1, 750, 749, 1056, -1, 1056, 1057, 750, -1, 745, 1055, 1056, -1, 1056, 749, 745, -1, 956, 958, 1056, -1, 1056, 1055, 956, -1, 960, 1057, 1056, -1, 1056, 958, 960, -1, 739, 755, 1058, -1, 1058, 1053, 739, -1, 750, 1057, 1058, -1, 1058, 755, 750, -1, 960, 962, 1058, -1, 1058, 1057, 960, -1, 947, 1053, 1058, -1, 1058, 962, 947, -1, 761, 760, 1059, -1, 1059, 1060, 761, -1, 759, 1061, 1059, -1, 1059, 760, 759, -1, 963, 966, 1059, -1, 1059, 1061, 963, -1, 968, 1060, 1059, -1, 1059, 966, 968, -1, 767, 766, 1062, -1, 1062, 1063, 767, -1, 761, 1060, 1062, -1, 1062, 766, 761, -1, 968, 970, 1062, -1, 1062, 1060, 968, -1, 972, 1063, 1062, -1, 1062, 970, 972, -1, 773, 772, 1064, -1, 1064, 1065, 773, -1, 767, 1063, 1064, -1, 1064, 772, 767, -1, 972, 974, 1064, -1, 1064, 1063, 972, -1, 976, 1065, 1064, -1, 1064, 974, 976, -1, 759, 776, 1066, -1, 1066, 1061, 759, -1, 773, 1065, 1066, -1, 1066, 776, 773, -1, 976, 978, 1066, -1, 1066, 1065, 976, -1, 963, 1061, 1066, -1, 1066, 978, 963, -1, 782, 781, 1067, -1, 1067, 1068, 782, -1, 780, 1069, 1067, -1, 1067, 781, 780, -1, 979, 982, 1067, -1, 1067, 1069, 979, -1, 984, 1068, 1067, -1, 1067, 982, 984, -1, 788, 787, 1070, -1, 1070, 1071, 788, -1, 782, 1068, 1070, -1, 1070, 787, 782, -1, 984, 986, 1070, -1, 1070, 1068, 984, -1, 988, 1071, 1070, -1, 1070, 986, 988, -1, 795, 794, 1072, -1, 1072, 1073, 795, -1, 788, 1071, 1072, -1, 1072, 794, 788, -1, 988, 990, 1072, -1, 1072, 1071, 988, -1, 992, 1073, 1072, -1, 1072, 990, 992, -1, 780, 798, 1074, -1, 1074, 1069, 780, -1, 795, 1073, 1074, -1, 1074, 798, 795, -1, 992, 994, 1074, -1, 1074, 1073, 992, -1, 979, 1069, 1074, -1, 1074, 994, 979, -1, 804, 803, 1075, -1, 1075, 1076, 804, -1, 802, 1077, 1075, -1, 1075, 803, 802, -1, 995, 998, 1075, -1, 1075, 1077, 995, -1, 1000, 1076, 1075, -1, 1075, 998, 1000, -1, 810, 809, 1078, -1, 1078, 1079, 810, -1, 804, 1076, 1078, -1, 1078, 809, 804, -1, 1000, 1002, 1078, -1, 1078, 1076, 1000, -1, 1004, 1079, 1078, -1, 1078, 1002, 1004, -1, 816, 815, 1080, -1, 1080, 1081, 816, -1, 810, 1079, 1080, -1, 1080, 815, 810, -1, 1004, 1006, 1080, -1, 1080, 1079, 1004, -1, 1008, 1081, 1080, -1, 1080, 1006, 1008, -1, 802, 819, 1082, -1, 1082, 1077, 802, -1, 816, 1081, 1082, -1, 1082, 819, 816, -1, 1008, 1010, 1082, -1, 1082, 1081, 1008, -1, 995, 1077, 1082, -1, 1082, 1010, 995, -1, 879, 876, 1083, -1, 1083, 1084, 879, -1, 873, 1085, 1083, -1, 1083, 876, 873, -1, 1011, 1014, 1083, -1, 1083, 1085, 1011, -1, 1016, 1084, 1083, -1, 1083, 1014, 1016, -1, 903, 902, 1086, -1, 1086, 1087, 903, -1, 879, 1084, 1086, -1, 1086, 902, 879, -1, 1016, 1018, 1086, -1, 1086, 1084, 1016, -1, 1020, 1087, 1086, -1, 1086, 1018, 1020, -1, 909, 908, 1088, -1, 1088, 1089, 909, -1, 903, 1087, 1088, -1, 1088, 908, 903, -1, 1020, 1022, 1088, -1, 1088, 1087, 1020, -1, 1024, 1089, 1088, -1, 1088, 1022, 1024, -1, 873, 912, 1090, -1, 1090, 1085, 873, -1, 909, 1089, 1090, -1, 1090, 912, 909, -1, 1024, 1026, 1090, -1, 1090, 1089, 1024, -1, 1011, 1085, 1090, -1, 1090, 1026, 1011, -1, 918, 917, 1091, -1, 1091, 1092, 918, -1, 916, 1093, 1091, -1, 1091, 917, 916, -1, 1027, 1030, 1091, -1, 1091, 1093, 1027, -1, 1032, 1092, 1091, -1, 1091, 1030, 1032, -1, 922, 921, 1094, -1, 1094, 1095, 922, -1, 918, 1092, 1094, -1, 1094, 921, 918, -1, 1032, 1034, 1094, -1, 1094, 1092, 1032, -1, 1036, 1095, 1094, -1, 1094, 1034, 1036, -1, 927, 926, 1096, -1, 1096, 1097, 927, -1, 922, 1095, 1096, -1, 1096, 926, 922, -1, 1036, 1038, 1096, -1, 1096, 1095, 1036, -1, 1040, 1097, 1096, -1, 1096, 1038, 1040, -1, 916, 930, 1098, -1, 1098, 1093, 916, -1, 927, 1097, 1098, -1, 1098, 930, 927, -1, 1040, 1042, 1098, -1, 1098, 1097, 1040, -1, 1027, 1093, 1098, -1, 1098, 1042, 1027, -1, 894, 893, 896, -1, 896, 897, 894, -1, 450, 456, 896, -1, 896, 893, 450, -1, 455, 898, 896, -1, 896, 456, 455, -1, 899, 897, 896, -1, 896, 898, 899, -1},
                                                            CoordIndex: []int32{0, 521, 265, -1, 265, 524, 0, -1, 1, 525, 265, -1, 265, 521, 1, -1, 4, 523, 265, -1, 265, 525, 4, -1, 3, 524, 265, -1, 265, 523, 3, -1, 2, 522, 266, -1, 266, 526, 2, -1, 23, 558, 266, -1, 266, 522, 23, -1, 24, 551, 266, -1, 266, 558, 24, -1, 5, 526, 266, -1, 266, 551, 5, -1, 3, 523, 267, -1, 267, 528, 3, -1, 4, 529, 267, -1, 267, 523, 4, -1, 7, 527, 267, -1, 267, 529, 7, -1, 6, 528, 267, -1, 267, 527, 6, -1, 5, 551, 268, -1, 268, 530, 5, -1, 24, 559, 268, -1, 268, 551, 24, -1, 25, 552, 268, -1, 268, 559, 25, -1, 8, 530, 268, -1, 268, 552, 8, -1, 6, 527, 269, -1, 269, 532, 6, -1, 7, 533, 269, -1, 269, 527, 7, -1, 10, 531, 269, -1, 269, 533, 10, -1, 9, 532, 269, -1, 269, 531, 9, -1, 8, 552, 270, -1, 270, 534, 8, -1, 25, 560, 270, -1, 270, 552, 25, -1, 26, 553, 270, -1, 270, 560, 26, -1, 11, 534, 270, -1, 270, 553, 11, -1, 9, 531, 271, -1, 271, 536, 9, -1, 10, 537, 271, -1, 271, 531, 10, -1, 13, 535, 271, -1, 271, 537, 13, -1, 12, 536, 271, -1, 271, 535, 12, -1, 11, 553, 272, -1, 272, 538, 11, -1, 26, 561, 272, -1, 272, 553, 26, -1, 27, 554, 272, -1, 272, 561, 27, -1, 14, 538, 272, -1, 272, 554, 14, -1, 12, 535, 273, -1, 273, 540, 12, -1, 13, 541, 273, -1, 273, 535, 13, -1, 16, 539, 273, -1, 273, 541, 16, -1, 15, 540, 273, -1, 273, 539, 15, -1, 14, 554, 274, -1, 274, 542, 14, -1, 27, 562, 274, -1, 274, 554, 27, -1, 28, 555, 274, -1, 274, 562, 28, -1, 17, 542, 274, -1, 274, 555, 17, -1, 15, 539, 275, -1, 275, 544, 15, -1, 16, 545, 275, -1, 275, 539, 16, -1, 19, 543, 275, -1, 275, 545, 19, -1, 18, 544, 275, -1, 275, 543, 18, -1, 17, 555, 276, -1, 276, 546, 17, -1, 28, 563, 276, -1, 276, 555, 28, -1, 29, 556, 276, -1, 276, 563, 29, -1, 20, 546, 276, -1, 276, 556, 20, -1, 18, 543, 277, -1, 277, 548, 18, -1, 19, 549, 277, -1, 277, 543, 19, -1, 21, 547, 277, -1, 277, 549, 21, -1, 160, 548, 277, -1, 277, 547, 160, -1, 20, 556, 278, -1, 278, 550, 20, -1, 29, 564, 278, -1, 278, 556, 29, -1, 30, 557, 278, -1, 278, 564, 30, -1, 22, 550, 278, -1, 278, 557, 22, -1, 2, 526, 279, -1, 279, 580, 2, -1, 5, 581, 279, -1, 279, 526, 5, -1, 33, 565, 279, -1, 279, 581, 33, -1, 32, 580, 279, -1, 279, 565, 32, -1, 5, 530, 280, -1, 280, 581, 5, -1, 8, 582, 280, -1, 280, 530, 8, -1, 34, 566, 280, -1, 280, 582, 34, -1, 33, 581, 280, -1, 280, 566, 33, -1, 8, 534, 281, -1, 281, 582, 8, -1, 11, 583, 281, -1, 281, 534, 11, -1, 35, 567, 281, -1, 281, 583, 35, -1, 34, 582, 281, -1, 281, 567, 34, -1, 11, 538, 282, -1, 282, 583, 11, -1, 14, 584, 282, -1, 282, 538, 14, -1, 36, 568, 282, -1, 282, 584, 36, -1, 35, 583, 282, -1, 282, 568, 35, -1, 14, 542, 283, -1, 283, 584, 14, -1, 17, 585, 283, -1, 283, 542, 17, -1, 37, 569, 283, -1, 283, 585, 37, -1, 36, 584, 283, -1, 283, 569, 36, -1, 17, 546, 284, -1, 284, 585, 17, -1, 20, 586, 284, -1, 284, 546, 20, -1, 38, 570, 284, -1, 284, 586, 38, -1, 37, 585, 284, -1, 284, 570, 37, -1, 20, 550, 285, -1, 285, 586, 20, -1, 22, 587, 285, -1, 285, 550, 22, -1, 168, 571, 285, -1, 285, 587, 168, -1, 38, 586, 285, -1, 285, 571, 38, -1, 21, 549, 286, -1, 286, 839, 21, -1, 19, 588, 286, -1, 286, 549, 19, -1, 39, 572, 286, -1, 286, 588, 39, -1, 170, 839, 286, -1, 286, 572, 170, -1, 19, 545, 287, -1, 287, 588, 19, -1, 16, 589, 287, -1, 287, 545, 16, -1, 40, 573, 287, -1, 287, 589, 40, -1, 39, 588, 287, -1, 287, 573, 39, -1, 16, 541, 288, -1, 288, 589, 16, -1, 13, 590, 288, -1, 288, 541, 13, -1, 41, 574, 288, -1, 288, 590, 41, -1, 40, 589, 288, -1, 288, 574, 40, -1, 13, 537, 289, -1, 289, 590, 13, -1, 10, 591, 289, -1, 289, 537, 10, -1, 42, 575, 289, -1, 289, 591, 42, -1, 41, 590, 289, -1, 289, 575, 41, -1, 10, 533, 290, -1, 290, 591, 10, -1, 7, 592, 290, -1, 290, 533, 7, -1, 43, 576, 290, -1, 290, 592, 43, -1, 42, 591, 290, -1, 290, 576, 42, -1, 7, 529, 291, -1, 291, 592, 7, -1, 4, 593, 291, -1, 291, 529, 4, -1, 44, 577, 291, -1, 291, 593, 44, -1, 43, 592, 291, -1, 291, 577, 43, -1, 4, 525, 292, -1, 292, 593, 4, -1, 1, 579, 292, -1, 292, 525, 1, -1, 31, 578, 292, -1, 292, 579, 31, -1, 44, 593, 292, -1, 292, 578, 44, -1, 24, 558, 293, -1, 293, 595, 24, -1, 23, 594, 293, -1, 293, 558, 23, -1, 45, 595, 293, -1, 293, 594, 45, -1, 25, 559, 294, -1, 294, 596, 25, -1, 24, 595, 294, -1, 294, 559, 24, -1, 45, 596, 294, -1, 294, 595, 45, -1, 26, 560, 295, -1, 295, 597, 26, -1, 25, 596, 295, -1, 295, 560, 25, -1, 45, 597, 295, -1, 295, 596, 45, -1, 27, 561, 296, -1, 296, 598, 27, -1, 26, 597, 296, -1, 296, 561, 26, -1, 45, 598, 296, -1, 296, 597, 45, -1, 28, 562, 297, -1, 297, 599, 28, -1, 27, 598, 297, -1, 297, 562, 27, -1, 45, 599, 297, -1, 297, 598, 45, -1, 29, 563, 298, -1, 298, 600, 29, -1, 28, 599, 298, -1, 298, 563, 28, -1, 45, 600, 298, -1, 298, 599, 45, -1, 30, 564, 299, -1, 299, 601, 30, -1, 29, 600, 299, -1, 299, 564, 29, -1, 45, 601, 299, -1, 299, 600, 45, -1, 75, 667, 300, -1, 300, 670, 75, -1, 76, 668, 300, -1, 300, 667, 76, -1, 77, 669, 300, -1, 300, 668, 77, -1, 78, 670, 300, -1, 300, 669, 78, -1, 79, 675, 301, -1, 301, 678, 79, -1, 80, 676, 301, -1, 301, 675, 80, -1, 81, 677, 301, -1, 301, 676, 81, -1, 82, 678, 301, -1, 301, 677, 82, -1, 83, 683, 302, -1, 302, 686, 83, -1, 84, 684, 302, -1, 302, 683, 84, -1, 85, 685, 302, -1, 302, 684, 85, -1, 86, 686, 302, -1, 302, 685, 86, -1, 87, 691, 303, -1, 303, 694, 87, -1, 88, 692, 303, -1, 303, 691, 88, -1, 89, 693, 303, -1, 303, 692, 89, -1, 90, 694, 303, -1, 303, 693, 90, -1, 91, 699, 304, -1, 304, 702, 91, -1, 92, 700, 304, -1, 304, 699, 92, -1, 93, 701, 304, -1, 304, 700, 93, -1, 94, 702, 304, -1, 304, 701, 94, -1, 95, 707, 305, -1, 305, 710, 95, -1, 96, 708, 305, -1, 305, 707, 96, -1, 97, 709, 305, -1, 305, 708, 97, -1, 98, 710, 305, -1, 305, 709, 98, -1, 99, 715, 306, -1, 306, 718, 99, -1, 100, 716, 306, -1, 306, 715, 100, -1, 101, 717, 306, -1, 306, 716, 101, -1, 102, 718, 306, -1, 306, 717, 102, -1, 32, 565, 307, -1, 307, 609, 32, -1, 33, 610, 307, -1, 307, 565, 33, -1, 104, 752, 307, -1, 307, 610, 104, -1, 103, 609, 307, -1, 307, 752, 103, -1, 33, 603, 308, -1, 308, 610, 33, -1, 44, 611, 308, -1, 308, 603, 44, -1, 105, 753, 308, -1, 308, 611, 105, -1, 104, 610, 308, -1, 308, 753, 104, -1, 44, 578, 309, -1, 309, 611, 44, -1, 31, 612, 309, -1, 309, 578, 31, -1, 106, 754, 309, -1, 309, 612, 106, -1, 105, 611, 309, -1, 309, 754, 105, -1, 31, 602, 310, -1, 310, 612, 31, -1, 32, 609, 310, -1, 310, 602, 32, -1, 103, 755, 310, -1, 310, 609, 103, -1, 106, 612, 310, -1, 310, 755, 106, -1, 38, 571, 311, -1, 311, 617, 38, -1, 168, 618, 311, -1, 311, 571, 168, -1, 108, 756, 311, -1, 311, 618, 108, -1, 107, 617, 311, -1, 311, 756, 107, -1, 168, 900, 312, -1, 312, 618, 168, -1, 170, 619, 312, -1, 312, 900, 170, -1, 109, 757, 312, -1, 312, 619, 109, -1, 108, 618, 312, -1, 312, 757, 108, -1, 170, 572, 313, -1, 313, 619, 170, -1, 39, 620, 313, -1, 313, 572, 39, -1, 110, 758, 313, -1, 313, 620, 110, -1, 109, 619, 313, -1, 313, 758, 109, -1, 39, 604, 314, -1, 314, 620, 39, -1, 38, 617, 314, -1, 314, 604, 38, -1, 107, 759, 314, -1, 314, 617, 107, -1, 110, 620, 314, -1, 314, 759, 110, -1, 39, 573, 315, -1, 315, 625, 39, -1, 40, 626, 315, -1, 315, 573, 40, -1, 112, 760, 315, -1, 315, 626, 112, -1, 111, 625, 315, -1, 315, 760, 111, -1, 40, 605, 316, -1, 316, 626, 40, -1, 37, 627, 316, -1, 316, 605, 37, -1, 113, 761, 316, -1, 316, 627, 113, -1, 112, 626, 316, -1, 316, 761, 112, -1, 37, 570, 317, -1, 317, 627, 37, -1, 38, 628, 317, -1, 317, 570, 38, -1, 114, 762, 317, -1, 317, 628, 114, -1, 113, 627, 317, -1, 317, 762, 113, -1, 38, 604, 318, -1, 318, 628, 38, -1, 39, 625, 318, -1, 318, 604, 39, -1, 111, 763, 318, -1, 318, 625, 111, -1, 114, 628, 318, -1, 318, 763, 114, -1, 40, 574, 319, -1, 319, 633, 40, -1, 41, 634, 319, -1, 319, 574, 41, -1, 116, 764, 319, -1, 319, 634, 116, -1, 115, 633, 319, -1, 319, 764, 115, -1, 41, 606, 320, -1, 320, 634, 41, -1, 36, 635, 320, -1, 320, 606, 36, -1, 117, 765, 320, -1, 320, 635, 117, -1, 116, 634, 320, -1, 320, 765, 116, -1, 36, 569, 321, -1, 321, 635, 36, -1, 37, 636, 321, -1, 321, 569, 37, -1, 118, 766, 321, -1, 321, 636, 118, -1, 117, 635, 321, -1, 321, 766, 117, -1, 37, 605, 322, -1, 322, 636, 37, -1, 40, 633, 322, -1, 322, 605, 40, -1, 115, 767, 322, -1, 322, 633, 115, -1, 118, 636, 322, -1, 322, 767, 118, -1, 41, 575, 323, -1, 323, 641, 41, -1, 42, 642, 323, -1, 323, 575, 42, -1, 120, 768, 323, -1, 323, 642, 120, -1, 119, 641, 323, -1, 323, 768, 119, -1, 42, 607, 324, -1, 324, 642, 42, -1, 35, 643, 324, -1, 324, 607, 35, -1, 121, 769, 324, -1, 324, 643, 121, -1, 120, 642, 324, -1, 324, 769, 120, -1, 35, 568, 325, -1, 325, 643, 35, -1, 36, 644, 325, -1, 325, 568, 36, -1, 122, 770, 325, -1, 325, 644, 122, -1, 121, 643, 325, -1, 325, 770, 121, -1, 36, 606, 326, -1, 326, 644, 36, -1, 41, 641, 326, -1, 326, 606, 41, -1, 119, 771, 326, -1, 326, 641, 119, -1, 122, 644, 326, -1, 326, 771, 122, -1, 42, 576, 327, -1, 327, 649, 42, -1, 43, 650, 327, -1, 327, 576, 43, -1, 124, 772, 327, -1, 327, 650, 124, -1, 123, 649, 327, -1, 327, 772, 123, -1, 43, 608, 328, -1, 328, 650, 43, -1, 34, 651, 328, -1, 328, 608, 34, -1, 125, 773, 328, -1, 328, 651, 125, -1, 124, 650, 328, -1, 328, 773, 124, -1, 34, 567, 329, -1, 329, 651, 34, -1, 35, 652, 329, -1, 329, 567, 35, -1, 126, 774, 329, -1, 329, 652, 126, -1, 125, 651, 329, -1, 329, 774, 125, -1, 35, 607, 330, -1, 330, 652, 35, -1, 42, 649, 330, -1, 330, 607, 42, -1, 123, 775, 330, -1, 330, 649, 123, -1, 126, 652, 330, -1, 330, 775, 126, -1, 43, 577, 331, -1, 331, 657, 43, -1, 44, 658, 331, -1, 331, 577, 44, -1, 128, 776, 331, -1, 331, 658, 128, -1, 127, 657, 331, -1, 331, 776, 127, -1, 44, 603, 332, -1, 332, 658, 44, -1, 33, 659, 332, -1, 332, 603, 33, -1, 129, 777, 332, -1, 332, 659, 129, -1, 128, 658, 332, -1, 332, 777, 128, -1, 33, 566, 333, -1, 333, 659, 33, -1, 34, 660, 333, -1, 333, 566, 34, -1, 130, 778, 333, -1, 333, 660, 130, -1, 129, 659, 333, -1, 333, 778, 129, -1, 34, 608, 334, -1, 334, 660, 34, -1, 43, 657, 334, -1, 334, 608, 43, -1, 127, 779, 334, -1, 334, 657, 127, -1, 130, 660, 334, -1, 334, 779, 130, -1, 45, 594, 335, -1, 335, 953, 45, -1, 23, 666, 335, -1, 335, 594, 23, -1, 131, 780, 335, -1, 335, 666, 131, -1, 234, 953, 335, -1, 335, 780, 234, -1, 46, 613, 336, -1, 336, 671, 46, -1, 47, 672, 336, -1, 336, 613, 47, -1, 76, 667, 336, -1, 336, 672, 76, -1, 75, 671, 336, -1, 336, 667, 75, -1, 47, 614, 337, -1, 337, 672, 47, -1, 48, 673, 337, -1, 337, 614, 48, -1, 77, 668, 337, -1, 337, 673, 77, -1, 76, 672, 337, -1, 337, 668, 76, -1, 48, 615, 338, -1, 338, 673, 48, -1, 49, 674, 338, -1, 338, 615, 49, -1, 78, 669, 338, -1, 338, 674, 78, -1, 77, 673, 338, -1, 338, 669, 77, -1, 49, 616, 339, -1, 339, 674, 49, -1, 46, 671, 339, -1, 339, 616, 46, -1, 75, 670, 339, -1, 339, 671, 75, -1, 78, 674, 339, -1, 339, 670, 78, -1, 50, 621, 340, -1, 340, 679, 50, -1, 51, 680, 340, -1, 340, 621, 51, -1, 80, 675, 340, -1, 340, 680, 80, -1, 79, 679, 340, -1, 340, 675, 79, -1, 51, 622, 341, -1, 341, 680, 51, -1, 52, 681, 341, -1, 341, 622, 52, -1, 81, 676, 341, -1, 341, 681, 81, -1, 80, 680, 341, -1, 341, 676, 80, -1, 52, 623, 342, -1, 342, 681, 52, -1, 53, 682, 342, -1, 342, 623, 53, -1, 82, 677, 342, -1, 342, 682, 82, -1, 81, 681, 342, -1, 342, 677, 81, -1, 53, 624, 343, -1, 343, 682, 53, -1, 50, 679, 343, -1, 343, 624, 50, -1, 79, 678, 343, -1, 343, 679, 79, -1, 82, 682, 343, -1, 343, 678, 82, -1, 54, 629, 344, -1, 344, 687, 54, -1, 55, 688, 344, -1, 344, 629, 55, -1, 84, 683, 344, -1, 344, 688, 84, -1, 83, 687, 344, -1, 344, 683, 83, -1, 55, 630, 345, -1, 345, 688, 55, -1, 56, 689, 345, -1, 345, 630, 56, -1, 85, 684, 345, -1, 345, 689, 85, -1, 84, 688, 345, -1, 345, 684, 84, -1, 56, 631, 346, -1, 346, 689, 56, -1, 57, 690, 346, -1, 346, 631, 57, -1, 86, 685, 346, -1, 346, 690, 86, -1, 85, 689, 346, -1, 346, 685, 85, -1, 57, 632, 347, -1, 347, 690, 57, -1, 54, 687, 347, -1, 347, 632, 54, -1, 83, 686, 347, -1, 347, 687, 83, -1, 86, 690, 347, -1, 347, 686, 86, -1, 58, 637, 348, -1, 348, 695, 58, -1, 59, 696, 348, -1, 348, 637, 59, -1, 88, 691, 348, -1, 348, 696, 88, -1, 87, 695, 348, -1, 348, 691, 87, -1, 59, 638, 349, -1, 349, 696, 59, -1, 60, 697, 349, -1, 349, 638, 60, -1, 89, 692, 349, -1, 349, 697, 89, -1, 88, 696, 349, -1, 349, 692, 88, -1, 60, 639, 350, -1, 350, 697, 60, -1, 61, 698, 350, -1, 350, 639, 61, -1, 90, 693, 350, -1, 350, 698, 90, -1, 89, 697, 350, -1, 350, 693, 89, -1, 61, 640, 351, -1, 351, 698, 61, -1, 58, 695, 351, -1, 351, 640, 58, -1, 87, 694, 351, -1, 351, 695, 87, -1, 90, 698, 351, -1, 351, 694, 90, -1, 62, 645, 352, -1, 352, 703, 62, -1, 63, 704, 352, -1, 352, 645, 63, -1, 92, 699, 352, -1, 352, 704, 92, -1, 91, 703, 352, -1, 352, 699, 91, -1, 63, 646, 353, -1, 353, 704, 63, -1, 64, 705, 353, -1, 353, 646, 64, -1, 93, 700, 353, -1, 353, 705, 93, -1, 92, 704, 353, -1, 353, 700, 92, -1, 64, 647, 354, -1, 354, 705, 64, -1, 65, 706, 354, -1, 354, 647, 65, -1, 94, 701, 354, -1, 354, 706, 94, -1, 93, 705, 354, -1, 354, 701, 93, -1, 65, 648, 355, -1, 355, 706, 65, -1, 62, 703, 355, -1, 355, 648, 62, -1, 91, 702, 355, -1, 355, 703, 91, -1, 94, 706, 355, -1, 355, 702, 94, -1, 66, 653, 356, -1, 356, 711, 66, -1, 67, 712, 356, -1, 356, 653, 67, -1, 96, 707, 356, -1, 356, 712, 96, -1, 95, 711, 356, -1, 356, 707, 95, -1, 67, 654, 357, -1, 357, 712, 67, -1, 68, 713, 357, -1, 357, 654, 68, -1, 97, 708, 357, -1, 357, 713, 97, -1, 96, 712, 357, -1, 357, 708, 96, -1, 68, 655, 358, -1, 358, 713, 68, -1, 69, 714, 358, -1, 358, 655, 69, -1, 98, 709, 358, -1, 358, 714, 98, -1, 97, 713, 358, -1, 358, 709, 97, -1, 69, 656, 359, -1, 359, 714, 69, -1, 66, 711, 359, -1, 359, 656, 66, -1, 95, 710, 359, -1, 359, 711, 95, -1, 98, 714, 359, -1, 359, 710, 98, -1, 70, 661, 360, -1, 360, 719, 70, -1, 71, 720, 360, -1, 360, 661, 71, -1, 100, 715, 360, -1, 360, 720, 100, -1, 99, 719, 360, -1, 360, 715, 99, -1, 71, 662, 361, -1, 361, 720, 71, -1, 72, 721, 361, -1, 361, 662, 72, -1, 101, 716, 361, -1, 361, 721, 101, -1, 100, 720, 361, -1, 361, 716, 100, -1, 72, 663, 362, -1, 362, 721, 72, -1, 73, 722, 362, -1, 362, 663, 73, -1, 102, 717, 362, -1, 362, 722, 102, -1, 101, 721, 362, -1, 362, 717, 101, -1, 73, 664, 363, -1, 363, 722, 73, -1, 70, 719, 363, -1, 363, 664, 70, -1, 99, 718, 363, -1, 363, 719, 99, -1, 102, 722, 363, -1, 363, 718, 102, -1, 104, 724, 364, -1, 364, 752, 104, -1, 47, 613, 364, -1, 364, 724, 47, -1, 46, 723, 364, -1, 364, 613, 46, -1, 103, 752, 364, -1, 364, 723, 103, -1, 105, 725, 365, -1, 365, 753, 105, -1, 48, 614, 365, -1, 365, 725, 48, -1, 47, 724, 365, -1, 365, 614, 47, -1, 104, 753, 365, -1, 365, 724, 104, -1, 106, 726, 366, -1, 366, 754, 106, -1, 49, 615, 366, -1, 366, 726, 49, -1, 48, 725, 366, -1, 366, 615, 48, -1, 105, 754, 366, -1, 366, 725, 105, -1, 103, 723, 367, -1, 367, 755, 103, -1, 46, 616, 367, -1, 367, 723, 46, -1, 49, 726, 367, -1, 367, 616, 49, -1, 106, 755, 367, -1, 367, 726, 106, -1, 108, 728, 368, -1, 368, 756, 108, -1, 51, 621, 368, -1, 368, 728, 51, -1, 50, 727, 368, -1, 368, 621, 50, -1, 107, 756, 368, -1, 368, 727, 107, -1, 109, 729, 369, -1, 369, 757, 109, -1, 52, 622, 369, -1, 369, 729, 52, -1, 51, 728, 369, -1, 369, 622, 51, -1, 108, 757, 369, -1, 369, 728, 108, -1, 110, 730, 370, -1, 370, 758, 110, -1, 53, 623, 370, -1, 370, 730, 53, -1, 52, 729, 370, -1, 370, 623, 52, -1, 109, 758, 370, -1, 370, 729, 109, -1, 107, 727, 371, -1, 371, 759, 107, -1, 50, 624, 371, -1, 371, 727, 50, -1, 53, 730, 371, -1, 371, 624, 53, -1, 110, 759, 371, -1, 371, 730, 110, -1, 112, 732, 372, -1, 372, 760, 112, -1, 55, 629, 372, -1, 372, 732, 55, -1, 54, 731, 372, -1, 372, 629, 54, -1, 111, 760, 372, -1, 372, 731, 111, -1, 113, 733, 373, -1, 373, 761, 113, -1, 56, 630, 373, -1, 373, 733, 56, -1, 55, 732, 373, -1, 373, 630, 55, -1, 112, 761, 373, -1, 373, 732, 112, -1, 114, 734, 374, -1, 374, 762, 114, -1, 57, 631, 374, -1, 374, 734, 57, -1, 56, 733, 374, -1, 374, 631, 56, -1, 113, 762, 374, -1, 374, 733, 113, -1, 111, 731, 375, -1, 375, 763, 111, -1, 54, 632, 375, -1, 375, 731, 54, -1, 57, 734, 375, -1, 375, 632, 57, -1, 114, 763, 375, -1, 375, 734, 114, -1, 116, 736, 376, -1, 376, 764, 116, -1, 59, 637, 376, -1, 376, 736, 59, -1, 58, 735, 376, -1, 376, 637, 58, -1, 115, 764, 376, -1, 376, 735, 115, -1, 117, 737, 377, -1, 377, 765, 117, -1, 60, 638, 377, -1, 377, 737, 60, -1, 59, 736, 377, -1, 377, 638, 59, -1, 116, 765, 377, -1, 377, 736, 116, -1, 118, 738, 378, -1, 378, 766, 118, -1, 61, 639, 378, -1, 378, 738, 61, -1, 60, 737, 378, -1, 378, 639, 60, -1, 117, 766, 378, -1, 378, 737, 117, -1, 115, 735, 379, -1, 379, 767, 115, -1, 58, 640, 379, -1, 379, 735, 58, -1, 61, 738, 379, -1, 379, 640, 61, -1, 118, 767, 379, -1, 379, 738, 118, -1, 120, 740, 380, -1, 380, 768, 120, -1, 63, 645, 380, -1, 380, 740, 63, -1, 62, 739, 380, -1, 380, 645, 62, -1, 119, 768, 380, -1, 380, 739, 119, -1, 121, 741, 381, -1, 381, 769, 121, -1, 64, 646, 381, -1, 381, 741, 64, -1, 63, 740, 381, -1, 381, 646, 63, -1, 120, 769, 381, -1, 381, 740, 120, -1, 122, 742, 382, -1, 382, 770, 122, -1, 65, 647, 382, -1, 382, 742, 65, -1, 64, 741, 382, -1, 382, 647, 64, -1, 121, 770, 382, -1, 382, 741, 121, -1, 119, 739, 383, -1, 383, 771, 119, -1, 62, 648, 383, -1, 383, 739, 62, -1, 65, 742, 383, -1, 383, 648, 65, -1, 122, 771, 383, -1, 383, 742, 122, -1, 124, 744, 384, -1, 384, 772, 124, -1, 67, 653, 384, -1, 384, 744, 67, -1, 66, 743, 384, -1, 384, 653, 66, -1, 123, 772, 384, -1, 384, 743, 123, -1, 125, 745, 385, -1, 385, 773, 125, -1, 68, 654, 385, -1, 385, 745, 68, -1, 67, 744, 385, -1, 385, 654, 67, -1, 124, 773, 385, -1, 385, 744, 124, -1, 126, 746, 386, -1, 386, 774, 126, -1, 69, 655, 386, -1, 386, 746, 69, -1, 68, 745, 386, -1, 386, 655, 68, -1, 125, 774, 386, -1, 386, 745, 125, -1, 123, 743, 387, -1, 387, 775, 123, -1, 66, 656, 387, -1, 387, 743, 66, -1, 69, 746, 387, -1, 387, 656, 69, -1, 126, 775, 387, -1, 387, 746, 126, -1, 128, 748, 388, -1, 388, 776, 128, -1, 71, 661, 388, -1, 388, 748, 71, -1, 70, 747, 388, -1, 388, 661, 70, -1, 127, 776, 388, -1, 388, 747, 127, -1, 129, 749, 389, -1, 389, 777, 129, -1, 72, 662, 389, -1, 389, 749, 72, -1, 71, 748, 389, -1, 389, 662, 71, -1, 128, 777, 389, -1, 389, 748, 128, -1, 130, 750, 390, -1, 390, 778, 130, -1, 73, 663, 390, -1, 390, 750, 73, -1, 72, 749, 390, -1, 390, 663, 72, -1, 129, 778, 390, -1, 390, 749, 129, -1, 127, 747, 391, -1, 391, 779, 127, -1, 70, 664, 391, -1, 391, 747, 70, -1, 73, 750, 391, -1, 391, 664, 73, -1, 130, 779, 391, -1, 391, 750, 130, -1, 131, 751, 392, -1, 392, 780, 131, -1, 74, 665, 392, -1, 392, 751, 74, -1, 264, 1040, 392, -1, 392, 665, 264, -1, 234, 780, 392, -1, 392, 1040, 234, -1, 132, 784, 393, -1, 393, 781, 132, -1, 135, 783, 393, -1, 393, 784, 135, -1, 134, 782, 393, -1, 393, 783, 134, -1, 133, 781, 393, -1, 393, 782, 133, -1, 136, 788, 394, -1, 394, 785, 136, -1, 139, 787, 394, -1, 394, 788, 139, -1, 138, 786, 394, -1, 394, 787, 138, -1, 137, 785, 394, -1, 394, 786, 137, -1, 135, 791, 395, -1, 395, 783, 135, -1, 141, 790, 395, -1, 395, 791, 141, -1, 140, 789, 395, -1, 395, 790, 140, -1, 134, 783, 395, -1, 395, 789, 134, -1, 139, 794, 396, -1, 396, 787, 139, -1, 143, 793, 396, -1, 396, 794, 143, -1, 142, 792, 396, -1, 396, 793, 142, -1, 138, 787, 396, -1, 396, 792, 138, -1, 141, 797, 397, -1, 397, 790, 141, -1, 145, 796, 397, -1, 397, 797, 145, -1, 144, 795, 397, -1, 397, 796, 144, -1, 140, 790, 397, -1, 397, 795, 140, -1, 143, 800, 398, -1, 398, 793, 143, -1, 147, 799, 398, -1, 398, 800, 147, -1, 146, 798, 398, -1, 398, 799, 146, -1, 142, 793, 398, -1, 398, 798, 142, -1, 145, 803, 399, -1, 399, 796, 145, -1, 149, 802, 399, -1, 399, 803, 149, -1, 148, 801, 399, -1, 399, 802, 148, -1, 144, 796, 399, -1, 399, 801, 144, -1, 147, 806, 400, -1, 400, 799, 147, -1, 151, 805, 400, -1, 400, 806, 151, -1, 150, 804, 400, -1, 400, 805, 150, -1, 146, 799, 400, -1, 400, 804, 146, -1, 149, 809, 401, -1, 401, 802, 149, -1, 153, 808, 401, -1, 401, 809, 153, -1, 152, 807, 401, -1, 401, 808, 152, -1, 148, 802, 401, -1, 401, 807, 148, -1, 151, 812, 402, -1, 402, 805, 151, -1, 155, 811, 402, -1, 402, 812, 155, -1, 154, 810, 402, -1, 402, 811, 154, -1, 150, 805, 402, -1, 402, 810, 150, -1, 153, 815, 403, -1, 403, 808, 153, -1, 157, 814, 403, -1, 403, 815, 157, -1, 156, 813, 403, -1, 403, 814, 156, -1, 152, 808, 403, -1, 403, 813, 152, -1, 155, 818, 404, -1, 404, 811, 155, -1, 159, 817, 404, -1, 404, 818, 159, -1, 158, 816, 404, -1, 404, 817, 158, -1, 154, 811, 404, -1, 404, 816, 154, -1, 157, 820, 405, -1, 405, 814, 157, -1, 160, 547, 405, -1, 405, 820, 160, -1, 21, 819, 405, -1, 405, 547, 21, -1, 156, 814, 405, -1, 405, 819, 156, -1, 159, 822, 406, -1, 406, 817, 159, -1, 22, 557, 406, -1, 406, 822, 22, -1, 30, 821, 406, -1, 406, 557, 30, -1, 158, 817, 406, -1, 406, 821, 158, -1, 136, 825, 407, -1, 407, 788, 136, -1, 162, 824, 407, -1, 407, 825, 162, -1, 161, 823, 407, -1, 407, 824, 161, -1, 139, 788, 407, -1, 407, 823, 139, -1, 139, 823, 408, -1, 408, 794, 139, -1, 161, 827, 408, -1, 408, 823, 161, -1, 163, 826, 408, -1, 408, 827, 163, -1, 143, 794, 408, -1, 408, 826, 143, -1, 143, 826, 409, -1, 409, 800, 143, -1, 163, 829, 409, -1, 409, 826, 163, -1, 164, 828, 409, -1, 409, 829, 164, -1, 147, 800, 409, -1, 409, 828, 147, -1, 147, 828, 410, -1, 410, 806, 147, -1, 164, 831, 410, -1, 410, 828, 164, -1, 165, 830, 410, -1, 410, 831, 165, -1, 151, 806, 410, -1, 410, 830, 151, -1, 151, 830, 411, -1, 411, 812, 151, -1, 165, 833, 411, -1, 411, 830, 165, -1, 166, 832, 411, -1, 411, 833, 166, -1, 155, 812, 411, -1, 411, 832, 155, -1, 155, 832, 412, -1, 412, 818, 155, -1, 166, 835, 412, -1, 412, 832, 166, -1, 167, 834, 412, -1, 412, 835, 167, -1, 159, 818, 412, -1, 412, 834, 159, -1, 159, 834, 413, -1, 413, 822, 159, -1, 167, 836, 413, -1, 413, 834, 167, -1, 168, 587, 413, -1, 413, 836, 168, -1, 22, 822, 413, -1, 413, 587, 22, -1, 21, 839, 414, -1, 414, 819, 21, -1, 170, 838, 414, -1, 414, 839, 170, -1, 169, 837, 414, -1, 414, 838, 169, -1, 156, 819, 414, -1, 414, 837, 156, -1, 156, 837, 415, -1, 415, 813, 156, -1, 169, 841, 415, -1, 415, 837, 169, -1, 171, 840, 415, -1, 415, 841, 171, -1, 152, 813, 415, -1, 415, 840, 152, -1, 152, 840, 416, -1, 416, 807, 152, -1, 171, 843, 416, -1, 416, 840, 171, -1, 172, 842, 416, -1, 416, 843, 172, -1, 148, 807, 416, -1, 416, 842, 148, -1, 148, 842, 417, -1, 417, 801, 148, -1, 172, 845, 417, -1, 417, 842, 172, -1, 173, 844, 417, -1, 417, 845, 173, -1, 144, 801, 417, -1, 417, 844, 144, -1, 144, 844, 418, -1, 418, 795, 144, -1, 173, 847, 418, -1, 418, 844, 173, -1, 174, 846, 418, -1, 418, 847, 174, -1, 140, 795, 418, -1, 418, 846, 140, -1, 140, 846, 419, -1, 419, 789, 140, -1, 174, 849, 419, -1, 419, 846, 174, -1, 175, 848, 419, -1, 419, 849, 175, -1, 134, 789, 419, -1, 419, 848, 134, -1, 134, 848, 420, -1, 420, 782, 134, -1, 175, 851, 420, -1, 420, 848, 175, -1, 176, 850, 420, -1, 420, 851, 176, -1, 133, 782, 420, -1, 420, 850, 133, -1, 138, 853, 421, -1, 421, 786, 138, -1, 45, 852, 421, -1, 421, 853, 45, -1, 137, 786, 421, -1, 421, 852, 137, -1, 142, 854, 422, -1, 422, 792, 142, -1, 45, 853, 422, -1, 422, 854, 45, -1, 138, 792, 422, -1, 422, 853, 138, -1, 146, 855, 423, -1, 423, 798, 146, -1, 45, 854, 423, -1, 423, 855, 45, -1, 142, 798, 423, -1, 423, 854, 142, -1, 150, 856, 424, -1, 424, 804, 150, -1, 45, 855, 424, -1, 424, 856, 45, -1, 146, 804, 424, -1, 424, 855, 146, -1, 154, 857, 425, -1, 425, 810, 154, -1, 45, 856, 425, -1, 425, 857, 45, -1, 150, 810, 425, -1, 425, 856, 150, -1, 158, 858, 426, -1, 426, 816, 158, -1, 45, 857, 426, -1, 426, 858, 45, -1, 154, 816, 426, -1, 426, 857, 154, -1, 30, 601, 427, -1, 427, 821, 30, -1, 45, 858, 427, -1, 427, 601, 45, -1, 158, 821, 427, -1, 427, 858, 158, -1, 177, 862, 428, -1, 428, 859, 177, -1, 180, 861, 428, -1, 428, 862, 180, -1, 179, 860, 428, -1, 428, 861, 179, -1, 178, 859, 428, -1, 428, 860, 178, -1, 181, 866, 429, -1, 429, 863, 181, -1, 184, 865, 429, -1, 429, 866, 184, -1, 183, 864, 429, -1, 429, 865, 183, -1, 182, 863, 429, -1, 429, 864, 182, -1, 185, 870, 430, -1, 430, 867, 185, -1, 188, 869, 430, -1, 430, 870, 188, -1, 187, 868, 430, -1, 430, 869, 187, -1, 186, 867, 430, -1, 430, 868, 186, -1, 189, 874, 431, -1, 431, 871, 189, -1, 192, 873, 431, -1, 431, 874, 192, -1, 191, 872, 431, -1, 431, 873, 191, -1, 190, 871, 431, -1, 431, 872, 190, -1, 193, 878, 432, -1, 432, 875, 193, -1, 196, 877, 432, -1, 432, 878, 196, -1, 195, 876, 432, -1, 432, 877, 195, -1, 194, 875, 432, -1, 432, 876, 194, -1, 197, 882, 433, -1, 433, 879, 197, -1, 200, 881, 433, -1, 433, 882, 200, -1, 199, 880, 433, -1, 433, 881, 199, -1, 198, 879, 433, -1, 433, 880, 198, -1, 201, 886, 434, -1, 434, 883, 201, -1, 204, 885, 434, -1, 434, 886, 204, -1, 203, 884, 434, -1, 434, 885, 203, -1, 202, 883, 434, -1, 434, 884, 202, -1, 162, 889, 435, -1, 435, 824, 162, -1, 206, 888, 435, -1, 435, 889, 206, -1, 205, 887, 435, -1, 435, 888, 205, -1, 161, 824, 435, -1, 435, 887, 161, -1, 161, 887, 436, -1, 436, 890, 161, -1, 205, 892, 436, -1, 436, 887, 205, -1, 207, 891, 436, -1, 436, 892, 207, -1, 175, 890, 436, -1, 436, 891, 175, -1, 175, 891, 437, -1, 437, 851, 175, -1, 207, 894, 437, -1, 437, 891, 207, -1, 208, 893, 437, -1, 437, 894, 208, -1, 176, 851, 437, -1, 437, 893, 176, -1, 176, 893, 438, -1, 438, 895, 176, -1, 208, 896, 438, -1, 438, 893, 208, -1, 206, 889, 438, -1, 438, 896, 206, -1, 162, 895, 438, -1, 438, 889, 162, -1, 167, 899, 439, -1, 439, 836, 167, -1, 210, 898, 439, -1, 439, 899, 210, -1, 209, 897, 439, -1, 439, 898, 209, -1, 168, 836, 439, -1, 439, 897, 168, -1, 168, 897, 440, -1, 440, 900, 168, -1, 209, 902, 440, -1, 440, 897, 209, -1, 211, 901, 440, -1, 440, 902, 211, -1, 170, 900, 440, -1, 440, 901, 170, -1, 170, 901, 441, -1, 441, 838, 170, -1, 211, 904, 441, -1, 441, 901, 211, -1, 212, 903, 441, -1, 441, 904, 212, -1, 169, 838, 441, -1, 441, 903, 169, -1, 169, 903, 442, -1, 442, 905, 169, -1, 212, 906, 442, -1, 442, 903, 212, -1, 210, 899, 442, -1, 442, 906, 210, -1, 167, 905, 442, -1, 442, 899, 167, -1, 169, 909, 443, -1, 443, 841, 169, -1, 214, 908, 443, -1, 443, 909, 214, -1, 213, 907, 443, -1, 443, 908, 213, -1, 171, 841, 443, -1, 443, 907, 171, -1, 171, 907, 444, -1, 444, 910, 171, -1, 213, 912, 444, -1, 444, 907, 213, -1, 215, 911, 444, -1, 444, 912, 215, -1, 166, 910, 444, -1, 444, 911, 166, -1, 166, 911, 445, -1, 445, 835, 166, -1, 215, 914, 445, -1, 445, 911, 215, -1, 216, 913, 445, -1, 445, 914, 216, -1, 167, 835, 445, -1, 445, 913, 167, -1, 167, 913, 446, -1, 446, 905, 167, -1, 216, 915, 446, -1, 446, 913, 216, -1, 214, 909, 446, -1, 446, 915, 214, -1, 169, 905, 446, -1, 446, 909, 169, -1, 171, 918, 447, -1, 447, 843, 171, -1, 218, 917, 447, -1, 447, 918, 218, -1, 217, 916, 447, -1, 447, 917, 217, -1, 172, 843, 447, -1, 447, 916, 172, -1, 172, 916, 448, -1, 448, 919, 172, -1, 217, 921, 448, -1, 448, 916, 217, -1, 219, 920, 448, -1, 448, 921, 219, -1, 165, 919, 448, -1, 448, 920, 165, -1, 165, 920, 449, -1, 449, 833, 165, -1, 219, 923, 449, -1, 449, 920, 219, -1, 220, 922, 449, -1, 449, 923, 220, -1, 166, 833, 449, -1, 449, 922, 166, -1, 166, 922, 450, -1, 450, 910, 166, -1, 220, 924, 450, -1, 450, 922, 220, -1, 218, 918, 450, -1, 450, 924, 218, -1, 171, 910, 450, -1, 450, 918, 171, -1, 172, 927, 451, -1, 451, 845, 172, -1, 222, 926, 451, -1, 451, 927, 222, -1, 221, 925, 451, -1, 451, 926, 221, -1, 173, 845, 451, -1, 451, 925, 173, -1, 173, 925, 452, -1, 452, 928, 173, -1, 221, 930, 452, -1, 452, 925, 221, -1, 223, 929, 452, -1, 452, 930, 223, -1, 164, 928, 452, -1, 452, 929, 164, -1, 164, 929, 453, -1, 453, 831, 164, -1, 223, 932, 453, -1, 453, 929, 223, -1, 224, 931, 453, -1, 453, 932, 224, -1, 165, 831, 453, -1, 453, 931, 165, -1, 165, 931, 454, -1, 454, 919, 165, -1, 224, 933, 454, -1, 454, 931, 224, -1, 222, 927, 454, -1, 454, 933, 222, -1, 172, 919, 454, -1, 454, 927, 172, -1, 173, 936, 455, -1, 455, 847, 173, -1, 226, 935, 455, -1, 455, 936, 226, -1, 225, 934, 455, -1, 455, 935, 225, -1, 174, 847, 455, -1, 455, 934, 174, -1, 174, 934, 456, -1, 456, 937, 174, -1, 225, 939, 456, -1, 456, 934, 225, -1, 227, 938, 456, -1, 456, 939, 227, -1, 163, 937, 456, -1, 456, 938, 163, -1, 163, 938, 457, -1, 457, 829, 163, -1, 227, 941, 457, -1, 457, 938, 227, -1, 228, 940, 457, -1, 457, 941, 228, -1, 164, 829, 457, -1, 457, 940, 164, -1, 164, 940, 458, -1, 458, 928, 164, -1, 228, 942, 458, -1, 458, 940, 228, -1, 226, 936, 458, -1, 458, 942, 226, -1, 173, 928, 458, -1, 458, 936, 173, -1, 174, 945, 459, -1, 459, 849, 174, -1, 230, 944, 459, -1, 459, 945, 230, -1, 229, 943, 459, -1, 459, 944, 229, -1, 175, 849, 459, -1, 459, 943, 175, -1, 175, 943, 460, -1, 460, 890, 175, -1, 229, 947, 460, -1, 460, 943, 229, -1, 231, 946, 460, -1, 460, 947, 231, -1, 161, 890, 460, -1, 460, 946, 161, -1, 161, 946, 461, -1, 461, 827, 161, -1, 231, 949, 461, -1, 461, 946, 231, -1, 232, 948, 461, -1, 461, 949, 232, -1, 163, 827, 461, -1, 461, 948, 163, -1, 163, 948, 462, -1, 462, 937, 163, -1, 232, 950, 462, -1, 462, 948, 232, -1, 230, 945, 462, -1, 462, 950, 230, -1, 174, 937, 462, -1, 462, 945, 174, -1, 45, 953, 463, -1, 463, 852, 45, -1, 234, 952, 463, -1, 463, 953, 234, -1, 233, 951, 463, -1, 463, 952, 233, -1, 137, 852, 463, -1, 463, 951, 137, -1, 235, 956, 464, -1, 464, 954, 235, -1, 177, 859, 464, -1, 464, 956, 177, -1, 178, 955, 464, -1, 464, 859, 178, -1, 236, 954, 464, -1, 464, 955, 236, -1, 236, 955, 465, -1, 465, 957, 236, -1, 178, 860, 465, -1, 465, 955, 178, -1, 179, 958, 465, -1, 465, 860, 179, -1, 237, 957, 465, -1, 465, 958, 237, -1, 237, 958, 466, -1, 466, 959, 237, -1, 179, 861, 466, -1, 466, 958, 179, -1, 180, 960, 466, -1, 466, 861, 180, -1, 238, 959, 466, -1, 466, 960, 238, -1, 238, 960, 467, -1, 467, 961, 238, -1, 180, 862, 467, -1, 467, 960, 180, -1, 177, 956, 467, -1, 467, 862, 177, -1, 235, 961, 467, -1, 467, 956, 235, -1, 239, 964, 468, -1, 468, 962, 239, -1, 181, 863, 468, -1, 468, 964, 181, -1, 182, 963, 468, -1, 468, 863, 182, -1, 240, 962, 468, -1, 468, 963, 240, -1, 240, 963, 469, -1, 469, 965, 240, -1, 182, 864, 469, -1, 469, 963, 182, -1, 183, 966, 469, -1, 469, 864, 183, -1, 241, 965, 469, -1, 469, 966, 241, -1, 241, 966, 470, -1, 470, 967, 241, -1, 183, 865, 470, -1, 470, 966, 183, -1, 184, 968, 470, -1, 470, 865, 184, -1, 242, 967, 470, -1, 470, 968, 242, -1, 242, 968, 471, -1, 471, 969, 242, -1, 184, 866, 471, -1, 471, 968, 184, -1, 181, 964, 471, -1, 471, 866, 181, -1, 239, 969, 471, -1, 471, 964, 239, -1, 243, 972, 472, -1, 472, 970, 243, -1, 185, 867, 472, -1, 472, 972, 185, -1, 186, 971, 472, -1, 472, 867, 186, -1, 244, 970, 472, -1, 472, 971, 244, -1, 244, 971, 473, -1, 473, 973, 244, -1, 186, 868, 473, -1, 473, 971, 186, -1, 187, 974, 473, -1, 473, 868, 187, -1, 245, 973, 473, -1, 473, 974, 245, -1, 245, 974, 474, -1, 474, 975, 245, -1, 187, 869, 474, -1, 474, 974, 187, -1, 188, 976, 474, -1, 474, 869, 188, -1, 246, 975, 474, -1, 474, 976, 246, -1, 246, 976, 475, -1, 475, 977, 246, -1, 188, 870, 475, -1, 475, 976, 188, -1, 185, 972, 475, -1, 475, 870, 185, -1, 243, 977, 475, -1, 475, 972, 243, -1, 247, 980, 476, -1, 476, 978, 247, -1, 189, 871, 476, -1, 476, 980, 189, -1, 190, 979, 476, -1, 476, 871, 190, -1, 248, 978, 476, -1, 476, 979, 248, -1, 248, 979, 477, -1, 477, 981, 248, -1, 190, 872, 477, -1, 477, 979, 190, -1, 191, 982, 477, -1, 477, 872, 191, -1, 249, 981, 477, -1, 477, 982, 249, -1, 249, 982, 478, -1, 478, 983, 249, -1, 191, 873, 478, -1, 478, 982, 191, -1, 192, 984, 478, -1, 478, 873, 192, -1, 250, 983, 478, -1, 478, 984, 250, -1, 250, 984, 479, -1, 479, 985, 250, -1, 192, 874, 479, -1, 479, 984, 192, -1, 189, 980, 479, -1, 479, 874, 189, -1, 247, 985, 479, -1, 479, 980, 247, -1, 251, 988, 480, -1, 480, 986, 251, -1, 193, 875, 480, -1, 480, 988, 193, -1, 194, 987, 480, -1, 480, 875, 194, -1, 252, 986, 480, -1, 480, 987, 252, -1, 252, 987, 481, -1, 481, 989, 252, -1, 194, 876, 481, -1, 481, 987, 194, -1, 195, 990, 481, -1, 481, 876, 195, -1, 253, 989, 481, -1, 481, 990, 253, -1, 253, 990, 482, -1, 482, 991, 253, -1, 195, 877, 482, -1, 482, 990, 195, -1, 196, 992, 482, -1, 482, 877, 196, -1, 254, 991, 482, -1, 482, 992, 254, -1, 254, 992, 483, -1, 483, 993, 254, -1, 196, 878, 483, -1, 483, 992, 196, -1, 193, 988, 483, -1, 483, 878, 193, -1, 251, 993, 483, -1, 483, 988, 251, -1, 255, 996, 484, -1, 484, 994, 255, -1, 197, 879, 484, -1, 484, 996, 197, -1, 198, 995, 484, -1, 484, 879, 198, -1, 256, 994, 484, -1, 484, 995, 256, -1, 256, 995, 485, -1, 485, 997, 256, -1, 198, 880, 485, -1, 485, 995, 198, -1, 199, 998, 485, -1, 485, 880, 199, -1, 257, 997, 485, -1, 485, 998, 257, -1, 257, 998, 486, -1, 486, 999, 257, -1, 199, 881, 486, -1, 486, 998, 199, -1, 200, 1000, 486, -1, 486, 881, 200, -1, 258, 999, 486, -1, 486, 1000, 258, -1, 258, 1000, 487, -1, 487, 1001, 258, -1, 200, 882, 487, -1, 487, 1000, 200, -1, 197, 996, 487, -1, 487, 882, 197, -1, 255, 1001, 487, -1, 487, 996, 255, -1, 259, 1004, 488, -1, 488, 1002, 259, -1, 201, 883, 488, -1, 488, 1004, 201, -1, 202, 1003, 488, -1, 488, 883, 202, -1, 260, 1002, 488, -1, 488, 1003, 260, -1, 260, 1003, 489, -1, 489, 1005, 260, -1, 202, 884, 489, -1, 489, 1003, 202, -1, 203, 1006, 489, -1, 489, 884, 203, -1, 261, 1005, 489, -1, 489, 1006, 261, -1, 261, 1006, 490, -1, 490, 1007, 261, -1, 203, 885, 490, -1, 490, 1006, 203, -1, 204, 1008, 490, -1, 490, 885, 204, -1, 262, 1007, 490, -1, 490, 1008, 262, -1, 262, 1008, 491, -1, 491, 1009, 262, -1, 204, 886, 491, -1, 491, 1008, 204, -1, 201, 1004, 491, -1, 491, 886, 201, -1, 259, 1009, 491, -1, 491, 1004, 259, -1, 205, 888, 492, -1, 492, 1010, 205, -1, 206, 1011, 492, -1, 492, 888, 206, -1, 235, 954, 492, -1, 492, 1011, 235, -1, 236, 1010, 492, -1, 492, 954, 236, -1, 207, 892, 493, -1, 493, 1012, 207, -1, 205, 1010, 493, -1, 493, 892, 205, -1, 236, 957, 493, -1, 493, 1010, 236, -1, 237, 1012, 493, -1, 493, 957, 237, -1, 208, 894, 494, -1, 494, 1013, 208, -1, 207, 1012, 494, -1, 494, 894, 207, -1, 237, 959, 494, -1, 494, 1012, 237, -1, 238, 1013, 494, -1, 494, 959, 238, -1, 206, 896, 495, -1, 495, 1011, 206, -1, 208, 1013, 495, -1, 495, 896, 208, -1, 238, 961, 495, -1, 495, 1013, 238, -1, 235, 1011, 495, -1, 495, 961, 235, -1, 209, 898, 496, -1, 496, 1014, 209, -1, 210, 1015, 496, -1, 496, 898, 210, -1, 239, 962, 496, -1, 496, 1015, 239, -1, 240, 1014, 496, -1, 496, 962, 240, -1, 211, 902, 497, -1, 497, 1016, 211, -1, 209, 1014, 497, -1, 497, 902, 209, -1, 240, 965, 497, -1, 497, 1014, 240, -1, 241, 1016, 497, -1, 497, 965, 241, -1, 212, 904, 498, -1, 498, 1017, 212, -1, 211, 1016, 498, -1, 498, 904, 211, -1, 241, 967, 498, -1, 498, 1016, 241, -1, 242, 1017, 498, -1, 498, 967, 242, -1, 210, 906, 499, -1, 499, 1015, 210, -1, 212, 1017, 499, -1, 499, 906, 212, -1, 242, 969, 499, -1, 499, 1017, 242, -1, 239, 1015, 499, -1, 499, 969, 239, -1, 213, 908, 500, -1, 500, 1018, 213, -1, 214, 1019, 500, -1, 500, 908, 214, -1, 243, 970, 500, -1, 500, 1019, 243, -1, 244, 1018, 500, -1, 500, 970, 244, -1, 215, 912, 501, -1, 501, 1020, 215, -1, 213, 1018, 501, -1, 501, 912, 213, -1, 244, 973, 501, -1, 501, 1018, 244, -1, 245, 1020, 501, -1, 501, 973, 245, -1, 216, 914, 502, -1, 502, 1021, 216, -1, 215, 1020, 502, -1, 502, 914, 215, -1, 245, 975, 502, -1, 502, 1020, 245, -1, 246, 1021, 502, -1, 502, 975, 246, -1, 214, 915, 503, -1, 503, 1019, 214, -1, 216, 1021, 503, -1, 503, 915, 216, -1, 246, 977, 503, -1, 503, 1021, 246, -1, 243, 1019, 503, -1, 503, 977, 243, -1, 217, 917, 504, -1, 504, 1022, 217, -1, 218, 1023, 504, -1, 504, 917, 218, -1, 247, 978, 504, -1, 504, 1023, 247, -1, 248, 1022, 504, -1, 504, 978, 248, -1, 219, 921, 505, -1, 505, 1024, 219, -1, 217, 1022, 505, -1, 505, 921, 217, -1, 248, 981, 505, -1, 505, 1022, 248, -1, 249, 1024, 505, -1, 505, 981, 249, -1, 220, 923, 506, -1, 506, 1025, 220, -1, 219, 1024, 506, -1, 506, 923, 219, -1, 249, 983, 506, -1, 506, 1024, 249, -1, 250, 1025, 506, -1, 506, 983, 250, -1, 218, 924, 507, -1, 507, 1023, 218, -1, 220, 1025, 507, -1, 507, 924, 220, -1, 250, 985, 507, -1, 507, 1025, 250, -1, 247, 1023, 507, -1, 507, 985, 247, -1, 221, 926, 508, -1, 508, 1026, 221, -1, 222, 1027, 508, -1, 508, 926, 222, -1, 251, 986, 508, -1, 508, 1027, 251, -1, 252, 1026, 508, -1, 508, 986, 252, -1, 223, 930, 509, -1, 509, 1028, 223, -1, 221, 1026, 509, -1, 509, 930, 221, -1, 252, 989, 509, -1, 509, 1026, 252, -1, 253, 1028, 509, -1, 509, 989, 253, -1, 224, 932, 510, -1, 510, 1029, 224, -1, 223, 1028, 510, -1, 510, 932, 223, -1, 253, 991, 510, -1, 510, 1028, 253, -1, 254, 1029, 510, -1, 510, 991, 254, -1, 222, 933, 511, -1, 511, 1027, 222, -1, 224, 1029, 511, -1, 511, 933, 224, -1, 254, 993, 511, -1, 511, 1029, 254, -1, 251, 1027, 511, -1, 511, 993, 251, -1, 225, 935, 512, -1, 512, 1030, 225, -1, 226, 1031, 512, -1, 512, 935, 226, -1, 255, 994, 512, -1, 512, 1031, 255, -1, 256, 1030, 512, -1, 512, 994, 256, -1, 227, 939, 513, -1, 513, 1032, 227, -1, 225, 1030, 513, -1, 513, 939, 225, -1, 256, 997, 513, -1, 513, 1030, 256, -1, 257, 1032, 513, -1, 513, 997, 257, -1, 228, 941, 514, -1, 514, 1033, 228, -1, 227, 1032, 514, -1, 514, 941, 227, -1, 257, 999, 514, -1, 514, 1032, 257, -1, 258, 1033, 514, -1, 514, 999, 258, -1, 226, 942, 515, -1, 515, 1031, 226, -1, 228, 1033, 515, -1, 515, 942, 228, -1, 258, 1001, 515, -1, 515, 1033, 258, -1, 255, 1031, 515, -1, 515, 1001, 255, -1, 229, 944, 516, -1, 516, 1034, 229, -1, 230, 1035, 516, -1, 516, 944, 230, -1, 259, 1002, 516, -1, 516, 1035, 259, -1, 260, 1034, 516, -1, 516, 1002, 260, -1, 231, 947, 517, -1, 517, 1036, 231, -1, 229, 1034, 517, -1, 517, 947, 229, -1, 260, 1005, 517, -1, 517, 1034, 260, -1, 261, 1036, 517, -1, 517, 1005, 261, -1, 232, 949, 518, -1, 518, 1037, 232, -1, 231, 1036, 518, -1, 518, 949, 231, -1, 261, 1007, 518, -1, 518, 1036, 261, -1, 262, 1037, 518, -1, 518, 1007, 262, -1, 230, 950, 519, -1, 519, 1035, 230, -1, 232, 1037, 519, -1, 519, 950, 232, -1, 262, 1009, 519, -1, 519, 1037, 262, -1, 259, 1035, 519, -1, 519, 1009, 259, -1, 233, 952, 520, -1, 520, 1038, 233, -1, 234, 1040, 520, -1, 520, 952, 234, -1, 264, 1039, 520, -1, 520, 1040, 264, -1, 263, 1038, 520, -1, 520, 1039, 263, -1},
                                                            TexCoord: &x3d.TextureCoordinate{
                                                                CoreX3DNode: x3d.CoreX3DNode{
                                                                    DEF: stringPtr("Lower_teeth-TEXCOORD"),
                                                                },
                                                                Point: &x3d.MFVec2f{[2]float32{0.8538,0.2675},[2]float32{0.8565,0.2503},[2]float32{0.8695,0.2562},[2]float32{0.8668,0.2734},[2]float32{0.8588,0.2367},[2]float32{0.8717,0.2426},[2]float32{0.8844,0.2483},[2]float32{0.8823,0.262},[2]float32{0.8795,0.2792},[2]float32{0.8612,0.228},[2]float32{0.861,0.2289},[2]float32{0.8725,0.2388},[2]float32{0.8732,0.2346},[2]float32{0.8609,0.2296},[2]float32{0.8708,0.2419},[2]float32{0.8804,0.2515},[2]float32{0.8838,0.2475},[2]float32{0.8849,0.2408},[2]float32{0.8946,0.2676},[2]float32{0.8919,0.2848},[2]float32{0.8968,0.254},[2]float32{0.9087,0.2594},[2]float32{0.9065,0.273},[2]float32{0.9038,0.2902},[2]float32{0.8949,0.2538},[2]float32{0.8961,0.2462},[2]float32{0.891,0.2586},[2]float32{0.9,0.2623},[2]float32{0.9058,0.2587},[2]float32{0.907,0.2511},[2]float32{0.9179,0.2782},[2]float32{0.9152,0.2954},[2]float32{0.9201,0.2645},[2]float32{0.9312,0.2696},[2]float32{0.9291,0.2832},[2]float32{0.9264,0.3004},[2]float32{0.9164,0.2635},[2]float32{0.9176,0.2559},[2]float32{0.9106,0.2675},[2]float32{0.9189,0.2709},[2]float32{0.9269,0.2683},[2]float32{0.9281,0.2607},[2]float32{0.9402,0.2883},[2]float32{0.9375,0.3055},[2]float32{0.9423,0.2746},[2]float32{0.9521,0.2791},[2]float32{0.95,0.2928},[2]float32{0.9473,0.3099},[2]float32{0.9377,0.2732},[2]float32{0.8588,0.145},[2]float32{0.8655,0.1406},[2]float32{0.8654,0.1406},[2]float32{0.8563,0.1466},[2]float32{0.8722,0.1362},[2]float32{0.8746,0.1346},[2]float32{0.8723,0.1362},[2]float32{0.8654,0.1407},[2]float32{0.8585,0.1452},[2]float32{0.9628,0.0768},[2]float32{0.9627,0.07687},[2]float32{0.9643,0.07584},[2]float32{0.9639,0.0761},[2]float32{0.9633,0.07644},[2]float32{0.9646,0.07558},[2]float32{0.9658,0.07486},[2]float32{0.9658,0.07481},[2]float32{0.9651,0.07527},[2]float32{0.9636,0.07627},[2]float32{0.9625,0.077},[2]float32{0.961,0.07797},[2]float32{0.963,0.07668},[2]float32{0.9607,0.0782},[2]float32{0.9591,0.07925},[2]float32{0.9585,0.07964},[2]float32{0.9595,0.07893},[2]float32{0.9614,0.07775},[2]float32{0.9566,0.08085},[2]float32{0.9537,0.08276},[2]float32{0.9524,0.08361},[2]float32{0.9567,0.08081},[2]float32{0.9502,0.08508},[2]float32{0.9481,0.08642},[2]float32{0.9483,0.08632},[2]float32{0.9511,0.08447},[2]float32{0.9546,0.0822},[2]float32{0.9423,0.09027},[2]float32{0.9364,0.0941},[2]float32{0.939,0.2656},[2]float32{0.9302,0.2764},[2]float32{0.9351,0.09494},[2]float32{0.9434,0.08949},[2]float32{0.9299,0.09835},[2]float32{0.9268,0.1004},[2]float32{0.928,0.09963},[2]float32{0.9339,0.09577},[2]float32{0.9404,0.0915},[2]float32{0.9197,0.1051},[2]float32{0.9139,0.1089},[2]float32{0.9127,0.1096},[2]float32{0.9208,0.1043},[2]float32{0.9076,0.113},[2]float32{0.9047,0.1149},[2]float32{0.906,0.1141},[2]float32{0.9116,0.1104},[2]float32{0.9178,0.1063},[2]float32{0.8968,0.1201},[2]float32{0.8904,0.1243},[2]float32{0.8898,0.1247},[2]float32{0.8985,0.119},[2]float32{0.8837,0.1287},[2]float32{0.8812,0.1303},[2]float32{0.8831,0.1291},[2]float32{0.8892,0.125},[2]float32{0.8957,0.1208},[2]float32{0.8485,0.1053},[2]float32{0.8608,0.09748},[2]float32{0.8609,0.09813},[2]float32{0.8517,0.1042},[2]float32{0.8729,0.08952},[2]float32{0.87,0.09212},[2]float32{0.8707,0.098},[2]float32{0.8615,0.104},[2]float32{0.8523,0.11},[2]float32{0.8733,0.08954},[2]float32{0.8733,0.08999},[2]float32{0.8734,0.08866},[2]float32{0.8703,0.09196},[2]float32{0.8709,0.09783},[2]float32{0.8739,0.09587},[2]float32{0.8605,0.09651},[2]float32{0.8607,0.09825},[2]float32{0.8476,0.1047},[2]float32{0.8512,0.1045},[2]float32{0.8518,0.1104},[2]float32{0.8613,0.1041},[2]float32{0.8482,0.1055},[2]float32{0.8483,0.1064},[2]float32{0.8489,0.1122},[2]float32{0.9565,0.03469},[2]float32{0.9569,0.03447},[2]float32{0.9571,0.03505},[2]float32{0.9573,0.03487},[2]float32{0.9576,0.03398},[2]float32{0.9581,0.0344},[2]float32{0.9588,0.04024},[2]float32{0.9372,0.2791},[2]float32{0.9473,0.2775},[2]float32{0.9485,0.27},[2]float32{0.9574,0.2961},[2]float32{0.9547,0.3133},[2]float32{0.9595,0.2824},[2]float32{0.9647,0.2848},[2]float32{0.9626,0.2985},[2]float32{0.9599,0.3157},[2]float32{0.9541,0.2806},[2]float32{0.9554,0.2731},[2]float32{0.9452,0.2832},[2]float32{0.9475,0.2838},[2]float32{0.9588,0.2828},[2]float32{0.9601,0.2752},[2]float32{0.9662,0.3001},[2]float32{0.9635,0.3173},[2]float32{0.9682,0.2864},[2]float32{0.9704,0.2874},[2]float32{0.9684,0.3011},[2]float32{0.9657,0.3183},[2]float32{0.9621,0.2842},[2]float32{0.9633,0.2767},[2]float32{0.9525,0.2865},[2]float32{0.9522,0.286},[2]float32{0.9641,0.2852},[2]float32{0.9654,0.2776},[2]float32{0.9695,0.3016},[2]float32{0.9668,0.3188},[2]float32{0.9716,0.2879},[2]float32{0.9719,0.2881},[2]float32{0.9698,0.3017},[2]float32{0.9671,0.3189},[2]float32{0.9651,0.2856},[2]float32{0.9663,0.2781},[2]float32{0.9553,0.2877},[2]float32{0.9533,0.2865},[2]float32{0.9653,0.2857},[2]float32{0.9666,0.2782},[2]float32{0.8735,0.2332},[2]float32{0.8615,0.2278},[2]float32{0.8853,0.2386},[2]float32{0.8855,0.2385},[2]float32{0.8737,0.2331},[2]float32{0.8617,0.2279},[2]float32{0.8966,0.2437},[2]float32{0.9074,0.2486},[2]float32{0.9077,0.2486},[2]float32{0.8966,0.2436},[2]float32{0.918,0.2534},[2]float32{0.9286,0.2582},[2]float32{0.9578,0.04088},[2]float32{0.958,0.04071},[2]float32{0.9601,0.03258},[2]float32{0.9601,0.03303},[2]float32{0.9623,0.03036},[2]float32{0.962,0.03185},[2]float32{0.9626,0.03775},[2]float32{0.9608,0.0389},[2]float32{0.9621,0.02986},[2]float32{0.9621,0.03172},[2]float32{0.961,0.03123},[2]float32{0.9611,0.03243},[2]float32{0.9617,0.03833},[2]float32{0.9627,0.03763},[2]float32{0.959,0.03329},[2]float32{0.9591,0.03374},[2]float32{0.9597,0.03961},[2]float32{0.9587,0.03209},[2]float32{0.9588,0.03395},[2]float32{0.9602,0.03299},[2]float32{0.9553,0.03494},[2]float32{0.9561,0.03568},[2]float32{0.9567,0.04158},[2]float32{0.9593,0.03985},[2]float32{0.9608,0.03889},[2]float32{0.9536,0.03683},[2]float32{0.9537,0.03728},[2]float32{0.9511,0.03821},[2]float32{0.9526,0.03799},[2]float32{0.9533,0.04383},[2]float32{0.9543,0.04315},[2]float32{0.9538,0.03649},[2]float32{0.954,0.03708},[2]float32{0.9566,0.03538},[2]float32{0.9572,0.04122},[2]float32{0.9547,0.04291},[2]float32{0.9591,0.03374},[2]float32{0.9597,0.03962},[2]float32{0.9498,0.03795},[2]float32{0.9498,0.0398},[2]float32{0.9539,0.03715},[2]float32{0.9428,0.04312},[2]float32{0.9448,0.04312},[2]float32{0.9454,0.049},[2]float32{0.9504,0.04569},[2]float32{0.9545,0.04305},[2]float32{0.9418,0.04459},[2]float32{0.9418,0.04503},[2]float32{0.9394,0.04587},[2]float32{0.9419,0.04501},[2]float32{0.9426,0.05085},[2]float32{0.9425,0.05089},[2]float32{0.9455,0.04192},[2]float32{0.9457,0.04253},[2]float32{0.9505,0.03936},[2]float32{0.9512,0.04521},[2]float32{0.9464,0.04837},[2]float32{0.9537,0.03729},[2]float32{0.9543,0.04317},[2]float32{0.9323,0.04942},[2]float32{0.9324,0.05124},[2]float32{0.9404,0.04599},[2]float32{0.9208,0.05759},[2]float32{0.9234,0.05711},[2]float32{0.9241,0.06299},[2]float32{0.933,0.05713},[2]float32{0.9288,0.2582},[2]float32{0.9181,0.2533},[2]float32{0.941,0.05188},[2]float32{0.9191,0.05948},[2]float32{0.9191,0.05992},[2]float32{0.9174,0.06032},[2]float32{0.9205,0.05901},[2]float32{0.9212,0.06486},[2]float32{0.9198,0.06578},[2]float32{0.9285,0.05309},[2]float32{0.9286,0.05372},[2]float32{0.9376,0.04782},[2]float32{0.9383,0.05368},[2]float32{0.9293,0.05958},[2]float32{0.9418,0.04505},[2]float32{0.9425,0.05092},[2]float32{0.9096,0.06429},[2]float32{0.9097,0.06609},[2]float32{0.9178,0.06084},[2]float32{0.898,0.07251},[2]float32{0.9009,0.07189},[2]float32{0.9015,0.07775},[2]float32{0.9104,0.07197},[2]float32{0.9184,0.06672},[2]float32{0.897,0.07396},[2]float32{0.8971,0.0744},[2]float32{0.8957,0.07454},[2]float32{0.8988,0.07329},[2]float32{0.8994,0.07915},[2]float32{0.8977,0.08026},[2]float32{0.9395,0.2632},[2]float32{0.9491,0.2676},[2]float32{0.9503,0.268},[2]float32{0.9396,0.2631},[2]float32{0.956,0.2707},[2]float32{0.9607,0.2728},[2]float32{0.9617,0.2731},[2]float32{0.9562,0.2706},[2]float32{0.964,0.2743},[2]float32{0.966,0.2752},[2]float32{0.9669,0.2755},[2]float32{0.9643,0.2743},[2]float32{0.967,0.2757},[2]float32{0.9672,0.2758},[2]float32{0.968,0.276},[2]float32{0.9673,0.2757},[2]float32{0.9723,0.2813},[2]float32{0.9726,0.2814},[2]float32{0.9712,0.2808},[2]float32{0.9713,0.2778},[2]float32{0.9724,0.2788},[2]float32{0.9726,0.2784},[2]float32{0.969,0.2798},[2]float32{0.9655,0.2782},[2]float32{0.9658,0.2753},[2]float32{0.9691,0.2773},[2]float32{0.9603,0.2758},[2]float32{0.953,0.2725},[2]float32{0.9536,0.2698},[2]float32{0.9604,0.2733},[2]float32{0.9431,0.268},[2]float32{0.9321,0.263},[2]float32{0.9321,0.2601},[2]float32{0.9433,0.2656},[2]float32{0.921,0.258},[2]float32{0.9096,0.2528},[2]float32{0.91,0.25},[2]float32{0.9064,0.06758},[2]float32{0.9065,0.06824},[2]float32{0.915,0.06265},[2]float32{0.9156,0.06852},[2]float32{0.9071,0.0741},[2]float32{0.9191,0.05993},[2]float32{0.9198,0.06581},[2]float32{0.8858,0.07988},[2]float32{0.886,0.08166},[2]float32{0.8949,0.07579},[2]float32{0.8766,0.0878},[2]float32{0.8773,0.09366},[2]float32{0.8866,0.08753},[2]float32{0.8956,0.08167},[2]float32{0.8733,0.08998},[2]float32{0.8759,0.08826},[2]float32{0.8766,0.09412},[2]float32{0.874,0.09584},[2]float32{0.8843,0.08206},[2]float32{0.8844,0.08273},[2]float32{0.8932,0.07693},[2]float32{0.8938,0.08281},[2]float32{0.885,0.0886},[2]float32{0.897,0.07442},[2]float32{0.8977,0.0803},[2]float32{0.8558,0.1414},[2]float32{0.865,0.1354},[2]float32{0.8655,0.1406},[2]float32{0.8565,0.1465},[2]float32{0.8741,0.1294},[2]float32{0.8745,0.1347},[2]float32{0.8773,0.1273},[2]float32{0.8777,0.1326},[2]float32{0.8743,0.1293},[2]float32{0.8748,0.1345},[2]float32{0.9212,0.2555},[2]float32{0.8648,0.1355},[2]float32{0.8653,0.1407},[2]float32{0.8553,0.1417},[2]float32{0.856,0.1469},[2]float32{0.8524,0.1436},[2]float32{0.8531,0.1487},[2]float32{0.9616,0.07203},[2]float32{0.9614,0.07218},[2]float32{0.9621,0.07728},[2]float32{0.9622,0.07716},[2]float32{0.9623,0.07156},[2]float32{0.963,0.07669},[2]float32{0.9642,0.0703},[2]float32{0.9648,0.0755},[2]float32{0.9659,0.06921},[2]float32{0.9663,0.07448},[2]float32{0.966,0.06912},[2]float32{0.9665,0.0744},[2]float32{0.965,0.06979},[2]float32{0.9655,0.07505},[2]float32{0.9632,0.071},[2]float32{0.9637,0.07619},[2]float32{0.9641,0.07036},[2]float32{0.9626,0.07134},[2]float32{0.9631,0.07662},[2]float32{0.9646,0.07564},[2]float32{0.9601,0.07303},[2]float32{0.9606,0.07827},[2]float32{0.9578,0.07453},[2]float32{0.9584,0.0797},[2]float32{0.9568,0.07515},[2]float32{0.9575,0.08026},[2]float32{0.9583,0.07421},[2]float32{0.959,0.07932},[2]float32{0.9608,0.07255},[2]float32{0.9614,0.0777},[2]float32{0.9631,0.07102},[2]float32{0.9637,0.07623},[2]float32{0.9578,0.07453},[2]float32{0.9538,0.07716},[2]float32{0.9542,0.08242},[2]float32{0.9582,0.07982},[2]float32{0.9488,0.08042},[2]float32{0.9493,0.08562},[2]float32{0.946,0.08225},[2]float32{0.9466,0.0874},[2]float32{0.9461,0.08217},[2]float32{0.9468,0.08728},[2]float32{0.9499,0.07968},[2]float32{0.9506,0.08481},[2]float32{0.9547,0.07656},[2]float32{0.9553,0.08173},[2]float32{0.9577,0.07459},[2]float32{0.9582,0.07983},[2]float32{0.9444,0.08332},[2]float32{0.9364,0.08856},[2]float32{0.8978,0.2474},[2]float32{0.8855,0.2418},[2]float32{0.886,0.2391},[2]float32{0.8981,0.245},[2]float32{0.8729,0.2361},[2]float32{0.8601,0.2303},[2]float32{0.8608,0.2283},[2]float32{0.8734,0.2338},[2]float32{0.8678,0.2399},[2]float32{0.8732,0.2455},[2]float32{0.8624,0.2325},[2]float32{0.8665,0.2349},[2]float32{0.8823,0.2528},[2]float32{0.8859,0.2529},[2]float32{0.8966,0.2592},[2]float32{0.8982,0.2585},[2]float32{0.9109,0.2657},[2]float32{0.91,0.2638},[2]float32{0.9218,0.2707},[2]float32{0.9168,0.2669},[2]float32{0.9271,0.2731},[2]float32{0.9199,0.2683},[2]float32{0.9291,0.274},[2]float32{0.9206,0.2686},[2]float32{0.8607,0.2295},[2]float32{0.8606,0.2296},[2]float32{0.8609,0.2293},[2]float32{0.8616,0.2252},[2]float32{0.8614,0.2253},[2]float32{0.8613,0.2253},[2]float32{0.8633,0.2144},[2]float32{0.8631,0.2144},[2]float32{0.8655,0.2002},[2]float32{0.8653,0.2001},[2]float32{0.8653,0.2001},[2]float32{0.863,0.2144},[2]float32{0.9369,0.09379},[2]float32{0.9448,0.0886},[2]float32{0.9275,0.09438},[2]float32{0.9281,0.09955},[2]float32{0.9233,0.09714},[2]float32{0.924,0.1023},[2]float32{0.9247,0.0962},[2]float32{0.9254,0.1013},[2]float32{0.9328,0.09093},[2]float32{0.9334,0.09609},[2]float32{0.9417,0.08506},[2]float32{0.9422,0.09028},[2]float32{0.9459,0.08234},[2]float32{0.9463,0.08761},[2]float32{0.9217,0.09816},[2]float32{0.9138,0.1034},[2]float32{0.9143,0.1086},[2]float32{0.9222,0.1034},[2]float32{0.905,0.1091},[2]float32{0.9057,0.1143},[2]float32{0.9012,0.1116},[2]float32{0.9019,0.1167},[2]float32{0.9029,0.1105},[2]float32{0.9036,0.1156},[2]float32{0.9106,0.1055},[2]float32{0.9112,0.1107},[2]float32{0.919,0.09993},[2]float32{0.9195,0.1052},[2]float32{0.9231,0.09725},[2]float32{0.9236,0.1025},[2]float32{0.899,0.1131},[2]float32{0.8901,0.1189},[2]float32{0.8906,0.1241},[2]float32{0.8994,0.1184},[2]float32{0.8808,0.125},[2]float32{0.8538,0.2675},[2]float32{0.8814,0.1302},[2]float32{0.8775,0.1272},[2]float32{0.8782,0.1323},[2]float32{0.8801,0.1255},[2]float32{0.8807,0.1306},[2]float32{0.8885,0.12},[2]float32{0.889,0.1252},[2]float32{0.8972,0.1142},[2]float32{0.8977,0.1195},[2]float32{0.901,0.1117},[2]float32{0.9015,0.117},[2]float32{0.8724,0.1138},[2]float32{0.8633,0.1198},[2]float32{0.8541,0.1258},[2]float32{0.8726,0.1136},[2]float32{0.8756,0.1117},[2]float32{0.8535,0.1262},[2]float32{0.8631,0.1199},[2]float32{0.8507,0.128},[2]float32{0.9605,0.05602},[2]float32{0.9596,0.05665},[2]float32{0.9598,0.05649},[2]float32{0.9642,0.05358},[2]float32{0.9625,0.05471},[2]float32{0.9634,0.05417},[2]float32{0.9644,0.05348},[2]float32{0.9614,0.05542},[2]float32{0.9584,0.05741},[2]float32{0.961,0.0557},[2]float32{0.9625,0.05473},[2]float32{0.9551,0.05961},[2]float32{0.9561,0.05895},[2]float32{0.959,0.05701},[2]float32{0.9565,0.05868},[2]float32{0.9614,0.05543},[2]float32{0.9471,0.06482},[2]float32{0.9521,0.06153},[2]float32{0.9561,0.05889},[2]float32{0.9443,0.06663},[2]float32{0.9442,0.06669},[2]float32{0.9529,0.061},[2]float32{0.9481,0.06414},[2]float32{0.956,0.05898},[2]float32{0.9258,0.0788},[2]float32{0.9347,0.07295},[2]float32{0.9427,0.0677},[2]float32{0.923,0.08066},[2]float32{0.9215,0.08158},[2]float32{0.94,0.06948},[2]float32{0.931,0.07537},[2]float32{0.9442,0.06673},[2]float32{0.9033,0.09355},[2]float32{0.9121,0.08778},[2]float32{0.9201,0.08254},[2]float32{0.9012,0.09495},[2]float32{0.8995,0.09606},[2]float32{0.8668,0.2734},[2]float32{0.8695,0.2562},[2]float32{0.8565,0.2503},[2]float32{0.8795,0.2792},[2]float32{0.8823,0.262},[2]float32{0.8844,0.2483},[2]float32{0.8717,0.2426},[2]float32{0.8588,0.2367},[2]float32{0.8612,0.228},[2]float32{0.8732,0.2346},[2]float32{0.8725,0.2388},[2]float32{0.861,0.2289},[2]float32{0.8849,0.2408},[2]float32{0.8838,0.2475},[2]float32{0.8804,0.2515},[2]float32{0.8708,0.2419},[2]float32{0.8609,0.2296},[2]float32{0.8919,0.2848},[2]float32{0.8946,0.2676},[2]float32{0.9038,0.2902},[2]float32{0.9065,0.273},[2]float32{0.9087,0.2594},[2]float32{0.8968,0.254},[2]float32{0.8961,0.2462},[2]float32{0.8949,0.2538},[2]float32{0.907,0.2511},[2]float32{0.9058,0.2587},[2]float32{0.9,0.2623},[2]float32{0.891,0.2586},[2]float32{0.9152,0.2954},[2]float32{0.9179,0.2782},[2]float32{0.9264,0.3004},[2]float32{0.9291,0.2832},[2]float32{0.9312,0.2696},[2]float32{0.9201,0.2645},[2]float32{0.9176,0.2559},[2]float32{0.9164,0.2635},[2]float32{0.9281,0.2607},[2]float32{0.9269,0.2683},[2]float32{0.9189,0.2709},[2]float32{0.9106,0.2675},[2]float32{0.9375,0.3055},[2]float32{0.9402,0.2883},[2]float32{0.9473,0.3099},[2]float32{0.95,0.2928},[2]float32{0.9521,0.2791},[2]float32{0.9423,0.2746},[2]float32{0.939,0.2656},[2]float32{0.9377,0.2732},[2]float32{0.9174,0.08433},[2]float32{0.9485,0.27},[2]float32{0.9089,0.0899},[2]float32{0.9473,0.2775},[2]float32{0.9215,0.08163},[2]float32{0.9372,0.2791},[2]float32{0.879,0.1095},[2]float32{0.9302,0.2764},[2]float32{0.8884,0.1033},[2]float32{0.9547,0.3133},[2]float32{0.9574,0.2961},[2]float32{0.8973,0.09749},[2]float32{0.9599,0.3157},[2]float32{0.9626,0.2985},[2]float32{0.9647,0.2848},[2]float32{0.9595,0.2824},[2]float32{0.9554,0.2731},[2]float32{0.9541,0.2806},[2]float32{0.8783,0.1099},[2]float32{0.9601,0.2752},[2]float32{0.9588,0.2828},[2]float32{0.9475,0.2838},[2]float32{0.9452,0.2832},[2]float32{0.9635,0.3173},[2]float32{0.9662,0.3001},[2]float32{0.9657,0.3183},[2]float32{0.9684,0.3011},[2]float32{0.9704,0.2874},[2]float32{0.9682,0.2864},[2]float32{0.9633,0.2767},[2]float32{0.9621,0.2842},[2]float32{0.9654,0.2776},[2]float32{0.9641,0.2852},[2]float32{0.9522,0.286},[2]float32{0.9525,0.2865},[2]float32{0.9668,0.3188},[2]float32{0.9695,0.3016},[2]float32{0.9716,0.2879},[2]float32{0.9663,0.2781},[2]float32{0.9651,0.2856},[2]float32{0.9553,0.2877},[2]float32{0.8615,0.2278},[2]float32{0.8735,0.2332},[2]float32{0.8617,0.2279},[2]float32{0.8757,0.1116},[2]float32{0.8956,0.09862},[2]float32{0.8867,0.1044},[2]float32{0.8994,0.09611},[2]float32{0.8588,0.145},[2]float32{0.8563,0.1466},[2]float32{0.8654,0.1406},[2]float32{0.8655,0.1406},[2]float32{0.8585,0.1452},[2]float32{0.8654,0.1407},[2]float32{0.8723,0.1362},[2]float32{0.8746,0.1346},[2]float32{0.8722,0.1362},[2]float32{0.9628,0.0768},[2]float32{0.9639,0.0761},[2]float32{0.9643,0.07584},[2]float32{0.9627,0.07687},[2]float32{0.9651,0.07527},[2]float32{0.9658,0.07481},[2]float32{0.9658,0.07486},[2]float32{0.9646,0.07558},[2]float32{0.9633,0.07644},[2]float32{0.9636,0.07627},[2]float32{0.963,0.07668},[2]float32{0.961,0.07797},[2]float32{0.9625,0.077},[2]float32{0.9614,0.07775},[2]float32{0.9595,0.07893},[2]float32{0.9585,0.07964},[2]float32{0.9591,0.07925},[2]float32{0.9607,0.0782},[2]float32{0.9566,0.08085},[2]float32{0.9567,0.08081},[2]float32{0.9524,0.08361},[2]float32{0.9537,0.08276},[2]float32{0.9546,0.0822},[2]float32{0.9511,0.08447},[2]float32{0.9483,0.08632},[2]float32{0.9481,0.08642},[2]float32{0.9502,0.08508},[2]float32{0.9423,0.09027},[2]float32{0.9434,0.08949},[2]float32{0.9351,0.09494},[2]float32{0.9364,0.0941},[2]float32{0.9404,0.0915},[2]float32{0.9339,0.09577},[2]float32{0.928,0.09963},[2]float32{0.9268,0.1004},[2]float32{0.9299,0.09835},[2]float32{0.9197,0.1051},[2]float32{0.9208,0.1043},[2]float32{0.9127,0.1096},[2]float32{0.9139,0.1089},[2]float32{0.9178,0.1063},[2]float32{0.9116,0.1104},[2]float32{0.906,0.1141},[2]float32{0.9047,0.1149},[2]float32{0.9076,0.113},[2]float32{0.8968,0.1201},[2]float32{0.8985,0.119},[2]float32{0.8898,0.1247},[2]float32{0.8904,0.1243},[2]float32{0.8957,0.1208},[2]float32{0.8892,0.125},[2]float32{0.8831,0.1291},[2]float32{0.8737,0.2331},[2]float32{0.8855,0.2385},[2]float32{0.8812,0.1303},[2]float32{0.8837,0.1287},[2]float32{0.8485,0.1053},[2]float32{0.8517,0.1042},[2]float32{0.8609,0.09813},[2]float32{0.8608,0.09748},[2]float32{0.8523,0.11},[2]float32{0.8615,0.104},[2]float32{0.8707,0.098},[2]float32{0.87,0.09212},[2]float32{0.8729,0.08952},[2]float32{0.8733,0.08999},[2]float32{0.8733,0.08954},[2]float32{0.8739,0.09587},[2]float32{0.8709,0.09783},[2]float32{0.8703,0.09196},[2]float32{0.8734,0.08866},[2]float32{0.8607,0.09825},[2]float32{0.8605,0.09651},[2]float32{0.8613,0.1041},[2]float32{0.8518,0.1104},[2]float32{0.8512,0.1045},[2]float32{0.8476,0.1047},[2]float32{0.8483,0.1064},[2]float32{0.8482,0.1055},[2]float32{0.8489,0.1122},[2]float32{0.9565,0.03469},[2]float32{0.9573,0.03487},[2]float32{0.9571,0.03505},[2]float32{0.9569,0.03447},[2]float32{0.958,0.04071},[2]float32{0.9578,0.04088},[2]float32{0.9588,0.04024},[2]float32{0.9581,0.0344},[2]float32{0.9601,0.03303},[2]float32{0.9608,0.0389},[2]float32{0.9626,0.03775},[2]float32{0.962,0.03185},[2]float32{0.9621,0.03172},[2]float32{0.9621,0.02986},[2]float32{0.9627,0.03763},[2]float32{0.9617,0.03833},[2]float32{0.9611,0.03243},[2]float32{0.961,0.03123},[2]float32{0.9591,0.03374},[2]float32{0.959,0.03329},[2]float32{0.9597,0.03961},[2]float32{0.9602,0.03299},[2]float32{0.9588,0.03395},[2]float32{0.9587,0.03209},[2]float32{0.9608,0.03889},[2]float32{0.9593,0.03985},[2]float32{0.9567,0.04158},[2]float32{0.9561,0.03568},[2]float32{0.9553,0.03494},[2]float32{0.9537,0.03728},[2]float32{0.9536,0.03683},[2]float32{0.9543,0.04315},[2]float32{0.9533,0.04383},[2]float32{0.9526,0.03799},[2]float32{0.9511,0.03821},[2]float32{0.954,0.03708},[2]float32{0.9538,0.03649},[2]float32{0.9547,0.04291},[2]float32{0.9572,0.04122},[2]float32{0.9566,0.03538},[2]float32{0.9591,0.03374},[2]float32{0.9597,0.03962},[2]float32{0.9539,0.03715},[2]float32{0.9498,0.0398},[2]float32{0.9498,0.03795},[2]float32{0.9545,0.04305},[2]float32{0.9504,0.04569},[2]float32{0.9454,0.049},[2]float32{0.9448,0.04312},[2]float32{0.9428,0.04312},[2]float32{0.9418,0.04503},[2]float32{0.9418,0.04459},[2]float32{0.9425,0.05089},[2]float32{0.9426,0.05085},[2]float32{0.9419,0.04501},[2]float32{0.9394,0.04587},[2]float32{0.9457,0.04253},[2]float32{0.9455,0.04192},[2]float32{0.8853,0.2386},[2]float32{0.9464,0.04837},[2]float32{0.9512,0.04521},[2]float32{0.9505,0.03936},[2]float32{0.9537,0.03729},[2]float32{0.9543,0.04317},[2]float32{0.9404,0.04599},[2]float32{0.9324,0.05124},[2]float32{0.9323,0.04942},[2]float32{0.941,0.05188},[2]float32{0.933,0.05713},[2]float32{0.9241,0.06299},[2]float32{0.9234,0.05711},[2]float32{0.9208,0.05759},[2]float32{0.9191,0.05992},[2]float32{0.9191,0.05948},[2]float32{0.9198,0.06578},[2]float32{0.9212,0.06486},[2]float32{0.9205,0.05901},[2]float32{0.9174,0.06032},[2]float32{0.9286,0.05372},[2]float32{0.9285,0.05309},[2]float32{0.9293,0.05958},[2]float32{0.9383,0.05368},[2]float32{0.9376,0.04782},[2]float32{0.9418,0.04505},[2]float32{0.9425,0.05092},[2]float32{0.9178,0.06084},[2]float32{0.9097,0.06609},[2]float32{0.8966,0.2437},[2]float32{0.8966,0.2436},[2]float32{0.9077,0.2486},[2]float32{0.9074,0.2486},[2]float32{0.918,0.2534},[2]float32{0.9181,0.2533},[2]float32{0.9288,0.2582},[2]float32{0.9286,0.2582},[2]float32{0.9395,0.2632},[2]float32{0.9396,0.2631},[2]float32{0.9503,0.268},[2]float32{0.9491,0.2676},[2]float32{0.956,0.2707},[2]float32{0.9562,0.2706},[2]float32{0.9617,0.2731},[2]float32{0.9607,0.2728},[2]float32{0.964,0.2743},[2]float32{0.9643,0.2743},[2]float32{0.9669,0.2755},[2]float32{0.966,0.2752},[2]float32{0.967,0.2757},[2]float32{0.9673,0.2757},[2]float32{0.9723,0.2813},[2]float32{0.9724,0.2788},[2]float32{0.9713,0.2778},[2]float32{0.9712,0.2808},[2]float32{0.969,0.2798},[2]float32{0.9691,0.2773},[2]float32{0.9658,0.2753},[2]float32{0.9655,0.2782},[2]float32{0.9603,0.2758},[2]float32{0.9604,0.2733},[2]float32{0.9536,0.2698},[2]float32{0.953,0.2725},[2]float32{0.9431,0.268},[2]float32{0.9433,0.2656},[2]float32{0.9321,0.2601},[2]float32{0.9321,0.263},[2]float32{0.921,0.258},[2]float32{0.9212,0.2555},[2]float32{0.91,0.25},[2]float32{0.9096,0.2528},[2]float32{0.8978,0.2474},[2]float32{0.8981,0.245},[2]float32{0.886,0.2391},[2]float32{0.8855,0.2418},[2]float32{0.8729,0.2361},[2]float32{0.8734,0.2338},[2]float32{0.9096,0.06429},[2]float32{0.8608,0.2283},[2]float32{0.8601,0.2303},[2]float32{0.9184,0.06672},[2]float32{0.8732,0.2455},[2]float32{0.8678,0.2399},[2]float32{0.9104,0.07197},[2]float32{0.8624,0.2325},[2]float32{0.8859,0.2529},[2]float32{0.9015,0.07775},[2]float32{0.8823,0.2528},[2]float32{0.8982,0.2585},[2]float32{0.9009,0.07189},[2]float32{0.8966,0.2592},[2]float32{0.91,0.2638},[2]float32{0.9109,0.2657},[2]float32{0.898,0.07251},[2]float32{0.9168,0.2669},[2]float32{0.9218,0.2707},[2]float32{0.9199,0.2683},[2]float32{0.9271,0.2731},[2]float32{0.9291,0.274},[2]float32{0.8607,0.2295},[2]float32{0.8614,0.2253},[2]float32{0.8616,0.2252},[2]float32{0.8609,0.2293},[2]float32{0.8631,0.2144},[2]float32{0.8633,0.2144},[2]float32{0.8653,0.2001},[2]float32{0.8655,0.2002},[2]float32{0.8971,0.0744},[2]float32{0.897,0.07396},[2]float32{0.8977,0.08026},[2]float32{0.8994,0.07915},[2]float32{0.8988,0.07329},[2]float32{0.8957,0.07454},[2]float32{0.9065,0.06824},[2]float32{0.9064,0.06758},[2]float32{0.9071,0.0741},[2]float32{0.9156,0.06852},[2]float32{0.915,0.06265},[2]float32{0.9191,0.05993},[2]float32{0.9198,0.06581},[2]float32{0.8949,0.07579},[2]float32{0.886,0.08166},[2]float32{0.8858,0.07988},[2]float32{0.8956,0.08167},[2]float32{0.8866,0.08753},[2]float32{0.8773,0.09366},[2]float32{0.8766,0.0878},[2]float32{0.8733,0.08998},[2]float32{0.874,0.09584},[2]float32{0.8766,0.09412},[2]float32{0.8759,0.08826},[2]float32{0.8844,0.08273},[2]float32{0.8843,0.08206},[2]float32{0.885,0.0886},[2]float32{0.8938,0.08281},[2]float32{0.8932,0.07693},[2]float32{0.897,0.07442},[2]float32{0.8977,0.0803},[2]float32{0.8558,0.1414},[2]float32{0.8565,0.1465},[2]float32{0.8655,0.1406},[2]float32{0.865,0.1354},[2]float32{0.8745,0.1347},[2]float32{0.8741,0.1294},[2]float32{0.8777,0.1326},[2]float32{0.8773,0.1273},[2]float32{0.8748,0.1345},[2]float32{0.8743,0.1293},[2]float32{0.8653,0.1407},[2]float32{0.8648,0.1355},[2]float32{0.856,0.1469},[2]float32{0.8553,0.1417},[2]float32{0.8531,0.1487},[2]float32{0.8524,0.1436},[2]float32{0.9616,0.07203},[2]float32{0.9622,0.07716},[2]float32{0.9621,0.07728},[2]float32{0.9614,0.07218},[2]float32{0.963,0.07669},[2]float32{0.9623,0.07156},[2]float32{0.9648,0.0755},[2]float32{0.9642,0.0703},[2]float32{0.9663,0.07448},[2]float32{0.9659,0.06921},[2]float32{0.9665,0.0744},[2]float32{0.966,0.06912},[2]float32{0.9655,0.07505},[2]float32{0.965,0.06979},[2]float32{0.9637,0.07619},[2]float32{0.9632,0.071},[2]float32{0.9641,0.07036},[2]float32{0.9646,0.07564},[2]float32{0.9631,0.07662},[2]float32{0.9626,0.07134},[2]float32{0.9606,0.07827},[2]float32{0.9601,0.07303},[2]float32{0.9584,0.0797},[2]float32{0.9578,0.07453},[2]float32{0.9575,0.08026},[2]float32{0.9568,0.07515},[2]float32{0.959,0.07932},[2]float32{0.9583,0.07421},[2]float32{0.9614,0.0777},[2]float32{0.9608,0.07255},[2]float32{0.9637,0.07623},[2]float32{0.9631,0.07102},[2]float32{0.9578,0.07453},[2]float32{0.9582,0.07982},[2]float32{0.9542,0.08242},[2]float32{0.9538,0.07716},[2]float32{0.9493,0.08562},[2]float32{0.9488,0.08042},[2]float32{0.9466,0.0874},[2]float32{0.946,0.08225},[2]float32{0.9468,0.08728},[2]float32{0.9461,0.08217},[2]float32{0.9506,0.08481},[2]float32{0.9499,0.07968},[2]float32{0.9553,0.08173},[2]float32{0.9547,0.07656},[2]float32{0.9582,0.07983},[2]float32{0.9577,0.07459},[2]float32{0.9444,0.08332},[2]float32{0.9448,0.0886},[2]float32{0.9369,0.09379},[2]float32{0.9364,0.08856},[2]float32{0.9281,0.09955},[2]float32{0.9275,0.09438},[2]float32{0.924,0.1023},[2]float32{0.9233,0.09714},[2]float32{0.9254,0.1013},[2]float32{0.9247,0.0962},[2]float32{0.9334,0.09609},[2]float32{0.9328,0.09093},[2]float32{0.9422,0.09028},[2]float32{0.9417,0.08506},[2]float32{0.9463,0.08761},[2]float32{0.9459,0.08234},[2]float32{0.9217,0.09816},[2]float32{0.9222,0.1034},[2]float32{0.9143,0.1086},[2]float32{0.9138,0.1034},[2]float32{0.9057,0.1143},[2]float32{0.905,0.1091},[2]float32{0.9019,0.1167},[2]float32{0.9012,0.1116},[2]float32{0.9036,0.1156},[2]float32{0.9029,0.1105},[2]float32{0.9112,0.1107},[2]float32{0.9106,0.1055},[2]float32{0.9195,0.1052},[2]float32{0.919,0.09993},[2]float32{0.9236,0.1025},[2]float32{0.9231,0.09725},[2]float32{0.899,0.1131},[2]float32{0.8994,0.1184},[2]float32{0.8906,0.1241},[2]float32{0.8901,0.1189},[2]float32{0.8814,0.1302},[2]float32{0.8808,0.125},[2]float32{0.8782,0.1323},[2]float32{0.8775,0.1272},[2]float32{0.8807,0.1306},[2]float32{0.8801,0.1255},[2]float32{0.889,0.1252},[2]float32{0.8885,0.12},[2]float32{0.8977,0.1195},[2]float32{0.8972,0.1142},[2]float32{0.9015,0.117},[2]float32{0.901,0.1117},[2]float32{0.8633,0.1198},[2]float32{0.8724,0.1138},[2]float32{0.8541,0.1258},[2]float32{0.8756,0.1117},[2]float32{0.8726,0.1136},[2]float32{0.8631,0.1199},[2]float32{0.8535,0.1262},[2]float32{0.8507,0.128},[2]float32{0.9596,0.05665},[2]float32{0.9605,0.05602},[2]float32{0.9598,0.05649},[2]float32{0.9625,0.05471},[2]float32{0.9642,0.05358},[2]float32{0.9644,0.05348},[2]float32{0.9634,0.05417},[2]float32{0.9614,0.05542},[2]float32{0.961,0.0557},[2]float32{0.9584,0.05741},[2]float32{0.9625,0.05473},[2]float32{0.9561,0.05895},[2]float32{0.9551,0.05961},[2]float32{0.9565,0.05868},[2]float32{0.959,0.05701},[2]float32{0.9614,0.05543},[2]float32{0.9521,0.06153},[2]float32{0.9471,0.06482},[2]float32{0.9561,0.05889},[2]float32{0.9442,0.06669},[2]float32{0.9443,0.06663},[2]float32{0.9481,0.06414},[2]float32{0.9529,0.061},[2]float32{0.956,0.05898},[2]float32{0.9347,0.07295},[2]float32{0.9258,0.0788},[2]float32{0.9427,0.0677},[2]float32{0.9215,0.08158},[2]float32{0.923,0.08066},[2]float32{0.931,0.07537},[2]float32{0.94,0.06948},[2]float32{0.9442,0.06673},[2]float32{0.9121,0.08778},[2]float32{0.9033,0.09356},[2]float32{0.9201,0.08254},[2]float32{0.8995,0.09606},[2]float32{0.9012,0.09495},[2]float32{0.9089,0.0899},[2]float32{0.9174,0.08433},[2]float32{0.9215,0.08163},[2]float32{0.8884,0.1033},[2]float32{0.879,0.1095},[2]float32{0.8973,0.09749},[2]float32{0.8757,0.1116},[2]float32{0.8783,0.1099},[2]float32{0.8867,0.1044},[2]float32{0.8956,0.09862},[2]float32{0.8994,0.09611}},
                                                            },
                                                            Coord: &x3d.Coordinate{
                                                                CoreX3DNode: x3d.CoreX3DNode{
                                                                    USE: stringPtr("Lower_teeth_COORD"),
                                                                },
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Hair"),
                                        },
                                        Name: stringPtr("hair"),
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim___0"),
                                        },
                                        Name: stringPtr("__0"),
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim___2"),
                                        },
                                        Name: stringPtr("__2"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("__2_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("__2_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("__2_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{1.218,0.4506,0.603},[3]float32{-1.218,0.219,-0.603},[3]float32{1.154,-0.4506,0.3592}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("__2"),
                                                },
                                                Translation: &x3d.SFVec3f{-1.788, 8.405, 13.04},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("__2-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{2, 0, 1, -1},
                                                        CoordIndex: []int32{2, 0, 1, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("__2-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2548,0.6554},[2]float32{0.3007,0.651},[2]float32{0.2652,0.6384}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("__2_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim___4"),
                                        },
                                        Name: stringPtr("__4"),
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Center_lower_vermillion_lip"),
                                        },
                                        Name: stringPtr("center_lower_vermillion_lip"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Center_lower_vermillion_lip_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("center_lower_vermillion_lip_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Center_lower_vermillion_lip_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.5699,0.5402,0.1151},[3]float32{0.0,-0.5402,0.1287},[3]float32{0.6344,-0.3611,-0.1287},[3]float32{-0.5699,0.5402,0.1151},[3]float32{0.0,0.5402,0.1151},[3]float32{-0.6344,-0.3611,-0.1287}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Center_lower_vermillion_lip"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 8.315, 13.52},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Center_lower_vermillion_lip-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{2, 1, 0, -1, 1, 2, 3, -1, 4, 6, 5, -1, 5, 7, 4, -1},
                                                        CoordIndex: []int32{1, 0, 4, -1, 0, 1, 2, -1, 1, 4, 3, -1, 3, 5, 1, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Center_lower_vermillion_lip-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2441,0.6554},[2]float32{0.2548,0.6554},[2]float32{0.2557,0.6351},[2]float32{0.2652,0.6384},[2]float32{0.2557,0.6351},[2]float32{0.2548,0.6554},[2]float32{0.2441,0.6554},[2]float32{0.2652,0.6384}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Center_lower_vermillion_lip_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Chin"),
                                        },
                                        Name: stringPtr("chin"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Chin_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("chin_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Chin_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.0,-2.287,3.579},[3]float32{0.0,-0.1353,-6.353},[3]float32{3.657,-0.4253,2.123},[3]float32{3.345,0.9926,4.159},[3]float32{3.653,-0.9673,0.1176},[3]float32{5.33,0.7945,-6.311},[3]float32{0.0,1.438,6.353},[3]float32{3.006,2.287,5.134},[3]float32{4.492,-0.08641,-3.097},[3]float32{0.6344,1.617,6.096},[3]float32{-3.657,-0.4253,2.123},[3]float32{-3.345,0.9926,4.159},[3]float32{0.0,0.481,5.272},[3]float32{-5.33,0.7945,-6.311},[3]float32{-4.492,-0.08641,-3.097},[3]float32{0.0,-0.5988,-3.408},[3]float32{0.0,-2.111,1.781},[3]float32{-3.653,-0.9673,0.1176},[3]float32{-3.006,2.287,5.134},[3]float32{-0.6344,1.617,6.096}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Chin"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 6.337, 7.3},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Chin-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 7, 8, -1, 0, 8, 1, -1, 2, 3, 4, -1, 9, 10, 5, -1, 5, 6, 9, -1, 12, 14, 1, -1, 12, 1, 8, -1, 2, 4, 13, -1, 6, 5, 4, -1, 4, 3, 6, -1, 14, 11, 1, -1, 15, 17, 16, -1, 15, 18, 17, -1, 19, 4, 20, -1, 21, 22, 5, -1, 5, 10, 21, -1, 23, 18, 24, -1, 23, 17, 18, -1, 19, 13, 4, -1, 22, 20, 4, -1, 4, 5, 22, -1, 24, 18, 25, -1},
                                                        CoordIndex: []int32{0, 2, 3, -1, 0, 3, 12, -1, 5, 8, 15, -1, 2, 0, 16, -1, 16, 4, 2, -1, 7, 9, 12, -1, 7, 12, 3, -1, 5, 15, 1, -1, 4, 16, 15, -1, 15, 8, 4, -1, 9, 6, 12, -1, 0, 11, 10, -1, 0, 12, 11, -1, 13, 15, 14, -1, 10, 17, 16, -1, 16, 0, 10, -1, 18, 12, 19, -1, 18, 11, 12, -1, 13, 1, 15, -1, 17, 14, 15, -1, 15, 16, 17, -1, 19, 12, 6, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Chin-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.258,0.6076},[2]float32{0.2606,0.6259},[2]float32{0.4255,0.614},[2]float32{0.4413,0.6101},[2]float32{0.4398,0.6078},[2]float32{0.4653,0.601},[2]float32{0.4571,0.6062},[2]float32{0.3118,0.6205},[2]float32{0.3041,0.631},[2]float32{0.467,0.6086},[2]float32{0.4742,0.6003},[2]float32{0.2557,0.6351},[2]float32{0.3007,0.651},[2]float32{0.4253,0.6099},[2]float32{0.2652,0.6384},[2]float32{0.258,0.6076},[2]float32{0.3118,0.6205},[2]float32{0.3041,0.631},[2]float32{0.2606,0.6259},[2]float32{0.4255,0.614},[2]float32{0.4413,0.6101},[2]float32{0.467,0.6086},[2]float32{0.4571,0.6062},[2]float32{0.3007,0.651},[2]float32{0.2652,0.6384},[2]float32{0.2557,0.6351}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Chin_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Glabella"),
                                        },
                                        Name: stringPtr("glabella"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Glabella_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("glabella_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Glabella_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.0,-1.552,-0.8705},[3]float32{1.587,-0.693,0.1291},[3]float32{0.4273,-1.569,-0.9219},[3]float32{1.516,1.569,0.2705},[3]float32{-1.587,-0.693,0.1291},[3]float32{0.0,-0.2611,0.9219},[3]float32{-0.4273,-1.569,-0.9219},[3]float32{0.0,1.499,0.9062},[3]float32{-1.516,1.569,0.2705}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Glabella"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 18.93, 15.66},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Glabella-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{2, 4, 3, -1, 3, 0, 2, -1, 0, 3, 5, -1, 5, 1, 0, -1, 8, 7, 6, -1, 6, 9, 8, -1, 7, 10, 11, -1, 11, 6, 7, -1},
                                                        CoordIndex: []int32{0, 2, 1, -1, 1, 5, 0, -1, 5, 1, 3, -1, 3, 7, 5, -1, 0, 5, 4, -1, 4, 6, 0, -1, 5, 7, 8, -1, 8, 4, 5, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Glabella-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2441,0.8403},[2]float32{0.2442,0.8727},[2]float32{0.2441,0.816},[2]float32{0.274,0.8322},[2]float32{0.2534,0.8152},[2]float32{0.2728,0.8741},[2]float32{0.274,0.8322},[2]float32{0.2441,0.8403},[2]float32{0.2441,0.816},[2]float32{0.2534,0.8152},[2]float32{0.2442,0.8727},[2]float32{0.2728,0.8741}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Glabella_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_bulbar_conjunctiva"),
                                        },
                                        Name: stringPtr("left_bulbar_conjunctiva"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_bulbar_conjunctiva_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_bulbar_conjunctiva_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_bulbar_conjunctiva_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{2.76,0.0973,-0.8547},[3]float32{-1.347,0.2034,2.463},[3]float32{1.784,0.6812,0.4382},[3]float32{-1.252,0.6995,2.521},[3]float32{-0.2686,1.16,2.287},[3]float32{2.036,-1.163,-0.4716},[3]float32{-2.858,-0.5459,2.699},[3]float32{-2.35,-1.007,2.159},[3]float32{2.632,-0.8129,-0.7113},[3]float32{1.577,1.203,0.9703},[3]float32{3.566,0.2646,-1.27},[3]float32{1.305,-1.43,0.2687},[3]float32{-1.132,-1.383,1.574},[3]float32{-2.475,0.7643,1.73},[3]float32{-0.4787,1.699,1.381},[3]float32{1.844,-1.377,-0.8846},[3]float32{-4.008,-0.6268,1.793},[3]float32{-3.316,-1.256,1.253},[3]float32{2.512,-0.9908,-1.342},[3]float32{2.026,1.768,-0.3396},[3]float32{4.008,0.4783,-2.699},[3]float32{1.039,-1.688,-0.4347},[3]float32{-1.656,-1.768,0.6681},[3]float32{1.878,-0.7347,-0.1728},[3]float32{-1.108,-0.9679,1.714},[3]float32{-0.4715,-1.396,1.218},[3]float32{1.925,1.039,0.5784}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_bulbar_conjunctiva"),
                                                },
                                                Translation: &x3d.SFVec3f{5.794, 17.61, 11.15},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_bulbar_conjunctiva-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{7, 8, 0, -1, 0, 27, 7, -1, 2, 11, 29, -1, 29, 1, 2, -1, 11, 2, 9, -1, 12, 5, 25, -1, 8, 13, 26, -1, 9, 2, 1, -1, 9, 1, 25, -1, 4, 10, 14, -1, 14, 15, 4, -1, 3, 4, 15, -1, 15, 16, 3, -1, 28, 13, 17, -1, 12, 28, 17, -1, 12, 17, 18, -1, 5, 12, 18, -1, 18, 19, 5, -1, 6, 3, 16, -1, 16, 20, 6, -1, 13, 8, 21, -1, 21, 17, 13, -1, 9, 5, 19, -1, 19, 22, 9, -1, 8, 7, 23, -1, 23, 21, 8, -1, 11, 24, 14, -1, 14, 29, 11, -1, 11, 9, 22, -1, 22, 24, 11, -1, 25, 5, 9, -1, 26, 0, 8, -1, 26, 13, 28, -1, 14, 10, 29, -1, 29, 10, 1, -1},
                                                        CoordIndex: []int32{6, 7, 1, -1, 1, 3, 6, -1, 0, 10, 26, -1, 26, 2, 0, -1, 10, 0, 8, -1, 11, 5, 23, -1, 7, 12, 24, -1, 8, 0, 2, -1, 8, 2, 23, -1, 4, 9, 19, -1, 19, 14, 4, -1, 3, 4, 14, -1, 14, 13, 3, -1, 25, 12, 22, -1, 11, 25, 22, -1, 11, 22, 21, -1, 5, 11, 21, -1, 21, 15, 5, -1, 6, 3, 13, -1, 13, 16, 6, -1, 12, 7, 17, -1, 17, 22, 12, -1, 8, 5, 15, -1, 15, 18, 8, -1, 7, 6, 16, -1, 16, 17, 7, -1, 10, 20, 19, -1, 19, 26, 10, -1, 10, 8, 18, -1, 18, 20, 10, -1, 23, 5, 8, -1, 24, 1, 7, -1, 24, 12, 25, -1, 19, 9, 26, -1, 26, 9, 2, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_bulbar_conjunctiva-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.328,0.824},[2]float32{0.3871,0.8321},[2]float32{0.4052,0.8221},[2]float32{0.3258,0.833},[2]float32{0.3487,0.8409},[2]float32{0.3916,0.7984},[2]float32{0.2983,0.8142},[2]float32{0.2981,0.8094},[2]float32{0.309,0.8013},[2]float32{0.4011,0.8053},[2]float32{0.385,0.8438},[2]float32{0.4198,0.8261},[2]float32{0.3777,0.7936},[2]float32{0.3315,0.7948},[2]float32{0.3885,0.8436},[2]float32{0.3487,0.8409},[2]float32{0.3206,0.8292},[2]float32{0.3315,0.7948},[2]float32{0.372,0.7925},[2]float32{0.3869,0.7967},[2]float32{0.2983,0.8142},[2]float32{0.309,0.8013},[2]float32{0.3966,0.8018},[2]float32{0.2981,0.8094},[2]float32{0.4198,0.8261},[2]float32{0.3889,0.8064},[2]float32{0.3322,0.8026},[2]float32{0.3307,0.8316},[2]float32{0.3442,0.7934},[2]float32{0.3915,0.8393}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_bulbar_conjunctiva_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_cheek"),
                                        },
                                        Name: stringPtr("left_cheek"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_cheek_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_cheek_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_cheek_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{5.868,0.6861,-6.977},[3]float32{5.046,6.009,-3.719},[3]float32{-0.5602,-4.076,1.16},[3]float32{-3.27,-6.054,1.778},[3]float32{-1.388,-1.337,4.299},[3]float32{-3.582,-4.636,3.814},[3]float32{2.834,4.241,1.178},[3]float32{-3.857,3.618,5.665},[3]float32{1.296,3.319,2.709},[3]float32{-0.2365,3.054,3.875},[3]float32{-0.6487,0.5238,4.348},[3]float32{-4.592,1.365,6.024},[3]float32{2.001,0.9701,1.578},[3]float32{1.819,-1.515,0.4861},[3]float32{0.1831,-3.863,-2.615},[3]float32{-3.274,-6.596,-0.2282},[3]float32{-1.597,-4.834,-6.657},[3]float32{4.101,2.99,-1.336},[3]float32{-2.758,-3.467,4.304},[3]float32{3.42,-0.01057,-3.863},[3]float32{5.261,6.596,-4.686},[3]float32{1.153,-2.865,-6.293},[3]float32{-2.435,-5.715,-3.442},[3]float32{-5.749,4.473,6.621},[3]float32{-5.809,2.217,6.673},[3]float32{-5.409,-0.2562,6.321},[3]float32{-5.868,-0.0462,6.977},[3]float32{3.128,5.574,1.136},[3]float32{4.273,5.681,-0.7129},[3]float32{-4.763,4.022,6.147},[3]float32{-2.394,3.215,4.911},[3]float32{-2.727,0.9674,5.231},[3]float32{-3.19,-1.179,5.185},[3]float32{-5.082,-1.013,6.115},[3]float32{-3.921,-3.342,4.788}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_cheek"),
                                                },
                                                Translation: &x3d.SFVec3f{6.927, 11.97, 7.646},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_cheek-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 1, 2, -1, 3, 0, 2, -1, 4, 2, 5, -1, 2, 1, 5, -1, 5, 6, 4, -1, 7, 4, 6, -1, 39, 24, 13, -1, 13, 37, 39, -1, 36, 37, 13, -1, 13, 15, 36, -1, 8, 4, 7, -1, 18, 17, 16, -1, 17, 15, 13, -1, 13, 16, 17, -1, 19, 11, 12, -1, 16, 13, 19, -1, 28, 30, 29, -1, 29, 14, 28, -1, 28, 14, 20, -1, 20, 34, 28, -1, 21, 22, 17, -1, 17, 18, 21, -1, 15, 23, 35, -1, 35, 36, 15, -1, 17, 22, 23, -1, 23, 15, 17, -1, 24, 39, 11, -1, 19, 24, 11, -1, 13, 24, 19, -1, 2, 4, 9, -1, 4, 10, 25, -1, 25, 9, 4, -1, 26, 2, 9, -1, 4, 8, 10, -1, 21, 18, 33, -1, 33, 31, 21, -1, 32, 1, 0, -1, 34, 27, 28, -1, 20, 14, 36, -1, 36, 35, 20, -1, 14, 29, 38, -1, 14, 38, 37, -1, 36, 14, 37, -1, 37, 38, 39, -1},
                                                        CoordIndex: []int32{1, 17, 19, -1, 20, 1, 19, -1, 14, 19, 13, -1, 19, 17, 13, -1, 13, 2, 14, -1, 3, 14, 2, -1, 34, 18, 4, -1, 4, 32, 34, -1, 31, 32, 4, -1, 4, 10, 31, -1, 15, 14, 3, -1, 17, 12, 13, -1, 12, 10, 4, -1, 4, 13, 12, -1, 2, 5, 3, -1, 13, 4, 2, -1, 24, 26, 25, -1, 25, 11, 24, -1, 24, 11, 7, -1, 7, 29, 24, -1, 6, 8, 12, -1, 12, 17, 6, -1, 10, 9, 30, -1, 30, 31, 10, -1, 12, 8, 9, -1, 9, 10, 12, -1, 18, 34, 5, -1, 2, 18, 5, -1, 4, 18, 2, -1, 19, 14, 21, -1, 14, 22, 16, -1, 16, 21, 14, -1, 0, 19, 21, -1, 14, 15, 22, -1, 6, 17, 28, -1, 28, 27, 6, -1, 28, 17, 1, -1, 29, 23, 24, -1, 7, 11, 31, -1, 31, 30, 7, -1, 11, 25, 33, -1, 11, 33, 32, -1, 31, 11, 32, -1, 32, 33, 34, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_cheek-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.44,0.6625},[2]float32{0.4517,0.649},[2]float32{0.4392,0.6356},[2]float32{0.4352,0.6651},[2]float32{0.4454,0.6184},[2]float32{0.4606,0.6289},[2]float32{0.464,0.6174},[2]float32{0.467,0.6086},[2]float32{0.4571,0.6062},[2]float32{0.4273,0.6228},[2]float32{0.4413,0.6101},[2]float32{0.3041,0.631},[2]float32{0.3118,0.6205},[2]float32{0.3484,0.6888},[2]float32{0.2881,0.7397},[2]float32{0.3623,0.7239},[2]float32{0.4088,0.6855},[2]float32{0.4123,0.7323},[2]float32{0.4518,0.7703},[2]float32{0.364,0.6372},[2]float32{0.301,0.7815},[2]float32{0.4279,0.7939},[2]float32{0.3993,0.7753},[2]float32{0.3692,0.7714},[2]float32{0.3226,0.6487},[2]float32{0.4255,0.614},[2]float32{0.4239,0.6387},[2]float32{0.2671,0.7978},[2]float32{0.268,0.7555},[2]float32{0.2727,0.7092},[2]float32{0.2641,0.7133},[2]float32{0.4335,0.819},[2]float32{0.4547,0.661},[2]float32{0.4572,0.8171},[2]float32{0.2845,0.7889},[2]float32{0.3287,0.7742},[2]float32{0.3232,0.7322},[2]float32{0.3144,0.6917},[2]float32{0.2788,0.6949},[2]float32{0.3007,0.651}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_cheek_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_dorsum"),
                                        },
                                        Name: stringPtr("left_dorsum"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_dorsum_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_dorsum_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_dorsum_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-0.2793,2.722,-0.1346},[3]float32{-0.471,0.1584,-0.08532},[3]float32{-0.25,-2.447,0.6076},[3]float32{0.471,1.797,-0.6076},[3]float32{0.4116,-0.459,-0.556},[3]float32{0.352,-2.722,-0.252}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_dorsum"),
                                                },
                                                Translation: &x3d.SFVec3f{0.7065, 14.64, 14.87},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_dorsum-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{3, 0, 1, -1, 1, 4, 3, -1, 5, 4, 1, -1, 1, 2, 5, -1},
                                                        CoordIndex: []int32{3, 0, 1, -1, 1, 4, 3, -1, 5, 4, 1, -1, 1, 2, 5, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_dorsum-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2534,0.8152},[2]float32{0.2534,0.767},[2]float32{0.2528,0.7186},[2]float32{0.2671,0.7978},[2]float32{0.268,0.7555},[2]float32{0.2641,0.7133}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_dorsum_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_ear"),
                                        },
                                        Name: stringPtr("left_ear"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_ear_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_ear_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_ear_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{1.104,-2.879,-0.3646},[3]float32{1.92,-0.7197,-2.765},[3]float32{0.3083,-3.342,-0.3477},[3]float32{1.674,4.039,0.222},[3]float32{2.14,2.313,-2.716},[3]float32{0.349,2.504,-0.3477},[3]float32{-2.14,-4.039,2.765},[3]float32{-0.2989,2.568,1.943}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_ear"),
                                                },
                                                Translation: &x3d.SFVec3f{12.49, 15.99, 1.017},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_ear-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 1, 2, -1, 4, 5, 3, -1, 3, 1, 4, -1, 1, 3, 2, -1, 2, 7, 6, -1, 6, 0, 2, -1, 5, 7, 2, -1, 2, 3, 5, -1},
                                                        CoordIndex: []int32{6, 2, 0, -1, 5, 4, 1, -1, 1, 2, 5, -1, 2, 1, 0, -1, 0, 3, 7, -1, 7, 6, 0, -1, 4, 3, 0, -1, 0, 1, 4, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_ear-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.4392,0.6356},[2]float32{0.4239,0.6387},[2]float32{0.4239,0.6408},[2]float32{0.412,0.6504},[2]float32{0.4239,0.6648},[2]float32{0.4123,0.664},[2]float32{0.4352,0.6651},[2]float32{0.4267,0.6717}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_ear_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_eyebrow"),
                                        },
                                        Name: stringPtr("left_eyebrow"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_eyebrow_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_eyebrow_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                            CoordIndex: []int32{7, 8},
                                            Displacements: &x3d.MFVec3f{[3]float32{0.0,-0.4631,0.0},[3]float32{0.0,-0.4632,0.0}},
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_eyebrow_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-0.6206,0.2925,1.523},[3]float32{2.547,1.129,-0.8682},[3]float32{-4.175,0.9255,2.806},[3]float32{-0.6464,1.103,1.5},[3]float32{-4.104,-1.337,2.665},[3]float32{4.175,1.337,-2.599},[3]float32{-0.6118,-0.2218,1.466},[3]float32{2.366,0.3082,-0.9723},[3]float32{4.011,0.3542,-2.806}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_eyebrow"),
                                                },
                                                Translation: &x3d.SFVec3f{5.691, 19.58, 13.13},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_eyebrow-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{5, 1, 7, -1, 7, 8, 5, -1, 6, 0, 4, -1, 7, 1, 0, -1, 0, 6, 7, -1, 2, 4, 0, -1, 0, 3, 2, -1, 3, 0, 1, -1},
                                                        CoordIndex: []int32{5, 1, 7, -1, 7, 8, 5, -1, 6, 0, 4, -1, 7, 1, 0, -1, 0, 6, 7, -1, 2, 4, 0, -1, 0, 3, 2, -1, 3, 0, 1, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_eyebrow-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3395,0.8606},[2]float32{0.3992,0.8783},[2]float32{0.2728,0.8741},[2]float32{0.3391,0.876},[2]float32{0.274,0.8322},[2]float32{0.4299,0.8825},[2]float32{0.3402,0.8534},[2]float32{0.3979,0.8641},[2]float32{0.4266,0.8643}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_eyebrow_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_forehead"),
                                        },
                                        Name: stringPtr("left_forehead"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_forehead_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_forehead_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_forehead_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{2.366,-3.832,2.607},[3]float32{-1.721,-3.37,5.298},[3]float32{-0.9278,3.698,2.337},[3]float32{2.798,0.5048,1.078},[3]float32{-5.256,-3.235,6.945},[3]float32{0.1169,5.415,-1.676},[3]float32{3.513,2.123,-2.845},[3]float32{0.04584,5.238,-6.945},[3]float32{3.382,0.4603,-6.945},[3]float32{-1.306,1.607,4.614},[3]float32{-4.278,5.326,2.844},[3]float32{-4.148,6.951,-0.7431},[3]float32{-4.148,7.108,-6.945},[3]float32{-4.686,2.054,6.111},[3]float32{3.214,-6.697,1.298},[3]float32{4.876,-4.833,-1.108},[3]float32{1.586,-6.904,3.028},[3]float32{5.256,-4.053,-3.68},[3]float32{4.869,-4.024,-6.945},[3]float32{-5.136,-7.108,6.703},[3]float32{-1.607,-6.931,5.397}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_forehead"),
                                                },
                                                Translation: &x3d.SFVec3f{6.652, 27.61, 9.229},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_forehead-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{1, 9, 13, -1, 13, 4, 1, -1, 3, 0, 9, -1, 3, 2, 15, -1, 15, 2, 14, -1, 2, 16, 14, -1, 1, 20, 16, -1, 16, 2, 1, -1, 3, 15, 17, -1, 17, 6, 3, -1, 0, 3, 6, -1, 6, 5, 0, -1, 6, 17, 18, -1, 18, 8, 6, -1, 5, 6, 8, -1, 8, 7, 5, -1, 9, 0, 10, -1, 10, 13, 9, -1, 1, 2, 3, -1, 3, 9, 1, -1, 1, 4, 19, -1, 19, 20, 1, -1, 0, 5, 11, -1, 11, 10, 0, -1, 5, 7, 12, -1, 12, 11, 5, -1},
                                                        CoordIndex: []int32{1, 9, 13, -1, 13, 4, 1, -1, 3, 2, 9, -1, 3, 0, 15, -1, 15, 0, 14, -1, 0, 16, 14, -1, 1, 20, 16, -1, 16, 0, 1, -1, 3, 15, 17, -1, 17, 6, 3, -1, 2, 3, 6, -1, 6, 5, 2, -1, 6, 17, 18, -1, 18, 8, 6, -1, 5, 6, 8, -1, 8, 7, 5, -1, 9, 2, 10, -1, 10, 13, 9, -1, 1, 0, 3, -1, 3, 9, 1, -1, 1, 4, 19, -1, 19, 20, 1, -1, 2, 5, 11, -1, 11, 10, 2, -1, 5, 7, 12, -1, 12, 11, 5, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_forehead-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3563,0.9819},[2]float32{0.3371,0.9436},[2]float32{0.414,0.9365},[2]float32{0.428,0.9618},[2]float32{0.2706,0.9459},[2]float32{0.3807,0.9869},[2]float32{0.434,0.9653},[2]float32{0.3786,0.9951},[2]float32{0.4425,0.9551},[2]float32{0.3372,0.9707},[2]float32{0.3002,0.9788},[2]float32{0.3015,0.9807},[2]float32{0.3016,0.9833},[2]float32{0.2804,0.9652},[2]float32{0.4299,0.8825},[2]float32{0.4655,0.9081},[2]float32{0.3992,0.8783},[2]float32{0.4676,0.8967},[2]float32{0.465,0.9097},[2]float32{0.2728,0.8741},[2]float32{0.3391,0.876}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_forehead_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_lower_eyelid"),
                                        },
                                        Name: stringPtr("left_lower_eyelid"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_lower_eyelid_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_lower_eyelid_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                            CoordIndex: []int32{0, 1, 2, 3, 4, 10, 11, 12},
                                            Displacements: &x3d.MFVec3f{[3]float32{0.0,0.6387,0.7019},[3]float32{0.0,0.3839,0.263},[3]float32{0.0,0.499,0.4721},[3]float32{0.0,0.7235,0.3988},[3]float32{0.0,0.6387,0.398},[3]float32{0.0,0.6386,0.399},[3]float32{0.0,-0.078,0.0},[3]float32{0.0,-0.078,0.0}},
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_lower_eyelid_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{1.719,-0.0007944,-0.6346},[3]float32{-2.666,0.1549,1.996},[3]float32{2.315,0.3494,-0.8744},[3]float32{0.989,-0.2676,0.1056},[3]float32{-1.449,-0.2205,1.411},[3]float32{3.651,-0.24,-2.494},[3]float32{-3.04,-0.8628,1.994},[3]float32{2.113,-1.162,-0.9625},[3]float32{0.5806,-1.427,0.2034},[3]float32{-1.577,-1.266,1.24},[3]float32{-0.7878,-0.2335,1.055},[3]float32{3.25,1.427,-1.433},[3]float32{3.946,1.094,-2.536},[3]float32{-3.174,0.6164,2.536},[3]float32{-3.946,-0.4586,2.476}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_lower_eyelid"),
                                                },
                                                Translation: &x3d.SFVec3f{6.11, 16.45, 11.32},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_lower_eyelid-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{8, 0, 10, -1, 10, 9, 8, -1, 0, 8, 7, -1, 7, 2, 0, -1, 13, 14, 6, -1, 6, 3, 13, -1, 2, 7, 5, -1, 5, 4, 2, -1, 11, 4, 5, -1, 5, 12, 11, -1, 1, 3, 6, -1, 6, 9, 1, -1, 10, 1, 9, -1},
                                                        CoordIndex: []int32{8, 3, 10, -1, 10, 9, 8, -1, 3, 8, 7, -1, 7, 0, 3, -1, 13, 14, 6, -1, 6, 1, 13, -1, 0, 7, 5, -1, 5, 2, 0, -1, 11, 2, 5, -1, 5, 12, 11, -1, 4, 1, 6, -1, 6, 9, 4, -1, 10, 4, 9, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_lower_eyelid-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3777,0.7936},[2]float32{0.3315,0.7948},[2]float32{0.3916,0.7984},[2]float32{0.309,0.8013},[2]float32{0.4011,0.8053},[2]float32{0.4279,0.7939},[2]float32{0.301,0.7815},[2]float32{0.3993,0.7753},[2]float32{0.3692,0.7714},[2]float32{0.3287,0.7742},[2]float32{0.344,0.7945},[2]float32{0.4198,0.8261},[2]float32{0.4335,0.819},[2]float32{0.2981,0.8094},[2]float32{0.2845,0.7889}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_lower_eyelid_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_lower_vermillion_lip"),
                                        },
                                        Name: stringPtr("left_lower_vermillion_lip"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_lower_vermillion_lip_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_lower_vermillion_lip_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_lower_vermillion_lip_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-1.218,0.4506,0.603},[3]float32{1.218,0.219,-0.603},[3]float32{-1.154,-0.4506,0.3592}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_lower_vermillion_lip"),
                                                },
                                                Translation: &x3d.SFVec3f{1.788, 8.405, 13.04},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_lower_vermillion_lip-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{2, 1, 0, -1},
                                                        CoordIndex: []int32{2, 1, 0, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_lower_vermillion_lip-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2548,0.6554},[2]float32{0.3007,0.651},[2]float32{0.2652,0.6384}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_lower_vermillion_lip_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_nasolabial_cheek"),
                                        },
                                        Name: stringPtr("left_nasolabial_cheek"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_nasolabial_cheek_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_nasolabial_cheek_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_nasolabial_cheek_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-0.8548,0.741,0.5666},[3]float32{-0.9852,-0.962,1.035},[3]float32{0.9852,-1.648,-1.094},[3]float32{-0.5035,1.438,0.4388},[3]float32{-0.9626,1.648,1.094},[3]float32{-0.1761,0.6814,0.2329}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_nasolabial_cheek"),
                                                },
                                                Translation: &x3d.SFVec3f{2.021, 10.27, 13.53},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_nasolabial_cheek-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 3, 4, -1, 3, 0, 5, -1, 5, 0, 1, -1, 1, 2, 5, -1},
                                                        CoordIndex: []int32{0, 3, 4, -1, 3, 0, 5, -1, 5, 0, 1, -1, 1, 2, 5, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_nasolabial_cheek-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2661,0.696},[2]float32{0.2636,0.664},[2]float32{0.3007,0.651},[2]float32{0.2727,0.7092},[2]float32{0.2641,0.7133},[2]float32{0.2788,0.6949}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_nasolabial_cheek_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_nostril"),
                                        },
                                        Name: stringPtr("left_nostril"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_nostril_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_nostril_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_nostril_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-0.2923,0.2585,0.9483},[3]float32{-0.398,-0.9732,0.1131},[3]float32{0.398,-0.209,-0.9483},[3]float32{-0.3119,0.9732,0.439},[3]float32{0.2902,0.6978,-0.4206}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_nostril"),
                                                },
                                                Translation: &x3d.SFVec3f{0.7684, 11.22, 15.04},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_nostril-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 2, 3, -1, 1, 2, 0, -1, 4, 3, 2, -1},
                                                        CoordIndex: []int32{0, 2, 3, -1, 1, 2, 0, -1, 4, 3, 2, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_nostril-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2538,0.7051},[2]float32{0.2511,0.6816},[2]float32{0.2661,0.696},[2]float32{0.2528,0.7186},[2]float32{0.2641,0.7133}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_nostril_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_pupil"),
                                        },
                                        Name: stringPtr("left_pupil"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_pupil_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_pupil_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_pupil_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-0.4761,0.63,0.6933},[3]float32{0.8417,-0.7176,-0.6485},[3]float32{-0.4665,-0.8077,0.1079},[3]float32{0.8447,0.7457,-0.2465},[3]float32{-1.612,0.3169,1.289},[3]float32{1.518,0.7946,-0.736},[3]float32{-1.517,0.8129,1.347},[3]float32{-0.5339,1.273,1.112},[3]float32{1.311,1.316,-0.204},[3]float32{1.04,-1.316,-0.9056},[3]float32{1.612,-0.6212,-1.347},[3]float32{-1.373,-0.8544,0.5399},[3]float32{-0.7368,-1.282,0.04415}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_pupil"),
                                                },
                                                Translation: &x3d.SFVec3f{6.059, 17.5, 12.33},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_pupil-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{4, 0, 7, -1, 7, 6, 4, -1, 7, 0, 3, -1, 3, 8, 7, -1, 12, 9, 1, -1, 1, 2, 12, -1, 10, 1, 9, -1, 5, 3, 1, -1, 1, 10, 5, -1, 0, 4, 11, -1, 11, 2, 0, -1, 2, 11, 12, -1, 3, 5, 8, -1, 0, 2, 1, -1, 1, 3, 0, -1},
                                                        CoordIndex: []int32{4, 0, 7, -1, 7, 6, 4, -1, 7, 0, 3, -1, 3, 8, 7, -1, 12, 9, 1, -1, 1, 2, 12, -1, 10, 1, 9, -1, 5, 3, 1, -1, 1, 10, 5, -1, 0, 4, 11, -1, 11, 2, 0, -1, 2, 11, 12, -1, 3, 5, 8, -1, 0, 2, 1, -1, 1, 3, 0, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_pupil-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3496,0.8297},[2]float32{0.3746,0.8042},[2]float32{0.3491,0.8029},[2]float32{0.3744,0.8314},[2]float32{0.328,0.824},[2]float32{0.3871,0.8321},[2]float32{0.3258,0.833},[2]float32{0.3487,0.8409},[2]float32{0.385,0.8438},[2]float32{0.3777,0.7936},[2]float32{0.3889,0.8064},[2]float32{0.3322,0.8026},[2]float32{0.3442,0.7934}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_pupil_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_temple"),
                                        },
                                        Name: stringPtr("left_temple"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_temple_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_temple_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                            CoordIndex: []int32{8, 11},
                                            Displacements: &x3d.MFVec3f{[3]float32{0.0,-0.4529,0.0},[3]float32{0.0,-0.077,0.0}},
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_temple_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-0.312,-0.6258,2.224},[3]float32{-1.079,0.3506,4.121},[3]float32{0.5824,2.214,1.716},[3]float32{0.9631,2.994,-0.8569},[3]float32{0.5756,3.023,-4.121},[3]float32{0.3971,-0.687,1.044},[3]float32{1.042,-0.4888,-3.649},[3]float32{1.005,-0.6065,-1.903},[3]float32{-1.243,-0.6321,3.914},[3]float32{1.028,-2.588,-2.479},[3]float32{1.243,-2.002,-3.446},[3]float32{-0.8897,-3.023,2.376},[3]float32{0.2546,-2.916,0.5272}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_temple"),
                                                },
                                                Translation: &x3d.SFVec3f{10.95, 20.56, 6.406},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_temple-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 4, 5, -1, 5, 6, 0, -1, 1, 13, 15, -1, 15, 7, 1, -1, 1, 3, 2, -1, 2, 10, 1, -1, 3, 1, 7, -1, 8, 9, 4, -1, 4, 0, 8, -1, 4, 11, 12, -1, 12, 5, 4, -1, 14, 11, 4, -1, 4, 9, 14, -1},
                                                        CoordIndex: []int32{9, 7, 5, -1, 5, 12, 9, -1, 0, 11, 12, -1, 12, 5, 0, -1, 0, 2, 1, -1, 1, 8, 0, -1, 2, 0, 5, -1, 10, 6, 7, -1, 7, 9, 10, -1, 7, 3, 2, -1, 2, 5, 7, -1, 4, 3, 7, -1, 7, 6, 4, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_temple-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.44,0.6625},[2]float32{0.4455,0.863},[2]float32{0.4299,0.8825},[2]float32{0.4655,0.9081},[2]float32{0.4428,0.6714},[2]float32{0.4573,0.671},[2]float32{0.4547,0.661},[2]float32{0.462,0.8557},[2]float32{0.4352,0.6651},[2]float32{0.4342,0.6719},[2]float32{0.4266,0.8643},[2]float32{0.4479,0.6875},[2]float32{0.4606,0.684},[2]float32{0.4335,0.819},[2]float32{0.4319,0.6876},[2]float32{0.4572,0.8171}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_temple_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_upper_cutaneous_lip"),
                                        },
                                        Name: stringPtr("left_upper_cutaneous_lip"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_upper_cutaneous_lip_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_upper_cutaneous_lip_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_upper_cutaneous_lip_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.398,0.8515,-0.5307},[3]float32{0.2676,-0.8515,-0.06256},[3]float32{-0.398,0.08738,0.5307},[3]float32{-0.1985,-0.7812,0.2164}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_upper_cutaneous_lip"),
                                                },
                                                Translation: &x3d.SFVec3f{0.7684, 10.16, 14.63},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_upper_cutaneous_lip-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{2, 3, 1, -1, 1, 0, 2, -1},
                                                        CoordIndex: []int32{2, 3, 1, -1, 1, 0, 2, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_upper_cutaneous_lip-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2661,0.696},[2]float32{0.2636,0.664},[2]float32{0.2511,0.6816},[2]float32{0.2548,0.6653}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_upper_cutaneous_lip_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_upper_eyelid"),
                                        },
                                        Name: stringPtr("left_upper_eyelid"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_upper_eyelid_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_upper_eyelid_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                            CoordIndex: []int32{1, 3, 4, 5, 6, 10, 12},
                                            Displacements: &x3d.MFVec3f{[3]float32{0.0,-0.5962,0.0},[3]float32{0.0,-0.7726,-0.115},[3]float32{0.0,-0.7324,0.0},[3]float32{0.0,-0.0775,0.0},[3]float32{0.0,-0.463,0.0},[3]float32{0.0,-0.464,0.0},[3]float32{0.0,-0.0776,0.0}},
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_upper_eyelid_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-3.944,0.2777,3.581},[3]float32{-0.9888,0.3455,1.465},[3]float32{-0.4509,1.393,2.381},[3]float32{-0.005327,0.806,1.231},[3]float32{1.84,0.849,-0.08585},[3]float32{3.829,-0.08937,-2.326},[3]float32{2.527,1.923,-0.05675},[3]float32{-4.303,-0.6947,2.247},[3]float32{5.103,1.975,-3.581},[3]float32{-5.103,-0.5987,2.53},[3]float32{4.172,1.969,-1.891},[3]float32{-4.353,-1.523,2.057},[3]float32{4.525,-0.4223,-3.429},[3]float32{-2.594,-0.8999,1.643},[3]float32{-3.366,-1.975,1.583}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_upper_eyelid"),
                                                },
                                                Translation: &x3d.SFVec3f{5.53, 17.96, 12.21},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_upper_eyelid-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{2, 1, 0, -1, 4, 1, 5, -1, 5, 3, 4, -1, 5, 1, 2, -1, 2, 0, 6, -1, 6, 0, 9, -1, 11, 13, 8, -1, 8, 15, 11, -1, 3, 8, 13, -1, 13, 4, 3, -1, 0, 12, 9, -1, 10, 12, 14, -1, 7, 10, 14, -1, 14, 16, 7, -1},
                                                        CoordIndex: []int32{1, 2, 0, -1, 6, 2, 3, -1, 3, 4, 6, -1, 3, 2, 1, -1, 1, 0, 13, -1, 13, 0, 7, -1, 8, 10, 5, -1, 5, 12, 8, -1, 4, 5, 10, -1, 10, 6, 4, -1, 0, 9, 7, -1, 7, 9, 11, -1, 13, 7, 11, -1, 11, 14, 13, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_upper_eyelid-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.274,0.8322},[2]float32{0.3402,0.8534},[2]float32{0.3285,0.8323},[2]float32{0.3831,0.8437},[2]float32{0.3979,0.8641},[2]float32{0.3487,0.8409},[2]float32{0.2983,0.8142},[2]float32{0.2981,0.8094},[2]float32{0.4198,0.8261},[2]float32{0.2678,0.8154},[2]float32{0.2677,0.8134},[2]float32{0.4455,0.863},[2]float32{0.2534,0.8152},[2]float32{0.4266,0.8643},[2]float32{0.2671,0.7978},[2]float32{0.4335,0.819},[2]float32{0.2845,0.7889}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_upper_eyelid_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_upper_vermillion_lip"),
                                        },
                                        Name: stringPtr("left_upper_vermillion_lip"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_upper_vermillion_lip_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("left_upper_vermillion_lip_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Left_upper_vermillion_lip_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{1.218,-0.3781,-1.204},[3]float32{-0.7521,0.3078,0.925},[3]float32{-1.218,0.3781,1.204},[3]float32{-1.218,-0.1506,0.4455}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Left_upper_vermillion_lip"),
                                                },
                                                Translation: &x3d.SFVec3f{1.788, 9.002, 13.64},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Left_upper_vermillion_lip-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 1, 3, -1, 1, 2, 3, -1},
                                                        CoordIndex: []int32{0, 1, 3, -1, 1, 2, 3, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Left_upper_vermillion_lip-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3007,0.651},[2]float32{0.2636,0.664},[2]float32{0.2548,0.6653},[2]float32{0.2548,0.6553}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Left_upper_vermillion_lip_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Left_upper_vermillion_lip001"),
                                        },
                                        Name: stringPtr("left_upper_vermillion_lip001"),
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Mid_forehead"),
                                        },
                                        Name: stringPtr("mid_forehead"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Mid_forehead_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("mid_forehead_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Mid_forehead_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.0,5.541,2.824},[3]float32{1.396,-3.453,6.748},[3]float32{2.374,5.108,2.647},[3]float32{2.504,6.733,-0.9399},[3]float32{2.504,6.89,-7.142},[3]float32{1.966,1.836,5.915},[3]float32{1.516,-7.326,6.506},[3]float32{0.0,-3.452,7.111},[3]float32{0.0,-7.396,7.142},[3]float32{-1.516,-7.326,6.506},[3]float32{-1.396,-3.453,6.748},[3]float32{-2.374,5.108,2.647},[3]float32{-2.504,6.733,-0.9399},[3]float32{0.0,7.175,-0.7764},[3]float32{-2.504,6.89,-7.142},[3]float32{0.0,7.396,-7.142},[3]float32{0.0,1.906,6.344},[3]float32{-1.966,1.836,5.915}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Mid_forehead"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 27.83, 9.426},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Mid_forehead-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{10, 11, 5, -1, 5, 0, 10, -1, 6, 7, 2, -1, 2, 1, 6, -1, 7, 8, 3, -1, 3, 2, 7, -1, 1, 4, 9, -1, 9, 6, 1, -1, 4, 0, 5, -1, 5, 9, 4, -1, 13, 12, 15, -1, 15, 14, 13, -1, 17, 16, 19, -1, 19, 18, 17, -1, 18, 19, 21, -1, 21, 20, 18, -1, 16, 17, 23, -1, 23, 22, 16, -1, 22, 23, 15, -1, 15, 12, 22, -1},
                                                        CoordIndex: []int32{8, 6, 1, -1, 1, 7, 8, -1, 2, 3, 13, -1, 13, 0, 2, -1, 3, 4, 15, -1, 15, 13, 3, -1, 0, 16, 5, -1, 5, 2, 0, -1, 16, 7, 1, -1, 1, 5, 16, -1, 8, 7, 10, -1, 10, 9, 8, -1, 11, 0, 13, -1, 13, 12, 11, -1, 12, 13, 15, -1, 15, 14, 12, -1, 0, 11, 17, -1, 17, 16, 0, -1, 16, 17, 10, -1, 10, 7, 16, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Mid_forehead-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2445,0.9452},[2]float32{0.257,0.9724},[2]float32{0.2533,0.9737},[2]float32{0.2542,0.9749},[2]float32{0.2428,0.959},[2]float32{0.2706,0.9459},[2]float32{0.3002,0.9788},[2]float32{0.3015,0.9807},[2]float32{0.3016,0.9833},[2]float32{0.2804,0.9652},[2]float32{0.2442,0.8727},[2]float32{0.2728,0.8741},[2]float32{0.2445,0.9452},[2]float32{0.2442,0.8727},[2]float32{0.2728,0.8741},[2]float32{0.2706,0.9459},[2]float32{0.257,0.9724},[2]float32{0.3002,0.9788},[2]float32{0.3015,0.9807},[2]float32{0.2533,0.9737},[2]float32{0.3016,0.9833},[2]float32{0.2542,0.9749},[2]float32{0.2428,0.959},[2]float32{0.2804,0.9652}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Mid_forehead_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Mid_nasal_dorsum"),
                                        },
                                        Name: stringPtr("mid_nasal_dorsum"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Mid_nasal_dorsum_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("mid_nasal_dorsum_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Mid_nasal_dorsum_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.4273,2.576,-1.018},[3]float32{0.0,-2.334,1.018},[3]float32{0.2355,0.01204,-0.9689},[3]float32{0.4565,-2.593,-0.276},[3]float32{-0.4273,2.576,-1.018},[3]float32{0.0,2.593,-0.9668},[3]float32{0.0,0.1768,-0.8433},[3]float32{-0.2355,0.01204,-0.9689},[3]float32{-0.4565,-2.593,-0.276}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Mid_nasal_dorsum"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 14.79, 15.76},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Mid_nasal_dorsum-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{3, 2, 1, -1, 3, 0, 5, -1, 5, 0, 4, -1, 4, 6, 5, -1, 7, 9, 8, -1, 7, 11, 10, -1, 11, 13, 12, -1, 12, 10, 11, -1},
                                                        CoordIndex: []int32{0, 5, 6, -1, 0, 6, 2, -1, 2, 6, 1, -1, 1, 3, 2, -1, 4, 6, 5, -1, 4, 7, 6, -1, 7, 8, 1, -1, 1, 6, 7, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Mid_nasal_dorsum-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2496,0.7705},[2]float32{0.2441,0.7705},[2]float32{0.2441,0.816},[2]float32{0.2534,0.8152},[2]float32{0.2415,0.7261},[2]float32{0.2534,0.767},[2]float32{0.2528,0.7186},[2]float32{0.2534,0.8152},[2]float32{0.2441,0.816},[2]float32{0.2441,0.7705},[2]float32{0.2496,0.7705},[2]float32{0.2534,0.767},[2]float32{0.2415,0.7261},[2]float32{0.2528,0.7186}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Mid_nasal_dorsum_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Mid_upper_vermillion_lip"),
                                        },
                                        Name: stringPtr("mid_upper_vermillion_lip"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Mid_upper_vermillion_lip_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("mid_upper_vermillion_lip_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Mid_upper_vermillion_lip_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.5699,0.2644,0.3792},[3]float32{0.5699,-0.2644,-0.3792},[3]float32{-0.5699,-0.2644,-0.3792},[3]float32{-0.5699,0.2644,0.3792},[3]float32{0.0,0.2644,0.3792},[3]float32{0.0,-0.2644,-0.3792}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Mid_upper_vermillion_lip"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 9.116, 14.46},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Mid_upper_vermillion_lip-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{1, 3, 2, -1, 2, 0, 1, -1, 6, 5, 4, -1, 4, 7, 6, -1},
                                                        CoordIndex: []int32{4, 5, 1, -1, 1, 0, 4, -1, 4, 3, 2, -1, 2, 5, 4, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Mid_upper_vermillion_lip-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2548,0.6653},[2]float32{0.2441,0.6653},[2]float32{0.2548,0.6553},[2]float32{0.2441,0.6553},[2]float32{0.2548,0.6553},[2]float32{0.2548,0.6653},[2]float32{0.2441,0.6653},[2]float32{0.2441,0.6553}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Mid_upper_vermillion_lip_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Nasal_tip"),
                                        },
                                        Name: stringPtr("nasal_tip"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Nasal_tip_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("nasal_tip_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Nasal_tip_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.0,-1.103,-1.068},[3]float32{0.3704,-1.103,-1.072},[3]float32{0.4565,0.8434,-0.7458},[3]float32{0.4761,0.1288,-0.2364},[3]float32{0.0,0.4512,1.072},[3]float32{-0.3704,-1.103,-1.072},[3]float32{-0.4565,0.8434,-0.7458},[3]float32{0.0,1.103,0.5484},[3]float32{-0.4761,0.1288,-0.2364}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Nasal_tip"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 11.35, 16.23},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Nasal_tip-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{1, 2, 3, -1, 1, 5, 4, -1, 4, 0, 1, -1, 5, 1, 3, -1, 6, 8, 7, -1, 6, 10, 9, -1, 9, 11, 6, -1, 11, 8, 6, -1},
                                                        CoordIndex: []int32{4, 0, 1, -1, 4, 3, 2, -1, 2, 7, 4, -1, 3, 4, 1, -1, 4, 5, 0, -1, 4, 7, 6, -1, 6, 8, 4, -1, 8, 5, 4, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Nasal_tip-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2415,0.7261},[2]float32{0.2441,0.7109},[2]float32{0.2441,0.6816},[2]float32{0.2511,0.6816},[2]float32{0.2528,0.7186},[2]float32{0.2538,0.7051},[2]float32{0.2441,0.7109},[2]float32{0.2441,0.6816},[2]float32{0.2511,0.6816},[2]float32{0.2528,0.7186},[2]float32{0.2415,0.7261},[2]float32{0.2538,0.7051}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Nasal_tip_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Neck"),
                                        },
                                        Name: stringPtr("neck"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Neck_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("neck_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Neck_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{1.364,4.193,-2.856},[3]float32{0.0,4.193,-3.036},[3]float32{2.893,4.193,-2.16},[3]float32{3.969,4.193,0.1849},[3]float32{3.097,4.193,1.816},[3]float32{1.537,4.525,2.797},[3]float32{0.0,3.099,3.036},[3]float32{-1.364,4.193,-2.856},[3]float32{-2.893,4.193,-2.16},[3]float32{-3.969,4.193,0.1849},[3]float32{-3.097,4.193,1.816},[3]float32{-1.537,4.525,2.797},[3]float32{1.378,-3.566,-2.884},[3]float32{0.0,-3.437,-3.067},[3]float32{2.923,-3.023,-2.182},[3]float32{4.009,-3.081,0.1871},[3]float32{3.129,-3.839,1.835},[3]float32{0.0,-4.525,3.067},[3]float32{1.552,-4.502,2.826},[3]float32{-1.378,-3.566,-2.884},[3]float32{-2.923,-3.023,-2.182},[3]float32{-4.009,-3.081,0.1871},[3]float32{-3.129,-3.839,1.835},[3]float32{-1.552,-4.502,2.826}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Neck"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 4.213, 0.4657},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Neck-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 1, 12, -1, 12, 13, 0, -1, 1, 2, 14, -1, 14, 12, 1, -1, 2, 3, 15, -1, 15, 14, 2, -1, 3, 4, 16, -1, 16, 15, 3, -1, 5, 6, 17, -1, 17, 18, 5, -1, 4, 5, 18, -1, 18, 16, 4, -1, 19, 7, 0, -1, 0, 13, 19, -1, 20, 8, 7, -1, 7, 19, 20, -1, 21, 9, 8, -1, 8, 20, 21, -1, 22, 10, 9, -1, 9, 21, 22, -1, 17, 6, 11, -1, 11, 23, 17, -1, 23, 11, 10, -1, 10, 22, 23, -1},
                                                        CoordIndex: []int32{1, 0, 12, -1, 12, 13, 1, -1, 0, 2, 14, -1, 14, 12, 0, -1, 2, 3, 15, -1, 15, 14, 2, -1, 3, 4, 16, -1, 16, 15, 3, -1, 5, 6, 17, -1, 17, 18, 5, -1, 4, 5, 18, -1, 18, 16, 4, -1, 19, 7, 1, -1, 1, 13, 19, -1, 20, 8, 7, -1, 7, 19, 20, -1, 21, 9, 8, -1, 8, 20, 21, -1, 22, 10, 9, -1, 9, 21, 22, -1, 17, 6, 11, -1, 11, 23, 17, -1, 23, 11, 10, -1, 10, 22, 23, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Neck-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.04371,0.6512},[2]float32{0.05004,0.6512},[2]float32{0.05713,0.6512},[2]float32{0.06211,0.6512},[2]float32{0.05807,0.6512},[2]float32{0.05084,0.6529},[2]float32{0.04371,0.6456},[2]float32{0.03739,0.6512},[2]float32{0.0303,0.6512},[2]float32{0.02531,0.6512},[2]float32{0.02935,0.6512},[2]float32{0.03659,0.6529},[2]float32{0.0501,0.6113},[2]float32{0.04371,0.612},[2]float32{0.05726,0.6141},[2]float32{0.0623,0.6138},[2]float32{0.05822,0.6099},[2]float32{0.04371,0.6064},[2]float32{0.05091,0.6065},[2]float32{0.03733,0.6113},[2]float32{0.03016,0.6141},[2]float32{0.02513,0.6138},[2]float32{0.02921,0.6099},[2]float32{0.03652,0.6065}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Neck_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Occipital_scalp"),
                                        },
                                        Name: stringPtr("occipital_scalp"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Occipital_scalp_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("occipital_scalp_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Occipital_scalp_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{6.595,-7.151,-8.257},[3]float32{9.429,-11.8,3.993},[3]float32{8.282,-11.22,-0.9892},[3]float32{4.624,-11.64,-3.306},[3]float32{16.07,-2.995,5.873},[3]float32{15.82,-12.8,1.071},[3]float32{12.64,-1.285,-4.598},[3]float32{16.07,-3.083,2.316},[3]float32{10.71,-6.207,-3.224},[3]float32{8.946,-0.132,-8.392},[3]float32{8.698,-10.19,-8.675},[3]float32{6.297,5.219,-7.352},[3]float32{4.896,-9.878,-12.77},[3]float32{14.18,4.623,2.748},[3]float32{14.87,4.604,5.309},[3]float32{13.01,-7.209,-3.663},[3]float32{11.99,5.219,-3.545},[3]float32{0.0,-0.8915,-10.42},[3]float32{6.297,-0.1284,-9.196},[3]float32{14.21,4.47,4.372},[3]float32{2.98,-10.26,-5.72},[3]float32{10.1,-9.009,-1.975},[3]float32{7.409,-17.27,-8.757},[3]float32{8.44,-9.628,-3.832},[3]float32{4.999,-18.87,-2.922},[3]float32{11.97,-8.702,0.9778},[3]float32{11.23,-15.65,-1.56},[3]float32{3.584,-13.5,0.961},[3]float32{5.778,-12.67,0.2527},[3]float32{2.389,-13.11,-1.714},[3]float32{9.699,-10.52,1.837},[3]float32{11.85,-10.17,6.164},[3]float32{6.297,16.77,2.005},[3]float32{12.13,8.819,-0.9951},[3]float32{11.81,12.89,2.963},[3]float32{0.0,12.79,-5.593},[3]float32{6.297,11.97,-5.107},[3]float32{14.78,-4.967,4.122},[3]float32{9.429,-11.8,3.993},[3]float32{14.37,-8.308,4.774},[3]float32{12.02,-9.081,8.596},[3]float32{15.26,5.042,8.379},[3]float32{16.68,-2.579,7.954},[3]float32{13.63,-4.256,7.877},[3]float32{0.0,-17.31,-6.802},[3]float32{14.16,-2.229,11.05},[3]float32{14.63,-3.955,8.111},[3]float32{12.19,-3.7,12.77},[3]float32{5.31,-15.15,7.498},[3]float32{12.02,-9.081,8.596},[3]float32{12.84,-3.763,10.48},[3]float32{9.046,-12.17,7.498},[3]float32{12.8,-9.61,10.48},[3]float32{5.33,-15.13,10.8},[3]float32{8.079,-13.16,11.16},[3]float32{0.0,-16.06,10.76},[3]float32{-8.946,-0.132,-8.392},[3]float32{-6.297,5.219,-7.352},[3]float32{-11.99,5.219,-3.545},[3]float32{-12.64,-1.285,-4.598},[3]float32{0.0,5.219,-8.851},[3]float32{-6.297,-0.1284,-9.196},[3]float32{-13.01,-7.209,-3.663},[3]float32{-8.698,-10.19,-8.675},[3]float32{-4.896,-9.878,-12.77},[3]float32{0.0,-5.378,-11.66},[3]float32{-6.297,11.97,-5.107},[3]float32{-12.13,8.819,-0.9951},[3]float32{-14.78,-4.967,4.122},[3]float32{-16.07,-2.995,5.873},[3]float32{-10.71,-6.207,-3.224},[3]float32{-15.82,-12.8,1.071},[3]float32{-16.07,-3.083,2.316},[3]float32{-6.595,-7.151,-8.257},[3]float32{0.0,-7.956,-9.37},[3]float32{-14.18,4.623,2.748},[3]float32{-11.81,12.89,2.963},[3]float32{-14.21,4.47,4.372},[3]float32{-14.87,4.604,5.309},[3]float32{-15.26,5.042,8.379},[3]float32{-2.98,-10.26,-5.72},[3]float32{0.0,-12.28,-5.509},[3]float32{0.0,-14.6,-11.22},[3]float32{-7.409,-17.27,-8.757},[3]float32{-10.1,-9.009,-1.975},[3]float32{-8.44,-9.628,-3.832},[3]float32{-8.282,-11.22,-0.9892},[3]float32{-5.778,-12.67,0.2527},[3]float32{-4.624,-11.64,-3.306},[3]float32{-4.999,-18.87,-2.922},[3]float32{-9.699,-10.52,1.837},[3]float32{-9.429,-11.8,3.993},[3]float32{-3.584,-13.5,0.961},[3]float32{-11.23,-15.65,-1.56},[3]float32{-11.97,-8.702,0.9778},[3]float32{-14.37,-8.308,4.774},[3]float32{0.0,-14.56,0.6872},[3]float32{-2.389,-13.11,-1.714},[3]float32{-12.02,-9.081,8.596},[3]float32{-11.85,-10.17,6.164},[3]float32{-6.297,16.77,2.005},[3]float32{0.0,17.52,2.005},[3]float32{-9.046,-12.17,7.498},[3]float32{-5.31,-15.15,7.498},[3]float32{-12.02,-9.081,8.596},[3]float32{-9.429,-11.8,3.993},[3]float32{0.0,-15.55,7.498},[3]float32{-13.63,-4.256,7.877},[3]float32{-12.8,-9.61,10.48},[3]float32{-8.079,-13.16,11.16},[3]float32{-12.84,-3.763,10.48},[3]float32{-12.19,-3.7,12.77},[3]float32{-14.16,-2.229,11.05},[3]float32{-14.63,-3.955,8.111},[3]float32{-5.33,-15.13,10.8},[3]float32{6.083,-2.338,25.93},[3]float32{11.2,8.465,19.14},[3]float32{0.0,13.66,24.16},[3]float32{5.65,12.75,23.28},[3]float32{15.14,-3.7,12.77},[3]float32{10.26,-12.78,18.76},[3]float32{5.008,9.476,25.96},[3]float32{6.444,2.872,25.97},[3]float32{9.382,1.978,23.24},[3]float32{12.3,0.8072,18.53},[3]float32{9.871,1.835,22.39},[3]float32{9.351,-1.718,22.51},[3]float32{9.717,-2.207,21.66},[3]float32{8.342,-8.633,21.21},[3]float32{11.54,-4.435,18.7},[3]float32{9.802,-5.103,20.89},[3]float32{11.62,-5.278,19.98},[3]float32{12.87,-11.91,12.98},[3]float32{12.35,-10.52,15.83},[3]float32{13.35,-8.064,14.95},[3]float32{14.1,-0.8582,16.7},[3]float32{13.11,-9.742,16.72},[3]float32{13.82,-5.06,17.14},[3]float32{15.52,-3.763,10.48},[3]float32{10.32,-0.006923,20.53},[3]float32{17.83,-10.69,7.498},[3]float32{13.16,6.618,15.16},[3]float32{7.716,12.49,21.1},[3]float32{14.39,5.565,12.03},[3]float32{9.288,8.426,22.41},[3]float32{0.0,4.262,28.62},[3]float32{3.961,3.545,27.61},[3]float32{7.09,-2.106,25.09},[3]float32{0.0,17.84,15.38},[3]float32{6.297,17.09,15.38},[3]float32{6.297,18.12,8.31},[3]float32{6.297,15.07,19.12},[3]float32{12.03,13.36,8.31},[3]float32{11.64,11.99,14.62},[3]float32{1.971,-2.435,27.29},[3]float32{1.137,3.737,28.51},[3]float32{15.15,-4.372,7.498},[3]float32{-5.008,9.476,25.96},[3]float32{-5.65,12.75,23.28},[3]float32{0.0,9.83,27.23},[3]float32{-6.297,15.07,19.12},[3]float32{0.0,16.06,20.15},[3]float32{-15.14,-3.7,12.77},[3]float32{-14.39,5.565,12.03},[3]float32{-13.35,-8.064,14.95},[3]float32{-1.137,3.737,28.51},[3]float32{-3.961,3.545,27.61},[3]float32{-6.444,2.872,25.97},[3]float32{-7.09,-2.106,25.09},[3]float32{-9.382,1.978,23.24},[3]float32{-1.971,-2.435,27.29},[3]float32{-6.083,-2.338,25.93},[3]float32{-9.871,1.835,22.39},[3]float32{-9.351,-1.718,22.51},[3]float32{-9.717,-2.207,21.66},[3]float32{-10.32,-0.006923,20.53},[3]float32{-12.3,0.8072,18.53},[3]float32{-11.2,8.465,19.14},[3]float32{-9.288,8.426,22.41},[3]float32{-11.62,-5.278,19.98},[3]float32{-9.802,-5.103,20.89},[3]float32{-8.342,-8.633,21.21},[3]float32{-11.54,-4.435,18.7},[3]float32{-12.87,-11.91,12.98},[3]float32{-15.52,-3.763,10.48},[3]float32{-14.1,-0.8582,16.7},[3]float32{-13.82,-5.06,17.14},[3]float32{-10.26,-12.78,18.76},[3]float32{-13.11,-9.742,16.72},[3]float32{-12.35,-10.52,15.83},[3]float32{-17.83,-10.69,7.498},[3]float32{-16.68,-2.579,7.954},[3]float32{-12.03,13.36,8.31},[3]float32{-13.16,6.618,15.16},[3]float32{-11.64,11.99,14.62},[3]float32{-7.716,12.49,21.1},[3]float32{-6.297,17.09,15.38},[3]float32{-6.297,18.12,8.31},[3]float32{0.0,18.87,8.31},[3]float32{-15.15,-4.372,7.498}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Occipital_scalp"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 22.26, -9.81},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Occipital_scalp-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 3, 2, -1, 2, 1, 0, -1, 1, 6, 5, -1, 5, 4, 1, -1, 7, 8, 2, -1, 2, 3, 7, -1, 9, 10, 5, -1, 5, 6, 9, -1, 11, 12, 0, -1, 0, 1, 11, -1, 13, 11, 1, -1, 1, 4, 13, -1, 14, 79, 87, -1, 79, 15, 80, -1, 79, 14, 15, -1, 7, 17, 14, -1, 14, 16, 7, -1, 18, 17, 7, -1, 7, 19, 18, -1, 17, 18, 14, -1, 8, 7, 16, -1, 16, 20, 8, -1, 9, 6, 20, -1, 10, 9, 20, -1, 20, 21, 10, -1, 0, 12, 22, -1, 22, 12, 23, -1, 24, 22, 23, -1, 14, 18, 22, -1, 22, 24, 14, -1, 22, 18, 19, -1, 19, 0, 22, -1, 24, 23, 25, -1, 23, 83, 78, -1, 78, 25, 23, -1, 14, 24, 25, -1, 25, 15, 14, -1, 25, 78, 80, -1, 80, 15, 25, -1, 2, 6, 1, -1, 8, 20, 2, -1, 20, 6, 2, -1, 28, 27, 26, -1, 31, 30, 29, -1, 28, 32, 27, -1, 28, 35, 34, -1, 34, 33, 28, -1, 36, 33, 34, -1, 28, 33, 32, -1, 36, 38, 37, -1, 37, 38, 39, -1, 36, 40, 38, -1, 41, 44, 43, -1, 43, 42, 41, -1, 46, 45, 42, -1, 34, 35, 47, -1, 42, 45, 48, -1, 40, 47, 49, -1, 26, 27, 50, -1, 37, 33, 36, -1, 27, 37, 51, -1, 54, 53, 52, -1, 57, 56, 55, -1, 53, 37, 39, -1, 58, 51, 53, -1, 51, 37, 53, -1, 59, 44, 56, -1, 59, 43, 44, -1, 61, 60, 29, -1, 61, 62, 60, -1, 63, 36, 34, -1, 63, 34, 47, -1, 65, 76, 64, -1, 47, 35, 66, -1, 47, 66, 49, -1, 67, 64, 76, -1, 68, 67, 76, -1, 41, 40, 69, -1, 40, 49, 69, -1, 81, 83, 23, -1, 23, 70, 81, -1, 70, 71, 82, -1, 82, 81, 70, -1, 11, 70, 23, -1, 23, 12, 11, -1, 13, 71, 70, -1, 70, 11, 13, -1, 72, 73, 74, -1, 75, 74, 77, -1, 72, 74, 84, -1, 84, 74, 75, -1, 85, 86, 88, -1, 89, 75, 77, -1, 85, 88, 90, -1, 92, 74, 85, -1, 85, 91, 92, -1, 93, 94, 95, -1, 93, 95, 96, -1, 97, 74, 92, -1, 85, 93, 91, -1, 77, 74, 97, -1, 85, 90, 93, -1, 97, 98, 89, -1, 89, 77, 97, -1, 104, 103, 102, -1, 102, 105, 104, -1, 103, 107, 106, -1, 106, 108, 103, -1, 109, 105, 102, -1, 102, 110, 109, -1, 111, 108, 106, -1, 106, 112, 111, -1, 113, 103, 104, -1, 104, 114, 113, -1, 115, 107, 103, -1, 103, 113, 115, -1, 116, 118, 117, -1, 117, 120, 119, -1, 117, 119, 116, -1, 109, 121, 116, -1, 116, 122, 109, -1, 124, 123, 109, -1, 109, 122, 124, -1, 122, 116, 124, -1, 110, 125, 121, -1, 121, 109, 110, -1, 111, 125, 108, -1, 112, 126, 125, -1, 125, 111, 112, -1, 104, 127, 114, -1, 127, 128, 114, -1, 129, 128, 127, -1, 116, 129, 127, -1, 127, 124, 116, -1, 127, 104, 123, -1, 123, 124, 127, -1, 129, 130, 128, -1, 128, 130, 131, -1, 131, 132, 128, -1, 116, 119, 130, -1, 130, 129, 116, -1, 130, 119, 120, -1, 120, 131, 130, -1, 102, 103, 108, -1, 110, 102, 125, -1, 125, 102, 108, -1, 133, 135, 134, -1, 136, 138, 137, -1, 133, 134, 139, -1, 133, 141, 140, -1, 140, 142, 133, -1, 143, 140, 141, -1, 133, 139, 141, -1, 143, 145, 144, -1, 145, 146, 144, -1, 143, 144, 147, -1, 150, 149, 148, -1, 148, 151, 150, -1, 152, 149, 153, -1, 140, 154, 142, -1, 149, 155, 153, -1, 147, 156, 154, -1, 135, 157, 134, -1, 145, 143, 141, -1, 134, 158, 145, -1, 159, 161, 160, -1, 162, 164, 163, -1, 160, 146, 145, -1, 165, 160, 158, -1, 158, 160, 145, -1, 166, 163, 151, -1, 166, 151, 148, -1, 167, 138, 168, -1, 167, 168, 169, -1, 170, 140, 143, -1, 170, 154, 140, -1, 171, 173, 172, -1, 154, 174, 142, -1, 154, 156, 174, -1, 175, 172, 173, -1, 176, 172, 175, -1, 150, 177, 147, -1, 147, 177, 156, -1, 179, 178, 128, -1, 128, 132, 179, -1, 178, 179, 180, -1, 180, 181, 178, -1, 113, 114, 128, -1, 128, 178, 113, -1, 115, 113, 178, -1, 178, 181, 115, -1, 99, 100, 101, -1, 75, 182, 100, -1, 99, 183, 100, -1, 183, 75, 100, -1, 184, 185, 186, -1, 89, 182, 75, -1, 184, 187, 185, -1, 189, 188, 184, -1, 184, 100, 189, -1, 190, 191, 192, -1, 190, 193, 191, -1, 194, 189, 100, -1, 184, 188, 190, -1, 182, 194, 100, -1, 184, 190, 187, -1, 194, 182, 89, -1, 89, 98, 194, -1, 195, 198, 197, -1, 197, 196, 195, -1, 199, 200, 195, -1, 195, 196, 199, -1, 203, 202, 201, -1, 204, 197, 198, -1, 197, 206, 205, -1, 208, 207, 205, -1, 210, 209, 206, -1, 197, 204, 206, -1, 210, 206, 204, -1, 212, 198, 211, -1, 213, 212, 211, -1, 208, 215, 214, -1, 214, 207, 208, -1, 217, 216, 214, -1, 219, 218, 216, -1, 207, 220, 197, -1, 197, 205, 207, -1, 216, 222, 221, -1, 221, 219, 216, -1, 223, 221, 222, -1, 223, 224, 221, -1, 221, 224, 219, -1, 201, 225, 203, -1, 225, 226, 203, -1, 224, 227, 219, -1, 228, 230, 229, -1, 229, 224, 228, -1, 201, 229, 230, -1, 228, 231, 230, -1, 231, 201, 230, -1, 201, 227, 229, -1, 229, 227, 224, -1, 209, 205, 206, -1, 232, 233, 226, -1, 235, 202, 234, -1, 218, 219, 236, -1, 203, 226, 202, -1, 233, 234, 202, -1, 226, 233, 202, -1, 202, 235, 237, -1, 236, 237, 218, -1, 201, 202, 227, -1, 227, 202, 236, -1, 227, 236, 219, -1, 237, 199, 238, -1, 238, 199, 196, -1, 220, 238, 196, -1, 196, 197, 220, -1, 237, 239, 218, -1, 239, 237, 238, -1, 218, 239, 214, -1, 214, 216, 218, -1, 207, 214, 239, -1, 236, 202, 237, -1, 199, 237, 240, -1, 241, 200, 199, -1, 199, 240, 241, -1, 240, 237, 235, -1, 235, 242, 240, -1, 240, 242, 243, -1, 243, 241, 240, -1, 232, 226, 244, -1, 247, 246, 245, -1, 245, 248, 247, -1, 249, 246, 247, -1, 247, 250, 249, -1, 251, 253, 252, -1, 254, 248, 245, -1, 245, 256, 255, -1, 257, 256, 258, -1, 259, 255, 260, -1, 245, 255, 254, -1, 259, 254, 255, -1, 261, 262, 248, -1, 263, 262, 261, -1, 257, 258, 264, -1, 264, 265, 257, -1, 266, 264, 267, -1, 268, 267, 269, -1, 258, 256, 245, -1, 245, 270, 258, -1, 267, 268, 271, -1, 271, 272, 267, -1, 273, 272, 271, -1, 273, 271, 274, -1, 271, 268, 274, -1, 253, 251, 275, -1, 275, 251, 276, -1, 274, 268, 277, -1, 279, 274, 278, -1, 278, 280, 279, -1, 253, 280, 278, -1, 279, 280, 281, -1, 281, 280, 253, -1, 253, 278, 277, -1, 278, 274, 277, -1, 260, 255, 256, -1, 282, 276, 283, -1, 284, 285, 252, -1, 269, 286, 268, -1, 251, 252, 276, -1, 283, 252, 285, -1, 276, 252, 283, -1, 252, 287, 284, -1, 286, 269, 287, -1, 253, 277, 252, -1, 277, 286, 252, -1, 277, 268, 286, -1, 287, 288, 249, -1, 288, 246, 249, -1, 270, 245, 246, -1, 246, 288, 270, -1, 287, 269, 289, -1, 289, 288, 287, -1, 269, 267, 264, -1, 264, 289, 269, -1, 258, 289, 264, -1, 286, 287, 252, -1, 249, 290, 287, -1, 291, 290, 249, -1, 249, 250, 291, -1, 290, 292, 284, -1, 284, 287, 290, -1, 290, 291, 293, -1, 293, 292, 290, -1, 282, 294, 276, -1},
                                                        CoordIndex: []int32{16, 6, 9, -1, 9, 11, 16, -1, 11, 18, 17, -1, 17, 60, 11, -1, 15, 10, 9, -1, 9, 6, 15, -1, 12, 65, 17, -1, 17, 18, 12, -1, 36, 33, 16, -1, 16, 11, 36, -1, 35, 36, 11, -1, 11, 60, 35, -1, 37, 140, 156, -1, 140, 4, 42, -1, 140, 37, 4, -1, 15, 5, 37, -1, 37, 8, 15, -1, 7, 5, 15, -1, 15, 6, 7, -1, 5, 7, 37, -1, 10, 15, 8, -1, 8, 0, 10, -1, 12, 18, 0, -1, 65, 12, 0, -1, 0, 74, 65, -1, 16, 33, 13, -1, 13, 33, 34, -1, 19, 13, 34, -1, 37, 7, 13, -1, 13, 19, 37, -1, 13, 7, 6, -1, 6, 16, 13, -1, 19, 34, 14, -1, 34, 152, 41, -1, 41, 14, 34, -1, 37, 19, 14, -1, 14, 4, 37, -1, 14, 41, 42, -1, 42, 4, 14, -1, 9, 18, 11, -1, 10, 0, 9, -1, 0, 18, 9, -1, 0, 20, 74, -1, 81, 82, 20, -1, 0, 22, 20, -1, 0, 8, 21, -1, 21, 23, 0, -1, 2, 23, 21, -1, 0, 23, 22, -1, 2, 28, 3, -1, 3, 28, 24, -1, 2, 30, 28, -1, 1, 27, 28, -1, 28, 30, 1, -1, 2, 26, 30, -1, 21, 8, 25, -1, 30, 26, 25, -1, 30, 25, 39, -1, 74, 20, 82, -1, 3, 23, 2, -1, 20, 3, 81, -1, 96, 29, 27, -1, 44, 29, 96, -1, 29, 3, 24, -1, 44, 81, 29, -1, 81, 3, 29, -1, 24, 27, 29, -1, 24, 28, 27, -1, 22, 3, 20, -1, 22, 23, 3, -1, 26, 2, 21, -1, 26, 21, 25, -1, 37, 40, 39, -1, 25, 8, 37, -1, 25, 37, 39, -1, 31, 39, 40, -1, 1, 31, 40, -1, 1, 30, 31, -1, 30, 39, 31, -1, 150, 152, 34, -1, 34, 32, 150, -1, 32, 101, 198, -1, 198, 150, 32, -1, 36, 32, 34, -1, 34, 33, 36, -1, 35, 101, 32, -1, 32, 36, 35, -1, 1, 40, 51, -1, 96, 51, 48, -1, 1, 51, 27, -1, 27, 51, 96, -1, 49, 38, 37, -1, 106, 96, 48, -1, 49, 37, 43, -1, 54, 51, 49, -1, 49, 52, 54, -1, 50, 47, 45, -1, 50, 45, 46, -1, 53, 51, 54, -1, 49, 50, 52, -1, 48, 51, 53, -1, 49, 43, 50, -1, 53, 55, 106, -1, 106, 48, 53, -1, 58, 57, 56, -1, 56, 59, 58, -1, 57, 60, 17, -1, 17, 61, 57, -1, 62, 59, 56, -1, 56, 63, 62, -1, 64, 61, 17, -1, 17, 65, 64, -1, 66, 57, 58, -1, 58, 67, 66, -1, 35, 60, 57, -1, 57, 66, 35, -1, 68, 199, 190, -1, 190, 191, 69, -1, 190, 69, 68, -1, 62, 70, 68, -1, 68, 71, 62, -1, 72, 59, 62, -1, 62, 71, 72, -1, 71, 68, 72, -1, 63, 73, 70, -1, 70, 62, 63, -1, 64, 73, 61, -1, 65, 74, 73, -1, 73, 64, 65, -1, 58, 75, 67, -1, 75, 76, 67, -1, 77, 76, 75, -1, 68, 77, 75, -1, 75, 72, 68, -1, 75, 58, 59, -1, 59, 72, 75, -1, 77, 78, 76, -1, 76, 78, 79, -1, 79, 192, 76, -1, 68, 69, 78, -1, 78, 77, 68, -1, 78, 69, 191, -1, 191, 79, 78, -1, 56, 57, 61, -1, 63, 56, 73, -1, 73, 56, 61, -1, 73, 74, 80, -1, 81, 80, 82, -1, 73, 80, 83, -1, 73, 85, 84, -1, 84, 70, 73, -1, 86, 84, 85, -1, 73, 83, 85, -1, 86, 88, 87, -1, 88, 89, 87, -1, 86, 87, 90, -1, 91, 90, 87, -1, 87, 92, 91, -1, 86, 90, 93, -1, 84, 94, 70, -1, 90, 94, 93, -1, 90, 95, 94, -1, 74, 82, 80, -1, 88, 86, 85, -1, 80, 81, 88, -1, 96, 92, 97, -1, 44, 96, 97, -1, 97, 89, 88, -1, 44, 97, 81, -1, 81, 97, 88, -1, 89, 97, 92, -1, 89, 92, 87, -1, 83, 80, 88, -1, 83, 88, 85, -1, 93, 84, 86, -1, 93, 94, 84, -1, 68, 95, 98, -1, 94, 68, 70, -1, 94, 95, 68, -1, 99, 98, 95, -1, 91, 98, 99, -1, 91, 99, 90, -1, 90, 99, 95, -1, 197, 100, 76, -1, 76, 192, 197, -1, 100, 197, 198, -1, 198, 101, 100, -1, 66, 67, 76, -1, 76, 100, 66, -1, 35, 66, 100, -1, 100, 101, 35, -1, 91, 102, 98, -1, 96, 103, 102, -1, 91, 92, 102, -1, 92, 96, 102, -1, 104, 68, 105, -1, 106, 103, 96, -1, 104, 107, 68, -1, 109, 108, 104, -1, 104, 102, 109, -1, 110, 112, 111, -1, 110, 113, 112, -1, 114, 109, 102, -1, 104, 108, 110, -1, 103, 114, 102, -1, 104, 110, 107, -1, 114, 103, 106, -1, 106, 55, 114, -1, 117, 159, 121, -1, 121, 118, 117, -1, 151, 161, 117, -1, 117, 118, 151, -1, 119, 143, 134, -1, 155, 121, 159, -1, 121, 146, 122, -1, 147, 123, 122, -1, 154, 115, 146, -1, 121, 155, 146, -1, 154, 146, 155, -1, 155, 159, 145, -1, 154, 155, 145, -1, 147, 126, 125, -1, 125, 123, 147, -1, 127, 139, 125, -1, 124, 116, 139, -1, 123, 144, 121, -1, 121, 122, 123, -1, 139, 130, 131, -1, 131, 124, 139, -1, 128, 131, 130, -1, 128, 129, 131, -1, 131, 129, 124, -1, 134, 132, 119, -1, 132, 138, 119, -1, 129, 135, 124, -1, 120, 136, 137, -1, 137, 129, 120, -1, 134, 137, 136, -1, 120, 133, 136, -1, 133, 134, 136, -1, 134, 135, 137, -1, 137, 135, 129, -1, 115, 122, 146, -1, 140, 42, 138, -1, 152, 143, 41, -1, 116, 124, 141, -1, 119, 138, 143, -1, 42, 41, 143, -1, 138, 42, 143, -1, 143, 152, 153, -1, 141, 153, 116, -1, 134, 143, 135, -1, 135, 143, 141, -1, 135, 141, 124, -1, 153, 151, 142, -1, 142, 151, 118, -1, 144, 142, 118, -1, 118, 121, 144, -1, 153, 144, 116, -1, 144, 153, 142, -1, 116, 144, 125, -1, 125, 139, 116, -1, 123, 125, 144, -1, 141, 143, 153, -1, 151, 153, 149, -1, 148, 161, 151, -1, 151, 149, 148, -1, 149, 153, 152, -1, 152, 150, 149, -1, 149, 150, 198, -1, 198, 148, 149, -1, 140, 138, 156, -1, 117, 158, 157, -1, 157, 159, 117, -1, 160, 158, 117, -1, 117, 161, 160, -1, 162, 164, 163, -1, 165, 159, 157, -1, 157, 167, 166, -1, 168, 167, 169, -1, 170, 166, 171, -1, 157, 166, 165, -1, 170, 165, 166, -1, 165, 145, 159, -1, 170, 145, 165, -1, 168, 169, 172, -1, 172, 173, 168, -1, 174, 172, 175, -1, 176, 175, 177, -1, 169, 167, 157, -1, 157, 178, 169, -1, 175, 176, 179, -1, 179, 180, 175, -1, 181, 180, 179, -1, 181, 179, 182, -1, 179, 176, 182, -1, 164, 162, 183, -1, 183, 162, 184, -1, 182, 176, 185, -1, 187, 182, 186, -1, 186, 188, 187, -1, 164, 188, 186, -1, 187, 188, 189, -1, 189, 188, 164, -1, 164, 186, 185, -1, 186, 182, 185, -1, 171, 166, 167, -1, 190, 184, 191, -1, 192, 79, 163, -1, 177, 193, 176, -1, 162, 163, 184, -1, 191, 163, 79, -1, 184, 163, 191, -1, 163, 194, 192, -1, 193, 177, 194, -1, 164, 185, 163, -1, 185, 193, 163, -1, 185, 176, 193, -1, 194, 195, 160, -1, 195, 158, 160, -1, 178, 157, 158, -1, 158, 195, 178, -1, 194, 177, 178, -1, 178, 195, 194, -1, 177, 175, 172, -1, 172, 178, 177, -1, 169, 178, 172, -1, 193, 194, 163, -1, 160, 196, 194, -1, 148, 196, 160, -1, 160, 161, 148, -1, 196, 197, 192, -1, 192, 194, 196, -1, 196, 148, 198, -1, 198, 197, 196, -1, 190, 199, 184, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Occipital_scalp-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.9175,0.8974},[2]float32{0.9509,0.8981},[2]float32{0.9421,0.8701},[2]float32{0.924,0.8702},[2]float32{0.9824,0.8971},[2]float32{0.9824,0.8682},[2]float32{0.9541,0.8718},[2]float32{0.9147,0.8129},[2]float32{0.9437,0.8153},[2]float32{0.9638,0.8095},[2]float32{0.9824,0.809},[2]float32{0.9461,0.923},[2]float32{0.9071,0.9135},[2]float32{0.9824,0.9287},[2]float32{0.8767,0.8622},[2]float32{0.8669,0.8674},[2]float32{0.9208,0.8549},[2]float32{0.8792,0.7991},[2]float32{0.8835,0.8633},[2]float32{0.9139,0.8636},[2]float32{0.9513,0.84},[2]float32{0.9824,0.8358},[2]float32{0.8845,0.9021},[2]float32{0.888,0.931},[2]float32{0.8761,0.9036},[2]float32{0.8705,0.9018},[2]float32{0.7338,0.8385},[2]float32{0.7279,0.8339},[2]float32{0.7208,0.8401},[2]float32{0.7397,0.7767},[2]float32{0.7338,0.7681},[2]float32{0.7338,0.7727},[2]float32{0.7192,0.8201},[2]float32{0.7171,0.8352},[2]float32{0.7139,0.8364},[2]float32{0.7127,0.8419},[2]float32{0.7175,0.832},[2]float32{0.7247,0.8312},[2]float32{0.7224,0.8292},[2]float32{0.7239,0.8169},[2]float32{0.7146,0.8334},[2]float32{0.7152,0.8309},[2]float32{0.753,0.7762},[2]float32{0.7452,0.772},[2]float32{0.7409,0.7703},[2]float32{0.756,0.7661},[2]float32{0.7502,0.7748},[2]float32{0.7102,0.837},[2]float32{0.7574,0.7798},[2]float32{0.7054,0.8378},[2]float32{0.7338,0.8253},[2]float32{0.7338,0.8299},[2]float32{0.7267,0.8275},[2]float32{0.7291,0.8283},[2]float32{0.7338,0.8254},[2]float32{0.7338,0.7682},[2]float32{0.7385,0.7711},[2]float32{0.7338,0.7628},[2]float32{0.7338,0.82},[2]float32{0.7437,0.7597},[2]float32{0.7429,0.774},[2]float32{0.7484,0.7629},[2]float32{0.7505,0.778},[2]float32{0.7116,0.8233},[2]float32{0.7622,0.7806},[2]float32{0.763,0.7872},[2]float32{0.7046,0.8444},[2]float32{0.7572,0.7769},[2]float32{0.7524,0.7737},[2]float32{0.7104,0.8341},[2]float32{0.9158,0.9539},[2]float32{0.9824,0.9663},[2]float32{0.392,0.6289},[2]float32{0.4147,0.6411},[2]float32{0.4093,0.6273},[2]float32{0.3758,0.6166},[2]float32{0.7576,0.779},[2]float32{0.4093,0.6139},[2]float32{0.8544,0.902},[2]float32{0.8589,0.7975},[2]float32{0.8568,0.8668},[2]float32{0.8497,0.9637},[2]float32{0.7343,0.9872},[2]float32{0.8538,0.9345},[2]float32{0.3771,0.6213},[2]float32{0.4147,0.6411},[2]float32{0.392,0.6289},[2]float32{0.8605,0.8638},[2]float32{0.3927,0.6595},[2]float32{0.4093,0.6122},[2]float32{0.4111,0.6626},[2]float32{0.4239,0.6387},[2]float32{0.4273,0.6228},[2]float32{0.4239,0.6648},[2]float32{0.4352,0.6651},[2]float32{0.4267,0.6717},[2]float32{0.4123,0.664},[2]float32{0.4255,0.614},[2]float32{0.4253,0.6099},[2]float32{0.392,0.6289},[2]float32{0.4093,0.6273},[2]float32{0.4147,0.6411},[2]float32{0.9421,0.8701},[2]float32{0.9509,0.8981},[2]float32{0.9175,0.8974},[2]float32{0.924,0.8702},[2]float32{0.9824,0.8682},[2]float32{0.9824,0.8971},[2]float32{0.9541,0.8718},[2]float32{0.9147,0.8129},[2]float32{0.9437,0.8153},[2]float32{0.9638,0.8095},[2]float32{0.9824,0.809},[2]float32{0.9461,0.923},[2]float32{0.9071,0.9135},[2]float32{0.9824,0.9287},[2]float32{0.8767,0.8622},[2]float32{0.8589,0.7975},[2]float32{0.8605,0.8638},[2]float32{0.8669,0.8674},[2]float32{0.8568,0.8668},[2]float32{0.9208,0.8549},[2]float32{0.8792,0.7991},[2]float32{0.9139,0.8636},[2]float32{0.8835,0.8633},[2]float32{0.9513,0.84},[2]float32{0.9824,0.8358},[2]float32{0.8845,0.9021},[2]float32{0.888,0.931},[2]float32{0.8761,0.9036},[2]float32{0.8705,0.9018},[2]float32{0.8544,0.902},[2]float32{0.8538,0.9345},[2]float32{0.7208,0.8401},[2]float32{0.7279,0.8339},[2]float32{0.7338,0.8385},[2]float32{0.7338,0.7727},[2]float32{0.7338,0.7681},[2]float32{0.7397,0.7767},[2]float32{0.7192,0.8201},[2]float32{0.7139,0.8364},[2]float32{0.7171,0.8352},[2]float32{0.7127,0.8419},[2]float32{0.7175,0.832},[2]float32{0.7224,0.8292},[2]float32{0.7247,0.8312},[2]float32{0.7239,0.8169},[2]float32{0.7146,0.8334},[2]float32{0.7452,0.772},[2]float32{0.753,0.7762},[2]float32{0.7152,0.8309},[2]float32{0.7409,0.7703},[2]float32{0.7502,0.7748},[2]float32{0.756,0.7661},[2]float32{0.7102,0.837},[2]float32{0.7574,0.7798},[2]float32{0.7054,0.8378},[2]float32{0.7338,0.8253},[2]float32{0.7338,0.8299},[2]float32{0.7338,0.8254},[2]float32{0.7291,0.8283},[2]float32{0.7267,0.8275},[2]float32{0.7338,0.7628},[2]float32{0.7385,0.7711},[2]float32{0.7338,0.7682},[2]float32{0.7338,0.82},[2]float32{0.7437,0.7597},[2]float32{0.7484,0.7629},[2]float32{0.7429,0.774},[2]float32{0.7505,0.778},[2]float32{0.7116,0.8233},[2]float32{0.763,0.7872},[2]float32{0.7576,0.779},[2]float32{0.7622,0.7806},[2]float32{0.7046,0.8444},[2]float32{0.7572,0.7769},[2]float32{0.7524,0.7737},[2]float32{0.7104,0.8341},[2]float32{0.9158,0.9539},[2]float32{0.8497,0.9637},[2]float32{0.7343,0.9872},[2]float32{0.9824,0.9663},[2]float32{0.4093,0.6139},[2]float32{0.3771,0.6213},[2]float32{0.4147,0.6411},[2]float32{0.3927,0.6595},[2]float32{0.392,0.6289},[2]float32{0.4111,0.6626},[2]float32{0.4239,0.6387},[2]float32{0.4273,0.6228},[2]float32{0.4239,0.6648},[2]float32{0.4267,0.6717},[2]float32{0.4352,0.6651},[2]float32{0.4123,0.664},[2]float32{0.4255,0.614},[2]float32{0.7343,0.9169},[2]float32{0.7616,0.9147},[2]float32{0.7553,0.8982},[2]float32{0.7343,0.8968},[2]float32{0.7739,0.9327},[2]float32{0.7343,0.9365},[2]float32{0.8187,0.8433},[2]float32{0.8348,0.9045},[2]float32{0.8324,0.8647},[2]float32{0.74,0.8745},[2]float32{0.761,0.8768},[2]float32{0.7497,0.8755},[2]float32{0.777,0.8787},[2]float32{0.7647,0.8593},[2]float32{0.7596,0.8565},[2]float32{0.7438,0.8546},[2]float32{0.7343,0.8756},[2]float32{0.7372,0.8736},[2]float32{0.7405,0.8536},[2]float32{0.7808,0.8802},[2]float32{0.7786,0.8666},[2]float32{0.7875,0.8787},[2]float32{0.7821,0.8667},[2]float32{0.7952,0.9076},[2]float32{0.8011,0.8823},[2]float32{0.7745,0.9003},[2]float32{0.7939,0.8518},[2]float32{0.7845,0.8549},[2]float32{0.7731,0.8049},[2]float32{0.7979,0.8609},[2]float32{0.8185,0.8054},[2]float32{0.8439,0.8655},[2]float32{0.8131,0.8741},[2]float32{0.786,0.7876},[2]float32{0.8107,0.8538},[2]float32{0.8058,0.8252},[2]float32{0.8096,0.8166},[2]float32{0.8589,0.7975},[2]float32{0.8568,0.8668},[2]float32{0.8544,0.902},[2]float32{0.8538,0.9345},[2]float32{0.8173,0.9068},[2]float32{0.8156,0.9257},[2]float32{0.7753,0.9186},[2]float32{0.7832,0.9041},[2]float32{0.7881,0.9479},[2]float32{0.7343,0.9577},[2]float32{0.8497,0.9637},[2]float32{0.7343,0.9872},[2]float32{0.8605,0.8638},[2]float32{0.7553,0.8982},[2]float32{0.7616,0.9147},[2]float32{0.7343,0.9169},[2]float32{0.7343,0.8968},[2]float32{0.7739,0.9327},[2]float32{0.7343,0.9365},[2]float32{0.8324,0.8647},[2]float32{0.8348,0.9045},[2]float32{0.8187,0.8433},[2]float32{0.74,0.8745},[2]float32{0.7497,0.8755},[2]float32{0.761,0.8768},[2]float32{0.7647,0.8593},[2]float32{0.777,0.8787},[2]float32{0.7438,0.8546},[2]float32{0.7596,0.8565},[2]float32{0.7372,0.8736},[2]float32{0.7343,0.8756},[2]float32{0.7405,0.8536},[2]float32{0.7808,0.8802},[2]float32{0.7786,0.8666},[2]float32{0.7821,0.8667},[2]float32{0.7875,0.8787},[2]float32{0.8011,0.8823},[2]float32{0.7952,0.9076},[2]float32{0.7745,0.9003},[2]float32{0.7939,0.8518},[2]float32{0.7845,0.8549},[2]float32{0.7731,0.8049},[2]float32{0.7979,0.8609},[2]float32{0.8185,0.8054},[2]float32{0.8439,0.8655},[2]float32{0.8131,0.8741},[2]float32{0.8107,0.8538},[2]float32{0.786,0.7876},[2]float32{0.8058,0.8252},[2]float32{0.8096,0.8166},[2]float32{0.8589,0.7975},[2]float32{0.8568,0.8668},[2]float32{0.8538,0.9345},[2]float32{0.8544,0.902},[2]float32{0.8173,0.9068},[2]float32{0.8156,0.9257},[2]float32{0.7753,0.9186},[2]float32{0.7832,0.9041},[2]float32{0.7881,0.9479},[2]float32{0.7343,0.9577},[2]float32{0.8497,0.9637},[2]float32{0.7343,0.9872},[2]float32{0.8605,0.8638}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Occipital_scalp_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Philtrum"),
                                        },
                                        Name: stringPtr("philtrum"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Philtrum_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("philtrum_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Philtrum_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.3704,0.4343,0.1553},[3]float32{0.0,-0.4343,-0.1589},[3]float32{0.5699,-0.4343,-0.1589},[3]float32{-0.5699,-0.4343,-0.1589},[3]float32{-0.3704,0.4343,0.1553},[3]float32{0.0,0.4343,0.1589}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Philtrum"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 9.815, 15.0},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Philtrum-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 1, 2, -1, 2, 3, 0, -1, 6, 5, 4, -1, 4, 7, 6, -1},
                                                        CoordIndex: []int32{0, 5, 1, -1, 1, 2, 0, -1, 4, 3, 1, -1, 1, 5, 4, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Philtrum-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2511,0.6816},[2]float32{0.2441,0.6816},[2]float32{0.2441,0.6653},[2]float32{0.2548,0.6653},[2]float32{0.2441,0.6653},[2]float32{0.2548,0.6653},[2]float32{0.2511,0.6816},[2]float32{0.2441,0.6816}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Philtrum_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_bulbar_conjunctiva"),
                                        },
                                        Name: stringPtr("right_bulbar_conjunctiva"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_bulbar_conjunctiva_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_bulbar_conjunctiva_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_bulbar_conjunctiva_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-2.76,0.0973,-0.8547},[3]float32{1.347,0.2034,2.463},[3]float32{-1.784,0.6812,0.4382},[3]float32{1.252,0.6995,2.521},[3]float32{0.2686,1.16,2.287},[3]float32{-2.036,-1.163,-0.4716},[3]float32{2.858,-0.5459,2.699},[3]float32{2.35,-1.007,2.159},[3]float32{-2.632,-0.8129,-0.7113},[3]float32{-1.577,1.203,0.9703},[3]float32{-3.566,0.2646,-1.27},[3]float32{-1.305,-1.43,0.2687},[3]float32{1.132,-1.383,1.574},[3]float32{2.475,0.7643,1.73},[3]float32{0.4787,1.699,1.381},[3]float32{-1.844,-1.377,-0.8846},[3]float32{4.008,-0.6268,1.793},[3]float32{3.316,-1.256,1.253},[3]float32{-2.512,-0.9908,-1.342},[3]float32{-2.026,1.768,-0.3396},[3]float32{-4.008,0.4783,-2.699},[3]float32{-1.039,-1.688,-0.4347},[3]float32{1.656,-1.768,0.6681},[3]float32{-1.878,-0.7347,-0.1728},[3]float32{1.108,-0.9679,1.714},[3]float32{0.4715,-1.396,1.218},[3]float32{-1.925,1.039,0.5784}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_bulbar_conjunctiva"),
                                                },
                                                Translation: &x3d.SFVec3f{-5.794, 17.61, 11.15},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_bulbar_conjunctiva-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{7, 27, 0, -1, 0, 8, 7, -1, 2, 1, 29, -1, 29, 11, 2, -1, 11, 9, 2, -1, 12, 25, 5, -1, 8, 26, 13, -1, 9, 1, 2, -1, 9, 25, 1, -1, 4, 15, 14, -1, 14, 10, 4, -1, 3, 16, 15, -1, 15, 4, 3, -1, 12, 18, 17, -1, 17, 13, 28, -1, 12, 17, 28, -1, 5, 19, 18, -1, 18, 12, 5, -1, 6, 20, 16, -1, 16, 3, 6, -1, 13, 17, 21, -1, 21, 8, 13, -1, 9, 22, 19, -1, 19, 5, 9, -1, 8, 21, 23, -1, 23, 7, 8, -1, 11, 29, 14, -1, 14, 24, 11, -1, 11, 24, 22, -1, 22, 9, 11, -1, 25, 9, 5, -1, 26, 8, 0, -1, 26, 28, 13, -1, 14, 29, 10, -1, 29, 1, 10, -1},
                                                        CoordIndex: []int32{6, 3, 1, -1, 1, 7, 6, -1, 0, 2, 26, -1, 26, 10, 0, -1, 10, 8, 0, -1, 11, 23, 5, -1, 7, 24, 12, -1, 8, 2, 0, -1, 8, 23, 2, -1, 4, 14, 19, -1, 19, 9, 4, -1, 3, 13, 14, -1, 14, 4, 3, -1, 11, 21, 22, -1, 22, 12, 25, -1, 11, 22, 25, -1, 5, 15, 21, -1, 21, 11, 5, -1, 6, 16, 13, -1, 13, 3, 6, -1, 12, 22, 17, -1, 17, 7, 12, -1, 8, 18, 15, -1, 15, 5, 8, -1, 7, 17, 16, -1, 16, 6, 7, -1, 10, 26, 19, -1, 19, 20, 10, -1, 10, 20, 18, -1, 18, 8, 10, -1, 23, 8, 5, -1, 24, 7, 1, -1, 24, 25, 12, -1, 19, 26, 9, -1, 26, 2, 9, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_bulbar_conjunctiva-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.328,0.824},[2]float32{0.3871,0.8321},[2]float32{0.4052,0.8221},[2]float32{0.3258,0.833},[2]float32{0.3487,0.8409},[2]float32{0.3916,0.7984},[2]float32{0.2983,0.8142},[2]float32{0.2981,0.8094},[2]float32{0.309,0.8013},[2]float32{0.4011,0.8053},[2]float32{0.385,0.8438},[2]float32{0.4198,0.8261},[2]float32{0.3777,0.7936},[2]float32{0.3315,0.7948},[2]float32{0.3885,0.8436},[2]float32{0.3487,0.8409},[2]float32{0.3206,0.8292},[2]float32{0.3315,0.7948},[2]float32{0.372,0.7925},[2]float32{0.3869,0.7967},[2]float32{0.2983,0.8142},[2]float32{0.309,0.8013},[2]float32{0.3966,0.8018},[2]float32{0.2981,0.8094},[2]float32{0.4198,0.8261},[2]float32{0.3889,0.8064},[2]float32{0.3322,0.8026},[2]float32{0.3307,0.8316},[2]float32{0.3442,0.7934},[2]float32{0.3915,0.8393}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_bulbar_conjunctiva_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_cheek"),
                                        },
                                        Name: stringPtr("right_cheek"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_cheek_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_cheek_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_cheek_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-5.868,0.6861,-6.977},[3]float32{-5.046,6.009,-3.719},[3]float32{0.5602,-4.076,1.16},[3]float32{3.27,-6.054,1.778},[3]float32{1.388,-1.337,4.299},[3]float32{3.582,-4.636,3.814},[3]float32{-2.834,4.241,1.178},[3]float32{3.857,3.618,5.665},[3]float32{-1.296,3.319,2.709},[3]float32{0.2365,3.054,3.875},[3]float32{0.6487,0.5238,4.348},[3]float32{4.592,1.365,6.024},[3]float32{-2.001,0.9701,1.578},[3]float32{-1.819,-1.515,0.4861},[3]float32{-0.1831,-3.863,-2.615},[3]float32{3.274,-6.596,-0.2282},[3]float32{1.597,-4.834,-6.657},[3]float32{-4.101,2.99,-1.336},[3]float32{2.758,-3.467,4.304},[3]float32{-3.42,-0.01058,-3.863},[3]float32{-5.261,6.596,-4.686},[3]float32{-1.153,-2.865,-6.293},[3]float32{2.435,-5.715,-3.442},[3]float32{5.749,4.473,6.621},[3]float32{5.809,2.217,6.673},[3]float32{5.409,-0.2562,6.321},[3]float32{5.868,-0.0462,6.977},[3]float32{-3.128,5.574,1.136},[3]float32{-4.273,5.681,-0.7129},[3]float32{4.763,4.022,6.147},[3]float32{2.394,3.215,4.911},[3]float32{2.727,0.9674,5.231},[3]float32{3.19,-1.179,5.185},[3]float32{5.082,-1.013,6.115},[3]float32{3.921,-3.342,4.788}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_cheek"),
                                                },
                                                Translation: &x3d.SFVec3f{-6.927, 11.97, 7.646},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_cheek-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 1, 2, -1, 3, 1, 0, -1, 4, 5, 1, -1, 1, 5, 2, -1, 5, 4, 6, -1, 7, 6, 4, -1, 39, 37, 13, -1, 13, 24, 39, -1, 36, 15, 13, -1, 13, 37, 36, -1, 8, 7, 4, -1, 18, 16, 17, -1, 17, 16, 13, -1, 13, 15, 17, -1, 19, 12, 11, -1, 16, 19, 13, -1, 28, 14, 29, -1, 29, 30, 28, -1, 28, 34, 20, -1, 20, 14, 28, -1, 21, 18, 17, -1, 17, 22, 21, -1, 15, 36, 35, -1, 35, 23, 15, -1, 17, 15, 23, -1, 23, 22, 17, -1, 24, 11, 39, -1, 19, 11, 24, -1, 13, 19, 24, -1, 1, 9, 4, -1, 4, 9, 10, -1, 10, 25, 4, -1, 26, 9, 1, -1, 4, 25, 8, -1, 21, 31, 33, -1, 33, 18, 21, -1, 32, 0, 2, -1, 34, 28, 27, -1, 20, 35, 36, -1, 36, 14, 20, -1, 38, 29, 14, -1, 37, 38, 14, -1, 36, 37, 14, -1, 37, 39, 38, -1},
                                                        CoordIndex: []int32{1, 19, 17, -1, 20, 19, 1, -1, 14, 13, 19, -1, 19, 13, 17, -1, 13, 14, 2, -1, 3, 2, 14, -1, 34, 32, 4, -1, 4, 18, 34, -1, 31, 10, 4, -1, 4, 32, 31, -1, 15, 3, 14, -1, 17, 13, 12, -1, 12, 13, 4, -1, 4, 10, 12, -1, 2, 3, 5, -1, 13, 2, 4, -1, 24, 11, 25, -1, 25, 26, 24, -1, 24, 29, 7, -1, 7, 11, 24, -1, 6, 17, 12, -1, 12, 8, 6, -1, 10, 31, 30, -1, 30, 9, 10, -1, 12, 10, 9, -1, 9, 8, 12, -1, 18, 5, 34, -1, 2, 5, 18, -1, 4, 2, 18, -1, 19, 21, 14, -1, 14, 21, 16, -1, 16, 22, 14, -1, 0, 21, 19, -1, 14, 22, 15, -1, 6, 27, 28, -1, 28, 17, 6, -1, 28, 1, 17, -1, 29, 24, 23, -1, 7, 30, 31, -1, 31, 11, 7, -1, 33, 25, 11, -1, 32, 33, 11, -1, 31, 32, 11, -1, 32, 34, 33, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_cheek-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.44,0.6625},[2]float32{0.4392,0.6356},[2]float32{0.4517,0.649},[2]float32{0.4352,0.6651},[2]float32{0.4454,0.6184},[2]float32{0.4606,0.6289},[2]float32{0.464,0.6174},[2]float32{0.467,0.6086},[2]float32{0.4571,0.6062},[2]float32{0.4273,0.6228},[2]float32{0.4255,0.614},[2]float32{0.3041,0.631},[2]float32{0.3118,0.6205},[2]float32{0.3484,0.6888},[2]float32{0.2881,0.7397},[2]float32{0.3623,0.7239},[2]float32{0.4088,0.6855},[2]float32{0.4123,0.7323},[2]float32{0.4518,0.7703},[2]float32{0.364,0.6372},[2]float32{0.301,0.7815},[2]float32{0.4279,0.7939},[2]float32{0.3993,0.7753},[2]float32{0.3692,0.7714},[2]float32{0.3226,0.6487},[2]float32{0.4413,0.6101},[2]float32{0.4239,0.6387},[2]float32{0.2671,0.7978},[2]float32{0.268,0.7555},[2]float32{0.2727,0.7092},[2]float32{0.2641,0.7133},[2]float32{0.4335,0.819},[2]float32{0.4547,0.661},[2]float32{0.4572,0.8171},[2]float32{0.2845,0.7889},[2]float32{0.3287,0.7742},[2]float32{0.3232,0.7322},[2]float32{0.3144,0.6917},[2]float32{0.2788,0.6949},[2]float32{0.3007,0.651}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_cheek_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_dorsum"),
                                        },
                                        Name: stringPtr("right_dorsum"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_dorsum_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_dorsum_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_dorsum_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.2793,2.722,-0.1346},[3]float32{0.471,0.1584,-0.08532},[3]float32{0.25,-2.447,0.6076},[3]float32{-0.471,1.797,-0.6076},[3]float32{-0.4116,-0.459,-0.556},[3]float32{-0.352,-2.722,-0.252}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_dorsum"),
                                                },
                                                Translation: &x3d.SFVec3f{-0.7065, 14.64, 14.87},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_dorsum-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{3, 4, 1, -1, 1, 0, 3, -1, 5, 2, 1, -1, 1, 4, 5, -1},
                                                        CoordIndex: []int32{3, 4, 1, -1, 1, 0, 3, -1, 5, 2, 1, -1, 1, 4, 5, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_dorsum-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2534,0.8152},[2]float32{0.2534,0.767},[2]float32{0.2528,0.7186},[2]float32{0.2671,0.7978},[2]float32{0.268,0.7555},[2]float32{0.2641,0.7133}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_dorsum_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_ear"),
                                        },
                                        Name: stringPtr("right_ear"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_ear_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_ear_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_ear_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-1.104,-2.879,-0.3646},[3]float32{-1.92,-0.7197,-2.765},[3]float32{-0.3083,-3.342,-0.3477},[3]float32{-1.674,4.039,0.222},[3]float32{-2.14,2.313,-2.716},[3]float32{-0.349,2.504,-0.3477},[3]float32{2.14,-4.039,2.765},[3]float32{0.2989,2.568,1.943}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_ear"),
                                                },
                                                Translation: &x3d.SFVec3f{-12.49, 15.99, 1.017},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_ear-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 1, 2, -1, 5, 2, 3, -1, 3, 4, 5, -1, 2, 1, 3, -1, 1, 0, 6, -1, 6, 7, 1, -1, 4, 3, 1, -1, 1, 7, 4, -1},
                                                        CoordIndex: []int32{6, 0, 2, -1, 5, 2, 1, -1, 1, 4, 5, -1, 2, 0, 1, -1, 0, 6, 7, -1, 7, 3, 0, -1, 4, 1, 0, -1, 0, 3, 4, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_ear-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.4392,0.6356},[2]float32{0.4239,0.6408},[2]float32{0.4239,0.6387},[2]float32{0.412,0.6504},[2]float32{0.4123,0.664},[2]float32{0.4239,0.6648},[2]float32{0.4352,0.6651},[2]float32{0.4267,0.6717}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_ear_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_eyebrow"),
                                        },
                                        Name: stringPtr("right_eyebrow"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_eyebrow_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_eyebrow_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                            CoordIndex: []int32{7, 8},
                                            Displacements: &x3d.MFVec3f{[3]float32{0.0,-0.4631,0.0},[3]float32{0.0,-0.4632,0.0}},
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_eyebrow_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.6206,0.2925,1.523},[3]float32{-2.547,1.129,-0.8682},[3]float32{4.175,0.9255,2.806},[3]float32{0.6464,1.103,1.5},[3]float32{4.104,-1.337,2.665},[3]float32{-4.175,1.337,-2.599},[3]float32{0.6118,-0.2218,1.466},[3]float32{-2.366,0.3082,-0.9723},[3]float32{-4.011,0.3542,-2.806}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_eyebrow"),
                                                },
                                                Translation: &x3d.SFVec3f{-5.691, 19.58, 13.13},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_eyebrow-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{5, 8, 7, -1, 7, 1, 5, -1, 6, 4, 0, -1, 7, 6, 0, -1, 0, 1, 7, -1, 2, 3, 0, -1, 0, 4, 2, -1, 3, 1, 0, -1},
                                                        CoordIndex: []int32{5, 8, 7, -1, 7, 1, 5, -1, 6, 4, 0, -1, 7, 6, 0, -1, 0, 1, 7, -1, 2, 3, 0, -1, 0, 4, 2, -1, 3, 1, 0, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_eyebrow-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3395,0.8606},[2]float32{0.3992,0.8783},[2]float32{0.2728,0.8741},[2]float32{0.3391,0.876},[2]float32{0.274,0.8322},[2]float32{0.4299,0.8825},[2]float32{0.3402,0.8534},[2]float32{0.3979,0.8641},[2]float32{0.4266,0.8643}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_eyebrow_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_forehead"),
                                        },
                                        Name: stringPtr("right_forehead"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_forehead_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_forehead_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_forehead_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-2.366,-3.832,2.607},[3]float32{1.721,-3.37,5.298},[3]float32{0.9278,3.698,2.337},[3]float32{-2.798,0.5048,1.078},[3]float32{5.256,-3.235,6.945},[3]float32{-0.1169,5.415,-1.676},[3]float32{-3.513,2.123,-2.845},[3]float32{-0.04584,5.238,-6.945},[3]float32{-3.382,0.4603,-6.945},[3]float32{1.306,1.607,4.614},[3]float32{4.278,5.326,2.844},[3]float32{4.148,6.951,-0.7431},[3]float32{4.148,7.108,-6.945},[3]float32{4.686,2.054,6.111},[3]float32{-3.214,-6.697,1.298},[3]float32{-4.876,-4.833,-1.108},[3]float32{-1.586,-6.904,3.028},[3]float32{-5.256,-4.053,-3.68},[3]float32{-4.869,-4.024,-6.945},[3]float32{5.136,-7.108,6.703},[3]float32{1.607,-6.931,5.397}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_forehead"),
                                                },
                                                Translation: &x3d.SFVec3f{-6.652, 27.61, 9.229},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_forehead-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{1, 4, 13, -1, 13, 9, 1, -1, 3, 9, 0, -1, 3, 15, 2, -1, 15, 14, 2, -1, 2, 14, 16, -1, 1, 2, 16, -1, 16, 20, 1, -1, 3, 6, 17, -1, 17, 15, 3, -1, 0, 5, 6, -1, 6, 3, 0, -1, 6, 8, 18, -1, 18, 17, 6, -1, 5, 7, 8, -1, 8, 6, 5, -1, 9, 13, 10, -1, 10, 0, 9, -1, 1, 9, 3, -1, 3, 2, 1, -1, 1, 20, 19, -1, 19, 4, 1, -1, 0, 10, 11, -1, 11, 5, 0, -1, 5, 11, 12, -1, 12, 7, 5, -1},
                                                        CoordIndex: []int32{1, 4, 13, -1, 13, 9, 1, -1, 3, 9, 2, -1, 3, 15, 0, -1, 15, 14, 0, -1, 0, 14, 16, -1, 1, 0, 16, -1, 16, 20, 1, -1, 3, 6, 17, -1, 17, 15, 3, -1, 2, 5, 6, -1, 6, 3, 2, -1, 6, 8, 18, -1, 18, 17, 6, -1, 5, 7, 8, -1, 8, 6, 5, -1, 9, 13, 10, -1, 10, 2, 9, -1, 1, 9, 3, -1, 3, 0, 1, -1, 1, 20, 19, -1, 19, 4, 1, -1, 2, 10, 11, -1, 11, 5, 2, -1, 5, 11, 12, -1, 12, 7, 5, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_forehead-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3563,0.9819},[2]float32{0.3371,0.9436},[2]float32{0.414,0.9365},[2]float32{0.428,0.9618},[2]float32{0.2706,0.9459},[2]float32{0.3807,0.9869},[2]float32{0.434,0.9653},[2]float32{0.3786,0.9951},[2]float32{0.4425,0.9551},[2]float32{0.3372,0.9707},[2]float32{0.3002,0.9788},[2]float32{0.3015,0.9807},[2]float32{0.3016,0.9833},[2]float32{0.2804,0.9652},[2]float32{0.4299,0.8825},[2]float32{0.4655,0.9081},[2]float32{0.3992,0.8783},[2]float32{0.4676,0.8967},[2]float32{0.465,0.9097},[2]float32{0.2728,0.8741},[2]float32{0.3391,0.876}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_forehead_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_lower_eyelid"),
                                        },
                                        Name: stringPtr("right_lower_eyelid"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_lower_eyelid_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_lower_eyelid_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                            CoordIndex: []int32{0, 1, 2, 3, 4, 10, 11, 12},
                                            Displacements: &x3d.MFVec3f{[3]float32{0.0,0.6387,0.7019},[3]float32{0.0,0.3839,0.263},[3]float32{0.0,0.499,0.4721},[3]float32{0.0,0.7235,0.3988},[3]float32{0.0,0.6387,0.398},[3]float32{0.0,0.6386,0.399},[3]float32{0.0,-0.078,0.0},[3]float32{0.0,-0.078,0.0}},
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_lower_eyelid_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-1.719,-0.0007954,-0.6346},[3]float32{2.666,0.1549,1.996},[3]float32{-2.315,0.3494,-0.8744},[3]float32{-0.989,-0.2676,0.1056},[3]float32{1.449,-0.2205,1.411},[3]float32{-3.651,-0.24,-2.494},[3]float32{3.04,-0.8628,1.994},[3]float32{-2.113,-1.162,-0.9625},[3]float32{-0.5806,-1.427,0.2034},[3]float32{1.577,-1.266,1.24},[3]float32{0.7878,-0.2335,1.055},[3]float32{-3.25,1.427,-1.433},[3]float32{-3.946,1.094,-2.536},[3]float32{3.174,0.6164,2.536},[3]float32{3.946,-0.4586,2.476}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_lower_eyelid"),
                                                },
                                                Translation: &x3d.SFVec3f{-6.11, 16.45, 11.32},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_lower_eyelid-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{8, 9, 10, -1, 10, 0, 8, -1, 0, 2, 7, -1, 7, 8, 0, -1, 13, 3, 6, -1, 6, 14, 13, -1, 2, 4, 5, -1, 5, 7, 2, -1, 11, 12, 5, -1, 5, 4, 11, -1, 1, 9, 6, -1, 6, 3, 1, -1, 10, 9, 1, -1},
                                                        CoordIndex: []int32{8, 9, 10, -1, 10, 3, 8, -1, 3, 0, 7, -1, 7, 8, 3, -1, 13, 1, 6, -1, 6, 14, 13, -1, 0, 2, 5, -1, 5, 7, 0, -1, 11, 12, 5, -1, 5, 2, 11, -1, 4, 9, 6, -1, 6, 1, 4, -1, 10, 9, 4, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_lower_eyelid-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3777,0.7936},[2]float32{0.3315,0.7948},[2]float32{0.3916,0.7984},[2]float32{0.309,0.8013},[2]float32{0.4011,0.8053},[2]float32{0.4279,0.7939},[2]float32{0.301,0.7815},[2]float32{0.3993,0.7753},[2]float32{0.3692,0.7714},[2]float32{0.3287,0.7742},[2]float32{0.344,0.7945},[2]float32{0.4198,0.8261},[2]float32{0.4335,0.819},[2]float32{0.2981,0.8094},[2]float32{0.2845,0.7889}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_lower_eyelid_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_lower_vermillion_lip"),
                                        },
                                        Name: stringPtr("right_lower_vermillion_lip"),
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_nasolabial_cheek"),
                                        },
                                        Name: stringPtr("right_nasolabial_cheek"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_nasolabial_cheek_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_nasolabial_cheek_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_nasolabial_cheek_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.8548,0.741,0.5666},[3]float32{0.9852,-0.962,1.035},[3]float32{-0.9852,-1.648,-1.094},[3]float32{0.5035,1.438,0.4388},[3]float32{0.9626,1.648,1.094},[3]float32{0.1761,0.6814,0.2329}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_nasolabial_cheek"),
                                                },
                                                Translation: &x3d.SFVec3f{-2.021, 10.27, 13.53},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_nasolabial_cheek-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 4, 3, -1, 3, 5, 0, -1, 5, 2, 1, -1, 1, 0, 5, -1},
                                                        CoordIndex: []int32{0, 4, 3, -1, 3, 5, 0, -1, 5, 2, 1, -1, 1, 0, 5, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_nasolabial_cheek-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2661,0.696},[2]float32{0.2636,0.664},[2]float32{0.3007,0.651},[2]float32{0.2727,0.7092},[2]float32{0.2641,0.7133},[2]float32{0.2788,0.6949}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_nasolabial_cheek_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_nostril"),
                                        },
                                        Name: stringPtr("right_nostril"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_nostril_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_nostril_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_nostril_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.2923,0.2585,0.9483},[3]float32{0.398,-0.9732,0.1131},[3]float32{-0.398,-0.209,-0.9483},[3]float32{0.3119,0.9732,0.439},[3]float32{-0.2902,0.6978,-0.4206}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_nostril"),
                                                },
                                                Translation: &x3d.SFVec3f{-0.7684, 11.22, 15.04},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_nostril-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 3, 2, -1, 1, 0, 2, -1, 4, 2, 3, -1},
                                                        CoordIndex: []int32{0, 3, 2, -1, 1, 0, 2, -1, 4, 2, 3, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_nostril-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2538,0.7051},[2]float32{0.2511,0.6816},[2]float32{0.2661,0.696},[2]float32{0.2528,0.7186},[2]float32{0.2641,0.7133}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_nostril_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_pupil"),
                                        },
                                        Name: stringPtr("right_pupil"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_pupil_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_pupil_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_pupil_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.4761,0.63,0.6933},[3]float32{-0.8417,-0.7176,-0.6485},[3]float32{0.4665,-0.8077,0.1079},[3]float32{-0.8447,0.7457,-0.2465},[3]float32{1.612,0.3169,1.289},[3]float32{-1.518,0.7946,-0.736},[3]float32{1.517,0.8129,1.347},[3]float32{0.5339,1.273,1.112},[3]float32{-1.311,1.316,-0.204},[3]float32{-1.04,-1.316,-0.9056},[3]float32{-1.612,-0.6212,-1.347},[3]float32{1.373,-0.8544,0.5399},[3]float32{0.7368,-1.282,0.04415}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_pupil"),
                                                },
                                                Translation: &x3d.SFVec3f{-6.059, 17.5, 12.33},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_pupil-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{4, 6, 7, -1, 7, 0, 4, -1, 7, 8, 3, -1, 3, 0, 7, -1, 12, 2, 1, -1, 1, 9, 12, -1, 10, 9, 1, -1, 5, 10, 1, -1, 1, 3, 5, -1, 0, 2, 11, -1, 11, 4, 0, -1, 2, 12, 11, -1, 3, 8, 5, -1, 0, 3, 1, -1, 1, 2, 0, -1},
                                                        CoordIndex: []int32{4, 6, 7, -1, 7, 0, 4, -1, 7, 8, 3, -1, 3, 0, 7, -1, 12, 2, 1, -1, 1, 9, 12, -1, 10, 9, 1, -1, 5, 10, 1, -1, 1, 3, 5, -1, 0, 2, 11, -1, 11, 4, 0, -1, 2, 12, 11, -1, 3, 8, 5, -1, 0, 3, 1, -1, 1, 2, 0, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_pupil-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3496,0.8297},[2]float32{0.3746,0.8042},[2]float32{0.3491,0.8029},[2]float32{0.3744,0.8314},[2]float32{0.328,0.824},[2]float32{0.3871,0.8321},[2]float32{0.3258,0.833},[2]float32{0.3487,0.8409},[2]float32{0.385,0.8438},[2]float32{0.3777,0.7936},[2]float32{0.3889,0.8064},[2]float32{0.3322,0.8026},[2]float32{0.3442,0.7934}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_pupil_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_temple"),
                                        },
                                        Name: stringPtr("right_temple"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_temple_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_temple_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                            CoordIndex: []int32{8, 11},
                                            Displacements: &x3d.MFVec3f{[3]float32{-0.003,-0.4639,0.004},[3]float32{0.0,-0.075,0.0}},
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_temple_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{0.312,-0.6258,2.224},[3]float32{1.079,0.3506,4.121},[3]float32{-0.5824,2.214,1.716},[3]float32{-0.9631,2.994,-0.8569},[3]float32{-0.5756,3.023,-4.121},[3]float32{-0.3971,-0.687,1.044},[3]float32{-1.042,-0.4888,-3.649},[3]float32{-1.005,-0.6065,-1.903},[3]float32{1.243,-0.6321,3.914},[3]float32{-1.028,-2.588,-2.479},[3]float32{-1.243,-2.002,-3.446},[3]float32{0.8897,-3.023,2.376},[3]float32{-0.2546,-2.916,0.5272}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_temple"),
                                                },
                                                Translation: &x3d.SFVec3f{-10.95, 20.56, 6.406},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_temple-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 4, 5, -1, 5, 6, 0, -1, 1, 7, 15, -1, 15, 13, 1, -1, 1, 10, 2, -1, 2, 3, 1, -1, 3, 7, 1, -1, 8, 0, 6, -1, 6, 9, 8, -1, 6, 5, 11, -1, 11, 12, 6, -1, 14, 9, 6, -1, 6, 12, 14, -1},
                                                        CoordIndex: []int32{9, 12, 5, -1, 5, 7, 9, -1, 0, 5, 12, -1, 12, 11, 0, -1, 0, 8, 1, -1, 1, 2, 0, -1, 2, 5, 0, -1, 10, 9, 7, -1, 7, 6, 10, -1, 7, 5, 2, -1, 2, 3, 7, -1, 4, 6, 7, -1, 7, 3, 4, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_temple-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.44,0.6625},[2]float32{0.4455,0.863},[2]float32{0.4299,0.8825},[2]float32{0.4655,0.9081},[2]float32{0.4547,0.661},[2]float32{0.4573,0.671},[2]float32{0.4428,0.6714},[2]float32{0.462,0.8557},[2]float32{0.4352,0.6651},[2]float32{0.4342,0.6719},[2]float32{0.4266,0.8643},[2]float32{0.4606,0.684},[2]float32{0.4479,0.6875},[2]float32{0.4335,0.819},[2]float32{0.4319,0.6876},[2]float32{0.4572,0.8171}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_temple_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_upper_cutaneous_lip"),
                                        },
                                        Name: stringPtr("right_upper_cutaneous_lip"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_upper_cutaneous_lip_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_upper_cutaneous_lip_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_upper_cutaneous_lip_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-0.398,0.8515,-0.5307},[3]float32{-0.2676,-0.8515,-0.06256},[3]float32{0.398,0.08738,0.5307},[3]float32{0.1985,-0.7812,0.2164}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_upper_cutaneous_lip"),
                                                },
                                                Translation: &x3d.SFVec3f{-0.7684, 10.16, 14.63},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_upper_cutaneous_lip-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{2, 0, 1, -1, 1, 3, 2, -1},
                                                        CoordIndex: []int32{2, 0, 1, -1, 1, 3, 2, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_upper_cutaneous_lip-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.2661,0.696},[2]float32{0.2636,0.664},[2]float32{0.2511,0.6816},[2]float32{0.2548,0.6653}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_upper_cutaneous_lip_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_upper_eyelid"),
                                        },
                                        Name: stringPtr("right_upper_eyelid"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_upper_eyelid_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_upper_eyelid_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                            CoordIndex: []int32{1, 3, 4, 5, 6, 10, 12},
                                            Displacements: &x3d.MFVec3f{[3]float32{0.0,-0.5962,0.0},[3]float32{0.0,-0.7726,-0.115},[3]float32{0.0,-0.7324,0.0},[3]float32{0.0,-0.0775,0.0},[3]float32{0.0,-0.463,0.0},[3]float32{0.002,-0.464,0.0},[3]float32{0.0,-0.0776,0.0}},
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_upper_eyelid_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{3.944,0.2777,3.581},[3]float32{0.9888,0.3455,1.465},[3]float32{0.4509,1.393,2.381},[3]float32{0.005327,0.806,1.231},[3]float32{-1.84,0.849,-0.08585},[3]float32{-3.829,-0.08937,-2.326},[3]float32{-2.527,1.923,-0.05675},[3]float32{4.303,-0.6947,2.247},[3]float32{-5.103,1.975,-3.581},[3]float32{5.103,-0.5987,2.53},[3]float32{-4.172,1.969,-1.891},[3]float32{4.353,-1.523,2.057},[3]float32{-4.525,-0.4223,-3.429},[3]float32{2.594,-0.8999,1.643},[3]float32{3.366,-1.975,1.583}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_upper_eyelid"),
                                                },
                                                Translation: &x3d.SFVec3f{-5.53, 17.96, 12.21},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_upper_eyelid-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{2, 0, 1, -1, 4, 3, 5, -1, 5, 1, 4, -1, 5, 2, 1, -1, 2, 6, 0, -1, 6, 9, 0, -1, 11, 15, 8, -1, 8, 13, 11, -1, 3, 4, 13, -1, 13, 8, 3, -1, 0, 9, 12, -1, 10, 14, 12, -1, 7, 16, 14, -1, 14, 10, 7, -1},
                                                        CoordIndex: []int32{1, 0, 2, -1, 6, 4, 3, -1, 3, 2, 6, -1, 3, 1, 2, -1, 1, 13, 0, -1, 13, 7, 0, -1, 8, 12, 5, -1, 5, 10, 8, -1, 4, 6, 10, -1, 10, 5, 4, -1, 0, 7, 9, -1, 7, 11, 9, -1, 13, 14, 11, -1, 11, 7, 13, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_upper_eyelid-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.274,0.8322},[2]float32{0.3402,0.8534},[2]float32{0.3285,0.8323},[2]float32{0.3831,0.8437},[2]float32{0.3979,0.8641},[2]float32{0.3487,0.8409},[2]float32{0.2983,0.8142},[2]float32{0.2981,0.8094},[2]float32{0.4198,0.8261},[2]float32{0.2678,0.8154},[2]float32{0.2677,0.8134},[2]float32{0.4455,0.863},[2]float32{0.2534,0.8152},[2]float32{0.4266,0.8643},[2]float32{0.2671,0.7978},[2]float32{0.4335,0.819},[2]float32{0.2845,0.7889}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_upper_eyelid_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Right_upper_vermillion_lip"),
                                        },
                                        Name: stringPtr("right_upper_vermillion_lip"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_upper_vermillion_lip_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("right_upper_vermillion_lip_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Right_upper_vermillion_lip_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-1.218,-0.3781,-1.204},[3]float32{0.7521,0.3078,0.925},[3]float32{1.218,0.3781,1.204},[3]float32{1.218,-0.1506,0.4455}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Right_upper_vermillion_lip"),
                                                },
                                                Translation: &x3d.SFVec3f{-1.788, 9.002, 13.64},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Right_upper_vermillion_lip-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{3, 2, 1, -1, 1, 0, 3, -1},
                                                        CoordIndex: []int32{3, 2, 1, -1, 1, 0, 3, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Right_upper_vermillion_lip-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.3007,0.651},[2]float32{0.2636,0.664},[2]float32{0.2548,0.6653},[2]float32{0.2548,0.6553}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Right_upper_vermillion_lip_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Tongue"),
                                        },
                                        Name: stringPtr("tongue"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Tongue_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("tongue_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Tongue_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-1.331,-0.2299,0.7138},[3]float32{1.331,-0.2299,0.7138},[3]float32{-1.563,0.07305,-1.268},[3]float32{1.563,0.07305,-1.268},[3]float32{-1.331,-0.07451,0.7385},[3]float32{1.331,-0.07451,0.7385},[3]float32{-1.563,0.2531,-1.239},[3]float32{1.563,0.2531,-1.239},[3]float32{-1.536,-0.127,-0.00304},[3]float32{1.536,-0.127,-0.00304},[3]float32{1.536,0.05032,0.0252},[3]float32{-1.536,0.05032,0.0252},[3]float32{-1.015,-0.2542,1.071},[3]float32{1.015,-0.2542,1.071},[3]float32{1.015,-0.1625,1.086},[3]float32{-1.015,-0.1625,1.086},[3]float32{0.5645,0.04305,-1.272},[3]float32{-0.5313,-0.257,0.7253},[3]float32{-0.5313,-0.05236,0.7579},[3]float32{-0.5645,0.2831,-1.234},[3]float32{-0.5607,-0.1565,-0.007746},[3]float32{0.5607,0.07987,0.02991},[3]float32{-0.4876,-0.283,1.2},[3]float32{0.4876,-0.1751,1.217},[3]float32{-0.5645,0.04305,-1.272},[3]float32{0.5313,-0.257,0.7253},[3]float32{0.5313,-0.05236,0.7579},[3]float32{0.5645,0.2831,-1.234},[3]float32{0.5607,-0.1565,-0.007746},[3]float32{-0.5607,0.07987,0.02991},[3]float32{0.4876,-0.283,1.2},[3]float32{-0.4876,-0.1751,1.217},[3]float32{-1.073,-0.2176,0.4108},[3]float32{-1.073,0.007936,0.4467},[3]float32{-0.7997,-0.2294,1.21},[3]float32{1.585,-0.1049,0.4287},[3]float32{-1.706,0.05553,-0.5782},[3]float32{-1.134,-0.06447,-0.5973},[3]float32{1.134,0.1755,-0.559},[3]float32{1.706,0.05553,-0.5782},[3]float32{-1.585,-0.1049,0.4287},[3]float32{-0.9063,-0.2816,0.9715},[3]float32{1.251,-0.187,0.9442},[3]float32{0.9063,-0.1054,0.9996},[3]float32{-1.251,-0.187,0.9442},[3]float32{1.073,-0.2176,0.4108},[3]float32{1.073,0.007936,0.4467},[3]float32{0.7997,-0.2294,1.21},[3]float32{1.134,-0.06447,-0.5973},[3]float32{-1.134,0.1755,-0.559},[3]float32{0.9063,-0.2816,0.9715},[3]float32{-0.9063,-0.1054,0.9996},[3]float32{0.0,-0.2176,0.4108},[3]float32{0.0,0.007936,0.4467},[3]float32{0.0,-0.2425,1.293},[3]float32{0.0,-0.06447,-0.5973},[3]float32{0.0,0.1755,-0.559},[3]float32{0.0,-0.2846,1.013},[3]float32{0.0,-0.1157,1.04},[3]float32{-1.457,-0.1894,0.4153},[3]float32{-1.134,0.04305,-1.272},[3]float32{1.563,-0.03447,-0.5925},[3]float32{-1.001,-0.2565,0.7175},[3]float32{1.001,-0.05045,0.7503},[3]float32{1.457,-0.02026,0.4422},[3]float32{1.134,0.2831,-1.234},[3]float32{-1.563,0.1455,-0.5638},[3]float32{1.441,-0.1518,0.7236},[3]float32{-1.441,-0.1518,0.7236},[3]float32{1.706,0.1631,-1.253},[3]float32{-1.706,0.1631,-1.253},[3]float32{-1.563,-0.03447,-0.5925},[3]float32{1.457,-0.1894,0.4153},[3]float32{1.563,0.1455,-0.5638},[3]float32{-1.457,-0.02026,0.4422},[3]float32{-1.119,-0.1565,-0.007746},[3]float32{1.119,0.07987,0.02991},[3]float32{1.676,-0.03833,0.01108},[3]float32{-1.676,-0.03833,0.01108},[3]float32{-0.8264,-0.2777,1.145},[3]float32{1.031,-0.2122,1.103},[3]float32{0.8264,-0.1631,1.163},[3]float32{-1.031,-0.2122,1.103},[3]float32{-1.165,-0.2565,0.9437},[3]float32{1.165,-0.2565,0.9437},[3]float32{1.165,-0.1207,0.9654},[3]float32{-1.165,-0.1207,0.9654},[3]float32{1.134,0.04305,-1.272},[3]float32{1.001,-0.2565,0.7175},[3]float32{-1.001,-0.05045,0.7503},[3]float32{-1.134,0.2831,-1.234},[3]float32{1.119,-0.1565,-0.007746},[3]float32{-1.119,0.07987,0.02991},[3]float32{0.8264,-0.2777,1.145},[3]float32{-0.8264,-0.1631,1.163},[3]float32{-0.5493,-0.2176,0.4108},[3]float32{-0.5493,0.007936,0.4467},[3]float32{-0.4809,-0.2392,1.272},[3]float32{-0.5645,-0.06447,-0.5973},[3]float32{0.5645,0.1755,-0.559},[3]float32{-0.5076,-0.2838,1.003},[3]float32{0.5076,-0.1131,1.03},[3]float32{0.0,0.04305,-1.272},[3]float32{0.0,-0.2572,0.7279},[3]float32{0.0,-0.053,0.7605},[3]float32{0.0,0.2831,-1.234},[3]float32{0.0,-0.1565,-0.007746},[3]float32{0.0,0.07987,0.02991},[3]float32{0.0,-0.2847,1.218},[3]float32{0.0,-0.1791,1.235},[3]float32{0.5493,-0.2176,0.4108},[3]float32{0.5493,0.007936,0.4467},[3]float32{0.4809,-0.2392,1.272},[3]float32{0.5645,-0.06447,-0.5973},[3]float32{-0.5645,0.1755,-0.559},[3]float32{0.5076,-0.2838,1.003},[3]float32{-0.5076,-0.1131,1.03}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Tongue"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 8.886, 11.1},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Tongue-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 1, 2, -1, 2, 3, 0, -1, 4, 5, 2, -1, 2, 1, 4, -1, 6, 7, 2, -1, 2, 5, 6, -1, 8, 3, 2, -1, 2, 7, 8, -1, 9, 10, 11, -1, 11, 12, 9, -1, 13, 14, 11, -1, 11, 10, 13, -1, 15, 16, 11, -1, 11, 14, 15, -1, 17, 12, 11, -1, 11, 16, 17, -1, 18, 19, 20, -1, 20, 21, 18, -1, 22, 23, 20, -1, 20, 19, 22, -1, 24, 25, 20, -1, 20, 23, 24, -1, 26, 21, 20, -1, 20, 25, 26, -1, 27, 28, 29, -1, 29, 30, 27, -1, 31, 32, 29, -1, 29, 28, 31, -1, 33, 34, 29, -1, 29, 32, 33, -1, 35, 30, 29, -1, 29, 34, 35, -1, 36, 37, 38, -1, 38, 39, 36, -1, 4, 40, 38, -1, 38, 37, 4, -1, 17, 41, 38, -1, 38, 40, 17, -1, 42, 39, 38, -1, 38, 41, 42, -1, 4, 37, 43, -1, 43, 5, 4, -1, 36, 44, 43, -1, 43, 37, 36, -1, 45, 46, 43, -1, 43, 44, 45, -1, 6, 5, 43, -1, 43, 46, 6, -1, 33, 47, 48, -1, 48, 49, 33, -1, 50, 51, 48, -1, 48, 47, 50, -1, 52, 53, 48, -1, 48, 51, 52, -1, 54, 49, 48, -1, 48, 53, 54, -1, 31, 55, 56, -1, 56, 32, 31, -1, 57, 58, 56, -1, 56, 55, 57, -1, 50, 47, 56, -1, 56, 58, 50, -1, 33, 32, 56, -1, 56, 47, 33, -1, 4, 1, 59, -1, 59, 40, 4, -1, 0, 60, 59, -1, 59, 1, 0, -1, 9, 12, 59, -1, 59, 60, 9, -1, 17, 40, 59, -1, 59, 12, 17, -1, 0, 3, 61, -1, 61, 62, 0, -1, 8, 63, 61, -1, 61, 3, 8, -1, 22, 19, 61, -1, 61, 63, 22, -1, 18, 62, 61, -1, 61, 19, 18, -1, 27, 30, 64, -1, 64, 65, 27, -1, 35, 66, 64, -1, 64, 30, 35, -1, 67, 68, 64, -1, 64, 66, 67, -1, 69, 65, 64, -1, 64, 68, 69, -1, 35, 70, 71, -1, 71, 66, 35, -1, 72, 73, 71, -1, 71, 70, 72, -1, 74, 75, 71, -1, 71, 73, 74, -1, 67, 66, 71, -1, 71, 75, 67, -1, 9, 60, 76, -1, 76, 77, 9, -1, 0, 62, 76, -1, 76, 60, 0, -1, 18, 21, 76, -1, 76, 62, 18, -1, 26, 77, 76, -1, 76, 21, 26, -1, 78, 79, 80, -1, 80, 81, 78, -1, 31, 28, 80, -1, 80, 79, 31, -1, 27, 82, 80, -1, 80, 28, 27, -1, 83, 81, 80, -1, 80, 82, 83, -1, 72, 70, 84, -1, 84, 85, 72, -1, 35, 34, 84, -1, 84, 70, 35, -1, 33, 49, 84, -1, 84, 34, 33, -1, 54, 85, 84, -1, 84, 49, 54, -1, 86, 87, 88, -1, 88, 89, 86, -1, 69, 68, 88, -1, 88, 87, 69, -1, 67, 75, 88, -1, 88, 68, 67, -1, 74, 89, 88, -1, 88, 75, 74, -1, 90, 91, 92, -1, 92, 93, 90, -1, 57, 55, 92, -1, 92, 91, 57, -1, 31, 79, 92, -1, 92, 55, 31, -1, 78, 93, 92, -1, 92, 79, 78, -1, 94, 95, 96, -1, 96, 97, 94, -1, 42, 41, 96, -1, 96, 95, 42, -1, 17, 16, 96, -1, 96, 41, 17, -1, 15, 97, 96, -1, 96, 16, 15, -1, 83, 82, 98, -1, 98, 99, 83, -1, 27, 65, 98, -1, 98, 82, 27, -1, 69, 87, 98, -1, 98, 65, 69, -1, 86, 99, 98, -1, 98, 87, 86, -1, 13, 10, 100, -1, 100, 101, 13, -1, 9, 77, 100, -1, 100, 10, 9, -1, 26, 25, 100, -1, 100, 77, 26, -1, 24, 101, 100, -1, 100, 25, 24, -1, 6, 102, 103, -1, 103, 7, 6, -1, 78, 81, 103, -1, 103, 102, 78, -1, 83, 104, 103, -1, 103, 81, 83, -1, 8, 7, 103, -1, 103, 104, 8, -1, 13, 105, 106, -1, 106, 14, 13, -1, 72, 85, 106, -1, 106, 105, 72, -1, 54, 107, 106, -1, 106, 85, 54, -1, 15, 14, 106, -1, 106, 107, 15, -1, 22, 108, 109, -1, 109, 23, 22, -1, 86, 89, 109, -1, 109, 108, 86, -1, 74, 110, 109, -1, 109, 89, 74, -1, 24, 23, 109, -1, 109, 110, 24, -1, 45, 111, 112, -1, 112, 46, 45, -1, 90, 93, 112, -1, 112, 111, 90, -1, 78, 102, 112, -1, 112, 93, 78, -1, 6, 46, 112, -1, 112, 102, 6, -1, 52, 113, 114, -1, 114, 53, 52, -1, 94, 97, 114, -1, 114, 113, 94, -1, 15, 107, 114, -1, 114, 97, 15, -1, 54, 53, 114, -1, 114, 107, 54, -1, 8, 104, 115, -1, 115, 63, 8, -1, 83, 99, 115, -1, 115, 104, 83, -1, 86, 108, 115, -1, 115, 99, 86, -1, 22, 63, 115, -1, 115, 108, 22, -1, 72, 105, 116, -1, 116, 73, 72, -1, 13, 101, 116, -1, 116, 105, 13, -1, 24, 110, 116, -1, 116, 101, 24, -1, 74, 73, 116, -1, 116, 110, 74, -1},
                                                        CoordIndex: []int32{0, 59, 32, -1, 32, 62, 0, -1, 8, 75, 32, -1, 32, 59, 8, -1, 20, 95, 32, -1, 32, 75, 20, -1, 17, 62, 32, -1, 32, 95, 17, -1, 4, 89, 33, -1, 33, 74, 4, -1, 18, 96, 33, -1, 33, 89, 18, -1, 29, 92, 33, -1, 33, 96, 29, -1, 11, 74, 33, -1, 33, 92, 11, -1, 12, 79, 34, -1, 34, 82, 12, -1, 22, 97, 34, -1, 34, 79, 22, -1, 31, 94, 34, -1, 34, 97, 31, -1, 15, 82, 34, -1, 34, 94, 15, -1, 1, 72, 35, -1, 35, 67, 1, -1, 9, 77, 35, -1, 35, 72, 9, -1, 10, 64, 35, -1, 35, 77, 10, -1, 5, 67, 35, -1, 35, 64, 5, -1, 2, 71, 36, -1, 36, 70, 2, -1, 8, 78, 36, -1, 36, 71, 8, -1, 11, 66, 36, -1, 36, 78, 11, -1, 6, 70, 36, -1, 36, 66, 6, -1, 8, 71, 37, -1, 37, 75, 8, -1, 2, 60, 37, -1, 37, 71, 2, -1, 24, 98, 37, -1, 37, 60, 24, -1, 20, 75, 37, -1, 37, 98, 20, -1, 10, 73, 38, -1, 38, 76, 10, -1, 7, 65, 38, -1, 38, 73, 7, -1, 27, 99, 38, -1, 38, 65, 27, -1, 21, 76, 38, -1, 38, 99, 21, -1, 9, 61, 39, -1, 39, 77, 9, -1, 3, 69, 39, -1, 39, 61, 3, -1, 7, 73, 39, -1, 39, 69, 7, -1, 10, 77, 39, -1, 39, 73, 10, -1, 8, 59, 40, -1, 40, 78, 8, -1, 0, 68, 40, -1, 40, 59, 0, -1, 4, 74, 40, -1, 40, 68, 4, -1, 11, 78, 40, -1, 40, 74, 11, -1, 0, 62, 41, -1, 41, 83, 0, -1, 17, 100, 41, -1, 41, 62, 17, -1, 22, 79, 41, -1, 41, 100, 22, -1, 12, 83, 41, -1, 41, 79, 12, -1, 1, 67, 42, -1, 42, 84, 1, -1, 5, 85, 42, -1, 42, 67, 5, -1, 14, 80, 42, -1, 42, 85, 14, -1, 13, 84, 42, -1, 42, 80, 13, -1, 5, 63, 43, -1, 43, 85, 5, -1, 26, 101, 43, -1, 43, 63, 26, -1, 23, 81, 43, -1, 43, 101, 23, -1, 14, 85, 43, -1, 43, 81, 14, -1, 4, 68, 44, -1, 44, 86, 4, -1, 0, 83, 44, -1, 44, 68, 0, -1, 12, 82, 44, -1, 44, 83, 12, -1, 15, 86, 44, -1, 44, 82, 15, -1, 28, 91, 45, -1, 45, 110, 28, -1, 9, 72, 45, -1, 45, 91, 9, -1, 1, 88, 45, -1, 45, 72, 1, -1, 25, 110, 45, -1, 45, 88, 25, -1, 26, 63, 46, -1, 46, 111, 26, -1, 5, 64, 46, -1, 46, 63, 5, -1, 10, 76, 46, -1, 46, 64, 10, -1, 21, 111, 46, -1, 46, 76, 21, -1, 30, 93, 47, -1, 47, 112, 30, -1, 13, 80, 47, -1, 47, 93, 13, -1, 14, 81, 47, -1, 47, 80, 14, -1, 23, 112, 47, -1, 47, 81, 23, -1, 16, 87, 48, -1, 48, 113, 16, -1, 3, 61, 48, -1, 48, 87, 3, -1, 9, 91, 48, -1, 48, 61, 9, -1, 28, 113, 48, -1, 48, 91, 28, -1, 19, 90, 49, -1, 49, 114, 19, -1, 6, 66, 49, -1, 49, 90, 6, -1, 11, 92, 49, -1, 49, 66, 11, -1, 29, 114, 49, -1, 49, 92, 29, -1, 25, 88, 50, -1, 50, 115, 25, -1, 1, 84, 50, -1, 50, 88, 1, -1, 13, 93, 50, -1, 50, 84, 13, -1, 30, 115, 50, -1, 50, 93, 30, -1, 18, 89, 51, -1, 51, 116, 18, -1, 4, 86, 51, -1, 51, 89, 4, -1, 15, 94, 51, -1, 51, 86, 15, -1, 31, 116, 51, -1, 51, 94, 31, -1, 20, 106, 52, -1, 52, 95, 20, -1, 28, 110, 52, -1, 52, 106, 28, -1, 25, 103, 52, -1, 52, 110, 25, -1, 17, 95, 52, -1, 52, 103, 17, -1, 18, 104, 53, -1, 53, 96, 18, -1, 26, 111, 53, -1, 53, 104, 26, -1, 21, 107, 53, -1, 53, 111, 21, -1, 29, 96, 53, -1, 53, 107, 29, -1, 22, 108, 54, -1, 54, 97, 22, -1, 30, 112, 54, -1, 54, 108, 30, -1, 23, 109, 54, -1, 54, 112, 23, -1, 31, 97, 54, -1, 54, 109, 31, -1, 24, 102, 55, -1, 55, 98, 24, -1, 16, 113, 55, -1, 55, 102, 16, -1, 28, 106, 55, -1, 55, 113, 28, -1, 20, 98, 55, -1, 55, 106, 20, -1, 27, 105, 56, -1, 56, 99, 27, -1, 19, 114, 56, -1, 56, 105, 19, -1, 29, 107, 56, -1, 56, 114, 29, -1, 21, 99, 56, -1, 56, 107, 21, -1, 17, 103, 57, -1, 57, 100, 17, -1, 25, 115, 57, -1, 57, 103, 25, -1, 30, 108, 57, -1, 57, 115, 30, -1, 22, 100, 57, -1, 57, 108, 22, -1, 26, 104, 58, -1, 58, 101, 26, -1, 18, 116, 58, -1, 58, 104, 18, -1, 31, 109, 58, -1, 58, 116, 31, -1, 23, 101, 58, -1, 58, 109, 23, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Tongue-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.6665,0.04796},[2]float32{0.6621,0.05829},[2]float32{0.6755,0.05429},[2]float32{0.678,0.04407},[2]float32{0.6594,0.0736},[2]float32{0.6739,0.06941},[2]float32{0.6934,0.06941},[2]float32{0.6938,0.05429},[2]float32{0.6944,0.04387},[2]float32{0.6665,0.07002},[2]float32{0.678,0.07332},[2]float32{0.6755,0.08631},[2]float32{0.6621,0.08231},[2]float32{0.6944,0.07293},[2]float32{0.6938,0.08631},[2]float32{0.6934,0.103},[2]float32{0.6739,0.103},[2]float32{0.6594,0.09877},[2]float32{0.6775,0.03908},[2]float32{0.6841,0.03457},[2]float32{0.685,0.04057},[2]float32{0.677,0.04467},[2]float32{0.6959,0.03299},[2]float32{0.6961,0.03821},[2]float32{0.6959,0.0483},[2]float32{0.6841,0.05084},[2]float32{0.6775,0.0521},[2]float32{0.7593,0.04796},[2]float32{0.7636,0.05829},[2]float32{0.7681,0.0703},[2]float32{0.7631,0.05909},[2]float32{0.7664,0.0736},[2]float32{0.7713,0.08619},[2]float32{0.7664,0.09877},[2]float32{0.7636,0.08231},[2]float32{0.7593,0.07002},[2]float32{0.6584,0.1215},[2]float32{0.6584,0.09583},[2]float32{0.6535,0.1086},[2]float32{0.6535,0.1343},[2]float32{0.6545,0.08619},[2]float32{0.6584,0.1214},[2]float32{0.6584,0.1471},[2]float32{0.6734,0.09157},[2]float32{0.6734,0.1172},[2]float32{0.6932,0.1172},[2]float32{0.6932,0.09157},[2]float32{0.7673,0.1214},[2]float32{0.7524,0.1256},[2]float32{0.7519,0.103},[2]float32{0.7673,0.1471},[2]float32{0.7524,0.1513},[2]float32{0.7326,0.1513},[2]float32{0.7326,0.1256},[2]float32{0.7324,0.103},[2]float32{0.7673,0.09583},[2]float32{0.7723,0.1086},[2]float32{0.7673,0.1215},[2]float32{0.7723,0.1343},[2]float32{0.6577,0.0703},[2]float32{0.6627,0.05909},[2]float32{0.6813,0.03662},[2]float32{0.6723,0.04066},[2]float32{0.6952,0.03583},[2]float32{0.7565,0.05069},[2]float32{0.7535,0.04066},[2]float32{0.7535,0.05994},[2]float32{0.7482,0.0521},[2]float32{0.7488,0.04467},[2]float32{0.7482,0.03908},[2]float32{0.7478,0.07332},[2]float32{0.7445,0.06163},[2]float32{0.7314,0.07293},[2]float32{0.7306,0.06006},[2]float32{0.7299,0.0483},[2]float32{0.7417,0.05084},[2]float32{0.6693,0.05069},[2]float32{0.6723,0.05994},[2]float32{0.7324,0.06941},[2]float32{0.7519,0.06941},[2]float32{0.7503,0.05429},[2]float32{0.732,0.05429},[2]float32{0.7478,0.04407},[2]float32{0.7314,0.04387},[2]float32{0.7503,0.08631},[2]float32{0.732,0.08631},[2]float32{0.7299,0.03299},[2]float32{0.7417,0.03457},[2]float32{0.7408,0.04057},[2]float32{0.7296,0.03821},[2]float32{0.7326,0.1172},[2]float32{0.7524,0.1172},[2]float32{0.7524,0.09157},[2]float32{0.7326,0.09157},[2]float32{0.6932,0.1513},[2]float32{0.6734,0.1513},[2]float32{0.6734,0.1256},[2]float32{0.6932,0.1256},[2]float32{0.7445,0.03662},[2]float32{0.7306,0.03583},[2]float32{0.6813,0.06163},[2]float32{0.6952,0.06006},[2]float32{0.7129,0.06941},[2]float32{0.7129,0.05429},[2]float32{0.7129,0.04381},[2]float32{0.7129,0.0728},[2]float32{0.7129,0.08631},[2]float32{0.7129,0.103},[2]float32{0.7129,0.03246},[2]float32{0.7129,0.03742},[2]float32{0.7129,0.04745},[2]float32{0.7129,0.1172},[2]float32{0.7129,0.09157},[2]float32{0.7129,0.1513},[2]float32{0.7129,0.1256},[2]float32{0.7129,0.03556},[2]float32{0.7129,0.05954}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Tongue_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                                    &x3d.HAnimSegment{
                                        CoreX3DNode: x3d.CoreX3DNode{
                                            DEF: stringPtr("hanim_Upper_teeth"),
                                        },
                                        Name: stringPtr("upper_teeth"),
                                        Displacers: &x3d.HAnimDisplacer{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Upper_teeth_MorphInterpolator_JinSquint"),
                                            },
                                            Name: stringPtr("upper_teeth_morphinterpolator"),
                                            Weight: floatPtr(0.6989899),
                                        },
                                        Coord: &x3d.Coordinate{
                                            CoreX3DNode: x3d.CoreX3DNode{
                                                DEF: stringPtr("Upper_teeth_COORD"),
                                            },
                                            Point: &x3d.MFVec3f{[3]float32{-2.78,0.8496,-1.608},[3]float32{-2.777,0.2987,-1.683},[3]float32{-2.125,0.1308,-1.676},[3]float32{-2.789,0.7394,-0.8298},[3]float32{-2.786,0.189,-0.9075},[3]float32{-2.157,0.06281,-0.9464},[3]float32{-2.677,0.6356,-0.09551},[3]float32{-2.674,0.08531,-0.1741},[3]float32{-2.131,-0.02711,-0.275},[3]float32{-2.371,0.5392,0.586},[3]float32{-2.368,-0.01099,0.5068},[3]float32{-2.006,-0.1174,0.3632},[3]float32{-1.911,0.4495,1.22},[3]float32{-1.909,-0.1006,1.14},[3]float32{-1.713,-0.2047,0.9811},[3]float32{-1.336,0.3957,1.601},[3]float32{-1.335,-0.1543,1.52},[3]float32{-1.253,-0.2541,1.33},[3]float32{-0.6794,0.3711,1.775},[3]float32{-0.679,-0.1789,1.694},[3]float32{-0.6546,-0.2767,1.49},[3]float32{0.0,-0.1852,1.738},[3]float32{0.0,-0.2819,1.526},[3]float32{-2.122,0.1608,-1.675},[3]float32{-1.93,0.2856,-0.9938},[3]float32{-1.906,0.2319,-0.3884},[3]float32{-1.794,0.1511,0.183},[3]float32{-1.533,0.07302,0.7347},[3]float32{-1.121,0.02888,1.047},[3]float32{-0.5859,0.00863,1.19},[3]float32{0.0,0.003966,1.223},[3]float32{-2.684,0.1398,-1.684},[3]float32{-2.219,0.1235,-1.665},[3]float32{-2.213,0.01946,-0.946},[3]float32{-2.185,-0.07577,-0.2727},[3]float32{-2.054,-0.1661,0.366},[3]float32{-1.749,-0.258,1.016},[3]float32{-1.275,-0.3067,1.36},[3]float32{-0.6617,-0.3291,1.518},[3]float32{-0.6764,-0.3421,1.653},[3]float32{-1.33,-0.3185,1.486},[3]float32{-1.895,-0.2665,1.118},[3]float32{-2.345,-0.1745,0.4679},[3]float32{-2.642,-0.07965,-0.2028},[3]float32{-2.743,0.02301,-0.9288},[3]float32{0.0,0.1811,-1.486},[3]float32{-2.23,-0.3493,-1.636},[3]float32{-2.257,-0.4254,-1.098},[3]float32{-2.702,-0.4264,-1.091},[3]float32{-2.682,-0.3471,-1.651},[3]float32{-0.5807,-0.7901,1.481},[3]float32{-0.08538,-0.7931,1.503},[3]float32{-0.08698,-0.8081,1.608},[3]float32{-0.5887,-0.8044,1.582},[3]float32{-0.7603,-0.8007,1.556},[3]float32{-1.244,-0.7838,1.437},[3]float32{-1.21,-0.7703,1.341},[3]float32{-0.7458,-0.7868,1.458},[3]float32{-1.402,-0.7742,1.369},[3]float32{-1.811,-0.7368,1.104},[3]float32{-1.714,-0.7257,1.026},[3]float32{-1.351,-0.7613,1.278},[3]float32{-1.943,-0.7183,0.9738},[3]float32{-2.266,-0.6481,0.4769},[3]float32{-2.054,-0.6365,0.3949},[3]float32{-1.813,-0.7073,0.8956},[3]float32{-2.365,-0.6241,0.3072},[3]float32{-2.572,-0.5544,-0.1856},[3]float32{-2.216,-0.5456,-0.2477},[3]float32{-2.106,-0.6128,0.2276},[3]float32{-2.626,-0.5291,-0.3645},[3]float32{-2.692,-0.4533,-0.9005},[3]float32{-2.26,-0.4504,-0.921},[3]float32{-2.233,-0.5219,-0.415},[3]float32{-2.122,-0.3642,-1.749},[3]float32{-2.295,-0.4218,-1.574},[3]float32{-2.314,-0.4778,-1.178},[3]float32{-2.638,-0.4781,-1.176},[3]float32{-2.623,-0.4207,-1.582},[3]float32{-0.5147,-0.8554,1.492},[3]float32{-0.153,-0.8577,1.508},[3]float32{-0.1549,-0.8677,1.579},[3]float32{-0.5193,-0.8651,1.561},[3]float32{-0.8237,-0.8587,1.515},[3]float32{-1.172,-0.8465,1.429},[3]float32{-1.152,-0.8373,1.364},[3]float32{-0.8114,-0.8494,1.449},[3]float32{-1.449,-0.8296,1.31},[3]float32{-1.739,-0.8027,1.119},[3]float32{-1.679,-0.7949,1.064},[3]float32{-1.409,-0.8211,1.249},[3]float32{-1.968,-0.7698,0.8862},[3]float32{-2.192,-0.7184,0.5231},[3]float32{-2.053,-0.7103,0.4657},[3]float32{-1.864,-0.7619,0.8308},[3]float32{-2.357,-0.6756,0.2203},[3]float32{-2.494,-0.6252,-0.1362},[3]float32{-2.251,-0.6185,-0.1834},[3]float32{-2.157,-0.6678,0.1655},[3]float32{-2.581,-0.5804,-0.453},[3]float32{-2.623,-0.5257,-0.8394},[3]float32{-2.316,-0.523,-0.8586},[3]float32{-2.291,-0.5758,-0.4854},[3]float32{-2.228,0.02897,-1.584},[3]float32{-2.256,-0.04748,-1.043},[3]float32{-2.704,-0.04851,-1.036},[3]float32{-2.683,0.03117,-1.599},[3]float32{-0.582,-0.4116,1.532},[3]float32{-0.08377,-0.4146,1.553},[3]float32{-0.08547,-0.4304,1.665},[3]float32{-0.5905,-0.4267,1.639},[3]float32{-0.7592,-0.4232,1.613},[3]float32{-1.246,-0.4061,1.493},[3]float32{-1.21,-0.3918,1.391},[3]float32{-0.7438,-0.4083,1.509},[3]float32{-1.402,-0.3967,1.426},[3]float32{-1.815,-0.3589,1.159},[3]float32{-1.713,-0.3471,1.076},[3]float32{-1.348,-0.383,1.329},[3]float32{-1.945,-0.3406,1.03},[3]float32{-2.27,-0.27,0.5304},[3]float32{-2.052,-0.2581,0.4462},[3]float32{-1.81,-0.3292,0.9487},[3]float32{-2.367,-0.2463,0.3627},[3]float32{-2.575,-0.1762,-0.1332},[3]float32{-2.214,-0.1673,-0.1961},[3]float32{-2.104,-0.2349,0.2818},[3]float32{-2.628,-0.1513,-0.3093},[3]float32{-2.694,-0.07502,-0.8484},[3]float32{-2.258,-0.0721,-0.869},[3]float32{-2.231,-0.144,-0.3604},[3]float32{-2.122,0.08236,-1.686},[3]float32{2.78,0.8496,-1.608},[3]float32{2.777,0.2987,-1.683},[3]float32{2.786,0.189,-0.9075},[3]float32{2.789,0.7394,-0.8298},[3]float32{2.125,0.1308,-1.676},[3]float32{2.122,0.1608,-1.675},[3]float32{1.93,0.2856,-0.9938},[3]float32{2.157,0.06281,-0.9464},[3]float32{2.674,0.0853,-0.1741},[3]float32{2.677,0.6356,-0.09551},[3]float32{1.906,0.2319,-0.3884},[3]float32{2.131,-0.02711,-0.275},[3]float32{2.368,-0.01099,0.5068},[3]float32{2.371,0.5392,0.586},[3]float32{1.794,0.1511,0.183},[3]float32{2.006,-0.1174,0.3632},[3]float32{1.909,-0.1006,1.14},[3]float32{1.911,0.4495,1.22},[3]float32{1.533,0.07302,0.7347},[3]float32{1.713,-0.2048,0.9811},[3]float32{1.335,-0.1543,1.52},[3]float32{1.336,0.3957,1.601},[3]float32{1.121,0.02888,1.047},[3]float32{1.253,-0.2541,1.33},[3]float32{0.679,-0.1789,1.694},[3]float32{0.6794,0.3711,1.775},[3]float32{0.5859,0.00863,1.19},[3]float32{0.6546,-0.2767,1.49},[3]float32{0.0,0.3648,1.819},[3]float32{2.213,0.01946,-0.946},[3]float32{2.219,0.1235,-1.665},[3]float32{2.185,-0.07577,-0.2727},[3]float32{2.054,-0.1661,0.366},[3]float32{1.749,-0.258,1.016},[3]float32{1.275,-0.3067,1.36},[3]float32{0.6617,-0.3291,1.518},[3]float32{0.0,-0.3335,1.55},[3]float32{0.6764,-0.3421,1.653},[3]float32{0.0,-0.3476,1.692},[3]float32{1.33,-0.3185,1.486},[3]float32{1.895,-0.2665,1.118},[3]float32{2.345,-0.1745,0.4679},[3]float32{2.642,-0.07966,-0.2028},[3]float32{2.743,0.02301,-0.9288},[3]float32{2.684,0.1398,-1.684},[3]float32{2.295,-0.4218,-1.574},[3]float32{2.314,-0.4778,-1.178},[3]float32{2.638,-0.4781,-1.176},[3]float32{2.623,-0.4207,-1.582},[3]float32{0.5147,-0.8554,1.492},[3]float32{0.153,-0.8577,1.508},[3]float32{0.1549,-0.8677,1.579},[3]float32{0.5193,-0.8651,1.561},[3]float32{0.8237,-0.8587,1.515},[3]float32{1.172,-0.8465,1.429},[3]float32{1.152,-0.8373,1.364},[3]float32{0.8114,-0.8494,1.449},[3]float32{1.449,-0.8296,1.31},[3]float32{1.739,-0.8027,1.119},[3]float32{1.679,-0.7949,1.064},[3]float32{1.409,-0.8211,1.249},[3]float32{1.968,-0.7698,0.8862},[3]float32{2.192,-0.7184,0.5231},[3]float32{2.053,-0.7103,0.4657},[3]float32{1.864,-0.7619,0.8308},[3]float32{2.357,-0.6756,0.2203},[3]float32{2.494,-0.6252,-0.1362},[3]float32{2.251,-0.6185,-0.1834},[3]float32{2.157,-0.6678,0.1655},[3]float32{2.581,-0.5804,-0.453},[3]float32{2.623,-0.5257,-0.8394},[3]float32{2.316,-0.523,-0.8586},[3]float32{2.291,-0.5758,-0.4854},[3]float32{2.256,-0.04748,-1.043},[3]float32{2.228,0.02897,-1.584},[3]float32{2.704,-0.04851,-1.036},[3]float32{2.683,0.03117,-1.599},[3]float32{0.08377,-0.4146,1.553},[3]float32{0.582,-0.4116,1.532},[3]float32{0.08547,-0.4304,1.665},[3]float32{0.5905,-0.4267,1.639},[3]float32{1.246,-0.4061,1.493},[3]float32{0.7592,-0.4232,1.613},[3]float32{1.21,-0.3918,1.391},[3]float32{0.7438,-0.4083,1.509},[3]float32{1.815,-0.3589,1.159},[3]float32{1.402,-0.3967,1.426},[3]float32{1.713,-0.3471,1.076},[3]float32{1.348,-0.383,1.329},[3]float32{2.27,-0.27,0.5304},[3]float32{1.945,-0.3406,1.03},[3]float32{2.052,-0.2581,0.4462},[3]float32{1.81,-0.3292,0.9487},[3]float32{2.575,-0.1762,-0.1332},[3]float32{2.367,-0.2463,0.3627},[3]float32{2.214,-0.1673,-0.1961},[3]float32{2.104,-0.2349,0.2818},[3]float32{2.694,-0.07502,-0.8484},[3]float32{2.628,-0.1513,-0.3093},[3]float32{2.258,-0.07211,-0.869},[3]float32{2.231,-0.144,-0.3604},[3]float32{2.122,0.08236,-1.686},[3]float32{0.0,0.08788,-1.693},[3]float32{2.23,-0.3493,-1.636},[3]float32{2.257,-0.4254,-1.098},[3]float32{2.702,-0.4264,-1.091},[3]float32{2.682,-0.3471,-1.651},[3]float32{0.5807,-0.7901,1.481},[3]float32{0.08538,-0.7931,1.503},[3]float32{0.08698,-0.8081,1.608},[3]float32{0.5887,-0.8044,1.582},[3]float32{0.7603,-0.8007,1.556},[3]float32{1.244,-0.7838,1.437},[3]float32{1.21,-0.7703,1.341},[3]float32{0.7458,-0.7868,1.458},[3]float32{1.402,-0.7742,1.369},[3]float32{1.811,-0.7368,1.104},[3]float32{1.714,-0.7257,1.026},[3]float32{1.351,-0.7613,1.278},[3]float32{1.943,-0.7183,0.9738},[3]float32{2.266,-0.6481,0.4769},[3]float32{2.054,-0.6365,0.3949},[3]float32{1.813,-0.7073,0.8956},[3]float32{2.365,-0.6241,0.3072},[3]float32{2.572,-0.5544,-0.1856},[3]float32{2.216,-0.5456,-0.2477},[3]float32{2.106,-0.6128,0.2276},[3]float32{2.626,-0.5291,-0.3645},[3]float32{2.692,-0.4533,-0.9005},[3]float32{2.26,-0.4504,-0.921},[3]float32{2.233,-0.5219,-0.415},[3]float32{2.122,-0.3642,-1.749},[3]float32{0.0,-0.363,-1.757},[3]float32{-2.792,0.4871,-1.259},[3]float32{-2.142,0.1746,-1.297},[3]float32{-2.754,0.3796,-0.4991},[3]float32{-2.151,0.1543,-0.5849},[3]float32{-2.546,0.2799,0.2059},[3]float32{-2.083,0.06273,0.0628},[3]float32{-2.157,0.1847,0.8788},[3]float32{-1.879,-0.02861,0.7087},[3]float32{-1.636,0.1112,1.399},[3]float32{-1.501,-0.09869,1.204},[3]float32{-1.014,0.07351,1.665},[3]float32{-0.9654,-0.1327,1.445},[3]float32{-0.3407,0.05918,1.766},[3]float32{-0.3302,-0.1456,1.536},[3]float32{-2.154,0.07289,-1.306},[3]float32{-2.162,-0.02563,-0.6098},[3]float32{-2.094,-0.1175,0.03959},[3]float32{-1.889,-0.2092,0.6885},[3]float32{-1.508,-0.2798,1.188},[3]float32{-0.9686,-0.3141,1.43},[3]float32{-0.3311,-0.327,1.521},[3]float32{-0.3399,-0.299,1.704},[3]float32{-1.011,-0.2848,1.603},[3]float32{-1.63,-0.2473,1.339},[3]float32{-2.148,-0.1741,0.821},[3]float32{-2.536,-0.0793,0.1506},[3]float32{-2.743,0.02005,-0.5519},[3]float32{-2.781,0.1265,-1.305},[3]float32{-1.428,0.2447,-1.416},[3]float32{-1.434,0.2838,-0.9337},[3]float32{-1.388,0.2227,-0.5019},[3]float32{-1.253,0.1618,-0.07126},[3]float32{-1.001,0.1151,0.2591},[3]float32{-0.6436,0.09241,0.4196},[3]float32{-0.2202,0.08385,0.4801},[3]float32{-2.468,-0.4496,-1.378},[3]float32{-0.3355,-0.8615,1.535},[3]float32{-0.9899,-0.848,1.439},[3]float32{-1.569,-0.8121,1.185},[3]float32{-2.019,-0.7401,0.6765},[3]float32{-2.315,-0.6468,0.01655},[3]float32{-2.453,-0.5512,-0.6591},[3]float32{-2.166,0.06133,-1.303},[3]float32{-2.484,0.009624,-0.9372},[3]float32{-2.769,0.0621,-1.308},[3]float32{-2.452,0.1138,-1.674},[3]float32{-0.332,-0.3396,1.532},[3]float32{-0.0005068,-0.3524,1.623},[3]float32{-0.3389,-0.3607,1.682},[3]float32{-0.6704,-0.3479,1.591},[3]float32{-1.007,-0.3466,1.582},[3]float32{-1.308,-0.3254,1.432},[3]float32{-0.9723,-0.3267,1.441},[3]float32{-0.6714,-0.3479,1.591},[3]float32{-1.622,-0.3094,1.319},[3]float32{-1.829,-0.2762,1.084},[3]float32{-1.516,-0.2921,1.196},[3]float32{-1.309,-0.3254,1.432},[3]float32{-2.138,-0.2367,0.8045},[3]float32{-2.208,-0.1815,0.4145},[3]float32{-1.9,-0.2209,0.693},[3]float32{-1.83,-0.2761,1.083},[3]float32{-2.524,-0.1423,0.137},[3]float32{-2.422,-0.0895,-0.2363},[3]float32{-2.106,-0.1286,0.04056},[3]float32{-2.209,-0.1814,0.4139},[3]float32{-2.731,-0.04331,-0.5628},[3]float32{-2.484,0.00952,-0.9364},[3]float32{-2.174,-0.03654,-0.6107},[3]float32{-2.422,-0.08937,-0.2371},[3]float32{-1.061,0.1611,-1.68},[3]float32{-2.173,-0.45,-1.375},[3]float32{-2.483,-0.5009,-1.015},[3]float32{-2.763,-0.4492,-1.381},[3]float32{-2.452,-0.3983,-1.74},[3]float32{-0.3324,-0.8523,1.47},[3]float32{-0.006795,-0.8637,1.55},[3]float32{-0.3385,-0.8706,1.6},[3]float32{-0.6641,-0.8593,1.519},[3]float32{-1.005,-0.8566,1.5},[3]float32{-1.302,-0.837,1.361},[3]float32{-0.9747,-0.8394,1.378},[3]float32{-0.6778,-0.859,1.517},[3]float32{-1.616,-0.8197,1.239},[3]float32{-1.823,-0.788,1.015},[3]float32{-1.522,-0.8045,1.132},[3]float32{-1.315,-0.8361,1.355},[3]float32{-2.13,-0.7474,0.7281},[3]float32{-2.205,-0.6935,0.3471},[3]float32{-1.908,-0.7328,0.6249},[3]float32{-1.833,-0.7867,1.006},[3]float32{-2.516,-0.6533,0.06285},[3]float32{-2.419,-0.6016,-0.3027},[3]float32{-2.114,-0.6402,-0.02979},[3]float32{-2.211,-0.6919,0.3357},[3]float32{-2.724,-0.5545,-0.6358},[3]float32{-2.483,-0.5026,-1.003},[3]float32{-2.181,-0.5479,-0.6824},[3]float32{-2.422,-0.5998,-0.3154},[3]float32{-2.167,-0.1997,-1.34},[3]float32{-2.484,-0.2513,-0.9747},[3]float32{-2.768,-0.199,-1.345},[3]float32{-2.452,-0.1473,-1.71},[3]float32{-0.3321,-0.6012,1.499},[3]float32{-0.00152,-0.6135,1.586},[3]float32{-0.3388,-0.6213,1.641},[3]float32{-0.6694,-0.609,1.554},[3]float32{-1.007,-0.6072,1.542},[3]float32{-1.307,-0.5865,1.395},[3]float32{-0.9732,-0.5883,1.408},[3]float32{-0.6725,-0.6089,1.554},[3]float32{-1.62,-0.5701,1.279},[3]float32{-1.828,-0.5373,1.047},[3]float32{-1.518,-0.5535,1.162},[3]float32{-1.311,-0.5863,1.394},[3]float32{-2.135,-0.4976,0.7662},[3]float32{-2.208,-0.4427,0.3781},[3]float32{-1.903,-0.4822,0.6574},[3]float32{-1.83,-0.5371,1.046},[3]float32{-2.522,-0.4033,0.09959},[3]float32{-2.421,-0.3507,-0.2723},[3]float32{-2.108,-0.3898,0.004185},[3]float32{-2.209,-0.4424,0.3761},[3]float32{-2.729,-0.3044,-0.5999},[3]float32{-2.484,-0.2517,-0.9725},[3]float32{-2.176,-0.2976,-0.6475},[3]float32{-2.422,-0.3503,-0.2749},[3]float32{-1.061,-0.1087,-1.718},[3]float32{2.792,0.4871,-1.259},[3]float32{2.142,0.1746,-1.297},[3]float32{2.754,0.3796,-0.4991},[3]float32{2.151,0.1543,-0.5849},[3]float32{2.546,0.2799,0.2059},[3]float32{2.083,0.06273,0.0628},[3]float32{2.157,0.1847,0.8788},[3]float32{1.879,-0.02861,0.7087},[3]float32{1.636,0.1112,1.399},[3]float32{1.501,-0.09869,1.204},[3]float32{1.014,0.07351,1.665},[3]float32{0.9654,-0.1327,1.445},[3]float32{0.3407,0.05918,1.766},[3]float32{0.3302,-0.1456,1.536},[3]float32{2.154,0.07289,-1.306},[3]float32{2.162,-0.02563,-0.6098},[3]float32{2.094,-0.1175,0.03959},[3]float32{1.889,-0.2092,0.6885},[3]float32{1.508,-0.2798,1.188},[3]float32{0.9686,-0.3141,1.43},[3]float32{0.3311,-0.327,1.521},[3]float32{0.3399,-0.299,1.704},[3]float32{1.011,-0.2848,1.603},[3]float32{1.63,-0.2473,1.339},[3]float32{2.148,-0.1741,0.821},[3]float32{2.536,-0.0793,0.1506},[3]float32{2.743,0.02005,-0.5519},[3]float32{2.781,0.1265,-1.305},[3]float32{1.428,0.2447,-1.416},[3]float32{1.434,0.2838,-0.9336},[3]float32{1.388,0.2227,-0.5019},[3]float32{1.253,0.1618,-0.07126},[3]float32{1.001,0.1151,0.2591},[3]float32{0.6436,0.09241,0.4196},[3]float32{0.2202,0.08385,0.4801},[3]float32{2.468,-0.4496,-1.378},[3]float32{0.3355,-0.8615,1.535},[3]float32{0.9899,-0.848,1.439},[3]float32{1.569,-0.8121,1.185},[3]float32{2.019,-0.7401,0.6765},[3]float32{2.315,-0.6468,0.01655},[3]float32{2.453,-0.5512,-0.6591},[3]float32{2.166,0.06133,-1.303},[3]float32{2.484,0.009624,-0.9372},[3]float32{2.769,0.0621,-1.308},[3]float32{2.452,0.1138,-1.674},[3]float32{0.332,-0.3396,1.532},[3]float32{0.0005064,-0.3524,1.623},[3]float32{0.3389,-0.3607,1.682},[3]float32{0.6704,-0.3479,1.591},[3]float32{1.007,-0.3466,1.582},[3]float32{1.308,-0.3254,1.432},[3]float32{0.9723,-0.3267,1.441},[3]float32{0.6714,-0.3479,1.591},[3]float32{1.622,-0.3094,1.319},[3]float32{1.829,-0.2762,1.084},[3]float32{1.516,-0.2921,1.196},[3]float32{1.309,-0.3254,1.432},[3]float32{2.138,-0.2367,0.8045},[3]float32{2.208,-0.1815,0.4145},[3]float32{1.9,-0.2209,0.693},[3]float32{1.83,-0.2761,1.083},[3]float32{2.524,-0.1423,0.137},[3]float32{2.422,-0.0895,-0.2363},[3]float32{2.106,-0.1286,0.04056},[3]float32{2.209,-0.1814,0.4139},[3]float32{2.731,-0.04332,-0.5628},[3]float32{2.484,0.009519,-0.9364},[3]float32{2.174,-0.03654,-0.6107},[3]float32{2.422,-0.08938,-0.2371},[3]float32{1.061,0.1611,-1.68},[3]float32{2.173,-0.45,-1.375},[3]float32{2.483,-0.5009,-1.015},[3]float32{2.763,-0.4492,-1.381},[3]float32{2.452,-0.3983,-1.74},[3]float32{0.3324,-0.8523,1.47},[3]float32{0.006795,-0.8637,1.55},[3]float32{0.3385,-0.8706,1.6},[3]float32{0.6641,-0.8593,1.519},[3]float32{1.005,-0.8566,1.5},[3]float32{1.302,-0.837,1.361},[3]float32{0.9747,-0.8394,1.378},[3]float32{0.6778,-0.859,1.517},[3]float32{1.616,-0.8197,1.239},[3]float32{1.823,-0.788,1.015},[3]float32{1.522,-0.8045,1.132},[3]float32{1.315,-0.8361,1.355},[3]float32{2.13,-0.7474,0.7281},[3]float32{2.205,-0.6935,0.3471},[3]float32{1.908,-0.7328,0.6249},[3]float32{1.833,-0.7867,1.006},[3]float32{2.516,-0.6533,0.06285},[3]float32{2.419,-0.6016,-0.3027},[3]float32{2.114,-0.6402,-0.02979},[3]float32{2.211,-0.6919,0.3357},[3]float32{2.724,-0.5545,-0.6358},[3]float32{2.483,-0.5026,-1.003},[3]float32{2.181,-0.5479,-0.6824},[3]float32{2.422,-0.5998,-0.3154},[3]float32{2.167,-0.1997,-1.34},[3]float32{2.484,-0.2513,-0.9747},[3]float32{2.768,-0.199,-1.345},[3]float32{2.452,-0.1473,-1.71},[3]float32{0.3321,-0.6012,1.499},[3]float32{0.00152,-0.6135,1.586},[3]float32{0.3388,-0.6213,1.641},[3]float32{0.6694,-0.609,1.554},[3]float32{1.007,-0.6072,1.542},[3]float32{1.307,-0.5865,1.395},[3]float32{0.9732,-0.5883,1.408},[3]float32{0.6725,-0.6089,1.554},[3]float32{1.62,-0.5701,1.279},[3]float32{1.828,-0.5373,1.047},[3]float32{1.518,-0.5535,1.162},[3]float32{1.311,-0.5863,1.394},[3]float32{2.135,-0.4976,0.7662},[3]float32{2.208,-0.4427,0.3781},[3]float32{1.903,-0.4822,0.6574},[3]float32{1.83,-0.5371,1.046},[3]float32{2.522,-0.4033,0.09959},[3]float32{2.421,-0.3507,-0.2723},[3]float32{2.108,-0.3898,0.004185},[3]float32{2.209,-0.4424,0.3761},[3]float32{2.729,-0.3044,-0.5999},[3]float32{2.484,-0.2517,-0.9725},[3]float32{2.176,-0.2976,-0.6475},[3]float32{2.422,-0.3503,-0.2749},[3]float32{1.061,-0.1087,-1.718},[3]float32{-2.78,0.5426,-1.652},[3]float32{-2.122,0.1477,-1.677},[3]float32{-2.789,0.4325,-0.8732},[3]float32{-2.792,0.7941,-1.216},[3]float32{-2.79,0.2435,-1.293},[3]float32{-2.145,0.09869,-1.307},[3]float32{-2.677,0.3286,-0.1389},[3]float32{-2.754,0.6865,-0.4557},[3]float32{-2.751,0.1362,-0.534},[3]float32{-2.154,0.0194,-0.6038},[3]float32{-2.371,0.2322,0.5426},[3]float32{-2.546,0.5868,0.2493},[3]float32{-2.544,0.03659,0.1703},[3]float32{-2.085,-0.07226,0.04428},[3]float32{-1.911,0.1426,1.177},[3]float32{-2.157,0.4917,0.9222},[3]float32{-2.155,-0.05849,0.8426},[3]float32{-1.881,-0.1637,0.6909},[3]float32{-1.336,0.08874,1.557},[3]float32{-1.636,0.4181,1.442},[3]float32{-1.634,-0.1319,1.362},[3]float32{-1.503,-0.2339,1.187},[3]float32{-0.6794,0.06411,1.731},[3]float32{-1.014,0.3805,1.708},[3]float32{-1.013,-0.1695,1.628},[3]float32{-0.9662,-0.268,1.429},[3]float32{0.0,0.05784,1.776},[3]float32{-0.3407,0.3661,1.81},[3]float32{-0.3405,-0.1838,1.729},[3]float32{-0.3304,-0.2809,1.519},[3]float32{-2.154,0.183,-0.9298},[3]float32{-2.128,0.1079,-0.2563},[3]float32{-2.003,0.01768,0.3814},[3]float32{-1.711,-0.06958,0.9984},[3]float32{-1.252,-0.1188,1.346},[3]float32{-0.6541,-0.1414,1.506},[3]float32{0.0,-0.1466,1.543},[3]float32{-1.963,0.2426,-1.32},[3]float32{-1.972,0.2766,-0.6594},[3]float32{-1.909,0.1927,-0.06564},[3]float32{-1.722,0.1089,0.5264},[3]float32{-1.376,0.0447,0.9807},[3]float32{-0.8849,0.0135,1.201},[3]float32{-0.3027,0.001732,1.285},[3]float32{-2.162,0.06963,-1.303},[3]float32{-2.171,-0.0284,-0.6098},[3]float32{-2.102,-0.1204,0.04094},[3]float32{-1.897,-0.2125,0.6923},[3]float32{-1.514,-0.2835,1.194},[3]float32{-0.9712,-0.318,1.438},[3]float32{-0.3317,-0.3309,1.529},[3]float32{-0.3392,-0.34,1.689},[3]float32{-1.009,-0.3259,1.589},[3]float32{-1.625,-0.2886,1.325},[3]float32{-2.141,-0.2157,0.8097},[3]float32{-2.528,-0.1211,0.1413},[3]float32{-2.734,-0.02207,-0.5593},[3]float32{-2.773,0.08362,-1.307},[3]float32{-2.769,0.1812,-1.691},[3]float32{-2.134,0.1242,-1.669},[3]float32{-2.166,0.02262,-0.951},[3]float32{-2.14,-0.07222,-0.2804},[3]float32{-2.014,-0.1627,0.3595},[3]float32{-1.72,-0.2505,0.9801},[3]float32{-1.257,-0.3001,1.331},[3]float32{-0.656,-0.3228,1.492},[3]float32{0.0,-0.328,1.528},[3]float32{-0.6776,-0.2941,1.669},[3]float32{-1.331,-0.2696,1.496},[3]float32{-1.903,-0.2161,1.118},[3]float32{-2.361,-0.1268,0.4862},[3]float32{-2.666,-0.03071,-0.1929},[3]float32{-2.778,0.0726,-0.9234},[3]float32{-1.153,0.1896,-1.613},[3]float32{-1.256,0.2732,-1.231},[3]float32{-1.241,0.2441,-0.8359},[3]float32{-1.167,0.1914,-0.4632},[3]float32{-0.9965,0.1411,-0.1071},[3]float32{-0.7287,0.1121,0.09755},[3]float32{-0.3811,0.09886,0.1912},[3]float32{0.0,0.09574,0.2133},[3]float32{-2.452,0.1247,-1.673},[3]float32{-2.484,0.01499,-0.9361},[3]float32{-0.6709,-0.3425,1.592},[3]float32{-1.309,-0.32,1.433},[3]float32{-1.83,-0.2707,1.084},[3]float32{-2.209,-0.1761,0.415},[3]float32{-2.422,-0.08402,-0.236},[3]float32{-2.227,0.09968,-1.574},[3]float32{-2.255,0.02316,-1.033},[3]float32{-2.704,0.02213,-1.026},[3]float32{-2.684,0.1019,-1.59},[3]float32{-2.169,-0.3874,-1.366},[3]float32{-2.484,-0.4388,-1.003},[3]float32{-2.766,-0.3866,-1.372},[3]float32{-2.452,-0.3352,-1.735},[3]float32{-0.5823,-0.3407,1.54},[3]float32{-0.08337,-0.3438,1.562},[3]float32{-0.08511,-0.36,1.676},[3]float32{-0.591,-0.3563,1.65},[3]float32{-0.3323,-0.7892,1.475},[3]float32{-0.003092,-0.8011,1.559},[3]float32{-0.3387,-0.8086,1.612},[3]float32{-0.6678,-0.7967,1.528},[3]float32{-0.7589,-0.3527,1.625},[3]float32{-1.247,-0.3356,1.504},[3]float32{-1.21,-0.3209,1.4},[3]float32{-0.7432,-0.3375,1.517},[3]float32{-1.006,-0.7945,1.513},[3]float32{-1.306,-0.7743,1.369},[3]float32{-0.9738,-0.7763,1.383},[3]float32{-0.6741,-0.7966,1.527},[3]float32{-1.402,-0.3262,1.438},[3]float32{-1.816,-0.2883,1.17},[3]float32{-1.712,-0.2763,1.085},[3]float32{-1.347,-0.3122,1.338},[3]float32{-1.618,-0.7575,1.251},[3]float32{-1.826,-0.7252,1.022},[3]float32{-1.52,-0.7415,1.137},[3]float32{-1.312,-0.7739,1.366},[3]float32{-1.946,-0.2701,1.041},[3]float32{-2.271,-0.1994,0.5406},[3]float32{-2.051,-0.1873,0.4556},[3]float32{-1.809,-0.2584,0.9582},[3]float32{-2.133,-0.6851,0.7387},[3]float32{-2.207,-0.6305,0.3528},[3]float32{-1.905,-0.67,0.6319},[3]float32{-1.831,-0.7246,1.018},[3]float32{-2.368,-0.1757,0.3733},[3]float32{-2.576,-0.1055,-0.1234},[3]float32{-2.214,-0.09652,-0.1866},[3]float32{-2.103,-0.1642,0.2919},[3]float32{-2.52,-0.5909,0.07258},[3]float32{-2.421,-0.5386,-0.2974},[3]float32{-2.11,-0.5775,-0.02187},[3]float32{-2.209,-0.6299,0.3481},[3]float32{-2.628,-0.08063,-0.299},[3]float32{-2.695,-0.004303,-0.8387},[3]float32{-2.257,-0.001381,-0.8594},[3]float32{-2.231,-0.07339,-0.3502},[3]float32{-2.728,-0.492,-0.6266},[3]float32{-2.483,-0.4395,-0.9976},[3]float32{-2.178,-0.4853,-0.6739},[3]float32{-2.422,-0.5378,-0.3029},[3]float32{-1.061,-0.3634,-1.754},[3]float32{-2.122,0.156,-1.675},[3]float32{-2.249,-0.4499,-1.376},[3]float32{-2.479,-0.4877,-1.108},[3]float32{-2.687,-0.4493,-1.38},[3]float32{-2.456,-0.4115,-1.647},[3]float32{-2.233,-0.4122,-1.642},[3]float32{-2.26,-0.4875,-1.109},[3]float32{-2.699,-0.4886,-1.102},[3]float32{-2.679,-0.41,-1.657},[3]float32{-0.3333,-0.8549,1.488},[3]float32{-0.09134,-0.8631,1.546},[3]float32{-0.3376,-0.868,1.581},[3]float32{-0.5796,-0.8598,1.523},[3]float32{-0.5782,-0.8531,1.476},[3]float32{-0.08821,-0.8561,1.497},[3]float32{-0.08971,-0.8702,1.596},[3]float32{-0.5857,-0.8665,1.57},[3]float32{-1.001,-0.8541,1.482},[3]float32{-1.222,-0.8398,1.381},[3]float32{-0.9791,-0.8419,1.396},[3]float32{-0.7581,-0.8562,1.497},[3]float32{-0.7626,-0.8628,1.544},[3]float32{-1.24,-0.846,1.426},[3]float32{-1.208,-0.8334,1.336},[3]float32{-0.749,-0.8497,1.451},[3]float32{-1.602,-0.8175,1.224},[3]float32{-1.757,-0.7942,1.059},[3]float32{-1.536,-0.8067,1.147},[3]float32{-1.381,-0.8299,1.312},[3]float32{-1.402,-0.8362,1.356},[3]float32{-1.806,-0.7993,1.095},[3]float32{-1.713,-0.7887,1.02},[3]float32{-1.355,-0.824,1.27},[3]float32{-2.1,-0.7454,0.7141},[3]float32{-2.158,-0.7055,0.4315},[3]float32{-1.938,-0.7348,0.6388},[3]float32{-1.881,-0.7747,0.9214},[3]float32{-1.942,-0.7804,0.9611},[3]float32{-2.262,-0.7108,0.4692},[3]float32{-2.056,-0.6995,0.3896},[3]float32{-1.816,-0.7697,0.8859},[3]float32{-2.464,-0.6516,0.05072},[3]float32{-2.393,-0.6132,-0.2206},[3]float32{-2.166,-0.6419,-0.01764},[3]float32{-2.237,-0.6803,0.2537},[3]float32{-2.364,-0.6862,0.2949},[3]float32{-2.568,-0.6172,-0.1924},[3]float32{-2.218,-0.6086,-0.2534},[3]float32{-2.11,-0.6751,0.2169},[3]float32{-2.654,-0.5537,-0.6418},[3]float32{-2.475,-0.5151,-0.9145},[3]float32{-2.252,-0.5488,-0.6764},[3]float32{-2.43,-0.5873,-0.4037},[3]float32{-2.624,-0.5912,-0.3764},[3]float32{-2.689,-0.5162,-0.9068},[3]float32{-2.262,-0.5133,-0.9269},[3]float32{-2.236,-0.5842,-0.4263},[3]float32{-2.228,-0.1614,-1.61},[3]float32{-2.256,-0.2378,-1.07},[3]float32{-2.703,-0.2389,-1.063},[3]float32{-2.683,-0.1593,-1.626},[3]float32{-0.5818,-0.6022,1.506},[3]float32{-0.08417,-0.6052,1.527},[3]float32{-0.08583,-0.6206,1.637},[3]float32{-0.5901,-0.617,1.61},[3]float32{-0.7594,-0.6134,1.585},[3]float32{-1.246,-0.5963,1.465},[3]float32{-1.21,-0.5824,1.366},[3]float32{-0.7444,-0.5989,1.483},[3]float32{-1.401,-0.5869,1.398},[3]float32{-1.813,-0.5492,1.131},[3]float32{-1.713,-0.5377,1.05},[3]float32{-1.349,-0.5735,1.303},[3]float32{-1.944,-0.5309,1.002},[3]float32{-2.268,-0.4604,0.5032},[3]float32{-2.053,-0.4486,0.4199},[3]float32{-1.811,-0.5196,0.9222},[3]float32{-2.366,-0.4366,0.3353},[3]float32{-2.574,-0.3666,-0.1599},[3]float32{-2.215,-0.3577,-0.2226},[3]float32{-2.104,-0.4252,0.2548},[3]float32{-2.627,-0.3416,-0.3366},[3]float32{-2.693,-0.2654,-0.875},[3]float32{-2.258,-0.2625,-0.8956},[3]float32{-2.232,-0.3344,-0.3875},[3]float32{-2.122,-0.111,-1.713},[3]float32{-2.167,-0.009349,-1.313},[3]float32{-2.484,-0.06101,-0.9475},[3]float32{-2.769,-0.008573,-1.318},[3]float32{-2.452,0.04308,-1.684},[3]float32{-0.332,-0.4105,1.524},[3]float32{-0.001013,-0.4231,1.613},[3]float32{-0.3389,-0.4312,1.67},[3]float32{-0.6699,-0.4186,1.581},[3]float32{-1.007,-0.4171,1.57},[3]float32{-1.308,-0.3961,1.422},[3]float32{-0.9727,-0.3976,1.433},[3]float32{-0.672,-0.4186,1.581},[3]float32{-1.621,-0.3799,1.308},[3]float32{-1.829,-0.3469,1.074},[3]float32{-1.517,-0.363,1.188},[3]float32{-1.31,-0.396,1.421},[3]float32{-2.137,-0.3073,0.7938},[3]float32{-2.208,-0.2522,0.4048},[3]float32{-1.901,-0.2917,0.6837},[3]float32{-1.83,-0.3467,1.073},[3]float32{-2.523,-0.2129,0.1268},[3]float32{-2.421,-0.1602,-0.2458},[3]float32{-2.107,-0.1994,0.03084},[3]float32{-2.209,-0.2521,0.4034},[3]float32{-2.73,-0.114,-0.5729},[3]float32{-2.484,-0.06121,-0.946},[3]float32{-2.175,-0.1072,-0.6207},[3]float32{-2.422,-0.16,-0.2476},[3]float32{-1.061,0.08604,-1.691},[3]float32{2.78,0.5426,-1.652},[3]float32{2.79,0.2435,-1.293},[3]float32{2.789,0.4325,-0.8732},[3]float32{2.792,0.7941,-1.216},[3]float32{2.122,0.1477,-1.677},[3]float32{1.963,0.2426,-1.32},[3]float32{2.154,0.183,-0.9298},[3]float32{2.145,0.09869,-1.307},[3]float32{2.751,0.1362,-0.534},[3]float32{2.677,0.3286,-0.1389},[3]float32{2.754,0.6865,-0.4557},[3]float32{1.972,0.2766,-0.6594},[3]float32{2.128,0.1079,-0.2563},[3]float32{2.154,0.0194,-0.6038},[3]float32{2.544,0.03659,0.1703},[3]float32{2.371,0.2322,0.5426},[3]float32{2.546,0.5868,0.2493},[3]float32{1.909,0.1927,-0.06564},[3]float32{2.003,0.01768,0.3814},[3]float32{2.085,-0.07226,0.04428},[3]float32{2.155,-0.05849,0.8426},[3]float32{1.911,0.1426,1.177},[3]float32{2.157,0.4917,0.9222},[3]float32{1.722,0.1089,0.5264},[3]float32{1.711,-0.06958,0.9984},[3]float32{1.881,-0.1637,0.6909},[3]float32{1.634,-0.1319,1.362},[3]float32{1.336,0.08874,1.557},[3]float32{1.636,0.4181,1.442},[3]float32{1.376,0.0447,0.9807},[3]float32{1.252,-0.1188,1.346},[3]float32{1.503,-0.2339,1.187},[3]float32{1.013,-0.1695,1.628},[3]float32{0.6794,0.06411,1.731},[3]float32{1.014,0.3805,1.708},[3]float32{0.8849,0.0135,1.201},[3]float32{0.6541,-0.1414,1.506},[3]float32{0.9662,-0.268,1.429},[3]float32{0.3405,-0.1838,1.729},[3]float32{0.3407,0.3661,1.81},[3]float32{0.3027,0.001732,1.285},[3]float32{0.3304,-0.2809,1.519},[3]float32{2.166,0.02262,-0.951},[3]float32{2.162,0.06963,-1.303},[3]float32{2.134,0.1242,-1.669},[3]float32{2.14,-0.07222,-0.2804},[3]float32{2.171,-0.0284,-0.6098},[3]float32{2.014,-0.1627,0.3595},[3]float32{2.102,-0.1204,0.04094},[3]float32{1.72,-0.2505,0.9801},[3]float32{1.897,-0.2125,0.6923},[3]float32{1.257,-0.3001,1.331},[3]float32{1.514,-0.2835,1.194},[3]float32{0.656,-0.3228,1.492},[3]float32{0.9712,-0.318,1.438},[3]float32{0.3317,-0.3309,1.529},[3]float32{0.6776,-0.2941,1.669},[3]float32{0.3392,-0.34,1.689},[3]float32{0.0,-0.3003,1.713},[3]float32{1.331,-0.2696,1.496},[3]float32{1.009,-0.3259,1.589},[3]float32{1.903,-0.2161,1.118},[3]float32{1.625,-0.2886,1.325},[3]float32{2.361,-0.1268,0.4862},[3]float32{2.141,-0.2157,0.8097},[3]float32{2.666,-0.03072,-0.1929},[3]float32{2.528,-0.1212,0.1413},[3]float32{2.778,0.07259,-0.9234},[3]float32{2.734,-0.02207,-0.5593},[3]float32{2.769,0.1812,-1.691},[3]float32{2.773,0.08362,-1.307},[3]float32{1.153,0.1896,-1.613},[3]float32{1.256,0.2732,-1.231},[3]float32{1.241,0.2441,-0.8359},[3]float32{1.167,0.1914,-0.4632},[3]float32{0.9965,0.1411,-0.1071},[3]float32{0.7287,0.1121,0.09755},[3]float32{0.3811,0.09886,0.1912},[3]float32{2.249,-0.4499,-1.376},[3]float32{2.479,-0.4877,-1.108},[3]float32{2.687,-0.4493,-1.38},[3]float32{2.456,-0.4115,-1.647},[3]float32{0.3333,-0.8549,1.488},[3]float32{0.09134,-0.8631,1.546},[3]float32{0.3376,-0.868,1.581},[3]float32{0.5796,-0.8598,1.523},[3]float32{1.001,-0.8541,1.482},[3]float32{1.222,-0.8398,1.381},[3]float32{0.9791,-0.8419,1.396},[3]float32{0.7581,-0.8562,1.497},[3]float32{1.602,-0.8175,1.224},[3]float32{1.757,-0.7942,1.059},[3]float32{1.536,-0.8067,1.147},[3]float32{1.381,-0.8299,1.312},[3]float32{2.1,-0.7454,0.7141},[3]float32{2.158,-0.7055,0.4315},[3]float32{1.938,-0.7348,0.6388},[3]float32{1.881,-0.7748,0.9214},[3]float32{2.464,-0.6516,0.05072},[3]float32{2.393,-0.6132,-0.2206},[3]float32{2.166,-0.6419,-0.01764},[3]float32{2.237,-0.6803,0.2537},[3]float32{2.654,-0.5537,-0.6418},[3]float32{2.475,-0.5151,-0.9145},[3]float32{2.252,-0.5488,-0.6764},[3]float32{2.43,-0.5874,-0.4037},[3]float32{2.255,0.02316,-1.033},[3]float32{2.167,-0.009349,-1.313},[3]float32{2.227,0.09968,-1.574},[3]float32{2.484,0.01499,-0.9361},[3]float32{2.704,0.02213,-1.026},[3]float32{2.484,-0.06101,-0.9475},[3]float32{2.684,0.1019,-1.59},[3]float32{2.769,-0.008574,-1.318},[3]float32{2.452,0.1247,-1.673},[3]float32{2.452,0.04308,-1.684},[3]float32{0.08337,-0.3438,1.562},[3]float32{0.332,-0.4105,1.524},[3]float32{0.5823,-0.3407,1.54},[3]float32{0.0,-0.347,1.624},[3]float32{0.08511,-0.36,1.676},[3]float32{0.001013,-0.4231,1.613},[3]float32{0.591,-0.3563,1.65},[3]float32{0.3389,-0.4312,1.67},[3]float32{0.6709,-0.3425,1.592},[3]float32{0.6699,-0.4186,1.581},[3]float32{1.247,-0.3356,1.504},[3]float32{1.007,-0.4171,1.57},[3]float32{0.7589,-0.3527,1.625},[3]float32{1.309,-0.32,1.433},[3]float32{1.21,-0.3209,1.4},[3]float32{1.308,-0.3961,1.422},[3]float32{0.7432,-0.3375,1.517},[3]float32{0.9727,-0.3976,1.433},[3]float32{0.672,-0.4186,1.581},[3]float32{1.816,-0.2883,1.17},[3]float32{1.621,-0.3799,1.308},[3]float32{1.402,-0.3262,1.438},[3]float32{1.83,-0.2707,1.084},[3]float32{1.712,-0.2763,1.085},[3]float32{1.829,-0.3469,1.074},[3]float32{1.347,-0.3122,1.338},[3]float32{1.517,-0.363,1.188},[3]float32{1.31,-0.396,1.421},[3]float32{2.271,-0.1994,0.5406},[3]float32{2.137,-0.3073,0.7938},[3]float32{1.946,-0.2701,1.041},[3]float32{2.209,-0.1761,0.415},[3]float32{2.051,-0.1873,0.4556},[3]float32{2.208,-0.2522,0.4048},[3]float32{1.809,-0.2584,0.9582},[3]float32{1.901,-0.2917,0.6837},[3]float32{1.83,-0.3467,1.073},[3]float32{2.576,-0.1055,-0.1234},[3]float32{2.523,-0.2129,0.1268},[3]float32{2.368,-0.1757,0.3733},[3]float32{2.422,-0.08402,-0.236},[3]float32{2.214,-0.09652,-0.1866},[3]float32{2.421,-0.1602,-0.2458},[3]float32{2.103,-0.1642,0.2919},[3]float32{2.107,-0.1994,0.03084},[3]float32{2.209,-0.2521,0.4034},[3]float32{2.695,-0.004304,-0.8387},[3]float32{2.73,-0.114,-0.5729},[3]float32{2.628,-0.08063,-0.299},[3]float32{2.257,-0.001381,-0.8594},[3]float32{2.484,-0.06122,-0.946},[3]float32{2.231,-0.07339,-0.3501},[3]float32{2.175,-0.1072,-0.6207},[3]float32{2.422,-0.16,-0.2476},[3]float32{2.122,0.156,-1.675},[3]float32{1.061,0.08604,-1.691},[3]float32{0.0,0.1637,-1.682},[3]float32{2.169,-0.3874,-1.366},[3]float32{2.26,-0.4875,-1.109},[3]float32{2.233,-0.4122,-1.642},[3]float32{2.484,-0.4388,-1.003},[3]float32{2.699,-0.4886,-1.102},[3]float32{2.766,-0.3866,-1.372},[3]float32{2.679,-0.41,-1.657},[3]float32{2.452,-0.3352,-1.735},[3]float32{0.3322,-0.7892,1.475},[3]float32{0.08821,-0.8561,1.497},[3]float32{0.5782,-0.8531,1.476},[3]float32{0.003092,-0.8011,1.559},[3]float32{0.08971,-0.8702,1.596},[3]float32{0.3387,-0.8086,1.612},[3]float32{0.5857,-0.8665,1.57},[3]float32{0.6678,-0.7967,1.528},[3]float32{1.006,-0.7945,1.513},[3]float32{1.24,-0.846,1.426},[3]float32{0.7626,-0.8628,1.544},[3]float32{1.306,-0.7743,1.369},[3]float32{1.208,-0.8334,1.336},[3]float32{0.9738,-0.7763,1.383},[3]float32{0.749,-0.8497,1.451},[3]float32{0.6741,-0.7966,1.527},[3]float32{1.618,-0.7575,1.251},[3]float32{1.806,-0.7993,1.095},[3]float32{1.402,-0.8362,1.356},[3]float32{1.826,-0.7252,1.022},[3]float32{1.713,-0.7887,1.02},[3]float32{1.52,-0.7415,1.137},[3]float32{1.355,-0.824,1.27},[3]float32{1.312,-0.7739,1.366},[3]float32{2.133,-0.6851,0.7387},[3]float32{2.262,-0.7108,0.4692},[3]float32{1.942,-0.7804,0.9611},[3]float32{2.207,-0.6305,0.3528},[3]float32{2.056,-0.6995,0.3896},[3]float32{1.905,-0.67,0.6319},[3]float32{1.816,-0.7697,0.8859},[3]float32{1.831,-0.7246,1.018},[3]float32{2.52,-0.5909,0.07258},[3]float32{2.568,-0.6172,-0.1924},[3]float32{2.364,-0.6862,0.2949},[3]float32{2.421,-0.5386,-0.2974},[3]float32{2.218,-0.6086,-0.2534},[3]float32{2.11,-0.5775,-0.02187},[3]float32{2.11,-0.6751,0.2169},[3]float32{2.209,-0.6299,0.3481},[3]float32{2.728,-0.492,-0.6266},[3]float32{2.689,-0.5162,-0.9068},[3]float32{2.624,-0.5912,-0.3764},[3]float32{2.483,-0.4395,-0.9976},[3]float32{2.262,-0.5133,-0.9269},[3]float32{2.178,-0.4853,-0.6739},[3]float32{2.236,-0.5842,-0.4263},[3]float32{2.422,-0.5378,-0.3029},[3]float32{2.256,-0.2378,-1.07},[3]float32{2.228,-0.1614,-1.61},[3]float32{2.703,-0.2389,-1.063},[3]float32{2.683,-0.1593,-1.626},[3]float32{0.08417,-0.6052,1.527},[3]float32{0.5817,-0.6022,1.506},[3]float32{0.08583,-0.6206,1.637},[3]float32{0.5901,-0.617,1.61},[3]float32{1.246,-0.5963,1.465},[3]float32{0.7594,-0.6134,1.585},[3]float32{1.21,-0.5824,1.366},[3]float32{0.7444,-0.5989,1.483},[3]float32{1.813,-0.5492,1.131},[3]float32{1.401,-0.5869,1.398},[3]float32{1.713,-0.5377,1.05},[3]float32{1.349,-0.5735,1.303},[3]float32{2.268,-0.4604,0.5032},[3]float32{1.944,-0.5309,1.002},[3]float32{2.053,-0.4486,0.4199},[3]float32{1.811,-0.5196,0.9222},[3]float32{2.574,-0.3666,-0.1599},[3]float32{2.366,-0.4366,0.3353},[3]float32{2.215,-0.3577,-0.2226},[3]float32{2.104,-0.4252,0.2548},[3]float32{2.693,-0.2654,-0.875},[3]float32{2.627,-0.3416,-0.3366},[3]float32{2.258,-0.2625,-0.8956},[3]float32{2.232,-0.3344,-0.3875},[3]float32{2.122,-0.111,-1.713},[3]float32{1.061,-0.3634,-1.754},[3]float32{0.0,-0.1076,-1.721}},
                                        },
                                        &x3d.Transform{
                                                CoreX3DNode: x3d.CoreX3DNode{
                                                    DEF: stringPtr("Upper_teeth"),
                                                },
                                                Translation: &x3d.SFVec3f{0.0, 9.723, 11.67},
                                            Children: []x3d.X3DNode{
                                                &x3d.Shape{
                                                    Appearance: &x3d.Appearance{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            USE: stringPtr("BaseAppearance"),
                                                        },
                                                    },
                                                    Geometry: &x3d.IndexedFaceSet{
                                                        CoreX3DNode: x3d.CoreX3DNode{
                                                            DEF: stringPtr("Upper_teeth-FACES"),
                                                        },
                                                        Solid: boolPtr(false),
                                                        CreaseAngle: floatPtr(3.14159),
                                                        TexCoordIndex: []int32{0, 3, 2, -1, 2, 1, 0, -1, 4, 5, 2, -1, 2, 3, 4, -1, 6, 7, 2, -1, 2, 5, 6, -1, 8, 1, 2, -1, 2, 7, 8, -1, 9, 12, 11, -1, 11, 10, 9, -1, 13, 14, 11, -1, 11, 12, 13, -1, 15, 16, 11, -1, 11, 14, 15, -1, 17, 10, 11, -1, 11, 16, 17, -1, 8, 7, 19, -1, 19, 18, 8, -1, 6, 20, 19, -1, 19, 7, 6, -1, 21, 22, 19, -1, 19, 20, 21, -1, 23, 18, 19, -1, 19, 22, 23, -1, 17, 16, 25, -1, 25, 24, 17, -1, 15, 26, 25, -1, 25, 16, 15, -1, 27, 28, 25, -1, 25, 26, 27, -1, 29, 24, 25, -1, 25, 28, 29, -1, 23, 22, 31, -1, 31, 30, 23, -1, 21, 32, 31, -1, 31, 22, 21, -1, 33, 34, 31, -1, 31, 32, 33, -1, 35, 30, 31, -1, 31, 34, 35, -1, 29, 28, 37, -1, 37, 36, 29, -1, 27, 38, 37, -1, 37, 28, 27, -1, 39, 40, 37, -1, 37, 38, 39, -1, 41, 36, 37, -1, 37, 40, 41, -1, 35, 34, 43, -1, 43, 42, 35, -1, 33, 44, 43, -1, 43, 34, 33, -1, 45, 46, 43, -1, 43, 44, 45, -1, 47, 42, 43, -1, 43, 46, 47, -1, 41, 40, 87, -1, 87, 48, 41, -1, 39, 88, 87, -1, 87, 40, 39, -1, 145, 146, 87, -1, 87, 88, 145, -1, 147, 48, 87, -1, 87, 146, 147, -1, 47, 46, 149, -1, 149, 148, 47, -1, 45, 150, 149, -1, 149, 46, 45, -1, 151, 152, 149, -1, 149, 150, 151, -1, 153, 148, 149, -1, 149, 152, 153, -1, 147, 146, 155, -1, 155, 154, 147, -1, 145, 156, 155, -1, 155, 146, 145, -1, 157, 158, 155, -1, 155, 156, 157, -1, 159, 154, 155, -1, 155, 158, 159, -1, 153, 152, 161, -1, 161, 160, 153, -1, 151, 162, 161, -1, 161, 152, 151, -1, 163, 164, 161, -1, 161, 162, 163, -1, 165, 160, 161, -1, 161, 164, 165, -1, 159, 158, 167, -1, 167, 166, 159, -1, 157, 168, 167, -1, 167, 158, 157, -1, 169, 170, 167, -1, 167, 168, 169, -1, 171, 166, 167, -1, 167, 170, 171, -1, 165, 164, 173, -1, 173, 172, 165, -1, 163, 174, 173, -1, 173, 164, 163, -1, 175, 176, 173, -1, 173, 174, 175, -1, 177, 172, 173, -1, 173, 176, 177, -1, 171, 170, 179, -1, 179, 178, 171, -1, 169, 180, 179, -1, 179, 170, 169, -1, 181, 182, 179, -1, 179, 180, 181, -1, 183, 178, 179, -1, 179, 182, 183, -1, 9, 10, 185, -1, 185, 184, 9, -1, 17, 186, 185, -1, 185, 10, 17, -1, 187, 188, 185, -1, 185, 186, 187, -1, 189, 184, 185, -1, 185, 188, 189, -1, 17, 24, 190, -1, 190, 186, 17, -1, 29, 191, 190, -1, 190, 24, 29, -1, 192, 193, 190, -1, 190, 191, 192, -1, 187, 186, 190, -1, 190, 193, 187, -1, 29, 36, 194, -1, 194, 191, 29, -1, 41, 195, 194, -1, 194, 36, 41, -1, 262, 263, 194, -1, 194, 195, 262, -1, 192, 191, 194, -1, 194, 263, 192, -1, 41, 48, 292, -1, 292, 195, 41, -1, 147, 293, 292, -1, 292, 48, 147, -1, 294, 295, 292, -1, 292, 293, 294, -1, 262, 195, 292, -1, 292, 295, 262, -1, 147, 154, 296, -1, 296, 293, 147, -1, 159, 297, 296, -1, 296, 154, 159, -1, 298, 299, 296, -1, 296, 297, 298, -1, 294, 293, 296, -1, 296, 299, 294, -1, 159, 166, 300, -1, 300, 297, 159, -1, 171, 301, 300, -1, 300, 166, 171, -1, 302, 303, 300, -1, 300, 301, 302, -1, 298, 297, 300, -1, 300, 303, 298, -1, 171, 178, 304, -1, 304, 301, 171, -1, 183, 305, 304, -1, 304, 178, 183, -1, 306, 307, 304, -1, 304, 305, 306, -1, 302, 301, 304, -1, 304, 307, 302, -1, 175, 174, 309, -1, 309, 308, 175, -1, 163, 310, 309, -1, 309, 174, 163, -1, 311, 312, 309, -1, 309, 310, 311, -1, 313, 308, 309, -1, 309, 312, 313, -1, 163, 162, 314, -1, 314, 310, 163, -1, 151, 315, 314, -1, 314, 162, 151, -1, 316, 317, 314, -1, 314, 315, 316, -1, 311, 310, 314, -1, 314, 317, 311, -1, 151, 150, 318, -1, 318, 315, 151, -1, 45, 319, 318, -1, 318, 150, 45, -1, 320, 321, 318, -1, 318, 319, 320, -1, 316, 315, 318, -1, 318, 321, 316, -1, 45, 44, 322, -1, 322, 319, 45, -1, 33, 323, 322, -1, 322, 44, 33, -1, 324, 325, 322, -1, 322, 323, 324, -1, 320, 319, 322, -1, 322, 325, 320, -1, 33, 32, 326, -1, 326, 323, 33, -1, 21, 327, 326, -1, 326, 32, 21, -1, 328, 364, 326, -1, 326, 327, 328, -1, 324, 323, 326, -1, 326, 364, 324, -1, 21, 20, 421, -1, 421, 327, 21, -1, 6, 422, 421, -1, 421, 20, 6, -1, 423, 424, 421, -1, 421, 422, 423, -1, 328, 327, 421, -1, 421, 424, 328, -1, 6, 5, 425, -1, 425, 422, 6, -1, 4, 426, 425, -1, 425, 5, 4, -1, 427, 428, 425, -1, 425, 426, 427, -1, 423, 422, 425, -1, 425, 428, 423, -1, 15, 14, 430, -1, 430, 429, 15, -1, 13, 431, 430, -1, 430, 14, 13, -1, 432, 429, 430, -1, 430, 431, 432, -1, 27, 26, 434, -1, 434, 433, 27, -1, 15, 429, 434, -1, 434, 26, 15, -1, 432, 433, 434, -1, 434, 429, 432, -1, 39, 38, 436, -1, 436, 435, 39, -1, 27, 433, 436, -1, 436, 38, 27, -1, 432, 435, 436, -1, 436, 433, 432, -1, 145, 88, 438, -1, 438, 437, 145, -1, 39, 435, 438, -1, 438, 88, 39, -1, 432, 437, 438, -1, 438, 435, 432, -1, 157, 156, 440, -1, 440, 439, 157, -1, 145, 437, 440, -1, 440, 156, 145, -1, 432, 439, 440, -1, 440, 437, 432, -1, 169, 168, 442, -1, 442, 441, 169, -1, 157, 439, 442, -1, 442, 168, 157, -1, 432, 441, 442, -1, 442, 439, 432, -1, 181, 180, 444, -1, 444, 443, 181, -1, 169, 441, 444, -1, 444, 180, 169, -1, 432, 443, 444, -1, 444, 441, 432, -1, 49, 52, 51, -1, 51, 50, 49, -1, 53, 54, 51, -1, 51, 52, 53, -1, 55, 56, 51, -1, 51, 54, 55, -1, 57, 50, 51, -1, 51, 56, 57, -1, 58, 61, 60, -1, 60, 59, 58, -1, 62, 63, 60, -1, 60, 61, 62, -1, 64, 65, 60, -1, 60, 63, 64, -1, 66, 59, 60, -1, 60, 65, 66, -1, 67, 70, 69, -1, 69, 68, 67, -1, 71, 72, 69, -1, 69, 70, 71, -1, 73, 74, 69, -1, 69, 72, 73, -1, 75, 68, 69, -1, 69, 74, 75, -1, 76, 79, 78, -1, 78, 77, 76, -1, 80, 81, 78, -1, 78, 79, 80, -1, 82, 83, 78, -1, 78, 81, 82, -1, 84, 77, 78, -1, 78, 83, 84, -1, 85, 90, 89, -1, 89, 86, 85, -1, 91, 92, 89, -1, 89, 90, 91, -1, 93, 94, 89, -1, 89, 92, 93, -1, 95, 86, 89, -1, 89, 94, 95, -1, 96, 99, 98, -1, 98, 97, 96, -1, 100, 101, 98, -1, 98, 99, 100, -1, 102, 103, 98, -1, 98, 101, 102, -1, 104, 97, 98, -1, 98, 103, 104, -1, 105, 108, 107, -1, 107, 106, 105, -1, 109, 110, 107, -1, 107, 108, 109, -1, 111, 112, 107, -1, 107, 110, 111, -1, 113, 106, 107, -1, 107, 112, 113, -1, 114, 117, 116, -1, 116, 115, 114, -1, 118, 119, 116, -1, 116, 117, 118, -1, 120, 121, 116, -1, 116, 119, 120, -1, 122, 115, 116, -1, 116, 121, 122, -1, 118, 124, 123, -1, 123, 119, 118, -1, 125, 126, 123, -1, 123, 124, 125, -1, 127, 128, 123, -1, 123, 126, 127, -1, 120, 119, 123, -1, 123, 128, 120, -1, 125, 130, 129, -1, 129, 126, 125, -1, 131, 132, 129, -1, 129, 130, 131, -1, 133, 134, 129, -1, 129, 132, 133, -1, 127, 126, 129, -1, 129, 134, 127, -1, 131, 136, 135, -1, 135, 132, 131, -1, 114, 115, 135, -1, 135, 136, 114, -1, 122, 137, 135, -1, 135, 115, 122, -1, 133, 132, 135, -1, 135, 137, 133, -1, 138, 141, 140, -1, 140, 139, 138, -1, 142, 143, 140, -1, 140, 141, 142, -1, 144, 196, 140, -1, 140, 143, 144, -1, 197, 139, 140, -1, 140, 196, 197, -1, 142, 199, 198, -1, 198, 143, 142, -1, 200, 201, 198, -1, 198, 199, 200, -1, 202, 203, 198, -1, 198, 201, 202, -1, 144, 143, 198, -1, 198, 203, 144, -1, 200, 205, 204, -1, 204, 201, 200, -1, 206, 207, 204, -1, 204, 205, 206, -1, 208, 209, 204, -1, 204, 207, 208, -1, 202, 201, 204, -1, 204, 209, 202, -1, 206, 211, 210, -1, 210, 207, 206, -1, 138, 139, 210, -1, 210, 211, 138, -1, 197, 212, 210, -1, 210, 139, 197, -1, 208, 207, 210, -1, 210, 212, 208, -1, 206, 215, 214, -1, 214, 213, 206, -1, 216, 217, 214, -1, 214, 215, 216, -1, 218, 219, 214, -1, 214, 217, 218, -1, 220, 213, 214, -1, 214, 219, 220, -1, 216, 222, 221, -1, 221, 217, 216, -1, 223, 224, 221, -1, 221, 222, 223, -1, 225, 226, 221, -1, 221, 224, 225, -1, 218, 217, 221, -1, 221, 226, 218, -1, 223, 228, 227, -1, 227, 224, 223, -1, 138, 229, 227, -1, 227, 228, 138, -1, 230, 231, 227, -1, 227, 229, 230, -1, 225, 224, 227, -1, 227, 231, 225, -1, 138, 211, 232, -1, 232, 229, 138, -1, 206, 213, 232, -1, 232, 211, 206, -1, 220, 233, 232, -1, 232, 213, 220, -1, 230, 229, 232, -1, 232, 233, 230, -1, 216, 236, 235, -1, 235, 234, 216, -1, 237, 238, 235, -1, 235, 236, 237, -1, 239, 240, 235, -1, 235, 238, 239, -1, 241, 234, 235, -1, 235, 240, 241, -1, 237, 243, 242, -1, 242, 238, 237, -1, 244, 245, 242, -1, 242, 243, 244, -1, 246, 247, 242, -1, 242, 245, 246, -1, 239, 238, 242, -1, 242, 247, 239, -1, 244, 249, 248, -1, 248, 245, 244, -1, 223, 250, 248, -1, 248, 249, 223, -1, 251, 252, 248, -1, 248, 250, 251, -1, 246, 245, 248, -1, 248, 252, 246, -1, 223, 222, 253, -1, 253, 250, 223, -1, 216, 234, 253, -1, 253, 222, 216, -1, 241, 254, 253, -1, 253, 234, 241, -1, 251, 250, 253, -1, 253, 254, 251, -1, 237, 257, 256, -1, 256, 255, 237, -1, 258, 259, 256, -1, 256, 257, 258, -1, 260, 261, 256, -1, 256, 259, 260, -1, 264, 255, 256, -1, 256, 261, 264, -1, 258, 266, 265, -1, 265, 259, 258, -1, 267, 268, 265, -1, 265, 266, 267, -1, 269, 270, 265, -1, 265, 268, 269, -1, 260, 259, 265, -1, 265, 270, 260, -1, 267, 272, 271, -1, 271, 268, 267, -1, 244, 273, 271, -1, 271, 272, 244, -1, 274, 275, 271, -1, 271, 273, 274, -1, 269, 268, 271, -1, 271, 275, 269, -1, 244, 243, 276, -1, 276, 273, 244, -1, 237, 255, 276, -1, 276, 243, 237, -1, 264, 277, 276, -1, 276, 255, 264, -1, 274, 273, 276, -1, 276, 277, 274, -1, 258, 280, 279, -1, 279, 278, 258, -1, 281, 282, 279, -1, 279, 280, 281, -1, 283, 284, 279, -1, 279, 282, 283, -1, 285, 278, 279, -1, 279, 284, 285, -1, 281, 287, 286, -1, 286, 282, 281, -1, 288, 289, 286, -1, 286, 287, 288, -1, 290, 291, 286, -1, 286, 289, 290, -1, 283, 282, 286, -1, 286, 291, 283, -1, 288, 330, 329, -1, 329, 289, 288, -1, 267, 331, 329, -1, 329, 330, 267, -1, 332, 333, 329, -1, 329, 331, 332, -1, 290, 289, 329, -1, 329, 333, 290, -1, 267, 266, 334, -1, 334, 331, 267, -1, 258, 278, 334, -1, 334, 266, 258, -1, 285, 335, 334, -1, 334, 278, 285, -1, 332, 331, 334, -1, 334, 335, 332, -1, 281, 338, 337, -1, 337, 336, 281, -1, 125, 339, 337, -1, 337, 338, 125, -1, 340, 341, 337, -1, 337, 339, 340, -1, 342, 336, 337, -1, 337, 341, 342, -1, 125, 124, 343, -1, 343, 339, 125, -1, 118, 344, 343, -1, 343, 124, 118, -1, 345, 346, 343, -1, 343, 344, 345, -1, 340, 339, 343, -1, 343, 346, 340, -1, 118, 348, 347, -1, 347, 344, 118, -1, 288, 349, 347, -1, 347, 348, 288, -1, 350, 351, 347, -1, 347, 349, 350, -1, 345, 344, 347, -1, 347, 351, 345, -1, 288, 287, 352, -1, 352, 349, 288, -1, 281, 336, 352, -1, 352, 287, 281, -1, 342, 353, 352, -1, 352, 336, 342, -1, 350, 349, 352, -1, 352, 353, 350, -1, 432, 431, 446, -1, 446, 445, 432, -1, 13, 447, 446, -1, 446, 431, 13, -1, 448, 449, 446, -1, 446, 447, 448, -1, 450, 445, 446, -1, 446, 449, 450, -1, 354, 357, 356, -1, 356, 355, 354, -1, 358, 359, 356, -1, 356, 357, 358, -1, 53, 52, 356, -1, 356, 359, 53, -1, 49, 355, 356, -1, 356, 52, 49, -1, 358, 361, 360, -1, 360, 359, 358, -1, 362, 363, 360, -1, 360, 361, 362, -1, 55, 54, 360, -1, 360, 363, 55, -1, 53, 359, 360, -1, 360, 54, 53, -1, 362, 366, 365, -1, 365, 363, 362, -1, 367, 368, 365, -1, 365, 366, 367, -1, 57, 56, 365, -1, 365, 368, 57, -1, 55, 363, 365, -1, 365, 56, 55, -1, 367, 370, 369, -1, 369, 368, 367, -1, 354, 355, 369, -1, 369, 370, 354, -1, 49, 50, 369, -1, 369, 355, 49, -1, 57, 368, 369, -1, 369, 50, 57, -1, 371, 374, 373, -1, 373, 372, 371, -1, 375, 376, 373, -1, 373, 374, 375, -1, 62, 61, 373, -1, 373, 376, 62, -1, 58, 372, 373, -1, 373, 61, 58, -1, 375, 378, 377, -1, 377, 376, 375, -1, 379, 380, 377, -1, 377, 378, 379, -1, 64, 63, 377, -1, 377, 380, 64, -1, 62, 376, 377, -1, 377, 63, 62, -1, 379, 382, 381, -1, 381, 380, 379, -1, 383, 384, 381, -1, 381, 382, 383, -1, 66, 65, 381, -1, 381, 384, 66, -1, 64, 380, 381, -1, 381, 65, 64, -1, 383, 386, 385, -1, 385, 384, 383, -1, 371, 372, 385, -1, 385, 386, 371, -1, 58, 59, 385, -1, 385, 372, 58, -1, 66, 384, 385, -1, 385, 59, 66, -1, 387, 390, 389, -1, 389, 388, 387, -1, 391, 392, 389, -1, 389, 390, 391, -1, 71, 70, 389, -1, 389, 392, 71, -1, 67, 388, 389, -1, 389, 70, 67, -1, 391, 394, 393, -1, 393, 392, 391, -1, 395, 396, 393, -1, 393, 394, 395, -1, 73, 72, 393, -1, 393, 396, 73, -1, 71, 392, 393, -1, 393, 72, 71, -1, 395, 398, 397, -1, 397, 396, 395, -1, 399, 400, 397, -1, 397, 398, 399, -1, 75, 74, 397, -1, 397, 400, 75, -1, 73, 396, 397, -1, 397, 74, 73, -1, 399, 402, 401, -1, 401, 400, 399, -1, 387, 388, 401, -1, 401, 402, 387, -1, 67, 68, 401, -1, 401, 388, 67, -1, 75, 400, 401, -1, 401, 68, 75, -1, 403, 406, 405, -1, 405, 404, 403, -1, 407, 408, 405, -1, 405, 406, 407, -1, 80, 79, 405, -1, 405, 408, 80, -1, 76, 404, 405, -1, 405, 79, 76, -1, 407, 410, 409, -1, 409, 408, 407, -1, 411, 412, 409, -1, 409, 410, 411, -1, 82, 81, 409, -1, 409, 412, 82, -1, 80, 408, 409, -1, 409, 81, 80, -1, 411, 414, 413, -1, 413, 412, 411, -1, 415, 416, 413, -1, 413, 414, 415, -1, 84, 83, 413, -1, 413, 416, 84, -1, 82, 412, 413, -1, 413, 83, 82, -1, 415, 418, 417, -1, 417, 416, 415, -1, 403, 404, 417, -1, 417, 418, 403, -1, 76, 77, 417, -1, 417, 404, 76, -1, 84, 416, 417, -1, 417, 77, 84, -1, 419, 458, 457, -1, 457, 420, 419, -1, 459, 460, 457, -1, 457, 458, 459, -1, 91, 90, 457, -1, 457, 460, 91, -1, 85, 420, 457, -1, 457, 90, 85, -1, 459, 462, 461, -1, 461, 460, 459, -1, 463, 464, 461, -1, 461, 462, 463, -1, 93, 92, 461, -1, 461, 464, 93, -1, 91, 460, 461, -1, 461, 92, 91, -1, 463, 466, 465, -1, 465, 464, 463, -1, 467, 468, 465, -1, 465, 466, 467, -1, 95, 94, 465, -1, 465, 468, 95, -1, 93, 464, 465, -1, 465, 94, 93, -1, 467, 470, 469, -1, 469, 468, 467, -1, 419, 420, 469, -1, 469, 470, 419, -1, 85, 86, 469, -1, 469, 420, 85, -1, 95, 468, 469, -1, 469, 86, 95, -1, 471, 474, 473, -1, 473, 472, 471, -1, 475, 476, 473, -1, 473, 474, 475, -1, 100, 99, 473, -1, 473, 476, 100, -1, 96, 472, 473, -1, 473, 99, 96, -1, 475, 478, 477, -1, 477, 476, 475, -1, 479, 480, 477, -1, 477, 478, 479, -1, 102, 101, 477, -1, 477, 480, 102, -1, 100, 476, 477, -1, 477, 101, 100, -1, 479, 482, 481, -1, 481, 480, 479, -1, 483, 484, 481, -1, 481, 482, 483, -1, 104, 103, 481, -1, 481, 484, 104, -1, 102, 480, 481, -1, 481, 103, 102, -1, 483, 486, 485, -1, 485, 484, 483, -1, 471, 472, 485, -1, 485, 486, 471, -1, 96, 97, 485, -1, 485, 472, 96, -1, 104, 484, 485, -1, 485, 97, 104, -1, 487, 490, 489, -1, 489, 488, 487, -1, 491, 493, 489, -1, 489, 490, 491, -1, 109, 108, 489, -1, 489, 493, 109, -1, 105, 488, 489, -1, 489, 108, 105, -1, 491, 495, 494, -1, 494, 493, 491, -1, 496, 497, 494, -1, 494, 495, 496, -1, 111, 110, 494, -1, 494, 497, 111, -1, 109, 493, 494, -1, 494, 110, 109, -1, 496, 499, 498, -1, 498, 497, 496, -1, 500, 501, 498, -1, 498, 499, 500, -1, 113, 112, 498, -1, 498, 501, 113, -1, 111, 497, 498, -1, 498, 112, 111, -1, 500, 503, 502, -1, 502, 501, 500, -1, 487, 488, 502, -1, 502, 503, 487, -1, 105, 106, 502, -1, 502, 488, 105, -1, 113, 501, 502, -1, 502, 106, 113, -1, 120, 505, 504, -1, 504, 121, 120, -1, 358, 357, 504, -1, 504, 505, 358, -1, 354, 506, 504, -1, 504, 357, 354, -1, 122, 121, 504, -1, 504, 506, 122, -1, 127, 508, 507, -1, 507, 128, 127, -1, 362, 361, 507, -1, 507, 508, 362, -1, 358, 505, 507, -1, 507, 361, 358, -1, 120, 128, 507, -1, 507, 505, 120, -1, 133, 510, 509, -1, 509, 134, 133, -1, 367, 366, 509, -1, 509, 510, 367, -1, 362, 508, 509, -1, 509, 366, 362, -1, 127, 134, 509, -1, 509, 508, 127, -1, 122, 506, 511, -1, 511, 137, 122, -1, 354, 370, 511, -1, 511, 506, 354, -1, 367, 510, 511, -1, 511, 370, 367, -1, 133, 137, 511, -1, 511, 510, 133, -1, 144, 513, 512, -1, 512, 196, 144, -1, 375, 374, 512, -1, 512, 513, 375, -1, 371, 514, 512, -1, 512, 374, 371, -1, 197, 196, 512, -1, 512, 514, 197, -1, 202, 516, 515, -1, 515, 203, 202, -1, 379, 378, 515, -1, 515, 516, 379, -1, 375, 513, 515, -1, 515, 378, 375, -1, 144, 203, 515, -1, 515, 513, 144, -1, 208, 518, 517, -1, 517, 209, 208, -1, 383, 382, 517, -1, 517, 518, 383, -1, 379, 516, 517, -1, 517, 382, 379, -1, 202, 209, 517, -1, 517, 516, 202, -1, 197, 514, 519, -1, 519, 212, 197, -1, 371, 386, 519, -1, 519, 514, 371, -1, 383, 518, 519, -1, 519, 386, 383, -1, 208, 212, 519, -1, 519, 518, 208, -1, 218, 521, 520, -1, 520, 219, 218, -1, 391, 390, 520, -1, 520, 521, 391, -1, 387, 522, 520, -1, 520, 390, 387, -1, 220, 219, 520, -1, 520, 522, 220, -1, 225, 524, 523, -1, 523, 226, 225, -1, 395, 394, 523, -1, 523, 524, 395, -1, 391, 521, 523, -1, 523, 394, 391, -1, 218, 226, 523, -1, 523, 521, 218, -1, 230, 526, 525, -1, 525, 231, 230, -1, 399, 398, 525, -1, 525, 526, 399, -1, 395, 524, 525, -1, 525, 398, 395, -1, 225, 231, 525, -1, 525, 524, 225, -1, 220, 522, 527, -1, 527, 233, 220, -1, 387, 402, 527, -1, 527, 522, 387, -1, 399, 526, 527, -1, 527, 402, 399, -1, 230, 233, 527, -1, 527, 526, 230, -1, 239, 529, 528, -1, 528, 240, 239, -1, 407, 406, 528, -1, 528, 529, 407, -1, 403, 530, 528, -1, 528, 406, 403, -1, 241, 240, 528, -1, 528, 530, 241, -1, 246, 532, 531, -1, 531, 247, 246, -1, 411, 410, 531, -1, 531, 532, 411, -1, 407, 529, 531, -1, 531, 410, 407, -1, 239, 247, 531, -1, 531, 529, 239, -1, 251, 534, 533, -1, 533, 252, 251, -1, 415, 414, 533, -1, 533, 534, 415, -1, 411, 532, 533, -1, 533, 414, 411, -1, 246, 252, 533, -1, 533, 532, 246, -1, 241, 530, 535, -1, 535, 254, 241, -1, 403, 418, 535, -1, 535, 530, 403, -1, 415, 534, 535, -1, 535, 418, 415, -1, 251, 254, 535, -1, 535, 534, 251, -1, 260, 537, 536, -1, 536, 261, 260, -1, 459, 458, 536, -1, 536, 537, 459, -1, 419, 538, 536, -1, 536, 458, 419, -1, 264, 261, 536, -1, 536, 538, 264, -1, 269, 540, 539, -1, 539, 270, 269, -1, 463, 462, 539, -1, 539, 540, 463, -1, 459, 537, 539, -1, 539, 462, 459, -1, 260, 270, 539, -1, 539, 537, 260, -1, 274, 542, 541, -1, 541, 275, 274, -1, 467, 466, 541, -1, 541, 542, 467, -1, 463, 540, 541, -1, 541, 466, 463, -1, 269, 275, 541, -1, 541, 540, 269, -1, 264, 538, 543, -1, 543, 277, 264, -1, 419, 470, 543, -1, 543, 538, 419, -1, 467, 542, 543, -1, 543, 470, 467, -1, 274, 277, 543, -1, 543, 542, 274, -1, 283, 545, 544, -1, 544, 284, 283, -1, 475, 474, 544, -1, 544, 545, 475, -1, 471, 546, 544, -1, 544, 474, 471, -1, 285, 284, 544, -1, 544, 546, 285, -1, 290, 548, 547, -1, 547, 291, 290, -1, 479, 478, 547, -1, 547, 548, 479, -1, 475, 545, 547, -1, 547, 478, 475, -1, 283, 291, 547, -1, 547, 545, 283, -1, 332, 600, 598, -1, 598, 333, 332, -1, 483, 482, 598, -1, 598, 600, 483, -1, 479, 548, 598, -1, 598, 482, 479, -1, 290, 333, 598, -1, 598, 548, 290, -1, 285, 546, 602, -1, 602, 335, 285, -1, 471, 486, 602, -1, 602, 546, 471, -1, 483, 600, 602, -1, 602, 486, 483, -1, 332, 335, 602, -1, 602, 600, 332, -1, 340, 606, 604, -1, 604, 341, 340, -1, 491, 490, 604, -1, 604, 606, 491, -1, 487, 609, 604, -1, 604, 490, 487, -1, 342, 341, 604, -1, 604, 609, 342, -1, 345, 642, 616, -1, 616, 346, 345, -1, 496, 495, 616, -1, 616, 642, 496, -1, 491, 606, 616, -1, 616, 495, 491, -1, 340, 346, 616, -1, 616, 606, 340, -1, 350, 644, 643, -1, 643, 351, 350, -1, 500, 499, 643, -1, 643, 644, 500, -1, 496, 642, 643, -1, 643, 499, 496, -1, 345, 351, 643, -1, 643, 642, 345, -1, 342, 609, 645, -1, 645, 353, 342, -1, 487, 503, 645, -1, 645, 609, 487, -1, 500, 644, 645, -1, 645, 503, 500, -1, 350, 353, 645, -1, 645, 644, 350, -1, 448, 452, 451, -1, 451, 449, 448, -1, 453, 454, 451, -1, 451, 452, 453, -1, 455, 456, 451, -1, 451, 454, 455, -1, 450, 449, 451, -1, 451, 456, 450, -1, 492, 551, 550, -1, 550, 549, 492, -1, 552, 553, 550, -1, 550, 551, 552, -1, 554, 555, 550, -1, 550, 553, 554, -1, 556, 549, 550, -1, 550, 555, 556, -1, 557, 560, 559, -1, 559, 558, 557, -1, 561, 562, 559, -1, 559, 560, 561, -1, 563, 564, 559, -1, 559, 562, 563, -1, 565, 558, 559, -1, 559, 564, 565, -1, 552, 567, 566, -1, 566, 553, 552, -1, 568, 569, 566, -1, 566, 567, 568, -1, 570, 571, 566, -1, 566, 569, 570, -1, 554, 553, 566, -1, 566, 571, 554, -1, 561, 573, 572, -1, 572, 562, 561, -1, 574, 575, 572, -1, 572, 573, 574, -1, 576, 577, 572, -1, 572, 575, 576, -1, 563, 562, 572, -1, 572, 577, 563, -1, 568, 579, 578, -1, 578, 569, 568, -1, 580, 581, 578, -1, 578, 579, 580, -1, 582, 583, 578, -1, 578, 581, 582, -1, 570, 569, 578, -1, 578, 583, 570, -1, 574, 585, 584, -1, 584, 575, 574, -1, 586, 587, 584, -1, 584, 585, 586, -1, 588, 589, 584, -1, 584, 587, 588, -1, 576, 575, 584, -1, 584, 589, 576, -1, 580, 591, 590, -1, 590, 581, 580, -1, 592, 593, 590, -1, 590, 591, 592, -1, 594, 595, 590, -1, 590, 593, 594, -1, 582, 581, 590, -1, 590, 595, 582, -1, 586, 597, 596, -1, 596, 587, 586, -1, 599, 601, 596, -1, 596, 597, 599, -1, 603, 605, 596, -1, 596, 601, 603, -1, 588, 587, 596, -1, 596, 605, 588, -1, 592, 608, 607, -1, 607, 593, 592, -1, 610, 611, 607, -1, 607, 608, 610, -1, 612, 613, 607, -1, 607, 611, 612, -1, 594, 593, 607, -1, 607, 613, 594, -1, 599, 615, 614, -1, 614, 601, 599, -1, 617, 618, 614, -1, 614, 615, 617, -1, 619, 620, 614, -1, 614, 618, 619, -1, 603, 601, 614, -1, 614, 620, 603, -1, 610, 622, 621, -1, 621, 611, 610, -1, 623, 624, 621, -1, 621, 622, 623, -1, 625, 626, 621, -1, 621, 624, 625, -1, 612, 611, 621, -1, 621, 626, 612, -1, 617, 628, 627, -1, 627, 618, 617, -1, 629, 630, 627, -1, 627, 628, 629, -1, 631, 632, 627, -1, 627, 630, 631, -1, 619, 618, 627, -1, 627, 632, 619, -1, 623, 634, 633, -1, 633, 624, 623, -1, 177, 176, 633, -1, 633, 634, 177, -1, 175, 635, 633, -1, 633, 176, 175, -1, 625, 624, 633, -1, 633, 635, 625, -1, 629, 637, 636, -1, 636, 630, 629, -1, 183, 182, 636, -1, 636, 637, 183, -1, 181, 638, 636, -1, 636, 182, 181, -1, 631, 630, 636, -1, 636, 638, 631, -1, 557, 640, 639, -1, 639, 560, 557, -1, 641, 707, 639, -1, 639, 640, 641, -1, 708, 793, 639, -1, 639, 707, 708, -1, 561, 560, 639, -1, 639, 793, 561, -1, 561, 793, 822, -1, 822, 573, 561, -1, 708, 823, 822, -1, 822, 793, 708, -1, 824, 825, 822, -1, 822, 823, 824, -1, 574, 573, 822, -1, 822, 825, 574, -1, 574, 825, 826, -1, 826, 585, 574, -1, 824, 827, 826, -1, 826, 825, 824, -1, 828, 829, 826, -1, 826, 827, 828, -1, 586, 585, 826, -1, 826, 829, 586, -1, 586, 829, 830, -1, 830, 597, 586, -1, 828, 831, 830, -1, 830, 829, 828, -1, 832, 833, 830, -1, 830, 831, 832, -1, 599, 597, 830, -1, 830, 833, 599, -1, 599, 833, 834, -1, 834, 615, 599, -1, 832, 835, 834, -1, 834, 833, 832, -1, 836, 837, 834, -1, 834, 835, 836, -1, 617, 615, 834, -1, 834, 837, 617, -1, 617, 837, 838, -1, 838, 628, 617, -1, 836, 839, 838, -1, 838, 837, 836, -1, 840, 841, 838, -1, 838, 839, 840, -1, 629, 628, 838, -1, 838, 841, 629, -1, 629, 841, 842, -1, 842, 637, 629, -1, 840, 843, 842, -1, 842, 841, 840, -1, 306, 305, 842, -1, 842, 843, 306, -1, 183, 637, 842, -1, 842, 305, 183, -1, 175, 308, 844, -1, 844, 635, 175, -1, 313, 845, 844, -1, 844, 308, 313, -1, 846, 847, 844, -1, 844, 845, 846, -1, 625, 635, 844, -1, 844, 847, 625, -1, 625, 847, 848, -1, 848, 626, 625, -1, 846, 849, 848, -1, 848, 847, 846, -1, 850, 851, 848, -1, 848, 849, 850, -1, 612, 626, 848, -1, 848, 851, 612, -1, 612, 851, 852, -1, 852, 613, 612, -1, 850, 853, 852, -1, 852, 851, 850, -1, 854, 855, 852, -1, 852, 853, 854, -1, 594, 613, 852, -1, 852, 855, 594, -1, 594, 855, 856, -1, 856, 595, 594, -1, 854, 857, 856, -1, 856, 855, 854, -1, 858, 859, 856, -1, 856, 857, 858, -1, 582, 595, 856, -1, 856, 859, 582, -1, 582, 859, 860, -1, 860, 583, 582, -1, 858, 861, 860, -1, 860, 859, 858, -1, 862, 863, 860, -1, 860, 861, 862, -1, 570, 583, 860, -1, 860, 863, 570, -1, 570, 863, 864, -1, 864, 571, 570, -1, 862, 865, 864, -1, 864, 863, 862, -1, 866, 867, 864, -1, 864, 865, 866, -1, 554, 571, 864, -1, 864, 867, 554, -1, 554, 867, 868, -1, 868, 555, 554, -1, 866, 869, 868, -1, 868, 867, 866, -1, 871, 872, 868, -1, 868, 869, 871, -1, 556, 555, 868, -1, 868, 872, 556, -1, 563, 875, 874, -1, 874, 564, 563, -1, 432, 877, 874, -1, 874, 875, 432, -1, 565, 564, 874, -1, 874, 877, 565, -1, 576, 880, 878, -1, 878, 577, 576, -1, 432, 875, 878, -1, 878, 880, 432, -1, 563, 577, 878, -1, 878, 875, 563, -1, 588, 883, 881, -1, 881, 589, 588, -1, 432, 880, 881, -1, 881, 883, 432, -1, 576, 589, 881, -1, 881, 880, 576, -1, 603, 885, 884, -1, 884, 605, 603, -1, 432, 883, 884, -1, 884, 885, 432, -1, 588, 605, 884, -1, 884, 883, 588, -1, 619, 888, 887, -1, 887, 620, 619, -1, 432, 885, 887, -1, 887, 888, 432, -1, 603, 620, 887, -1, 887, 885, 603, -1, 631, 890, 889, -1, 889, 632, 631, -1, 432, 888, 889, -1, 889, 890, 432, -1, 619, 632, 889, -1, 889, 888, 619, -1, 181, 443, 891, -1, 891, 638, 181, -1, 432, 890, 891, -1, 891, 443, 432, -1, 631, 638, 891, -1, 891, 890, 631, -1, 646, 649, 648, -1, 648, 647, 646, -1, 650, 651, 648, -1, 648, 649, 650, -1, 652, 653, 648, -1, 648, 651, 652, -1, 654, 647, 648, -1, 648, 653, 654, -1, 655, 658, 657, -1, 657, 656, 655, -1, 659, 660, 657, -1, 657, 658, 659, -1, 661, 662, 657, -1, 657, 660, 661, -1, 663, 656, 657, -1, 657, 662, 663, -1, 664, 667, 666, -1, 666, 665, 664, -1, 668, 669, 666, -1, 666, 667, 668, -1, 670, 671, 666, -1, 666, 669, 670, -1, 672, 665, 666, -1, 666, 671, 672, -1, 673, 676, 675, -1, 675, 674, 673, -1, 677, 678, 675, -1, 675, 676, 677, -1, 679, 680, 675, -1, 675, 678, 679, -1, 681, 674, 675, -1, 675, 680, 681, -1, 682, 685, 684, -1, 684, 683, 682, -1, 686, 687, 684, -1, 684, 685, 686, -1, 688, 689, 684, -1, 684, 687, 688, -1, 690, 683, 684, -1, 684, 689, 690, -1, 691, 694, 693, -1, 693, 692, 691, -1, 695, 696, 693, -1, 693, 694, 695, -1, 697, 698, 693, -1, 693, 696, 697, -1, 699, 692, 693, -1, 693, 698, 699, -1, 700, 703, 702, -1, 702, 701, 700, -1, 704, 705, 702, -1, 702, 703, 704, -1, 706, 709, 702, -1, 702, 705, 706, -1, 710, 701, 702, -1, 702, 709, 710, -1, 711, 714, 713, -1, 713, 712, 711, -1, 715, 716, 713, -1, 713, 714, 715, -1, 717, 718, 713, -1, 713, 716, 717, -1, 719, 712, 713, -1, 713, 718, 719, -1, 719, 718, 721, -1, 721, 720, 719, -1, 717, 722, 721, -1, 721, 718, 717, -1, 723, 724, 721, -1, 721, 722, 723, -1, 725, 720, 721, -1, 721, 724, 725, -1, 725, 724, 727, -1, 727, 726, 725, -1, 723, 728, 727, -1, 727, 724, 723, -1, 729, 730, 727, -1, 727, 728, 729, -1, 731, 726, 727, -1, 727, 730, 731, -1, 731, 730, 733, -1, 733, 732, 731, -1, 729, 734, 733, -1, 733, 730, 729, -1, 715, 714, 733, -1, 733, 734, 715, -1, 711, 732, 733, -1, 733, 714, 711, -1, 735, 738, 737, -1, 737, 736, 735, -1, 739, 740, 737, -1, 737, 738, 739, -1, 741, 742, 737, -1, 737, 740, 741, -1, 142, 736, 737, -1, 737, 742, 142, -1, 142, 742, 743, -1, 743, 199, 142, -1, 741, 744, 743, -1, 743, 742, 741, -1, 745, 746, 743, -1, 743, 744, 745, -1, 200, 199, 743, -1, 743, 746, 200, -1, 200, 746, 748, -1, 748, 747, 200, -1, 745, 749, 748, -1, 748, 746, 745, -1, 750, 751, 748, -1, 748, 749, 750, -1, 752, 747, 748, -1, 748, 751, 752, -1, 752, 751, 754, -1, 754, 753, 752, -1, 750, 755, 754, -1, 754, 751, 750, -1, 739, 738, 754, -1, 754, 755, 739, -1, 735, 753, 754, -1, 754, 738, 735, -1, 752, 758, 757, -1, 757, 756, 752, -1, 759, 760, 757, -1, 757, 758, 759, -1, 761, 762, 757, -1, 757, 760, 761, -1, 763, 756, 757, -1, 757, 762, 763, -1, 763, 762, 765, -1, 765, 764, 763, -1, 761, 766, 765, -1, 765, 762, 761, -1, 767, 768, 765, -1, 765, 766, 767, -1, 769, 764, 765, -1, 765, 768, 769, -1, 769, 768, 771, -1, 771, 770, 769, -1, 767, 772, 771, -1, 771, 768, 767, -1, 773, 774, 771, -1, 771, 772, 773, -1, 735, 770, 771, -1, 771, 774, 735, -1, 735, 774, 775, -1, 775, 753, 735, -1, 773, 776, 775, -1, 775, 774, 773, -1, 759, 758, 775, -1, 775, 776, 759, -1, 752, 753, 775, -1, 775, 758, 752, -1, 763, 779, 778, -1, 778, 777, 763, -1, 780, 781, 778, -1, 778, 779, 780, -1, 782, 783, 778, -1, 778, 781, 782, -1, 784, 777, 778, -1, 778, 783, 784, -1, 784, 783, 786, -1, 786, 785, 784, -1, 782, 787, 786, -1, 786, 783, 782, -1, 788, 789, 786, -1, 786, 787, 788, -1, 790, 785, 786, -1, 786, 789, 790, -1, 790, 789, 792, -1, 792, 791, 790, -1, 788, 794, 792, -1, 792, 789, 788, -1, 795, 796, 792, -1, 792, 794, 795, -1, 769, 791, 792, -1, 792, 796, 769, -1, 769, 796, 797, -1, 797, 764, 769, -1, 795, 798, 797, -1, 797, 796, 795, -1, 780, 779, 797, -1, 797, 798, 780, -1, 763, 764, 797, -1, 797, 779, 763, -1, 784, 801, 800, -1, 800, 799, 784, -1, 802, 803, 800, -1, 800, 801, 802, -1, 804, 805, 800, -1, 800, 803, 804, -1, 806, 799, 800, -1, 800, 805, 806, -1, 806, 805, 808, -1, 808, 807, 806, -1, 804, 809, 808, -1, 808, 805, 804, -1, 810, 811, 808, -1, 808, 809, 810, -1, 812, 807, 808, -1, 808, 811, 812, -1, 812, 811, 814, -1, 814, 813, 812, -1, 810, 815, 814, -1, 814, 811, 810, -1, 816, 817, 814, -1, 814, 815, 816, -1, 790, 813, 814, -1, 814, 817, 790, -1, 790, 817, 818, -1, 818, 785, 790, -1, 816, 819, 818, -1, 818, 817, 816, -1, 802, 801, 818, -1, 818, 819, 802, -1, 784, 785, 818, -1, 818, 801, 784, -1, 806, 870, 821, -1, 821, 820, 806, -1, 873, 876, 821, -1, 821, 870, 873, -1, 879, 882, 821, -1, 821, 876, 879, -1, 886, 820, 821, -1, 821, 882, 886, -1, 886, 882, 901, -1, 901, 896, 886, -1, 879, 902, 901, -1, 901, 882, 879, -1, 903, 904, 901, -1, 901, 902, 903, -1, 905, 896, 901, -1, 901, 904, 905, -1, 905, 904, 907, -1, 907, 906, 905, -1, 903, 908, 907, -1, 907, 904, 903, -1, 909, 910, 907, -1, 907, 908, 909, -1, 812, 906, 907, -1, 907, 910, 812, -1, 812, 910, 911, -1, 911, 807, 812, -1, 909, 912, 911, -1, 911, 910, 909, -1, 873, 870, 911, -1, 911, 912, 873, -1, 806, 807, 911, -1, 911, 870, 806, -1, 886, 915, 914, -1, 914, 913, 886, -1, 916, 917, 914, -1, 914, 915, 916, -1, 918, 919, 914, -1, 914, 917, 918, -1, 725, 913, 914, -1, 914, 919, 725, -1, 725, 919, 920, -1, 920, 720, 725, -1, 918, 921, 920, -1, 920, 919, 918, -1, 922, 923, 920, -1, 920, 921, 922, -1, 719, 720, 920, -1, 920, 923, 719, -1, 719, 923, 925, -1, 925, 924, 719, -1, 922, 926, 925, -1, 925, 923, 922, -1, 927, 928, 925, -1, 925, 926, 927, -1, 905, 924, 925, -1, 925, 928, 905, -1, 905, 928, 929, -1, 929, 896, 905, -1, 927, 930, 929, -1, 929, 928, 927, -1, 916, 915, 929, -1, 929, 930, 916, -1, 886, 896, 929, -1, 929, 915, 886, -1, 432, 445, 892, -1, 892, 877, 432, -1, 450, 893, 892, -1, 892, 445, 450, -1, 894, 895, 892, -1, 892, 893, 894, -1, 565, 877, 892, -1, 892, 895, 565, -1, 931, 934, 933, -1, 933, 932, 931, -1, 646, 647, 933, -1, 933, 934, 646, -1, 654, 935, 933, -1, 933, 647, 654, -1, 936, 932, 933, -1, 933, 935, 936, -1, 936, 935, 938, -1, 938, 937, 936, -1, 654, 653, 938, -1, 938, 935, 654, -1, 652, 939, 938, -1, 938, 653, 652, -1, 940, 937, 938, -1, 938, 939, 940, -1, 940, 939, 942, -1, 942, 941, 940, -1, 652, 651, 942, -1, 942, 939, 652, -1, 650, 943, 942, -1, 942, 651, 650, -1, 944, 941, 942, -1, 942, 943, 944, -1, 944, 943, 946, -1, 946, 945, 944, -1, 650, 649, 946, -1, 946, 943, 650, -1, 646, 934, 946, -1, 946, 649, 646, -1, 931, 945, 946, -1, 946, 934, 931, -1, 947, 950, 949, -1, 949, 948, 947, -1, 655, 656, 949, -1, 949, 950, 655, -1, 663, 951, 949, -1, 949, 656, 663, -1, 952, 948, 949, -1, 949, 951, 952, -1, 952, 951, 954, -1, 954, 953, 952, -1, 663, 662, 954, -1, 954, 951, 663, -1, 661, 955, 954, -1, 954, 662, 661, -1, 956, 953, 954, -1, 954, 955, 956, -1, 956, 955, 958, -1, 958, 957, 956, -1, 661, 660, 958, -1, 958, 955, 661, -1, 659, 959, 958, -1, 958, 660, 659, -1, 960, 957, 958, -1, 958, 959, 960, -1, 960, 959, 962, -1, 962, 961, 960, -1, 659, 658, 962, -1, 962, 959, 659, -1, 655, 950, 962, -1, 962, 658, 655, -1, 947, 961, 962, -1, 962, 950, 947, -1, 963, 966, 965, -1, 965, 964, 963, -1, 664, 665, 965, -1, 965, 966, 664, -1, 672, 967, 965, -1, 965, 665, 672, -1, 968, 964, 965, -1, 965, 967, 968, -1, 968, 967, 970, -1, 970, 969, 968, -1, 672, 671, 970, -1, 970, 967, 672, -1, 670, 971, 970, -1, 970, 671, 670, -1, 972, 969, 970, -1, 970, 971, 972, -1, 972, 971, 974, -1, 974, 973, 972, -1, 670, 669, 974, -1, 974, 971, 670, -1, 668, 975, 974, -1, 974, 669, 668, -1, 976, 973, 974, -1, 974, 975, 976, -1, 976, 975, 978, -1, 978, 977, 976, -1, 668, 667, 978, -1, 978, 975, 668, -1, 664, 966, 978, -1, 978, 667, 664, -1, 963, 977, 978, -1, 978, 966, 963, -1, 979, 982, 981, -1, 981, 980, 979, -1, 673, 674, 981, -1, 981, 982, 673, -1, 681, 983, 981, -1, 981, 674, 681, -1, 984, 980, 981, -1, 981, 983, 984, -1, 984, 983, 986, -1, 986, 985, 984, -1, 681, 680, 986, -1, 986, 983, 681, -1, 679, 987, 986, -1, 986, 680, 679, -1, 988, 985, 986, -1, 986, 987, 988, -1, 988, 987, 990, -1, 990, 989, 988, -1, 679, 678, 990, -1, 990, 987, 679, -1, 677, 991, 990, -1, 990, 678, 677, -1, 992, 989, 990, -1, 990, 991, 992, -1, 992, 991, 994, -1, 994, 993, 992, -1, 677, 676, 994, -1, 994, 991, 677, -1, 673, 982, 994, -1, 994, 676, 673, -1, 979, 993, 994, -1, 994, 982, 979, -1, 995, 998, 997, -1, 997, 996, 995, -1, 682, 683, 997, -1, 997, 998, 682, -1, 690, 999, 997, -1, 997, 683, 690, -1, 1000, 996, 997, -1, 997, 999, 1000, -1, 1000, 999, 1002, -1, 1002, 1001, 1000, -1, 690, 689, 1002, -1, 1002, 999, 690, -1, 688, 1003, 1002, -1, 1002, 689, 688, -1, 1004, 1001, 1002, -1, 1002, 1003, 1004, -1, 1004, 1003, 1006, -1, 1006, 1005, 1004, -1, 688, 687, 1006, -1, 1006, 1003, 688, -1, 686, 1007, 1006, -1, 1006, 687, 686, -1, 1008, 1005, 1006, -1, 1006, 1007, 1008, -1, 1008, 1007, 1010, -1, 1010, 1009, 1008, -1, 686, 685, 1010, -1, 1010, 1007, 686, -1, 682, 998, 1010, -1, 1010, 685, 682, -1, 995, 1009, 1010, -1, 1010, 998, 995, -1, 1011, 1014, 1013, -1, 1013, 1012, 1011, -1, 691, 692, 1013, -1, 1013, 1014, 691, -1, 699, 1015, 1013, -1, 1013, 692, 699, -1, 1016, 1012, 1013, -1, 1013, 1015, 1016, -1, 1016, 1015, 1018, -1, 1018, 1017, 1016, -1, 699, 698, 1018, -1, 1018, 1015, 699, -1, 697, 1019, 1018, -1, 1018, 698, 697, -1, 1020, 1017, 1018, -1, 1018, 1019, 1020, -1, 1020, 1019, 1022, -1, 1022, 1021, 1020, -1, 697, 696, 1022, -1, 1022, 1019, 697, -1, 695, 1023, 1022, -1, 1022, 696, 695, -1, 1024, 1021, 1022, -1, 1022, 1023, 1024, -1, 1024, 1023, 1026, -1, 1026, 1025, 1024, -1, 695, 694, 1026, -1, 1026, 1023, 695, -1, 691, 1014, 1026, -1, 1026, 694, 691, -1, 1011, 1025, 1026, -1, 1026, 1014, 1011, -1, 1027, 1030, 1029, -1, 1029, 1028, 1027, -1, 700, 701, 1029, -1, 1029, 1030, 700, -1, 710, 1031, 1029, -1, 1029, 701, 710, -1, 1032, 1028, 1029, -1, 1029, 1031, 1032, -1, 1032, 1031, 1034, -1, 1034, 1033, 1032, -1, 710, 709, 1034, -1, 1034, 1031, 710, -1, 706, 1035, 1034, -1, 1034, 709, 706, -1, 1036, 1033, 1034, -1, 1034, 1035, 1036, -1, 1036, 1035, 1038, -1, 1038, 1037, 1036, -1, 706, 705, 1038, -1, 1038, 1035, 706, -1, 704, 1039, 1038, -1, 1038, 705, 704, -1, 1040, 1037, 1038, -1, 1038, 1039, 1040, -1, 1040, 1039, 1042, -1, 1042, 1041, 1040, -1, 704, 703, 1042, -1, 1042, 1039, 704, -1, 700, 1030, 1042, -1, 1042, 703, 700, -1, 1027, 1041, 1042, -1, 1042, 1030, 1027, -1, 717, 716, 1044, -1, 1044, 1043, 717, -1, 715, 1045, 1044, -1, 1044, 716, 715, -1, 931, 932, 1044, -1, 1044, 1045, 931, -1, 936, 1043, 1044, -1, 1044, 932, 936, -1, 723, 722, 1047, -1, 1047, 1046, 723, -1, 717, 1043, 1047, -1, 1047, 722, 717, -1, 936, 937, 1047, -1, 1047, 1043, 936, -1, 940, 1046, 1047, -1, 1047, 937, 940, -1, 729, 728, 1049, -1, 1049, 1048, 729, -1, 723, 1046, 1049, -1, 1049, 728, 723, -1, 940, 941, 1049, -1, 1049, 1046, 940, -1, 944, 1048, 1049, -1, 1049, 941, 944, -1, 715, 734, 1050, -1, 1050, 1045, 715, -1, 729, 1048, 1050, -1, 1050, 734, 729, -1, 944, 945, 1050, -1, 1050, 1048, 944, -1, 931, 1045, 1050, -1, 1050, 945, 931, -1, 741, 740, 1052, -1, 1052, 1051, 741, -1, 739, 1053, 1052, -1, 1052, 740, 739, -1, 947, 948, 1052, -1, 1052, 1053, 947, -1, 952, 1051, 1052, -1, 1052, 948, 952, -1, 745, 744, 1055, -1, 1055, 1054, 745, -1, 741, 1051, 1055, -1, 1055, 744, 741, -1, 952, 953, 1055, -1, 1055, 1051, 952, -1, 956, 1054, 1055, -1, 1055, 953, 956, -1, 750, 749, 1057, -1, 1057, 1056, 750, -1, 745, 1054, 1057, -1, 1057, 749, 745, -1, 956, 957, 1057, -1, 1057, 1054, 956, -1, 960, 1056, 1057, -1, 1057, 957, 960, -1, 739, 755, 1058, -1, 1058, 1053, 739, -1, 750, 1056, 1058, -1, 1058, 755, 750, -1, 960, 961, 1058, -1, 1058, 1056, 960, -1, 947, 1053, 1058, -1, 1058, 961, 947, -1, 761, 760, 1060, -1, 1060, 1059, 761, -1, 759, 1061, 1060, -1, 1060, 760, 759, -1, 963, 964, 1060, -1, 1060, 1061, 963, -1, 968, 1059, 1060, -1, 1060, 964, 968, -1, 767, 766, 1063, -1, 1063, 1062, 767, -1, 761, 1059, 1063, -1, 1063, 766, 761, -1, 968, 969, 1063, -1, 1063, 1059, 968, -1, 972, 1062, 1063, -1, 1063, 969, 972, -1, 773, 772, 1065, -1, 1065, 1064, 773, -1, 767, 1062, 1065, -1, 1065, 772, 767, -1, 972, 973, 1065, -1, 1065, 1062, 972, -1, 976, 1064, 1065, -1, 1065, 973, 976, -1, 759, 776, 1066, -1, 1066, 1061, 759, -1, 773, 1064, 1066, -1, 1066, 776, 773, -1, 976, 977, 1066, -1, 1066, 1064, 976, -1, 963, 1061, 1066, -1, 1066, 977, 963, -1, 782, 781, 1068, -1, 1068, 1067, 782, -1, 780, 1069, 1068, -1, 1068, 781, 780, -1, 979, 980, 1068, -1, 1068, 1069, 979, -1, 984, 1067, 1068, -1, 1068, 980, 984, -1, 788, 787, 1071, -1, 1071, 1070, 788, -1, 782, 1067, 1071, -1, 1071, 787, 782, -1, 984, 985, 1071, -1, 1071, 1067, 984, -1, 988, 1070, 1071, -1, 1071, 985, 988, -1, 795, 794, 1073, -1, 1073, 1072, 795, -1, 788, 1070, 1073, -1, 1073, 794, 788, -1, 988, 989, 1073, -1, 1073, 1070, 988, -1, 992, 1072, 1073, -1, 1073, 989, 992, -1, 780, 798, 1074, -1, 1074, 1069, 780, -1, 795, 1072, 1074, -1, 1074, 798, 795, -1, 992, 993, 1074, -1, 1074, 1072, 992, -1, 979, 1069, 1074, -1, 1074, 993, 979, -1, 804, 803, 1076, -1, 1076, 1075, 804, -1, 802, 1077, 1076, -1, 1076, 803, 802, -1, 995, 996, 1076, -1, 1076, 1077, 995, -1, 1000, 1075, 1076, -1, 1076, 996, 1000, -1, 810, 809, 1079, -1, 1079, 1078, 810, -1, 804, 1075, 1079, -1, 1079, 809, 804, -1, 1000, 1001, 1079, -1, 1079, 1075, 1000, -1, 1004, 1078, 1079, -1, 1079, 1001, 1004, -1, 816, 815, 1081, -1, 1081, 1080, 816, -1, 810, 1078, 1081, -1, 1081, 815, 810, -1, 1004, 1005, 1081, -1, 1081, 1078, 1004, -1, 1008, 1080, 1081, -1, 1081, 1005, 1008, -1, 802, 819, 1082, -1, 1082, 1077, 802, -1, 816, 1080, 1082, -1, 1082, 819, 816, -1, 1008, 1009, 1082, -1, 1082, 1080, 1008, -1, 995, 1077, 1082, -1, 1082, 1009, 995, -1, 879, 876, 1084, -1, 1084, 1083, 879, -1, 873, 1085, 1084, -1, 1084, 876, 873, -1, 1011, 1012, 1084, -1, 1084, 1085, 1011, -1, 1016, 1083, 1084, -1, 1084, 1012, 1016, -1, 903, 902, 1087, -1, 1087, 1086, 903, -1, 879, 1083, 1087, -1, 1087, 902, 879, -1, 1016, 1017, 1087, -1, 1087, 1083, 1016, -1, 1020, 1086, 1087, -1, 1087, 1017, 1020, -1, 909, 908, 1089, -1, 1089, 1088, 909, -1, 903, 1086, 1089, -1, 1089, 908, 903, -1, 1020, 1021, 1089, -1, 1089, 1086, 1020, -1, 1024, 1088, 1089, -1, 1089, 1021, 1024, -1, 873, 912, 1090, -1, 1090, 1085, 873, -1, 909, 1088, 1090, -1, 1090, 912, 909, -1, 1024, 1025, 1090, -1, 1090, 1088, 1024, -1, 1011, 1085, 1090, -1, 1090, 1025, 1011, -1, 918, 917, 1092, -1, 1092, 1091, 918, -1, 916, 1093, 1092, -1, 1092, 917, 916, -1, 1027, 1028, 1092, -1, 1092, 1093, 1027, -1, 1032, 1091, 1092, -1, 1092, 1028, 1032, -1, 922, 921, 1095, -1, 1095, 1094, 922, -1, 918, 1091, 1095, -1, 1095, 921, 918, -1, 1032, 1033, 1095, -1, 1095, 1091, 1032, -1, 1036, 1094, 1095, -1, 1095, 1033, 1036, -1, 927, 926, 1097, -1, 1097, 1096, 927, -1, 922, 1094, 1097, -1, 1097, 926, 922, -1, 1036, 1037, 1097, -1, 1097, 1094, 1036, -1, 1040, 1096, 1097, -1, 1097, 1037, 1040, -1, 916, 930, 1098, -1, 1098, 1093, 916, -1, 927, 1096, 1098, -1, 1098, 930, 927, -1, 1040, 1041, 1098, -1, 1098, 1096, 1040, -1, 1027, 1093, 1098, -1, 1098, 1041, 1027, -1, 894, 893, 898, -1, 898, 897, 894, -1, 450, 456, 898, -1, 898, 893, 450, -1, 455, 899, 898, -1, 898, 456, 455, -1, 900, 897, 898, -1, 898, 899, 900, -1},
                                                        CoordIndex: []int32{0, 521, 265, -1, 265, 524, 0, -1, 1, 525, 265, -1, 265, 521, 1, -1, 4, 523, 265, -1, 265, 525, 4, -1, 3, 524, 265, -1, 265, 523, 3, -1, 2, 522, 266, -1, 266, 526, 2, -1, 23, 558, 266, -1, 266, 522, 23, -1, 24, 551, 266, -1, 266, 558, 24, -1, 5, 526, 266, -1, 266, 551, 5, -1, 3, 523, 267, -1, 267, 528, 3, -1, 4, 529, 267, -1, 267, 523, 4, -1, 7, 527, 267, -1, 267, 529, 7, -1, 6, 528, 267, -1, 267, 527, 6, -1, 5, 551, 268, -1, 268, 530, 5, -1, 24, 559, 268, -1, 268, 551, 24, -1, 25, 552, 268, -1, 268, 559, 25, -1, 8, 530, 268, -1, 268, 552, 8, -1, 6, 527, 269, -1, 269, 532, 6, -1, 7, 533, 269, -1, 269, 527, 7, -1, 10, 531, 269, -1, 269, 533, 10, -1, 9, 532, 269, -1, 269, 531, 9, -1, 8, 552, 270, -1, 270, 534, 8, -1, 25, 560, 270, -1, 270, 552, 25, -1, 26, 553, 270, -1, 270, 560, 26, -1, 11, 534, 270, -1, 270, 553, 11, -1, 9, 531, 271, -1, 271, 536, 9, -1, 10, 537, 271, -1, 271, 531, 10, -1, 13, 535, 271, -1, 271, 537, 13, -1, 12, 536, 271, -1, 271, 535, 12, -1, 11, 553, 272, -1, 272, 538, 11, -1, 26, 561, 272, -1, 272, 553, 26, -1, 27, 554, 272, -1, 272, 561, 27, -1, 14, 538, 272, -1, 272, 554, 14, -1, 12, 535, 273, -1, 273, 540, 12, -1, 13, 541, 273, -1, 273, 535, 13, -1, 16, 539, 273, -1, 273, 541, 16, -1, 15, 540, 273, -1, 273, 539, 15, -1, 14, 554, 274, -1, 274, 542, 14, -1, 27, 562, 274, -1, 274, 554, 27, -1, 28, 555, 274, -1, 274, 562, 28, -1, 17, 542, 274, -1, 274, 555, 17, -1, 15, 539, 275, -1, 275, 544, 15, -1, 16, 545, 275, -1, 275, 539, 16, -1, 19, 543, 275, -1, 275, 545, 19, -1, 18, 544, 275, -1, 275, 543, 18, -1, 17, 555, 276, -1, 276, 546, 17, -1, 28, 563, 276, -1, 276, 555, 28, -1, 29, 556, 276, -1, 276, 563, 29, -1, 20, 546, 276, -1, 276, 556, 20, -1, 18, 543, 277, -1, 277, 548, 18, -1, 19, 549, 277, -1, 277, 543, 19, -1, 21, 547, 277, -1, 277, 549, 21, -1, 160, 548, 277, -1, 277, 547, 160, -1, 20, 556, 278, -1, 278, 550, 20, -1, 29, 564, 278, -1, 278, 556, 29, -1, 30, 557, 278, -1, 278, 564, 30, -1, 22, 550, 278, -1, 278, 557, 22, -1, 2, 526, 279, -1, 279, 580, 2, -1, 5, 581, 279, -1, 279, 526, 5, -1, 33, 565, 279, -1, 279, 581, 33, -1, 32, 580, 279, -1, 279, 565, 32, -1, 5, 530, 280, -1, 280, 581, 5, -1, 8, 582, 280, -1, 280, 530, 8, -1, 34, 566, 280, -1, 280, 582, 34, -1, 33, 581, 280, -1, 280, 566, 33, -1, 8, 534, 281, -1, 281, 582, 8, -1, 11, 583, 281, -1, 281, 534, 11, -1, 35, 567, 281, -1, 281, 583, 35, -1, 34, 582, 281, -1, 281, 567, 34, -1, 11, 538, 282, -1, 282, 583, 11, -1, 14, 584, 282, -1, 282, 538, 14, -1, 36, 568, 282, -1, 282, 584, 36, -1, 35, 583, 282, -1, 282, 568, 35, -1, 14, 542, 283, -1, 283, 584, 14, -1, 17, 585, 283, -1, 283, 542, 17, -1, 37, 569, 283, -1, 283, 585, 37, -1, 36, 584, 283, -1, 283, 569, 36, -1, 17, 546, 284, -1, 284, 585, 17, -1, 20, 586, 284, -1, 284, 546, 20, -1, 38, 570, 284, -1, 284, 586, 38, -1, 37, 585, 284, -1, 284, 570, 37, -1, 20, 550, 285, -1, 285, 586, 20, -1, 22, 587, 285, -1, 285, 550, 22, -1, 168, 571, 285, -1, 285, 587, 168, -1, 38, 586, 285, -1, 285, 571, 38, -1, 21, 549, 286, -1, 286, 839, 21, -1, 19, 588, 286, -1, 286, 549, 19, -1, 39, 572, 286, -1, 286, 588, 39, -1, 170, 839, 286, -1, 286, 572, 170, -1, 19, 545, 287, -1, 287, 588, 19, -1, 16, 589, 287, -1, 287, 545, 16, -1, 40, 573, 287, -1, 287, 589, 40, -1, 39, 588, 287, -1, 287, 573, 39, -1, 16, 541, 288, -1, 288, 589, 16, -1, 13, 590, 288, -1, 288, 541, 13, -1, 41, 574, 288, -1, 288, 590, 41, -1, 40, 589, 288, -1, 288, 574, 40, -1, 13, 537, 289, -1, 289, 590, 13, -1, 10, 591, 289, -1, 289, 537, 10, -1, 42, 575, 289, -1, 289, 591, 42, -1, 41, 590, 289, -1, 289, 575, 41, -1, 10, 533, 290, -1, 290, 591, 10, -1, 7, 592, 290, -1, 290, 533, 7, -1, 43, 576, 290, -1, 290, 592, 43, -1, 42, 591, 290, -1, 290, 576, 42, -1, 7, 529, 291, -1, 291, 592, 7, -1, 4, 593, 291, -1, 291, 529, 4, -1, 44, 577, 291, -1, 291, 593, 44, -1, 43, 592, 291, -1, 291, 577, 43, -1, 4, 525, 292, -1, 292, 593, 4, -1, 1, 579, 292, -1, 292, 525, 1, -1, 31, 578, 292, -1, 292, 579, 31, -1, 44, 593, 292, -1, 292, 578, 44, -1, 24, 558, 293, -1, 293, 595, 24, -1, 23, 594, 293, -1, 293, 558, 23, -1, 45, 595, 293, -1, 293, 594, 45, -1, 25, 559, 294, -1, 294, 596, 25, -1, 24, 595, 294, -1, 294, 559, 24, -1, 45, 596, 294, -1, 294, 595, 45, -1, 26, 560, 295, -1, 295, 597, 26, -1, 25, 596, 295, -1, 295, 560, 25, -1, 45, 597, 295, -1, 295, 596, 45, -1, 27, 561, 296, -1, 296, 598, 27, -1, 26, 597, 296, -1, 296, 561, 26, -1, 45, 598, 296, -1, 296, 597, 45, -1, 28, 562, 297, -1, 297, 599, 28, -1, 27, 598, 297, -1, 297, 562, 27, -1, 45, 599, 297, -1, 297, 598, 45, -1, 29, 563, 298, -1, 298, 600, 29, -1, 28, 599, 298, -1, 298, 563, 28, -1, 45, 600, 298, -1, 298, 599, 45, -1, 30, 564, 299, -1, 299, 601, 30, -1, 29, 600, 299, -1, 299, 564, 29, -1, 45, 601, 299, -1, 299, 600, 45, -1, 75, 667, 300, -1, 300, 670, 75, -1, 76, 668, 300, -1, 300, 667, 76, -1, 77, 669, 300, -1, 300, 668, 77, -1, 78, 670, 300, -1, 300, 669, 78, -1, 79, 675, 301, -1, 301, 678, 79, -1, 80, 676, 301, -1, 301, 675, 80, -1, 81, 677, 301, -1, 301, 676, 81, -1, 82, 678, 301, -1, 301, 677, 82, -1, 83, 683, 302, -1, 302, 686, 83, -1, 84, 684, 302, -1, 302, 683, 84, -1, 85, 685, 302, -1, 302, 684, 85, -1, 86, 686, 302, -1, 302, 685, 86, -1, 87, 691, 303, -1, 303, 694, 87, -1, 88, 692, 303, -1, 303, 691, 88, -1, 89, 693, 303, -1, 303, 692, 89, -1, 90, 694, 303, -1, 303, 693, 90, -1, 91, 699, 304, -1, 304, 702, 91, -1, 92, 700, 304, -1, 304, 699, 92, -1, 93, 701, 304, -1, 304, 700, 93, -1, 94, 702, 304, -1, 304, 701, 94, -1, 95, 707, 305, -1, 305, 710, 95, -1, 96, 708, 305, -1, 305, 707, 96, -1, 97, 709, 305, -1, 305, 708, 97, -1, 98, 710, 305, -1, 305, 709, 98, -1, 99, 715, 306, -1, 306, 718, 99, -1, 100, 716, 306, -1, 306, 715, 100, -1, 101, 717, 306, -1, 306, 716, 101, -1, 102, 718, 306, -1, 306, 717, 102, -1, 32, 565, 307, -1, 307, 609, 32, -1, 33, 610, 307, -1, 307, 565, 33, -1, 104, 752, 307, -1, 307, 610, 104, -1, 103, 609, 307, -1, 307, 752, 103, -1, 33, 603, 308, -1, 308, 610, 33, -1, 44, 611, 308, -1, 308, 603, 44, -1, 105, 753, 308, -1, 308, 611, 105, -1, 104, 610, 308, -1, 308, 753, 104, -1, 44, 578, 309, -1, 309, 611, 44, -1, 31, 612, 309, -1, 309, 578, 31, -1, 106, 754, 309, -1, 309, 612, 106, -1, 105, 611, 309, -1, 309, 754, 105, -1, 31, 602, 310, -1, 310, 612, 31, -1, 32, 609, 310, -1, 310, 602, 32, -1, 103, 755, 310, -1, 310, 609, 103, -1, 106, 612, 310, -1, 310, 755, 106, -1, 38, 571, 311, -1, 311, 617, 38, -1, 168, 618, 311, -1, 311, 571, 168, -1, 108, 756, 311, -1, 311, 618, 108, -1, 107, 617, 311, -1, 311, 756, 107, -1, 168, 900, 312, -1, 312, 618, 168, -1, 170, 619, 312, -1, 312, 900, 170, -1, 109, 757, 312, -1, 312, 619, 109, -1, 108, 618, 312, -1, 312, 757, 108, -1, 170, 572, 313, -1, 313, 619, 170, -1, 39, 620, 313, -1, 313, 572, 39, -1, 110, 758, 313, -1, 313, 620, 110, -1, 109, 619, 313, -1, 313, 758, 109, -1, 39, 604, 314, -1, 314, 620, 39, -1, 38, 617, 314, -1, 314, 604, 38, -1, 107, 759, 314, -1, 314, 617, 107, -1, 110, 620, 314, -1, 314, 759, 110, -1, 39, 573, 315, -1, 315, 625, 39, -1, 40, 626, 315, -1, 315, 573, 40, -1, 112, 760, 315, -1, 315, 626, 112, -1, 111, 625, 315, -1, 315, 760, 111, -1, 40, 605, 316, -1, 316, 626, 40, -1, 37, 627, 316, -1, 316, 605, 37, -1, 113, 761, 316, -1, 316, 627, 113, -1, 112, 626, 316, -1, 316, 761, 112, -1, 37, 570, 317, -1, 317, 627, 37, -1, 38, 628, 317, -1, 317, 570, 38, -1, 114, 762, 317, -1, 317, 628, 114, -1, 113, 627, 317, -1, 317, 762, 113, -1, 38, 604, 318, -1, 318, 628, 38, -1, 39, 625, 318, -1, 318, 604, 39, -1, 111, 763, 318, -1, 318, 625, 111, -1, 114, 628, 318, -1, 318, 763, 114, -1, 40, 574, 319, -1, 319, 633, 40, -1, 41, 634, 319, -1, 319, 574, 41, -1, 116, 764, 319, -1, 319, 634, 116, -1, 115, 633, 319, -1, 319, 764, 115, -1, 41, 606, 320, -1, 320, 634, 41, -1, 36, 635, 320, -1, 320, 606, 36, -1, 117, 765, 320, -1, 320, 635, 117, -1, 116, 634, 320, -1, 320, 765, 116, -1, 36, 569, 321, -1, 321, 635, 36, -1, 37, 636, 321, -1, 321, 569, 37, -1, 118, 766, 321, -1, 321, 636, 118, -1, 117, 635, 321, -1, 321, 766, 117, -1, 37, 605, 322, -1, 322, 636, 37, -1, 40, 633, 322, -1, 322, 605, 40, -1, 115, 767, 322, -1, 322, 633, 115, -1, 118, 636, 322, -1, 322, 767, 118, -1, 41, 575, 323, -1, 323, 641, 41, -1, 42, 642, 323, -1, 323, 575, 42, -1, 120, 768, 323, -1, 323, 642, 120, -1, 119, 641, 323, -1, 323, 768, 119, -1, 42, 607, 324, -1, 324, 642, 42, -1, 35, 643, 324, -1, 324, 607, 35, -1, 121, 769, 324, -1, 324, 643, 121, -1, 120, 642, 324, -1, 324, 769, 120, -1, 35, 568, 325, -1, 325, 643, 35, -1, 36, 644, 325, -1, 325, 568, 36, -1, 122, 770, 325, -1, 325, 644, 122, -1, 121, 643, 325, -1, 325, 770, 121, -1, 36, 606, 326, -1, 326, 644, 36, -1, 41, 641, 326, -1, 326, 606, 41, -1, 119, 771, 326, -1, 326, 641, 119, -1, 122, 644, 326, -1, 326, 771, 122, -1, 42, 576, 327, -1, 327, 649, 42, -1, 43, 650, 327, -1, 327, 576, 43, -1, 124, 772, 327, -1, 327, 650, 124, -1, 123, 649, 327, -1, 327, 772, 123, -1, 43, 608, 328, -1, 328, 650, 43, -1, 34, 651, 328, -1, 328, 608, 34, -1, 125, 773, 328, -1, 328, 651, 125, -1, 124, 650, 328, -1, 328, 773, 124, -1, 34, 567, 329, -1, 329, 651, 34, -1, 35, 652, 329, -1, 329, 567, 35, -1, 126, 774, 329, -1, 329, 652, 126, -1, 125, 651, 329, -1, 329, 774, 125, -1, 35, 607, 330, -1, 330, 652, 35, -1, 42, 649, 330, -1, 330, 607, 42, -1, 123, 775, 330, -1, 330, 649, 123, -1, 126, 652, 330, -1, 330, 775, 126, -1, 43, 577, 331, -1, 331, 657, 43, -1, 44, 658, 331, -1, 331, 577, 44, -1, 128, 776, 331, -1, 331, 658, 128, -1, 127, 657, 331, -1, 331, 776, 127, -1, 44, 603, 332, -1, 332, 658, 44, -1, 33, 659, 332, -1, 332, 603, 33, -1, 129, 777, 332, -1, 332, 659, 129, -1, 128, 658, 332, -1, 332, 777, 128, -1, 33, 566, 333, -1, 333, 659, 33, -1, 34, 660, 333, -1, 333, 566, 34, -1, 130, 778, 333, -1, 333, 660, 130, -1, 129, 659, 333, -1, 333, 778, 129, -1, 34, 608, 334, -1, 334, 660, 34, -1, 43, 657, 334, -1, 334, 608, 43, -1, 127, 779, 334, -1, 334, 657, 127, -1, 130, 660, 334, -1, 334, 779, 130, -1, 45, 594, 335, -1, 335, 953, 45, -1, 23, 666, 335, -1, 335, 594, 23, -1, 131, 780, 335, -1, 335, 666, 131, -1, 234, 953, 335, -1, 335, 780, 234, -1, 46, 613, 336, -1, 336, 671, 46, -1, 47, 672, 336, -1, 336, 613, 47, -1, 76, 667, 336, -1, 336, 672, 76, -1, 75, 671, 336, -1, 336, 667, 75, -1, 47, 614, 337, -1, 337, 672, 47, -1, 48, 673, 337, -1, 337, 614, 48, -1, 77, 668, 337, -1, 337, 673, 77, -1, 76, 672, 337, -1, 337, 668, 76, -1, 48, 615, 338, -1, 338, 673, 48, -1, 49, 674, 338, -1, 338, 615, 49, -1, 78, 669, 338, -1, 338, 674, 78, -1, 77, 673, 338, -1, 338, 669, 77, -1, 49, 616, 339, -1, 339, 674, 49, -1, 46, 671, 339, -1, 339, 616, 46, -1, 75, 670, 339, -1, 339, 671, 75, -1, 78, 674, 339, -1, 339, 670, 78, -1, 50, 621, 340, -1, 340, 679, 50, -1, 51, 680, 340, -1, 340, 621, 51, -1, 80, 675, 340, -1, 340, 680, 80, -1, 79, 679, 340, -1, 340, 675, 79, -1, 51, 622, 341, -1, 341, 680, 51, -1, 52, 681, 341, -1, 341, 622, 52, -1, 81, 676, 341, -1, 341, 681, 81, -1, 80, 680, 341, -1, 341, 676, 80, -1, 52, 623, 342, -1, 342, 681, 52, -1, 53, 682, 342, -1, 342, 623, 53, -1, 82, 677, 342, -1, 342, 682, 82, -1, 81, 681, 342, -1, 342, 677, 81, -1, 53, 624, 343, -1, 343, 682, 53, -1, 50, 679, 343, -1, 343, 624, 50, -1, 79, 678, 343, -1, 343, 679, 79, -1, 82, 682, 343, -1, 343, 678, 82, -1, 54, 629, 344, -1, 344, 687, 54, -1, 55, 688, 344, -1, 344, 629, 55, -1, 84, 683, 344, -1, 344, 688, 84, -1, 83, 687, 344, -1, 344, 683, 83, -1, 55, 630, 345, -1, 345, 688, 55, -1, 56, 689, 345, -1, 345, 630, 56, -1, 85, 684, 345, -1, 345, 689, 85, -1, 84, 688, 345, -1, 345, 684, 84, -1, 56, 631, 346, -1, 346, 689, 56, -1, 57, 690, 346, -1, 346, 631, 57, -1, 86, 685, 346, -1, 346, 690, 86, -1, 85, 689, 346, -1, 346, 685, 85, -1, 57, 632, 347, -1, 347, 690, 57, -1, 54, 687, 347, -1, 347, 632, 54, -1, 83, 686, 347, -1, 347, 687, 83, -1, 86, 690, 347, -1, 347, 686, 86, -1, 58, 637, 348, -1, 348, 695, 58, -1, 59, 696, 348, -1, 348, 637, 59, -1, 88, 691, 348, -1, 348, 696, 88, -1, 87, 695, 348, -1, 348, 691, 87, -1, 59, 638, 349, -1, 349, 696, 59, -1, 60, 697, 349, -1, 349, 638, 60, -1, 89, 692, 349, -1, 349, 697, 89, -1, 88, 696, 349, -1, 349, 692, 88, -1, 60, 639, 350, -1, 350, 697, 60, -1, 61, 698, 350, -1, 350, 639, 61, -1, 90, 693, 350, -1, 350, 698, 90, -1, 89, 697, 350, -1, 350, 693, 89, -1, 61, 640, 351, -1, 351, 698, 61, -1, 58, 695, 351, -1, 351, 640, 58, -1, 87, 694, 351, -1, 351, 695, 87, -1, 90, 698, 351, -1, 351, 694, 90, -1, 62, 645, 352, -1, 352, 703, 62, -1, 63, 704, 352, -1, 352, 645, 63, -1, 92, 699, 352, -1, 352, 704, 92, -1, 91, 703, 352, -1, 352, 699, 91, -1, 63, 646, 353, -1, 353, 704, 63, -1, 64, 705, 353, -1, 353, 646, 64, -1, 93, 700, 353, -1, 353, 705, 93, -1, 92, 704, 353, -1, 353, 700, 92, -1, 64, 647, 354, -1, 354, 705, 64, -1, 65, 706, 354, -1, 354, 647, 65, -1, 94, 701, 354, -1, 354, 706, 94, -1, 93, 705, 354, -1, 354, 701, 93, -1, 65, 648, 355, -1, 355, 706, 65, -1, 62, 703, 355, -1, 355, 648, 62, -1, 91, 702, 355, -1, 355, 703, 91, -1, 94, 706, 355, -1, 355, 702, 94, -1, 66, 653, 356, -1, 356, 711, 66, -1, 67, 712, 356, -1, 356, 653, 67, -1, 96, 707, 356, -1, 356, 712, 96, -1, 95, 711, 356, -1, 356, 707, 95, -1, 67, 654, 357, -1, 357, 712, 67, -1, 68, 713, 357, -1, 357, 654, 68, -1, 97, 708, 357, -1, 357, 713, 97, -1, 96, 712, 357, -1, 357, 708, 96, -1, 68, 655, 358, -1, 358, 713, 68, -1, 69, 714, 358, -1, 358, 655, 69, -1, 98, 709, 358, -1, 358, 714, 98, -1, 97, 713, 358, -1, 358, 709, 97, -1, 69, 656, 359, -1, 359, 714, 69, -1, 66, 711, 359, -1, 359, 656, 66, -1, 95, 710, 359, -1, 359, 711, 95, -1, 98, 714, 359, -1, 359, 710, 98, -1, 70, 661, 360, -1, 360, 719, 70, -1, 71, 720, 360, -1, 360, 661, 71, -1, 100, 715, 360, -1, 360, 720, 100, -1, 99, 719, 360, -1, 360, 715, 99, -1, 71, 662, 361, -1, 361, 720, 71, -1, 72, 721, 361, -1, 361, 662, 72, -1, 101, 716, 361, -1, 361, 721, 101, -1, 100, 720, 361, -1, 361, 716, 100, -1, 72, 663, 362, -1, 362, 721, 72, -1, 73, 722, 362, -1, 362, 663, 73, -1, 102, 717, 362, -1, 362, 722, 102, -1, 101, 721, 362, -1, 362, 717, 101, -1, 73, 664, 363, -1, 363, 722, 73, -1, 70, 719, 363, -1, 363, 664, 70, -1, 99, 718, 363, -1, 363, 719, 99, -1, 102, 722, 363, -1, 363, 718, 102, -1, 104, 724, 364, -1, 364, 752, 104, -1, 47, 613, 364, -1, 364, 724, 47, -1, 46, 723, 364, -1, 364, 613, 46, -1, 103, 752, 364, -1, 364, 723, 103, -1, 105, 725, 365, -1, 365, 753, 105, -1, 48, 614, 365, -1, 365, 725, 48, -1, 47, 724, 365, -1, 365, 614, 47, -1, 104, 753, 365, -1, 365, 724, 104, -1, 106, 726, 366, -1, 366, 754, 106, -1, 49, 615, 366, -1, 366, 726, 49, -1, 48, 725, 366, -1, 366, 615, 48, -1, 105, 754, 366, -1, 366, 725, 105, -1, 103, 723, 367, -1, 367, 755, 103, -1, 46, 616, 367, -1, 367, 723, 46, -1, 49, 726, 367, -1, 367, 616, 49, -1, 106, 755, 367, -1, 367, 726, 106, -1, 108, 728, 368, -1, 368, 756, 108, -1, 51, 621, 368, -1, 368, 728, 51, -1, 50, 727, 368, -1, 368, 621, 50, -1, 107, 756, 368, -1, 368, 727, 107, -1, 109, 729, 369, -1, 369, 757, 109, -1, 52, 622, 369, -1, 369, 729, 52, -1, 51, 728, 369, -1, 369, 622, 51, -1, 108, 757, 369, -1, 369, 728, 108, -1, 110, 730, 370, -1, 370, 758, 110, -1, 53, 623, 370, -1, 370, 730, 53, -1, 52, 729, 370, -1, 370, 623, 52, -1, 109, 758, 370, -1, 370, 729, 109, -1, 107, 727, 371, -1, 371, 759, 107, -1, 50, 624, 371, -1, 371, 727, 50, -1, 53, 730, 371, -1, 371, 624, 53, -1, 110, 759, 371, -1, 371, 730, 110, -1, 112, 732, 372, -1, 372, 760, 112, -1, 55, 629, 372, -1, 372, 732, 55, -1, 54, 731, 372, -1, 372, 629, 54, -1, 111, 760, 372, -1, 372, 731, 111, -1, 113, 733, 373, -1, 373, 761, 113, -1, 56, 630, 373, -1, 373, 733, 56, -1, 55, 732, 373, -1, 373, 630, 55, -1, 112, 761, 373, -1, 373, 732, 112, -1, 114, 734, 374, -1, 374, 762, 114, -1, 57, 631, 374, -1, 374, 734, 57, -1, 56, 733, 374, -1, 374, 631, 56, -1, 113, 762, 374, -1, 374, 733, 113, -1, 111, 731, 375, -1, 375, 763, 111, -1, 54, 632, 375, -1, 375, 731, 54, -1, 57, 734, 375, -1, 375, 632, 57, -1, 114, 763, 375, -1, 375, 734, 114, -1, 116, 736, 376, -1, 376, 764, 116, -1, 59, 637, 376, -1, 376, 736, 59, -1, 58, 735, 376, -1, 376, 637, 58, -1, 115, 764, 376, -1, 376, 735, 115, -1, 117, 737, 377, -1, 377, 765, 117, -1, 60, 638, 377, -1, 377, 737, 60, -1, 59, 736, 377, -1, 377, 638, 59, -1, 116, 765, 377, -1, 377, 736, 116, -1, 118, 738, 378, -1, 378, 766, 118, -1, 61, 639, 378, -1, 378, 738, 61, -1, 60, 737, 378, -1, 378, 639, 60, -1, 117, 766, 378, -1, 378, 737, 117, -1, 115, 735, 379, -1, 379, 767, 115, -1, 58, 640, 379, -1, 379, 735, 58, -1, 61, 738, 379, -1, 379, 640, 61, -1, 118, 767, 379, -1, 379, 738, 118, -1, 120, 740, 380, -1, 380, 768, 120, -1, 63, 645, 380, -1, 380, 740, 63, -1, 62, 739, 380, -1, 380, 645, 62, -1, 119, 768, 380, -1, 380, 739, 119, -1, 121, 741, 381, -1, 381, 769, 121, -1, 64, 646, 381, -1, 381, 741, 64, -1, 63, 740, 381, -1, 381, 646, 63, -1, 120, 769, 381, -1, 381, 740, 120, -1, 122, 742, 382, -1, 382, 770, 122, -1, 65, 647, 382, -1, 382, 742, 65, -1, 64, 741, 382, -1, 382, 647, 64, -1, 121, 770, 382, -1, 382, 741, 121, -1, 119, 739, 383, -1, 383, 771, 119, -1, 62, 648, 383, -1, 383, 739, 62, -1, 65, 742, 383, -1, 383, 648, 65, -1, 122, 771, 383, -1, 383, 742, 122, -1, 124, 744, 384, -1, 384, 772, 124, -1, 67, 653, 384, -1, 384, 744, 67, -1, 66, 743, 384, -1, 384, 653, 66, -1, 123, 772, 384, -1, 384, 743, 123, -1, 125, 745, 385, -1, 385, 773, 125, -1, 68, 654, 385, -1, 385, 745, 68, -1, 67, 744, 385, -1, 385, 654, 67, -1, 124, 773, 385, -1, 385, 744, 124, -1, 126, 746, 386, -1, 386, 774, 126, -1, 69, 655, 386, -1, 386, 746, 69, -1, 68, 745, 386, -1, 386, 655, 68, -1, 125, 774, 386, -1, 386, 745, 125, -1, 123, 743, 387, -1, 387, 775, 123, -1, 66, 656, 387, -1, 387, 743, 66, -1, 69, 746, 387, -1, 387, 656, 69, -1, 126, 775, 387, -1, 387, 746, 126, -1, 128, 748, 388, -1, 388, 776, 128, -1, 71, 661, 388, -1, 388, 748, 71, -1, 70, 747, 388, -1, 388, 661, 70, -1, 127, 776, 388, -1, 388, 747, 127, -1, 129, 749, 389, -1, 389, 777, 129, -1, 72, 662, 389, -1, 389, 749, 72, -1, 71, 748, 389, -1, 389, 662, 71, -1, 128, 777, 389, -1, 389, 748, 128, -1, 130, 750, 390, -1, 390, 778, 130, -1, 73, 663, 390, -1, 390, 750, 73, -1, 72, 749, 390, -1, 390, 663, 72, -1, 129, 778, 390, -1, 390, 749, 129, -1, 127, 747, 391, -1, 391, 779, 127, -1, 70, 664, 391, -1, 391, 747, 70, -1, 73, 750, 391, -1, 391, 664, 73, -1, 130, 779, 391, -1, 391, 750, 130, -1, 131, 751, 392, -1, 392, 780, 131, -1, 74, 665, 392, -1, 392, 751, 74, -1, 264, 1040, 392, -1, 392, 665, 264, -1, 234, 780, 392, -1, 392, 1040, 234, -1, 132, 784, 393, -1, 393, 781, 132, -1, 135, 783, 393, -1, 393, 784, 135, -1, 134, 782, 393, -1, 393, 783, 134, -1, 133, 781, 393, -1, 393, 782, 133, -1, 136, 788, 394, -1, 394, 785, 136, -1, 139, 787, 394, -1, 394, 788, 139, -1, 138, 786, 394, -1, 394, 787, 138, -1, 137, 785, 394, -1, 394, 786, 137, -1, 135, 791, 395, -1, 395, 783, 135, -1, 141, 790, 395, -1, 395, 791, 141, -1, 140, 789, 395, -1, 395, 790, 140, -1, 134, 783, 395, -1, 395, 789, 134, -1, 139, 794, 396, -1, 396, 787, 139, -1, 143, 793, 396, -1, 396, 794, 143, -1, 142, 792, 396, -1, 396, 793, 142, -1, 138, 787, 396, -1, 396, 792, 138, -1, 141, 797, 397, -1, 397, 790, 141, -1, 145, 796, 397, -1, 397, 797, 145, -1, 144, 795, 397, -1, 397, 796, 144, -1, 140, 790, 397, -1, 397, 795, 140, -1, 143, 800, 398, -1, 398, 793, 143, -1, 147, 799, 398, -1, 398, 800, 147, -1, 146, 798, 398, -1, 398, 799, 146, -1, 142, 793, 398, -1, 398, 798, 142, -1, 145, 803, 399, -1, 399, 796, 145, -1, 149, 802, 399, -1, 399, 803, 149, -1, 148, 801, 399, -1, 399, 802, 148, -1, 144, 796, 399, -1, 399, 801, 144, -1, 147, 806, 400, -1, 400, 799, 147, -1, 151, 805, 400, -1, 400, 806, 151, -1, 150, 804, 400, -1, 400, 805, 150, -1, 146, 799, 400, -1, 400, 804, 146, -1, 149, 809, 401, -1, 401, 802, 149, -1, 153, 808, 401, -1, 401, 809, 153, -1, 152, 807, 401, -1, 401, 808, 152, -1, 148, 802, 401, -1, 401, 807, 148, -1, 151, 812, 402, -1, 402, 805, 151, -1, 155, 811, 402, -1, 402, 812, 155, -1, 154, 810, 402, -1, 402, 811, 154, -1, 150, 805, 402, -1, 402, 810, 150, -1, 153, 815, 403, -1, 403, 808, 153, -1, 157, 814, 403, -1, 403, 815, 157, -1, 156, 813, 403, -1, 403, 814, 156, -1, 152, 808, 403, -1, 403, 813, 152, -1, 155, 818, 404, -1, 404, 811, 155, -1, 159, 817, 404, -1, 404, 818, 159, -1, 158, 816, 404, -1, 404, 817, 158, -1, 154, 811, 404, -1, 404, 816, 154, -1, 157, 820, 405, -1, 405, 814, 157, -1, 160, 547, 405, -1, 405, 820, 160, -1, 21, 819, 405, -1, 405, 547, 21, -1, 156, 814, 405, -1, 405, 819, 156, -1, 159, 822, 406, -1, 406, 817, 159, -1, 22, 557, 406, -1, 406, 822, 22, -1, 30, 821, 406, -1, 406, 557, 30, -1, 158, 817, 406, -1, 406, 821, 158, -1, 136, 825, 407, -1, 407, 788, 136, -1, 162, 824, 407, -1, 407, 825, 162, -1, 161, 823, 407, -1, 407, 824, 161, -1, 139, 788, 407, -1, 407, 823, 139, -1, 139, 823, 408, -1, 408, 794, 139, -1, 161, 827, 408, -1, 408, 823, 161, -1, 163, 826, 408, -1, 408, 827, 163, -1, 143, 794, 408, -1, 408, 826, 143, -1, 143, 826, 409, -1, 409, 800, 143, -1, 163, 829, 409, -1, 409, 826, 163, -1, 164, 828, 409, -1, 409, 829, 164, -1, 147, 800, 409, -1, 409, 828, 147, -1, 147, 828, 410, -1, 410, 806, 147, -1, 164, 831, 410, -1, 410, 828, 164, -1, 165, 830, 410, -1, 410, 831, 165, -1, 151, 806, 410, -1, 410, 830, 151, -1, 151, 830, 411, -1, 411, 812, 151, -1, 165, 833, 411, -1, 411, 830, 165, -1, 166, 832, 411, -1, 411, 833, 166, -1, 155, 812, 411, -1, 411, 832, 155, -1, 155, 832, 412, -1, 412, 818, 155, -1, 166, 835, 412, -1, 412, 832, 166, -1, 167, 834, 412, -1, 412, 835, 167, -1, 159, 818, 412, -1, 412, 834, 159, -1, 159, 834, 413, -1, 413, 822, 159, -1, 167, 836, 413, -1, 413, 834, 167, -1, 168, 587, 413, -1, 413, 836, 168, -1, 22, 822, 413, -1, 413, 587, 22, -1, 21, 839, 414, -1, 414, 819, 21, -1, 170, 838, 414, -1, 414, 839, 170, -1, 169, 837, 414, -1, 414, 838, 169, -1, 156, 819, 414, -1, 414, 837, 156, -1, 156, 837, 415, -1, 415, 813, 156, -1, 169, 841, 415, -1, 415, 837, 169, -1, 171, 840, 415, -1, 415, 841, 171, -1, 152, 813, 415, -1, 415, 840, 152, -1, 152, 840, 416, -1, 416, 807, 152, -1, 171, 843, 416, -1, 416, 840, 171, -1, 172, 842, 416, -1, 416, 843, 172, -1, 148, 807, 416, -1, 416, 842, 148, -1, 148, 842, 417, -1, 417, 801, 148, -1, 172, 845, 417, -1, 417, 842, 172, -1, 173, 844, 417, -1, 417, 845, 173, -1, 144, 801, 417, -1, 417, 844, 144, -1, 144, 844, 418, -1, 418, 795, 144, -1, 173, 847, 418, -1, 418, 844, 173, -1, 174, 846, 418, -1, 418, 847, 174, -1, 140, 795, 418, -1, 418, 846, 140, -1, 140, 846, 419, -1, 419, 789, 140, -1, 174, 849, 419, -1, 419, 846, 174, -1, 175, 848, 419, -1, 419, 849, 175, -1, 134, 789, 419, -1, 419, 848, 134, -1, 134, 848, 420, -1, 420, 782, 134, -1, 175, 851, 420, -1, 420, 848, 175, -1, 176, 850, 420, -1, 420, 851, 176, -1, 133, 782, 420, -1, 420, 850, 133, -1, 138, 853, 421, -1, 421, 786, 138, -1, 45, 852, 421, -1, 421, 853, 45, -1, 137, 786, 421, -1, 421, 852, 137, -1, 142, 854, 422, -1, 422, 792, 142, -1, 45, 853, 422, -1, 422, 854, 45, -1, 138, 792, 422, -1, 422, 853, 138, -1, 146, 855, 423, -1, 423, 798, 146, -1, 45, 854, 423, -1, 423, 855, 45, -1, 142, 798, 423, -1, 423, 854, 142, -1, 150, 856, 424, -1, 424, 804, 150, -1, 45, 855, 424, -1, 424, 856, 45, -1, 146, 804, 424, -1, 424, 855, 146, -1, 154, 857, 425, -1, 425, 810, 154, -1, 45, 856, 425, -1, 425, 857, 45, -1, 150, 810, 425, -1, 425, 856, 150, -1, 158, 858, 426, -1, 426, 816, 158, -1, 45, 857, 426, -1, 426, 858, 45, -1, 154, 816, 426, -1, 426, 857, 154, -1, 30, 601, 427, -1, 427, 821, 30, -1, 45, 858, 427, -1, 427, 601, 45, -1, 158, 821, 427, -1, 427, 858, 158, -1, 177, 862, 428, -1, 428, 859, 177, -1, 180, 861, 428, -1, 428, 862, 180, -1, 179, 860, 428, -1, 428, 861, 179, -1, 178, 859, 428, -1, 428, 860, 178, -1, 181, 866, 429, -1, 429, 863, 181, -1, 184, 865, 429, -1, 429, 866, 184, -1, 183, 864, 429, -1, 429, 865, 183, -1, 182, 863, 429, -1, 429, 864, 182, -1, 185, 870, 430, -1, 430, 867, 185, -1, 188, 869, 430, -1, 430, 870, 188, -1, 187, 868, 430, -1, 430, 869, 187, -1, 186, 867, 430, -1, 430, 868, 186, -1, 189, 874, 431, -1, 431, 871, 189, -1, 192, 873, 431, -1, 431, 874, 192, -1, 191, 872, 431, -1, 431, 873, 191, -1, 190, 871, 431, -1, 431, 872, 190, -1, 193, 878, 432, -1, 432, 875, 193, -1, 196, 877, 432, -1, 432, 878, 196, -1, 195, 876, 432, -1, 432, 877, 195, -1, 194, 875, 432, -1, 432, 876, 194, -1, 197, 882, 433, -1, 433, 879, 197, -1, 200, 881, 433, -1, 433, 882, 200, -1, 199, 880, 433, -1, 433, 881, 199, -1, 198, 879, 433, -1, 433, 880, 198, -1, 201, 886, 434, -1, 434, 883, 201, -1, 204, 885, 434, -1, 434, 886, 204, -1, 203, 884, 434, -1, 434, 885, 203, -1, 202, 883, 434, -1, 434, 884, 202, -1, 162, 889, 435, -1, 435, 824, 162, -1, 206, 888, 435, -1, 435, 889, 206, -1, 205, 887, 435, -1, 435, 888, 205, -1, 161, 824, 435, -1, 435, 887, 161, -1, 161, 887, 436, -1, 436, 890, 161, -1, 205, 892, 436, -1, 436, 887, 205, -1, 207, 891, 436, -1, 436, 892, 207, -1, 175, 890, 436, -1, 436, 891, 175, -1, 175, 891, 437, -1, 437, 851, 175, -1, 207, 894, 437, -1, 437, 891, 207, -1, 208, 893, 437, -1, 437, 894, 208, -1, 176, 851, 437, -1, 437, 893, 176, -1, 176, 893, 438, -1, 438, 895, 176, -1, 208, 896, 438, -1, 438, 893, 208, -1, 206, 889, 438, -1, 438, 896, 206, -1, 162, 895, 438, -1, 438, 889, 162, -1, 167, 899, 439, -1, 439, 836, 167, -1, 210, 898, 439, -1, 439, 899, 210, -1, 209, 897, 439, -1, 439, 898, 209, -1, 168, 836, 439, -1, 439, 897, 168, -1, 168, 897, 440, -1, 440, 900, 168, -1, 209, 902, 440, -1, 440, 897, 209, -1, 211, 901, 440, -1, 440, 902, 211, -1, 170, 900, 440, -1, 440, 901, 170, -1, 170, 901, 441, -1, 441, 838, 170, -1, 211, 904, 441, -1, 441, 901, 211, -1, 212, 903, 441, -1, 441, 904, 212, -1, 169, 838, 441, -1, 441, 903, 169, -1, 169, 903, 442, -1, 442, 905, 169, -1, 212, 906, 442, -1, 442, 903, 212, -1, 210, 899, 442, -1, 442, 906, 210, -1, 167, 905, 442, -1, 442, 899, 167, -1, 169, 909, 443, -1, 443, 841, 169, -1, 214, 908, 443, -1, 443, 909, 214, -1, 213, 907, 443, -1, 443, 908, 213, -1, 171, 841, 443, -1, 443, 907, 171, -1, 171, 907, 444, -1, 444, 910, 171, -1, 213, 912, 444, -1, 444, 907, 213, -1, 215, 911, 444, -1, 444, 912, 215, -1, 166, 910, 444, -1, 444, 911, 166, -1, 166, 911, 445, -1, 445, 835, 166, -1, 215, 914, 445, -1, 445, 911, 215, -1, 216, 913, 445, -1, 445, 914, 216, -1, 167, 835, 445, -1, 445, 913, 167, -1, 167, 913, 446, -1, 446, 905, 167, -1, 216, 915, 446, -1, 446, 913, 216, -1, 214, 909, 446, -1, 446, 915, 214, -1, 169, 905, 446, -1, 446, 909, 169, -1, 171, 918, 447, -1, 447, 843, 171, -1, 218, 917, 447, -1, 447, 918, 218, -1, 217, 916, 447, -1, 447, 917, 217, -1, 172, 843, 447, -1, 447, 916, 172, -1, 172, 916, 448, -1, 448, 919, 172, -1, 217, 921, 448, -1, 448, 916, 217, -1, 219, 920, 448, -1, 448, 921, 219, -1, 165, 919, 448, -1, 448, 920, 165, -1, 165, 920, 449, -1, 449, 833, 165, -1, 219, 923, 449, -1, 449, 920, 219, -1, 220, 922, 449, -1, 449, 923, 220, -1, 166, 833, 449, -1, 449, 922, 166, -1, 166, 922, 450, -1, 450, 910, 166, -1, 220, 924, 450, -1, 450, 922, 220, -1, 218, 918, 450, -1, 450, 924, 218, -1, 171, 910, 450, -1, 450, 918, 171, -1, 172, 927, 451, -1, 451, 845, 172, -1, 222, 926, 451, -1, 451, 927, 222, -1, 221, 925, 451, -1, 451, 926, 221, -1, 173, 845, 451, -1, 451, 925, 173, -1, 173, 925, 452, -1, 452, 928, 173, -1, 221, 930, 452, -1, 452, 925, 221, -1, 223, 929, 452, -1, 452, 930, 223, -1, 164, 928, 452, -1, 452, 929, 164, -1, 164, 929, 453, -1, 453, 831, 164, -1, 223, 932, 453, -1, 453, 929, 223, -1, 224, 931, 453, -1, 453, 932, 224, -1, 165, 831, 453, -1, 453, 931, 165, -1, 165, 931, 454, -1, 454, 919, 165, -1, 224, 933, 454, -1, 454, 931, 224, -1, 222, 927, 454, -1, 454, 933, 222, -1, 172, 919, 454, -1, 454, 927, 172, -1, 173, 936, 455, -1, 455, 847, 173, -1, 226, 935, 455, -1, 455, 936, 226, -1, 225, 934, 455, -1, 455, 935, 225, -1, 174, 847, 455, -1, 455, 934, 174, -1, 174, 934, 456, -1, 456, 937, 174, -1, 225, 939, 456, -1, 456, 934, 225, -1, 227, 938, 456, -1, 456, 939, 227, -1, 163, 937, 456, -1, 456, 938, 163, -1, 163, 938, 457, -1, 457, 829, 163, -1, 227, 941, 457, -1, 457, 938, 227, -1, 228, 940, 457, -1, 457, 941, 228, -1, 164, 829, 457, -1, 457, 940, 164, -1, 164, 940, 458, -1, 458, 928, 164, -1, 228, 942, 458, -1, 458, 940, 228, -1, 226, 936, 458, -1, 458, 942, 226, -1, 173, 928, 458, -1, 458, 936, 173, -1, 174, 945, 459, -1, 459, 849, 174, -1, 230, 944, 459, -1, 459, 945, 230, -1, 229, 943, 459, -1, 459, 944, 229, -1, 175, 849, 459, -1, 459, 943, 175, -1, 175, 943, 460, -1, 460, 890, 175, -1, 229, 947, 460, -1, 460, 943, 229, -1, 231, 946, 460, -1, 460, 947, 231, -1, 161, 890, 460, -1, 460, 946, 161, -1, 161, 946, 461, -1, 461, 827, 161, -1, 231, 949, 461, -1, 461, 946, 231, -1, 232, 948, 461, -1, 461, 949, 232, -1, 163, 827, 461, -1, 461, 948, 163, -1, 163, 948, 462, -1, 462, 937, 163, -1, 232, 950, 462, -1, 462, 948, 232, -1, 230, 945, 462, -1, 462, 950, 230, -1, 174, 937, 462, -1, 462, 945, 174, -1, 45, 953, 463, -1, 463, 852, 45, -1, 234, 952, 463, -1, 463, 953, 234, -1, 233, 951, 463, -1, 463, 952, 233, -1, 137, 852, 463, -1, 463, 951, 137, -1, 235, 956, 464, -1, 464, 954, 235, -1, 177, 859, 464, -1, 464, 956, 177, -1, 178, 955, 464, -1, 464, 859, 178, -1, 236, 954, 464, -1, 464, 955, 236, -1, 236, 955, 465, -1, 465, 957, 236, -1, 178, 860, 465, -1, 465, 955, 178, -1, 179, 958, 465, -1, 465, 860, 179, -1, 237, 957, 465, -1, 465, 958, 237, -1, 237, 958, 466, -1, 466, 959, 237, -1, 179, 861, 466, -1, 466, 958, 179, -1, 180, 960, 466, -1, 466, 861, 180, -1, 238, 959, 466, -1, 466, 960, 238, -1, 238, 960, 467, -1, 467, 961, 238, -1, 180, 862, 467, -1, 467, 960, 180, -1, 177, 956, 467, -1, 467, 862, 177, -1, 235, 961, 467, -1, 467, 956, 235, -1, 239, 964, 468, -1, 468, 962, 239, -1, 181, 863, 468, -1, 468, 964, 181, -1, 182, 963, 468, -1, 468, 863, 182, -1, 240, 962, 468, -1, 468, 963, 240, -1, 240, 963, 469, -1, 469, 965, 240, -1, 182, 864, 469, -1, 469, 963, 182, -1, 183, 966, 469, -1, 469, 864, 183, -1, 241, 965, 469, -1, 469, 966, 241, -1, 241, 966, 470, -1, 470, 967, 241, -1, 183, 865, 470, -1, 470, 966, 183, -1, 184, 968, 470, -1, 470, 865, 184, -1, 242, 967, 470, -1, 470, 968, 242, -1, 242, 968, 471, -1, 471, 969, 242, -1, 184, 866, 471, -1, 471, 968, 184, -1, 181, 964, 471, -1, 471, 866, 181, -1, 239, 969, 471, -1, 471, 964, 239, -1, 243, 972, 472, -1, 472, 970, 243, -1, 185, 867, 472, -1, 472, 972, 185, -1, 186, 971, 472, -1, 472, 867, 186, -1, 244, 970, 472, -1, 472, 971, 244, -1, 244, 971, 473, -1, 473, 973, 244, -1, 186, 868, 473, -1, 473, 971, 186, -1, 187, 974, 473, -1, 473, 868, 187, -1, 245, 973, 473, -1, 473, 974, 245, -1, 245, 974, 474, -1, 474, 975, 245, -1, 187, 869, 474, -1, 474, 974, 187, -1, 188, 976, 474, -1, 474, 869, 188, -1, 246, 975, 474, -1, 474, 976, 246, -1, 246, 976, 475, -1, 475, 977, 246, -1, 188, 870, 475, -1, 475, 976, 188, -1, 185, 972, 475, -1, 475, 870, 185, -1, 243, 977, 475, -1, 475, 972, 243, -1, 247, 980, 476, -1, 476, 978, 247, -1, 189, 871, 476, -1, 476, 980, 189, -1, 190, 979, 476, -1, 476, 871, 190, -1, 248, 978, 476, -1, 476, 979, 248, -1, 248, 979, 477, -1, 477, 981, 248, -1, 190, 872, 477, -1, 477, 979, 190, -1, 191, 982, 477, -1, 477, 872, 191, -1, 249, 981, 477, -1, 477, 982, 249, -1, 249, 982, 478, -1, 478, 983, 249, -1, 191, 873, 478, -1, 478, 982, 191, -1, 192, 984, 478, -1, 478, 873, 192, -1, 250, 983, 478, -1, 478, 984, 250, -1, 250, 984, 479, -1, 479, 985, 250, -1, 192, 874, 479, -1, 479, 984, 192, -1, 189, 980, 479, -1, 479, 874, 189, -1, 247, 985, 479, -1, 479, 980, 247, -1, 251, 988, 480, -1, 480, 986, 251, -1, 193, 875, 480, -1, 480, 988, 193, -1, 194, 987, 480, -1, 480, 875, 194, -1, 252, 986, 480, -1, 480, 987, 252, -1, 252, 987, 481, -1, 481, 989, 252, -1, 194, 876, 481, -1, 481, 987, 194, -1, 195, 990, 481, -1, 481, 876, 195, -1, 253, 989, 481, -1, 481, 990, 253, -1, 253, 990, 482, -1, 482, 991, 253, -1, 195, 877, 482, -1, 482, 990, 195, -1, 196, 992, 482, -1, 482, 877, 196, -1, 254, 991, 482, -1, 482, 992, 254, -1, 254, 992, 483, -1, 483, 993, 254, -1, 196, 878, 483, -1, 483, 992, 196, -1, 193, 988, 483, -1, 483, 878, 193, -1, 251, 993, 483, -1, 483, 988, 251, -1, 255, 996, 484, -1, 484, 994, 255, -1, 197, 879, 484, -1, 484, 996, 197, -1, 198, 995, 484, -1, 484, 879, 198, -1, 256, 994, 484, -1, 484, 995, 256, -1, 256, 995, 485, -1, 485, 997, 256, -1, 198, 880, 485, -1, 485, 995, 198, -1, 199, 998, 485, -1, 485, 880, 199, -1, 257, 997, 485, -1, 485, 998, 257, -1, 257, 998, 486, -1, 486, 999, 257, -1, 199, 881, 486, -1, 486, 998, 199, -1, 200, 1000, 486, -1, 486, 881, 200, -1, 258, 999, 486, -1, 486, 1000, 258, -1, 258, 1000, 487, -1, 487, 1001, 258, -1, 200, 882, 487, -1, 487, 1000, 200, -1, 197, 996, 487, -1, 487, 882, 197, -1, 255, 1001, 487, -1, 487, 996, 255, -1, 259, 1004, 488, -1, 488, 1002, 259, -1, 201, 883, 488, -1, 488, 1004, 201, -1, 202, 1003, 488, -1, 488, 883, 202, -1, 260, 1002, 488, -1, 488, 1003, 260, -1, 260, 1003, 489, -1, 489, 1005, 260, -1, 202, 884, 489, -1, 489, 1003, 202, -1, 203, 1006, 489, -1, 489, 884, 203, -1, 261, 1005, 489, -1, 489, 1006, 261, -1, 261, 1006, 490, -1, 490, 1007, 261, -1, 203, 885, 490, -1, 490, 1006, 203, -1, 204, 1008, 490, -1, 490, 885, 204, -1, 262, 1007, 490, -1, 490, 1008, 262, -1, 262, 1008, 491, -1, 491, 1009, 262, -1, 204, 886, 491, -1, 491, 1008, 204, -1, 201, 1004, 491, -1, 491, 886, 201, -1, 259, 1009, 491, -1, 491, 1004, 259, -1, 205, 888, 492, -1, 492, 1010, 205, -1, 206, 1011, 492, -1, 492, 888, 206, -1, 235, 954, 492, -1, 492, 1011, 235, -1, 236, 1010, 492, -1, 492, 954, 236, -1, 207, 892, 493, -1, 493, 1012, 207, -1, 205, 1010, 493, -1, 493, 892, 205, -1, 236, 957, 493, -1, 493, 1010, 236, -1, 237, 1012, 493, -1, 493, 957, 237, -1, 208, 894, 494, -1, 494, 1013, 208, -1, 207, 1012, 494, -1, 494, 894, 207, -1, 237, 959, 494, -1, 494, 1012, 237, -1, 238, 1013, 494, -1, 494, 959, 238, -1, 206, 896, 495, -1, 495, 1011, 206, -1, 208, 1013, 495, -1, 495, 896, 208, -1, 238, 961, 495, -1, 495, 1013, 238, -1, 235, 1011, 495, -1, 495, 961, 235, -1, 209, 898, 496, -1, 496, 1014, 209, -1, 210, 1015, 496, -1, 496, 898, 210, -1, 239, 962, 496, -1, 496, 1015, 239, -1, 240, 1014, 496, -1, 496, 962, 240, -1, 211, 902, 497, -1, 497, 1016, 211, -1, 209, 1014, 497, -1, 497, 902, 209, -1, 240, 965, 497, -1, 497, 1014, 240, -1, 241, 1016, 497, -1, 497, 965, 241, -1, 212, 904, 498, -1, 498, 1017, 212, -1, 211, 1016, 498, -1, 498, 904, 211, -1, 241, 967, 498, -1, 498, 1016, 241, -1, 242, 1017, 498, -1, 498, 967, 242, -1, 210, 906, 499, -1, 499, 1015, 210, -1, 212, 1017, 499, -1, 499, 906, 212, -1, 242, 969, 499, -1, 499, 1017, 242, -1, 239, 1015, 499, -1, 499, 969, 239, -1, 213, 908, 500, -1, 500, 1018, 213, -1, 214, 1019, 500, -1, 500, 908, 214, -1, 243, 970, 500, -1, 500, 1019, 243, -1, 244, 1018, 500, -1, 500, 970, 244, -1, 215, 912, 501, -1, 501, 1020, 215, -1, 213, 1018, 501, -1, 501, 912, 213, -1, 244, 973, 501, -1, 501, 1018, 244, -1, 245, 1020, 501, -1, 501, 973, 245, -1, 216, 914, 502, -1, 502, 1021, 216, -1, 215, 1020, 502, -1, 502, 914, 215, -1, 245, 975, 502, -1, 502, 1020, 245, -1, 246, 1021, 502, -1, 502, 975, 246, -1, 214, 915, 503, -1, 503, 1019, 214, -1, 216, 1021, 503, -1, 503, 915, 216, -1, 246, 977, 503, -1, 503, 1021, 246, -1, 243, 1019, 503, -1, 503, 977, 243, -1, 217, 917, 504, -1, 504, 1022, 217, -1, 218, 1023, 504, -1, 504, 917, 218, -1, 247, 978, 504, -1, 504, 1023, 247, -1, 248, 1022, 504, -1, 504, 978, 248, -1, 219, 921, 505, -1, 505, 1024, 219, -1, 217, 1022, 505, -1, 505, 921, 217, -1, 248, 981, 505, -1, 505, 1022, 248, -1, 249, 1024, 505, -1, 505, 981, 249, -1, 220, 923, 506, -1, 506, 1025, 220, -1, 219, 1024, 506, -1, 506, 923, 219, -1, 249, 983, 506, -1, 506, 1024, 249, -1, 250, 1025, 506, -1, 506, 983, 250, -1, 218, 924, 507, -1, 507, 1023, 218, -1, 220, 1025, 507, -1, 507, 924, 220, -1, 250, 985, 507, -1, 507, 1025, 250, -1, 247, 1023, 507, -1, 507, 985, 247, -1, 221, 926, 508, -1, 508, 1026, 221, -1, 222, 1027, 508, -1, 508, 926, 222, -1, 251, 986, 508, -1, 508, 1027, 251, -1, 252, 1026, 508, -1, 508, 986, 252, -1, 223, 930, 509, -1, 509, 1028, 223, -1, 221, 1026, 509, -1, 509, 930, 221, -1, 252, 989, 509, -1, 509, 1026, 252, -1, 253, 1028, 509, -1, 509, 989, 253, -1, 224, 932, 510, -1, 510, 1029, 224, -1, 223, 1028, 510, -1, 510, 932, 223, -1, 253, 991, 510, -1, 510, 1028, 253, -1, 254, 1029, 510, -1, 510, 991, 254, -1, 222, 933, 511, -1, 511, 1027, 222, -1, 224, 1029, 511, -1, 511, 933, 224, -1, 254, 993, 511, -1, 511, 1029, 254, -1, 251, 1027, 511, -1, 511, 993, 251, -1, 225, 935, 512, -1, 512, 1030, 225, -1, 226, 1031, 512, -1, 512, 935, 226, -1, 255, 994, 512, -1, 512, 1031, 255, -1, 256, 1030, 512, -1, 512, 994, 256, -1, 227, 939, 513, -1, 513, 1032, 227, -1, 225, 1030, 513, -1, 513, 939, 225, -1, 256, 997, 513, -1, 513, 1030, 256, -1, 257, 1032, 513, -1, 513, 997, 257, -1, 228, 941, 514, -1, 514, 1033, 228, -1, 227, 1032, 514, -1, 514, 941, 227, -1, 257, 999, 514, -1, 514, 1032, 257, -1, 258, 1033, 514, -1, 514, 999, 258, -1, 226, 942, 515, -1, 515, 1031, 226, -1, 228, 1033, 515, -1, 515, 942, 228, -1, 258, 1001, 515, -1, 515, 1033, 258, -1, 255, 1031, 515, -1, 515, 1001, 255, -1, 229, 944, 516, -1, 516, 1034, 229, -1, 230, 1035, 516, -1, 516, 944, 230, -1, 259, 1002, 516, -1, 516, 1035, 259, -1, 260, 1034, 516, -1, 516, 1002, 260, -1, 231, 947, 517, -1, 517, 1036, 231, -1, 229, 1034, 517, -1, 517, 947, 229, -1, 260, 1005, 517, -1, 517, 1034, 260, -1, 261, 1036, 517, -1, 517, 1005, 261, -1, 232, 949, 518, -1, 518, 1037, 232, -1, 231, 1036, 518, -1, 518, 949, 231, -1, 261, 1007, 518, -1, 518, 1036, 261, -1, 262, 1037, 518, -1, 518, 1007, 262, -1, 230, 950, 519, -1, 519, 1035, 230, -1, 232, 1037, 519, -1, 519, 950, 232, -1, 262, 1009, 519, -1, 519, 1037, 262, -1, 259, 1035, 519, -1, 519, 1009, 259, -1, 233, 952, 520, -1, 520, 1038, 233, -1, 234, 1040, 520, -1, 520, 952, 234, -1, 264, 1039, 520, -1, 520, 1040, 264, -1, 263, 1038, 520, -1, 520, 1039, 263, -1},
                                                        TexCoord: &x3d.TextureCoordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                DEF: stringPtr("Upper_teeth-TEXCOORD"),
                                                            },
                                                            Point: &x3d.MFVec2f{[2]float32{0.8647,0.3354},[2]float32{0.8772,0.3277},[2]float32{0.8746,0.3053},[2]float32{0.8621,0.313},[2]float32{0.8601,0.2951},[2]float32{0.8726,0.2875},[2]float32{0.8849,0.2799},[2]float32{0.8869,0.2977},[2]float32{0.8896,0.3201},[2]float32{0.8597,0.2826},[2]float32{0.8715,0.2769},[2]float32{0.8722,0.2824},[2]float32{0.8598,0.2838},[2]float32{0.8599,0.2848},[2]float32{0.8717,0.2877},[2]float32{0.8824,0.2879},[2]float32{0.8841,0.2797},[2]float32{0.8831,0.2709},[2]float32{0.9015,0.3128},[2]float32{0.8989,0.2904},[2]float32{0.8968,0.2726},[2]float32{0.9082,0.2656},[2]float32{0.9103,0.2834},[2]float32{0.913,0.3058},[2]float32{0.894,0.2646},[2]float32{0.8952,0.2745},[2]float32{0.8933,0.2842},[2]float32{0.9019,0.2784},[2]float32{0.9057,0.268},[2]float32{0.9045,0.2582},[2]float32{0.9239,0.299},[2]float32{0.9213,0.2766},[2]float32{0.9192,0.2589},[2]float32{0.9299,0.2523},[2]float32{0.9321,0.27},[2]float32{0.9347,0.2924},[2]float32{0.9147,0.2519},[2]float32{0.9158,0.2618},[2]float32{0.9122,0.2726},[2]float32{0.9201,0.2673},[2]float32{0.926,0.2555},[2]float32{0.9249,0.2457},[2]float32{0.9454,0.2859},[2]float32{0.9428,0.2634},[2]float32{0.9406,0.2457},[2]float32{0.9501,0.2399},[2]float32{0.9523,0.2576},[2]float32{0.9549,0.28},[2]float32{0.9353,0.2393},[2]float32{0.8544,0.1},[2]float32{0.8519,0.1017},[2]float32{0.8611,0.09569},[2]float32{0.8611,0.09564},[2]float32{0.8678,0.09126},[2]float32{0.8702,0.08971},[2]float32{0.8679,0.09122},[2]float32{0.861,0.09573},[2]float32{0.8541,0.1002},[2]float32{0.9585,0.03203},[2]float32{0.9596,0.03133},[2]float32{0.96,0.03107},[2]float32{0.9584,0.0321},[2]float32{0.9591,0.03167},[2]float32{0.9604,0.03082},[2]float32{0.9615,0.0301},[2]float32{0.9616,0.03005},[2]float32{0.9609,0.0305},[2]float32{0.9593,0.03151},[2]float32{0.9587,0.03191},[2]float32{0.9568,0.03319},[2]float32{0.9582,0.03223},[2]float32{0.9564,0.03343},[2]float32{0.9548,0.03448},[2]float32{0.9542,0.03487},[2]float32{0.9553,0.03415},[2]float32{0.9571,0.03297},[2]float32{0.9524,0.03607},[2]float32{0.9524,0.03602},[2]float32{0.9481,0.03882},[2]float32{0.9494,0.03797},[2]float32{0.9459,0.04029},[2]float32{0.9439,0.04162},[2]float32{0.944,0.04152},[2]float32{0.9468,0.03967},[2]float32{0.9503,0.03741},[2]float32{0.938,0.04546},[2]float32{0.9392,0.04468},[2]float32{0.9364,0.2491},[2]float32{0.931,0.261},[2]float32{0.9309,0.05011},[2]float32{0.9321,0.04928},[2]float32{0.9256,0.05352},[2]float32{0.9225,0.05555},[2]float32{0.9237,0.05479},[2]float32{0.9296,0.05095},[2]float32{0.9361,0.04669},[2]float32{0.9154,0.06023},[2]float32{0.9165,0.05949},[2]float32{0.9084,0.06475},[2]float32{0.9096,0.064},[2]float32{0.9032,0.06814},[2]float32{0.9004,0.07001},[2]float32{0.9016,0.06919},[2]float32{0.9073,0.06551},[2]float32{0.9135,0.06145},[2]float32{0.8925,0.07517},[2]float32{0.8942,0.07408},[2]float32{0.8855,0.07974},[2]float32{0.8861,0.07936},[2]float32{0.8794,0.08374},[2]float32{0.8768,0.08541},[2]float32{0.8787,0.08417},[2]float32{0.8849,0.08013},[2]float32{0.8914,0.07589},[2]float32{0.8536,0.1469},[2]float32{0.8566,0.144},[2]float32{0.8658,0.138},[2]float32{0.8659,0.1387},[2]float32{0.878,0.1308},[2]float32{0.875,0.132},[2]float32{0.8743,0.1261},[2]float32{0.8652,0.1321},[2]float32{0.856,0.1381},[2]float32{0.8782,0.1298},[2]float32{0.8783,0.1303},[2]float32{0.8786,0.1309},[2]float32{0.8752,0.1318},[2]float32{0.8746,0.126},[2]float32{0.8776,0.124},[2]float32{0.8656,0.1381},[2]float32{0.8658,0.1399},[2]float32{0.853,0.1485},[2]float32{0.8561,0.1443},[2]float32{0.8554,0.1385},[2]float32{0.865,0.1322},[2]float32{0.8532,0.1462},[2]float32{0.8533,0.1471},[2]float32{0.8526,0.1403},[2]float32{0.9617,0.0761},[2]float32{0.9624,0.07489},[2]float32{0.9621,0.07506},[2]float32{0.9621,0.07583},[2]float32{0.9628,0.07539},[2]float32{0.9631,0.07441},[2]float32{0.9625,0.06853},[2]float32{0.9377,0.2565},[2]float32{0.9456,0.2435},[2]float32{0.9446,0.2336},[2]float32{0.962,0.2757},[2]float32{0.9593,0.2533},[2]float32{0.9572,0.2355},[2]float32{0.9622,0.2324},[2]float32{0.9644,0.2502},[2]float32{0.967,0.2726},[2]float32{0.9511,0.2295},[2]float32{0.9522,0.2394},[2]float32{0.9455,0.2521},[2]float32{0.9476,0.2503},[2]float32{0.9567,0.2367},[2]float32{0.9557,0.2268},[2]float32{0.9705,0.2705},[2]float32{0.9678,0.2481},[2]float32{0.9657,0.2303},[2]float32{0.9678,0.229},[2]float32{0.97,0.2468},[2]float32{0.9726,0.2692},[2]float32{0.9588,0.2248},[2]float32{0.9599,0.2347},[2]float32{0.9526,0.2478},[2]float32{0.9522,0.2475},[2]float32{0.9618,0.2335},[2]float32{0.9608,0.2236},[2]float32{0.9737,0.2685},[2]float32{0.9711,0.2461},[2]float32{0.9689,0.2284},[2]float32{0.9692,0.2282},[2]float32{0.9714,0.2459},[2]float32{0.974,0.2683},[2]float32{0.9617,0.2231},[2]float32{0.9628,0.233},[2]float32{0.9552,0.2462},[2]float32{0.9532,0.2469},[2]float32{0.963,0.2328},[2]float32{0.9619,0.2229},[2]float32{0.8599,0.282},[2]float32{0.8715,0.2749},[2]float32{0.8828,0.268},[2]float32{0.8829,0.2677},[2]float32{0.8716,0.2747},[2]float32{0.86,0.2819},[2]float32{0.8937,0.2613},[2]float32{0.9042,0.2549},[2]float32{0.9044,0.2545},[2]float32{0.8937,0.2611},[2]float32{0.9144,0.2486},[2]float32{0.9246,0.2423},[2]float32{0.9615,0.06917},[2]float32{0.9618,0.06901},[2]float32{0.9652,0.07305},[2]float32{0.9652,0.0735},[2]float32{0.9676,0.07275},[2]float32{0.967,0.07187},[2]float32{0.9663,0.06605},[2]float32{0.9646,0.0672},[2]float32{0.9672,0.07175},[2]float32{0.9675,0.07342},[2]float32{0.9663,0.07362},[2]float32{0.9661,0.07245},[2]float32{0.9654,0.06663},[2]float32{0.9665,0.06594},[2]float32{0.9641,0.07376},[2]float32{0.9642,0.07421},[2]float32{0.9635,0.06791},[2]float32{0.9653,0.07301},[2]float32{0.9638,0.07396},[2]float32{0.9641,0.07564},[2]float32{0.9606,0.07732},[2]float32{0.9612,0.0757},[2]float32{0.9605,0.06987},[2]float32{0.9631,0.06815},[2]float32{0.9646,0.06719},[2]float32{0.9587,0.07729},[2]float32{0.9588,0.07774},[2]float32{0.9563,0.07961},[2]float32{0.9576,0.078},[2]float32{0.957,0.07212},[2]float32{0.9581,0.07143},[2]float32{0.959,0.07709},[2]float32{0.959,0.07785},[2]float32{0.9616,0.0754},[2]float32{0.961,0.06952},[2]float32{0.9584,0.0712},[2]float32{0.9641,0.07376},[2]float32{0.9635,0.06791},[2]float32{0.9589,0.07716},[2]float32{0.9549,0.0798},[2]float32{0.9552,0.08149},[2]float32{0.9481,0.08548},[2]float32{0.9498,0.08311},[2]float32{0.9491,0.07727},[2]float32{0.9542,0.07397},[2]float32{0.9582,0.07134},[2]float32{0.9469,0.08502},[2]float32{0.9469,0.08547},[2]float32{0.9446,0.08724},[2]float32{0.9469,0.08499},[2]float32{0.9463,0.07912},[2]float32{0.9463,0.07916},[2]float32{0.9507,0.08252},[2]float32{0.9507,0.08326},[2]float32{0.9555,0.07936},[2]float32{0.9549,0.07349},[2]float32{0.9501,0.07664},[2]float32{0.9587,0.0773},[2]float32{0.958,0.07146},[2]float32{0.9454,0.08597},[2]float32{0.9374,0.09121},[2]float32{0.9377,0.09292},[2]float32{0.926,0.0999},[2]float32{0.9284,0.09706},[2]float32{0.9278,0.09122},[2]float32{0.9367,0.08537},[2]float32{0.9248,0.242},[2]float32{0.9144,0.2484},[2]float32{0.9447,0.08014},[2]float32{0.9242,0.09986},[2]float32{0.9242,0.1003},[2]float32{0.9225,0.1017},[2]float32{0.9255,0.09895},[2]float32{0.9249,0.09308},[2]float32{0.9235,0.094},[2]float32{0.9336,0.09368},[2]float32{0.9336,0.0944},[2]float32{0.9426,0.0878},[2]float32{0.942,0.08194},[2]float32{0.933,0.08782},[2]float32{0.9469,0.08503},[2]float32{0.9462,0.07919},[2]float32{0.9228,0.1008},[2]float32{0.9147,0.106},[2]float32{0.915,0.1078},[2]float32{0.9032,0.1148},[2]float32{0.9059,0.1118},[2]float32{0.9052,0.1059},[2]float32{0.9141,0.1002},[2]float32{0.9221,0.09494},[2]float32{0.902,0.1143},[2]float32{0.9021,0.1148},[2]float32{0.9008,0.1158},[2]float32{0.9037,0.1132},[2]float32{0.9031,0.1073},[2]float32{0.9014,0.1084},[2]float32{0.935,0.2359},[2]float32{0.9443,0.2302},[2]float32{0.9455,0.2293},[2]float32{0.9352,0.2356},[2]float32{0.951,0.2261},[2]float32{0.9555,0.2233},[2]float32{0.9564,0.2226},[2]float32{0.9512,0.2258},[2]float32{0.9587,0.2214},[2]float32{0.9606,0.2202},[2]float32{0.9615,0.2195},[2]float32{0.9589,0.221},[2]float32{0.9616,0.2196},[2]float32{0.9618,0.2195},[2]float32{0.9625,0.2189},[2]float32{0.9618,0.2192},[2]float32{0.9679,0.2199},[2]float32{0.9676,0.22},[2]float32{0.9665,0.2207},[2]float32{0.9658,0.2173},[2]float32{0.967,0.2171},[2]float32{0.967,0.2165},[2]float32{0.9644,0.222},[2]float32{0.961,0.2241},[2]float32{0.9605,0.2206},[2]float32{0.9638,0.2191},[2]float32{0.956,0.2272},[2]float32{0.9489,0.2315},[2]float32{0.9488,0.2278},[2]float32{0.9554,0.2242},[2]float32{0.9395,0.2373},[2]float32{0.9288,0.2439},[2]float32{0.928,0.2405},[2]float32{0.939,0.2343},[2]float32{0.9181,0.2504},[2]float32{0.9072,0.2572},[2]float32{0.9066,0.2536},[2]float32{0.9115,0.1082},[2]float32{0.9115,0.1088},[2]float32{0.92,0.1026},[2]float32{0.9193,0.09673},[2]float32{0.9108,0.1023},[2]float32{0.9241,0.09988},[2]float32{0.9235,0.09403},[2]float32{0.8999,0.1157},[2]float32{0.891,0.1215},[2]float32{0.8912,0.1233},[2]float32{0.8816,0.1277},[2]float32{0.881,0.1218},[2]float32{0.8903,0.1157},[2]float32{0.8993,0.1098},[2]float32{0.8783,0.1298},[2]float32{0.8809,0.1281},[2]float32{0.8803,0.1223},[2]float32{0.8776,0.124},[2]float32{0.8893,0.1226},[2]float32{0.8894,0.1233},[2]float32{0.8982,0.1168},[2]float32{0.8975,0.111},[2]float32{0.8887,0.1168},[2]float32{0.902,0.1143},[2]float32{0.9014,0.1085},[2]float32{0.8526,0.1068},[2]float32{0.8521,0.1016},[2]float32{0.8612,0.09563},[2]float32{0.8617,0.1008},[2]float32{0.8709,0.09485},[2]float32{0.8702,0.08973},[2]float32{0.8734,0.08764},[2]float32{0.8741,0.09274},[2]float32{0.8711,0.09469},[2]float32{0.8704,0.08957},[2]float32{0.9176,0.2474},[2]float32{0.861,0.09575},[2]float32{0.8616,0.1009},[2]float32{0.8521,0.1071},[2]float32{0.8516,0.1019},[2]float32{0.8488,0.1037},[2]float32{0.8492,0.109},[2]float32{0.9585,0.03763},[2]float32{0.958,0.03239},[2]float32{0.9578,0.03251},[2]float32{0.9582,0.03778},[2]float32{0.9592,0.03716},[2]float32{0.9587,0.03192},[2]float32{0.9605,0.03073},[2]float32{0.9611,0.0359},[2]float32{0.9628,0.03482},[2]float32{0.9621,0.02971},[2]float32{0.9622,0.02964},[2]float32{0.9629,0.03473},[2]float32{0.9619,0.0354},[2]float32{0.9612,0.03028},[2]float32{0.9595,0.03142},[2]float32{0.96,0.0366},[2]float32{0.961,0.03597},[2]float32{0.9603,0.03087},[2]float32{0.9588,0.03185},[2]float32{0.9595,0.03694},[2]float32{0.9569,0.03863},[2]float32{0.9563,0.0335},[2]float32{0.9541,0.03492},[2]float32{0.9547,0.04012},[2]float32{0.9537,0.04074},[2]float32{0.9533,0.03548},[2]float32{0.9547,0.03454},[2]float32{0.9551,0.03981},[2]float32{0.9577,0.03816},[2]float32{0.9572,0.03292},[2]float32{0.9594,0.03147},[2]float32{0.96,0.03662},[2]float32{0.9546,0.04012},[2]float32{0.9539,0.03504},[2]float32{0.95,0.03763},[2]float32{0.9506,0.04274},[2]float32{0.9457,0.04599},[2]float32{0.9451,0.04082},[2]float32{0.9424,0.0426},[2]float32{0.9429,0.04783},[2]float32{0.943,0.04774},[2]float32{0.9425,0.04248},[2]float32{0.9463,0.04001},[2]float32{0.9468,0.04526},[2]float32{0.9515,0.04215},[2]float32{0.951,0.03695},[2]float32{0.9539,0.03505},[2]float32{0.9546,0.04018},[2]float32{0.9412,0.04889},[2]float32{0.9405,0.0438},[2]float32{0.8957,0.2642},[2]float32{0.8839,0.2714},[2]float32{0.8835,0.2678},[2]float32{0.8953,0.2611},[2]float32{0.8717,0.2789},[2]float32{0.8594,0.2865},[2]float32{0.8595,0.2833},[2]float32{0.8715,0.2757},[2]float32{0.8747,0.2891},[2]float32{0.8686,0.2887},[2]float32{0.862,0.2864},[2]float32{0.866,0.2846},[2]float32{0.8874,0.2834},[2]float32{0.8844,0.2872},[2]float32{0.8993,0.2761},[2]float32{0.8981,0.2788},[2]float32{0.9106,0.2691},[2]float32{0.9119,0.2704},[2]float32{0.9172,0.2651},[2]float32{0.9224,0.2639},[2]float32{0.9201,0.2633},[2]float32{0.9275,0.2608},[2]float32{0.9208,0.2629},[2]float32{0.9294,0.2596},[2]float32{0.8596,0.2851},[2]float32{0.8597,0.2849},[2]float32{0.8598,0.2845},[2]float32{0.8592,0.2791},[2]float32{0.8591,0.2794},[2]float32{0.859,0.2795},[2]float32{0.8574,0.2652},[2]float32{0.8575,0.265},[2]float32{0.8554,0.2465},[2]float32{0.8552,0.2466},[2]float32{0.8551,0.2466},[2]float32{0.8573,0.2653},[2]float32{0.9326,0.04897},[2]float32{0.9332,0.05411},[2]float32{0.9243,0.05992},[2]float32{0.9238,0.05471},[2]float32{0.9197,0.05742},[2]float32{0.9201,0.06267},[2]float32{0.9216,0.06174},[2]float32{0.9211,0.05648},[2]float32{0.9291,0.05126},[2]float32{0.9296,0.05648},[2]float32{0.9386,0.05063},[2]float32{0.938,0.04547},[2]float32{0.942,0.04281},[2]float32{0.9427,0.04792},[2]float32{0.9186,0.06368},[2]float32{0.9179,0.05858},[2]float32{0.91,0.06373},[2]float32{0.9106,0.06889},[2]float32{0.9018,0.07461},[2]float32{0.9013,0.06939},[2]float32{0.8976,0.07184},[2]float32{0.898,0.07709},[2]float32{0.8997,0.07599},[2]float32{0.8993,0.07074},[2]float32{0.9069,0.06578},[2]float32{0.9074,0.07098},[2]float32{0.9159,0.06545},[2]float32{0.9152,0.06031},[2]float32{0.9193,0.05767},[2]float32{0.92,0.06277},[2]float32{0.8958,0.07858},[2]float32{0.8951,0.07347},[2]float32{0.8863,0.07922},[2]float32{0.8869,0.0844},[2]float32{0.8776,0.09047},[2]float32{0.8647,0.3354},[2]float32{0.8771,0.08524},[2]float32{0.8738,0.08737},[2]float32{0.8743,0.09263},[2]float32{0.8769,0.09093},[2]float32{0.8764,0.08568},[2]float32{0.8847,0.08026},[2]float32{0.8853,0.08545},[2]float32{0.894,0.0797},[2]float32{0.8934,0.07458},[2]float32{0.8972,0.07212},[2]float32{0.8979,0.07722},[2]float32{0.8634,0.1163},[2]float32{0.8726,0.1104},[2]float32{0.8542,0.1223},[2]float32{0.8758,0.1082},[2]float32{0.8728,0.1102},[2]float32{0.8633,0.1165},[2]float32{0.8537,0.1227},[2]float32{0.8509,0.1246},[2]float32{0.9599,0.05337},[2]float32{0.9608,0.05274},[2]float32{0.9601,0.05322},[2]float32{0.9628,0.05144},[2]float32{0.9645,0.05032},[2]float32{0.9647,0.05021},[2]float32{0.9637,0.0509},[2]float32{0.9617,0.05214},[2]float32{0.9613,0.05242},[2]float32{0.9587,0.05413},[2]float32{0.9628,0.05146},[2]float32{0.9563,0.05567},[2]float32{0.9553,0.05632},[2]float32{0.9568,0.0554},[2]float32{0.9593,0.05373},[2]float32{0.9617,0.05215},[2]float32{0.9524,0.05824},[2]float32{0.9474,0.06152},[2]float32{0.9564,0.05561},[2]float32{0.9445,0.06339},[2]float32{0.9446,0.06333},[2]float32{0.9484,0.06085},[2]float32{0.9532,0.05771},[2]float32{0.9563,0.0557},[2]float32{0.935,0.06962},[2]float32{0.926,0.07546},[2]float32{0.943,0.06439},[2]float32{0.9218,0.07824},[2]float32{0.9232,0.07731},[2]float32{0.9313,0.07204},[2]float32{0.9403,0.06617},[2]float32{0.9445,0.06343},[2]float32{0.9123,0.08441},[2]float32{0.9035,0.09017},[2]float32{0.9203,0.07919},[2]float32{0.8997,0.09266},[2]float32{0.9014,0.09156},[2]float32{0.8621,0.313},[2]float32{0.8746,0.3053},[2]float32{0.8772,0.3277},[2]float32{0.8896,0.3201},[2]float32{0.8869,0.2977},[2]float32{0.8849,0.2799},[2]float32{0.8726,0.2875},[2]float32{0.8601,0.2951},[2]float32{0.8597,0.2826},[2]float32{0.8598,0.2838},[2]float32{0.8722,0.2824},[2]float32{0.8715,0.2769},[2]float32{0.8831,0.2709},[2]float32{0.8841,0.2797},[2]float32{0.8824,0.2879},[2]float32{0.8717,0.2877},[2]float32{0.8599,0.2848},[2]float32{0.8989,0.2904},[2]float32{0.9015,0.3128},[2]float32{0.913,0.3058},[2]float32{0.9103,0.2834},[2]float32{0.9082,0.2656},[2]float32{0.8968,0.2726},[2]float32{0.8952,0.2745},[2]float32{0.894,0.2646},[2]float32{0.9045,0.2582},[2]float32{0.9057,0.268},[2]float32{0.9019,0.2784},[2]float32{0.8933,0.2842},[2]float32{0.9213,0.2766},[2]float32{0.9239,0.299},[2]float32{0.9347,0.2924},[2]float32{0.9321,0.27},[2]float32{0.9299,0.2523},[2]float32{0.9192,0.2589},[2]float32{0.9158,0.2618},[2]float32{0.9147,0.2519},[2]float32{0.9249,0.2457},[2]float32{0.926,0.2555},[2]float32{0.9201,0.2673},[2]float32{0.9122,0.2726},[2]float32{0.9428,0.2634},[2]float32{0.9454,0.2859},[2]float32{0.9549,0.28},[2]float32{0.9523,0.2576},[2]float32{0.9501,0.2399},[2]float32{0.9406,0.2457},[2]float32{0.9364,0.2491},[2]float32{0.9353,0.2393},[2]float32{0.9091,0.08653},[2]float32{0.9446,0.2336},[2]float32{0.9176,0.08097},[2]float32{0.9456,0.2435},[2]float32{0.9217,0.07828},[2]float32{0.9377,0.2565},[2]float32{0.8886,0.09993},[2]float32{0.931,0.261},[2]float32{0.8792,0.106},[2]float32{0.9593,0.2533},[2]float32{0.962,0.2757},[2]float32{0.8975,0.09409},[2]float32{0.967,0.2726},[2]float32{0.9644,0.2502},[2]float32{0.9622,0.2324},[2]float32{0.9572,0.2355},[2]float32{0.9522,0.2394},[2]float32{0.9511,0.2295},[2]float32{0.8759,0.1082},[2]float32{0.9557,0.2268},[2]float32{0.9567,0.2367},[2]float32{0.9476,0.2503},[2]float32{0.9455,0.2521},[2]float32{0.9678,0.2481},[2]float32{0.9705,0.2705},[2]float32{0.9726,0.2692},[2]float32{0.97,0.2468},[2]float32{0.9678,0.229},[2]float32{0.9657,0.2303},[2]float32{0.9599,0.2347},[2]float32{0.9588,0.2248},[2]float32{0.9608,0.2236},[2]float32{0.9618,0.2335},[2]float32{0.9522,0.2475},[2]float32{0.9526,0.2478},[2]float32{0.9711,0.2461},[2]float32{0.9737,0.2685},[2]float32{0.9689,0.2284},[2]float32{0.9628,0.233},[2]float32{0.9617,0.2231},[2]float32{0.9552,0.2462},[2]float32{0.8715,0.2749},[2]float32{0.8599,0.282},[2]float32{0.86,0.2819},[2]float32{0.8785,0.1065},[2]float32{0.887,0.101},[2]float32{0.8958,0.09522},[2]float32{0.8996,0.09272},[2]float32{0.8544,0.1},[2]float32{0.8611,0.09564},[2]float32{0.8611,0.09569},[2]float32{0.8519,0.1017},[2]float32{0.8541,0.1002},[2]float32{0.861,0.09573},[2]float32{0.8679,0.09122},[2]float32{0.8702,0.08971},[2]float32{0.8678,0.09126},[2]float32{0.9585,0.03203},[2]float32{0.9584,0.0321},[2]float32{0.96,0.03107},[2]float32{0.9596,0.03133},[2]float32{0.9609,0.0305},[2]float32{0.9616,0.03005},[2]float32{0.9615,0.0301},[2]float32{0.9604,0.03082},[2]float32{0.9591,0.03167},[2]float32{0.9593,0.03151},[2]float32{0.9582,0.03223},[2]float32{0.9568,0.03319},[2]float32{0.9587,0.03191},[2]float32{0.9571,0.03297},[2]float32{0.9553,0.03415},[2]float32{0.9542,0.03487},[2]float32{0.9548,0.03448},[2]float32{0.9564,0.03343},[2]float32{0.9524,0.03607},[2]float32{0.9494,0.03797},[2]float32{0.9481,0.03882},[2]float32{0.9524,0.03602},[2]float32{0.9503,0.03741},[2]float32{0.9468,0.03967},[2]float32{0.944,0.04152},[2]float32{0.9439,0.04162},[2]float32{0.9459,0.04029},[2]float32{0.938,0.04546},[2]float32{0.9321,0.04928},[2]float32{0.9309,0.05011},[2]float32{0.9392,0.04468},[2]float32{0.9361,0.04669},[2]float32{0.9296,0.05095},[2]float32{0.9237,0.05479},[2]float32{0.9225,0.05555},[2]float32{0.9256,0.05352},[2]float32{0.9154,0.06023},[2]float32{0.9096,0.064},[2]float32{0.9084,0.06475},[2]float32{0.9165,0.05949},[2]float32{0.9135,0.06145},[2]float32{0.9073,0.06551},[2]float32{0.9016,0.06919},[2]float32{0.9004,0.07001},[2]float32{0.9032,0.06814},[2]float32{0.8925,0.07517},[2]float32{0.8861,0.07936},[2]float32{0.8855,0.07974},[2]float32{0.8942,0.07408},[2]float32{0.8914,0.07589},[2]float32{0.8849,0.08013},[2]float32{0.8787,0.08417},[2]float32{0.8716,0.2747},[2]float32{0.8829,0.2677},[2]float32{0.8768,0.08541},[2]float32{0.8794,0.08374},[2]float32{0.8536,0.1469},[2]float32{0.8659,0.1387},[2]float32{0.8658,0.138},[2]float32{0.8566,0.144},[2]float32{0.856,0.1381},[2]float32{0.8652,0.1321},[2]float32{0.8743,0.1261},[2]float32{0.875,0.132},[2]float32{0.878,0.1308},[2]float32{0.8783,0.1303},[2]float32{0.8782,0.1298},[2]float32{0.8776,0.124},[2]float32{0.8746,0.126},[2]float32{0.8752,0.1318},[2]float32{0.8786,0.1309},[2]float32{0.8658,0.1399},[2]float32{0.8656,0.1381},[2]float32{0.865,0.1322},[2]float32{0.8554,0.1385},[2]float32{0.8561,0.1443},[2]float32{0.853,0.1485},[2]float32{0.8533,0.1471},[2]float32{0.8532,0.1462},[2]float32{0.8526,0.1403},[2]float32{0.9617,0.0761},[2]float32{0.9621,0.07583},[2]float32{0.9621,0.07506},[2]float32{0.9624,0.07489},[2]float32{0.9618,0.06901},[2]float32{0.9615,0.06917},[2]float32{0.9625,0.06853},[2]float32{0.9631,0.07441},[2]float32{0.9652,0.07305},[2]float32{0.9646,0.0672},[2]float32{0.9663,0.06605},[2]float32{0.967,0.07187},[2]float32{0.9675,0.07342},[2]float32{0.9672,0.07175},[2]float32{0.9665,0.06594},[2]float32{0.9654,0.06663},[2]float32{0.9661,0.07245},[2]float32{0.9663,0.07362},[2]float32{0.9642,0.07421},[2]float32{0.9641,0.07376},[2]float32{0.9635,0.06791},[2]float32{0.9641,0.07564},[2]float32{0.9638,0.07396},[2]float32{0.9653,0.07301},[2]float32{0.9646,0.06719},[2]float32{0.9631,0.06815},[2]float32{0.9605,0.06987},[2]float32{0.9612,0.0757},[2]float32{0.9606,0.07732},[2]float32{0.9588,0.07774},[2]float32{0.9587,0.07729},[2]float32{0.9581,0.07143},[2]float32{0.957,0.07212},[2]float32{0.9576,0.078},[2]float32{0.9563,0.07961},[2]float32{0.959,0.07785},[2]float32{0.959,0.07709},[2]float32{0.9584,0.0712},[2]float32{0.961,0.06952},[2]float32{0.9616,0.0754},[2]float32{0.9641,0.07376},[2]float32{0.9635,0.06791},[2]float32{0.9552,0.08149},[2]float32{0.9549,0.0798},[2]float32{0.9589,0.07716},[2]float32{0.9582,0.07134},[2]float32{0.9542,0.07397},[2]float32{0.9491,0.07727},[2]float32{0.9498,0.08311},[2]float32{0.9481,0.08548},[2]float32{0.9469,0.08547},[2]float32{0.9469,0.08502},[2]float32{0.9463,0.07916},[2]float32{0.9463,0.07912},[2]float32{0.9469,0.08499},[2]float32{0.9446,0.08724},[2]float32{0.9507,0.08326},[2]float32{0.9507,0.08252},[2]float32{0.8828,0.268},[2]float32{0.9501,0.07664},[2]float32{0.9549,0.07349},[2]float32{0.9555,0.07936},[2]float32{0.9587,0.0773},[2]float32{0.958,0.07146},[2]float32{0.9377,0.09292},[2]float32{0.9374,0.09121},[2]float32{0.9454,0.08597},[2]float32{0.9447,0.08014},[2]float32{0.9367,0.08537},[2]float32{0.9278,0.09122},[2]float32{0.9284,0.09706},[2]float32{0.926,0.0999},[2]float32{0.9242,0.1003},[2]float32{0.9242,0.09986},[2]float32{0.9235,0.094},[2]float32{0.9249,0.09309},[2]float32{0.9255,0.09895},[2]float32{0.9225,0.1017},[2]float32{0.9336,0.0944},[2]float32{0.9336,0.09368},[2]float32{0.933,0.08782},[2]float32{0.942,0.08194},[2]float32{0.9426,0.0878},[2]float32{0.9469,0.08503},[2]float32{0.9462,0.07919},[2]float32{0.915,0.1078},[2]float32{0.9147,0.106},[2]float32{0.8937,0.2613},[2]float32{0.8937,0.2611},[2]float32{0.9044,0.2545},[2]float32{0.9042,0.2549},[2]float32{0.9144,0.2486},[2]float32{0.9144,0.2484},[2]float32{0.9248,0.242},[2]float32{0.9246,0.2423},[2]float32{0.935,0.2359},[2]float32{0.9352,0.2356},[2]float32{0.9455,0.2293},[2]float32{0.9443,0.2302},[2]float32{0.951,0.2261},[2]float32{0.9512,0.2258},[2]float32{0.9564,0.2226},[2]float32{0.9555,0.2233},[2]float32{0.9587,0.2214},[2]float32{0.9589,0.221},[2]float32{0.9615,0.2195},[2]float32{0.9606,0.2202},[2]float32{0.9616,0.2196},[2]float32{0.9618,0.2192},[2]float32{0.9676,0.22},[2]float32{0.967,0.2171},[2]float32{0.9658,0.2173},[2]float32{0.9665,0.2207},[2]float32{0.9644,0.222},[2]float32{0.9638,0.2191},[2]float32{0.9605,0.2206},[2]float32{0.961,0.2241},[2]float32{0.956,0.2272},[2]float32{0.9554,0.2242},[2]float32{0.9488,0.2278},[2]float32{0.9489,0.2315},[2]float32{0.9395,0.2373},[2]float32{0.939,0.2343},[2]float32{0.928,0.2405},[2]float32{0.9288,0.2439},[2]float32{0.9181,0.2504},[2]float32{0.9176,0.2474},[2]float32{0.9066,0.2536},[2]float32{0.9072,0.2572},[2]float32{0.8957,0.2642},[2]float32{0.8953,0.2611},[2]float32{0.8835,0.2678},[2]float32{0.8839,0.2714},[2]float32{0.8717,0.2789},[2]float32{0.8715,0.2757},[2]float32{0.9228,0.1008},[2]float32{0.8595,0.2833},[2]float32{0.8594,0.2865},[2]float32{0.9221,0.09494},[2]float32{0.8686,0.2887},[2]float32{0.8747,0.2891},[2]float32{0.9141,0.1002},[2]float32{0.862,0.2864},[2]float32{0.8844,0.2872},[2]float32{0.9052,0.1059},[2]float32{0.8874,0.2834},[2]float32{0.8981,0.2788},[2]float32{0.9059,0.1118},[2]float32{0.8993,0.2761},[2]float32{0.9119,0.2704},[2]float32{0.9106,0.2691},[2]float32{0.9032,0.1148},[2]float32{0.9224,0.2639},[2]float32{0.9172,0.2651},[2]float32{0.9275,0.2608},[2]float32{0.9201,0.2633},[2]float32{0.9294,0.2596},[2]float32{0.8597,0.2849},[2]float32{0.8591,0.2794},[2]float32{0.8592,0.2791},[2]float32{0.8598,0.2845},[2]float32{0.9021,0.1148},[2]float32{0.8575,0.265},[2]float32{0.8574,0.2652},[2]float32{0.8552,0.2466},[2]float32{0.8554,0.2465},[2]float32{0.902,0.1143},[2]float32{0.9014,0.1084},[2]float32{0.9031,0.1073},[2]float32{0.9037,0.1132},[2]float32{0.9008,0.1158},[2]float32{0.9115,0.1088},[2]float32{0.9115,0.1082},[2]float32{0.9108,0.1023},[2]float32{0.9193,0.09673},[2]float32{0.92,0.1026},[2]float32{0.9241,0.09988},[2]float32{0.9235,0.09403},[2]float32{0.8912,0.1233},[2]float32{0.891,0.1215},[2]float32{0.8999,0.1157},[2]float32{0.8993,0.1098},[2]float32{0.8903,0.1157},[2]float32{0.881,0.1218},[2]float32{0.8816,0.1277},[2]float32{0.8783,0.1298},[2]float32{0.8776,0.124},[2]float32{0.8803,0.1223},[2]float32{0.8809,0.1281},[2]float32{0.8894,0.1233},[2]float32{0.8893,0.1226},[2]float32{0.8887,0.1168},[2]float32{0.8975,0.111},[2]float32{0.8982,0.1168},[2]float32{0.902,0.1143},[2]float32{0.9014,0.1085},[2]float32{0.8526,0.1068},[2]float32{0.8617,0.1008},[2]float32{0.8612,0.09563},[2]float32{0.8521,0.1016},[2]float32{0.8702,0.08973},[2]float32{0.8709,0.09485},[2]float32{0.8741,0.09274},[2]float32{0.8734,0.08764},[2]float32{0.8704,0.08957},[2]float32{0.8711,0.09469},[2]float32{0.8616,0.1009},[2]float32{0.861,0.09575},[2]float32{0.8516,0.1019},[2]float32{0.8521,0.1071},[2]float32{0.8492,0.109},[2]float32{0.8488,0.1037},[2]float32{0.9585,0.03763},[2]float32{0.9582,0.03778},[2]float32{0.9578,0.03251},[2]float32{0.958,0.03239},[2]float32{0.9587,0.03192},[2]float32{0.9592,0.03716},[2]float32{0.9611,0.0359},[2]float32{0.9605,0.03073},[2]float32{0.9621,0.02971},[2]float32{0.9628,0.03482},[2]float32{0.9629,0.03473},[2]float32{0.9622,0.02964},[2]float32{0.9612,0.03028},[2]float32{0.9619,0.0354},[2]float32{0.96,0.0366},[2]float32{0.9595,0.03142},[2]float32{0.961,0.03597},[2]float32{0.9595,0.03694},[2]float32{0.9588,0.03185},[2]float32{0.9603,0.03087},[2]float32{0.9563,0.0335},[2]float32{0.9569,0.03863},[2]float32{0.9547,0.04012},[2]float32{0.9541,0.03492},[2]float32{0.9533,0.03548},[2]float32{0.9537,0.04074},[2]float32{0.9551,0.03981},[2]float32{0.9547,0.03454},[2]float32{0.9572,0.03292},[2]float32{0.9577,0.03816},[2]float32{0.96,0.03662},[2]float32{0.9594,0.03147},[2]float32{0.9546,0.04012},[2]float32{0.9506,0.04274},[2]float32{0.95,0.03763},[2]float32{0.9539,0.03504},[2]float32{0.9451,0.04082},[2]float32{0.9457,0.04599},[2]float32{0.9429,0.04783},[2]float32{0.9424,0.0426},[2]float32{0.9425,0.04248},[2]float32{0.943,0.04774},[2]float32{0.9468,0.04526},[2]float32{0.9463,0.04001},[2]float32{0.951,0.03695},[2]float32{0.9515,0.04215},[2]float32{0.9546,0.04018},[2]float32{0.9539,0.03505},[2]float32{0.9412,0.04889},[2]float32{0.9332,0.05411},[2]float32{0.9326,0.04897},[2]float32{0.9405,0.0438},[2]float32{0.9238,0.05471},[2]float32{0.9243,0.05992},[2]float32{0.9201,0.06267},[2]float32{0.9197,0.05742},[2]float32{0.9211,0.05648},[2]float32{0.9216,0.06174},[2]float32{0.9296,0.05648},[2]float32{0.9291,0.05126},[2]float32{0.938,0.04547},[2]float32{0.9386,0.05063},[2]float32{0.9427,0.04792},[2]float32{0.942,0.04281},[2]float32{0.9186,0.06368},[2]float32{0.9106,0.06889},[2]float32{0.91,0.06373},[2]float32{0.9179,0.05858},[2]float32{0.9013,0.06939},[2]float32{0.9018,0.07461},[2]float32{0.898,0.07709},[2]float32{0.8976,0.07184},[2]float32{0.8993,0.07074},[2]float32{0.8997,0.07599},[2]float32{0.9074,0.07098},[2]float32{0.9069,0.06578},[2]float32{0.9152,0.06031},[2]float32{0.9159,0.06545},[2]float32{0.92,0.06277},[2]float32{0.9193,0.05767},[2]float32{0.8958,0.07858},[2]float32{0.8869,0.0844},[2]float32{0.8863,0.07922},[2]float32{0.8951,0.07347},[2]float32{0.8771,0.08524},[2]float32{0.8776,0.09047},[2]float32{0.8743,0.09263},[2]float32{0.8738,0.08737},[2]float32{0.8764,0.08568},[2]float32{0.8769,0.09093},[2]float32{0.8853,0.08545},[2]float32{0.8847,0.08026},[2]float32{0.8934,0.07458},[2]float32{0.894,0.0797},[2]float32{0.8979,0.07722},[2]float32{0.8972,0.07212},[2]float32{0.8726,0.1104},[2]float32{0.8634,0.1163},[2]float32{0.8542,0.1223},[2]float32{0.8728,0.1102},[2]float32{0.8758,0.1082},[2]float32{0.8537,0.1227},[2]float32{0.8633,0.1165},[2]float32{0.8509,0.1246},[2]float32{0.9608,0.05274},[2]float32{0.9599,0.05337},[2]float32{0.9601,0.05322},[2]float32{0.9645,0.05032},[2]float32{0.9628,0.05144},[2]float32{0.9637,0.0509},[2]float32{0.9647,0.05021},[2]float32{0.9617,0.05214},[2]float32{0.9587,0.05413},[2]float32{0.9613,0.05242},[2]float32{0.9628,0.05146},[2]float32{0.9553,0.05632},[2]float32{0.9563,0.05567},[2]float32{0.9593,0.05373},[2]float32{0.9568,0.0554},[2]float32{0.9617,0.05215},[2]float32{0.9474,0.06152},[2]float32{0.9524,0.05824},[2]float32{0.9564,0.05561},[2]float32{0.9446,0.06333},[2]float32{0.9445,0.06339},[2]float32{0.9532,0.05771},[2]float32{0.9484,0.06085},[2]float32{0.9563,0.0557},[2]float32{0.926,0.07546},[2]float32{0.935,0.06962},[2]float32{0.943,0.06439},[2]float32{0.9232,0.07731},[2]float32{0.9218,0.07824},[2]float32{0.9403,0.06617},[2]float32{0.9313,0.07204},[2]float32{0.9445,0.06343},[2]float32{0.9035,0.09017},[2]float32{0.9123,0.08441},[2]float32{0.9203,0.07919},[2]float32{0.9014,0.09156},[2]float32{0.8997,0.09266},[2]float32{0.9176,0.08097},[2]float32{0.9091,0.08653},[2]float32{0.9217,0.07828},[2]float32{0.8792,0.106},[2]float32{0.8886,0.09993},[2]float32{0.8975,0.09409},[2]float32{0.8785,0.1065},[2]float32{0.8759,0.1082},[2]float32{0.8958,0.09522},[2]float32{0.887,0.101},[2]float32{0.8996,0.09272}},
                                                        },
                                                        Coord: &x3d.Coordinate{
                                                            CoreX3DNode: x3d.CoreX3DNode{
                                                                USE: stringPtr("Upper_teeth_COORD"),
                                                            },
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    },
                            },
                    },
                    Joints: []x3d.X3DNode{
                        &x3d.HAnimJoint{
                            CoreX3DNode: x3d.CoreX3DNode{
                                USE: stringPtr("hanim_root"),
                            },
                    },
                    &x3d.HAnimJoint{
                        CoreX3DNode: x3d.CoreX3DNode{
                            USE: stringPtr("hanim_skullbase"),
                        },
                    },
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Lower_teeth_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Tongue_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Upper_teeth_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Mid_upper_vermillion_lip_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Neck_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Occipital_scalp_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_ear_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Mid_forehead_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_forehead_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Glabella_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Chin_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_lower_vermillion_lip_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Center_lower_vermillion_lip_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_eyebrow_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_bulbar_conjunctiva_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_temple_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Mid_nasal_dorsum_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Nasal_tip_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_nostril_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_dorsum_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_nasolabial_cheek_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_cheek_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_upper_vermillion_lip_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_upper_cutaneous_lip_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Philtrum_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_forehead_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_eyebrow_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_upper_eyelid_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_lower_eyelid_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Left_pupil_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_ear_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_cheek_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_dorsum_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_bulbar_conjunctiva_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_lower_eyelid_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_nasolabial_cheek_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_nostril_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_pupil_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_temple_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_upper_cutaneous_lip_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_upper_eyelid_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("Right_upper_vermillion_lip_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("AnimationAdapter_JinSquint"),
                    FromField: stringPtr("value_changed"),
                    ToNode: stringPtr("__2_MorphInterpolator_JinSquint"),
                    ToField: stringPtr("set_weight"),
                },
                &x3d.ROUTE{
                    FromNode: stringPtr("JinSquint_Clock"),
                    FromField: stringPtr("fraction_changed"),
                    ToNode: stringPtr("AnimationAdapter_JinSquint"),
                    ToField: stringPtr("set_fraction"),
                },
                &x3d.EXPORT{
                    LocalDEF: stringPtr("JinSquint_Clock"),
                },
            },
        },
    }


	fmt.Println("\n--- Validating the generated scene (internal logic) ---")
	err := sceneRoot.Scene.Validate()
	if err != nil {
		log.Fatalf("Scene validation failed: %v", err)
	}
	fmt.Println("✅ Internal scene validation successful!")
	fmt.Println("\n--- Serializing scene to XML ---")
	output, err := xml.MarshalIndent(sceneRoot, "", "  ")

	if err != nil {
		log.Fatalf("XML Marshaling failed: %v", err)
	}
	/*
	fmt.Println("\n--- Validating XML against X3D 4.0 Schema (using libxml2) ---")
	err = validateXMLWithSchema(output, schemaFilename)
	if err != nil {
		fmt.Printf("--- Invalid Generated XML ---\n%s\n---------------------------\n", string(output))
		log.Fatalf("Schema validation failed for generated XML: %v", err)
	}
	fmt.Println("✅ XML is valid against the X3D 4.0 schema!")
	*/
	filename := "../data/JinSquint.new.go.x3d"
	file, err := os.OpenFile(filename, os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		fmt.Printf("Error opening file: %v\n", err)
		return
	}
	defer file.Close() // Ensure the file is closed when the function exits

	// Write the string content to the file
	header := "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE X3D PUBLIC \"ISO//Web3D//DTD X3D 4.0//EN\" \"https://www.web3d.org/specifications/x3d-4.0.dtd\">\n"
	_, err = file.WriteString(header)
	if err != nil {
		fmt.Printf("Error writing header to file: %v\n", err)
		return
	}

	_, err = file.Write(output)
	if err != nil {
		fmt.Printf("Error writing bytes to file: %v\n", err)
		return
	}

	fmt.Printf("\n✅ Scene successfully written to %s\n", filename)
	fmt.Printf("   You can view the generated XML below:\n\n%s\n", string(output))
}