{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "4.0",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "MyBounce.x3d"
        },
        {
          "@name": "creator",
          "@content": "John Carlson"
        },
        {
          "@name": "description",
          "@content": "3 prismatic spheres"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/src/main/data/SFVec3f.x3d"
        },
        {
          "@name": "converter",
          "@content": "x3d-tidy V1.0.56, https://www.npmjs.com/package/x3d-tidy"
        },
        {
          "@name": "converted",
          "@content": "Sat, 02 Sep 2023 21:20:46 GMT"
        }
      ],
      "component": [
        {
          "@name": "Scripting",
          "@level": 1
        }
      ]
    },
    "Scene": {
      "-children": [
        { "NavigationInfo":
          {
          }
        },
        { "Transform":
          {
            "@DEF": "transform",
            "-children": [
              { "Shape":
                {
                  "-appearance": { "Appearance":
                    {
                      "-material": { "Material":
                        {
                          "@diffuseColor": [ 0.7, 0.7, 0.7 ],
                          "@specularColor": [ 0.5, 0.5, 0.5 ]
                        }
                      }
                    }
                  },
                  "-geometry": { "Sphere":
                    {
                    }
                  }
                }
              }
            ]
          }
        },
        { "Script":
          {
            "@DEF": "Bounce2",
            "field": [
              {
                "@accessType": "inputOnly",
                "@type": "SFVec3f",
                "@name": "set_translation"
              },
              {
                "@accessType": "outputOnly",
                "@type": "SFVec3f",
                "@name": "translation_changed"
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFVec3f",
                "@name": "translation"
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFVec3f",
                "@name": "velocity",
                "@value": [ 0.2848157, -0.1888265, 0.3982354 ]
              },
              {
                "@accessType": "inputOnly",
                "@type": "SFTime",
                "@name": "set_fraction"
              }
            ],
            "#sourceText": [
              "ecmascript:\r",
              "\t\t\tfunction newBubble() {\r",
              "\t\t\t    translation = new SFVec3f(0, 0, 0);\r",
              "\t\t\t    velocity = new SFVec3f(\r",
              "\t\t\t    \tMath.random() - 0.5,\r",
              "\t\t\t\tMath.random() - 0.5,\r",
              "\t\t\t\tMath.random() - 0.5);\r",
              "\t\t\t}\r",
              "\t\t\tfunction set_fraction() {\r",
              "\t\t\t    translation = new SFVec3f(\r",
              "\t\t\t    \ttranslation.x + velocity.x,\r",
              "\t\t\t\ttranslation.y + velocity.y,\r",
              "\t\t\t\ttranslation.z + velocity.z);\r",
              "\t\t\t\tif (Math.abs(translation.x) > 10) {\r",
              "\t\t\t\t\tnewBubble();\r",
              "\t\t\t\t} else if (Math.abs(translation.y) > 10) {\r",
              "\t\t\t\t\tnewBubble();\r",
              "\t\t\t\t} else if (Math.abs(translation.z) > 10) {\r",
              "\t\t\t\t\tnewBubble();\r",
              "\t\t\t\t} else {\r",
              "\t\t\t\t\tvelocity = new SFVec3f(\r",
              "\t\t\t\t\t\tvelocity.x + Math.random() * 0.2 - 0.1,\r",
              "\t\t\t\t\t\tvelocity.y + Math.random() * 0.2 - 0.1,\r",
              "\t\t\t\t\t\tvelocity.z + Math.random() * 0.2 - 0.1\r",
              "\t\t\t\t\t);\r",
              "\t\t\t\t}\r",
              "\t\t\t}\r",
              "\r",
              "\t\t\tfunction initialize() {\r",
              "\t\t\t     newBubble();\r",
              "\t\t\t}\r",
              "\r",
              ""
            ]
          }
        },
        { "TimeSensor":
          {
            "@DEF": "TourTime",
            "@cycleInterval": 0.15,
            "@loop": true
          }
        },
        { "ROUTE":
          {
            "@fromNode": "TourTime",
            "@fromField": "cycleTime",
            "@toNode": "Bounce2",
            "@toField": "set_fraction"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Bounce2",
            "@fromField": "translation_changed",
            "@toNode": "transform",
            "@toField": "translation"
          }
        }
      ]
    }
  }
}