{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "4.0",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "flowers7.x3d"
        },
        {
          "@name": "creator",
          "@content": "John Carlson"
        },
        {
          "@name": "generator",
          "@content": "manual"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/src/main/data/flowers7.x3d"
        },
        {
          "@name": "description",
          "@content": "a flower"
        },
        {
          "@name": "converter",
          "@content": "x3d-tidy V1.0.56, https://www.npmjs.com/package/x3d-tidy"
        },
        {
          "@name": "converted",
          "@content": "Sat, 02 Sep 2023 21:19:04 GMT"
        }
      ],
      "component": [
        {
          "@name": "Scripting",
          "@level": 1
        },
        {
          "@name": "EnvironmentalEffects",
          "@level": 3
        },
        {
          "@name": "Shaders",
          "@level": 1
        },
        {
          "@name": "CubeMapTexturing",
          "@level": 1
        },
        {
          "@name": "Texturing",
          "@level": 1
        },
        {
          "@name": "Rendering",
          "@level": 1
        },
        {
          "@name": "Shape",
          "@level": 4
        },
        {
          "@name": "Grouping",
          "@level": 3
        },
        {
          "@name": "Core",
          "@level": 1
        }
      ]
    },
    "Scene": {
      "-children": [
        { "NavigationInfo":
          {
          }
        },
        { "Background":
          {
            "@DEF": "background",
            "@frontUrl": [
              "../resources/images/all_probes/beach_cross/beach_front.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_front.png"
            ],
            "@backUrl": [
              "../resources/images/all_probes/beach_cross/beach_back.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_back.png"
            ],
            "@leftUrl": [
              "../resources/images/all_probes/beach_cross/beach_left.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_left.png"
            ],
            "@rightUrl": [
              "../resources/images/all_probes/beach_cross/beach_right.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_right.png"
            ],
            "@topUrl": [
              "../resources/images/all_probes/beach_cross/beach_top.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_top.png"
            ],
            "@bottomUrl": [
              "../resources/images/all_probes/beach_cross/beach_bottom.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_bottom.png"
            ]
          }
        },
        { "Viewpoint":
          {
            "@description": "Transparent rose",
            "@position": [ 0, 0, 40 ]
          }
        },
        { "Transform":
          {
            "-children": [
              { "Shape":
                {
                  "-appearance": { "Appearance":
                    {
                      "-material": { "Material":
                        {
                          "@diffuseColor": [ 0.7, 0.7, 0.7 ],
                          "@specularColor": [ 0.5, 0.5, 0.5 ]
                        }
                      },
                      "-texture": { "ComposedCubeMapTexture":
                        {
                          "@DEF": "texture"
                        }
                      },
                      "-shaders": [
                        { "ComposedShader":
                          {
                            "@DEF": "x3dom",
                            "@language": "GLSL",
                            "-parts": [
                              { "ShaderPart":
                                {
                                  "@url": [
                                    "../shaders/x3dom_flowers_chromatic.vs",
                                    "https://coderextreme.net/X3DJSONLD/src/main/shaders/x3dom_flowers_chromatic.vs"
                                  ]
                                }
                              },
                              { "ShaderPart":
                                {
                                  "@type": "FRAGMENT",
                                  "@url": [
                                    "../shaders/common.fs",
                                    "https://coderextreme.net/X3DJSONLD/src/main/shaders/common.fs"
                                  ]
                                }
                              }
                            ],
                            "field": [
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFInt32",
                                "@name": "cube"
                              },
                              {
                                "@accessType": "initializeOnly",
                                "@type": "SFVec3f",
                                "@name": "chromaticDispertion",
                                "@value": [ 0.98, 1, 1.033 ]
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "bias",
                                "@value": 0.5
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "scale",
                                "@value": 0.5
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "power",
                                "@value": 2
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "a",
                                "@value": 10
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "b",
                                "@value": 1
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "c",
                                "@value": 20
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "d",
                                "@value": 20
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "tdelta"
                              },
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFFloat",
                                "@name": "pdelta"
                              }
                            ]
                          }
                        },
                        { "ComposedShader":
                          {
                            "@DEF": "x_ite",
                            "@language": "GLSL",
                            "-parts": [
                              { "ShaderPart":
                                {
                                  "@url": [
                                    "../shaders/x_ite_flowers_chromatic.vs",
                                    "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite_flowers_chromatic.vs"
                                  ]
                                }
                              },
                              { "ShaderPart":
                                {
                                  "@type": "FRAGMENT",
                                  "@url": [
                                    "../shaders/x_ite.fs",
                                    "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.fs"
                                  ]
                                }
                              }
                            ],
                            "field": [
                              {
                                "@accessType": "inputOutput",
                                "@type": "SFNode",
                                "@name": "cube",
                                "-children": [
                                  { "ComposedCubeMapTexture":
                                    {
                                      "@USE": "texture"
                                    }
                                  }
                                ]
                              },
                              {
                                "@accessType": "initializeOnly",
                                "@type": "SFVec3f",
                                "@name": "chromaticDispertion",
                                "@value": [ 0.98, 1, 1.033 ]
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "bias"
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "scale"
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "power"
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "a"
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "b"
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "c"
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "d"
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "tdelta"
                              },
                              {
                                "@accessType": "inputOnly",
                                "@type": "SFFloat",
                                "@name": "pdelta"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "-geometry": { "Sphere":
                    {
                    }
                  }
                }
              }
            ]
          }
        },
        { "Script":
          {
            "@DEF": "UrlSelector",
            "@directOutput": true,
            "field": [
              {
                "@accessType": "initializeOnly",
                "@type": "MFString",
                "@name": "frontUrls",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_front.png",
                  "../resources/images/all_probes/building_cross/building_front.png",
                  "../resources/images/all_probes/campus_cross/campus_front.png",
                  "../resources/images/all_probes/galileo_cross/galileo_front.png",
                  "../resources/images/all_probes/grace_cross/grace_front.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_front.png",
                  "../resources/images/all_probes/rnl_cross/rnl_front.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_front.png"
                ]
              },
              {
                "@accessType": "initializeOnly",
                "@type": "MFString",
                "@name": "backUrls",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_back.png",
                  "../resources/images/all_probes/building_cross/building_back.png",
                  "../resources/images/all_probes/campus_cross/campus_back.png",
                  "../resources/images/all_probes/galileo_cross/galileo_back.png",
                  "../resources/images/all_probes/grace_cross/grace_back.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_back.png",
                  "../resources/images/all_probes/rnl_cross/rnl_back.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_back.png"
                ]
              },
              {
                "@accessType": "initializeOnly",
                "@type": "MFString",
                "@name": "leftUrls",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_left.png",
                  "../resources/images/all_probes/building_cross/building_left.png",
                  "../resources/images/all_probes/campus_cross/campus_left.png",
                  "../resources/images/all_probes/galileo_cross/galileo_left.png",
                  "../resources/images/all_probes/grace_cross/grace_left.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_left.png",
                  "../resources/images/all_probes/rnl_cross/rnl_left.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_left.png"
                ]
              },
              {
                "@accessType": "initializeOnly",
                "@type": "MFString",
                "@name": "rightUrls",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_right.png",
                  "../resources/images/all_probes/building_cross/building_right.png",
                  "../resources/images/all_probes/campus_cross/campus_right.png",
                  "../resources/images/all_probes/galileo_cross/galileo_right.png",
                  "../resources/images/all_probes/grace_cross/grace_right.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_right.png",
                  "../resources/images/all_probes/rnl_cross/rnl_right.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_right.png"
                ]
              },
              {
                "@accessType": "initializeOnly",
                "@type": "MFString",
                "@name": "topUrls",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_top.png",
                  "../resources/images/all_probes/building_cross/building_top.png",
                  "../resources/images/all_probes/campus_cross/campus_top.png",
                  "../resources/images/all_probes/galileo_cross/galileo_top.png",
                  "../resources/images/all_probes/grace_cross/grace_top.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_top.png",
                  "../resources/images/all_probes/rnl_cross/rnl_top.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_top.png"
                ]
              },
              {
                "@accessType": "initializeOnly",
                "@type": "MFString",
                "@name": "bottomUrls",
                "@value": [
                  "../resources/images/all_probes/beach_cross/beach_bottom.png",
                  "../resources/images/all_probes/building_cross/building_bottom.png",
                  "../resources/images/all_probes/campus_cross/campus_bottom.png",
                  "../resources/images/all_probes/galileo_cross/galileo_bottom.png",
                  "../resources/images/all_probes/grace_cross/grace_bottom.png",
                  "../resources/images/all_probes/kitchen_cross/kitchen_bottom.png",
                  "../resources/images/all_probes/rnl_cross/rnl_bottom.png",
                  "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                  "../resources/images/all_probes/uffizi_cross/uffizi_bottom.png"
                ]
              },
              {
                "@accessType": "inputOutput",
                "@type": "MFString",
                "@name": "front"
              },
              {
                "@accessType": "inputOutput",
                "@type": "MFString",
                "@name": "back"
              },
              {
                "@accessType": "inputOutput",
                "@type": "MFString",
                "@name": "left"
              },
              {
                "@accessType": "inputOutput",
                "@type": "MFString",
                "@name": "right"
              },
              {
                "@accessType": "inputOutput",
                "@type": "MFString",
                "@name": "top"
              },
              {
                "@accessType": "inputOutput",
                "@type": "MFString",
                "@name": "bottom"
              },
              {
                "@accessType": "inputOnly",
                "@type": "SFFloat",
                "@name": "set_fraction"
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFInt32",
                "@name": "old",
                "@value": -1
              }
            ],
            "#sourceText": [
              "\r",
              "ecmascript:\r",
              "        function set_fraction( f, tm ) {\r",
              "            var side = Math.floor(f*frontUrls.length);\r",
              "            if (side > frontUrls.length-1) {\r",
              "                side = 0;\r",
              "            }\r",
              "            if (side != old) {\r",
              "                    old = side;\r",
              "                    front[0] = frontUrls[side];\r",
              "                    back[0] = backUrls[side];\r",
              "                    left[0] = leftUrls[side];\r",
              "                    right[0] = rightUrls[side];\r",
              "                    top[0] = topUrls[side];\r",
              "                    bottom[0] = bottomUrls[side];\r",
              "            }\r",
              "        }\r",
              ""
            ]
          }
        },
        { "Script":
          {
            "@DEF": "Animate",
            "@directOutput": true,
            "field": [
              {
                "@accessType": "inputOnly",
                "@type": "SFFloat",
                "@name": "set_fraction"
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "a",
                "@value": 10
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "b",
                "@value": 1
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "c",
                "@value": 20
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "d",
                "@value": 20
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "tdelta"
              },
              {
                "@accessType": "inputOutput",
                "@type": "SFFloat",
                "@name": "pdelta"
              }
            ],
            "#sourceText": [
              "\r",
              "ecmascript:\r",
              "\r",
              "function set_fraction() {\r",
              "\tvar choice = Math.floor(Math.random() * 4);\r",
              "\tswitch (choice) {\r",
              "\tcase 0:\r",
              "\t\ta = a + Math.floor(Math.random() * 2) * 2 - 1;\r",
              "\t\tbreak;\r",
              "\tcase 1:\r",
              "\t\tb = b + Math.floor(Math.random() * 2) * 2 - 1;\r",
              "\t\tbreak;\r",
              "\tcase 2:\r",
              "\t\tc = c + Math.floor(Math.random() * 2) * 2 - 1;\r",
              "\t\tbreak;\r",
              "\tcase 3:\r",
              "\t\td = d + Math.floor(Math.random() * 2) * 2 - 1;\r",
              "\t\tbreak;\r",
              "\t}\r",
              "\ttdelta = tdelta + 0.5;\r",
              "\tpdelta = pdelta + 0.5;\r",
              "\tif (a < 1) {\r",
              "\t\ta = 10;\r",
              "\t}\r",
              "\tif (b < 1) {\r",
              "\t\tb = 10;\r",
              "\t}\r",
              "\tif (c < 1) {\r",
              "\t\tc = 4;\r",
              "\t}\r",
              "\tif (c > 20) {\r",
              "\t\tc = 4;\r",
              "\t}\r",
              "\tif (d < 1) {\r",
              "\t\td = 4;\r",
              "\t}\r",
              "\tif (d > 20) {\r",
              "\t\td = 4;\r",
              "\t}\r",
              "}\r",
              ""
            ]
          }
        },
        { "TimeSensor":
          {
            "@DEF": "TourTime",
            "@cycleInterval": 5,
            "@loop": true
          }
        },
        { "ROUTE":
          {
            "@fromNode": "TourTime",
            "@fromField": "fraction_changed",
            "@toNode": "Animate",
            "@toField": "set_fraction"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "a",
            "@toNode": "x_ite",
            "@toField": "a"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "b",
            "@toNode": "x_ite",
            "@toField": "b"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "c",
            "@toNode": "x_ite",
            "@toField": "c"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "d",
            "@toNode": "x_ite",
            "@toField": "d"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "pdelta",
            "@toNode": "x_ite",
            "@toField": "pdelta"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "tdelta",
            "@toNode": "x_ite",
            "@toField": "tdelta"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "a",
            "@toNode": "x3dom",
            "@toField": "a"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "b",
            "@toNode": "x3dom",
            "@toField": "b"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "c",
            "@toNode": "x3dom",
            "@toField": "c"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "d",
            "@toNode": "x3dom",
            "@toField": "d"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "pdelta",
            "@toNode": "x3dom",
            "@toField": "pdelta"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "Animate",
            "@fromField": "tdelta",
            "@toNode": "x3dom",
            "@toField": "tdelta"
          }
        }
      ]
    }
  }
}