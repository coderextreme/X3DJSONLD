<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "https://www.web3d.org/specifications/x3d-4.0.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Immersive" version="4.0" xsd:noNamespaceSchemaLocation="https://www.web3d.org/specifications/x3d-4.0.xsd">
    <head>
    	      <component level='1' name='Scripting'/>
	      <component name='EnvironmentalEffects' level='3'></component>
	      <component name='Shaders' level='1'></component>
	      <component name='CubeMapTexturing' level='1'></component>
	      <component name='Texturing' level='1'></component>
	      <component name='Rendering' level='1'></component>
	      <component name='Shape' level='4'></component>
	      <component name='Grouping' level='3'></component>
	      <component name='Core' level='1'></component>
        <meta name="title" content="flowerproto.x3d"></meta>
        <meta name="creator" content="John Carlson"></meta>
        <meta name="description" content="A flower proto with configurable shaders"></meta>
        <meta name="generator" content="X3D-Edit, https://savage.nps.edu/X3D-Edit"></meta>
	<meta name="identifier" content="https://coderextreme.net/X3DJSONLD/src/main/data/flowerproto.x3d"></meta>
    </head>
    <Scene>
        <ProtoDeclare name="FlowerProto">
	    <ProtoInterface>
		<field accessType='inputOutput' name='vertex' type='MFString' value='"../shaders/gl_flowers_chromatic.vs"'/>
		<field accessType='inputOutput' name='fragment' type='MFString' value='"../shaders/pc_flowers.fs"'/>
	    </ProtoInterface>
            <ProtoBody>
                <Transform DEF="transform" translation="0 0 0">
                    <Shape>
                        <Appearance>
                            <Material diffuseColor=".7 .7 .7" specularColor=".5 .5 .5"/>
                            <ComposedCubeMapTexture DEF="texture">
				    <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_back.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"' containerField="backTexture"/>
				    <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_bottom.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"' containerField="bottomTexture"/>
				    <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_front.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"' containerField="frontTexture"/>
				    <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_left.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"' containerField="leftTexture"/>
				    <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_right.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"' containerField="rightTexture"/>
				    <ImageTexture url='"../resources/images/all_probes/stpeters_cross/stpeters_top.png" "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"' containerField="topTexture"/>
                            </ComposedCubeMapTexture>

                            <ComposedShader DEF="shader" language="GLSL">
                  <field name='cube' type='SFInt32' accessType='inputOutput' value='0'></field>
		  <!-- 
		       <field name='cube' type='SFNode' accessType="inputOutput">
			  <ComposedCubeMapTexture USE="texture"/>
		  </field>
		  -->

                  <field name='chromaticDispertion' accessType='initializeOnly' type='SFVec3f' value='0.98 1.0 1.033'></field>
                  <field name='bias' type='SFFloat' accessType='inputOutput' value='0.5'></field>
                  <field name='scale' type='SFFloat' accessType='inputOutput' value='0.5'></field>
                  <field name='power' type='SFFloat' accessType='inputOutput' value='2'></field>
                  <field name='a' type='SFFloat' accessType='inputOutput' value='10'></field>
                  <field name='b' type='SFFloat' accessType='inputOutput' value='1'></field>
                  <field name='c' type='SFFloat' accessType='inputOutput' value='20'></field>
                  <field name='d' type='SFFloat' accessType='inputOutput' value='20'></field>
                  <field name='tdelta' type='SFFloat' accessType='inputOutput' value='0'></field>
                  <field name='pdelta' type='SFFloat' accessType='inputOutput' value='0'></field>
                                <ShaderPart type="VERTEX">
					<IS>
					<connect nodeField="url" protoField="vertex"/>
					</IS>
                                </ShaderPart>
                                <ShaderPart type='FRAGMENT'>
					<IS>
					<connect nodeField="url" protoField="fragment"/>
					</IS>
                                </ShaderPart>
                            </ComposedShader>
		    </Appearance>
		    <Sphere/>
                </Shape>
                <Script DEF="Animate">
                  <field name="translation" accessType="inputOutput" type="SFVec3f" value="0 0 0"></field>
                  <field name="velocity" accessType="inputOutput" type="SFVec3f" value="0 0 0"></field>
                  <field name="set_fraction" accessType="inputOnly" type="SFFloat"></field>
		  <field name='a' type='SFFloat' accessType='inputOutput' value='0.5'></field>
		  <field name='b' type='SFFloat' accessType='inputOutput' value='0.5'></field>
		  <field name='c' type='SFFloat' accessType='inputOutput' value='3'></field>
		  <field name='d' type='SFFloat' accessType='inputOutput' value='3'></field>
		  <field name='tdelta' type='SFFloat' accessType='inputOutput' value='0.5'></field>
		  <field name='pdelta' type='SFFloat' accessType='inputOutput' value='0.5'></field>
<![CDATA[
  
ecmascript:
			function initialize() {
			    translation = new SFVec3f(0, 0, 0);
			    velocity = new SFVec3f(
			    	Math.random() - 0.5,
				Math.random() - 0.5,
				Math.random() - 0.5);
			}
			function set_fraction() {
			    translation = new SFVec3f(
			    	translation.x + velocity.x,
				translation.y + velocity.y,
				translation.z + velocity.z);
			    for (var j = 0; j <= 2; j++) {
				    if (Math.abs(translation.x) > 10) {
					initialize();
				    } else if (Math.abs(translation.y) > 10) {
					initialize();
				    } else if (Math.abs(translation.z) > 10) {
					initialize();
				    } else {
					velocity.x += Math.random() * 0.2 - 0.1;
					velocity.y += Math.random() * 0.2 - 0.1;
					velocity.z += Math.random() * 0.2 - 0.1;
				    }
			    }
			    animate_flowers();
			}

			function animate_flowers(fraction, eventTime) {
				var choice = Math.floor(Math.random() * 4);
				switch (choice) {
				case 0:
					a += Math.random() * 0.2 - 0.1;
					break;
				case 1:
					b += Math.random() * 0.2 - 0.1;
					break;
				case 2:
					c += Math.random() * 2 - 1;
					break;
				case 3:
					d += Math.random() * 2 - 1;
					break;
				}
				tdelta += 0.5;
				pdelta += 0.5;
				if (a > 1) {
					a =  0.5;
				}
				if (b > 1) {
					b =  0.5;
				}
				if (c < 1) {
					c =  4;
				}
				if (d < 1) {
					d =  4;
				}
				if (c > 10) {
					c = 4;
				}
				if (d > 10) {
					d = 4;
				}
			}

]]>
            </Script>
            <TimeSensor DEF='TourTime' cycleInterval='5' loop='true'></TimeSensor>
            <ROUTE fromNode="TourTime" fromField="fraction_changed" toNode="Animate" toField="set_fraction"></ROUTE>
            <ROUTE fromNode="Animate" fromField="translation_changed" toNode="transform" toField="set_translation"></ROUTE>
            <ROUTE fromNode="Animate" fromField="a" toNode="shader" toField="a"></ROUTE>
            <ROUTE fromNode="Animate" fromField="b" toNode="shader" toField="b"></ROUTE>
            <ROUTE fromNode="Animate" fromField="c" toNode="shader" toField="c"></ROUTE>
            <ROUTE fromNode="Animate" fromField="d" toNode="shader" toField="d"></ROUTE>
            <ROUTE fromNode="Animate" fromField="tdelta" toNode="shader" toField="tdelta"></ROUTE>
            <ROUTE fromNode="Animate" fromField="pdelta" toNode="shader" toField="pdelta"></ROUTE>
                </Transform>
            </ProtoBody>
        </ProtoDeclare>        
    </Scene>
</X3D>
