{ "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "4.0",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema": "http://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "bubs3.x3d"
        },
        {
          "@name": "creator",
          "@content": "John Carlson"
        },
        {
          "@name": "description",
          "@content": "Tour around a prismatic sphere"
        },
        {
          "@name": "generator",
          "@content": "X3D-Edit, https://savage.nps.edu/X3D-Edit"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/src/main/data/bubs.x3d"
        },
        {
          "@name": "converter",
          "@content": "x3d-tidy V1.0.56, https://www.npmjs.com/package/x3d-tidy"
        },
        {
          "@name": "converted",
          "@content": "Sat, 02 Sep 2023 21:18:25 GMT"
        }
      ]
    },
    "Scene": {
      "-children": [
        { "NavigationInfo":
          {
            "@type": [
              "EXAMINE"
            ]
          }
        },
        { "Viewpoint":
          {
            "@description": "Bubbles in action",
            "@position": [ 0, 0, 4 ]
          }
        },
        { "Background":
          {
            "@frontUrl": [
              "../resources/images/FR.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/FR.png"
            ],
            "@backUrl": [
              "../resources/images/BK.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/BK.png"
            ],
            "@leftUrl": [
              "../resources/images/LF.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/LF.png"
            ],
            "@rightUrl": [
              "../resources/images/RT.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/RT.png"
            ],
            "@topUrl": [
              "../resources/images/TP.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/TP.png"
            ],
            "@bottomUrl": [
              "../resources/images/BT.png",
              "https://coderextreme.net/X3DJSONLD/src/main/resources/images/BT.png"
            ]
          }
        },
        { "Transform":
          {
            "@DEF": "DECLBubble_bubbleA",
            "-children": [
              { "Shape":
                {
                  "-appearance": { "Appearance":
                    {
                      "-material": { "Material":
                        {
                          "@diffuseColor": [ 1, 0, 0 ],
                          "@transparency": 0.2
                        }
                      }
                    }
                  },
                  "-geometry": { "Sphere":
                    {
                      "@radius": 0.25
                    }
                  }
                }
              },
              { "Script":
                {
                  "@DEF": "DECLBubble_bubbleA_bounce",
                  "field": [
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "scale",
                      "@value": [ 1, 1, 1 ]
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "translation"
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "velocity",
                      "@value": [ -0.09276367, -0.08003855, 0.09066945 ]
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "scalvel",
                      "@value": [ 0.3554221, 0.3043476, 0.3786105 ]
                    },
                    {
                      "@accessType": "inputOnly",
                      "@type": "SFFloat",
                      "@name": "set_fraction"
                    }
                  ],
                  "#sourceText": [
                    " \r",
                    "ecmascript:\r",
                    "function initialize() {\r",
                    "    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);\r",
                    "\r",
                    "    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);\r",
                    "}\r",
                    "\r",
                    "function set_fraction(value) {\r",
                    "    translation = new SFVec3f(\ttranslation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z);\r",
                    "    scale = new SFVec3f(scale.x + scalvel.x, scale.y + scalvel.y, scale.z + scalvel.z);\r",
                    "    // if you get to far away or too big, explode\r",
                    "    if ( Math.abs(translation.x) > 256) {\r",
                    "\ttranslation.x = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if ( Math.abs(translation.y) > 256) {\r",
                    "\ttranslation.y = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if ( Math.abs(translation.z) > 256) {\r",
                    "\ttranslation.z = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.x) > 20) {\r",
                    "\tscale.x = scale.x/20;\r",
                    "\ttranslation.x = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.y) > 20) {\r",
                    "\tscale.y = scale.y/20;\r",
                    "\ttranslation.y = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.z) > 20) {\r",
                    "\tscale.z = scale.z/20;\r",
                    "\ttranslation.z = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\t\t\t\r",
                    " "
                  ]
                }
              },
              { "TimeSensor":
                {
                  "@DEF": "DECLBubble_bubbleA_bubbleClock",
                  "@cycleInterval": 10,
                  "@loop": true
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@DEF": "DECLBubble_bubbleB",
            "-children": [
              { "Shape":
                {
                  "-appearance": { "Appearance":
                    {
                      "-material": { "Material":
                        {
                          "@diffuseColor": [ 1, 0, 0 ],
                          "@transparency": 0.2
                        }
                      }
                    }
                  },
                  "-geometry": { "Sphere":
                    {
                      "@radius": 0.25
                    }
                  }
                }
              },
              { "Script":
                {
                  "@DEF": "DECLBubble_bubbleB_bounce",
                  "field": [
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "scale",
                      "@value": [ 1, 1, 1 ]
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "translation"
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "velocity",
                      "@value": [ -0.01413225, -0.05837238, -0.09680488 ]
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "scalvel",
                      "@value": [ 0.0410215, 0.05197569, 0.2528985 ]
                    },
                    {
                      "@accessType": "inputOnly",
                      "@type": "SFFloat",
                      "@name": "set_fraction"
                    }
                  ],
                  "#sourceText": [
                    " \r",
                    "ecmascript:\r",
                    "function initialize() {\r",
                    "    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);\r",
                    "\r",
                    "    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);\r",
                    "}\r",
                    "\r",
                    "function set_fraction(value) {\r",
                    "    translation = new SFVec3f(\ttranslation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z);\r",
                    "    scale = new SFVec3f(scale.x + scalvel.x, scale.y + scalvel.y, scale.z + scalvel.z);\r",
                    "    // if you get to far away or too big, explode\r",
                    "    if ( Math.abs(translation.x) > 256) {\r",
                    "\ttranslation.x = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if ( Math.abs(translation.y) > 256) {\r",
                    "\ttranslation.y = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if ( Math.abs(translation.z) > 256) {\r",
                    "\ttranslation.z = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.x) > 20) {\r",
                    "\tscale.x = scale.x/20;\r",
                    "\ttranslation.x = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.y) > 20) {\r",
                    "\tscale.y = scale.y/20;\r",
                    "\ttranslation.y = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.z) > 20) {\r",
                    "\tscale.z = scale.z/20;\r",
                    "\ttranslation.z = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\t\t\t\r",
                    " "
                  ]
                }
              },
              { "TimeSensor":
                {
                  "@DEF": "DECLBubble_bubbleB_bubbleClock",
                  "@cycleInterval": 10,
                  "@loop": true
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@DEF": "DECLBubble_bubbleC",
            "-children": [
              { "Shape":
                {
                  "-appearance": { "Appearance":
                    {
                      "-material": { "Material":
                        {
                          "@diffuseColor": [ 1, 0, 0 ],
                          "@transparency": 0.2
                        }
                      }
                    }
                  },
                  "-geometry": { "Sphere":
                    {
                      "@radius": 0.25
                    }
                  }
                }
              },
              { "Script":
                {
                  "@DEF": "DECLBubble_bubbleC_bounce",
                  "field": [
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "scale",
                      "@value": [ 1, 1, 1 ]
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "translation"
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "velocity",
                      "@value": [ -0.04534206, 0.01653154, -0.07713995 ]
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "scalvel",
                      "@value": [ 0.2738829, 0.3711395, 0.1916482 ]
                    },
                    {
                      "@accessType": "inputOnly",
                      "@type": "SFFloat",
                      "@name": "set_fraction"
                    }
                  ],
                  "#sourceText": [
                    " \r",
                    "ecmascript:\r",
                    "function initialize() {\r",
                    "    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);\r",
                    "\r",
                    "    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);\r",
                    "}\r",
                    "\r",
                    "function set_fraction(value) {\r",
                    "    translation = new SFVec3f(\ttranslation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z);\r",
                    "    scale = new SFVec3f(scale.x + scalvel.x, scale.y + scalvel.y, scale.z + scalvel.z);\r",
                    "    // if you get to far away or too big, explode\r",
                    "    if ( Math.abs(translation.x) > 256) {\r",
                    "\ttranslation.x = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if ( Math.abs(translation.y) > 256) {\r",
                    "\ttranslation.y = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if ( Math.abs(translation.z) > 256) {\r",
                    "\ttranslation.z = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.x) > 20) {\r",
                    "\tscale.x = scale.x/20;\r",
                    "\ttranslation.x = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.y) > 20) {\r",
                    "\tscale.y = scale.y/20;\r",
                    "\ttranslation.y = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.z) > 20) {\r",
                    "\tscale.z = scale.z/20;\r",
                    "\ttranslation.z = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\t\t\t\r",
                    " "
                  ]
                }
              },
              { "TimeSensor":
                {
                  "@DEF": "DECLBubble_bubbleC_bubbleClock",
                  "@cycleInterval": 10,
                  "@loop": true
                }
              }
            ]
          }
        },
        { "Transform":
          {
            "@DEF": "DECLBubble_bubbleD",
            "-children": [
              { "Shape":
                {
                  "-appearance": { "Appearance":
                    {
                      "-material": { "Material":
                        {
                          "@diffuseColor": [ 1, 0, 0 ],
                          "@transparency": 0.2
                        }
                      }
                    }
                  },
                  "-geometry": { "Sphere":
                    {
                      "@radius": 0.25
                    }
                  }
                }
              },
              { "Script":
                {
                  "@DEF": "DECLBubble_bubbleD_bounce",
                  "field": [
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "scale",
                      "@value": [ 1, 1, 1 ]
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "translation"
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "velocity",
                      "@value": [ 0.008350644, -0.1128971, -0.07272379 ]
                    },
                    {
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@name": "scalvel",
                      "@value": [ 0.0614934, 0.01449004, 0.2315362 ]
                    },
                    {
                      "@accessType": "inputOnly",
                      "@type": "SFFloat",
                      "@name": "set_fraction"
                    }
                  ],
                  "#sourceText": [
                    " \r",
                    "ecmascript:\r",
                    "function initialize() {\r",
                    "    velocity = new SFVec3f(Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125, Math.random() * 0.25 - 0.125);\r",
                    "\r",
                    "    scalvel = new SFVec3f(Math.random() * 0.4, Math.random() * 0.4, Math.random() * 0.4);\r",
                    "}\r",
                    "\r",
                    "function set_fraction(value) {\r",
                    "    translation = new SFVec3f(\ttranslation.x + velocity.x, translation.y + velocity.y, translation.z + velocity.z);\r",
                    "    scale = new SFVec3f(scale.x + scalvel.x, scale.y + scalvel.y, scale.z + scalvel.z);\r",
                    "    // if you get to far away or too big, explode\r",
                    "    if ( Math.abs(translation.x) > 256) {\r",
                    "\ttranslation.x = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if ( Math.abs(translation.y) > 256) {\r",
                    "\ttranslation.y = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if ( Math.abs(translation.z) > 256) {\r",
                    "\ttranslation.z = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.x) > 20) {\r",
                    "\tscale.x = scale.x/20;\r",
                    "\ttranslation.x = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.y) > 20) {\r",
                    "\tscale.y = scale.y/20;\r",
                    "\ttranslation.y = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "    if (Math.abs(scale.z) > 20) {\r",
                    "\tscale.z = scale.z/20;\r",
                    "\ttranslation.z = 0;\r",
                    "\tinitialize();\r",
                    "    }\r",
                    "}\r",
                    "\r",
                    "\t\t\t\r",
                    " "
                  ]
                }
              },
              { "TimeSensor":
                {
                  "@DEF": "DECLBubble_bubbleD_bubbleClock",
                  "@cycleInterval": 10,
                  "@loop": true
                }
              }
            ]
          }
        },
        { "ROUTE":
          {
            "@fromNode": "DECLBubble_bubbleA_bubbleClock",
            "@fromField": "fraction_changed",
            "@toNode": "DECLBubble_bubbleA_bounce",
            "@toField": "set_fraction"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "DECLBubble_bubbleB_bubbleClock",
            "@fromField": "fraction_changed",
            "@toNode": "DECLBubble_bubbleB_bounce",
            "@toField": "set_fraction"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "DECLBubble_bubbleC_bubbleClock",
            "@fromField": "fraction_changed",
            "@toNode": "DECLBubble_bubbleC_bounce",
            "@toField": "set_fraction"
          }
        },
        { "ROUTE":
          {
            "@fromNode": "DECLBubble_bubbleD_bubbleClock",
            "@fromField": "fraction_changed",
            "@toNode": "DECLBubble_bubbleD_bounce",
            "@toField": "set_fraction"
          }
        }
      ]
    }
  }
}