{ "X3D": {
    "encoding":"UTF-8",
"@profile":"Immersive",
"@version":"3.3",
"@xsd:noNamespaceSchemaLocation":"https://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-4.0-JSONSchema.autogenerated.json",
"head": {
"meta": [
{
"@name":"title",
"@content":"arc4.x3d"
},
{
"@name":"creator",
"@content":"Lost, Doug Sanden I think"
},
{
"@name":"generator",
"@content":"manual"
},
{
"@name":"identifier",
"@content":"https://coderextreme.net/X3DJSONLD/src/main/data/x3dconnectorProto.x3d"
},
{
"@name":"description",
"@content":"a generic proto to connect two objects"
},
{
"@name":"translated",
"@content":"15 July 2025"
},
{
"@name":"generator",
"@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
},
{
"@name":"reference",
"@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
}
]
},
"Scene": {
"-children":[
{ "Viewpoint":
{
"@description":"Only Viewpoint",
"@position":[0,0,5]
}
},
{ "Background":
{
"@skyColor":[0.4,0.4,0.4]
}
},
{ "Transform":
{
"@DEF":"DECLpoint_G1_node",
"-children":[
{ "Shape":
{
"-appearance":
{ "Appearance":
{
"-material":
{ "Material":
{
"@diffuseColor":[1,0,0]
}
}
}
},
"-geometry":
{ "Sphere":
{
"@radius":0.1
}
}
}
},
{ "PositionInterpolator":
{
"@DEF":"DECLpoint_G1_PI1",
"@key":[0,1],
"@keyValue":[0,0,0,0,5,0]
}
},
{ "Script":
{
"@DEF":"DECLpoint_G1_MB1",
"field": [
{
"@name":"translation",
"@accessType":"inputOutput",
"@type":"SFVec3f",
"@value":[0,0,0]
},
{
"@name":"old",
"@accessType":"inputOutput",
"@type":"SFVec3f",
"@value":[0,0,0]
},
{
"@name":"set_location",
"@accessType":"inputOnly",
"@type":"SFTime"
},
{
"@name":"keyValue",
"@accessType":"inputOutput",
"@type":"MFVec3f",
"@value":[0,0,0,0,5,0]
}
],
"#sourceCode":[
"",
"",
"\newline\t\tfunction set_location(value) {\newline                    old = translation;\newline\t\t
translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\newline
keyValue = new MFVec3f([old, translation]);\newline\t\t    // Browser.println(keyValue);\newline\t\t}\newline",
"",
""
]
}
},
{ "TimeSensor":
{
"@DEF":"DECLpoint_G1_CL1",
"@cycleInterval":3.0,
"@loop":true
}
},
{ "ROUTE":
{
"@fromField":"cycleTime",
"@fromNode":"DECLpoint_G1_CL1",
"@toField":"set_location",
"@toNode":"DECLpoint_G1_MB1"
}
},
{ "ROUTE":
{
"@fromField":"fraction_changed",
"@fromNode":"DECLpoint_G1_CL1",
"@toField":"set_fraction",
"@toNode":"DECLpoint_G1_PI1"
}
},
{ "ROUTE":
{
"@fromField":"keyValue",
"@fromNode":"DECLpoint_G1_MB1",
"@toField":"keyValue",
"@toNode":"DECLpoint_G1_PI1"
}
},
{ "ROUTE":
{
"@fromField":"value_changed",
"@fromNode":"DECLpoint_G1_PI1",
"@toField":"set_translation",
"@toNode":"DECLpoint_G1_node"
}
}
]
}
},
{ "Transform":
{
"@DEF":"DECLpoint_G2_node",
"-children":[
{ "Shape":
{
"-appearance":
{ "Appearance":
{
"-material":
{ "Material":
{
"@diffuseColor":[1,0,0]
}
}
}
},
"-geometry":
{ "Sphere":
{
"@radius":0.1
}
}
}
},
{ "PositionInterpolator":
{
"@DEF":"DECLpoint_G2_PI1",
"@key":[0,1],
"@keyValue":[0,0,0,0,5,0]
}
},
{ "Script":
{
"@DEF":"DECLpoint_G2_MB1",
"field": [
{
"@name":"translation",
"@accessType":"inputOutput",
"@type":"SFVec3f",
"@value":[0,0,0]
},
{
"@name":"old",
"@accessType":"inputOutput",
"@type":"SFVec3f",
"@value":[0,0,0]
},
{
"@name":"set_location",
"@accessType":"inputOnly",
"@type":"SFTime"
},
{
"@name":"keyValue",
"@accessType":"inputOutput",
"@type":"MFVec3f",
"@value":[0,0,0,0,5,0]
}
],
"#sourceCode":[
"",
"",
"\newline\t\tfunction set_location(value) {\newline                    old = translation;\newline\t\t
translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\newline
keyValue = new MFVec3f([old, translation]);\newline\t\t    // Browser.println(keyValue);\newline\t\t}\newline",
"",
""
]
}
},
{ "TimeSensor":
{
"@DEF":"DECLpoint_G2_CL1",
"@cycleInterval":3.0,
"@loop":true
}
},
{ "ROUTE":
{
"@fromField":"cycleTime",
"@fromNode":"DECLpoint_G2_CL1",
"@toField":"set_location",
"@toNode":"DECLpoint_G2_MB1"
}
},
{ "ROUTE":
{
"@fromField":"fraction_changed",
"@fromNode":"DECLpoint_G2_CL1",
"@toField":"set_fraction",
"@toNode":"DECLpoint_G2_PI1"
}
},
{ "ROUTE":
{
"@fromField":"keyValue",
"@fromNode":"DECLpoint_G2_MB1",
"@toField":"keyValue",
"@toNode":"DECLpoint_G2_PI1"
}
},
{ "ROUTE":
{
"@fromField":"value_changed",
"@fromNode":"DECLpoint_G2_PI1",
"@toField":"set_translation",
"@toNode":"DECLpoint_G2_node"
}
}
]
}
},
{ "Group":
{
"-children":[
{ "Transform":
{
"@DEF":"DECLx3dconnector_connector1_trans",
"-children":[
{ "Transform":
{
"@DEF":"DECLx3dconnector_connector1_rotscale",
"-children":[
{ "Shape":
{
"-appearance":
{ "Appearance":
{
"-material":
{ "Material":
{
"@diffuseColor":[0.2,0.7,0.7],
"@transparency":0.5
}
}
}
},
"-geometry":
{ "Cylinder":
{
"@radius":0.05
}
}
}
}
]
}
}
]
}
},
{ "Script":
{
"@DEF":"DECLx3dconnector_connector1_S1",
"field": [
{
"@name":"startnode",
"@accessType":"initializeOnly",
"@type":"SFNode"
},
{
"@name":"endnode",
"@accessType":"initializeOnly",
"@type":"SFNode"
},
{
"@name":"position",
"@accessType":"inputOutput",
"@type":"SFNode",
"-children":[
{ "Transform":
{
"@USE":"DECLx3dconnector_connector1_trans"
}
}
]
},
{
"@name":"rotscale",
"@accessType":"inputOutput",
"@type":"SFNode",
"-children":[
{ "Transform":
{
"@USE":"DECLx3dconnector_connector1_rotscale"
}
}
]
},
{
"@name":"set_startpoint",
"@accessType":"inputOnly",
"@type":"SFVec3f"
},
{
"@name":"set_endpoint",
"@accessType":"inputOnly",
"@type":"SFVec3f"
}
],
"#sourceCode":[
"",
"",
"\newline        function recompute(startpoint,endpoint){\newline\t    if (typeof
endpoint === 'undefined') {\newline\t\t    if (typeof Quaternion !== 'undefined')
{\newline\t\t\t    return {\newline\t\t\t\t    scale : new SFVec3f(1.0,1.0,1.0),\newline\t\t\t\t
translation : new SFVec3f(1.0,1.0,1.0),\newline\t\t\t    \t    rotation : new Quaternion.rotateFromTo(new
SFVec3f(0.0,1.0,0.0), 1.0)\newline\t\t\t    };\newline\t    \t    } else if (typeof
SFRotation !== 'undefined') {\newline\t\t\t    return {\newline\t\t\t\t    scale :
new SFVec3f(1.0,1.0,1.0),\newline\t\t\t\t    translation : new SFVec3f(1.0,1.0,1.0),\newline\t\t\t
\t    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),1.0)\newline\t\t\t    };\newline\t
\t    } else {\newline\t\t\t    return {\newline\t\t\t\t    scale : new SFVec3f(1.0,1.0,1.0),\newline\t\t\t\t
translation : new SFVec3f(1.0,1.0,1.0)\newline\t\t\t    };\newline\t\t    }\newline\t
}\newline            var dif = endpoint.subtract(startpoint);\newline            var
dist = dif.length()*0.5;\newline            var dif2 = dif.multiply(0.5);\newline
var norm = dif.normalize();\newline            var transl = startpoint.add(dif2);\newline\t
if (typeof Quaternion !== 'undefined') {\newline\t\t    return {\newline\t\t\t   
scale : new SFVec3f(1.0,dist,1.0),\newline\t\t\t    translation : transl,\newline\t\t\t
rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)\newline\t\t
};\newline\t    } else if (typeof SFRotation !== 'undefined') {\newline\t\t    return
{\newline\t\t\t    scale : new SFVec3f(1.0,dist,1.0),\newline\t\t\t    translation
: transl,\newline\t\t\t    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)\newline\t\t
};\newline\t    } else {\newline\t\t    return {\newline\t\t\t    scale : new SFVec3f(1.0,dist,1.0),\newline\t\t\t
translation : transl\newline\t\t    };\newline\t    }\newline\t}\newline\tfunction
recompute_and_route(startpoint, endpoint) {\newline\t      var trafo = recompute(startpoint,
endpoint);\newline\t      position.translation = trafo.translation;\newline\t    
rotscale.rotation = trafo.rotation;\newline\t      rotscale.scale = trafo.scale;\newline\t}\newline
function initialize(){\newline            recompute_and_route(startnode.translation,endnode.translation);\newline
}\newline        function set_startpoint(val,t){\newline            recompute_and_route(val,endnode.translation);\newline
}\newline        function set_endpoint(val,t){\newline            recompute_and_route(startnode.translation,val);\newline
}\newline",
"",
""
]
}
}
]
}
},
{ "ROUTE":
{
"@fromField":"translation_changed",
"@fromNode":"DECLpoint_G1_node",
"@toField":"set_startpoint",
"@toNode":"DECLx3dconnector_connector1_S1"
}
},
{ "ROUTE":
{
"@fromField":"translation_changed",
"@fromNode":"DECLpoint_G2_node",
"@toField":"set_endpoint",
"@toNode":"DECLx3dconnector_connector1_S1"
}
}
]
}
  }
}