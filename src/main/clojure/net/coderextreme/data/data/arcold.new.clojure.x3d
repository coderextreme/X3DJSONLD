<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<!-- This model file was produced using X3DJSAIL https://www.web3d.org/specifications/java/X3DJSAIL.html -->
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta content='arcold.x3d' name='title'/>
    <meta content='John Carlson' name='creator'/>
    <meta content='manual' name='generator'/>
    <meta content='https://coderextreme.net/X3DJSONLD/src/main/data/arc.x3d' name='identifier'/>
    <meta content='an attempt to implement an arc in a graph' name='description'/>
  </head>
  <Scene>
    <Viewpoint description='a moving graph' position='0 0 5'/>
    <Background skyColor='0.4 0.4 0.4'/>
    <Transform DEF='trans1'>
      <Transform DEF='rotscale1'>
        <Shape>
          <Appearance>
            <Material diffuseColor='0.2 0.7 0.7'/>
          </Appearance>
          <Cylinder radius='0.1'/>
        </Shape>
      </Transform>
    </Transform>
    <Transform DEF='trans2'>
      <Transform DEF='rotscale2'>
        <Shape>
          <Appearance>
            <Material diffuseColor='0.2 0.7 0.7'/>
          </Appearance>
          <Cylinder radius='0.1'/>
        </Shape>
      </Transform>
    </Transform>
    <Transform DEF='trans3'>
      <Transform DEF='rotscale3'>
        <Shape>
          <Appearance>
            <Material diffuseColor='0.2 0.7 0.7'/>
          </Appearance>
          <Cylinder radius='0.1'/>
        </Shape>
      </Transform>
    </Transform>
    <ProtoDeclare name='point'>
      <ProtoInterface>
        <field name='translation' accessType='inputOutput' type='SFVec3f' value='0 0 0'/>
      </ProtoInterface>
      <ProtoBody>
        <Transform DEF='node'>
          <IS>
            <connect nodeField='translation' protoField='translation'/>
          </IS>
          <Shape>
            <Appearance>
              <Material diffuseColor='1 0 0'/>
            </Appearance>
            <Sphere radius='0.1'/>
          </Shape>
          <PositionInterpolator DEF='PI1' key='0 1' keyValue='0 0 0 0 5 0'/>
          <Script DEF='MB1'>
            <field name='translation' accessType='inputOutput' type='SFVec3f' value='50 50 0'/>
            <field name='old' accessType='inputOutput' type='SFVec3f' value='0 0 0'/>
            <field name='set_location' accessType='inputOnly' type='SFTime'/>
            <field name='keyValue' accessType='outputOnly' type='MFVec3f'/>
<![CDATA[
\newline		function set_location(value) {\newline                    old = translation;\newline		    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\newline                    keyValue = new MFVec3f([old, translation]);\newline		    // Browser.println(translation);\newline		}\newline
]]>
          </Script>
          <TimeSensor DEF='CL1' cycleInterval='3.0' loop='true'/>
          <ROUTE fromField='cycleTime' fromNode='CL1' toField='set_location' toNode='MB1'/>
          <ROUTE fromField='fraction_changed' fromNode='CL1' toField='set_fraction' toNode='PI1'/>
          <ROUTE fromField='keyValue' fromNode='MB1' toField='keyValue' toNode='PI1'/>
          <ROUTE fromField='value_changed' fromNode='PI1' toField='set_translation' toNode='node'/>
        </Transform>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoDeclare name='x3dconnector'>
      <ProtoInterface>
        <field name='startnode' accessType='inputOutput' type='SFNode'/>
        <field name='endnode' accessType='inputOutput' type='SFNode'/>
        <field name='transnode' accessType='inputOutput' type='SFNode'/>
        <field name='rotscalenode' accessType='inputOutput' type='SFNode'/>
        <field name='set_startpoint' accessType='inputOnly' type='SFVec3f'/>
        <field name='set_endpoint' accessType='inputOnly' type='SFVec3f'/>
      </ProtoInterface>
      <ProtoBody>
        <Script DEF='S1'>
          <field name='startnode' accessType='inputOutput' type='SFNode'/>
          <field name='endnode' accessType='inputOutput' type='SFNode'/>
          <field name='transnode' accessType='inputOutput' type='SFNode'/>
          <field name='rotscalenode' accessType='inputOutput' type='SFNode'/>
          <field name='set_startpoint' accessType='inputOnly' type='SFVec3f'/>
          <field name='set_endpoint' accessType='inputOnly' type='SFVec3f'/>
          <IS>
            <connect nodeField='startnode' protoField='startnode'/>
            <connect nodeField='endnode' protoField='endnode'/>
            <connect nodeField='transnode' protoField='transnode'/>
            <connect nodeField='rotscalenode' protoField='rotscalenode'/>
            <connect nodeField='set_startpoint' protoField='set_startpoint'/>
            <connect nodeField='set_endpoint' protoField='set_endpoint'/>
          </IS>
<![CDATA[
\newline        function recompute(startpoint,endpoint){\newline	    if (typeof endpoint === 'undefined') {\newline		return;\newline	    }\newline            var dif = endpoint.subtract(startpoint);\newline            var dist = dif.length()*0.5;\newline            var dif2 = dif.multiply(0.5);\newline            var norm = dif.normalize();\newline            var transl = startpoint.add(dif2);\newline	    if (typeof Quaternion !== 'undefined') {\newline		    return {\newline			    scale : new SFVec3f(1.0,dist,1.0),\newline			    translation : transl,\newline			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)\newline		    };\newline	    } else {\newline		    return {\newline			    scale : new SFVec3f(1.0,dist,1.0),\newline			    translation : transl,\newline			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)\newline		    };\newline	    }\newline	}\newline	function recompute_and_route(startpoint, endpoint) {\newline		var trafo = recompute(startpoint, endpoint);\newline		if (typeof trafo !== 'undefined') {\newline			transnode.translation = trafo.translation;\newline			rotscalenode.rotation = trafo.rotation;\newline			rotscalenode.scale = trafo.scale;\newline		} else {\newline			Browser.print("recompute returned undefined");\newline		}\newline	}\newline        function initialize(){\newline            recompute_and_route(startnode.translation,endnode.translation);\newline        }\newline        function set_startpoint(val,t){\newline            recompute_and_route(val || startnode.translation,endnode.translation);\newline        }\newline        function set_endpoint(val,t){\newline            recompute_and_route(startnode.translation,val || endnode.translation);\newline        }\newline
]]>
        </Script>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoInstance DEF='G1' name='point'/>
    <ProtoInstance DEF='G2' name='point'/>
    <ProtoInstance DEF='G3' name='point'/>
    <ProtoInstance DEF='G4' name='point'/>
    <ProtoInstance DEF='connector1' name='x3dconnector'>
      <fieldValue name='startnode'>
        <ProtoInstance USE='G1'/>
      </fieldValue>
      <fieldValue name='endnode'>
        <ProtoInstance USE='G2'/>
      </fieldValue>
      <fieldValue name='transnode'>
        <Transform USE='trans1'/>
      </fieldValue>
      <fieldValue name='rotscalenode'>
        <Transform USE='rotscale1'/>
      </fieldValue>
    </ProtoInstance>
    <ProtoInstance DEF='connector2' name='x3dconnector'>
      <fieldValue name='startnode'>
        <ProtoInstance USE='G1'/>
      </fieldValue>
      <fieldValue name='endnode'>
        <ProtoInstance USE='G3'/>
      </fieldValue>
      <fieldValue name='transnode'>
        <Transform USE='trans2'/>
      </fieldValue>
      <fieldValue name='rotscalenode'>
        <Transform USE='rotscale2'/>
      </fieldValue>
    </ProtoInstance>
    <ProtoInstance DEF='connector3' name='x3dconnector'>
      <fieldValue name='startnode'>
        <ProtoInstance USE='G1'/>
      </fieldValue>
      <fieldValue name='endnode'>
        <ProtoInstance USE='G4'/>
      </fieldValue>
      <fieldValue name='transnode'>
        <Transform USE='trans3'/>
      </fieldValue>
      <fieldValue name='rotscalenode'>
        <Transform USE='rotscale3'/>
      </fieldValue>
    </ProtoInstance>
    <ROUTE fromField='translation_changed' fromNode='G1' toField='set_startpoint' toNode='connector1'/>
    <ROUTE fromField='translation_changed' fromNode='G2' toField='set_endpoint' toNode='connector1'/>
    <ROUTE fromField='translation_changed' fromNode='G1' toField='set_startpoint' toNode='connector2'/>
    <ROUTE fromField='translation_changed' fromNode='G3' toField='set_endpoint' toNode='connector2'/>
    <ROUTE fromField='translation_changed' fromNode='G1' toField='set_startpoint' toNode='connector3'/>
    <ROUTE fromField='translation_changed' fromNode='G4' toField='set_endpoint' toNode='connector3'/>
  </Scene>
</X3D>
