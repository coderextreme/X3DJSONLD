{ "X3D": {
    "encoding":"UTF-8",
"@profile":"Full",
"@version":"4.0",
"@xsd:noNamespaceSchemaLocation":"https://www.web3d.org/specifications/x3d-4.0.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-4.0-JSONSchema.autogenerated.json",
"head": {
"meta": [
{
"@name":"comment",
"@content":"World of Titania"
},
{
"@name":"created",
"@content":"Fri, 04 Sep 2015 10:19:01 GMT"
},
{
"@name":"creator",
"@content":"Holger Seelig"
},
{
"@name":"generator",
"@content":"Titania V3.0.4, http://titania.create3000.de"
},
{
"@name":"identifier",
"@content":"file:///home/holger/Projekte/Cobweb/excite/tests/Components/Shape/Connectors.x3d"
},
{
"@name":"modified",
"@content":"Tue, 25 Jul 2017 09:42:17 GMT"
},
{
"@name":"title",
"@content":"Connectors"
},
{
"@name":"translated",
"@content":"16 July 2025"
},
{
"@name":"generator",
"@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
},
{
"@name":"reference",
"@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
}
]
},
"Scene": {
"-children":[
{ "ProtoDeclare":
{
"@name":"RoundedRectangle2D",
"ProtoInterface": {
"field": [
{
"@name":"cornerRadius",
"@accessType":"initializeOnly",
"@type":"SFFloat",
"@value":1.0
},
{
"@name":"size",
"@accessType":"initializeOnly",
"@type":"SFVec2f",
"@value":[2,2]
},
{
"@name":"solid",
"@accessType":"initializeOnly",
"@type":"SFBool",
"@value":true
}
]
},
"ProtoBody": {
"-children":[
{ "IndexedFaceSet":
{
"@DEF":"Geometry",
"IS": {
"connect": [
{
"@nodeField":"solid",
"@protoField":"solid"
}
]
},
"-coord":
{ "Coordinate":
{
}
}
}
},
{ "Script":
{
"@DEF":"RoundedRectangle2D",
"@directOutput":true,
"field": [
{
"@name":"cornerDimension",
"@accessType":"initializeOnly",
"@type":"SFFloat",
"@value":10.0
},
{
"@name":"cornerRadius",
"@accessType":"initializeOnly",
"@type":"SFFloat"
},
{
"@name":"size",
"@accessType":"initializeOnly",
"@type":"SFVec2f"
},
{
"@name":"geometry",
"@accessType":"initializeOnly",
"@type":"SFNode",
"-children":[
{ "IndexedFaceSet":
{
"@USE":"Geometry"
}
}
]
}
],
"IS": {
"connect": [
{
"@nodeField":"cornerRadius",
"@protoField":"cornerRadius"
},
{
"@nodeField":"size",
"@protoField":"size"
}
]
},
"#sourceCode":[
"",
"",
"vrmlscript:\newline\newlinefunction initialize ()\newline{\newline\tvar point   
= new SFVec3f (cornerRadius, 0, 0);\newline\tvar startRotation = new SFRotation ();\newline\tvar
endRotation   = new SFRotation (0, 0, 1, Math .PI / 2);\newline\tvar corner      
= new MFVec3f ();\newline\tvar coordIndex    = new MFInt32 ();\newline\tvar points
= new MFVec3f ();\newline\newline\tfor (var i = 0; i &lt; cornerDimension * 4; ++ i)\newline\t\tcoordIndex
[coordIndex .length] = i;\newline\newline\tgeometry .coordIndex = coordIndex;\newline\newline\tfor
(var i = 0; i &lt; cornerDimension; ++i)\newline\t\tcorner [i] = startRotation .slerp
(endRotation, i / (cornerDimension - 1)) .multVec (point);\newline\newline\tvar translation
= new SFVec3f (size .x / 2 - cornerRadius, size .y / 2 - cornerRadius, 0);\newline\newline\tfor
(var i = 0; i &lt; cornerDimension; ++ i)\newline\t\tpoints [points .length] = corner
[i] .add (translation);\newline\newline\tvar translation = new SFVec3f (-size .x /
2 + cornerRadius, size .y / 2 - cornerRadius, 0);\newline\tvar rotation    = new SFRotation
(0, 0, 1, Math .PI * 0.5);\newline\newline\tfor (var i = 0; i &lt; cornerDimension; ++
i)\newline\t\tpoints [points .length] = rotation .multVec (corner [i]) .add (translation);\newline\newline\tvar
translation = new SFVec3f (-size .x / 2 + cornerRadius, -size .y / 2 + cornerRadius,
0);\newline\tvar rotation    = new SFRotation (0, 0, 1, Math .PI);\newline\newline\tfor
(var i = 0; i &lt; cornerDimension; ++ i)\newline\t\tpoints [points .length] = rotation
.multVec (corner [i]) .add (translation);\newline\newline\tvar translation = new SFVec3f
(size .x / 2 - cornerRadius, -size .y / 2 + cornerRadius, 0);\newline\tvar rotation
= new SFRotation (0, 0, 1, Math .PI * 1.5);\newline\newline\tfor (var i = 0; i &lt; cornerDimension;
++ i)\newline\t\tpoints [points .length] = rotation .multVec (corner [i]) .add (translation);\newline\newline\tgeometry
.coord .point = points;\newline}\newline",
"",
""
]
}
}
]
}
}
},
{ "ProtoDeclare":
{
"@name":"Widget",
"ProtoInterface": {
"field": [
{
"@name":"fillColor",
"@accessType":"inputOutput",
"@type":"SFColor",
"@value":[0.1,0.1,0.1]
},
{
"@name":"lineColor",
"@accessType":"inputOutput",
"@type":"SFColor",
"@value":[0.4,0.4,0.4]
},
{
"@name":"linewidthScaleFactor",
"@accessType":"inputOutput",
"@type":"SFFloat",
"@value":1.0
},
{
"@name":"geometry",
"@accessType":"inputOutput",
"@type":"SFNode"
}
]
},
"ProtoBody": {
"-children":[
{ "Transform":
{
"@DEF":"Shape",
"-children":[
{ "Shape":
{
"IS": {
"connect": [
{
"@nodeField":"geometry",
"@protoField":"geometry"
}
]
},
"-appearance":
{ "Appearance":
{
"-material":
{ "Material":
{
"IS": {
"connect": [
{
"@nodeField":"diffuseColor",
"@protoField":"fillColor"
}
]
}
}
}
}
}
}
},
{ "Shape":
{
"IS": {
"connect": [
{
"@nodeField":"geometry",
"@protoField":"geometry"
}
]
},
"-appearance":
{ "Appearance":
{
"-fillProperties":
{ "FillProperties":
{
"@filled":false,
"@hatched":false
}
},
"-lineProperties":
{ "LineProperties":
{
"IS": {
"connect": [
{
"@nodeField":"linewidthScaleFactor",
"@protoField":"linewidthScaleFactor"
}
]
}
}
},
"-material":
{ "Material":
{
"@diffuseColor":[0,0,0],
"IS": {
"connect": [
{
"@nodeField":"emissiveColor",
"@protoField":"lineColor"
}
]
}
}
}
}
}
}
}
]
}
}
]
}
}
},
{ "ProtoDeclare":
{
"@name":"Node",
"ProtoInterface": {
"field": [
{
"@name":"translation",
"@accessType":"inputOutput",
"@type":"SFVec3f"
}
]
},
"ProtoBody": {
"-children":[
{ "Group":
{
"-children":[
{ "PlaneSensor":
{
"@DEF":"PlaneSensor"
}
},
{ "Transform":
{
"@DEF":"Node",
"IS": {
"connect": [
{
"@nodeField":"translation",
"@protoField":"translation"
}
]
},
"-children":[
{ "ProtoInstance":
{
"@name":"Widget",
"fieldValue": [
{
"@name":"geometry",
"-children":[
{ "ProtoInstance":
{
"@name":"RoundedRectangle2D",
"fieldValue": [
{
"@name":"cornerRadius",
"@value":0.12
},
{
"@name":"size",
"@value":[2,1]
}
]
}
}
]
}
]
}
},
{ "Transform":
{
"@DEF":"Input",
"@translation":[-1,0,0],
"-children":[
{ "ProtoInstance":
{
"@name":"Widget",
"fieldValue": [
{
"@name":"lineColor",
"@value":[0.72,0.14,0.23]
},
{
"@name":"geometry",
"-children":[
{ "Disk2D":
{
"@DEF":"Connector",
"@outerRadius":0.2
}
}
]
}
]
}
}
]
}
},
{ "Transform":
{
"@DEF":"Output",
"@translation":[1,0,0],
"-children":[
{ "ProtoInstance":
{
"@name":"Widget",
"fieldValue": [
{
"@name":"lineColor",
"@value":[0.44,0.5,0.72]
},
{
"@name":"geometry",
"-children":[
{ "Disk2D":
{
"@USE":"Connector"
}
}
]
}
]
}
}
]
}
}
]
}
}
]
}
},
{ "Script":
{
"@directOutput":true,
"field": [
{
"@name":"translation",
"@accessType":"inputOutput",
"@type":"SFVec3f"
},
{
"@name":"sensor",
"@accessType":"initializeOnly",
"@type":"SFNode",
"-children":[
{ "PlaneSensor":
{
"@USE":"PlaneSensor"
}
}
]
},
{
"@name":"transform",
"@accessType":"initializeOnly",
"@type":"SFNode",
"-children":[
{ "Transform":
{
"@USE":"Node"
}
}
]
}
],
"IS": {
"connect": [
{
"@nodeField":"translation",
"@protoField":"translation"
}
]
},
"#sourceCode":[
"",
"",
"vrmlscript:\newlinefunction initialize ()\newline{\newline\tsensor .offset = translation;\newline}\newline",
"",
""
]
}
},
{ "ROUTE":
{
"@fromField":"translation_changed",
"@fromNode":"PlaneSensor",
"@toField":"set_translation",
"@toNode":"Node"
}
}
]
}
}
},
{ "ProtoDeclare":
{
"@name":"Route",
"ProtoInterface": {
"field": [
{
"@name":"lineColor",
"@accessType":"inputOutput",
"@type":"SFColor",
"@value":[0.43,0.43,0.98]
},
{
"@name":"linewidthScaleFactor",
"@accessType":"inputOutput",
"@type":"SFFloat",
"@value":2.0
},
{
"@name":"output",
"@accessType":"initializeOnly",
"@type":"SFNode"
},
{
"@name":"input",
"@accessType":"initializeOnly",
"@type":"SFNode"
}
]
},
"ProtoBody": {
"-children":[
{ "Shape":
{
"-appearance":
{ "Appearance":
{
"-lineProperties":
{ "LineProperties":
{
"IS": {
"connect": [
{
"@nodeField":"linewidthScaleFactor",
"@protoField":"linewidthScaleFactor"
}
]
}
}
},
"-material":
{ "Material":
{
"@diffuseColor":[0,0,0],
"IS": {
"connect": [
{
"@nodeField":"emissiveColor",
"@protoField":"lineColor"
}
]
}
}
}
}
},
"-geometry":
{ "LineSet":
{
"@DEF":"Geometry_1",
"@vertexCount":[2],
"-coord":
{ "Coordinate":
{
"@point":[-1,0,0,1,0,0]
}
}
}
}
}
},
{ "Script":
{
"@DEF":"Route",
"@directOutput":true,
"field": [
{
"@name":"set_translation",
"@accessType":"inputOnly",
"@type":"SFVec3f"
},
{
"@name":"routeDimension",
"@accessType":"initializeOnly",
"@type":"SFInt32",
"@value":21
},
{
"@name":"output",
"@accessType":"initializeOnly",
"@type":"SFNode"
},
{
"@name":"input",
"@accessType":"initializeOnly",
"@type":"SFNode"
},
{
"@name":"geometry",
"@accessType":"initializeOnly",
"@type":"SFNode",
"-children":[
{ "LineSet":
{
"@USE":"Geometry_1"
}
}
]
},
{
"@name":"self",
"@accessType":"initializeOnly",
"@type":"SFNode",
"-children":[
{ "Script":
{
"@USE":"Route"
}
}
]
}
],
"IS": {
"connect": [
{
"@nodeField":"output",
"@protoField":"output"
},
{
"@nodeField":"input",
"@protoField":"input"
}
]
},
"#sourceCode":[
"",
"",
"vrmlscript:\newlinefunction initialize ()\newline{\newline\tBrowser .addRoute (output,
'translation_changed', self, 'set_translation');\newline\tBrowser .addRoute (input,
'translation_changed', self, 'set_translation');\newline\newline\tset_translation
();\newline}\newline\newlinefunction set_translation ()\newline{\newline\tgeometry
.vertexCount [0] = routeDimension;\newline\newline\tvar outPoint = output .translation
.add (new SFVec3f ( 1, 0, 0));\newline\tvar inPoint  = input  .translation .add (new
SFVec3f (-1, 0, 0));\newline\newline\tvar w = inPoint .x - outPoint .x;\newline\tvar
h = outPoint .y - inPoint .y;\newline\newline\tfor (var i = 0; i &lt; routeDimension;
++ i)\newline\t{\newline\t\tvar t = i / (routeDimension - 1);\newline\t\tvar y = h
/ 2 * (Math .cos (t * Math .PI) - 1);\newline\newline\t\tgeometry .coord .point [i]
= outPoint .add (new SFVec3f (t * w, y, 0));\newline\t}\newline}\newline",
"",
""
]
}
}
]
}
}
},
{ "NavigationInfo":
{
"@type":"\"PLANE_create3000.de\" \"ANY\""
}
},
{ "Background":
{
"@skyColor":[0.2,0.2,0.2]
}
},
{ "OrthoViewpoint":
{
"@centerOfRotation":[-3.13496,-4.19776,0],
"@description":"OthoViewpoint",
"@position":[-3.13496,-4.19776,10]
}
},
{ "Viewpoint":
{
"@description":"Viewpoint"
}
},
{ "Transform":
{
"@DEF":"Connectors",
"-children":[
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@DEF":"N1",
"fieldValue": [
{
"@name":"translation",
"@value":[-3.98323,2.88948,0]
}
]
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@DEF":"N2",
"fieldValue": [
{
"@name":"translation",
"@value":[-0.0890862,2.96049,0]
}
]
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N1"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@DEF":"N3",
"fieldValue": [
{
"@name":"translation",
"@value":[-0.104169,1.16371,0]
}
]
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N1"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@DEF":"N4",
"fieldValue": [
{
"@name":"translation",
"@value":[-0.0998688,-0.40172,0]
}
]
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N1"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@DEF":"N5",
"fieldValue": [
{
"@name":"translation",
"@value":[-0.0998687,-2.14742,0]
}
]
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N2"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@DEF":"N6",
"fieldValue": [
{
"@name":"translation",
"@value":[3.55694,2.4116,0]
}
]
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N3"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N6"
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N4"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@DEF":"N7",
"fieldValue": [
{
"@name":"translation",
"@value":[3.75106,-0.0794556,0]
}
]
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N5"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N7"
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N6"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@DEF":"N8",
"fieldValue": [
{
"@name":"translation",
"@value":[7.68077,1.21228,0]
}
]
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Route",
"fieldValue": [
{
"@name":"output",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N7"
}
}
]
},
{
"@name":"input",
"-children":[
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N8"
}
}
]
}
]
}
},
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N1"
}
},
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N2"
}
},
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N3"
}
},
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N4"
}
},
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N5"
}
},
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N6"
}
},
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N7"
}
},
{ "ProtoInstance":
{
"@name":"Node",
"@USE":"N8"
}
}
]
}
}
]
}
  }
}