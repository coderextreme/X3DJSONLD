<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 4.0//EN" "https://www.web3d.org/specifications/x3d-4.0.dtd">
<!-- This model file was produced using X3DJSAIL https://www.web3d.org/specifications/java/X3DJSAIL.html -->
<X3D profile='Immersive' version='4.0' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-4.0.xsd'>
  <head>
    <component name='Scripting' level='1'/>
    <meta content='flowers2.x3d' name='title'/>
    <meta content='John Carlson' name='creator'/>
    <meta content='John Carlson' name='transcriber'/>
    <meta content='23 January 2005' name='created'/>
    <meta content='21 March 2018' name='modified'/>
    <meta content='2 random mathematical roses in spherical dimensions. rho = a + b * cos(c * theta) * cos(d * phi)' name='description'/>
    <meta content='https://coderextreme.net/X3DJSONLD/src/main/data/flowers2.x3d' name='identifier'/>
    <meta content='manually written' name='generator'/>
    <meta content='https://www.web3d.org/x3d/content/examples/license.html' name='license'/>
  </head>
  <Scene>
    <NavigationInfo/>
    <Viewpoint description='Two mathematical orbitals' position='0 0 50'/>
    <Group>
      <DirectionalLight direction='1 1 1'/>
      <ProtoDeclare name='orbit'>
        <ProtoInterface>
          <field name='translation' accessType='inputOutput' type='SFVec3f' value='-8 0 0'/>
          <field name='diffuseColor' accessType='inputOutput' type='SFColor' value='1 0.5 0'/>
          <field name='specularColor' accessType='inputOutput' type='SFColor' value='1 0.5 0'/>
          <field name='transparency' accessType='inputOutput' type='SFFloat' value='0.75'/>
        </ProtoInterface>
        <ProtoBody>
          <Group>
            <TimeSensor DEF='Clock' cycleInterval='16.0' loop='true'/>
            <OrientationInterpolator DEF='OrbitPath' key='0 0.5 1' keyValue='1 0 0 0 1 0 0 3.14 1 0 0 6.28'/>
            <Transform DEF='OrbitTransform'>
              <IS>
                <connect nodeField='translation' protoField='translation'/>
              </IS>
              <Shape>
                <Appearance>
                  <Material>
                    <IS>
                      <connect nodeField='diffuseColor' protoField='diffuseColor'/>
                      <connect nodeField='specularColor' protoField='specularColor'/>
                      <connect nodeField='transparency' protoField='transparency'/>
                    </IS>
                  </Material>
                </Appearance>
                <IndexedFaceSet DEF='Orbit' ccw='false' convex='false' coordIndex='0 1 2 -1'>
                  <Coordinate DEF='OrbitCoordinates' point='0 0 1 0 1 0 1 0 0'/>
                </IndexedFaceSet>
              </Shape>
            </Transform>
            <Script DEF='OrbitScript'>
              <field name='set_fraction' accessType='inputOnly' type='SFFloat'/>
              <field name='coordinates' accessType='inputOutput' type='MFVec3f'/>
              <field name='coordIndexes' accessType='inputOutput' type='MFInt32'/>
              <field name='e' accessType='inputOutput' type='SFFloat' value='5.0'/>
              <field name='f' accessType='inputOutput' type='SFFloat' value='5.0'/>
              <field name='g' accessType='inputOutput' type='SFFloat' value='5.0'/>
              <field name='h' accessType='inputOutput' type='SFFloat' value='5.0'/>
              <field name='resolution' accessType='inputOutput' type='SFInt32' value='50'/>
<![CDATA[
\newline\newline			function initialize() {\newline			     generateCoordinates();\newline			     var arrIndex = 0;\newline			     for (var i = 0; i < resolution-1; i++) {\newline				for (var j = 0; j < resolution-1; j++) {\newline				     coordIndexes[arrIndex++] = i*resolution+j;\newline				     coordIndexes[arrIndex++] = i*resolution+j+1;\newline				     coordIndexes[arrIndex++] = (i+1)*resolution+j+1;\newline				     coordIndexes[arrIndex++] = (i+1)*resolution+j;\newline				     coordIndexes[arrIndex++] = -1;\newline				}\newline			    }\newline			}\newline\newline			function generateCoordinates() {\newline			     var theta = 0.0;\newline			     var phi = 0.0;\newline			     var delta = (2 * 3.141592653) / (resolution-1);\newline			     var arrIndex = 0;\newline			     for (var i = 0; i < resolution; i++) {\newline				for (var j = 0; j < resolution; j++) {\newline					var rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);\newline					coordinates[arrIndex++] = new SFVec3f(\newline						rho * Math.cos(phi) * Math.cos(theta),\newline						rho * Math.cos(phi) * Math.sin(theta),\newline						rho * Math.sin(phi)\newline					);\newline					theta += delta;\newline				}\newline				phi += delta;\newline			     }\newline			}\newline\newline			function set_fraction(fraction, eventTime) {\newline				var choice = Math.floor(Math.random() * 4);\newline				switch (choice) {\newline				case 0:\newline					e += Math.floor(Math.random() * 2) * 2 - 1;\newline					break;\newline				case 1:\newline					f += Math.floor(Math.random() * 2) * 2 - 1;\newline					break;\newline				case 2:\newline					g += Math.floor(Math.random() * 2) * 2 - 1;\newline					break;\newline				case 3:\newline					h += Math.floor(Math.random() * 2) * 2 - 1;\newline					break;\newline				}\newline				if (e < 1) {\newline					f = 10;\newline				}\newline				if (f < 1) {\newline					f = 10;\newline				}\newline				if (g < 1) {\newline					g = 4;\newline				}\newline				if (h < 1) {\newline					h = 4;\newline				}\newline				generateCoordinates();\newline			}\newline
]]>
            </Script>
            <ROUTE fromField='coordIndexes' fromNode='OrbitScript' toField='set_coordIndex' toNode='Orbit'/>
            <ROUTE fromField='coordinates' fromNode='OrbitScript' toField='point' toNode='OrbitCoordinates'/>
            <ROUTE fromField='fraction_changed' fromNode='Clock' toField='set_fraction' toNode='OrbitScript'/>
            <ROUTE fromField='value_changed' fromNode='OrbitPath' toField='rotation' toNode='OrbitTransform'/>
            <ROUTE fromField='fraction_changed' fromNode='Clock' toField='set_fraction' toNode='OrbitPath'/>
          </Group>
        </ProtoBody>
      </ProtoDeclare>
      <ProtoInstance name='orbit'>
        <fieldValue name='translation' value='-8 0 0'/>
        <fieldValue name='diffuseColor' value='1 0.5 0'/>
        <fieldValue name='specularColor' value='1 0.5 0'/>
        <fieldValue name='transparency' value='0.75'/>
      </ProtoInstance>
      <ProtoInstance name='orbit'>
        <fieldValue name='translation' value='8 0 0'/>
        <fieldValue name='diffuseColor' value='0 0.5 1'/>
        <fieldValue name='specularColor' value='0 0.5 1'/>
        <fieldValue name='transparency' value='0.5'/>
      </ProtoInstance>
    </Group>
  </Scene>
</X3D>
