<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<!-- This model file was produced using X3DJSAIL https://www.web3d.org/specifications/java/X3DJSAIL.html -->
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta content='x3dconnector.x3d' name='title'/>
    <meta content='Lost, Doug Sanden I think' name='creator'/>
    <meta content='manual' name='generator'/>
    <meta content='https://coderextreme.net/X3DJSONLD/src/main/data/x3dconnectorProto.x3d' name='identifier'/>
    <meta content='a generic proto to connect two objects' name='description'/>
  </head>
  <Scene>
    <Viewpoint description='Only Viewpoint' position='0 0 5'/>
    <Background skyColor='0.4 0.4 0.4'/>
    <Transform DEF='G1'>
      <Shape>
        <Appearance>
          <Material diffuseColor='0.7 0.2 0.2'/>
        </Appearance>
        <Sphere radius='0.1'/>
      </Shape>
      <PlaneSensor DEF='PS1' description='Grab to move'/>
      <ROUTE fromField='translation_changed' fromNode='PS1' toField='set_translation' toNode='G1'/>
    </Transform>
    <Transform DEF='G2' translation='1 -1 0.01'>
      <Shape>
        <Appearance>
          <Material diffuseColor='0.2 0.7 0.2'/>
        </Appearance>
        <Sphere radius='0.1'/>
      </Shape>
      <PlaneSensor DEF='PS2' description='Grab to move' offset='1 -1 0.01'/>
      <ROUTE fromField='translation_changed' fromNode='PS2' toField='set_translation' toNode='G2'/>
    </Transform>
    <Transform DEF='transC1'>
      <Transform DEF='rotscaleC1'>
        <Shape>
          <Appearance>
            <Material diffuseColor='0.2 0.7 0.7' transparency='0.5'/>
          </Appearance>
          <Cylinder radius='0.05'/>
        </Shape>
      </Transform>
    </Transform>
    <ProtoDeclare name='x3dconnector'>
      <ProtoInterface>
        <field name='startnode' accessType='initializeOnly' type='SFNode'/>
        <field name='endnode' accessType='initializeOnly' type='SFNode'/>
        <field name='transnode' accessType='initializeOnly' type='SFNode'/>
        <field name='rotscalenode' accessType='initializeOnly' type='SFNode'/>
        <field name='set_startpoint' accessType='inputOnly' type='SFVec3f'/>
        <field name='set_endpoint' accessType='inputOnly' type='SFVec3f'/>
      </ProtoInterface>
      <ProtoBody>
        <Script DEF='S1'>
          <field name='startnode' accessType='initializeOnly' type='SFNode'/>
          <field name='endnode' accessType='initializeOnly' type='SFNode'/>
          <field name='transnode' accessType='initializeOnly' type='SFNode'/>
          <field name='rotscalenode' accessType='initializeOnly' type='SFNode'/>
          <field name='set_startpoint' accessType='inputOnly' type='SFVec3f'/>
          <field name='set_endpoint' accessType='inputOnly' type='SFVec3f'/>
          <IS>
            <connect nodeField='startnode' protoField='startnode'/>
            <connect nodeField='endnode' protoField='endnode'/>
            <connect nodeField='transnode' protoField='transnode'/>
            <connect nodeField='rotscalenode' protoField='rotscalenode'/>
            <connect nodeField='set_startpoint' protoField='set_startpoint'/>
            <connect nodeField='set_endpoint' protoField='set_endpoint'/>
          </IS>
<![CDATA[
\newline        function recompute(startpoint,endpoint){\newline	    if (typeof endpoint === 'undefined') {\newline		return;\newline	    }\newline            var dif = endpoint.subtract(startpoint);\newline            var dist = dif.length()*0.5;\newline            var dif2 = dif.multiply(0.5);\newline            var norm = dif.normalize();\newline            var transl = startpoint.add(dif2);\newline	    if (typeof Quaternion !== 'undefined') {\newline		    return {\newline			    scale : new SFVec3f(1.0,dist,1.0),\newline			    translation : transl,\newline			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)\newline		    };\newline	    } else {\newline		    return {\newline			    scale : new SFVec3f(1.0,dist,1.0),\newline			    translation : transl,\newline			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)\newline		    };\newline	    }\newline	}\newline	function recompute_and_route(startpoint, endpoint) {\newline	      var trafo = recompute(startpoint, endpoint);\newline	      if (trafo) {\newline		      transnode.translation = trafo.translation;\newline		      rotscalenode.rotation = trafo.rotation;\newline		      rotscalenode.scale = trafo.scale;\newline	      }\newline	}\newline        function initialize(){\newline            recompute_and_route(startnode.translation,endnode.translation);\newline        }\newline        function set_startpoint(val,t){\newline            recompute_and_route(val,endnode.translation);\newline        }\newline        function set_endpoint(val,t){\newline            recompute_and_route(startnode.translation,val);\newline        }\newline
]]>
        </Script>
      </ProtoBody>
    </ProtoDeclare>
    <ProtoInstance DEF='connector1' name='x3dconnector'>
      <fieldValue name='startnode'>
        <Transform USE='G1'/>
      </fieldValue>
      <fieldValue name='endnode'>
        <Transform USE='G2'/>
      </fieldValue>
      <fieldValue name='transnode'>
        <Transform USE='transC1'/>
      </fieldValue>
      <fieldValue name='rotscalenode'>
        <Transform USE='rotscaleC1'/>
      </fieldValue>
      <fieldValue name='set_startpoint'/>
      <fieldValue name='set_endpoint'/>
    </ProtoInstance>
    <ROUTE fromField='translation_changed' fromNode='G1' toField='set_startpoint' toNode='connector1'/>
    <ROUTE fromField='translation_changed' fromNode='G2' toField='set_endpoint' toNode='connector1'/>
  </Scene>
</X3D>
