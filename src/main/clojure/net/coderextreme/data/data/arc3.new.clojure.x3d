<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<!-- This model file was produced using X3DJSAIL https://www.web3d.org/specifications/java/X3DJSAIL.html -->
<X3D profile='Immersive' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta content='arc3.x3d' name='title'/>
    <meta content='Lost, Doug Sanden I think' name='creator'/>
    <meta content='manual' name='generator'/>
    <meta content='https://coderextreme.net/X3DJSONLD/src/main/data/x3dconnectorProto.x3d' name='identifier'/>
    <meta content='a generic proto to connect two objects' name='description'/>
  </head>
  <Scene>
    <Viewpoint description='Only Viewpoint' position='0 0 5'/>
    <Background skyColor='0.4 0.4 0.4'/>
    <Transform DEF='DECLpoint_G1_node'>
      <Shape>
        <Appearance>
          <Material diffuseColor='1 0 0'/>
        </Appearance>
        <Sphere radius='0.1'/>
      </Shape>
      <PositionInterpolator DEF='DECLpoint_G1_PI1' key='0 1' keyValue='0 0 0 0 5 0'/>
      <Script DEF='DECLpoint_G1_MB1'>
        <field name='translation' accessType='inputOutput' type='SFVec3f' value='0 0 0'/>
        <field name='old' accessType='inputOutput' type='SFVec3f' value='0 0 0'/>
        <field name='set_location' accessType='inputOnly' type='SFTime'/>
        <field name='keyValue' accessType='inputOutput' type='MFVec3f' value='0 0 0 0 5 0'/>
<![CDATA[
\newline		function set_location(value) {\newline                    old = translation;\newline		    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\newline                    keyValue = new MFVec3f([old, translation]);\newline		    // Browser.println(keyValue);\newline		}\newline
]]>
      </Script>
      <TimeSensor DEF='DECLpoint_G1_CL1' cycleInterval='3.0' loop='true'/>
      <ROUTE fromField='cycleTime' fromNode='DECLpoint_G1_CL1' toField='set_location' toNode='DECLpoint_G1_MB1'/>
      <ROUTE fromField='fraction_changed' fromNode='DECLpoint_G1_CL1' toField='set_fraction' toNode='DECLpoint_G1_PI1'/>
      <ROUTE fromField='keyValue' fromNode='DECLpoint_G1_MB1' toField='keyValue' toNode='DECLpoint_G1_PI1'/>
      <ROUTE fromField='value_changed' fromNode='DECLpoint_G1_PI1' toField='set_translation' toNode='DECLpoint_G1_node'/>
    </Transform>
    <Transform DEF='DECLpoint_G2_node'>
      <Shape>
        <Appearance>
          <Material diffuseColor='1 0 0'/>
        </Appearance>
        <Sphere radius='0.1'/>
      </Shape>
      <PositionInterpolator DEF='DECLpoint_G2_PI1' key='0 1' keyValue='0 0 0 0 5 0'/>
      <Script DEF='DECLpoint_G2_MB1'>
        <field name='translation' accessType='inputOutput' type='SFVec3f' value='0 0 0'/>
        <field name='old' accessType='inputOutput' type='SFVec3f' value='0 0 0'/>
        <field name='set_location' accessType='inputOnly' type='SFTime'/>
        <field name='keyValue' accessType='inputOutput' type='MFVec3f' value='0 0 0 0 5 0'/>
<![CDATA[
\newline		function set_location(value) {\newline                    old = translation;\newline		    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\newline                    keyValue = new MFVec3f([old, translation]);\newline		    // Browser.println(keyValue);\newline		}\newline
]]>
      </Script>
      <TimeSensor DEF='DECLpoint_G2_CL1' cycleInterval='3.0' loop='true'/>
      <ROUTE fromField='cycleTime' fromNode='DECLpoint_G2_CL1' toField='set_location' toNode='DECLpoint_G2_MB1'/>
      <ROUTE fromField='fraction_changed' fromNode='DECLpoint_G2_CL1' toField='set_fraction' toNode='DECLpoint_G2_PI1'/>
      <ROUTE fromField='keyValue' fromNode='DECLpoint_G2_MB1' toField='keyValue' toNode='DECLpoint_G2_PI1'/>
      <ROUTE fromField='value_changed' fromNode='DECLpoint_G2_PI1' toField='set_translation' toNode='DECLpoint_G2_node'/>
    </Transform>
    <Group>
      <Transform DEF='DECLx3dconnector_connector1_trans'>
        <Transform DEF='DECLx3dconnector_connector1_rotscale'>
          <Shape>
            <Appearance>
              <Material diffuseColor='0.2 0.7 0.7' transparency='0.5'/>
            </Appearance>
            <Cylinder radius='0.05'/>
          </Shape>
        </Transform>
      </Transform>
      <Script DEF='DECLx3dconnector_connector1_S1'>
        <field name='startnode' accessType='initializeOnly' type='SFNode'>
          <Group USE='DECLpoint_G1_node'/>
        </field>
        <field name='endnode' accessType='initializeOnly' type='SFNode'>
          <Group USE='DECLpoint_G2_node'/>
        </field>
        <field name='position' accessType='inputOutput' type='SFNode'>
          <Transform USE='DECLx3dconnector_connector1_trans'/>
        </field>
        <field name='rotscale' accessType='inputOutput' type='SFNode'>
          <Transform USE='DECLx3dconnector_connector1_rotscale'/>
        </field>
        <field name='set_startpoint' accessType='inputOnly' type='SFVec3f'/>
        <field name='set_endpoint' accessType='inputOnly' type='SFVec3f'/>
<![CDATA[
\newline        function recompute(startpoint,endpoint){\newline	    if (typeof endpoint === 'undefined') {\newline		return;\newline	    }\newline            var dif = endpoint.subtract(startpoint);\newline            var dist = dif.length()*0.5;\newline            var dif2 = dif.multiply(0.5);\newline            var norm = dif.normalize();\newline            var transl = startpoint.add(dif2);\newline	    if (typeof Quaternion !== 'undefined') {\newline		    return {\newline			    scale : new SFVec3f(1.0,dist,1.0),\newline			    translation : transl,\newline			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)\newline		    };\newline	    } else if (typeof SFRotation !== 'undefined') {\newline		    return {\newline			    scale : new SFVec3f(1.0,dist,1.0),\newline			    translation : transl,\newline			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)\newline		    };\newline	    } else {\newline		    return {\newline			    scale : new SFVec3f(1.0,dist,1.0),\newline			    translation : transl\newline		    };\newline	    }\newline	}\newline	function recompute_and_route(startpoint, endpoint) {\newline	      var trafo = recompute(startpoint, endpoint);\newline	      if (trafo) {\newline		      position.translation = trafo.translation;\newline		      rotscale.rotation = trafo.rotation;\newline		      rotscale.scale = trafo.scale;\newline	      }\newline	}\newline        function initialize(){\newline            recompute_and_route(startnode.translation,endnode.translation);\newline        }\newline        function set_startpoint(val,t){\newline            recompute_and_route(val,endnode.translation);\newline        }\newline        function set_endpoint(val,t){\newline            recompute_and_route(startnode.translation,val);\newline        }\newline
]]>
      </Script>
    </Group>
    <ROUTE fromField='translation' fromNode='DECLpoint_G1_node' toField='set_startpoint' toNode='DECLx3dconnector_connector1_S1'/>
    <ROUTE fromField='translation' fromNode='DECLpoint_G2_node' toField='set_endpoint' toNode='DECLx3dconnector_connector1_S1'/>
  </Scene>
</X3D>
