load('X3Dautoclass.js');

// Javadoc annotations follow, see below for source.
/**
 * <p> Marine model. </p>
 <p> Related links: Marine.java source, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">net.x3djsonld.data.Marine&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Polygonal/Marine.x3d">Marine.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> Marine model </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Pat Sullivan </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 25 November 2006 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> modified </i> </td>
			<td> 9 May 2020 </td>
		</tr>
		<tr style="color:burntorange">
			<td style="text-align:right; vertical-align: text-top;"> <i> warning </i> </td>
			<td> Not HAnim compliant </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Polygonal/Marine.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Polygonal/Marine.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Polygonal/../license.html">../license.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> Vizthumbnail </i> </td>
			<td> Thumb_marine_x3d21897981139112986.jpg </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToES5.xslt" target="_blank">X3dToES5.xslt</a>
		stylesheet to create ES5 source code from an <code>.x3d</code> scene.
	</p>

	* @author Pat Sullivan
 */

function Marine
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
  function doubleToFloat(d) {
    if (Float32Array) {
        return new Float32Array([d])[0];
    }
  }
Marine.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #17, 608 total numbers */
	this.IndexedFaceSet_11_17_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,3,1,-1,4,3,0,-1,5,3,4,-1,5,4,6,-1,7,5,6,-1,8,5,7,-1,9,8,7,-1,10,8,9,-1,11,10,9,-1,12,10,11,-1,13,10,12,-1,12,14,13,-1,14,15,13,-1,14,16,15,-1,16,17,15,-1,17,18,15,-1,17,19,18,-1,19,20,18,-1,19,21,20,-1,21,22,20,-1,22,23,20,-1,22,24,23,-1,23,24,25,-1,24,26,25,-1,26,27,25,-1,25,27,28,-1,27,29,28,-1,28,29,30,-1,29,31,30,-1,30,31,32,-1,30,32,33,-1,34,33,32,-1,34,35,33,-1,36,35,34,-1,37,35,36,-1,37,38,35,-1,39,38,37,-1,39,1,38,-1,2,1,39,-1,6,4,40,-1,40,4,41,-1,41,4,0,-1,41,0,2,-1,42,11,9,-1,42,9,40,-1,9,7,40,-1,7,6,40,-1,43,16,14,-1,42,43,14,-1,42,14,12,-1,12,11,42,-1,44,21,19,-1,44,19,45,-1,43,45,19,-1,43,19,17,-1,43,17,16,-1,24,46,26,-1,46,24,44,-1,44,24,22,-1,44,22,21,-1,29,47,31,-1,46,47,29,-1,46,29,27,-1,46,27,26,-1,48,36,34,-1,47,48,34,-1,47,34,32,-1,31,47,32,-1,41,2,39,-1,41,39,49,-1,48,49,39,-1,48,39,37,-1,48,37,36,-1,49,44,45,-1,44,47,46,-1,49,47,44,-1,49,48,47,-1,40,41,42,-1,42,45,43,-1,42,41,45,-1,41,49,45,-1,50,51,52,-1,52,51,53,-1,53,51,54,-1,53,55,56,-1,53,54,55,-1,57,56,58,-1,56,55,58,-1,59,60,61,-1,60,57,61,-1,57,58,61,-1,51,62,54,-1,51,63,62,-1,54,64,55,-1,54,62,64,-1,58,55,65,-1,55,64,65,-1,61,58,66,-1,58,65,66,-1,63,67,62,-1,63,68,67,-1,62,69,64,-1,62,67,69,-1,65,64,70,-1,64,69,70,-1,66,65,71,-1,65,70,71,-1,50,35,72,-1,50,72,51,-1,20,61,73,-1,59,61,20,-1,73,66,74,-1,61,66,73,-1,74,71,75,-1,66,71,74,-1,75,70,76,-1,75,71,70,-1,76,69,77,-1,76,70,69,-1,77,67,78,-1,77,69,67,-1,78,68,79,-1,78,67,68,-1,63,80,79,-1,63,79,68,-1,51,72,80,-1,51,80,63,-1,35,81,72,-1,35,30,81,-1,30,82,81,-1,30,83,82,-1,83,84,82,-1,25,84,83,-1,25,73,84,-1,20,73,25,-1,72,85,80,-1,72,81,85,-1,81,86,85,-1,81,82,86,-1,82,87,86,-1,84,87,82,-1,84,74,87,-1,73,74,84,-1,80,78,79,-1,80,85,78,-1,85,77,78,-1,85,86,77,-1,86,76,77,-1,87,76,86,-1,87,75,76,-1,74,75,87,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #17, 608 total numbers */
	this.IndexedFaceSet_11_17_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,0,3,1,-1,4,3,0,-1,5,3,4,-1,5,4,6,-1,7,5,6,-1,8,5,7,-1,9,8,7,-1,10,8,9,-1,11,10,9,-1,12,10,11,-1,13,10,12,-1,12,14,13,-1,14,15,13,-1,14,16,15,-1,16,17,15,-1,17,18,15,-1,17,19,18,-1,19,20,18,-1,19,21,20,-1,21,22,20,-1,22,23,20,-1,22,24,23,-1,23,24,25,-1,24,26,25,-1,26,27,25,-1,25,27,28,-1,27,29,28,-1,30,31,32,-1,31,33,32,-1,32,33,34,-1,32,34,35,-1,36,35,34,-1,36,37,35,-1,38,37,36,-1,39,37,38,-1,39,40,37,-1,41,40,39,-1,41,1,40,-1,2,1,41,-1,6,4,42,-1,42,4,43,-1,43,4,0,-1,43,0,2,-1,44,11,9,-1,44,9,42,-1,9,7,42,-1,7,6,42,-1,45,16,14,-1,44,45,14,-1,44,14,12,-1,12,11,44,-1,46,21,19,-1,46,19,47,-1,45,47,19,-1,45,19,17,-1,45,17,16,-1,24,48,26,-1,48,24,46,-1,46,24,22,-1,46,22,21,-1,29,49,50,-1,48,49,29,-1,48,29,27,-1,48,27,26,-1,51,38,36,-1,52,51,36,-1,52,36,34,-1,33,52,34,-1,43,2,41,-1,43,41,53,-1,51,53,41,-1,51,41,39,-1,51,39,38,-1,54,55,56,-1,55,57,58,-1,54,57,55,-1,54,59,57,-1,60,61,62,-1,62,56,63,-1,62,61,56,-1,61,54,56,-1,64,65,66,-1,66,65,67,-1,67,65,68,-1,67,69,70,-1,67,68,69,-1,71,70,72,-1,70,69,72,-1,73,74,75,-1,74,71,75,-1,71,72,75,-1,65,76,68,-1,65,77,76,-1,68,78,69,-1,68,76,78,-1,72,69,79,-1,69,78,79,-1,75,72,80,-1,72,79,80,-1,77,81,76,-1,77,82,81,-1,76,83,78,-1,76,81,83,-1,79,78,84,-1,78,83,84,-1,80,79,85,-1,79,84,85,-1,64,86,87,-1,64,87,65,-1,88,75,89,-1,73,75,88,-1,89,80,90,-1,75,80,89,-1,90,85,91,-1,80,85,90,-1,91,84,84,-1,91,85,84,-1,84,83,83,-1,84,84,83,-1,83,81,81,-1,83,83,81,-1,81,82,92,-1,81,81,82,-1,77,77,92,-1,77,92,82,-1,65,87,77,-1,65,77,77,-1,86,93,87,-1,86,94,93,-1,94,95,93,-1,94,96,95,-1,96,72,95,-1,71,72,96,-1,71,89,72,-1,88,89,71,-1,87,97,77,-1,87,93,97,-1,93,98,97,-1,93,95,98,-1,95,79,98,-1,72,79,95,-1,72,90,79,-1,89,90,72,-1,77,81,92,-1,77,97,81,-1,97,83,81,-1,97,98,83,-1,98,84,83,-1,79,84,98,-1,79,91,84,-1,90,91,79,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #17, 264 total numbers made up of 88 3-tuple values */
	this.Coordinate_12_17_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.59542),doubleToFloat(.40672),doubleToFloat(-.04385),doubleToFloat(-2.59542),doubleToFloat(.16804),doubleToFloat(.17484),doubleToFloat(-2.63381),doubleToFloat(.17914),doubleToFloat(-.04198),doubleToFloat(-2.58518),doubleToFloat(.45433),doubleToFloat(.17346),doubleToFloat(-2.363),doubleToFloat(.67522),doubleToFloat(-.0505),doubleToFloat(-2.18486),doubleToFloat(.6614),doubleToFloat(.16294),doubleToFloat(-2.20099),doubleToFloat(.71668),doubleToFloat(-.0546),doubleToFloat(-2.03998),doubleToFloat(.71438),doubleToFloat(-.05846),doubleToFloat(-1.87694),doubleToFloat(.75892),doubleToFloat(.15511),doubleToFloat(-1.71799),doubleToFloat(.71003),doubleToFloat(-.06624)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.56083),doubleToFloat(.65321),doubleToFloat(.14789),doubleToFloat(-1.55699),doubleToFloat(.70798),doubleToFloat(-.07013),doubleToFloat(-1.36733),doubleToFloat(.60406),doubleToFloat(-.0743),doubleToFloat(-1.17076),doubleToFloat(.44818),doubleToFloat(.1397),doubleToFloat(-1.14337),doubleToFloat(.32942),doubleToFloat(-.07863),doubleToFloat(-1.1623),doubleToFloat(.14874),doubleToFloat(.14024),doubleToFloat(-1.13876),doubleToFloat(.15915),doubleToFloat(-.07807),doubleToFloat(-1.16998),doubleToFloat(-.03248),doubleToFloat(-.07656),doubleToFloat(-1.17971),doubleToFloat(-.21654),doubleToFloat(.14211),doubleToFloat(-1.1751),doubleToFloat(-.41644),doubleToFloat(-.07489)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.24754),doubleToFloat(-.59306),doubleToFloat(.14526),doubleToFloat(-1.17767),doubleToFloat(-.60867),doubleToFloat(-.07407),doubleToFloat(-1.22936),doubleToFloat(-.74356),doubleToFloat(-.07228),doubleToFloat(-1.40188),doubleToFloat(-1.01667),doubleToFloat(.15066),doubleToFloat(-1.46254),doubleToFloat(-1.01206),doubleToFloat(-.06558),doubleToFloat(-1.60793),doubleToFloat(-1.11598),doubleToFloat(.15603),doubleToFloat(-1.60588),doubleToFloat(-1.14592),doubleToFloat(-.06158),doubleToFloat(-1.75459),doubleToFloat(-1.14413),doubleToFloat(-.058),doubleToFloat(-1.89204),doubleToFloat(-1.18637),doubleToFloat(.1632),doubleToFloat(-2.05253),doubleToFloat(-1.14004),doubleToFloat(-.05081)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.18461),doubleToFloat(-1.1083),doubleToFloat(.16996),doubleToFloat(-2.20124),doubleToFloat(-1.13799),doubleToFloat(-.04722),doubleToFloat(-2.34074),doubleToFloat(-1.00029),doubleToFloat(-.04438),doubleToFloat(-2.39526),doubleToFloat(-.99952),doubleToFloat(.17461),doubleToFloat(-2.56726),doubleToFloat(-.72564),doubleToFloat(-.04003),doubleToFloat(-2.55958),doubleToFloat(-.57181),doubleToFloat(.17692),doubleToFloat(-2.61589),doubleToFloat(-.58922),doubleToFloat(-.03939),doubleToFloat(-2.61334),doubleToFloat(-.39725),doubleToFloat(-.04021),doubleToFloat(-2.5903),doubleToFloat(-.21096),doubleToFloat(.17618),doubleToFloat(-2.60822),doubleToFloat(-.01325),doubleToFloat(-.04185)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.23631),doubleToFloat(.78554),doubleToFloat(-.42412),doubleToFloat(-2.73363),doubleToFloat(.15821),doubleToFloat(-.40953),doubleToFloat(-1.54369),doubleToFloat(.77607),doubleToFloat(-.44076),doubleToFloat(-1.06222),doubleToFloat(.13584),doubleToFloat(-.44997),doubleToFloat(-1.07528),doubleToFloat(-.75841),doubleToFloat(-.48555),doubleToFloat(-1.06581),doubleToFloat(-.1299),doubleToFloat(-.44895),doubleToFloat(-1.57542),doubleToFloat(-1.38294),doubleToFloat(-.53419),doubleToFloat(-2.26804),doubleToFloat(-1.37373),doubleToFloat(-.51755),doubleToFloat(-2.74643),doubleToFloat(-.73614),doubleToFloat(-.44537),doubleToFloat(-2.73875),doubleToFloat(-.1075),doubleToFloat(-.40851)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.56215),doubleToFloat(-.57386),doubleToFloat(.16514),doubleToFloat(-2.50353),doubleToFloat(-1.21043),doubleToFloat(.26184),doubleToFloat(-2.39551),doubleToFloat(-.99952),doubleToFloat(.16619),doubleToFloat(-2.18512),doubleToFloat(-1.1106),doubleToFloat(.15818),doubleToFloat(-2.20636),doubleToFloat(-1.38115),doubleToFloat(.23807),doubleToFloat(-1.89256),doubleToFloat(-1.43055),doubleToFloat(.2243),doubleToFloat(-1.8923),doubleToFloat(-1.18867),doubleToFloat(.15143),doubleToFloat(-1.60818),doubleToFloat(-1.11802),doubleToFloat(.14426),doubleToFloat(-1.58899),doubleToFloat(-1.38909),doubleToFloat(.22314),doubleToFloat(-1.2478),doubleToFloat(-.5951),doubleToFloat(.13348)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.4024),doubleToFloat(-1.01692),doubleToFloat(.13653),doubleToFloat(-1.29515),doubleToFloat(-1.23602),doubleToFloat(.23349),doubleToFloat(-2.16208),doubleToFloat(-1.55085),doubleToFloat(.2813),doubleToFloat(-2.39219),doubleToFloat(-1.50043),doubleToFloat(.31841),doubleToFloat(-1.89332),doubleToFloat(-1.57799),doubleToFloat(.2598),doubleToFloat(-1.63532),doubleToFloat(-1.55776),doubleToFloat(.2685),doubleToFloat(-1.41033),doubleToFloat(-1.52295),doubleToFloat(.29538),doubleToFloat(-2.12446),doubleToFloat(-1.70955),doubleToFloat(.31969),doubleToFloat(-2.24833),doubleToFloat(-1.6604),doubleToFloat(.32481),doubleToFloat(-1.89435),doubleToFloat(-1.74743),doubleToFloat(.29921)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.67448),doubleToFloat(-1.71544),doubleToFloat(.30868),doubleToFloat(-1.54906),doubleToFloat(-1.66962),doubleToFloat(.30792),doubleToFloat(-2.50302),doubleToFloat(-1.20736),doubleToFloat(.27362),doubleToFloat(-1.29464),doubleToFloat(-1.23295),doubleToFloat(.24505),doubleToFloat(-1.40982),doubleToFloat(-1.51988),doubleToFloat(.30689),doubleToFloat(-1.54855),doubleToFloat(-1.66655),doubleToFloat(.31944),doubleToFloat(-1.67396),doubleToFloat(-1.71236),doubleToFloat(.32046),doubleToFloat(-1.89383),doubleToFloat(-1.74435),doubleToFloat(.31099),doubleToFloat(-2.12395),doubleToFloat(-1.70647),doubleToFloat(.33121),doubleToFloat(-2.24808),doubleToFloat(-1.65733),doubleToFloat(.33633)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.39193),doubleToFloat(-1.49736),doubleToFloat(.32993),doubleToFloat(-2.20585),doubleToFloat(-1.37808),doubleToFloat(.24966),doubleToFloat(-1.8923),doubleToFloat(-1.42748),doubleToFloat(.23589),doubleToFloat(-1.89179),doubleToFloat(-1.18637),doubleToFloat(.1632),doubleToFloat(-1.58873),doubleToFloat(-1.38602),doubleToFloat(.23474),doubleToFloat(-2.16157),doubleToFloat(-1.54778),doubleToFloat(.29282),doubleToFloat(-1.89282),doubleToFloat(-1.57491),doubleToFloat(.27131),doubleToFloat(-1.6348),doubleToFloat(-1.5547),doubleToFloat(.28028)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #18, 198 total numbers made up of 99 2-tuple values */
	this.TextureCoordinate_12_18_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(.19),doubleToFloat(.768),doubleToFloat(.209),doubleToFloat(.759),doubleToFloat(.19),doubleToFloat(.758),doubleToFloat(.209),doubleToFloat(.769),doubleToFloat(.19),doubleToFloat(.78),doubleToFloat(.209),doubleToFloat(.786),doubleToFloat(.19),doubleToFloat(.786),doubleToFloat(.19),doubleToFloat(.791),doubleToFloat(.209),doubleToFloat(.796),doubleToFloat(.19),doubleToFloat(.801)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.208),doubleToFloat(.807),doubleToFloat(.19),doubleToFloat(.806),doubleToFloat(.19),doubleToFloat(.814),doubleToFloat(.208),doubleToFloat(.823),doubleToFloat(.189),doubleToFloat(.827),doubleToFloat(.208),doubleToFloat(.834),doubleToFloat(.189),doubleToFloat(.834),doubleToFloat(.189),doubleToFloat(.843),doubleToFloat(.208),doubleToFloat(.856),doubleToFloat(.189),doubleToFloat(.871)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.207),doubleToFloat(.885),doubleToFloat(.189),doubleToFloat(.883),doubleToFloat(.188),doubleToFloat(.892),doubleToFloat(.207),doubleToFloat(.908),doubleToFloat(.188),doubleToFloat(.91),doubleToFloat(.207),doubleToFloat(.918),doubleToFloat(.188),doubleToFloat(.917),doubleToFloat(.188),doubleToFloat(.923),doubleToFloat(.207),doubleToFloat(.929),doubleToFloat(.188),doubleToFloat(.935)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.21),doubleToFloat(.663),doubleToFloat(.192),doubleToFloat(.669),doubleToFloat(.21),doubleToFloat(.675),doubleToFloat(.192),doubleToFloat(.675),doubleToFloat(.191),doubleToFloat(.682),doubleToFloat(.21),doubleToFloat(.685),doubleToFloat(.191),doubleToFloat(.7),doubleToFloat(.21),doubleToFloat(.709),doubleToFloat(.191),doubleToFloat(.709),doubleToFloat(.191),doubleToFloat(.722)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.209),doubleToFloat(.736),doubleToFloat(.191),doubleToFloat(.749),doubleToFloat(.16),doubleToFloat(.786),doubleToFloat(.161),doubleToFloat(.755),doubleToFloat(.16),doubleToFloat(.806),doubleToFloat(.159),doubleToFloat(.837),doubleToFloat(.153),doubleToFloat(.888),doubleToFloat(.159),doubleToFloat(.851),doubleToFloat(.147),doubleToFloat(.918),doubleToFloat(.147),doubleToFloat(.939)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.188),doubleToFloat(.94),doubleToFloat(.156),doubleToFloat(.704),doubleToFloat(.151),doubleToFloat(.673),doubleToFloat(.161),doubleToFloat(.741),doubleToFloat(.348),doubleToFloat(.217),doubleToFloat(.436),doubleToFloat(.24),doubleToFloat(.436),doubleToFloat(.217),doubleToFloat(.374),doubleToFloat(.263),doubleToFloat(.41),doubleToFloat(.263),doubleToFloat(.348),doubleToFloat(.24)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.374),doubleToFloat(.184),doubleToFloat(.348),doubleToFloat(.207),doubleToFloat(.41),doubleToFloat(.184),doubleToFloat(.436),doubleToFloat(.207),doubleToFloat(.356),doubleToFloat(.234),doubleToFloat(.36),doubleToFloat(.253),doubleToFloat(.365),doubleToFloat(.249),doubleToFloat(.377),doubleToFloat(.253),doubleToFloat(.376),doubleToFloat(.259),doubleToFloat(.392),doubleToFloat(.261)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.392),doubleToFloat(.256),doubleToFloat(.407),doubleToFloat(.253),doubleToFloat(.408),doubleToFloat(.259),doubleToFloat(.426),doubleToFloat(.234),doubleToFloat(.418),doubleToFloat(.25),doubleToFloat(.424),doubleToFloat(.254),doubleToFloat(.378),doubleToFloat(.266),doubleToFloat(.366),doubleToFloat(.264),doubleToFloat(.392),doubleToFloat(.267),doubleToFloat(.406),doubleToFloat(.266)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.418),doubleToFloat(.264),doubleToFloat(.38),doubleToFloat(.272),doubleToFloat(.374),doubleToFloat(.27),doubleToFloat(.392),doubleToFloat(.273),doubleToFloat(.404),doubleToFloat(.272),doubleToFloat(.411),doubleToFloat(.27),doubleToFloat(.356),doubleToFloat(.234),doubleToFloat(.36),doubleToFloat(.253),doubleToFloat(.426),doubleToFloat(.234),doubleToFloat(.424),doubleToFloat(.254)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.418),doubleToFloat(.264),doubleToFloat(.411),doubleToFloat(.27),doubleToFloat(.374),doubleToFloat(.27),doubleToFloat(.376),doubleToFloat(.259),doubleToFloat(.377),doubleToFloat(.253),doubleToFloat(.392),doubleToFloat(.261),doubleToFloat(.392),doubleToFloat(.256),doubleToFloat(.378),doubleToFloat(.266),doubleToFloat(.392),doubleToFloat(.266)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #25, 1184 total numbers */
	this.IndexedFaceSet_11_25_coordIndex = new MFInt32(Java.to([0,1,2,-1,3,4,1,-1,5,3,6,-1,0,7,8,-1,9,10,11,-1,12,13,14,-1,8,15,16,-1,17,18,19,-1,20,21,22,-1,23,24,25,-1,26,27,28,-1,5,4,3,-1,29,3,30,-1,31,32,33,-1,15,34,16,-1,12,35,36,-1,37,23,38,-1,17,39,18,-1,33,40,41,-1,17,42,39,-1,43,9,25,-1,14,37,38,-1,24,43,25,-1,44,45,39,-1,44,39,46,-1,20,47,21,-1,48,49,47,-1,30,0,50,-1,46,31,10,-1,10,31,11,-1,51,52,25,-1,15,53,34,-1,54,13,36,-1,52,35,55,-1,23,25,55,-1,23,55,38,-1,25,52,55,-1,42,56,57,-1,21,47,42,-1,9,51,25,-1,58,11,33,-1,21,17,19,-1,18,39,45,-1,48,47,20,-1,42,47,49,-1,22,21,19,-1,17,21,42,-1,42,57,31,-1,48,29,49,-1,6,3,59,-1,49,60,56,-1,55,35,38,-1,38,35,12,-1,43,61,9,-1,39,42,46,-1,61,10,9,-1,49,29,60,-1,30,3,0,-1,62,63,50,-1,63,30,50,-1,30,63,64,-1,65,66,60,-1,30,64,60,-1,66,65,57,-1,66,56,60,-1,66,57,56,-1,57,64,62,-1,42,49,56,-1,31,33,11,-1,32,40,33,-1,67,36,26,-1,35,26,36,-1,35,68,26,-1,69,70,71,-1,54,36,67,-1,40,50,72,-1,3,1,0,-1,73,7,74,-1,0,2,7,-1,51,9,75,-1,58,76,11,-1,52,77,78,-1,58,33,79,-1,75,9,11,-1,78,58,79,-1,80,81,28,-1,26,8,16,-1,73,15,8,-1,7,73,8,-1,82,44,61,-1,44,46,61,-1,42,31,46,-1,62,50,40,-1,40,83,41,-1,72,0,8,-1,50,0,72,-1,68,8,26,-1,83,8,68,-1,77,84,78,-1,84,58,78,-1,73,53,15,-1,52,78,79,-1,35,79,41,-1,85,74,86,-1,87,88,89,-1,87,5,6,-1,88,90,85,-1,91,92,93,-1,94,95,14,-1,90,96,97,-1,19,18,98,-1,20,22,99,-1,100,24,23,-1,101,102,96,-1,103,5,87,-1,104,105,106,-1,107,108,109,-1,97,96,34,-1,110,13,54,-1,95,23,37,-1,98,18,111,-1,108,112,109,-1,98,111,113,-1,100,114,24,-1,95,37,14,-1,114,115,24,-1,111,45,44,-1,116,111,44,-1,117,20,99,-1,118,48,117,-1,105,119,88,-1,116,92,120,-1,92,91,120,-1,121,100,122,-1,97,34,53,-1,110,94,13,-1,122,123,124,-1,123,100,23,-1,95,123,23,-1,100,123,122,-1,113,120,125,-1,99,113,117,-1,93,100,121,-1,108,91,126,-1,22,19,99,-1,18,45,111,-1,117,48,20,-1,113,118,117,-1,99,19,98,-1,98,113,99,-1,113,125,127,-1,106,59,48,-1,87,6,59,-1,118,127,104,-1,123,95,124,-1,94,14,13,-1,114,82,115,-1,111,116,113,-1,93,128,114,-1,106,105,87,-1,105,88,87,-1,125,129,130,-1,131,119,105,-1,130,131,105,-1,130,104,132,-1,130,105,104,-1,132,125,130,-1,104,127,133,-1,133,127,125,-1,130,129,131,-1,113,127,118,-1,120,91,108,-1,125,109,129,-1,101,134,135,-1,112,124,136,-1,124,110,101,-1,96,137,34,-1,138,139,70,-1,134,69,135,-1,109,140,119,-1,87,89,103,-1,85,73,74,-1,88,86,89,-1,141,91,93,-1,126,91,142,-1,143,121,122,-1,112,108,144,-1,91,141,142,-1,135,81,80,-1,101,96,90,-1,73,90,97,-1,85,90,73,-1,116,44,128,-1,116,128,92,-1,113,116,120,-1,120,108,107,-1,136,124,101,-1,140,90,88,-1,119,140,88,-1,109,145,140,-1,145,90,140,-1,142,141,146,-1,126,142,146,-1,73,97,53,-1,112,144,124,-1,144,122,124,-1,106,87,59,-1,59,29,48,-1,60,29,30,-1,59,3,29,-1,118,104,106,-1,118,106,48,-1,135,69,81,-1,81,69,28,-1,147,70,139,-1,71,26,28,-1,110,54,148,-1,101,110,148,-1,147,139,67,-1,148,54,139,-1,101,148,138,-1,138,148,139,-1,139,54,67,-1,26,147,67,-1,69,71,28,-1,134,70,69,-1,138,70,134,-1,101,138,134,-1,26,71,147,-1,147,71,70,-1,135,80,102,-1,80,28,27,-1,144,126,149,-1,108,126,144,-1,144,149,122,-1,52,79,35,-1,79,33,41,-1,128,82,114,-1,93,114,100,-1,115,82,43,-1,24,115,43,-1,128,44,82,-1,92,128,93,-1,61,46,10,-1,82,61,43,-1,101,135,102,-1,137,150,27,-1,27,150,80,-1,137,27,16,-1,27,26,16,-1,150,102,80,-1,102,150,137,-1,96,102,137,-1,34,137,16,-1,129,119,131,-1,129,109,119,-1,64,63,62,-1,57,62,40,-1,88,85,86,-1,74,7,2,-1,126,146,149,-1,149,143,122,-1,84,76,58,-1,151,75,84,-1,133,125,132,-1,132,104,133,-1,65,64,57,-1,60,64,65,-1,141,121,152,-1,121,141,93,-1,75,76,84,-1,75,11,76,-1,146,141,152,-1,149,146,143,-1,51,75,151,-1,51,77,52,-1,146,152,143,-1,143,152,121,-1,51,151,77,-1,151,84,77,-1,120,107,125,-1,125,107,109,-1,57,40,32,-1,31,57,32,-1,112,136,145,-1,109,112,145,-1,145,136,90,-1,136,101,90,-1,83,72,8,-1,40,72,83,-1,41,83,68,-1,35,41,68,-1,95,94,124,-1,124,94,110,-1,12,14,38,-1,13,12,36,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #25, 1184 total numbers */
	this.IndexedFaceSet_11_25_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,3,4,5,-1,6,3,7,-1,0,8,9,-1,10,11,12,-1,13,14,15,-1,9,16,17,-1,18,19,20,-1,21,22,23,-1,24,25,26,-1,27,28,29,-1,6,4,3,-1,30,3,31,-1,32,33,34,-1,16,35,17,-1,13,36,37,-1,38,24,39,-1,18,40,19,-1,34,41,42,-1,18,43,40,-1,44,10,26,-1,15,38,39,-1,25,44,26,-1,45,46,40,-1,45,40,47,-1,21,48,22,-1,49,50,48,-1,31,51,52,-1,47,32,11,-1,11,32,12,-1,53,54,26,-1,16,55,35,-1,56,14,37,-1,54,36,57,-1,24,26,57,-1,24,57,39,-1,26,54,57,-1,58,59,60,-1,22,48,58,-1,10,53,26,-1,61,12,34,-1,22,18,20,-1,19,40,46,-1,49,48,21,-1,58,48,50,-1,23,22,20,-1,18,22,58,-1,43,62,32,-1,49,30,50,-1,7,3,63,-1,50,64,59,-1,57,36,39,-1,39,36,13,-1,44,65,10,-1,40,43,47,-1,65,11,10,-1,50,30,64,-1,31,3,51,-1,66,67,68,-1,69,31,52,-1,31,69,70,-1,71,72,64,-1,31,70,64,-1,73,74,75,-1,72,59,64,-1,72,60,59,-1,75,76,66,-1,58,50,59,-1,32,34,12,-1,33,41,34,-1,77,37,27,-1,36,27,37,-1,36,78,27,-1,79,80,81,-1,56,37,77,-1,41,82,83,-1,3,5,51,-1,84,8,85,-1,0,2,8,-1,53,10,86,-1,61,87,12,-1,54,88,89,-1,61,34,90,-1,86,10,12,-1,89,61,90,-1,91,92,29,-1,27,9,17,-1,84,16,9,-1,8,84,9,-1,93,45,65,-1,45,47,65,-1,43,32,47,-1,94,82,41,-1,41,95,42,-1,83,0,9,-1,52,51,96,-1,78,9,27,-1,95,9,78,-1,88,97,89,-1,97,61,89,-1,84,55,16,-1,54,89,90,-1,36,90,42,-1,98,85,99,-1,100,101,102,-1,100,6,7,-1,103,104,98,-1,105,106,107,-1,108,109,15,-1,104,110,111,-1,20,19,112,-1,21,23,113,-1,114,25,24,-1,115,116,110,-1,117,6,100,-1,118,119,120,-1,121,122,123,-1,111,110,35,-1,124,14,56,-1,109,24,38,-1,112,19,125,-1,122,126,123,-1,112,125,127,-1,114,128,25,-1,109,38,15,-1,128,129,25,-1,125,46,45,-1,130,125,45,-1,131,21,113,-1,132,49,131,-1,119,133,101,-1,130,106,134,-1,106,105,134,-1,135,114,136,-1,111,35,55,-1,124,108,14,-1,136,137,138,-1,137,114,24,-1,109,137,24,-1,114,137,136,-1,127,134,139,-1,113,140,131,-1,107,114,135,-1,122,105,141,-1,23,20,113,-1,19,46,125,-1,131,49,21,-1,140,132,131,-1,113,20,112,-1,112,140,113,-1,140,142,143,-1,120,63,49,-1,100,7,63,-1,132,143,118,-1,137,109,138,-1,108,15,14,-1,128,93,129,-1,125,130,127,-1,107,144,128,-1,120,119,100,-1,119,101,100,-1,145,146,147,-1,148,133,119,-1,149,148,119,-1,149,118,150,-1,149,119,118,-1,151,145,147,-1,118,143,152,-1,152,143,142,-1,147,146,153,-1,140,143,132,-1,134,105,122,-1,139,123,154,-1,115,155,156,-1,126,138,157,-1,138,124,115,-1,110,158,35,-1,159,160,80,-1,155,79,156,-1,123,161,162,-1,100,102,117,-1,98,84,85,-1,103,99,163,-1,164,105,107,-1,141,105,165,-1,166,135,136,-1,126,122,167,-1,105,164,165,-1,156,92,91,-1,115,110,104,-1,84,104,111,-1,98,104,84,-1,130,45,144,-1,130,144,106,-1,127,130,134,-1,134,122,121,-1,157,138,115,-1,161,104,103,-1,133,168,101,-1,123,169,161,-1,169,104,161,-1,165,164,170,-1,141,165,170,-1,84,111,55,-1,126,167,138,-1,167,136,138,-1,120,100,63,-1,63,30,49,-1,64,30,31,-1,63,3,30,-1,132,118,120,-1,132,120,49,-1,156,79,92,-1,92,79,29,-1,171,80,160,-1,81,27,29,-1,124,56,172,-1,115,124,172,-1,171,160,77,-1,172,56,160,-1,115,172,159,-1,159,172,160,-1,160,56,77,-1,27,171,77,-1,79,81,29,-1,155,80,79,-1,159,80,155,-1,115,159,155,-1,27,81,171,-1,171,81,80,-1,156,91,116,-1,91,29,28,-1,167,141,173,-1,122,141,167,-1,167,173,136,-1,54,90,36,-1,90,34,42,-1,144,93,128,-1,107,128,114,-1,129,93,44,-1,25,129,44,-1,144,45,93,-1,106,144,107,-1,65,47,11,-1,93,65,44,-1,115,156,116,-1,158,174,28,-1,28,174,91,-1,158,28,17,-1,28,27,17,-1,174,116,91,-1,116,174,158,-1,110,116,158,-1,35,158,17,-1,146,175,153,-1,154,123,162,-1,76,67,66,-1,62,94,41,-1,103,98,99,-1,85,8,2,-1,141,170,173,-1,173,166,136,-1,97,87,61,-1,176,86,97,-1,177,145,151,-1,150,118,152,-1,74,76,75,-1,64,70,71,-1,164,135,178,-1,135,164,107,-1,86,87,97,-1,86,12,87,-1,170,164,178,-1,173,170,166,-1,53,86,176,-1,53,88,54,-1,170,178,166,-1,166,178,135,-1,53,176,88,-1,176,97,88,-1,134,121,139,-1,139,121,123,-1,62,41,33,-1,32,62,33,-1,126,157,169,-1,123,126,169,-1,169,157,104,-1,157,115,104,-1,95,83,9,-1,41,83,95,-1,42,95,78,-1,36,42,78,-1,109,108,138,-1,138,108,124,-1,13,15,39,-1,14,13,37,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #25, 459 total numbers made up of 153 3-tuple values */
	this.Coordinate_12_25_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(.15404),doubleToFloat(.19995),doubleToFloat(-1.40674),doubleToFloat(.16097),doubleToFloat(.14052),doubleToFloat(-1.28005),doubleToFloat(.12273),doubleToFloat(.25954),doubleToFloat(-1.16717),doubleToFloat(.13489),doubleToFloat(.06934),doubleToFloat(-1.46382),doubleToFloat(.12368),doubleToFloat(.00615),doubleToFloat(-1.34404),doubleToFloat(.0101),doubleToFloat(-.01015),doubleToFloat(-1.35325),doubleToFloat(.02131),doubleToFloat(.01768),doubleToFloat(-1.41596),doubleToFloat(.12452),doubleToFloat(.26773),doubleToFloat(-1.3576),doubleToFloat(.12626),doubleToFloat(.34401),doubleToFloat(-1.34788),doubleToFloat(.07779),doubleToFloat(.43308),doubleToFloat(-1.61612)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.15176),doubleToFloat(.40493),doubleToFloat(-1.6412),doubleToFloat(.15107),doubleToFloat(.41107),doubleToFloat(-1.61254),doubleToFloat(.0665),doubleToFloat(.43257),doubleToFloat(-1.47509),doubleToFloat(.03614),doubleToFloat(.451),doubleToFloat(-1.46971),doubleToFloat(.03686),doubleToFloat(.47736),doubleToFloat(-1.482),doubleToFloat(.06742),doubleToFloat(.39699),doubleToFloat(-1.30948),doubleToFloat(.08518),doubleToFloat(.419),doubleToFloat(-1.33354),doubleToFloat(.15045),doubleToFloat(.19793),doubleToFloat(-1.80015),doubleToFloat(.04362),doubleToFloat(.34503),doubleToFloat(-1.79683),doubleToFloat(.04269),doubleToFloat(.21406),doubleToFloat(-1.83087)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.03819),doubleToFloat(.02254),doubleToFloat(-1.76458),doubleToFloat(.14372),doubleToFloat(.10594),doubleToFloat(-1.79145),doubleToFloat(.04067),doubleToFloat(.10251),doubleToFloat(-1.81423),doubleToFloat(.03821),doubleToFloat(.46149),doubleToFloat(-1.5401),doubleToFloat(.03911),doubleToFloat(.42847),doubleToFloat(-1.58925),doubleToFloat(.06),doubleToFloat(.42335),doubleToFloat(-1.58361),doubleToFloat(.11467),doubleToFloat(.40646),doubleToFloat(-1.41289),doubleToFloat(.05677),doubleToFloat(.43231),doubleToFloat(-1.38703),doubleToFloat(.08319),doubleToFloat(.43769),doubleToFloat(-1.40342),doubleToFloat(.17797),doubleToFloat(.05119),doubleToFloat(-1.54215)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.18493),doubleToFloat(.16722),doubleToFloat(-1.49812),doubleToFloat(.17717),doubleToFloat(.3696),doubleToFloat(-1.63301),doubleToFloat(.18396),doubleToFloat(.32123),doubleToFloat(-1.58208),doubleToFloat(.16763),doubleToFloat(.36704),doubleToFloat(-1.57108),doubleToFloat(.03207),doubleToFloat(.43385),doubleToFloat(-1.32996),doubleToFloat(.09015),doubleToFloat(.41824),doubleToFloat(-1.49224),doubleToFloat(.08083),doubleToFloat(.43718),doubleToFloat(-1.44591),doubleToFloat(.03765),doubleToFloat(.48504),doubleToFloat(-1.50682),doubleToFloat(.07136),doubleToFloat(.47327),doubleToFloat(-1.49966),doubleToFloat(.14654),doubleToFloat(.37012),doubleToFloat(-1.73616)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.19711),doubleToFloat(.31253),doubleToFloat(-1.55059),doubleToFloat(.16417),doubleToFloat(.37907),doubleToFloat(-1.49557),doubleToFloat(.19883),doubleToFloat(.19855),doubleToFloat(-1.71748),doubleToFloat(.05882),doubleToFloat(.43487),doubleToFloat(-1.61408),doubleToFloat(.04164),doubleToFloat(.42156),doubleToFloat(-1.68548),doubleToFloat(.04303),doubleToFloat(.4016),doubleToFloat(-1.7464),doubleToFloat(.15432),doubleToFloat(.38752),doubleToFloat(-1.67038),doubleToFloat(.19693),doubleToFloat(.06015),doubleToFloat(-1.69573),doubleToFloat(.03407),doubleToFloat(-.02782),doubleToFloat(-1.64018),doubleToFloat(.19376),doubleToFloat(.04274),doubleToFloat(-1.63839)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.19007),doubleToFloat(.20423),doubleToFloat(-1.4866),doubleToFloat(.06929),doubleToFloat(.39802),doubleToFloat(-1.58848),doubleToFloat(.08516),doubleToFloat(.41593),doubleToFloat(-1.54318),doubleToFloat(.03095),doubleToFloat(.40006),doubleToFloat(-1.30539),doubleToFloat(.03571),doubleToFloat(.45791),doubleToFloat(-1.44975),doubleToFloat(.06983),doubleToFloat(.4487),doubleToFloat(-1.53139),doubleToFloat(.19612),doubleToFloat(.18019),doubleToFloat(-1.61509),doubleToFloat(.18918),doubleToFloat(.203),doubleToFloat(-1.60384),doubleToFloat(.14526),doubleToFloat(.38599),doubleToFloat(-1.58643),doubleToFloat(.03156),doubleToFloat(-.01581),doubleToFloat(-1.5424)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.1966),doubleToFloat(.14585),doubleToFloat(-1.59692),doubleToFloat(.06681),doubleToFloat(.4359),doubleToFloat(-1.64326),doubleToFloat(.19729),doubleToFloat(.20354),doubleToFloat(-1.55162),doubleToFloat(.21035),doubleToFloat(.16082),doubleToFloat(-1.49505),doubleToFloat(.23579),doubleToFloat(.12675),doubleToFloat(-1.58285),doubleToFloat(.22737),doubleToFloat(.13939),doubleToFloat(-1.6174),doubleToFloat(.21255),doubleToFloat(.17817),doubleToFloat(-1.63046),doubleToFloat(.07625),doubleToFloat(.43718),doubleToFloat(-1.43362),doubleToFloat(.15549),doubleToFloat(.37293),doubleToFloat(-1.46997),doubleToFloat(.03453),doubleToFloat(.45279),doubleToFloat(-1.41238)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.03473),doubleToFloat(.44281),doubleToFloat(-1.42236),doubleToFloat(.08677),doubleToFloat(.43539),doubleToFloat(-1.41596),doubleToFloat(.17687),doubleToFloat(.24874),doubleToFloat(-1.42185),doubleToFloat(.03304),doubleToFloat(.31739),doubleToFloat(-1.31102),doubleToFloat(.04779),doubleToFloat(.29205),doubleToFloat(-1.15207),doubleToFloat(.09248),doubleToFloat(.39827),doubleToFloat(-1.60435),doubleToFloat(.12718),doubleToFloat(.40365),doubleToFloat(-1.59846),doubleToFloat(.08633),doubleToFloat(.39725),doubleToFloat(-1.57619),doubleToFloat(.12782),doubleToFloat(.39366),doubleToFloat(-1.57389),doubleToFloat(.14602),doubleToFloat(.39034),doubleToFloat(-1.54164)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.03391),doubleToFloat(.44255),doubleToFloat(-1.39242),doubleToFloat(.03427),doubleToFloat(.45023),doubleToFloat(-1.4047),doubleToFloat(.04075),doubleToFloat(.43871),doubleToFloat(-1.64402),doubleToFloat(.16445),doubleToFloat(.34606),doubleToFloat(-1.47688),doubleToFloat(.1095),doubleToFloat(.408),doubleToFloat(-1.58848),doubleToFloat(-.06028),doubleToFloat(.27311),doubleToFloat(-1.3594),doubleToFloat(-.03281),doubleToFloat(.27311),doubleToFloat(-1.15821),doubleToFloat(-.08019),doubleToFloat(.07561),doubleToFloat(-1.46587),doubleToFloat(-.09235),doubleToFloat(.22163),doubleToFloat(-1.40905),doubleToFloat(-.10346),doubleToFloat(.16338),doubleToFloat(-1.26495)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.06348),doubleToFloat(.34657),doubleToFloat(-1.35325),doubleToFloat(-.07185),doubleToFloat(.4144),doubleToFloat(-1.61868),doubleToFloat(-.07116),doubleToFloat(.408),doubleToFloat(-1.64735),doubleToFloat(.0021),doubleToFloat(.43411),doubleToFloat(-1.61817),doubleToFloat(.00536),doubleToFloat(.43308),doubleToFloat(-1.47688),doubleToFloat(.00328),doubleToFloat(.47429),doubleToFloat(-1.50145),doubleToFloat(-.02115),doubleToFloat(.42054),doubleToFloat(-1.33662),doubleToFloat(-.00534),doubleToFloat(.39802),doubleToFloat(-1.31153),doubleToFloat(-.06678),doubleToFloat(.21546),doubleToFloat(-1.80604),doubleToFloat(-.06335),doubleToFloat(.10886),doubleToFloat(-1.79708)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.01782),doubleToFloat(.42387),doubleToFloat(-1.58489),doubleToFloat(-.04658),doubleToFloat(.40876),doubleToFloat(-1.41724),doubleToFloat(.01052),doubleToFloat(.43308),doubleToFloat(-1.38806),doubleToFloat(-.09721),doubleToFloat(.02524),doubleToFloat(-1.33124),doubleToFloat(-.12562),doubleToFloat(.1504),doubleToFloat(-1.60588),doubleToFloat(-.11879),doubleToFloat(.17152),doubleToFloat(-1.50631),doubleToFloat(-.1127),doubleToFloat(.05529),doubleToFloat(-1.55034),doubleToFloat(-.11019),doubleToFloat(.31688),doubleToFloat(-1.59258),doubleToFloat(-.09189),doubleToFloat(.37088),doubleToFloat(-1.57824),doubleToFloat(-.12399),doubleToFloat(.31713),doubleToFloat(-1.55929)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.01),doubleToFloat(.43846),doubleToFloat(-1.44847),doubleToFloat(-.06171),doubleToFloat(.37293),doubleToFloat(-1.7418),doubleToFloat(-.09225),doubleToFloat(.38266),doubleToFloat(-1.50248),doubleToFloat(-.11956),doubleToFloat(.21754),doubleToFloat(-1.72593),doubleToFloat(.02097),doubleToFloat(.43539),doubleToFloat(-1.61509),doubleToFloat(.03985),doubleToFloat(.43641),doubleToFloat(-1.61228),doubleToFloat(-.07259),doubleToFloat(.39059),doubleToFloat(-1.67653),doubleToFloat(-.12296),doubleToFloat(.06466),doubleToFloat(-1.70443),doubleToFloat(-.12342),doubleToFloat(.04722),doubleToFloat(-1.64709),doubleToFloat(-.12337),doubleToFloat(.22312),doubleToFloat(-1.4925)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.09796),doubleToFloat(.37344),doubleToFloat(-1.64069),doubleToFloat(.00809),doubleToFloat(.39878),doubleToFloat(-1.59027),doubleToFloat(-.00972),doubleToFloat(.41747),doubleToFloat(-1.54573),doubleToFloat(.00585),doubleToFloat(.44946),doubleToFloat(-1.53319),doubleToFloat(-.01743),doubleToFloat(.41977),doubleToFloat(-1.4953),doubleToFloat(-.11603),doubleToFloat(.22179),doubleToFloat(-1.61203),doubleToFloat(-.06819),doubleToFloat(.3888),doubleToFloat(-1.59232),doubleToFloat(-.12007),doubleToFloat(.18465),doubleToFloat(-1.6238),doubleToFloat(.01463),doubleToFloat(.43667),doubleToFloat(-1.64479),doubleToFloat(-.12701),doubleToFloat(.22258),doubleToFloat(-1.55929)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.16607),doubleToFloat(.13241),doubleToFloat(-1.59385),doubleToFloat(-.14449),doubleToFloat(.16584),doubleToFloat(-1.50478),doubleToFloat(-.15598),doubleToFloat(.14206),doubleToFloat(-1.62482),doubleToFloat(-.13881),doubleToFloat(.18314),doubleToFloat(-1.64018),doubleToFloat(-.01504),doubleToFloat(.43667),doubleToFloat(-1.41878),doubleToFloat(-.01496),doubleToFloat(.43922),doubleToFloat(-1.40623),doubleToFloat(-.08554),doubleToFloat(.37677),doubleToFloat(-1.47867),doubleToFloat(.03297),doubleToFloat(.44306),doubleToFloat(-1.3576),doubleToFloat(-.00506),doubleToFloat(.42975),doubleToFloat(-1.42722),doubleToFloat(.03519),doubleToFloat(.45535),doubleToFloat(-1.43234)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.11262),doubleToFloat(.25281),doubleToFloat(-1.42978),doubleToFloat(-.01825),doubleToFloat(.39981),doubleToFloat(-1.60665),doubleToFloat(-.04902),doubleToFloat(.40621),doubleToFloat(-1.60332),doubleToFloat(-.01087),doubleToFloat(.39853),doubleToFloat(-1.57747),doubleToFloat(-.07128),doubleToFloat(.39341),doubleToFloat(-1.54752),doubleToFloat(-.09453),doubleToFloat(.34938),doubleToFloat(-1.48379),doubleToFloat(-.03159),doubleToFloat(.4103),doubleToFloat(-1.59359),doubleToFloat(.07436),doubleToFloat(.42847),doubleToFloat(-1.42518),doubleToFloat(-.00771),doubleToFloat(.43846),doubleToFloat(-1.43592),doubleToFloat(-.05127),doubleToFloat(.39622),doubleToFloat(-1.57875)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.03363),doubleToFloat(.43257),doubleToFloat(-1.38755),doubleToFloat(.08434),doubleToFloat(.39776),doubleToFloat(-1.58899),doubleToFloat(-.00917),doubleToFloat(.39904),doubleToFloat(-1.59334)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #26, 358 total numbers made up of 179 2-tuple values */
	this.TextureCoordinate_12_26_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(.951),doubleToFloat(.192),doubleToFloat(.94),doubleToFloat(.112),doubleToFloat(.846),doubleToFloat(.103),doubleToFloat(.886),doubleToFloat(.652),doubleToFloat(.829),doubleToFloat(.691),doubleToFloat(.91),doubleToFloat(.703),doubleToFloat(.761),doubleToFloat(.696),doubleToFloat(.758),doubleToFloat(.679),doubleToFloat(.868),doubleToFloat(.153),doubleToFloat(.843),doubleToFloat(.182)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.777),doubleToFloat(.388),doubleToFloat(.83),doubleToFloat(.416),doubleToFloat(.828),doubleToFloat(.387),doubleToFloat(.78),doubleToFloat(.279),doubleToFloat(.752),doubleToFloat(.286),doubleToFloat(.752),doubleToFloat(.295),doubleToFloat(.781),doubleToFloat(.173),doubleToFloat(.79),doubleToFloat(.195),doubleToFloat(.846),doubleToFloat(.535),doubleToFloat(.754),doubleToFloat(.517)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.755),doubleToFloat(.529),doubleToFloat(.755),doubleToFloat(.571),doubleToFloat(.874),doubleToFloat(.565),doubleToFloat(.754),doubleToFloat(.549),doubleToFloat(.752),doubleToFloat(.334),doubleToFloat(.752),doubleToFloat(.361),doubleToFloat(.767),doubleToFloat(.359),doubleToFloat(.811),doubleToFloat(.248),doubleToFloat(.768),doubleToFloat(.223),doubleToFloat(.784),doubleToFloat(.237)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.941),doubleToFloat(.608),doubleToFloat(.978),doubleToFloat(.605),doubleToFloat(.872),doubleToFloat(.414),doubleToFloat(.883),doubleToFloat(.386),doubleToFloat(.856),doubleToFloat(.356),doubleToFloat(.752),doubleToFloat(.195),doubleToFloat(.79),doubleToFloat(.303),doubleToFloat(.782),doubleToFloat(.271),doubleToFloat(.752),doubleToFloat(.311),doubleToFloat(.771),doubleToFloat(.307)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.821),doubleToFloat(.517),doubleToFloat(.901),doubleToFloat(.354),doubleToFloat(.849),doubleToFloat(.307),doubleToFloat(.884),doubleToFloat(.53),doubleToFloat(.765),doubleToFloat(.387),doubleToFloat(.752),doubleToFloat(.441),doubleToFloat(.753),doubleToFloat(.507),doubleToFloat(.841),doubleToFloat(.455),doubleToFloat(.883),doubleToFloat(.575),doubleToFloat(.753),doubleToFloat(.593)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.891),doubleToFloat(.587),doubleToFloat(.95),doubleToFloat(.678),doubleToFloat(.989),doubleToFloat(.631),doubleToFloat(.777),doubleToFloat(.37),doubleToFloat(.786),doubleToFloat(.333),doubleToFloat(.752),doubleToFloat(.17),doubleToFloat(.752),doubleToFloat(.269),doubleToFloat(.772),doubleToFloat(.33),doubleToFloat(.9),doubleToFloat(.547),doubleToFloat(.965),doubleToFloat(.57)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.974),doubleToFloat(.565),doubleToFloat(.834),doubleToFloat(.363),doubleToFloat(.941),doubleToFloat(.382),doubleToFloat(.758),doubleToFloat(.635),doubleToFloat(.959),doubleToFloat(.584),doubleToFloat(.77),doubleToFloat(.417),doubleToFloat(.598),doubleToFloat(.064),doubleToFloat(.556),doubleToFloat(.032),doubleToFloat(.551),doubleToFloat(.063),doubleToFloat(.998),doubleToFloat(.604)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.997),doubleToFloat(.595),doubleToFloat(.997),doubleToFloat(.587),doubleToFloat(.995),doubleToFloat(.576),doubleToFloat(.637),doubleToFloat(.049),doubleToFloat(.632),doubleToFloat(.021),doubleToFloat(.629),doubleToFloat(.07),doubleToFloat(.61),doubleToFloat(.013),doubleToFloat(.779),doubleToFloat(.257),doubleToFloat(.847),doubleToFloat(.286),doubleToFloat(.752),doubleToFloat(.244)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.752),doubleToFloat(.248),doubleToFloat(.786),doubleToFloat(.245),doubleToFloat(.967),doubleToFloat(.298),doubleToFloat(.925),doubleToFloat(.237),doubleToFloat(.753),doubleToFloat(.145),doubleToFloat(.744),doubleToFloat(.083),doubleToFloat(.794),doubleToFloat(.382),doubleToFloat(.816),doubleToFloat(.369),doubleToFloat(.79),doubleToFloat(.361),doubleToFloat(.821),doubleToFloat(.355)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.834),doubleToFloat(.333),doubleToFloat(.752),doubleToFloat(.229),doubleToFloat(.752),doubleToFloat(.238),doubleToFloat(.752),doubleToFloat(.416),doubleToFloat(.955),doubleToFloat(.364),doubleToFloat(.866),doubleToFloat(.291),doubleToFloat(.988),doubleToFloat(.657),doubleToFloat(.804),doubleToFloat(.363),doubleToFloat(.626),doubleToFloat(.159),doubleToFloat(.66),doubleToFloat(.093)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.611),doubleToFloat(.647),doubleToFloat(.561),doubleToFloat(.661),doubleToFloat(.631),doubleToFloat(.701),doubleToFloat(.555),doubleToFloat(.195),doubleToFloat(.668),doubleToFloat(.183),doubleToFloat(.677),doubleToFloat(.387),doubleToFloat(.675),doubleToFloat(.42),doubleToFloat(.727),doubleToFloat(.388),doubleToFloat(.724),doubleToFloat(.279),doubleToFloat(.733),doubleToFloat(.307)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.715),doubleToFloat(.195),doubleToFloat(.723),doubleToFloat(.173),doubleToFloat(.639),doubleToFloat(.524),doubleToFloat(.646),doubleToFloat(.551),doubleToFloat(.737),doubleToFloat(.359),doubleToFloat(.694),doubleToFloat(.249),doubleToFloat(.737),doubleToFloat(.223),doubleToFloat(.694),doubleToFloat(.696),doubleToFloat(.572),doubleToFloat(.585),doubleToFloat(.53),doubleToFloat(.603)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.606),doubleToFloat(.617),doubleToFloat(.623),doubleToFloat(.386),doubleToFloat(.649),doubleToFloat(.356),doubleToFloat(.619),doubleToFloat(.363),doubleToFloat(.723),doubleToFloat(.27),doubleToFloat(.677),doubleToFloat(.501),doubleToFloat(.655),doubleToFloat(.307),doubleToFloat(.603),doubleToFloat(.509),doubleToFloat(.74),doubleToFloat(.387),doubleToFloat(.752),doubleToFloat(.387)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.667),doubleToFloat(.434),doubleToFloat(.653),doubleToFloat(.577),doubleToFloat(.642),doubleToFloat(.599),doubleToFloat(.518),doubleToFloat(.634),doubleToFloat(.646),doubleToFloat(.417),doubleToFloat(.728),doubleToFloat(.37),doubleToFloat(.718),doubleToFloat(.333),doubleToFloat(.732),doubleToFloat(.33),doubleToFloat(.714),doubleToFloat(.303),doubleToFloat(.591),doubleToFloat(.424)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.59),doubleToFloat(.546),doubleToFloat(.67),doubleToFloat(.363),doubleToFloat(.552),doubleToFloat(.534),doubleToFloat(.564),doubleToFloat(.57),doubleToFloat(.735),doubleToFloat(.417),doubleToFloat(.629),doubleToFloat(.069),doubleToFloat(.598),doubleToFloat(.064),doubleToFloat(.61),doubleToFloat(.013),doubleToFloat(.507),doubleToFloat(.605),doubleToFloat(.502),doubleToFloat(.592)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.504),doubleToFloat(.576),doubleToFloat(.632),doubleToFloat(.021),doubleToFloat(.53),doubleToFloat(.574),doubleToFloat(.556),doubleToFloat(.032),doubleToFloat(.536),doubleToFloat(.362),doubleToFloat(.72),doubleToFloat(.245),doubleToFloat(.721),doubleToFloat(.237),doubleToFloat(.657),doubleToFloat(.288),doubleToFloat(.752),doubleToFloat(.209),doubleToFloat(.725),doubleToFloat(.249)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.752),doubleToFloat(.257),doubleToFloat(.56),doubleToFloat(.238),doubleToFloat(.536),doubleToFloat(.296),doubleToFloat(.555),doubleToFloat(.117),doubleToFloat(.707),doubleToFloat(.381),doubleToFloat(.688),doubleToFloat(.369),doubleToFloat(.713),doubleToFloat(.36),doubleToFloat(.671),doubleToFloat(.333),doubleToFloat(.53),doubleToFloat(.661),doubleToFloat(.638),doubleToFloat(.291)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.701),doubleToFloat(.364),doubleToFloat(.779),doubleToFloat(.249),doubleToFloat(.725),doubleToFloat(.257),doubleToFloat(.684),doubleToFloat(.355),doubleToFloat(.752),doubleToFloat(.223),doubleToFloat(.551),doubleToFloat(.063),doubleToFloat(.789),doubleToFloat(.37),doubleToFloat(.637),doubleToFloat(.049),doubleToFloat(.714),doubleToFloat(.371)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #33, 4864 total numbers */
	this.IndexedFaceSet_11_33_coordIndex = new MFInt32(Java.to([0,1,2,-1,3,4,5,-1,6,3,7,-1,8,9,10,-1,11,12,13,-1,14,10,15,-1,11,16,17,-1,18,9,8,-1,19,20,21,-1,22,6,7,-1,22,23,6,-1,3,24,25,-1,24,26,27,-1,28,17,29,-1,25,24,30,-1,19,23,22,-1,19,21,23,-1,3,31,7,-1,3,25,31,-1,14,32,25,-1,25,33,34,-1,7,35,36,-1,7,31,35,-1,15,0,2,-1,9,0,15,-1,31,25,35,-1,35,34,37,-1,36,38,39,-1,36,35,40,-1,39,41,18,-1,7,36,39,-1,25,32,33,-1,15,2,33,-1,35,25,34,-1,34,33,42,-1,18,0,9,-1,18,41,0,-1,40,35,37,-1,40,43,44,-1,43,45,44,-1,46,47,48,-1,49,48,47,-1,43,40,37,-1,50,43,51,-1,2,46,52,-1,46,48,53,-1,51,42,33,-1,54,52,53,-1,39,55,41,-1,45,49,44,-1,50,56,45,-1,50,57,56,-1,53,48,58,-1,48,59,58,-1,60,54,53,-1,60,53,58,-1,57,50,54,-1,57,54,60,-1,49,59,48,-1,61,59,49,-1,45,61,49,-1,56,61,45,-1,11,13,16,-1,17,28,62,-1,28,29,24,-1,28,24,27,-1,11,17,62,-1,10,9,15,-1,19,63,20,-1,12,20,13,-1,21,20,12,-1,19,8,63,-1,7,39,64,-1,22,7,64,-1,26,4,65,-1,6,23,4,-1,3,5,24,-1,27,26,65,-1,54,51,52,-1,2,52,33,-1,51,33,52,-1,50,51,54,-1,43,37,51,-1,43,50,45,-1,52,46,53,-1,2,1,46,-1,44,55,39,-1,55,66,1,-1,44,49,55,-1,39,38,44,-1,41,55,1,-1,41,1,0,-1,66,47,1,-1,1,47,46,-1,49,47,66,-1,49,66,55,-1,30,14,25,-1,17,16,29,-1,19,18,8,-1,20,63,67,-1,20,67,13,-1,13,67,14,-1,67,63,10,-1,67,10,14,-1,19,22,18,-1,8,10,63,-1,37,34,42,-1,37,42,51,-1,38,40,44,-1,36,40,38,-1,32,15,33,-1,14,15,32,-1,22,64,18,-1,39,18,64,-1,4,23,65,-1,6,4,3,-1,24,5,26,-1,26,5,4,-1,29,14,30,-1,24,29,30,-1,29,16,14,-1,13,14,16,-1,68,69,70,-1,71,72,73,-1,74,75,73,-1,76,77,78,-1,79,80,81,-1,82,83,76,-1,81,84,85,-1,77,86,78,-1,87,88,89,-1,90,75,74,-1,90,74,91,-1,92,73,93,-1,92,94,95,-1,96,84,97,-1,98,92,93,-1,88,90,91,-1,88,91,89,-1,73,75,99,-1,93,73,99,-1,82,93,100,-1,101,93,102,-1,75,103,104,-1,75,104,99,-1,83,69,68,-1,77,83,68,-1,93,99,104,-1,102,104,105,-1,103,106,107,-1,103,108,104,-1,109,106,86,-1,75,106,103,-1,100,93,101,-1,83,101,69,-1,102,93,104,-1,101,102,110,-1,68,86,77,-1,68,109,86,-1,105,104,108,-1,108,111,112,-1,112,111,113,-1,114,115,116,-1,116,117,114,-1,105,108,112,-1,118,112,119,-1,69,120,115,-1,115,121,116,-1,101,110,118,-1,121,120,122,-1,123,106,109,-1,117,113,111,-1,119,113,124,-1,119,124,125,-1,116,121,126,-1,116,126,127,-1,121,122,128,-1,121,128,126,-1,122,119,125,-1,122,125,128,-1,116,127,117,-1,127,129,117,-1,117,129,113,-1,129,124,113,-1,81,85,79,-1,130,97,84,-1,96,97,92,-1,92,97,94,-1,81,130,84,-1,76,83,77,-1,131,88,87,-1,80,79,87,-1,87,89,80,-1,131,78,88,-1,75,132,106,-1,90,132,75,-1,95,133,72,-1,72,91,74,-1,92,71,73,-1,95,94,133,-1,120,118,122,-1,69,101,120,-1,120,101,118,-1,118,119,122,-1,118,105,112,-1,112,113,119,-1,115,120,121,-1,69,115,70,-1,123,111,106,-1,70,134,123,-1,117,111,123,-1,106,111,107,-1,70,123,109,-1,70,109,68,-1,114,134,70,-1,70,115,114,-1,114,117,134,-1,134,117,123,-1,98,93,82,-1,84,96,85,-1,78,86,88,-1,135,131,87,-1,135,87,79,-1,79,82,135,-1,135,76,131,-1,135,82,76,-1,88,86,90,-1,76,78,131,-1,110,102,105,-1,110,105,118,-1,107,111,108,-1,103,107,108,-1,100,101,83,-1,82,100,83,-1,86,132,90,-1,86,106,132,-1,72,133,91,-1,72,74,73,-1,92,95,71,-1,72,71,95,-1,96,98,82,-1,96,92,98,-1,96,82,85,-1,79,85,82,-1,136,137,138,-1,139,140,141,-1,136,138,142,-1,143,139,141,-1,144,145,146,-1,145,139,146,-1,147,148,149,-1,148,150,151,-1,145,152,139,-1,153,154,140,-1,155,156,157,-1,144,155,158,-1,159,156,143,-1,157,156,159,-1,159,143,160,-1,159,160,161,-1,141,140,162,-1,140,154,162,-1,163,164,152,-1,161,160,164,-1,165,153,140,-1,145,163,152,-1,160,166,167,-1,166,141,167,-1,160,168,164,-1,149,169,153,-1,153,170,147,-1,171,172,173,-1,169,172,171,-1,150,174,171,-1,160,167,175,-1,176,139,137,-1,139,138,137,-1,138,139,143,-1,142,138,143,-1,177,136,178,-1,176,137,136,-1,143,179,142,-1,178,179,143,-1,170,148,147,-1,148,151,149,-1,174,169,171,-1,173,150,171,-1,180,167,150,-1,180,150,148,-1,150,167,174,-1,167,141,162,-1,147,149,153,-1,149,173,172,-1,152,153,165,-1,149,172,169,-1,149,151,173,-1,151,150,173,-1,176,177,155,-1,176,136,177,-1,136,142,179,-1,155,177,178,-1,136,179,178,-1,156,178,143,-1,155,178,156,-1,146,155,144,-1,146,139,176,-1,146,176,155,-1,155,157,158,-1,163,181,164,-1,152,164,168,-1,161,164,181,-1,160,175,168,-1,167,162,174,-1,162,154,174,-1,154,169,174,-1,153,169,154,-1,166,143,141,-1,160,143,166,-1,152,165,139,-1,165,140,139,-1,175,180,148,-1,167,180,175,-1,152,168,170,-1,175,148,168,-1,170,168,148,-1,152,170,153,-1,182,183,184,-1,185,186,187,-1,182,188,183,-1,189,186,185,-1,190,191,192,-1,190,192,185,-1,193,194,195,-1,195,196,197,-1,190,185,198,-1,199,187,200,-1,201,202,203,-1,204,202,191,-1,205,189,201,-1,203,205,201,-1,205,206,189,-1,205,207,206,-1,186,208,187,-1,187,208,200,-1,209,198,210,-1,207,210,206,-1,211,187,199,-1,190,198,209,-1,206,212,213,-1,213,212,186,-1,206,210,214,-1,194,199,215,-1,199,193,216,-1,217,218,219,-1,215,217,219,-1,197,217,220,-1,206,221,212,-1,222,184,185,-1,185,184,183,-1,183,189,185,-1,188,189,183,-1,223,182,224,-1,182,184,222,-1,189,188,225,-1,223,189,225,-1,216,193,195,-1,195,194,196,-1,220,217,215,-1,197,218,217,-1,226,197,212,-1,226,195,197,-1,197,220,212,-1,212,208,186,-1,193,199,194,-1,218,194,219,-1,198,211,199,-1,194,215,219,-1,218,196,194,-1,197,196,218,-1,224,222,202,-1,182,222,224,-1,182,225,188,-1,223,224,202,-1,225,182,223,-1,201,189,223,-1,223,202,201,-1,202,192,191,-1,192,222,185,-1,202,222,192,-1,203,202,204,-1,209,210,227,-1,198,214,210,-1,207,227,210,-1,206,214,221,-1,212,220,208,-1,208,220,200,-1,200,220,215,-1,199,200,215,-1,213,186,189,-1,206,213,189,-1,198,185,211,-1,211,185,187,-1,221,195,226,-1,212,221,226,-1,198,216,214,-1,221,214,195,-1,216,195,214,-1,198,199,216,-1,228,229,230,-1,231,232,233,-1,234,235,232,-1,230,236,237,-1,230,237,234,-1,235,238,239,-1,231,233,240,-1,230,229,241,-1,236,241,242,-1,243,244,245,-1,246,247,248,-1,247,249,250,-1,236,242,251,-1,252,253,254,-1,255,256,257,-1,255,258,259,-1,260,261,262,-1,258,229,259,-1,241,229,258,-1,263,264,244,-1,247,264,249,-1,265,244,264,-1,266,238,267,-1,232,268,233,-1,233,269,240,-1,268,270,271,-1,271,270,272,-1,258,263,273,-1,258,233,274,-1,263,243,273,-1,258,274,263,-1,244,265,250,-1,242,243,275,-1,256,260,262,-1,276,269,255,-1,233,258,269,-1,228,276,229,-1,277,240,269,-1,125,124,277,-1,239,238,278,-1,236,251,238,-1,279,280,281,-1,281,282,264,-1,283,284,285,-1,278,238,266,-1,286,278,266,-1,286,266,282,-1,282,266,264,-1,274,281,264,-1,280,287,281,-1,287,282,281,-1,287,286,282,-1,286,287,283,-1,280,283,287,-1,288,278,286,-1,288,286,285,-1,270,288,289,-1,270,289,272,-1,288,290,278,-1,270,290,288,-1,239,270,268,-1,284,289,288,-1,264,267,249,-1,248,247,250,-1,242,275,291,-1,250,249,245,-1,237,236,238,-1,251,242,291,-1,238,251,267,-1,251,291,267,-1,233,268,274,-1,271,274,268,-1,270,239,290,-1,271,279,274,-1,279,281,274,-1,277,269,276,-1,292,257,261,-1,292,261,260,-1,256,262,253,-1,261,293,254,-1,262,254,253,-1,257,252,293,-1,261,257,293,-1,265,248,250,-1,246,248,265,-1,284,283,280,-1,283,285,286,-1,288,285,284,-1,280,279,271,-1,272,280,271,-1,272,289,284,-1,272,284,280,-1,244,250,245,-1,263,244,243,-1,245,291,275,-1,275,243,245,-1,264,247,246,-1,246,265,264,-1,249,267,291,-1,249,291,245,-1,241,258,273,-1,242,273,243,-1,274,264,263,-1,266,267,264,-1,261,254,262,-1,252,254,293,-1,277,276,228,-1,234,232,231,-1,229,260,259,-1,259,256,255,-1,255,257,292,-1,269,258,255,-1,259,260,256,-1,292,260,229,-1,276,292,229,-1,276,255,292,-1,290,239,278,-1,237,238,235,-1,241,273,242,-1,230,241,236,-1,234,237,235,-1,235,239,232,-1,232,239,268,-1,257,256,252,-1,256,253,252,-1,127,231,129,-1,230,128,228,-1,126,230,234,-1,228,125,277,-1,126,128,230,-1,128,125,228,-1,127,234,231,-1,231,240,129,-1,129,240,124,-1,126,234,127,-1,124,240,277,-1,294,295,296,-1,297,298,299,-1,300,298,301,-1,302,295,303,-1,295,300,303,-1,301,304,305,-1,306,297,299,-1,296,295,307,-1,307,302,308,-1,309,310,311,-1,312,313,314,-1,313,315,316,-1,302,317,308,-1,318,319,320,-1,321,322,323,-1,323,324,325,-1,326,327,328,-1,324,296,325,-1,296,307,325,-1,329,310,330,-1,313,316,330,-1,331,330,310,-1,332,333,305,-1,334,298,297,-1,335,297,306,-1,336,334,337,-1,338,336,337,-1,325,339,329,-1,325,340,297,-1,329,339,311,-1,325,329,340,-1,315,331,310,-1,311,308,341,-1,327,322,328,-1,342,323,335,-1,297,335,325,-1,294,296,342,-1,343,335,306,-1,57,343,56,-1,304,344,305,-1,302,305,317,-1,345,346,347,-1,345,330,348,-1,349,350,351,-1,344,332,305,-1,352,332,344,-1,352,348,332,-1,348,330,332,-1,345,340,330,-1,346,345,353,-1,353,345,348,-1,353,348,352,-1,353,352,349,-1,346,353,349,-1,354,352,344,-1,354,350,352,-1,355,354,336,-1,355,336,338,-1,354,344,356,-1,336,354,356,-1,336,304,334,-1,351,354,355,-1,316,333,330,-1,312,315,313,-1,341,308,357,-1,315,309,316,-1,303,305,302,-1,357,308,317,-1,305,333,317,-1,317,333,357,-1,297,340,334,-1,337,334,340,-1,336,356,304,-1,337,340,347,-1,347,340,345,-1,343,342,335,-1,358,326,321,-1,326,358,327,-1,320,328,322,-1,326,319,359,-1,319,328,320,-1,321,359,318,-1,326,359,321,-1,331,315,312,-1,314,331,312,-1,351,346,349,-1,349,352,350,-1,350,354,351,-1,346,337,347,-1,338,337,346,-1,351,355,338,-1,338,346,351,-1,315,310,309,-1,310,329,311,-1,309,341,357,-1,309,311,341,-1,313,330,314,-1,314,330,331,-1,316,357,333,-1,316,309,357,-1,307,339,325,-1,311,339,308,-1,329,330,340,-1,332,330,333,-1,319,326,328,-1,318,359,319,-1,343,294,342,-1,300,299,298,-1,327,296,324,-1,323,322,324,-1,321,323,358,-1,335,323,325,-1,327,324,322,-1,358,296,327,-1,358,342,296,-1,342,358,323,-1,356,344,304,-1,303,301,305,-1,339,307,308,-1,307,295,302,-1,300,301,303,-1,298,304,301,-1,334,304,298,-1,321,318,322,-1,322,318,320,-1,61,299,59,-1,294,60,295,-1,58,300,295,-1,343,57,294,-1,60,58,295,-1,57,60,294,-1,59,299,300,-1,306,299,61,-1,56,306,61,-1,58,59,300,-1,56,343,306,-1,360,361,362,-1,363,364,365,-1,366,363,365,-1,367,363,366,-1,368,367,369,-1,367,368,363,-1,364,370,365,-1,366,371,367,-1,366,372,371,-1,373,374,375,-1,367,371,373,-1,375,374,376,-1,377,372,366,-1,365,377,366,-1,378,379,360,-1,367,373,375,-1,380,381,373,-1,371,380,373,-1,371,372,380,-1,372,382,380,-1,383,376,384,-1,376,385,384,-1,386,384,387,-1,386,383,384,-1,373,388,374,-1,373,381,388,-1,376,388,385,-1,376,374,388,-1,372,389,382,-1,377,389,372,-1,389,386,387,-1,377,386,389,-1,380,390,381,-1,380,391,390,-1,380,392,391,-1,382,392,380,-1,384,393,394,-1,384,385,393,-1,395,384,394,-1,387,384,395,-1,389,387,395,-1,389,395,396,-1,389,392,382,-1,389,396,392,-1,381,390,388,-1,390,397,388,-1,385,388,393,-1,388,397,393,-1,398,399,391,-1,391,399,390,-1,391,400,398,-1,378,401,402,-1,395,394,361,-1,394,393,361,-1,379,395,403,-1,395,361,403,-1,378,396,395,-1,379,403,360,-1,392,378,400,-1,378,360,401,-1,399,404,397,-1,399,397,390,-1,405,404,406,-1,393,397,405,-1,405,406,361,-1,392,400,391,-1,402,401,407,-1,408,409,410,-1,409,411,412,-1,360,413,411,-1,410,409,412,-1,414,412,415,-1,399,416,404,-1,417,418,419,-1,404,420,406,-1,404,416,420,-1,421,418,417,-1,422,423,399,-1,424,425,415,-1,406,420,362,-1,426,408,427,-1,398,402,407,-1,408,163,145,-1,410,163,408,-1,181,414,161,-1,428,414,181,-1,410,181,163,-1,410,428,181,-1,158,157,419,-1,158,419,418,-1,425,157,159,-1,425,419,157,-1,414,425,161,-1,425,159,161,-1,421,158,418,-1,421,144,158,-1,408,144,421,-1,408,145,144,-1,411,413,415,-1,429,360,411,-1,362,420,413,-1,430,425,424,-1,422,427,423,-1,399,423,416,-1,422,426,427,-1,398,422,399,-1,430,419,425,-1,417,419,430,-1,413,424,415,-1,360,362,413,-1,401,360,429,-1,401,429,407,-1,398,407,422,-1,409,408,426,-1,378,395,379,-1,396,378,392,-1,361,360,403,-1,361,406,362,-1,397,404,405,-1,393,405,361,-1,400,402,398,-1,400,378,402,-1,410,412,428,-1,414,428,412,-1,429,411,409,-1,429,409,426,-1,412,411,415,-1,425,414,415,-1,416,424,420,-1,420,424,413,-1,423,430,416,-1,416,430,424,-1,407,429,426,-1,422,407,426,-1,427,417,423,-1,427,408,421,-1,427,421,417,-1,417,430,423,-1,431,432,433,-1,363,368,434,-1,363,434,435,-1,436,437,438,-1,437,434,368,-1,439,436,438,-1,440,363,435,-1,364,363,440,-1,441,432,442,-1,438,437,368,-1,443,444,437,-1,437,444,434,-1,435,434,444,-1,435,444,445,-1,446,447,439,-1,439,447,448,-1,447,449,450,-1,447,446,449,-1,451,437,436,-1,451,443,437,-1,439,448,451,-1,439,451,436,-1,435,445,452,-1,440,435,452,-1,450,449,452,-1,449,440,452,-1,453,444,443,-1,453,454,444,-1,444,454,455,-1,445,444,455,-1,447,456,457,-1,447,457,448,-1,447,458,456,-1,447,450,458,-1,458,450,452,-1,458,452,459,-1,452,445,455,-1,452,455,459,-1,451,453,443,-1,451,460,453,-1,448,457,451,-1,451,457,460,-1,461,462,454,-1,453,461,454,-1,454,462,463,-1,441,464,465,-1,431,456,458,-1,456,431,457,-1,466,458,442,-1,431,458,466,-1,458,459,441,-1,466,442,432,-1,455,463,441,-1,432,441,465,-1,460,467,461,-1,460,461,453,-1,468,469,467,-1,457,468,460,-1,431,469,468,-1,455,454,463,-1,465,464,470,-1,471,472,473,-1,474,473,475,-1,476,432,474,-1,472,475,473,-1,477,478,475,-1,479,461,467,-1,480,481,482,-1,467,469,483,-1,467,483,479,-1,482,481,484,-1,485,486,461,-1,478,487,488,-1,433,483,469,-1,489,490,471,-1,462,470,464,-1,190,209,471,-1,472,471,209,-1,207,477,227,-1,477,491,227,-1,227,472,209,-1,227,491,472,-1,204,480,203,-1,480,204,481,-1,487,205,203,-1,487,203,480,-1,477,207,487,-1,487,207,205,-1,204,484,481,-1,204,191,484,-1,471,484,191,-1,190,471,191,-1,476,474,478,-1,474,432,492,-1,433,476,483,-1,488,487,493,-1,485,490,486,-1,479,485,461,-1,486,490,489,-1,461,486,462,-1,493,487,480,-1,493,480,482,-1,476,478,488,-1,476,433,432,-1,432,465,492,-1,465,470,492,-1,462,486,470,-1,473,489,471,-1,458,441,442,-1,459,455,441,-1,431,466,432,-1,431,433,469,-1,460,468,467,-1,457,431,468,-1,463,462,464,-1,441,463,464,-1,472,491,475,-1,477,475,491,-1,474,492,473,-1,492,489,473,-1,478,474,475,-1,487,478,477,-1,479,483,488,-1,483,476,488,-1,479,493,485,-1,479,488,493,-1,470,489,492,-1,486,489,470,-1,485,482,490,-1,490,484,471,-1,482,484,490,-1,493,482,485,-1,494,495,496,-1,497,498,499,-1,497,500,496,-1,501,499,498,-1,502,503,504,-1,505,494,496,-1,501,506,499,-1,495,497,496,-1,497,499,500,-1,507,508,509,-1,510,511,512,-1,513,514,12,-1,515,516,517,-1,516,518,519,-1,27,520,521,-1,27,65,522,-1,517,523,514,-1,524,525,526,-1,527,503,528,-1,529,526,530,-1,515,517,513,-1,531,513,532,-1,533,534,535,-1,11,62,536,-1,12,514,21,-1,537,538,539,-1,524,28,525,-1,534,540,541,-1,27,522,520,-1,532,12,11,-1,528,542,543,-1,28,544,525,-1,543,542,545,-1,527,528,543,-1,542,524,526,-1,528,503,536,-1,546,28,524,-1,526,525,530,-1,536,546,542,-1,542,546,524,-1,544,547,548,-1,28,27,549,-1,21,514,537,-1,545,542,550,-1,550,542,529,-1,542,526,529,-1,530,525,548,-1,551,544,521,-1,552,530,547,-1,530,548,547,-1,549,27,521,-1,553,547,554,-1,496,500,555,-1,496,555,556,-1,370,496,556,-1,369,557,499,-1,506,369,499,-1,555,558,376,-1,500,499,558,-1,559,560,494,-1,561,562,563,-1,561,559,564,-1,562,501,563,-1,565,502,566,-1,559,494,505,-1,562,506,501,-1,560,559,561,-1,561,564,562,-1,567,568,439,-1,569,570,571,-1,570,533,507,-1,572,573,574,-1,80,575,565,-1,576,516,515,-1,572,574,516,-1,94,577,133,-1,577,578,579,-1,577,569,578,-1,574,573,561,-1,580,581,582,-1,581,583,582,-1,575,531,565,-1,575,515,531,-1,584,585,586,-1,587,130,81,-1,80,588,575,-1,133,579,91,-1,589,580,97,-1,553,533,590,-1,94,584,577,-1,80,565,81,-1,591,527,543,-1,97,592,593,-1,594,543,545,-1,543,594,591,-1,594,581,580,-1,587,566,591,-1,589,97,130,-1,582,583,595,-1,594,589,587,-1,591,594,587,-1,595,596,592,-1,94,97,593,-1,89,91,579,-1,594,545,597,-1,594,598,581,-1,597,598,594,-1,581,598,583,-1,582,595,592,-1,583,552,596,-1,583,596,595,-1,592,596,599,-1,94,593,585,-1,559,568,567,-1,559,505,370,-1,568,370,364,-1,562,369,506,-1,600,369,562,-1,564,601,562,-1,562,601,600,-1,555,376,556,-1,369,367,557,-1,367,375,557,-1,558,375,376,-1,558,557,375,-1,564,567,601,-1,567,439,601,-1,438,368,600,-1,600,368,369,-1,499,557,558,-1,500,558,555,-1,601,438,600,-1,601,439,438,-1,565,531,502,-1,502,531,532,-1,575,576,515,-1,575,588,576,-1,531,515,513,-1,532,513,12,-1,536,532,11,-1,502,532,503,-1,566,527,591,-1,566,502,504,-1,370,505,496,-1,556,376,383,-1,386,556,383,-1,365,556,386,-1,568,446,439,-1,446,568,449,-1,449,364,440,-1,370,556,365,-1,568,559,370,-1,559,567,564,-1,568,364,449,-1,365,386,377,-1,566,504,527,-1,504,503,527,-1,528,536,542,-1,503,532,536,-1,565,566,587,-1,81,565,587,-1,587,589,130,-1,21,537,23,-1,65,23,537,-1,579,573,572,-1,602,561,573,-1,512,497,495,-1,539,538,603,-1,65,537,522,-1,94,585,584,-1,133,577,579,-1,89,579,588,-1,80,89,588,-1,523,519,538,-1,519,497,538,-1,513,517,514,-1,585,592,599,-1,525,544,548,-1,580,582,97,-1,594,580,589,-1,546,62,28,-1,536,62,546,-1,537,523,538,-1,522,537,539,-1,522,539,604,-1,509,508,604,-1,514,523,537,-1,518,498,519,-1,579,578,573,-1,588,579,572,-1,602,560,561,-1,588,572,576,-1,576,572,516,-1,516,523,517,-1,563,501,518,-1,602,510,494,-1,494,512,495,-1,560,602,494,-1,596,605,553,-1,547,553,605,-1,552,547,605,-1,552,605,596,-1,544,549,521,-1,28,549,544,-1,582,592,97,-1,593,592,585,-1,596,553,606,-1,547,551,554,-1,553,554,607,-1,608,590,533,-1,585,599,608,-1,551,521,534,-1,554,534,607,-1,541,604,535,-1,609,608,610,-1,585,608,586,-1,606,553,590,-1,608,606,590,-1,553,607,533,-1,533,607,534,-1,584,569,577,-1,586,609,569,-1,540,604,541,-1,520,522,604,-1,569,609,610,-1,578,569,571,-1,533,535,508,-1,507,533,508,-1,535,534,541,-1,604,508,535,-1,521,520,540,-1,534,521,540,-1,520,604,540,-1,586,608,609,-1,584,586,569,-1,610,533,570,-1,610,608,533,-1,569,610,570,-1,608,599,606,-1,599,596,606,-1,547,544,551,-1,554,551,534,-1,570,507,571,-1,578,611,573,-1,603,538,512,-1,509,539,603,-1,612,571,507,-1,611,602,573,-1,512,538,497,-1,511,509,603,-1,494,510,512,-1,612,507,510,-1,578,571,611,-1,611,612,602,-1,611,571,612,-1,602,612,510,-1,509,604,539,-1,511,603,512,-1,507,509,511,-1,510,507,511,-1,519,498,497,-1,518,501,498,-1,574,563,518,-1,574,561,563,-1,574,518,516,-1,516,519,523,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #33, 4864 total numbers */
	this.IndexedFaceSet_11_33_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,3,4,5,-1,6,3,7,-1,8,9,10,-1,11,12,13,-1,14,10,15,-1,11,16,17,-1,18,9,8,-1,19,20,21,-1,22,6,7,-1,22,23,6,-1,3,24,25,-1,24,26,27,-1,28,17,29,-1,25,24,30,-1,19,31,32,-1,19,21,31,-1,3,33,7,-1,3,25,33,-1,14,34,25,-1,25,35,36,-1,7,37,38,-1,7,33,37,-1,15,0,2,-1,9,0,15,-1,33,25,37,-1,37,36,39,-1,38,40,41,-1,38,37,42,-1,43,44,18,-1,7,38,41,-1,25,34,35,-1,15,2,35,-1,37,25,36,-1,36,35,45,-1,18,0,9,-1,18,44,0,-1,42,37,39,-1,42,46,47,-1,46,48,47,-1,49,50,51,-1,52,51,50,-1,46,42,39,-1,53,46,54,-1,2,49,55,-1,49,51,56,-1,54,45,35,-1,57,55,56,-1,43,58,44,-1,59,52,60,-1,53,61,48,-1,53,62,61,-1,56,51,63,-1,51,64,63,-1,65,57,56,-1,65,56,63,-1,62,53,57,-1,62,57,65,-1,52,64,51,-1,66,64,52,-1,59,66,52,-1,61,67,48,-1,11,13,16,-1,17,28,68,-1,28,29,24,-1,28,24,27,-1,11,17,68,-1,10,9,15,-1,19,69,20,-1,12,20,13,-1,21,20,12,-1,19,8,69,-1,7,41,70,-1,22,7,70,-1,26,4,71,-1,6,23,4,-1,3,5,24,-1,27,26,71,-1,57,54,55,-1,2,55,35,-1,54,35,55,-1,53,54,57,-1,46,39,54,-1,46,53,48,-1,55,49,56,-1,2,1,49,-1,60,58,43,-1,58,72,1,-1,60,52,58,-1,41,40,47,-1,44,58,1,-1,44,1,0,-1,72,50,1,-1,1,50,49,-1,52,50,72,-1,52,72,58,-1,30,14,25,-1,17,16,29,-1,19,18,8,-1,20,69,73,-1,20,73,13,-1,13,73,14,-1,73,69,10,-1,73,10,14,-1,19,32,18,-1,8,10,69,-1,39,36,45,-1,39,45,54,-1,40,42,47,-1,38,42,40,-1,34,15,35,-1,14,15,34,-1,32,74,18,-1,43,18,74,-1,4,23,71,-1,6,4,3,-1,24,5,26,-1,26,5,4,-1,29,14,30,-1,24,29,30,-1,29,16,14,-1,13,14,16,-1,75,76,77,-1,78,79,80,-1,81,82,80,-1,83,84,85,-1,86,87,88,-1,89,90,83,-1,88,91,92,-1,84,93,85,-1,94,95,96,-1,97,82,81,-1,97,81,98,-1,99,80,100,-1,99,101,102,-1,103,91,104,-1,105,99,100,-1,95,106,107,-1,95,107,96,-1,80,82,108,-1,100,80,108,-1,89,100,109,-1,110,100,111,-1,82,112,113,-1,82,113,108,-1,90,76,75,-1,84,90,75,-1,100,108,113,-1,111,113,114,-1,112,115,116,-1,112,117,113,-1,118,119,93,-1,82,115,112,-1,109,100,110,-1,90,110,76,-1,111,100,113,-1,110,111,120,-1,75,93,84,-1,75,118,93,-1,114,113,117,-1,117,121,122,-1,122,121,123,-1,124,125,126,-1,126,127,124,-1,114,117,122,-1,128,122,129,-1,76,130,125,-1,125,131,126,-1,110,120,128,-1,131,130,132,-1,133,119,118,-1,127,134,135,-1,129,123,136,-1,129,136,137,-1,126,131,138,-1,126,138,139,-1,131,132,140,-1,131,140,138,-1,132,129,137,-1,132,137,140,-1,126,139,127,-1,139,141,127,-1,127,141,134,-1,142,136,123,-1,88,92,86,-1,143,104,91,-1,103,104,99,-1,99,104,101,-1,88,143,91,-1,83,90,84,-1,144,95,94,-1,87,86,94,-1,94,96,87,-1,144,85,95,-1,82,145,115,-1,97,145,82,-1,102,146,79,-1,79,98,81,-1,99,78,80,-1,102,101,146,-1,130,128,132,-1,76,110,130,-1,130,110,128,-1,128,129,132,-1,128,114,122,-1,122,123,129,-1,125,130,131,-1,76,125,77,-1,133,135,119,-1,77,147,133,-1,127,135,133,-1,115,121,116,-1,77,133,118,-1,77,118,75,-1,124,147,77,-1,77,125,124,-1,124,127,147,-1,147,127,133,-1,105,100,89,-1,91,103,92,-1,85,93,95,-1,148,144,94,-1,148,94,86,-1,86,89,148,-1,148,83,144,-1,148,89,83,-1,95,93,106,-1,83,85,144,-1,120,111,114,-1,120,114,128,-1,116,121,117,-1,112,116,117,-1,109,110,90,-1,89,109,90,-1,93,149,106,-1,93,119,149,-1,79,146,98,-1,79,81,80,-1,99,102,78,-1,79,78,102,-1,103,105,89,-1,103,99,105,-1,103,89,92,-1,86,92,89,-1,150,151,152,-1,153,154,155,-1,150,152,156,-1,157,153,155,-1,158,159,160,-1,159,161,160,-1,162,163,164,-1,163,164,165,-1,159,166,161,-1,167,168,169,-1,170,171,172,-1,173,170,174,-1,159,160,161,-1,158,160,159,-1,159,161,166,-1,159,166,175,-1,155,154,176,-1,154,177,176,-1,178,179,180,-1,181,182,179,-1,183,167,169,-1,159,175,166,-1,166,183,167,-1,183,169,167,-1,182,184,179,-1,164,185,167,-1,167,186,162,-1,187,188,189,-1,190,188,187,-1,164,185,191,-1,166,167,186,-1,192,161,193,-1,161,194,193,-1,152,153,157,-1,156,152,157,-1,195,196,197,-1,198,199,196,-1,161,193,194,-1,192,193,161,-1,200,201,202,-1,163,165,164,-1,203,190,187,-1,204,164,191,-1,162,167,164,-1,162,164,163,-1,164,167,185,-1,167,169,168,-1,162,164,167,-1,164,204,191,-1,166,167,183,-1,164,191,185,-1,164,165,204,-1,165,164,204,-1,198,195,170,-1,198,196,195,-1,150,156,205,-1,170,195,197,-1,196,206,197,-1,160,192,161,-1,170,197,171,-1,207,170,173,-1,160,161,192,-1,207,198,170,-1,170,172,174,-1,178,208,179,-1,180,179,184,-1,181,179,208,-1,182,209,184,-1,167,168,185,-1,176,177,203,-1,177,190,203,-1,167,185,168,-1,183,161,169,-1,166,161,183,-1,166,183,161,-1,183,169,161,-1,209,210,201,-1,167,162,186,-1,180,184,200,-1,209,201,184,-1,200,184,201,-1,166,186,167,-1,150,152,151,-1,153,155,154,-1,150,156,152,-1,157,155,153,-1,159,158,160,-1,159,160,161,-1,162,164,211,-1,211,165,164,-1,159,161,166,-1,167,169,168,-1,171,170,172,-1,174,170,173,-1,159,161,160,-1,158,159,160,-1,159,166,161,-1,159,175,166,-1,155,176,154,-1,154,176,177,-1,178,180,179,-1,181,179,182,-1,183,169,167,-1,159,166,175,-1,166,167,183,-1,183,167,169,-1,182,179,184,-1,164,167,185,-1,167,162,186,-1,187,189,188,-1,190,187,188,-1,164,191,185,-1,166,186,167,-1,192,193,161,-1,161,193,194,-1,152,157,153,-1,156,157,152,-1,197,196,195,-1,196,199,198,-1,161,194,193,-1,192,161,193,-1,200,202,201,-1,211,164,165,-1,203,187,190,-1,164,204,191,-1,162,164,167,-1,162,211,164,-1,164,185,167,-1,167,168,169,-1,162,167,164,-1,204,164,191,-1,166,183,167,-1,164,185,191,-1,204,165,164,-1,164,165,204,-1,195,198,170,-1,196,198,195,-1,150,205,156,-1,197,195,170,-1,206,196,197,-1,160,161,192,-1,197,170,171,-1,170,207,173,-1,160,192,161,-1,170,198,207,-1,172,170,174,-1,178,179,208,-1,180,184,179,-1,181,208,179,-1,182,184,209,-1,167,185,168,-1,176,203,177,-1,177,203,190,-1,167,168,185,-1,183,169,161,-1,166,183,161,-1,166,161,183,-1,183,161,169,-1,209,201,210,-1,167,186,162,-1,180,200,184,-1,209,184,201,-1,200,201,184,-1,166,167,186,-1,212,213,214,-1,215,216,217,-1,218,219,216,-1,214,220,221,-1,214,221,218,-1,219,222,223,-1,215,217,224,-1,214,213,225,-1,220,225,226,-1,227,228,229,-1,230,231,232,-1,231,233,234,-1,220,226,235,-1,236,237,238,-1,239,240,241,-1,239,242,243,-1,244,245,246,-1,247,248,249,-1,225,213,250,-1,251,252,253,-1,231,254,233,-1,255,253,252,-1,256,222,257,-1,216,258,217,-1,259,260,261,-1,258,262,263,-1,263,262,264,-1,250,265,266,-1,267,259,268,-1,265,227,266,-1,267,268,251,-1,228,269,234,-1,226,227,270,-1,271,272,273,-1,274,275,276,-1,259,267,260,-1,277,278,279,-1,280,261,260,-1,281,282,280,-1,223,222,283,-1,220,235,222,-1,284,285,286,-1,287,288,254,-1,289,290,291,-1,283,222,256,-1,292,283,256,-1,292,256,288,-1,288,256,254,-1,268,286,252,-1,293,294,287,-1,294,288,287,-1,294,292,288,-1,292,294,289,-1,293,289,294,-1,295,283,292,-1,295,292,291,-1,262,295,296,-1,262,296,264,-1,295,297,283,-1,262,297,295,-1,223,262,258,-1,290,296,295,-1,254,257,233,-1,232,231,234,-1,226,270,298,-1,234,233,229,-1,221,220,222,-1,235,226,298,-1,222,235,257,-1,235,298,257,-1,259,299,268,-1,300,268,299,-1,262,223,297,-1,300,284,268,-1,284,286,268,-1,280,260,278,-1,301,302,245,-1,301,245,244,-1,271,273,303,-1,245,304,305,-1,246,305,306,-1,241,236,307,-1,245,302,304,-1,269,232,234,-1,308,309,255,-1,310,311,285,-1,289,291,292,-1,295,291,290,-1,285,284,300,-1,312,285,300,-1,264,296,290,-1,312,310,285,-1,228,234,229,-1,265,228,227,-1,229,298,270,-1,270,227,229,-1,254,231,230,-1,308,255,252,-1,233,257,298,-1,233,298,229,-1,225,250,266,-1,226,266,227,-1,268,252,251,-1,256,257,254,-1,245,305,246,-1,236,238,307,-1,280,278,277,-1,218,216,215,-1,248,272,249,-1,243,240,239,-1,276,302,301,-1,313,242,239,-1,249,272,271,-1,301,244,314,-1,274,301,314,-1,274,276,301,-1,297,223,283,-1,221,222,219,-1,225,266,226,-1,214,225,220,-1,218,221,219,-1,219,223,216,-1,216,223,258,-1,241,240,236,-1,240,237,236,-1,315,215,316,-1,214,317,212,-1,318,214,218,-1,212,319,320,-1,318,317,214,-1,317,319,212,-1,315,218,215,-1,215,224,316,-1,321,261,282,-1,318,218,315,-1,282,261,280,-1,212,214,213,-1,217,216,215,-1,218,216,219,-1,220,214,221,-1,214,218,221,-1,219,223,222,-1,224,217,215,-1,213,214,225,-1,225,220,226,-1,229,228,227,-1,232,231,230,-1,231,234,233,-1,220,235,226,-1,236,238,237,-1,241,240,239,-1,239,243,242,-1,245,244,246,-1,249,248,247,-1,213,225,250,-1,251,253,252,-1,231,233,254,-1,255,252,253,-1,256,257,222,-1,258,216,217,-1,260,259,261,-1,262,258,263,-1,264,262,263,-1,250,266,265,-1,267,268,259,-1,265,266,227,-1,267,251,268,-1,234,269,228,-1,227,226,270,-1,272,271,273,-1,274,276,275,-1,259,260,267,-1,277,279,278,-1,280,260,261,-1,281,280,282,-1,223,283,222,-1,220,222,235,-1,286,285,284,-1,287,254,288,-1,289,291,290,-1,283,256,222,-1,292,256,283,-1,292,288,256,-1,288,254,256,-1,286,268,252,-1,293,287,294,-1,294,287,288,-1,294,288,292,-1,294,292,289,-1,293,294,289,-1,295,292,283,-1,295,291,292,-1,296,295,262,-1,296,262,264,-1,295,283,297,-1,262,295,297,-1,262,223,258,-1,290,295,296,-1,233,257,254,-1,232,234,231,-1,270,226,298,-1,234,229,233,-1,221,222,220,-1,298,226,235,-1,222,257,235,-1,235,257,298,-1,259,268,299,-1,300,299,268,-1,262,297,223,-1,300,268,284,-1,284,268,286,-1,280,278,260,-1,301,245,302,-1,245,301,244,-1,303,273,271,-1,245,305,304,-1,305,246,306,-1,241,307,236,-1,245,304,302,-1,269,234,232,-1,308,255,309,-1,310,285,311,-1,289,292,291,-1,291,295,290,-1,285,300,284,-1,312,300,285,-1,290,296,264,-1,312,285,310,-1,234,228,229,-1,228,265,227,-1,229,270,298,-1,229,227,270,-1,231,254,230,-1,308,252,255,-1,233,298,257,-1,233,229,298,-1,225,266,250,-1,227,266,226,-1,251,252,268,-1,256,254,257,-1,305,245,246,-1,236,307,238,-1,280,277,278,-1,218,215,216,-1,272,248,249,-1,239,240,243,-1,302,276,301,-1,313,239,242,-1,272,249,271,-1,301,314,244,-1,301,274,314,-1,274,301,276,-1,297,283,223,-1,221,219,222,-1,266,225,226,-1,225,214,220,-1,218,219,221,-1,216,223,219,-1,258,223,216,-1,241,236,240,-1,240,236,237,-1,316,215,315,-1,212,317,214,-1,318,218,214,-1,320,319,212,-1,317,318,214,-1,319,317,212,-1,315,215,218,-1,224,215,316,-1,282,261,321,-1,318,315,218,-1,282,280,261,-1,322,323,324,-1,325,326,327,-1,328,325,327,-1,329,330,331,-1,332,329,333,-1,329,332,330,-1,326,334,327,-1,331,335,329,-1,331,336,335,-1,337,338,339,-1,329,335,337,-1,339,338,340,-1,341,342,328,-1,327,341,328,-1,343,344,322,-1,329,337,339,-1,345,346,337,-1,335,345,337,-1,335,336,345,-1,336,347,345,-1,348,340,349,-1,340,350,349,-1,351,349,352,-1,351,348,349,-1,337,353,338,-1,337,346,353,-1,340,353,350,-1,340,338,353,-1,342,354,355,-1,341,354,342,-1,354,351,352,-1,341,351,354,-1,345,356,346,-1,345,357,356,-1,345,358,357,-1,347,358,345,-1,349,359,360,-1,349,350,359,-1,361,349,360,-1,352,349,361,-1,354,352,361,-1,354,361,362,-1,354,363,355,-1,354,362,363,-1,346,356,353,-1,356,364,353,-1,350,353,359,-1,353,364,359,-1,365,366,357,-1,357,366,356,-1,357,367,365,-1,343,368,369,-1,361,360,323,-1,360,359,323,-1,344,361,370,-1,361,323,370,-1,343,362,361,-1,344,370,322,-1,363,343,371,-1,343,322,368,-1,366,372,364,-1,366,364,356,-1,373,372,374,-1,359,364,373,-1,373,374,323,-1,358,367,357,-1,369,368,375,-1,376,377,378,-1,377,379,380,-1,322,381,379,-1,378,377,380,-1,382,380,383,-1,366,384,372,-1,385,386,387,-1,372,388,374,-1,372,384,388,-1,389,386,385,-1,390,391,366,-1,392,393,383,-1,374,388,324,-1,394,395,396,-1,365,397,398,-1,376,399,400,-1,378,399,376,-1,401,382,402,-1,403,382,401,-1,378,401,399,-1,378,403,401,-1,404,405,387,-1,404,387,386,-1,393,405,406,-1,393,387,405,-1,382,393,402,-1,393,406,402,-1,389,404,386,-1,389,407,404,-1,395,407,389,-1,395,408,407,-1,379,381,383,-1,409,322,379,-1,324,388,381,-1,410,393,392,-1,390,396,391,-1,366,391,384,-1,390,394,396,-1,365,390,366,-1,410,387,393,-1,385,387,410,-1,381,392,383,-1,322,324,381,-1,368,322,409,-1,368,409,375,-1,365,398,390,-1,377,376,411,-1,343,361,344,-1,362,343,363,-1,323,322,370,-1,323,374,324,-1,364,372,373,-1,359,373,323,-1,367,397,365,-1,371,343,369,-1,378,380,403,-1,382,403,380,-1,409,379,377,-1,409,377,411,-1,380,379,383,-1,393,382,383,-1,384,392,388,-1,388,392,381,-1,391,410,384,-1,384,410,392,-1,375,409,411,-1,390,398,394,-1,396,385,391,-1,396,395,389,-1,396,389,385,-1,385,410,391,-1,412,413,414,-1,415,416,417,-1,415,417,418,-1,419,420,421,-1,420,417,416,-1,422,419,421,-1,423,424,425,-1,426,424,423,-1,427,413,428,-1,421,420,416,-1,429,430,420,-1,420,430,417,-1,418,417,430,-1,418,430,431,-1,432,433,422,-1,422,433,434,-1,433,435,436,-1,433,432,435,-1,437,420,419,-1,437,429,420,-1,422,434,437,-1,422,437,419,-1,425,438,439,-1,423,425,439,-1,436,435,439,-1,435,423,439,-1,440,430,429,-1,440,441,430,-1,430,441,442,-1,431,430,442,-1,433,443,444,-1,433,444,434,-1,433,445,443,-1,433,436,445,-1,445,436,439,-1,445,439,446,-1,439,438,447,-1,439,447,446,-1,437,440,429,-1,437,448,440,-1,434,444,437,-1,437,444,448,-1,449,450,441,-1,440,449,441,-1,441,450,451,-1,427,452,453,-1,412,443,445,-1,443,412,444,-1,454,445,428,-1,412,445,454,-1,445,446,427,-1,454,428,413,-1,447,455,427,-1,413,427,453,-1,448,456,449,-1,448,449,440,-1,457,458,456,-1,444,457,448,-1,412,458,457,-1,442,441,451,-1,453,452,459,-1,460,461,462,-1,463,462,464,-1,465,413,463,-1,461,464,462,-1,466,467,464,-1,468,449,456,-1,469,470,471,-1,456,458,472,-1,456,472,468,-1,471,470,473,-1,474,475,449,-1,467,476,477,-1,414,472,458,-1,478,479,480,-1,450,481,482,-1,483,484,460,-1,461,460,484,-1,485,466,486,-1,466,487,486,-1,486,461,484,-1,486,487,461,-1,488,469,489,-1,469,488,470,-1,490,491,489,-1,490,489,469,-1,466,485,490,-1,490,485,491,-1,488,473,470,-1,488,492,473,-1,480,473,492,-1,493,480,492,-1,465,463,467,-1,463,413,494,-1,414,465,472,-1,477,490,495,-1,474,479,475,-1,468,474,449,-1,475,479,478,-1,449,475,450,-1,495,490,469,-1,495,469,471,-1,465,467,477,-1,465,414,413,-1,413,453,494,-1,453,459,494,-1,450,475,481,-1,462,496,460,-1,445,427,428,-1,446,447,427,-1,412,454,413,-1,412,414,458,-1,448,457,456,-1,444,412,457,-1,451,450,482,-1,427,455,452,-1,461,487,464,-1,466,464,487,-1,463,494,462,-1,494,496,462,-1,467,463,464,-1,490,467,466,-1,468,472,477,-1,472,465,477,-1,468,495,474,-1,468,477,495,-1,459,496,494,-1,475,478,481,-1,474,471,479,-1,479,473,480,-1,471,473,479,-1,495,471,474,-1,497,498,499,-1,500,501,502,-1,503,504,499,-1,505,502,501,-1,506,507,508,-1,509,497,499,-1,505,510,502,-1,498,503,499,-1,500,502,511,-1,512,513,514,-1,515,516,517,-1,518,519,520,-1,521,522,523,-1,522,524,525,-1,526,527,528,-1,526,529,530,-1,523,531,519,-1,532,533,534,-1,535,507,536,-1,537,534,538,-1,521,523,518,-1,539,518,540,-1,541,542,543,-1,544,545,546,-1,520,519,547,-1,548,549,550,-1,532,551,533,-1,542,552,553,-1,526,530,527,-1,540,520,544,-1,536,554,555,-1,551,556,533,-1,555,554,557,-1,535,536,555,-1,554,558,559,-1,536,507,546,-1,560,551,532,-1,534,533,538,-1,546,561,554,-1,554,561,558,-1,556,562,563,-1,551,526,564,-1,547,519,565,-1,557,554,566,-1,566,554,567,-1,554,559,567,-1,538,533,563,-1,568,556,528,-1,569,538,562,-1,538,563,562,-1,564,526,528,-1,570,562,571,-1,499,504,572,-1,499,572,573,-1,574,499,573,-1,575,576,502,-1,510,575,502,-1,577,578,579,-1,511,502,578,-1,580,581,497,-1,582,583,584,-1,585,580,586,-1,583,505,584,-1,587,506,588,-1,580,497,509,-1,583,510,505,-1,581,580,585,-1,582,589,583,-1,590,591,592,-1,593,594,595,-1,594,541,512,-1,596,597,598,-1,599,600,587,-1,601,522,521,-1,596,598,522,-1,602,603,604,-1,603,605,606,-1,603,593,605,-1,598,597,582,-1,607,608,609,-1,608,610,609,-1,600,539,587,-1,600,521,539,-1,611,612,613,-1,614,615,616,-1,599,617,600,-1,604,606,618,-1,619,607,620,-1,570,541,621,-1,602,611,603,-1,599,587,616,-1,622,535,555,-1,620,623,624,-1,625,555,557,-1,555,625,622,-1,625,626,627,-1,614,588,622,-1,619,620,628,-1,609,610,629,-1,625,630,614,-1,622,625,614,-1,629,631,623,-1,602,620,624,-1,632,633,634,-1,625,557,635,-1,625,636,626,-1,635,636,625,-1,608,637,610,-1,609,629,623,-1,610,569,631,-1,610,631,629,-1,623,631,638,-1,602,624,612,-1,580,591,590,-1,580,509,574,-1,591,574,639,-1,583,575,510,-1,640,575,583,-1,589,641,583,-1,583,641,640,-1,572,642,573,-1,575,643,576,-1,643,644,576,-1,578,644,579,-1,578,576,644,-1,589,645,641,-1,645,646,641,-1,647,648,640,-1,640,648,575,-1,502,576,578,-1,511,578,577,-1,641,647,640,-1,641,646,647,-1,587,539,506,-1,506,539,540,-1,600,601,521,-1,600,617,601,-1,539,521,518,-1,540,518,520,-1,546,540,544,-1,506,540,507,-1,588,535,622,-1,588,506,508,-1,574,509,499,-1,573,642,649,-1,650,573,649,-1,651,573,650,-1,591,652,592,-1,652,591,653,-1,653,639,654,-1,574,573,651,-1,591,580,574,-1,580,590,586,-1,591,639,653,-1,651,650,655,-1,588,508,535,-1,508,507,535,-1,536,546,554,-1,507,540,546,-1,587,588,614,-1,616,587,614,-1,614,630,615,-1,547,565,656,-1,529,657,548,-1,634,597,596,-1,658,585,659,-1,517,503,498,-1,550,549,660,-1,529,548,530,-1,602,612,611,-1,604,603,606,-1,632,634,617,-1,599,632,617,-1,531,525,661,-1,525,500,661,-1,518,523,519,-1,612,623,638,-1,533,556,563,-1,607,609,620,-1,625,627,630,-1,560,662,551,-1,546,545,561,-1,565,531,661,-1,530,548,550,-1,530,550,663,-1,514,513,663,-1,519,531,565,-1,524,501,525,-1,606,605,659,-1,617,634,596,-1,658,581,585,-1,617,596,601,-1,601,596,522,-1,522,531,523,-1,584,505,524,-1,658,515,497,-1,497,517,498,-1,581,658,497,-1,631,664,570,-1,562,570,664,-1,569,562,664,-1,569,664,631,-1,556,564,528,-1,551,564,556,-1,609,623,620,-1,624,623,612,-1,631,570,665,-1,562,568,571,-1,570,571,666,-1,667,621,541,-1,612,638,667,-1,568,528,542,-1,571,542,666,-1,553,663,543,-1,668,667,669,-1,612,667,613,-1,665,570,621,-1,667,665,621,-1,570,666,541,-1,541,666,542,-1,611,593,603,-1,613,668,593,-1,552,663,553,-1,527,530,663,-1,593,668,669,-1,605,593,595,-1,541,543,513,-1,512,541,513,-1,543,542,553,-1,663,513,543,-1,528,527,552,-1,542,528,552,-1,527,663,552,-1,613,667,668,-1,611,613,593,-1,669,541,594,-1,669,667,541,-1,593,669,594,-1,667,638,665,-1,638,631,665,-1,562,556,568,-1,571,568,542,-1,594,512,595,-1,605,670,659,-1,660,549,517,-1,514,550,660,-1,671,595,512,-1,670,658,659,-1,517,549,503,-1,516,514,660,-1,497,515,517,-1,671,512,515,-1,605,595,670,-1,670,671,658,-1,670,595,671,-1,658,671,515,-1,514,663,550,-1,516,660,517,-1,512,514,516,-1,515,512,516,-1,525,501,500,-1,524,505,501,-1,598,584,524,-1,598,582,584,-1,598,524,522,-1,522,525,531,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #33, 1839 total numbers made up of 613 3-tuple values */
	this.Coordinate_12_33_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(.65704),doubleToFloat(-.10533),doubleToFloat(-.64578),doubleToFloat(.6573),doubleToFloat(-.09875),doubleToFloat(-.53137),doubleToFloat(.69262),doubleToFloat(-.04461),doubleToFloat(-.6079),doubleToFloat(.46405),doubleToFloat(.1234),doubleToFloat(-.9148),doubleToFloat(.52676),doubleToFloat(.13346),doubleToFloat(-.99004),doubleToFloat(.56055),doubleToFloat(.14585),doubleToFloat(-1.0822),doubleToFloat(.41312),doubleToFloat(.01848),doubleToFloat(-.99593),doubleToFloat(.44102),doubleToFloat(.01863),doubleToFloat(-.79782),doubleToFloat(.62915),doubleToFloat(-.11846),doubleToFloat(-.90891),doubleToFloat(.63043),doubleToFloat(-.07812),doubleToFloat(-.76992)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.67983),doubleToFloat(-.06998),doubleToFloat(-.90994),doubleToFloat(.48069),doubleToFloat(-.07144),doubleToFloat(-1.22732),doubleToFloat(.49067),doubleToFloat(-.13328),doubleToFloat(-1.07912),doubleToFloat(.66575),doubleToFloat(-.06952),doubleToFloat(-1.11726),doubleToFloat(.69442),doubleToFloat(.04579),doubleToFloat(-1.00054),doubleToFloat(.68239),doubleToFloat(.00872),doubleToFloat(-.76787),doubleToFloat(.69518),doubleToFloat(.04643),doubleToFloat(-1.0635),doubleToFloat(.63631),doubleToFloat(.0591),doubleToFloat(-1.20454),doubleToFloat(.53444),doubleToFloat(-.10871),doubleToFloat(-.76199),doubleToFloat(.50398),doubleToFloat(-.15514),doubleToFloat(-1.04687)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.60585),doubleToFloat(-.10617),doubleToFloat(-1.10164),doubleToFloat(.45279),doubleToFloat(-.07425),doubleToFloat(-.92017),doubleToFloat(.45074),doubleToFloat(-.07047),doubleToFloat(-1.00771),doubleToFloat(.47762),doubleToFloat(.05457),doubleToFloat(-.86898),doubleToFloat(.62326),doubleToFloat(.13156),doubleToFloat(-1.08808),doubleToFloat(.58691),doubleToFloat(.1427),doubleToFloat(-.80064),doubleToFloat(.55876),doubleToFloat(.16166),doubleToFloat(-1.08296),doubleToFloat(.5329),doubleToFloat(.21145),doubleToFloat(-1.085),doubleToFloat(.49093),doubleToFloat(.18278),doubleToFloat(-1.22502),doubleToFloat(.66268),doubleToFloat(.09839),doubleToFloat(-1.08014)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.65602),doubleToFloat(.09959),doubleToFloat(-1.02051),doubleToFloat(.48171),doubleToFloat(.11969),doubleToFloat(-.79321),doubleToFloat(.66396),doubleToFloat(.05165),doubleToFloat(-.78861),doubleToFloat(.65167),doubleToFloat(.06225),doubleToFloat(-.60585),doubleToFloat(.59536),doubleToFloat(.09568),doubleToFloat(-.64732),doubleToFloat(.50654),doubleToFloat(.08444),doubleToFloat(-.63862),doubleToFloat(.47506),doubleToFloat(.00025),doubleToFloat(-.64246),doubleToFloat(.54314),doubleToFloat(.11295),doubleToFloat(-.59843),doubleToFloat(.47608),doubleToFloat(-.00945),doubleToFloat(-.59715),doubleToFloat(.49579),doubleToFloat(-.06158),doubleToFloat(-.59817)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.47173),doubleToFloat(.0571),doubleToFloat(-.59459),doubleToFloat(.58845),doubleToFloat(-.12662),doubleToFloat(-.60176),doubleToFloat(.60509),doubleToFloat(.0947),doubleToFloat(-.60201),doubleToFloat(.45484),doubleToFloat(.05076),doubleToFloat(-.51831),doubleToFloat(.49554),doubleToFloat(-.057),doubleToFloat(-.50142),doubleToFloat(.47915),doubleToFloat(-.03274),doubleToFloat(-.40697),doubleToFloat(.69774),doubleToFloat(-.04259),doubleToFloat(-.4981),doubleToFloat(.68622),doubleToFloat(-.07901),doubleToFloat(-.494),doubleToFloat(.68853),doubleToFloat(-.02069),doubleToFloat(-.39264),doubleToFloat(.58051),doubleToFloat(-.10095),doubleToFloat(-.38419)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.4405),doubleToFloat(.08109),doubleToFloat(-.43334),doubleToFloat(.5626),doubleToFloat(.1321),doubleToFloat(-.52548),doubleToFloat(.65679),doubleToFloat(.06537),doubleToFloat(-.51217),doubleToFloat(.64937),doubleToFloat(.09373),doubleToFloat(-.42003),doubleToFloat(.54852),doubleToFloat(.16143),doubleToFloat(-.44153),doubleToFloat(.59024),doubleToFloat(-.12414),doubleToFloat(-.49093),doubleToFloat(.44153),doubleToFloat(.10653),doubleToFloat(-.07891),doubleToFloat(.41337),doubleToFloat(.18549),doubleToFloat(-.10295),doubleToFloat(.5649),doubleToFloat(.19717),doubleToFloat(-.0891),doubleToFloat(.59306),doubleToFloat(.11815),doubleToFloat(-.06501)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.49554),doubleToFloat(.24587),doubleToFloat(-.1097),doubleToFloat(.51089),doubleToFloat(.05782),doubleToFloat(-.05826),doubleToFloat(.51013),doubleToFloat(.06163),doubleToFloat(-1.26878),doubleToFloat(.64348),doubleToFloat(-.10917),doubleToFloat(-1.02179),doubleToFloat(.49886),doubleToFloat(-.08127),doubleToFloat(-.78272),doubleToFloat(.49605),doubleToFloat(.1782),doubleToFloat(-.92093),doubleToFloat(.62991),doubleToFloat(-.12179),doubleToFloat(-.49042),doubleToFloat(.67752),doubleToFloat(-.0611),doubleToFloat(-1.07759),doubleToFloat(-.6317),doubleToFloat(.04561),doubleToFloat(-.6271),doubleToFloat(-.6678),doubleToFloat(.10699),doubleToFloat(-.58973)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.64425),doubleToFloat(.04326),doubleToFloat(-.51192),doubleToFloat(-.45151),doubleToFloat(.33095),doubleToFloat(-1.02741),doubleToFloat(-.31329),doubleToFloat(.21206),doubleToFloat(-1.08629),doubleToFloat(-.40441),doubleToFloat(.28642),doubleToFloat(-.85593),doubleToFloat(-.34836),doubleToFloat(.18608),doubleToFloat(-.93911),doubleToFloat(-.3975),doubleToFloat(.17784),doubleToFloat(-.74433),doubleToFloat(-.61737),doubleToFloat(.10361),doubleToFloat(-.86693),doubleToFloat(-.59126),doubleToFloat(.08104),doubleToFloat(-.74509),doubleToFloat(-.55287),doubleToFloat(.04804),doubleToFloat(-.8613),doubleToFloat(-.62044),doubleToFloat(.13469),doubleToFloat(-1.07221)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.47301),doubleToFloat(.03507),doubleToFloat(-1.03253),doubleToFloat(-.45637),doubleToFloat(.0893),doubleToFloat(-1.18407),doubleToFloat(-.63426),doubleToFloat(.23405),doubleToFloat(-.96522),doubleToFloat(-.64041),doubleToFloat(.16929),doubleToFloat(-.74202),doubleToFloat(-.57027),doubleToFloat(.25532),doubleToFloat(-1.15514),doubleToFloat(-.63324),doubleToFloat(.24244),doubleToFloat(-1.02383),doubleToFloat(-.49784),doubleToFloat(.04664),doubleToFloat(-.72974),doubleToFloat(-.569),doubleToFloat(.09266),doubleToFloat(-1.05148),doubleToFloat(-.4382),doubleToFloat(.02017),doubleToFloat(-1.01257),doubleToFloat(-.40365),doubleToFloat(.07343),doubleToFloat(-.87845)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.38701),doubleToFloat(.0997),doubleToFloat(-.96163),doubleToFloat(-.37984),doubleToFloat(.19604),doubleToFloat(-.82803),doubleToFloat(-.5393),doubleToFloat(.32737),doubleToFloat(-1.03484),doubleToFloat(-.53854),doubleToFloat(.3028),doubleToFloat(-.75405),doubleToFloat(-.40083),doubleToFloat(.38087),doubleToFloat(-1.03484),doubleToFloat(-.44434),doubleToFloat(.34503),doubleToFloat(-1.0287),doubleToFloat(-.59101),doubleToFloat(.29435),doubleToFloat(-1.03356),doubleToFloat(-.38471),doubleToFloat(.33633),doubleToFloat(-1.18176),doubleToFloat(-.58845),doubleToFloat(.28923),doubleToFloat(-.97648),doubleToFloat(-.43539),doubleToFloat(.2772),doubleToFloat(-.73742)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.61865),doubleToFloat(.21311),doubleToFloat(-.75713),doubleToFloat(-.62787),doubleToFloat(.20594),doubleToFloat(-.57463),doubleToFloat(-.56439),doubleToFloat(.24377),doubleToFloat(-.60662),doubleToFloat(-.44818),doubleToFloat(.14387),doubleToFloat(-.59638),doubleToFloat(-.47711),doubleToFloat(.22865),doubleToFloat(-.58947),doubleToFloat(-.51806),doubleToFloat(.25404),doubleToFloat(-.55159),doubleToFloat(-.47685),doubleToFloat(.07702),doubleToFloat(-.55978),doubleToFloat(-.45509),doubleToFloat(.12959),doubleToFloat(-.55261),doubleToFloat(-.44895),doubleToFloat(.19555),doubleToFloat(-.54493),doubleToFloat(-.56183),doubleToFloat(.02859),doubleToFloat(-.58615)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.58),doubleToFloat(.2383),doubleToFloat(-.56311),doubleToFloat(-.4853),doubleToFloat(.07658),doubleToFloat(-.46047),doubleToFloat(-.44127),doubleToFloat(.18191),doubleToFloat(-.46917),doubleToFloat(-.48427),doubleToFloat(.08488),doubleToFloat(-.36423),doubleToFloat(-.67445),doubleToFloat(.06373),doubleToFloat(-.48914),doubleToFloat(-.68443),doubleToFloat(.1008),doubleToFloat(-.48837),doubleToFloat(-.69697),doubleToFloat(.09842),doubleToFloat(-.38752),doubleToFloat(-.59101),doubleToFloat(.01605),doubleToFloat(-.37267),doubleToFloat(-.54545),doubleToFloat(.26722),doubleToFloat(-.4812),doubleToFloat(-.43308),doubleToFloat(.2085),doubleToFloat(-.3888)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.63964),doubleToFloat(.20733),doubleToFloat(-.47455),doubleToFloat(-.65218),doubleToFloat(.21268),doubleToFloat(-.37728),doubleToFloat(-.53777),doubleToFloat(.29256),doubleToFloat(-.40237),doubleToFloat(-.58154),doubleToFloat(.01367),doubleToFloat(-.47608),doubleToFloat(-.45561),doubleToFloat(.23057),doubleToFloat(-.03727),doubleToFloat(-.42566),doubleToFloat(.30587),doubleToFloat(-.05995),doubleToFloat(-.57539),doubleToFloat(.32455),doubleToFloat(-.05383),doubleToFloat(-.60637),doubleToFloat(.248),doubleToFloat(-.03246),doubleToFloat(-.50705),doubleToFloat(.36628),doubleToFloat(-.07108),doubleToFloat(-.52651),doubleToFloat(.18506),doubleToFloat(-.02117)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.44639),doubleToFloat(.22394),doubleToFloat(-1.22553),doubleToFloat(-.59536),doubleToFloat(.10131),doubleToFloat(-.97085),doubleToFloat(-.45944),doubleToFloat(.0753),doubleToFloat(-.74407),doubleToFloat(-.36039),doubleToFloat(.32507),doubleToFloat(-.87922),doubleToFloat(-.6207),doubleToFloat(.018),doubleToFloat(-.48248),doubleToFloat(-.62735),doubleToFloat(.14096),doubleToFloat(-1.03638),doubleToFloat(.30126),doubleToFloat(-.06353),doubleToFloat(2.50353),doubleToFloat(.19143),doubleToFloat(-.02746),doubleToFloat(2.50429),doubleToFloat(.20771),doubleToFloat(.15153),doubleToFloat(2.50686),doubleToFloat(.21234),doubleToFloat(.20236),doubleToFloat(2.45668)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.19829),doubleToFloat(.35988),doubleToFloat(2.50942),doubleToFloat(.50654),doubleToFloat(.32993),doubleToFloat(2.50942),doubleToFloat(.4318),doubleToFloat(.12987),doubleToFloat(2.5066),doubleToFloat(.46457),doubleToFloat(.17843),doubleToFloat(2.45643),doubleToFloat(.24152),doubleToFloat(-.01882),doubleToFloat(2.18845),doubleToFloat(.2224),doubleToFloat(.13131),doubleToFloat(2.19843),doubleToFloat(.18897),doubleToFloat(-.0535),doubleToFloat(2.34304),doubleToFloat(.2772),doubleToFloat(.60944),doubleToFloat(2.38477),doubleToFloat(.37779),doubleToFloat(.62633),doubleToFloat(2.35942),doubleToFloat(.28181),doubleToFloat(.66012),doubleToFloat(2.41087)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.47813),doubleToFloat(.6422),doubleToFloat(2.41087),doubleToFloat(.38343),doubleToFloat(.6893),doubleToFloat(2.41139),doubleToFloat(.25427),doubleToFloat(.35476),doubleToFloat(2.3067),doubleToFloat(.19847),doubleToFloat(.48786),doubleToFloat(2.43417),doubleToFloat(.19842),doubleToFloat(.48683),doubleToFloat(2.51095),doubleToFloat(.2987),doubleToFloat(-.08848),doubleToFloat(2.31361),doubleToFloat(.41337),doubleToFloat(-.07433),doubleToFloat(2.34151),doubleToFloat(.39008),doubleToFloat(-.03402),doubleToFloat(2.21353),doubleToFloat(.30382),doubleToFloat(-.04999),doubleToFloat(2.1864),doubleToFloat(.42975),doubleToFloat(.11075),doubleToFloat(2.22325)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.45049),doubleToFloat(.3371),doubleToFloat(2.30644),doubleToFloat(.41337),doubleToFloat(.24014),doubleToFloat(2.22991),doubleToFloat(.52932),doubleToFloat(.45637),doubleToFloat(2.51095),doubleToFloat(.26492),doubleToFloat(.25494),doubleToFloat(2.20483),doubleToFloat(.34068),doubleToFloat(.37319),doubleToFloat(2.28162),doubleToFloat(.19834),doubleToFloat(.36039),doubleToFloat(2.43289),doubleToFloat(.50654),doubleToFloat(.3307),doubleToFloat(2.43289),doubleToFloat(.52932),doubleToFloat(.4574),doubleToFloat(2.43417),doubleToFloat(.36141),doubleToFloat(.52497),doubleToFloat(2.35814),doubleToFloat(.24915),doubleToFloat(.6102),doubleToFloat(2.51275)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.26799),doubleToFloat(.50731),doubleToFloat(2.38349),doubleToFloat(.47813),doubleToFloat(.63938),doubleToFloat(2.4979),doubleToFloat(.28181),doubleToFloat(.6573),doubleToFloat(2.4979),doubleToFloat(.38343),doubleToFloat(.68853),doubleToFloat(2.48818),doubleToFloat(.50142),doubleToFloat(.58742),doubleToFloat(2.51248),doubleToFloat(.46431),doubleToFloat(.48965),doubleToFloat(2.38323),doubleToFloat(.18908),doubleToFloat(-.05352),doubleToFloat(2.45106),doubleToFloat(.29896),doubleToFloat(-.08994),doubleToFloat(2.44952),doubleToFloat(.41337),doubleToFloat(-.07454),doubleToFloat(2.45003),doubleToFloat(.41568),doubleToFloat(-.04812),doubleToFloat(2.50378)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.47352),doubleToFloat(.59152),doubleToFloat(2.3845),doubleToFloat(.33172),doubleToFloat(.27439),doubleToFloat(2.20585),doubleToFloat(-.17313),doubleToFloat(.10141),doubleToFloat(2.50353),doubleToFloat(-.07843),doubleToFloat(.31355),doubleToFloat(2.50737),doubleToFloat(-.06315),doubleToFloat(.13694),doubleToFloat(2.50481),doubleToFloat(-.0827),doubleToFloat(.36449),doubleToFloat(2.4572),doubleToFloat(-.376),doubleToFloat(.4963),doubleToFloat(2.50942),doubleToFloat(-.06778),doubleToFloat(.52011),doubleToFloat(2.50993),doubleToFloat(-.30254),doubleToFloat(.29538),doubleToFloat(2.50686),doubleToFloat(-.33505),doubleToFloat(.34401),doubleToFloat(2.45668)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.10515),doubleToFloat(.30408),doubleToFloat(2.11115),doubleToFloat(-.11219),doubleToFloat(.14736),doubleToFloat(2.18665),doubleToFloat(-.06007),doubleToFloat(.11078),doubleToFloat(2.34176),doubleToFloat(-.14505),doubleToFloat(.77427),doubleToFloat(2.38502),doubleToFloat(-.14938),doubleToFloat(.82495),doubleToFloat(2.41139),doubleToFloat(-.24536),doubleToFloat(.79193),doubleToFloat(2.35968),doubleToFloat(-.25079),doubleToFloat(.8549),doubleToFloat(2.41164),doubleToFloat(-.3458),doubleToFloat(.80832),doubleToFloat(2.41087),doubleToFloat(-.12363),doubleToFloat(.5196),doubleToFloat(2.30772),doubleToFloat(-.06704),doubleToFloat(.65141),doubleToFloat(2.43468)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.06709),doubleToFloat(.65039),doubleToFloat(2.51147),doubleToFloat(-.28437),doubleToFloat(.09043),doubleToFloat(2.33946),doubleToFloat(-.16978),doubleToFloat(.07628),doubleToFloat(2.31105),doubleToFloat(-.26082),doubleToFloat(.13215),doubleToFloat(2.21123),doubleToFloat(-.17441),doubleToFloat(.10528),doubleToFloat(2.18307),doubleToFloat(-.30024),doubleToFloat(.27669),doubleToFloat(2.223),doubleToFloat(-.31995),doubleToFloat(.5027),doubleToFloat(2.30746),doubleToFloat(-.2836),doubleToFloat(.40595),doubleToFloat(2.23119),doubleToFloat(-.39802),doubleToFloat(.623),doubleToFloat(2.51095),doubleToFloat(-.13481),doubleToFloat(.42054),doubleToFloat(2.20611)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.20996),doubleToFloat(.53854),doubleToFloat(2.28263),doubleToFloat(-.06775),doubleToFloat(.52087),doubleToFloat(2.43339),doubleToFloat(-.39802),doubleToFloat(.62403),doubleToFloat(2.43417),doubleToFloat(-.376),doubleToFloat(.49707),doubleToFloat(2.43314),doubleToFloat(-.22975),doubleToFloat(.69032),doubleToFloat(2.3584),doubleToFloat(-.11708),doubleToFloat(.77504),doubleToFloat(2.513),doubleToFloat(-.13643),doubleToFloat(.6724),doubleToFloat(2.38374),doubleToFloat(-.3458),doubleToFloat(.80576),doubleToFloat(2.4979),doubleToFloat(-.25084),doubleToFloat(.85413),doubleToFloat(2.48843),doubleToFloat(-.14943),doubleToFloat(.82214),doubleToFloat(2.49841)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.3696),doubleToFloat(.7538),doubleToFloat(2.51275),doubleToFloat(-.33275),doubleToFloat(.65577),doubleToFloat(2.38349),doubleToFloat(-.06074),doubleToFloat(.11075),doubleToFloat(2.45131),doubleToFloat(-.28514),doubleToFloat(.09056),doubleToFloat(2.44952),doubleToFloat(-.17065),doubleToFloat(.07469),doubleToFloat(2.44901),doubleToFloat(-.28744),doubleToFloat(.11743),doubleToFloat(2.50378),doubleToFloat(-.34145),doubleToFloat(.75764),doubleToFloat(2.38477),doubleToFloat(-.20164),doubleToFloat(.44025),doubleToFloat(2.20738),doubleToFloat(-.46661),doubleToFloat(.35527),doubleToFloat(.0417),doubleToFloat(-.39981),doubleToFloat(.43308),doubleToFloat(.10689)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.53419),doubleToFloat(.37319),doubleToFloat(.04333),doubleToFloat(-.5562),doubleToFloat(.24851),doubleToFloat(.09248),doubleToFloat(-.55953),doubleToFloat(.3028),doubleToFloat(.25197),doubleToFloat(-.53342),doubleToFloat(.25427),doubleToFloat(.19215),doubleToFloat(-.59485),doubleToFloat(.30126),doubleToFloat(.0817),doubleToFloat(-.57053),doubleToFloat(.33531),doubleToFloat(.25022),doubleToFloat(-.47659),doubleToFloat(.48376),doubleToFloat(.23569),doubleToFloat(-.52599),doubleToFloat(.43564),doubleToFloat(.21493),doubleToFloat(-.50142),doubleToFloat(.44767),doubleToFloat(.26594),doubleToFloat(-.52446),doubleToFloat(.34426),doubleToFloat(.33812)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.51576),doubleToFloat(.21772),doubleToFloat(.09696),doubleToFloat(-.45279),doubleToFloat(.4533),doubleToFloat(.13233),doubleToFloat(-.44178),doubleToFloat(.50757),doubleToFloat(.2749),doubleToFloat(-.39008),doubleToFloat(.49528),doubleToFloat(.2987),doubleToFloat(-.36474),doubleToFloat(.47455),doubleToFloat(.30587),doubleToFloat(-.35373),doubleToFloat(.47506),doubleToFloat(.34631),doubleToFloat(-.33914),doubleToFloat(.40621),doubleToFloat(.33249),doubleToFloat(-.32583),doubleToFloat(.41465),doubleToFloat(.35118),doubleToFloat(-.31585),doubleToFloat(.41644),doubleToFloat(.33556),doubleToFloat(-.36986),doubleToFloat(.45586),doubleToFloat(.35834)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.30971),doubleToFloat(.43359),doubleToFloat(.33914),doubleToFloat(-.46405),doubleToFloat(.48069),doubleToFloat(.29179),doubleToFloat(-.33351),doubleToFloat(.45305),doubleToFloat(.2062),doubleToFloat(-.32993),doubleToFloat(.48479),doubleToFloat(.20239),doubleToFloat(-.31355),doubleToFloat(.47685),doubleToFloat(.20554),doubleToFloat(-.34862),doubleToFloat(.40672),doubleToFloat(.17485),doubleToFloat(-.37831),doubleToFloat(.44204),doubleToFloat(.18385),doubleToFloat(-.33556),doubleToFloat(.41004),doubleToFloat(.18969),doubleToFloat(-.41824),doubleToFloat(.41772),doubleToFloat(.15744),doubleToFloat(-.38727),doubleToFloat(.4359),doubleToFloat(.1695)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.37549),doubleToFloat(.44358),doubleToFloat(.13781),doubleToFloat(-.31944),doubleToFloat(.44588),doubleToFloat(.17226),doubleToFloat(-.3499),doubleToFloat(.46866),doubleToFloat(.16801),doubleToFloat(-.40134),doubleToFloat(.45996),doubleToFloat(.2598),doubleToFloat(-.39341),doubleToFloat(.44025),doubleToFloat(.32763),doubleToFloat(-.31688),doubleToFloat(.43283),doubleToFloat(.31585),doubleToFloat(-.41081),doubleToFloat(.4231),doubleToFloat(.34759),doubleToFloat(-.42182),doubleToFloat(.45714),doubleToFloat(.32276),doubleToFloat(-.50168),doubleToFloat(.31124),doubleToFloat(.3202),doubleToFloat(-.36935),doubleToFloat(.36884),doubleToFloat(.14549)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.44102),doubleToFloat(.2877),doubleToFloat(.3586),doubleToFloat(-.45151),doubleToFloat(.29154),doubleToFloat(.33889),doubleToFloat(-.42694),doubleToFloat(.26287),doubleToFloat(.30971),doubleToFloat(-.41542),doubleToFloat(.49323),doubleToFloat(.26184),doubleToFloat(-.42515),doubleToFloat(.43155),doubleToFloat(.27797),doubleToFloat(-.40058),doubleToFloat(.50449),doubleToFloat(.33095),doubleToFloat(-.35501),doubleToFloat(.39955),doubleToFloat(.11377),doubleToFloat(-.42566),doubleToFloat(.32507),doubleToFloat(.04771),doubleToFloat(-.43078),doubleToFloat(.39597),doubleToFloat(.34529),doubleToFloat(-.35706),doubleToFloat(.37344),doubleToFloat(.30792)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.34478),doubleToFloat(.34759),doubleToFloat(.26543),doubleToFloat(-.33914),doubleToFloat(.38112),doubleToFloat(.31201),doubleToFloat(-.34298),doubleToFloat(.36474),doubleToFloat(.34478),doubleToFloat(-.35655),doubleToFloat(.30894),doubleToFloat(.28283),doubleToFloat(-.39034),doubleToFloat(.27567),doubleToFloat(.29922),doubleToFloat(-.36986),doubleToFloat(.29922),doubleToFloat(.32583),doubleToFloat(-.36525),doubleToFloat(.34426),doubleToFloat(.3499),doubleToFloat(-.33403),doubleToFloat(.33582),doubleToFloat(.31048),doubleToFloat(-.41619),doubleToFloat(.29614),doubleToFloat(.36397),doubleToFloat(-.40544),doubleToFloat(.2708),doubleToFloat(.33479)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.4748),doubleToFloat(.33991),doubleToFloat(.35885),doubleToFloat(-.41644),doubleToFloat(.4853),doubleToFloat(.34298),doubleToFloat(-.34298),doubleToFloat(.41926),doubleToFloat(.14244),doubleToFloat(-.30126),doubleToFloat(.46329),doubleToFloat(.20635),doubleToFloat(.44614),doubleToFloat(.23937),doubleToFloat(.00376),doubleToFloat(.51243),doubleToFloat(.25775),doubleToFloat(.00632),doubleToFloat(.38189),doubleToFloat(.31355),doubleToFloat(.08649),doubleToFloat(.51371),doubleToFloat(.12022),doubleToFloat(.13817),doubleToFloat(.54596),doubleToFloat(.15603),doubleToFloat(.19875),doubleToFloat(.53393),doubleToFloat(.12463),doubleToFloat(.04354)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.57232),doubleToFloat(.17925),doubleToFloat(.03343),doubleToFloat(.55825),doubleToFloat(.1878),doubleToFloat(.20144),doubleToFloat(.46917),doubleToFloat(.33863),doubleToFloat(.21989),doubleToFloat(.51499),doubleToFloat(.29384),doubleToFloat(.18736),doubleToFloat(.51908),doubleToFloat(.18222),doubleToFloat(.29282),doubleToFloat(.49477),doubleToFloat(.29717),doubleToFloat(.24147),doubleToFloat(.49272),doubleToFloat(.09435),doubleToFloat(.04697),doubleToFloat(.43692),doubleToFloat(.32788),doubleToFloat(.11275),doubleToFloat(.4382),doubleToFloat(.35604),doubleToFloat(.26517),doubleToFloat(.35425),doubleToFloat(.31355),doubleToFloat(.33633)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.36218),doubleToFloat(.31995),doubleToFloat(.29563),doubleToFloat(.38778),doubleToFloat(.34094),doubleToFloat(.29026),doubleToFloat(.31355),doubleToFloat(.25877),doubleToFloat(.31841),doubleToFloat(.3243),doubleToFloat(.25383),doubleToFloat(.33249),doubleToFloat(.33607),doubleToFloat(.24841),doubleToFloat(.31176),doubleToFloat(.30843),doubleToFloat(.27515),doubleToFloat(.32532),doubleToFloat(.37037),doubleToFloat(.2923),doubleToFloat(.3435),doubleToFloat(.46073),doubleToFloat(.32609),doubleToFloat(.27541),doubleToFloat(.32353),doubleToFloat(.31713),doubleToFloat(.19632),doubleToFloat(.30434),doubleToFloat(.34094),doubleToFloat(.20129)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.32072),doubleToFloat(.34887),doubleToFloat(.19834),doubleToFloat(.32251),doubleToFloat(.27797),doubleToFloat(.1718),doubleToFloat(.36576),doubleToFloat(.30945),doubleToFloat(.16832),doubleToFloat(.33403),doubleToFloat(.27771),doubleToFloat(.15455),doubleToFloat(.37344),doubleToFloat(.30613),doubleToFloat(.1514),doubleToFloat(.40211),doubleToFloat(.29051),doubleToFloat(.132),doubleToFloat(.30664),doubleToFloat(.31636),doubleToFloat(.16279),doubleToFloat(.35988),doubleToFloat(.31918),doubleToFloat(.12255),doubleToFloat(.33761),doubleToFloat(.33863),doubleToFloat(.16031),doubleToFloat(.39494),doubleToFloat(.31278),doubleToFloat(.24511)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.3911),doubleToFloat(.28155),doubleToFloat(.30869),doubleToFloat(.31381),doubleToFloat(.27823),doubleToFloat(.30152),doubleToFloat(.40902),doubleToFloat(.26082),doubleToFloat(.32404),doubleToFloat(.41977),doubleToFloat(.29819),doubleToFloat(.30485),doubleToFloat(.494),doubleToFloat(.15329),doubleToFloat(.2708),doubleToFloat(.35092),doubleToFloat(.24562),doubleToFloat(.11411),doubleToFloat(.43539),doubleToFloat(.12475),doubleToFloat(.3092),doubleToFloat(.44434),doubleToFloat(.13202),doubleToFloat(.28974),doubleToFloat(.41696),doubleToFloat(.10955),doubleToFloat(.25801),doubleToFloat(.4103),doubleToFloat(.34478),doubleToFloat(.25179)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.419),doubleToFloat(.28104),doubleToFloat(.25596),doubleToFloat(.40083),doubleToFloat(.34401),doubleToFloat(.32276),doubleToFloat(.33633),doubleToFloat(.28053),doubleToFloat(.09012),doubleToFloat(.40493),doubleToFloat(.20907),doubleToFloat(.00715),doubleToFloat(.42796),doubleToFloat(.23413),doubleToFloat(.31585),doubleToFloat(.33377),doubleToFloat(.22734),doubleToFloat(.28744),doubleToFloat(.33479),doubleToFloat(.20272),doubleToFloat(.23533),doubleToFloat(.35092),doubleToFloat(.22015),doubleToFloat(.28053),doubleToFloat(.33914),doubleToFloat(.20551),doubleToFloat(.31611),doubleToFloat(.34657),doubleToFloat(.16138),doubleToFloat(.24472)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.36244),doubleToFloat(.14385),doubleToFloat(.28411),doubleToFloat(.3801),doubleToFloat(.12473),doubleToFloat(.25263),doubleToFloat(.36116),doubleToFloat(.18393),doubleToFloat(.31611),doubleToFloat(.32686),doubleToFloat(.18324),doubleToFloat(.27823),doubleToFloat(.41107),doubleToFloat(.13282),doubleToFloat(.31765),doubleToFloat(.39725),doubleToFloat(.11321),doubleToFloat(.28539),doubleToFloat(.47071),doubleToFloat(.17531),doubleToFloat(.31585),doubleToFloat(.41696),doubleToFloat(.32276),doubleToFloat(.33019),doubleToFloat(.32686),doubleToFloat(.29538),doubleToFloat(.12519),doubleToFloat(.29179),doubleToFloat(.32788),doubleToFloat(.20067)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.31432),doubleToFloat(.46021),doubleToFloat(1.35479),doubleToFloat(.44946),doubleToFloat(.3952),doubleToFloat(1.22041),doubleToFloat(.44204),doubleToFloat(.40876),doubleToFloat(1.35044),doubleToFloat(.06775),doubleToFloat(.17257),doubleToFloat(.35629),doubleToFloat(.04292),doubleToFloat(.48888),doubleToFloat(.24874),doubleToFloat(.09278),doubleToFloat(.48581),doubleToFloat(.25028),doubleToFloat(.07794),doubleToFloat(.17149),doubleToFloat(.3545),doubleToFloat(.09179),doubleToFloat(-.10118),doubleToFloat(.39008),doubleToFloat(.04123),doubleToFloat(-.09125),doubleToFloat(.4144),doubleToFloat(.06486),doubleToFloat(-.14951),doubleToFloat(.24306)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.06496),doubleToFloat(.47301),doubleToFloat(.10174),doubleToFloat(.10364),doubleToFloat(-.05559),doubleToFloat(.44998),doubleToFloat(.08303),doubleToFloat(.19445),doubleToFloat(.45817),doubleToFloat(.24173),doubleToFloat(-.06696),doubleToFloat(.45279),doubleToFloat(.41056),doubleToFloat(-.00623),doubleToFloat(.42054),doubleToFloat(.39725),doubleToFloat(-.06947),doubleToFloat(.29435),doubleToFloat(.47455),doubleToFloat(.16399),doubleToFloat(.32609),doubleToFloat(.10832),doubleToFloat(.4597),doubleToFloat(.33019),doubleToFloat(.17976),doubleToFloat(.39648),doubleToFloat(1.21938),doubleToFloat(.26364),doubleToFloat(.4702),doubleToFloat(1.25266)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.14843),doubleToFloat(.02093),doubleToFloat(.7259),doubleToFloat(.30075),doubleToFloat(-.00436),doubleToFloat(.72897),doubleToFloat(.09294),doubleToFloat(.22256),doubleToFloat(.68213),doubleToFloat(.41184),doubleToFloat(.39392),doubleToFloat(.30869),doubleToFloat(.45791),doubleToFloat(.42694),doubleToFloat(.66549),doubleToFloat(.49707),doubleToFloat(.22312),doubleToFloat(.68392),doubleToFloat(.24321),doubleToFloat(.45944),doubleToFloat(.31662),doubleToFloat(.3005),doubleToFloat(.47839),doubleToFloat(.66037),doubleToFloat(.45817),doubleToFloat(.02135),doubleToFloat(.72743),doubleToFloat(.14815),doubleToFloat(.42668),doubleToFloat(.66421)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.31457),doubleToFloat(.08976),doubleToFloat(1.14132),doubleToFloat(.18652),doubleToFloat(.11557),doubleToFloat(1.13979),doubleToFloat(.13561),doubleToFloat(.31278),doubleToFloat(1.10984),doubleToFloat(.494),doubleToFloat(.30587),doubleToFloat(1.11265),doubleToFloat(.44332),doubleToFloat(.45125),doubleToFloat(1.09039),doubleToFloat(.31534),doubleToFloat(.5027),doubleToFloat(1.09166),doubleToFloat(.18734),doubleToFloat(.45407),doubleToFloat(1.09166),doubleToFloat(.44255),doubleToFloat(.11513),doubleToFloat(1.14158),doubleToFloat(.18498),doubleToFloat(.10574),doubleToFloat(1.32304),doubleToFloat(.31304),doubleToFloat(.08127),doubleToFloat(1.32407)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.14272),doubleToFloat(.29461),doubleToFloat(1.20966),doubleToFloat(.18618),doubleToFloat(.40979),doubleToFloat(1.34941),doubleToFloat(.13435),doubleToFloat(.25724),doubleToFloat(1.33456),doubleToFloat(.36551),doubleToFloat(.47455),doubleToFloat(1.23448),doubleToFloat(.44102),doubleToFloat(.10912),doubleToFloat(1.33073),doubleToFloat(.48581),doubleToFloat(.29358),doubleToFloat(1.21222),doubleToFloat(.49272),doubleToFloat(.25749),doubleToFloat(1.33687),doubleToFloat(.16072),doubleToFloat(.19263),doubleToFloat(1.74001),doubleToFloat(.22476),doubleToFloat(.1558),doubleToFloat(2.13956),doubleToFloat(.21045),doubleToFloat(.3028),doubleToFloat(2.07275)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.24221),doubleToFloat(.25749),doubleToFloat(2.11652),doubleToFloat(.33812),doubleToFloat(.41593),doubleToFloat(1.76202),doubleToFloat(.33326),doubleToFloat(.33147),doubleToFloat(2.07403),doubleToFloat(.48325),doubleToFloat(.37882),doubleToFloat(1.7592),doubleToFloat(.40876),doubleToFloat(.25412),doubleToFloat(2.11652),doubleToFloat(.45612),doubleToFloat(.29998),doubleToFloat(2.07301),doubleToFloat(.48171),doubleToFloat(-.00199),doubleToFloat(1.72311),doubleToFloat(.33198),doubleToFloat(-.04587),doubleToFloat(2.10705),doubleToFloat(.33428),doubleToFloat(-.0431),doubleToFloat(2.15338),doubleToFloat(.408),doubleToFloat(-.0077),doubleToFloat(2.15696)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.51345),doubleToFloat(.19102),doubleToFloat(1.74154),doubleToFloat(.24099),doubleToFloat(-.00696),doubleToFloat(2.15645),doubleToFloat(.19087),doubleToFloat(-.00066),doubleToFloat(1.72183),doubleToFloat(.33607),doubleToFloat(-.03773),doubleToFloat(1.71902),doubleToFloat(.48146),doubleToFloat(.14523),doubleToFloat(2.09425),doubleToFloat(.42617),doubleToFloat(.1503),doubleToFloat(2.13981),doubleToFloat(.18434),doubleToFloat(.14961),doubleToFloat(2.09374),doubleToFloat(.20925),doubleToFloat(-.01563),doubleToFloat(2.10961),doubleToFloat(.32532),doubleToFloat(.27541),doubleToFloat(2.11729),doubleToFloat(.19245),doubleToFloat(.3801),doubleToFloat(1.75792)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.45509),doubleToFloat(-.01676),doubleToFloat(2.11063),doubleToFloat(-.31892),doubleToFloat(.58461),doubleToFloat(1.20812),doubleToFloat(-.18347),doubleToFloat(.67343),doubleToFloat(1.32561),doubleToFloat(-.3115),doubleToFloat(.62428),doubleToFloat(1.3315),doubleToFloat(.02562),doubleToFloat(-.00814),doubleToFloat(.52088),doubleToFloat(.04889),doubleToFloat(.23003),doubleToFloat(.48811),doubleToFloat(-.28027),doubleToFloat(.04451),doubleToFloat(.49707),doubleToFloat(-.11278),doubleToFloat(-.00993),doubleToFloat(.53854),doubleToFloat(-.26441),doubleToFloat(-.04382),doubleToFloat(.38061),doubleToFloat(-.33914),doubleToFloat(.1924),doubleToFloat(.3801)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.0288),doubleToFloat(.46866),doubleToFloat(.32916),doubleToFloat(-.04925),doubleToFloat(.58384),doubleToFloat(1.20787),doubleToFloat(-.13259),doubleToFloat(.66242),doubleToFloat(1.22143),doubleToFloat(-.17231),doubleToFloat(.1031),doubleToFloat(.80038),doubleToFloat(-.01974),doubleToFloat(.1267),doubleToFloat(.79322),doubleToFloat(.03673),doubleToFloat(.31585),doubleToFloat(.71361),doubleToFloat(-.27746),doubleToFloat(.41798),doubleToFloat(.32097),doubleToFloat(-.32711),doubleToFloat(.51678),doubleToFloat(.66037),doubleToFloat(-.3673),doubleToFloat(.31969),doubleToFloat(.71515),doubleToFloat(-.10929),doubleToFloat(.48325),doubleToFloat(.31278)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.16945),doubleToFloat(.56516),doubleToFloat(.64629),doubleToFloat(-.32942),doubleToFloat(.1289),doubleToFloat(.79398),doubleToFloat(-.01734),doubleToFloat(.51473),doubleToFloat(.6596),doubleToFloat(-.18519),doubleToFloat(.27464),doubleToFloat(1.17485),doubleToFloat(-.0571),doubleToFloat(.29947),doubleToFloat(1.16973),doubleToFloat(-.00566),doubleToFloat(.4789),doubleToFloat(1.12059),doubleToFloat(-.31227),doubleToFloat(.60969),doubleToFloat(1.07016),doubleToFloat(-.36397),doubleToFloat(.47992),doubleToFloat(1.12212),doubleToFloat(-.18416),doubleToFloat(.65935),doubleToFloat(1.06018),doubleToFloat(-.05639),doubleToFloat(.60944),doubleToFloat(1.0699)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.31304),doubleToFloat(.29973),doubleToFloat(1.17178),doubleToFloat(-.18301),doubleToFloat(.2726),doubleToFloat(1.33124),doubleToFloat(-.05511),doubleToFloat(.29794),doubleToFloat(1.33175),doubleToFloat(-.01283),doubleToFloat(.48376),doubleToFloat(1.22092),doubleToFloat(-.00438),doubleToFloat(.44895),doubleToFloat(1.33994),doubleToFloat(-.05557),doubleToFloat(.623),doubleToFloat(1.33124),doubleToFloat(-.23497),doubleToFloat(.66293),doubleToFloat(1.22092),doubleToFloat(-.31124),doubleToFloat(.30178),doubleToFloat(1.33841),doubleToFloat(-.35578),doubleToFloat(.4853),doubleToFloat(1.22271),doubleToFloat(-.36295),doubleToFloat(.47429),doubleToFloat(1.34941)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.03084),doubleToFloat(.36884),doubleToFloat(1.74128),doubleToFloat(-.09762),doubleToFloat(.29742),doubleToFloat(2.1631),doubleToFloat(-.11421),doubleToFloat(.40185),doubleToFloat(2.14084),doubleToFloat(-.08209),doubleToFloat(.45433),doubleToFloat(2.09118),doubleToFloat(-.2083),doubleToFloat(.59152),doubleToFloat(1.76791),doubleToFloat(-.19757),doubleToFloat(.48555),doubleToFloat(2.0922),doubleToFloat(-.35348),doubleToFloat(.55441),doubleToFloat(1.76432),doubleToFloat(-.27823),doubleToFloat(.40544),doubleToFloat(2.14084),doubleToFloat(-.31329),doubleToFloat(.45637),doubleToFloat(2.09118),doubleToFloat(-.35169),doubleToFloat(.17449),doubleToFloat(1.7203)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.27823),doubleToFloat(.17461),doubleToFloat(2.18051),doubleToFloat(-.19589),doubleToFloat(.11047),doubleToFloat(2.19919),doubleToFloat(-.19773),doubleToFloat(.13282),doubleToFloat(2.09835),doubleToFloat(-.38368),doubleToFloat(.36704),doubleToFloat(1.74256),doubleToFloat(-.11388),doubleToFloat(.17318),doubleToFloat(2.20508),doubleToFloat(-.20612),doubleToFloat(.13893),doubleToFloat(1.71544),doubleToFloat(-.06087),doubleToFloat(.17602),doubleToFloat(1.71927),doubleToFloat(-.29563),doubleToFloat(.30306),doubleToFloat(2.16336),doubleToFloat(-.33812),doubleToFloat(.31124),doubleToFloat(2.11216),doubleToFloat(-.05826),doubleToFloat(.30766),doubleToFloat(2.11166)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.08198),doubleToFloat(.15882),doubleToFloat(2.1265),doubleToFloat(-.19596),doubleToFloat(.42591),doubleToFloat(2.1416),doubleToFloat(-.06268),doubleToFloat(.55594),doubleToFloat(1.7633),doubleToFloat(-.31355),doubleToFloat(.15844),doubleToFloat(2.12701),doubleToFloat(.07848),doubleToFloat(.48146),doubleToFloat(-.20902),doubleToFloat(.35655),doubleToFloat(.41593),doubleToFloat(-.21437),doubleToFloat(.36167),doubleToFloat(.41772),doubleToFloat(-.09005),doubleToFloat(.42387),doubleToFloat(.15741),doubleToFloat(-.20953),doubleToFloat(.33403),doubleToFloat(-.04745),doubleToFloat(-.20822),doubleToFloat(.34503),doubleToFloat(-.04177),doubleToFloat(-.08562)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.43052),doubleToFloat(.16028),doubleToFloat(-.08923),doubleToFloat(.05375),doubleToFloat(-.0807),doubleToFloat(-.2008),doubleToFloat(-.00717),doubleToFloat(-.09929),doubleToFloat(-1.18022),doubleToFloat(.16228),doubleToFloat(-.07712),doubleToFloat(-1.2524),doubleToFloat(-.00362),doubleToFloat(-.06105),doubleToFloat(-1.24421),doubleToFloat(.07167),doubleToFloat(.45586),doubleToFloat(-.10819),doubleToFloat(.05792),doubleToFloat(-.10028),doubleToFloat(-.05887),doubleToFloat(.11132),doubleToFloat(.51985),doubleToFloat(-.5928),doubleToFloat(.26441),doubleToFloat(.46354),doubleToFloat(-.76404),doubleToFloat(.23953),doubleToFloat(.49426),doubleToFloat(-.569)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.09637),doubleToFloat(.51141),doubleToFloat(-.49016),doubleToFloat(.23082),doubleToFloat(.4684),doubleToFloat(-.51601),doubleToFloat(.3737),doubleToFloat(.42591),doubleToFloat(-.40185),doubleToFloat(.41235),doubleToFloat(-.17254),doubleToFloat(-1.02153),doubleToFloat(.42694),doubleToFloat(-.09225),doubleToFloat(-.84185),doubleToFloat(.01265),doubleToFloat(-.12788),doubleToFloat(-.77146),doubleToFloat(.04116),doubleToFloat(-.10561),doubleToFloat(-.51576),doubleToFloat(.37754),doubleToFloat(-.13312),doubleToFloat(-.78809),doubleToFloat(.0528),doubleToFloat(-.06271),doubleToFloat(-.28539),doubleToFloat(.36013),doubleToFloat(-.06506),doubleToFloat(-.36167)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.45074),doubleToFloat(.3586),doubleToFloat(-.89176),doubleToFloat(.4423),doubleToFloat(.38624),doubleToFloat(-.99363),doubleToFloat(.47634),doubleToFloat(.23784),doubleToFloat(-.84185),doubleToFloat(.38343),doubleToFloat(-.08736),doubleToFloat(-.51857),doubleToFloat(.28079),doubleToFloat(.08398),doubleToFloat(-1.26981),doubleToFloat(.20579),doubleToFloat(.22719),doubleToFloat(-1.18841),doubleToFloat(.18621),doubleToFloat(.14211),doubleToFloat(-1.28286),doubleToFloat(-.00007),doubleToFloat(-.02279),doubleToFloat(-1.3082),doubleToFloat(.13379),doubleToFloat(-.04625),doubleToFloat(-1.31485),doubleToFloat(.16105),doubleToFloat(.14554),doubleToFloat(-1.33047)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.13294),doubleToFloat(.26594),doubleToFloat(-1.22041),doubleToFloat(-.00474),doubleToFloat(-.13576),doubleToFloat(-1.00131),doubleToFloat(.35297),doubleToFloat(-.1364),doubleToFloat(-1.17229),doubleToFloat(.11787),doubleToFloat(.50833),doubleToFloat(-.77223),doubleToFloat(.34273),doubleToFloat(.47148),doubleToFloat(-.86028),doubleToFloat(.34222),doubleToFloat(.46073),doubleToFloat(-.80883),doubleToFloat(.33735),doubleToFloat(-.02995),doubleToFloat(-1.29899),doubleToFloat(.47148),doubleToFloat(.0633),doubleToFloat(-.7648),doubleToFloat(.41619),doubleToFloat(.12386),doubleToFloat(-.35297),doubleToFloat(.40211),doubleToFloat(.43027),doubleToFloat(-.49016)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.40979),doubleToFloat(.41465),doubleToFloat(-.8636),doubleToFloat(.38829),doubleToFloat(.43359),doubleToFloat(-.8293),doubleToFloat(.13223),doubleToFloat(.00589),doubleToFloat(-1.36579),doubleToFloat(.00056),doubleToFloat(-.0048),doubleToFloat(-1.3594),doubleToFloat(.37037),doubleToFloat(.27618),doubleToFloat(-1.18969),doubleToFloat(.00112),doubleToFloat(.01061),doubleToFloat(-1.40291),doubleToFloat(.30024),doubleToFloat(.05452),doubleToFloat(-1.29668),doubleToFloat(.10087),doubleToFloat(.35604),doubleToFloat(-1.13646),doubleToFloat(.14032),doubleToFloat(.29077),doubleToFloat(-1.15924),doubleToFloat(.47608),doubleToFloat(.27567),doubleToFloat(-1.15053)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.11354),doubleToFloat(.01691),doubleToFloat(-1.39293),doubleToFloat(.28693),doubleToFloat(.43948),doubleToFloat(-.99875),doubleToFloat(.0623),doubleToFloat(.30434),doubleToFloat(-1.20658),doubleToFloat(.10016),doubleToFloat(.45919),doubleToFloat(-.98953),doubleToFloat(.12693),doubleToFloat(.46738),doubleToFloat(-1.00362),doubleToFloat(.44281),doubleToFloat(.16921),doubleToFloat(.04026),doubleToFloat(.38343),doubleToFloat(.40672),doubleToFloat(.15503),doubleToFloat(.36986),doubleToFloat(-.10712),doubleToFloat(.13968),doubleToFloat(.39315),doubleToFloat(-.00747),doubleToFloat(.08536),doubleToFloat(-.21751),doubleToFloat(.42566),doubleToFloat(-.08605)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.20589),doubleToFloat(.42745),doubleToFloat(-.21321),doubleToFloat(-.29205),doubleToFloat(.18537),doubleToFloat(-.20733),doubleToFloat(-.23402),doubleToFloat(-.03102),doubleToFloat(-.06248),doubleToFloat(-.22417),doubleToFloat(-.02519),doubleToFloat(-.20203),doubleToFloat(-.30638),doubleToFloat(.17339),doubleToFloat(-.07034),doubleToFloat(-.35604),doubleToFloat(-.01206),doubleToFloat(-1.13722),doubleToFloat(-.16509),doubleToFloat(-.01973),doubleToFloat(-1.23628),doubleToFloat(-.32148),doubleToFloat(.15898),doubleToFloat(.10499),doubleToFloat(-.25128),doubleToFloat(.40493),doubleToFloat(.17853),doubleToFloat(-.18639),doubleToFloat(.49272),doubleToFloat(-.77376)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.03839),doubleToFloat(.5132),doubleToFloat(-.7497),doubleToFloat(-.03668),doubleToFloat(.52216),doubleToFloat(-.56516),doubleToFloat(-.29205),doubleToFloat(-.02186),doubleToFloat(-.51294),doubleToFloat(-.28667),doubleToFloat(.17474),doubleToFloat(-.35399),doubleToFloat(-.25903),doubleToFloat(-.01915),doubleToFloat(-.36269),doubleToFloat(-.40953),doubleToFloat(-.02839),doubleToFloat(-.98109),doubleToFloat(-.33531),doubleToFloat(-.0218),doubleToFloat(-.75508),doubleToFloat(-.31867),doubleToFloat(.36602),doubleToFloat(-.80422),doubleToFloat(-.21749),doubleToFloat(.48504),doubleToFloat(-.49042),doubleToFloat(-.36321),doubleToFloat(.1859),doubleToFloat(-.72743)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.22291),doubleToFloat(.17228),doubleToFloat(-1.24498),doubleToFloat(-.11597),doubleToFloat(.19509),doubleToFloat(-1.26802),doubleToFloat(-.09639),doubleToFloat(.28027),doubleToFloat(-1.17357),doubleToFloat(-.01816),doubleToFloat(.2923),doubleToFloat(-1.21298),doubleToFloat(-.25473),doubleToFloat(.48018),doubleToFloat(-.8572),doubleToFloat(-.24516),doubleToFloat(.5068),doubleToFloat(-.95984),doubleToFloat(-.19476),doubleToFloat(.51908),doubleToFloat(-.83417),doubleToFloat(-.31739),doubleToFloat(.08488),doubleToFloat(-1.26674),doubleToFloat(-.37651),doubleToFloat(.03944),doubleToFloat(-.80345),doubleToFloat(-.25373),doubleToFloat(.15168),doubleToFloat(-1.2693)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(.10356),doubleToFloat(.50808),doubleToFloat(-.82291),doubleToFloat(-.13392),doubleToFloat(.00068),doubleToFloat(-1.3018),doubleToFloat(-.23392),doubleToFloat(.38215),doubleToFloat(-1.15975),doubleToFloat(-.32967),doubleToFloat(.41747),doubleToFloat(-1.11035),doubleToFloat(-.11961),doubleToFloat(.05004),doubleToFloat(-1.35325),doubleToFloat(-.01078),doubleToFloat(.31713),doubleToFloat(-1.15181),doubleToFloat(.0505),doubleToFloat(.365),doubleToFloat(-1.13389),doubleToFloat(-.101),doubleToFloat(.05454),doubleToFloat(-1.38244),doubleToFloat(-.09581),doubleToFloat(.19059),doubleToFloat(-1.31793),doubleToFloat(-.08209),doubleToFloat(.50398),doubleToFloat(-.98058)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.24255),doubleToFloat(-.10333),doubleToFloat(.23292),doubleToFloat(-.26952),doubleToFloat(-.01132),doubleToFloat(.16714),doubleToFloat(-.19297),doubleToFloat(.47429),doubleToFloat(-.40262),doubleToFloat(.38803),doubleToFloat(.42438),doubleToFloat(-.43846),doubleToFloat(.39392),doubleToFloat(.39878),doubleToFloat(-.80115),doubleToFloat(.07256),doubleToFloat(.33838),doubleToFloat(-1.11982),doubleToFloat(.07658),doubleToFloat(.47634),doubleToFloat(-1.00105),doubleToFloat(.12875),doubleToFloat(.50373),doubleToFloat(-.82419),doubleToFloat(-.1105),doubleToFloat(.55082),doubleToFloat(-.83801),doubleToFloat(-.16612),doubleToFloat(.5283),doubleToFloat(-.80217)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-.11127),doubleToFloat(.53854),doubleToFloat(-.78682),doubleToFloat(-.20612),doubleToFloat(.47608),doubleToFloat(-.43948),doubleToFloat(-.04385),doubleToFloat(.49298),doubleToFloat(-.51576)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #34, 1344 total numbers made up of 672 2-tuple values */
	this.TextureCoordinate_12_34_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(.848),doubleToFloat(.745),doubleToFloat(.819),doubleToFloat(.745),doubleToFloat(.841),doubleToFloat(.764),doubleToFloat(.938),doubleToFloat(.819),doubleToFloat(.99),doubleToFloat(.838),doubleToFloat(.964),doubleToFloat(.819),doubleToFloat(.96),doubleToFloat(.838),doubleToFloat(.912),doubleToFloat(.836),doubleToFloat(.908),doubleToFloat(.736),doubleToFloat(.898),doubleToFloat(.745)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.908),doubleToFloat(.753),doubleToFloat(.999),doubleToFloat(.765),doubleToFloat(.999),doubleToFloat(.745),doubleToFloat(.96),doubleToFloat(.76),doubleToFloat(.938),doubleToFloat(.776),doubleToFloat(.898),doubleToFloat(.771),doubleToFloat(.947),doubleToFloat(.777),doubleToFloat(.974),doubleToFloat(.781),doubleToFloat(.898),doubleToFloat(.718),doubleToFloat(.954),doubleToFloat(.723)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.974),doubleToFloat(.749),doubleToFloat(.999),doubleToFloat(.724),doubleToFloat(.96),doubleToFloat(.854),doubleToFloat(.999),doubleToFloat(.854),doubleToFloat(.96),doubleToFloat(.799),doubleToFloat(.912),doubleToFloat(.801),doubleToFloat(.976),doubleToFloat(.819),doubleToFloat(.999),doubleToFloat(.819),doubleToFloat(.999),doubleToFloat(.798),doubleToFloat(.953),doubleToFloat(.788)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.944),doubleToFloat(.789),doubleToFloat(.999),doubleToFloat(.709),doubleToFloat(.947),doubleToFloat(.709),doubleToFloat(.912),doubleToFloat(.819),doubleToFloat(.905),doubleToFloat(.781),doubleToFloat(.841),doubleToFloat(.792),doubleToFloat(.855),doubleToFloat(.802),doubleToFloat(.855),doubleToFloat(.819),doubleToFloat(.855),doubleToFloat(.835),doubleToFloat(.841),doubleToFloat(.812)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.841),doubleToFloat(.835),doubleToFloat(.841),doubleToFloat(.854),doubleToFloat(.841),doubleToFloat(.825),doubleToFloat(.841),doubleToFloat(.709),doubleToFloat(.841),doubleToFloat(.725),doubleToFloat(.841),doubleToFloat(.802),doubleToFloat(.812),doubleToFloat(.828),doubleToFloat(.812),doubleToFloat(.854),doubleToFloat(.783),doubleToFloat(.854),doubleToFloat(.812),doubleToFloat(.765)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.812),doubleToFloat(.754),doubleToFloat(.783),doubleToFloat(.765),doubleToFloat(.783),doubleToFloat(.724),doubleToFloat(.783),doubleToFloat(.827),doubleToFloat(.812),doubleToFloat(.81),doubleToFloat(.812),doubleToFloat(.793),doubleToFloat(.783),doubleToFloat(.794),doubleToFloat(.783),doubleToFloat(.81),doubleToFloat(.812),doubleToFloat(.724),doubleToFloat(.783),doubleToFloat(.709)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.812),doubleToFloat(.709),doubleToFloat(.675),doubleToFloat(.834),doubleToFloat(.675),doubleToFloat(.822),doubleToFloat(.675),doubleToFloat(.79),doubleToFloat(.675),doubleToFloat(.759),doubleToFloat(.675),doubleToFloat(.804),doubleToFloat(.675),doubleToFloat(.709),doubleToFloat(.675),doubleToFloat(.854),doubleToFloat(.999),doubleToFloat(.781),doubleToFloat(.939),doubleToFloat(.735)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.905),doubleToFloat(.854),doubleToFloat(.999),doubleToFloat(.84),doubleToFloat(.812),doubleToFloat(.735),doubleToFloat(.953),doubleToFloat(.759),doubleToFloat(.905),doubleToFloat(.709),doubleToFloat(.848),doubleToFloat(.964),doubleToFloat(.84),doubleToFloat(.944),doubleToFloat(.819),doubleToFloat(.963),doubleToFloat(.973),doubleToFloat(.89),doubleToFloat(.99),doubleToFloat(.871)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.938),doubleToFloat(.89),doubleToFloat(.959),doubleToFloat(.87),doubleToFloat(.912),doubleToFloat(.873),doubleToFloat(.907),doubleToFloat(.955),doubleToFloat(.897),doubleToFloat(.964),doubleToFloat(.907),doubleToFloat(.972),doubleToFloat(.959),doubleToFloat(.949),doubleToFloat(.998),doubleToFloat(.964),doubleToFloat(.998),doubleToFloat(.944),doubleToFloat(.938),doubleToFloat(.932)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.897),doubleToFloat(.938),doubleToFloat(.974),doubleToFloat(.927),doubleToFloat(.946),doubleToFloat(.931),doubleToFloat(.897),doubleToFloat(.99),doubleToFloat(.974),doubleToFloat(.96),doubleToFloat(.953),doubleToFloat(.986),doubleToFloat(.998),doubleToFloat(.984),doubleToFloat(.959),doubleToFloat(.854),doubleToFloat(.998),doubleToFloat(.854),doubleToFloat(.959),doubleToFloat(.909)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.912),doubleToFloat(.907),doubleToFloat(.998),doubleToFloat(.89),doubleToFloat(.975),doubleToFloat(.89),doubleToFloat(.952),doubleToFloat(.92),doubleToFloat(.998),doubleToFloat(.911),doubleToFloat(.944),doubleToFloat(.919),doubleToFloat(.946),doubleToFloat(1.0),doubleToFloat(.998),doubleToFloat(1.0),doubleToFloat(.912),doubleToFloat(.89),doubleToFloat(.904),doubleToFloat(.928)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.84),doubleToFloat(.916),doubleToFloat(.855),doubleToFloat(.906),doubleToFloat(.855),doubleToFloat(.873),doubleToFloat(.855),doubleToFloat(.89),doubleToFloat(.84),doubleToFloat(.896),doubleToFloat(.84),doubleToFloat(.854),doubleToFloat(.84),doubleToFloat(.874),doubleToFloat(.84),doubleToFloat(.883),doubleToFloat(.84),doubleToFloat(.984),doubleToFloat(.84),doubleToFloat(1.0)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.84),doubleToFloat(.906),doubleToFloat(.811),doubleToFloat(.854),doubleToFloat(.811),doubleToFloat(.881),doubleToFloat(.782),doubleToFloat(.854),doubleToFloat(.811),doubleToFloat(.954),doubleToFloat(.811),doubleToFloat(.944),doubleToFloat(.782),doubleToFloat(.943),doubleToFloat(.782),doubleToFloat(.985),doubleToFloat(.811),doubleToFloat(.899),doubleToFloat(.782),doubleToFloat(.881)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.811),doubleToFloat(.915),doubleToFloat(.782),doubleToFloat(.914),doubleToFloat(.782),doubleToFloat(.898),doubleToFloat(.811),doubleToFloat(.984),doubleToFloat(.782),doubleToFloat(1.0),doubleToFloat(.811),doubleToFloat(1.0),doubleToFloat(.675),doubleToFloat(.874),doubleToFloat(.675),doubleToFloat(.887),doubleToFloat(.675),doubleToFloat(.919),doubleToFloat(.675),doubleToFloat(.95)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.675),doubleToFloat(.905),doubleToFloat(.675),doubleToFloat(1.0),doubleToFloat(.675),doubleToFloat(.854),doubleToFloat(.998),doubleToFloat(.927),doubleToFloat(.939),doubleToFloat(.973),doubleToFloat(.904),doubleToFloat(.854),doubleToFloat(.998),doubleToFloat(.869),doubleToFloat(.811),doubleToFloat(.974),doubleToFloat(.952),doubleToFloat(.95),doubleToFloat(.904),doubleToFloat(1.0)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.061),doubleToFloat(.4),doubleToFloat(.04),doubleToFloat(.391),doubleToFloat(.029),doubleToFloat(.349),doubleToFloat(.029),doubleToFloat(.336),doubleToFloat(.016),doubleToFloat(.297),doubleToFloat(.085),doubleToFloat(.303),doubleToFloat(.085),doubleToFloat(.354),doubleToFloat(.079),doubleToFloat(.331),doubleToFloat(.139),doubleToFloat(.112),doubleToFloat(.123),doubleToFloat(.112)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.145),doubleToFloat(.072),doubleToFloat(.119),doubleToFloat(.047),doubleToFloat(.063),doubleToFloat(.055),doubleToFloat(.052),doubleToFloat(.051),doubleToFloat(.055),doubleToFloat(.048),doubleToFloat(.048),doubleToFloat(.048),doubleToFloat(.107),doubleToFloat(.079),doubleToFloat(.084),doubleToFloat(.047),doubleToFloat(.082),doubleToFloat(.033),doubleToFloat(.102),doubleToFloat(.034)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.156),doubleToFloat(.075),doubleToFloat(.145),doubleToFloat(.072),doubleToFloat(.148),doubleToFloat(.114),doubleToFloat(.164),doubleToFloat(.114),doubleToFloat(.156),doubleToFloat(.114),doubleToFloat(.114),doubleToFloat(.112),doubleToFloat(.091),doubleToFloat(.272),doubleToFloat(.015),doubleToFloat(.265),doubleToFloat(.019),doubleToFloat(.213),doubleToFloat(.056),doubleToFloat(.177)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.019),doubleToFloat(.177),doubleToFloat(.094),doubleToFloat(.213),doubleToFloat(.094),doubleToFloat(.177),doubleToFloat(.103),doubleToFloat(.053),doubleToFloat(.057),doubleToFloat(.135),doubleToFloat(.062),doubleToFloat(.033),doubleToFloat(.082),doubleToFloat(.053),doubleToFloat(.083),doubleToFloat(.225),doubleToFloat(.03),doubleToFloat(.222),doubleToFloat(.058),doubleToFloat(.215)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.024),doubleToFloat(.234),doubleToFloat(.055),doubleToFloat(.036),doubleToFloat(.144),doubleToFloat(.047),doubleToFloat(.14),doubleToFloat(.034),doubleToFloat(.122),doubleToFloat(.034),doubleToFloat(.156),doubleToFloat(.046),doubleToFloat(.156),doubleToFloat(.034),doubleToFloat(.145),doubleToFloat(.046),doubleToFloat(.167),doubleToFloat(.046),doubleToFloat(.167),doubleToFloat(.034)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.02),doubleToFloat(.135),doubleToFloat(.055),doubleToFloat(.093),doubleToFloat(.04),doubleToFloat(.091),doubleToFloat(.088),doubleToFloat(.239),doubleToFloat(.048),doubleToFloat(.04),doubleToFloat(.083),doubleToFloat(.396),doubleToFloat(.145),doubleToFloat(.034),doubleToFloat(.167),doubleToFloat(.072),doubleToFloat(.056),doubleToFloat(.213),doubleToFloat(.095),doubleToFloat(.135)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.067),doubleToFloat(.092),doubleToFloat(.051),doubleToFloat(.049),doubleToFloat(.656),doubleToFloat(.914),doubleToFloat(.628),doubleToFloat(.902),doubleToFloat(.656),doubleToFloat(.921),doubleToFloat(.656),doubleToFloat(.942),doubleToFloat(.624),doubleToFloat(.941),doubleToFloat(.632),doubleToFloat(.946),doubleToFloat(.656),doubleToFloat(.937),doubleToFloat(.618),doubleToFloat(.934)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.605),doubleToFloat(.914),doubleToFloat(.608),doubleToFloat(.923),doubleToFloat(.592),doubleToFloat(.923),doubleToFloat(.589),doubleToFloat(.94),doubleToFloat(.656),doubleToFloat(.946),doubleToFloat(.616),doubleToFloat(.908),doubleToFloat(.582),doubleToFloat(.91),doubleToFloat(.575),doubleToFloat(.9),doubleToFloat(.553),doubleToFloat(.896),doubleToFloat(.55),doubleToFloat(.906)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.522),doubleToFloat(.916),doubleToFloat(.53),doubleToFloat(.912),doubleToFloat(.522),doubleToFloat(.91),doubleToFloat(.55),doubleToFloat(.913),doubleToFloat(.53),doubleToFloat(.905),doubleToFloat(.582),doubleToFloat(.916),doubleToFloat(.49),doubleToFloat(.981),doubleToFloat(.484),doubleToFloat(.972),doubleToFloat(.479),doubleToFloat(.981),doubleToFloat(.507),doubleToFloat(.99)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.504),doubleToFloat(.972),doubleToFloat(.504),doubleToFloat(.99),doubleToFloat(.516),doubleToFloat(.972),doubleToFloat(.509),doubleToFloat(.972),doubleToFloat(.553),doubleToFloat(.857),doubleToFloat(.54),doubleToFloat(.845),doubleToFloat(.538),doubleToFloat(.858),doubleToFloat(.603),doubleToFloat(.859),doubleToFloat(.603),doubleToFloat(.841),doubleToFloat(.594),doubleToFloat(.859)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.619),doubleToFloat(.896),doubleToFloat(.581),doubleToFloat(.719),doubleToFloat(.566),doubleToFloat(.729),doubleToFloat(.566),doubleToFloat(.718),doubleToFloat(.555),doubleToFloat(.917),doubleToFloat(.535),doubleToFloat(.719),doubleToFloat(.563),doubleToFloat(.922),doubleToFloat(.575),doubleToFloat(.918),doubleToFloat(.595),doubleToFloat(.946),doubleToFloat(.626),doubleToFloat(.756)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.619),doubleToFloat(.722),doubleToFloat(.652),doubleToFloat(.756),doubleToFloat(.543),doubleToFloat(.943),doubleToFloat(.548),doubleToFloat(.946),doubleToFloat(.522),doubleToFloat(.946),doubleToFloat(.589),doubleToFloat(.896),doubleToFloat(.585),doubleToFloat(.902),doubleToFloat(.613),doubleToFloat(.722),doubleToFloat(.581),doubleToFloat(.731),doubleToFloat(.522),doubleToFloat(.896)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.568),doubleToFloat(.907),doubleToFloat(.591),doubleToFloat(.859),doubleToFloat(.597),doubleToFloat(.839),doubleToFloat(.586),doubleToFloat(.841),doubleToFloat(.56),doubleToFloat(.847),doubleToFloat(.558),doubleToFloat(.831),doubleToFloat(.551),doubleToFloat(.838),doubleToFloat(.652),doubleToFloat(.711),doubleToFloat(.627),doubleToFloat(.717),doubleToFloat(.627),doubleToFloat(.711)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.652),doubleToFloat(.732),doubleToFloat(.668),doubleToFloat(.732),doubleToFloat(.668),doubleToFloat(.744),doubleToFloat(.579),doubleToFloat(.927),doubleToFloat(.534),doubleToFloat(.734),doubleToFloat(.519),doubleToFloat(.729),doubleToFloat(.529),doubleToFloat(.729),doubleToFloat(.537),doubleToFloat(.917),doubleToFloat(.533),doubleToFloat(.922),doubleToFloat(.522),doubleToFloat(.927)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.522),doubleToFloat(.933),doubleToFloat(.528),doubleToFloat(.931),doubleToFloat(.536),doubleToFloat(.928),doubleToFloat(.522),doubleToFloat(.917),doubleToFloat(.526),doubleToFloat(.922),doubleToFloat(.538),doubleToFloat(.937),doubleToFloat(.532),doubleToFloat(.939),doubleToFloat(.57),doubleToFloat(.935),doubleToFloat(.568),doubleToFloat(.914),doubleToFloat(.588),doubleToFloat(.756)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.545),doubleToFloat(.756),doubleToFloat(.553),doubleToFloat(.845),doubleToFloat(.546),doubleToFloat(.837),doubleToFloat(.572),doubleToFloat(.841),doubleToFloat(.528),doubleToFloat(.842),doubleToFloat(.528),doubleToFloat(.847),doubleToFloat(.528),doubleToFloat(.858),doubleToFloat(.484),doubleToFloat(.99),doubleToFloat(.535),doubleToFloat(.726),doubleToFloat(.529),doubleToFloat(.721)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.512),doubleToFloat(.756),doubleToFloat(.512),doubleToFloat(.729),doubleToFloat(.519),doubleToFloat(.756),doubleToFloat(.516),doubleToFloat(.99),doubleToFloat(.56),doubleToFloat(.858),doubleToFloat(.672),doubleToFloat(.937),doubleToFloat(.672),doubleToFloat(.946),doubleToFloat(.672),doubleToFloat(.92),doubleToFloat(.672),doubleToFloat(.929),doubleToFloat(.672),doubleToFloat(.91)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.656),doubleToFloat(.91),doubleToFloat(.668),doubleToFloat(.756),doubleToFloat(.254),doubleToFloat(.155),doubleToFloat(.284),doubleToFloat(.172),doubleToFloat(.28),doubleToFloat(.155),doubleToFloat(.175),doubleToFloat(.273),doubleToFloat(.215),doubleToFloat(.306),doubleToFloat(.224),doubleToFloat(.298),doubleToFloat(.175),doubleToFloat(.264),doubleToFloat(.401),doubleToFloat(.292)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.475),doubleToFloat(.301),doubleToFloat(.475),doubleToFloat(.292),doubleToFloat(.408),doubleToFloat(.306),doubleToFloat(.402),doubleToFloat(.317),doubleToFloat(.223),doubleToFloat(.317),doubleToFloat(.403),doubleToFloat(.278),doubleToFloat(.475),doubleToFloat(.275),doubleToFloat(.383),doubleToFloat(.278),doubleToFloat(.352),doubleToFloat(.281),doubleToFloat(.359),doubleToFloat(.298)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.315),doubleToFloat(.292),doubleToFloat(.223),doubleToFloat(.288),doubleToFloat(.175),doubleToFloat(.247),doubleToFloat(.222),doubleToFloat(.172),doubleToFloat(.245),doubleToFloat(.168),doubleToFloat(.402),doubleToFloat(.24),doubleToFloat(.373),doubleToFloat(.24),doubleToFloat(.475),doubleToFloat(.244),doubleToFloat(.269),doubleToFloat(.292),doubleToFloat(.276),doubleToFloat(.244)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.31),doubleToFloat(.244),doubleToFloat(.241),doubleToFloat(.29),doubleToFloat(.251),doubleToFloat(.244),doubleToFloat(.346),doubleToFloat(.24),doubleToFloat(.225),doubleToFloat(.244),doubleToFloat(.18),doubleToFloat(.217),doubleToFloat(.368),doubleToFloat(.182),doubleToFloat(.401),doubleToFloat(.182),doubleToFloat(.471),doubleToFloat(.188),doubleToFloat(.302),doubleToFloat(.185)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.277),doubleToFloat(.189),doubleToFloat(.254),doubleToFloat(.189),doubleToFloat(.229),doubleToFloat(.189),doubleToFloat(.189),doubleToFloat(.185),doubleToFloat(.341),doubleToFloat(.182),doubleToFloat(.401),doubleToFloat(.155),doubleToFloat(.368),doubleToFloat(.155),doubleToFloat(.471),doubleToFloat(.174),doubleToFloat(.227),doubleToFloat(.155),doubleToFloat(.189),doubleToFloat(.155)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.263),doubleToFloat(.168),doubleToFloat(.194),doubleToFloat(.171),doubleToFloat(.341),doubleToFloat(.155),doubleToFloat(.305),doubleToFloat(.172),doubleToFloat(.31),doubleToFloat(.155),doubleToFloat(.195),doubleToFloat(.101),doubleToFloat(.214),doubleToFloat(.012),doubleToFloat(.235),doubleToFloat(.046),doubleToFloat(.234),doubleToFloat(.003),doubleToFloat(.259),doubleToFloat(.1)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.262),doubleToFloat(.032),doubleToFloat(.283),doubleToFloat(.1),doubleToFloat(.289),doubleToFloat(.016),doubleToFloat(.282),doubleToFloat(.046),doubleToFloat(.344),doubleToFloat(.1),doubleToFloat(.37),doubleToFloat(.033),doubleToFloat(.369),doubleToFloat(.008),doubleToFloat(.349),doubleToFloat(.015),doubleToFloat(.314),doubleToFloat(.1),doubleToFloat(.394),doubleToFloat(.005)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.393),doubleToFloat(.1),doubleToFloat(.366),doubleToFloat(.1),doubleToFloat(.319),doubleToFloat(.036),doubleToFloat(.318),doubleToFloat(.011),doubleToFloat(.443),doubleToFloat(.036),doubleToFloat(.432),doubleToFloat(.02),doubleToFloat(.396),doubleToFloat(.033),doubleToFloat(.46),doubleToFloat(.156),doubleToFloat(.446),doubleToFloat(.097),doubleToFloat(.242),doubleToFloat(-.001)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.217),doubleToFloat(-.029),doubleToFloat(.272),doubleToFloat(.003),doubleToFloat(.293),doubleToFloat(.002),doubleToFloat(.265),doubleToFloat(.012),doubleToFloat(.375),doubleToFloat(.002),doubleToFloat(.357),doubleToFloat(.002),doubleToFloat(.327),doubleToFloat(.001),doubleToFloat(.39),doubleToFloat(.001),doubleToFloat(.43),doubleToFloat(.003),doubleToFloat(.229),doubleToFloat(.1)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.348),doubleToFloat(.033),doubleToFloat(.212),doubleToFloat(.046),doubleToFloat(.29),doubleToFloat(.173),doubleToFloat(.255),doubleToFloat(.154),doubleToFloat(.285),doubleToFloat(.154),doubleToFloat(.475),doubleToFloat(.301),doubleToFloat(.43),doubleToFloat(.301),doubleToFloat(.432),doubleToFloat(.286),doubleToFloat(.475),doubleToFloat(.282),doubleToFloat(.372),doubleToFloat(.29)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.425),doubleToFloat(.286),doubleToFloat(.379),doubleToFloat(.308),doubleToFloat(.327),doubleToFloat(.301),doubleToFloat(.218),doubleToFloat(.297),doubleToFloat(.175),doubleToFloat(.291),doubleToFloat(.172),doubleToFloat(.274),doubleToFloat(.219),doubleToFloat(.308),doubleToFloat(.217),doubleToFloat(.173),doubleToFloat(.243),doubleToFloat(.169),doubleToFloat(.413),doubleToFloat(.245)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.43),doubleToFloat(.246),doubleToFloat(.475),doubleToFloat(.25),doubleToFloat(.273),doubleToFloat(.301),doubleToFloat(.28),doubleToFloat(.25),doubleToFloat(.321),doubleToFloat(.25),doubleToFloat(.24),doubleToFloat(.299),doubleToFloat(.251),doubleToFloat(.25),doubleToFloat(.364),doubleToFloat(.246),doubleToFloat(.175),doubleToFloat(.246),doubleToFloat(.22),doubleToFloat(.25)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.407),doubleToFloat(.183),doubleToFloat(.429),doubleToFloat(.184),doubleToFloat(.475),doubleToFloat(.187),doubleToFloat(.282),doubleToFloat(.191),doubleToFloat(.312),doubleToFloat(.187),doubleToFloat(.254),doubleToFloat(.191),doubleToFloat(.225),doubleToFloat(.191),doubleToFloat(.186),doubleToFloat(.187),doubleToFloat(.358),doubleToFloat(.184),doubleToFloat(.39),doubleToFloat(.154)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.429),doubleToFloat(.154),doubleToFloat(.475),doubleToFloat(.173),doubleToFloat(.186),doubleToFloat(.154),doubleToFloat(.222),doubleToFloat(.154),doubleToFloat(.266),doubleToFloat(.169),doubleToFloat(.194),doubleToFloat(.172),doubleToFloat(.358),doubleToFloat(.154),doubleToFloat(.315),doubleToFloat(.173),doubleToFloat(.321),doubleToFloat(.154),doubleToFloat(.195),doubleToFloat(.096)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.218),doubleToFloat(-.003),doubleToFloat(.231),doubleToFloat(.007),doubleToFloat(.232),doubleToFloat(.038),doubleToFloat(.261),doubleToFloat(.096),doubleToFloat(.266),doubleToFloat(.035),doubleToFloat(.289),doubleToFloat(.096),doubleToFloat(.288),doubleToFloat(.003),doubleToFloat(.295),doubleToFloat(.023),doubleToFloat(.362),doubleToFloat(.096),doubleToFloat(.366),doubleToFloat(.011)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.39),doubleToFloat(-0.0),doubleToFloat(.392),doubleToFloat(.033),doubleToFloat(.327),doubleToFloat(.096),doubleToFloat(.425),doubleToFloat(.001),doubleToFloat(.389),doubleToFloat(.096),doubleToFloat(.42),doubleToFloat(.096),doubleToFloat(.33),doubleToFloat(.015),doubleToFloat(.331),doubleToFloat(.037),doubleToFloat(.435),doubleToFloat(.043),doubleToFloat(.422),doubleToFloat(.033)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.435),doubleToFloat(.032),doubleToFloat(.445),doubleToFloat(.096),doubleToFloat(.461),doubleToFloat(.154),doubleToFloat(.207),doubleToFloat(.001),doubleToFloat(.25),doubleToFloat(.002),doubleToFloat(.3),doubleToFloat(.001),doubleToFloat(.275),doubleToFloat(.002),doubleToFloat(.265),doubleToFloat(.004),doubleToFloat(.398),doubleToFloat(0.0),doubleToFloat(.377),doubleToFloat(.001)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.331),doubleToFloat(.016),doubleToFloat(.341),doubleToFloat(.001),doubleToFloat(.42),doubleToFloat(.001),doubleToFloat(.443),doubleToFloat(.005),doubleToFloat(.225),doubleToFloat(.096),doubleToFloat(.366),doubleToFloat(.033),doubleToFloat(.209),doubleToFloat(.04),doubleToFloat(.361),doubleToFloat(.745),doubleToFloat(.418),doubleToFloat(.745),doubleToFloat(.419),doubleToFloat(.724)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.268),doubleToFloat(.488),doubleToFloat(.3),doubleToFloat(.486),doubleToFloat(.299),doubleToFloat(.464),doubleToFloat(.462),doubleToFloat(.751),doubleToFloat(.461),doubleToFloat(.719),doubleToFloat(.361),doubleToFloat(.485),doubleToFloat(.361),doubleToFloat(.587),doubleToFloat(.335),doubleToFloat(.596),doubleToFloat(.361),doubleToFloat(.596),doubleToFloat(.361),doubleToFloat(.724)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.361),doubleToFloat(.464),doubleToFloat(.27),doubleToFloat(.466),doubleToFloat(.361),doubleToFloat(.793),doubleToFloat(.39),doubleToFloat(.832),doubleToFloat(.386),doubleToFloat(.789),doubleToFloat(.361),doubleToFloat(.776),doubleToFloat(.388),doubleToFloat(.78),doubleToFloat(.416),doubleToFloat(.762),doubleToFloat(.302),doubleToFloat(.566),doubleToFloat(.292),doubleToFloat(.55)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.292),doubleToFloat(.572),doubleToFloat(.361),doubleToFloat(.536),doubleToFloat(.361),doubleToFloat(.506),doubleToFloat(.303),doubleToFloat(.536),doubleToFloat(.361),doubleToFloat(.493),doubleToFloat(.299),doubleToFloat(.493),doubleToFloat(.451),doubleToFloat(.881),doubleToFloat(.428),doubleToFloat(.851),doubleToFloat(.423),doubleToFloat(.868),doubleToFloat(.459),doubleToFloat(.855)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.449),doubleToFloat(.843),doubleToFloat(.297),doubleToFloat(.506),doubleToFloat(.429),doubleToFloat(.99),doubleToFloat(.402),doubleToFloat(.932),doubleToFloat(.405),doubleToFloat(.957),doubleToFloat(.361),doubleToFloat(.609),doubleToFloat(.34),doubleToFloat(.609),doubleToFloat(.393),doubleToFloat(.957),doubleToFloat(.39),doubleToFloat(.939),doubleToFloat(.361),doubleToFloat(.566)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.308),doubleToFloat(.585),doubleToFloat(.361),doubleToFloat(.834),doubleToFloat(.401),doubleToFloat(.847),doubleToFloat(.402),doubleToFloat(.839),doubleToFloat(.277),doubleToFloat(.603),doubleToFloat(.233),doubleToFloat(.61),doubleToFloat(.293),doubleToFloat(.618),doubleToFloat(.288),doubleToFloat(.558),doubleToFloat(.471),doubleToFloat(.825),doubleToFloat(.467),doubleToFloat(.763)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.418),doubleToFloat(.776),doubleToFloat(.458),doubleToFloat(.932),doubleToFloat(.416),doubleToFloat(.847),doubleToFloat(.411),doubleToFloat(.841),doubleToFloat(.347),doubleToFloat(.62),doubleToFloat(.361),doubleToFloat(.616),doubleToFloat(.425),doubleToFloat(.901),doubleToFloat(.361),doubleToFloat(.626),doubleToFloat(.303),doubleToFloat(.63),doubleToFloat(.338),doubleToFloat(.633)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.434),doubleToFloat(.99),doubleToFloat(.297),doubleToFloat(.63),doubleToFloat(.367),doubleToFloat(.894),doubleToFloat(.388),doubleToFloat(.921),doubleToFloat(.443),doubleToFloat(.893),doubleToFloat(.265),doubleToFloat(.543),doubleToFloat(.352),doubleToFloat(.629),doubleToFloat(.347),doubleToFloat(.633),doubleToFloat(.398),doubleToFloat(.87),doubleToFloat(.361),doubleToFloat(.936)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.361),doubleToFloat(.87),doubleToFloat(.365),doubleToFloat(.872),doubleToFloat(.46),doubleToFloat(.698),doubleToFloat(.423),doubleToFloat(.677),doubleToFloat(.361),doubleToFloat(.686),doubleToFloat(.361),doubleToFloat(.42),doubleToFloat(.308),doubleToFloat(.427),doubleToFloat(.274),doubleToFloat(.441),doubleToFloat(.292),doubleToFloat(.432),doubleToFloat(.273),doubleToFloat(.407)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.303),doubleToFloat(.724),doubleToFloat(.306),doubleToFloat(.748),doubleToFloat(.456),doubleToFloat(.488),doubleToFloat(.422),doubleToFloat(.464),doubleToFloat(.422),doubleToFloat(.486),doubleToFloat(.264),doubleToFloat(.75),doubleToFloat(.263),doubleToFloat(.723),doubleToFloat(.422),doubleToFloat(.587),doubleToFloat(.387),doubleToFloat(.596),doubleToFloat(.454),doubleToFloat(.468)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.266),doubleToFloat(.693),doubleToFloat(.296),doubleToFloat(.678),doubleToFloat(.267),doubleToFloat(.654),doubleToFloat(.305),doubleToFloat(.837),doubleToFloat(.332),doubleToFloat(.832),doubleToFloat(.337),doubleToFloat(.789),doubleToFloat(.421),doubleToFloat(.509),doubleToFloat(.452),doubleToFloat(.494),doubleToFloat(.422),doubleToFloat(.493),doubleToFloat(.431),doubleToFloat(.577)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.436),doubleToFloat(.566),doubleToFloat(.422),doubleToFloat(.536),doubleToFloat(.272),doubleToFloat(.881),doubleToFloat(.272),doubleToFloat(.832),doubleToFloat(.263),doubleToFloat(.856),doubleToFloat(.305),doubleToFloat(.776),doubleToFloat(.246),doubleToFloat(.829),doubleToFloat(.297),doubleToFloat(.99),doubleToFloat(.318),doubleToFloat(.958),doubleToFloat(.324),doubleToFloat(.932)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.332),doubleToFloat(.939),doubleToFloat(.295),doubleToFloat(.851),doubleToFloat(.299),doubleToFloat(.868),doubleToFloat(.306),doubleToFloat(.847),doubleToFloat(.428),doubleToFloat(.618),doubleToFloat(.492),doubleToFloat(.603),doubleToFloat(.453),doubleToFloat(.601),doubleToFloat(.432),doubleToFloat(.564),doubleToFloat(.241),doubleToFloat(.842),doubleToFloat(.293),doubleToFloat(.99)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.268),doubleToFloat(.932),doubleToFloat(.356),doubleToFloat(.843),doubleToFloat(.381),doubleToFloat(.609),doubleToFloat(.297),doubleToFloat(.901),doubleToFloat(.28),doubleToFloat(.894),doubleToFloat(.374),doubleToFloat(.62),doubleToFloat(.383),doubleToFloat(.633),doubleToFloat(.418),doubleToFloat(.63),doubleToFloat(.263),doubleToFloat(.958),doubleToFloat(.337),doubleToFloat(.921)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.424),doubleToFloat(.63),doubleToFloat(.355),doubleToFloat(.894),doubleToFloat(.438),doubleToFloat(.572),doubleToFloat(.456),doubleToFloat(.572),doubleToFloat(.444),doubleToFloat(.564),doubleToFloat(.369),doubleToFloat(.629),doubleToFloat(.374),doubleToFloat(.633),doubleToFloat(.329),doubleToFloat(.958),doubleToFloat(.324),doubleToFloat(.87),doubleToFloat(.359),doubleToFloat(.661)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.414),doubleToFloat(.427),doubleToFloat(.43),doubleToFloat(.432),doubleToFloat(.454),doubleToFloat(.643),doubleToFloat(.355),doubleToFloat(.4),doubleToFloat(.302),doubleToFloat(.403),doubleToFloat(.456),doubleToFloat(.44),doubleToFloat(.453),doubleToFloat(.404),doubleToFloat(.419),doubleToFloat(.403),doubleToFloat(.366),doubleToFloat(.4),doubleToFloat(.434),doubleToFloat(.635)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.4),doubleToFloat(.634),doubleToFloat(.363),doubleToFloat(.661),doubleToFloat(.289),doubleToFloat(.634),doubleToFloat(.322),doubleToFloat(.634),doubleToFloat(.353),doubleToFloat(.634),doubleToFloat(.368),doubleToFloat(.634),doubleToFloat(.263),doubleToFloat(.557),doubleToFloat(.469),doubleToFloat(.845),doubleToFloat(.306),doubleToFloat(.761),doubleToFloat(.259),doubleToFloat(.772)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.417),doubleToFloat(.768),doubleToFloat(.273),doubleToFloat(.496),doubleToFloat(.462),doubleToFloat(.957),doubleToFloat(.417),doubleToFloat(.837),doubleToFloat(.361),doubleToFloat(.892),doubleToFloat(.357),doubleToFloat(.872),doubleToFloat(.366),doubleToFloat(.843),doubleToFloat(.322),doubleToFloat(.847),doubleToFloat(.311),doubleToFloat(.842),doubleToFloat(.321),doubleToFloat(.839)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(.305),doubleToFloat(.768),doubleToFloat(.334),doubleToFloat(.781)], Java.type("float[]"))));
  this.x3dModel = new X3D().setProfile("Interchange").setVersion("3.3")
  .setHead(new head()
    .addMeta(new meta().setName("title").setContent("Marine.x3d"))
    .addMeta(new meta().setName("description").setContent("Marine model"))
    .addMeta(new meta().setName("creator").setContent("Pat Sullivan"))
    .addMeta(new meta().setName("created").setContent("25 November 2006"))
    .addMeta(new meta().setName("modified").setContent("9 May 2020"))
    .addMeta(new meta().setName("warning").setContent("Not HAnim compliant"))
    .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Polygonal/Marine.x3d"))
    .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName("license").setContent("../license.html"))
    .addMeta(new meta().setName("Vizthumbnail").setContent("Thumb_marine_x3d21897981139112986.jpg")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setInfo(new MFString("\"This Web3D World was created with Vizx3D, a Web3D authoring tool\" \"www.vizx3d.com\"")).setTitle("marine"))
    .addChild(new Transform("dad_GROUND")
      .addChild(new Group("GROUND")
        .addChild(new Transform("dad_Import_Base")
          .addChild(new Group("Import_Base")
            .addChild(new NavigationInfo("NavInfo1").setAvatarSize(Java.to([doubleToFloat(.25),doubleToFloat(1.6),doubleToFloat(.75)], Java.type("float[]"))))
            .addChild(new Transform("dad_Transform5").setRotation(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(0.0),doubleToFloat(1.569))
              .addChild(new Group("Transform5")
                .addChild(new Transform("dad_Cover_FACES01_FACES").setRotation(doubleToFloat(0.0),doubleToFloat(-.716),doubleToFloat(.698),doubleToFloat(3.141)).setScale(doubleToFloat(.1097),doubleToFloat(.09537),doubleToFloat(.09537)).setScaleOrientation(doubleToFloat(.577),doubleToFloat(-.577),doubleToFloat(.577),doubleToFloat(2.094)).setTranslation(doubleToFloat(-.189),doubleToFloat(1.74359),doubleToFloat(-.02274))
                  .addChild(new Shape("Cover_FACES01_FACES")
                    .setAppearance(new Appearance()
                      .setTexture(new ImageTexture("marine_camo").setUrl(new MFString("\"marine_camo.jpg\" \"https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Polygonal/marine_camo.jpg\"")))
                      .setMaterial(new Material("material0_mat").setAmbientIntensity(1.000).setDiffuseColor(doubleToFloat(.1255),doubleToFloat(.1843),doubleToFloat(.09804)).setShininess(0.056)))
                    .setGeometry(new IndexedFaceSet().setCcw(false).setCreaseAngle(1.571).setCoordIndex(this.IndexedFaceSet_11_17_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_17_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_17_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_18_point)))))
                .addChild(new Transform("dad_HEAD_FACES01_FACES").setRotation(doubleToFloat(1.0),doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(1.571)).setScale(doubleToFloat(.4132),doubleToFloat(.4132),doubleToFloat(.4132)).setTranslation(doubleToFloat(-.02468),doubleToFloat(1.03432),doubleToFloat(-.09053))
                  .addChild(new Shape("HEAD_FACES01_FACES")
                    .setAppearance(new Appearance()
                      .setTexture(new ImageTexture())
                      .setMaterial(new Material("material2_mat").setAmbientIntensity(1.000).setDiffuseColor(doubleToFloat(.1255),doubleToFloat(.1843),doubleToFloat(.09804)).setShininess(0.056)))
                    .setGeometry(new IndexedFaceSet().setCcw(false).setCreaseAngle(2.094).setCoordIndex(this.IndexedFaceSet_11_25_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_25_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_25_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_26_point)))))
                .addChild(new Transform("dad_BODY_FACES01_FACES").setRotation(doubleToFloat(1.0),doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(1.571)).setScale(doubleToFloat(.4132),doubleToFloat(.4132),doubleToFloat(.4132)).setTranslation(doubleToFloat(-.02585),doubleToFloat(1.03714),doubleToFloat(-.09053))
                  .addChild(new Shape("BODY_FACES01_FACES")
                    .setAppearance(new Appearance()
                      .setTexture(new ImageTexture())
                      .setMaterial(new Material("material1_mat").setAmbientIntensity(1.000).setDiffuseColor(doubleToFloat(.1255),doubleToFloat(.1843),doubleToFloat(.09804)).setShininess(0.056)))
                    .setGeometry(new IndexedFaceSet().setCcw(false).setCreaseAngle(3.142).setCoordIndex(this.IndexedFaceSet_11_33_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_33_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_33_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_34_point)))))))))
        .addChild(new Viewpoint("Viewpoint1").setDescription("Sailor Front").setOrientation(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(0.0),doubleToFloat(1.571)).setPosition(doubleToFloat(2.293),doubleToFloat(1.66),doubleToFloat(0.0)))
        .addChild(new Viewpoint("Viewpoint2").setDescription("Sailor Back").setOrientation(doubleToFloat(-.185),doubleToFloat(-.965),doubleToFloat(-.185),doubleToFloat(1.605)).setPosition(doubleToFloat(-1.208),doubleToFloat(2.0),doubleToFloat(0.0))))));
  },
  // end of initialize() method


  /** Provide a shallow copy of the X3D model.
   * @return Marine model
   */
  getX3dModel : function()
  {	  
	  return this.x3dModel;
  },
  
  /** Indicate X3DJSAIL validation results for this X3D model.
   * @return validation results plus exception information, if any
   */
  validateSelf : function()
  {
	var       metaResult = "";
	var validationResult = "";
	var  exceptionResult = "";
	try
	{
		this.initialize();
		
		if ((this.getX3dModel() == null) || (this.getX3dModel().getHead() == null))
		{
			validationResult = "empty scene, nothing to validate. " + this.x3dModel.validate();
			return validationResult;
		}
		// first list informational meta elements of interest
		var metaList = this.getX3dModel().getHead().getMetaList();
		for (var m in metaList) {
			var metaObject = metaList[m];
			if (metaObject.getName() === metaObject.NAME_ERROR ||
				metaObject.getName() === metaObject.NAME_WARNING ||
				metaObject.getName() === metaObject.NAME_HINT ||
				metaObject.getName() === metaObject.NAME_INFO ||
				metaObject.getName() === metaObject.NAME_TODO)
			{
				metaResult += metaObject.toStringX3D();
			}
		}
		validationResult += this.x3dModel.validate(); // walk entire tree to validate correctness
	}
	catch (e)
	{
		exceptionResult = e; // report exception failures, if any
	}
	if  (metaResult === "" && exceptionResult === "" && validationResult === "")
	     return "success";
	else
	{
		var returnMessage = metaResult;
		if  (exceptionResult !== "" && validationResult !== "")
			returnMessage += "\n*** ";
		returnMessage += exceptionResult;
		if  (exceptionResult === "" && validationResult !== "")
			returnMessage = "\n" + returnMessage; // skip line before meta tags, etc.
		returnMessage += validationResult;
		return returnMessage;
	}
  },
    /** Default main() method provided for test purposes.
     * @param argv input parameters
     */
    main : function (argv)
    {
		var testObject = new Marine();
		print ("Marine execution self-validation test results: " + testObject.validateSelf());
	}
}
new Marine().main();