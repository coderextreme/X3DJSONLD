load('X3Dautoclass.js');

// Javadoc annotations follow, see below for source.
/**
 * <p> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </p>
 <p> Related links: KoreanCharacter06Ga.java source, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">net.x3djsonld.data.KoreanCharacter06Ga&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter06Ga.x3d">KoreanCharacter06Ga.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Jin Hoon Lee and Min Joo Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translator </i> </td>
			<td> Chul Hee Jung and Myeong Won Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 31 March 2011 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translated </i> </td>
			<td> 1 November 2014 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> modified </i> </td>
			<td> 23 December 2021 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> KoreanCharacter00ReadMe.txt </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacterHumanMotion_Infotech2014_140706.pdf">KoreanCharacterHumanMotion_Infotech2014_140706.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharactersIllustrated.pdf">KoreanCharactersIllustrated.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter06Ga.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter06Ga.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> 3DS MAX, <a href="http://www.autodesk.com/products/autodesk-3ds-max/overview" target="_blank">http://www.autodesk.com/products/autodesk-3ds-max/overview</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Suwon University HAnim Editor </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Gnu Image Manipulation Program, <a href="http://www.gimp.org" target="_blank">http://www.gimp.org</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/../license.html">../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToES5.xslt" target="_blank">X3dToES5.xslt</a>
		stylesheet to create ES5 source code from an <code>.x3d</code> scene.
	</p>

	* @author Jin Hoon Lee and Min Joo Lee
 */

function KoreanCharacter06Ga
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
  function doubleToFloat(d) {
    if (Float32Array) {
        return new Float32Array([d])[0];
    }
  }
KoreanCharacter06Ga.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: MetadataSet reference field, scene-graph level=4, element #22, 1 total value */
	this.MetadataSet_HAnimHumanoid.info_4_22_reference = new SFString("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid");

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=8, element #32, 480 total numbers */
	this.IndexedFaceSet_8_32_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=8, element #32, 480 total numbers */
	this.IndexedFaceSet_8_32_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=9, element #32, 186 total numbers made up of 62 3-tuple values */
	this.Coordinate_9_32_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(1.0530),doubleToFloat(0.0273),doubleToFloat(0.0000),doubleToFloat(0.9123),doubleToFloat(-0.5414),doubleToFloat(-0.4375),doubleToFloat(0.9123),doubleToFloat(-0.4652),doubleToFloat(-0.7578),doubleToFloat(0.9123),doubleToFloat(-0.3733),doubleToFloat(-0.8750),doubleToFloat(0.9123),doubleToFloat(0.0273),doubleToFloat(-0.7578),doubleToFloat(0.9123),doubleToFloat(0.4279),doubleToFloat(-0.4375),doubleToFloat(0.9123),doubleToFloat(0.5198),doubleToFloat(0.0000),doubleToFloat(0.9123),doubleToFloat(0.5960),doubleToFloat(0.4375),doubleToFloat(0.9123),doubleToFloat(0.5198),doubleToFloat(0.7578),doubleToFloat(0.9123),doubleToFloat(0.4279)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8750),doubleToFloat(0.9123),doubleToFloat(0.0273),doubleToFloat(0.7578),doubleToFloat(0.9123),doubleToFloat(-0.3733),doubleToFloat(0.4375),doubleToFloat(0.9123),doubleToFloat(-0.4652),doubleToFloat(0.0000),doubleToFloat(0.5267),doubleToFloat(-0.8842),doubleToFloat(-0.5658),doubleToFloat(0.5267),doubleToFloat(-0.7621),doubleToFloat(-0.9800),doubleToFloat(0.5267),doubleToFloat(-0.4285),doubleToFloat(-1.1320),doubleToFloat(0.5267),doubleToFloat(0.0273),doubleToFloat(-0.9800),doubleToFloat(0.5267),doubleToFloat(0.4830),doubleToFloat(-0.5658),doubleToFloat(0.5267),doubleToFloat(0.6985),doubleToFloat(0.0000),doubleToFloat(0.5267),doubleToFloat(0.8206)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.5658),doubleToFloat(0.5267),doubleToFloat(0.6985),doubleToFloat(0.9800),doubleToFloat(0.5267),doubleToFloat(0.4830),doubleToFloat(1.1320),doubleToFloat(0.5267),doubleToFloat(0.0273),doubleToFloat(0.9800),doubleToFloat(0.5267),doubleToFloat(-0.4285),doubleToFloat(0.5658),doubleToFloat(0.5267),doubleToFloat(-0.7621),doubleToFloat(0.0000),doubleToFloat(0.0000),doubleToFloat(-0.9616),doubleToFloat(-0.6534),doubleToFloat(0.0000),doubleToFloat(-0.8206),doubleToFloat(-1.1320),doubleToFloat(0.0000),doubleToFloat(-0.4353),doubleToFloat(-1.3070),doubleToFloat(0.0000),doubleToFloat(0.0273),doubleToFloat(-1.1320),doubleToFloat(0.0000),doubleToFloat(0.5536)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6534),doubleToFloat(0.0000),doubleToFloat(0.8206),doubleToFloat(0.0000),doubleToFloat(0.0000),doubleToFloat(0.9616),doubleToFloat(0.6534),doubleToFloat(0.0000),doubleToFloat(0.8206),doubleToFloat(1.1320),doubleToFloat(0.0000),doubleToFloat(0.5536),doubleToFloat(1.3070),doubleToFloat(0.0000),doubleToFloat(0.0273),doubleToFloat(1.1320),doubleToFloat(0.0000),doubleToFloat(-0.4353),doubleToFloat(0.6534),doubleToFloat(0.0000),doubleToFloat(-0.8206),doubleToFloat(0.0000),doubleToFloat(-0.5267),doubleToFloat(-0.8206),doubleToFloat(-0.5658),doubleToFloat(-0.5267),doubleToFloat(-0.6985),doubleToFloat(-0.9800),doubleToFloat(-0.5267),doubleToFloat(-0.3648)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1320),doubleToFloat(-0.5267),doubleToFloat(0.0273),doubleToFloat(-0.9800),doubleToFloat(-0.5267),doubleToFloat(0.4830),doubleToFloat(-0.5658),doubleToFloat(-0.5267),doubleToFloat(0.6985),doubleToFloat(0.0000),doubleToFloat(-0.5267),doubleToFloat(0.8206),doubleToFloat(0.5658),doubleToFloat(-0.5267),doubleToFloat(0.6985),doubleToFloat(0.9800),doubleToFloat(-0.5267),doubleToFloat(0.4830),doubleToFloat(1.1320),doubleToFloat(-0.5267),doubleToFloat(0.0273),doubleToFloat(0.9800),doubleToFloat(-0.5267),doubleToFloat(-0.3648),doubleToFloat(0.5658),doubleToFloat(-0.5267),doubleToFloat(-0.6985),doubleToFloat(0.0000),doubleToFloat(-0.9123),doubleToFloat(-0.4353)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.3267),doubleToFloat(-0.9123),doubleToFloat(-0.3648),doubleToFloat(-0.5658),doubleToFloat(-0.9123),doubleToFloat(-0.2358),doubleToFloat(-0.6534),doubleToFloat(-0.9123),doubleToFloat(0.0273),doubleToFloat(-0.5658),doubleToFloat(-0.9123),doubleToFloat(0.2904),doubleToFloat(-0.3267),doubleToFloat(-0.9123),doubleToFloat(0.4830),doubleToFloat(0.0000),doubleToFloat(-0.9123),doubleToFloat(0.5536),doubleToFloat(0.3267),doubleToFloat(-0.9123),doubleToFloat(0.4830),doubleToFloat(0.5658),doubleToFloat(-0.9123),doubleToFloat(0.2904),doubleToFloat(0.6534),doubleToFloat(-0.9123),doubleToFloat(0.0273),doubleToFloat(0.5658),doubleToFloat(-0.9123),doubleToFloat(-0.2358)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.3267),doubleToFloat(-0.9123),doubleToFloat(-0.3648),doubleToFloat(0.0000),doubleToFloat(-1.0530),doubleToFloat(0.0273)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=9, element #33, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_9_33_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.6211),doubleToFloat(0.5754),doubleToFloat(0.7851),doubleToFloat(0.5720),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6158),doubleToFloat(0.5702),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.4167),doubleToFloat(0.5698),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.6158),doubleToFloat(0.5702)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.8036),doubleToFloat(0.5346),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.4166),doubleToFloat(0.5346)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.7912),doubleToFloat(0.4044),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.6148),doubleToFloat(0.3907)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.4163),doubleToFloat(0.4938),doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.6148),doubleToFloat(0.3907),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7950),doubleToFloat(0.3772),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.6945),doubleToFloat(0.3645)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.4160),doubleToFloat(0.4530),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6945),doubleToFloat(0.3645),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.7887),doubleToFloat(0.3451)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6980),doubleToFloat(0.3508),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.4181),doubleToFloat(0.3884),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6980),doubleToFloat(0.3508)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6237),doubleToFloat(0.3398)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #41, 448 total numbers */
	this.IndexedFaceSet_9_41_coordIndex = new MFInt32(Java.to([0,36,3,-1,3,4,0,-1,36,37,5,-1,5,3,36,-1,37,40,24,-1,24,5,37,-1,1,2,7,-1,7,6,1,-1,2,38,8,-1,8,7,2,-1,39,9,8,-1,8,38,39,-1,0,4,9,-1,9,39,0,-1,3,17,23,-1,23,4,3,-1,18,17,3,-1,3,5,18,-1,19,26,24,-1,24,6,19,-1,20,19,6,-1,6,7,20,-1,21,20,7,-1,7,8,21,-1,9,22,21,-1,21,8,9,-1,4,23,22,-1,22,9,4,-1,11,29,28,-1,28,10,11,-1,30,29,11,-1,11,12,30,-1,31,30,12,-1,32,27,25,-1,25,13,32,-1,14,33,32,-1,32,13,14,-1,15,34,33,-1,33,14,15,-1,16,35,34,-1,34,15,16,-1,10,28,35,-1,35,16,10,-1,17,11,10,-1,10,23,17,-1,12,11,17,-1,17,18,12,-1,13,25,26,-1,26,19,13,-1,14,13,19,-1,19,20,14,-1,15,14,20,-1,20,21,15,-1,22,16,15,-1,15,21,22,-1,23,10,16,-1,16,22,23,-1,24,40,1,-1,1,6,24,-1,26,18,5,-1,5,24,26,-1,25,12,18,-1,18,26,25,-1,12,25,27,-1,27,31,12,-1,43,44,45,-1,45,46,47,-1,43,45,47,-1,47,48,49,-1,43,47,49,-1,43,49,41,-1,42,43,41,-1,27,32,42,-1,42,41,27,-1,32,33,43,-1,43,42,32,-1,33,34,44,-1,44,43,33,-1,34,35,45,-1,45,44,34,-1,35,28,46,-1,46,45,35,-1,28,29,47,-1,47,46,28,-1,29,30,48,-1,48,47,29,-1,30,31,49,-1,49,48,30,-1,31,27,41,-1,41,49,31,-1,52,53,54,-1,54,55,56,-1,56,57,50,-1,54,56,50,-1,52,54,50,-1,51,52,50,-1,2,1,51,-1,51,50,2,-1,1,40,52,-1,52,51,1,-1,40,37,53,-1,53,52,40,-1,37,36,54,-1,54,53,37,-1,36,0,55,-1,55,54,36,-1,0,39,56,-1,56,55,0,-1,39,38,57,-1,57,56,39,-1,38,2,50,-1,50,57,38,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #41, 448 total numbers */
	this.IndexedFaceSet_9_41_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,0,-1,1,4,5,-1,5,2,1,-1,4,6,7,-1,7,5,4,-1,8,9,10,-1,10,11,8,-1,9,12,13,-1,13,10,9,-1,14,15,13,-1,13,12,14,-1,0,3,15,-1,15,14,0,-1,2,16,17,-1,17,3,2,-1,18,16,2,-1,2,5,18,-1,19,20,7,-1,7,42,19,-1,21,43,11,-1,11,10,21,-1,22,21,10,-1,10,13,22,-1,15,23,22,-1,22,13,15,-1,3,17,23,-1,23,15,3,-1,24,25,26,-1,26,27,24,-1,29,25,24,-1,24,28,29,-1,30,29,28,-1,32,33,34,-1,34,31,32,-1,35,36,45,-1,45,44,35,-1,37,38,36,-1,36,35,37,-1,39,40,38,-1,38,37,39,-1,27,26,40,-1,40,39,27,-1,16,24,27,-1,27,17,16,-1,28,24,16,-1,16,18,28,-1,31,34,20,-1,20,19,31,-1,35,44,43,-1,43,21,35,-1,37,35,21,-1,21,22,37,-1,23,39,37,-1,37,22,23,-1,17,27,39,-1,39,23,17,-1,7,6,41,-1,41,42,7,-1,20,18,5,-1,5,7,20,-1,34,28,18,-1,18,20,34,-1,28,34,33,-1,33,30,28,-1,48,49,50,-1,50,51,52,-1,48,50,52,-1,52,53,54,-1,48,52,54,-1,48,54,46,-1,47,48,46,-1,33,32,47,-1,47,46,33,-1,45,36,48,-1,48,47,45,-1,36,38,49,-1,49,48,36,-1,38,40,50,-1,50,49,38,-1,40,26,51,-1,51,50,40,-1,26,25,52,-1,52,51,26,-1,25,29,53,-1,53,52,25,-1,29,30,54,-1,54,53,29,-1,30,33,46,-1,46,54,30,-1,57,58,59,-1,59,60,61,-1,61,62,55,-1,59,61,55,-1,57,59,55,-1,56,57,55,-1,9,8,56,-1,56,55,9,-1,41,6,57,-1,57,56,41,-1,6,4,58,-1,58,57,6,-1,4,1,59,-1,59,58,4,-1,1,0,60,-1,60,59,1,-1,0,14,61,-1,61,60,0,-1,14,12,62,-1,62,61,14,-1,12,9,55,-1,55,62,12,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #41, 174 total numbers made up of 58 3-tuple values */
	this.Coordinate_10_41_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.9450),doubleToFloat(-13.3500),doubleToFloat(0.0759),doubleToFloat(-1.5260),doubleToFloat(-13.3500),doubleToFloat(0.0759),doubleToFloat(-0.9541),doubleToFloat(-13.3500),doubleToFloat(1.4320),doubleToFloat(1.3560),doubleToFloat(-12.1300),doubleToFloat(-1.1030),doubleToFloat(1.9170),doubleToFloat(-12.1300),doubleToFloat(0.0759),doubleToFloat(0.1805),doubleToFloat(-12.1300),doubleToFloat(-1.7130),doubleToFloat(-1.5290),doubleToFloat(-12.1300),doubleToFloat(0.0759),doubleToFloat(-0.8882),doubleToFloat(-12.1300),doubleToFloat(1.4870),doubleToFloat(0.1805),doubleToFloat(-12.1300),doubleToFloat(2.1400),doubleToFloat(1.2880),doubleToFloat(-12.1300),doubleToFloat(1.4150)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.5400),doubleToFloat(-1.2460),doubleToFloat(0.0759),doubleToFloat(1.7450),doubleToFloat(-1.3120),doubleToFloat(-1.6660),doubleToFloat(0.0612),doubleToFloat(-1.7770),doubleToFloat(-2.5170),doubleToFloat(-2.4230),doubleToFloat(-2.6230),doubleToFloat(0.0759),doubleToFloat(-1.5740),doubleToFloat(-2.3820),doubleToFloat(1.8890),doubleToFloat(0.0612),doubleToFloat(-1.8800),doubleToFloat(2.6070),doubleToFloat(1.7830),doubleToFloat(-1.4180),doubleToFloat(1.7220),doubleToFloat(1.5560),doubleToFloat(-6.5110),doubleToFloat(-1.3790),doubleToFloat(0.1497),doubleToFloat(-6.6000),doubleToFloat(-2.1660),doubleToFloat(-1.9640),doubleToFloat(-7.4480),doubleToFloat(0.0759)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1620),doubleToFloat(-7.5600),doubleToFloat(1.6580),doubleToFloat(0.1527),doubleToFloat(-7.4020),doubleToFloat(2.3790),doubleToFloat(1.5970),doubleToFloat(-6.8740),doubleToFloat(1.5920),doubleToFloat(2.2900),doubleToFloat(-6.5310),doubleToFloat(0.0759),doubleToFloat(-1.1740),doubleToFloat(-12.1300),doubleToFloat(-1.0690),doubleToFloat(-1.6760),doubleToFloat(-2.3240),doubleToFloat(-1.5730),doubleToFloat(-1.4670),doubleToFloat(-7.0130),doubleToFloat(-1.3460),doubleToFloat(-1.7970),doubleToFloat(-0.5841),doubleToFloat(-1.8310),doubleToFloat(2.6610),doubleToFloat(0.5185),doubleToFloat(0.0759),doubleToFloat(1.8580),doubleToFloat(0.4532),doubleToFloat(-1.7760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.3524),doubleToFloat(0.0751),doubleToFloat(-2.7330),doubleToFloat(-0.6502),doubleToFloat(-0.2113),doubleToFloat(-2.7350),doubleToFloat(-2.6610),doubleToFloat(-0.7579),doubleToFloat(0.0759),doubleToFloat(-1.7020),doubleToFloat(-0.4783),doubleToFloat(2.0820),doubleToFloat(0.0595),doubleToFloat(0.0030),doubleToFloat(2.7350),doubleToFloat(1.8040),doubleToFloat(0.3324),doubleToFloat(1.9020),doubleToFloat(1.1940),doubleToFloat(-13.3500),doubleToFloat(-1.0380),doubleToFloat(0.1814),doubleToFloat(-13.3500),doubleToFloat(-1.4950),doubleToFloat(0.1814),doubleToFloat(-13.3500),doubleToFloat(2.0800),doubleToFloat(1.4230),doubleToFloat(-13.3500),doubleToFloat(1.4080)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9483),doubleToFloat(-13.3500),doubleToFloat(-1.0420),doubleToFloat(-1.4480),doubleToFloat(0.6345),doubleToFloat(-1.4630),doubleToFloat(-2.1440),doubleToFloat(0.5036),doubleToFloat(0.0683),doubleToFloat(-1.4070),doubleToFloat(0.7284),doubleToFloat(1.6150),doubleToFloat(-0.1689),doubleToFloat(1.0790),doubleToFloat(2.0750),doubleToFloat(1.1060),doubleToFloat(1.2900),doubleToFloat(1.4690),doubleToFloat(1.7670),doubleToFloat(1.4260),doubleToFloat(0.0645),doubleToFloat(1.1320),doubleToFloat(1.4020),doubleToFloat(-1.3840),doubleToFloat(-0.0413),doubleToFloat(1.1070),doubleToFloat(-2.1300),doubleToFloat(-0.6053),doubleToFloat(0.9307),doubleToFloat(-2.1310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4120),doubleToFloat(-14.2300),doubleToFloat(1.0350),doubleToFloat(-0.8065),doubleToFloat(-14.2300),doubleToFloat(0.0993),doubleToFloat(-0.4512),doubleToFloat(-14.2300),doubleToFloat(-0.5889),doubleToFloat(0.1645),doubleToFloat(-14.2300),doubleToFloat(-0.8359),doubleToFloat(0.7257),doubleToFloat(-14.2300),doubleToFloat(-0.5822),doubleToFloat(1.2160),doubleToFloat(-14.2300),doubleToFloat(0.1438),doubleToFloat(0.8770),doubleToFloat(-14.2300),doubleToFloat(1.0080),doubleToFloat(0.1908),doubleToFloat(-14.2300),doubleToFloat(1.3790)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #42, 126 total numbers made up of 63 2-tuple values */
	this.TextureCoordinate_10_42_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1132),doubleToFloat(0.0567),doubleToFloat(0.1247),doubleToFloat(0.0557),doubleToFloat(0.1306),doubleToFloat(0.0755),doubleToFloat(0.1137),doubleToFloat(0.0746),doubleToFloat(0.1317),doubleToFloat(0.0556),doubleToFloat(0.1437),doubleToFloat(0.0742),doubleToFloat(0.1367),doubleToFloat(0.0492),doubleToFloat(0.1552),doubleToFloat(0.0702),doubleToFloat(0.0841),doubleToFloat(0.0399),doubleToFloat(0.0919),doubleToFloat(0.0515)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0748),doubleToFloat(0.0702),doubleToFloat(0.0573),doubleToFloat(0.0611),doubleToFloat(0.0956),doubleToFloat(0.0555),doubleToFloat(0.0870),doubleToFloat(0.0732),doubleToFloat(0.1016),doubleToFloat(0.0556),doubleToFloat(0.1004),doubleToFloat(0.0740),doubleToFloat(0.1414),doubleToFloat(0.1255),doubleToFloat(0.1150),doubleToFloat(0.1221),doubleToFloat(0.1555),doubleToFloat(0.1246),doubleToFloat(0.1901),doubleToFloat(0.1145)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1710),doubleToFloat(0.1210),doubleToFloat(0.0609),doubleToFloat(0.1143),doubleToFloat(0.0789),doubleToFloat(0.1145),doubleToFloat(0.0975),doubleToFloat(0.1185),doubleToFloat(0.1398),doubleToFloat(0.1968),doubleToFloat(0.1375),doubleToFloat(0.2141),doubleToFloat(0.1164),doubleToFloat(0.2106),doubleToFloat(0.1165),doubleToFloat(0.1936),doubleToFloat(0.1560),doubleToFloat(0.1998),doubleToFloat(0.1437),doubleToFloat(0.2140)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1512),doubleToFloat(0.2120),doubleToFloat(0.1930),doubleToFloat(0.2055),doubleToFloat(0.1741),doubleToFloat(0.2304),doubleToFloat(0.1584),doubleToFloat(0.2157),doubleToFloat(0.1743),doubleToFloat(0.2015),doubleToFloat(0.0622),doubleToFloat(0.1977),doubleToFloat(0.0740),doubleToFloat(0.2180),doubleToFloat(0.0803),doubleToFloat(0.1938),doubleToFloat(0.0889),doubleToFloat(0.2103),doubleToFloat(0.0992),doubleToFloat(0.1927)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1015),doubleToFloat(0.2099),doubleToFloat(0.1410),doubleToFloat(0.0427),doubleToFloat(0.1660),doubleToFloat(0.0633),doubleToFloat(0.0381),doubleToFloat(0.1143),doubleToFloat(0.0424),doubleToFloat(0.2047),doubleToFloat(0.0615),doubleToFloat(0.2317),doubleToFloat(0.1584),doubleToFloat(0.2157),doubleToFloat(0.1741),doubleToFloat(0.2304),doubleToFloat(0.0740),doubleToFloat(0.2180),doubleToFloat(0.0889),doubleToFloat(0.2103)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1015),doubleToFloat(0.2099),doubleToFloat(0.1164),doubleToFloat(0.2106),doubleToFloat(0.1375),doubleToFloat(0.2141),doubleToFloat(0.1437),doubleToFloat(0.2140),doubleToFloat(0.1512),doubleToFloat(0.2120),doubleToFloat(0.0919),doubleToFloat(0.0515),doubleToFloat(0.0841),doubleToFloat(0.0399),doubleToFloat(0.1367),doubleToFloat(0.0492),doubleToFloat(0.1317),doubleToFloat(0.0556),doubleToFloat(0.1247),doubleToFloat(0.0557)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1132),doubleToFloat(0.0567),doubleToFloat(0.1016),doubleToFloat(0.0556),doubleToFloat(0.0956),doubleToFloat(0.0555)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #50, 432 total numbers */
	this.IndexedFaceSet_10_50_coordIndex = new MFInt32(Java.to([19,25,27,-1,27,0,19,-1,20,19,0,-1,0,1,20,-1,21,26,28,-1,28,29,21,-1,22,21,29,-1,29,2,22,-1,30,23,22,-1,22,2,30,-1,31,24,23,-1,23,30,31,-1,27,25,24,-1,24,31,27,-1,32,3,4,-1,4,35,32,-1,36,35,4,-1,4,5,36,-1,10,6,33,-1,33,39,10,-1,7,34,33,-1,33,6,7,-1,8,37,34,-1,34,7,8,-1,9,38,37,-1,37,8,9,-1,32,38,9,-1,9,3,32,-1,5,13,15,-1,15,10,5,-1,39,36,5,-1,5,10,39,-1,4,3,12,-1,12,11,4,-1,5,4,11,-1,11,13,5,-1,14,6,10,-1,10,15,14,-1,16,7,6,-1,6,14,16,-1,17,8,7,-1,7,16,17,-1,18,9,8,-1,8,17,18,-1,3,9,18,-1,18,12,3,-1,20,26,15,-1,15,13,20,-1,11,12,25,-1,25,19,11,-1,13,11,19,-1,19,20,13,-1,14,15,26,-1,26,21,14,-1,22,16,14,-1,14,21,22,-1,23,17,16,-1,16,22,23,-1,24,18,17,-1,17,23,24,-1,25,12,18,-1,18,24,25,-1,1,28,26,-1,26,20,1,-1,42,43,44,-1,44,45,46,-1,46,47,40,-1,44,46,40,-1,42,44,40,-1,41,42,40,-1,33,34,41,-1,41,40,33,-1,34,37,42,-1,42,41,34,-1,37,38,43,-1,43,42,37,-1,38,32,44,-1,44,43,38,-1,32,35,45,-1,45,44,32,-1,35,36,46,-1,46,45,35,-1,36,39,47,-1,47,46,36,-1,39,33,40,-1,40,47,39,-1,50,51,52,-1,52,53,54,-1,50,52,54,-1,54,55,48,-1,50,54,48,-1,49,50,48,-1,0,27,49,-1,49,48,0,-1,27,31,50,-1,50,49,27,-1,31,30,51,-1,51,50,31,-1,30,2,52,-1,52,51,30,-1,2,29,53,-1,53,52,2,-1,29,28,54,-1,54,53,29,-1,28,1,55,-1,55,54,28,-1,1,0,48,-1,48,55,1,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #50, 432 total numbers */
	this.IndexedFaceSet_10_50_texCoordIndex = new MFInt32(Java.to([1,2,3,-1,3,0,1,-1,5,1,0,-1,0,4,5,-1,7,8,9,-1,9,6,7,-1,11,7,6,-1,6,10,11,-1,12,13,11,-1,11,10,12,-1,14,15,13,-1,13,12,14,-1,3,2,15,-1,15,14,3,-1,36,17,16,-1,16,39,36,-1,40,39,16,-1,16,18,40,-1,19,20,37,-1,37,44,19,-1,21,38,37,-1,37,20,21,-1,22,41,38,-1,38,21,22,-1,23,42,41,-1,41,22,23,-1,36,42,23,-1,23,17,36,-1,18,24,25,-1,25,34,18,-1,43,40,18,-1,18,34,43,-1,16,17,27,-1,27,26,16,-1,18,16,26,-1,26,24,18,-1,28,20,19,-1,19,35,28,-1,29,21,20,-1,20,28,29,-1,30,22,21,-1,21,29,30,-1,31,23,22,-1,22,30,31,-1,17,23,31,-1,31,27,17,-1,5,32,25,-1,25,24,5,-1,26,27,2,-1,2,1,26,-1,24,26,1,-1,1,5,24,-1,28,35,8,-1,8,7,28,-1,11,29,28,-1,28,7,11,-1,13,30,29,-1,29,11,13,-1,15,31,30,-1,30,13,15,-1,2,27,31,-1,31,15,2,-1,4,33,32,-1,32,5,4,-1,47,48,49,-1,49,50,51,-1,51,52,45,-1,49,51,45,-1,47,49,45,-1,46,47,45,-1,37,38,46,-1,46,45,37,-1,38,41,47,-1,47,46,38,-1,41,42,48,-1,48,47,41,-1,42,36,49,-1,49,48,42,-1,36,39,50,-1,50,49,36,-1,39,40,51,-1,51,50,39,-1,40,43,52,-1,52,51,40,-1,44,37,45,-1,45,52,44,-1,55,56,57,-1,57,58,59,-1,55,57,59,-1,59,60,53,-1,55,59,53,-1,54,55,53,-1,0,3,54,-1,54,53,0,-1,3,14,55,-1,55,54,3,-1,14,12,56,-1,56,55,14,-1,12,10,57,-1,57,56,12,-1,10,6,58,-1,58,57,10,-1,6,9,59,-1,59,58,6,-1,33,4,60,-1,60,59,33,-1,4,0,53,-1,53,60,4,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #50, 168 total numbers made up of 56 3-tuple values */
	this.Coordinate_11_50_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.7643),doubleToFloat(-12.9100),doubleToFloat(-0.8153),doubleToFloat(-0.0210),doubleToFloat(-12.9100),doubleToFloat(-1.1600),doubleToFloat(-0.6844),doubleToFloat(-12.9100),doubleToFloat(0.7722),doubleToFloat(1.5830),doubleToFloat(-1.3210),doubleToFloat(-0.0046),doubleToFloat(1.0890),doubleToFloat(-1.3210),doubleToFloat(-1.1590),doubleToFloat(-0.0285),doubleToFloat(-1.3210),doubleToFloat(-1.7030),doubleToFloat(-1.6010),doubleToFloat(-1.3210),doubleToFloat(-0.0046),doubleToFloat(-0.9965),doubleToFloat(-1.3210),doubleToFloat(1.2130),doubleToFloat(-0.0285),doubleToFloat(-1.3210),doubleToFloat(1.7080),doubleToFloat(1.0450),doubleToFloat(-1.3210),doubleToFloat(1.1770)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1610),doubleToFloat(-1.3210),doubleToFloat(-1.2130),doubleToFloat(1.2300),doubleToFloat(-4.8280),doubleToFloat(-1.3960),doubleToFloat(1.6890),doubleToFloat(-5.3580),doubleToFloat(-0.0046),doubleToFloat(-0.0285),doubleToFloat(-4.5370),doubleToFloat(-1.9990),doubleToFloat(-1.5880),doubleToFloat(-6.6760),doubleToFloat(-0.0046),doubleToFloat(-1.0770),doubleToFloat(-5.2020),doubleToFloat(-1.4050),doubleToFloat(-0.9050),doubleToFloat(-6.3670),doubleToFloat(1.0510),doubleToFloat(-0.0285),doubleToFloat(-6.1190),doubleToFloat(1.5430),doubleToFloat(1.0220),doubleToFloat(-5.7860),doubleToFloat(1.0170),doubleToFloat(0.9394),doubleToFloat(-9.7000),doubleToFloat(-1.0620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0285),doubleToFloat(-9.6910),doubleToFloat(-1.5020),doubleToFloat(-1.4040),doubleToFloat(-9.7390),doubleToFloat(-0.0046),doubleToFloat(-0.7836),doubleToFloat(-9.7580),doubleToFloat(0.9433),doubleToFloat(-0.0285),doubleToFloat(-9.7310),doubleToFloat(1.3490),doubleToFloat(0.9094),doubleToFloat(-9.7320),doubleToFloat(0.8807),doubleToFloat(1.4010),doubleToFloat(-9.6990),doubleToFloat(-0.0046),doubleToFloat(-0.8516),doubleToFloat(-9.7590),doubleToFloat(-1.1070),doubleToFloat(1.1830),doubleToFloat(-12.9100),doubleToFloat(0.0030),doubleToFloat(-0.7143),doubleToFloat(-12.9100),doubleToFloat(-0.8324),doubleToFloat(-1.1100),doubleToFloat(-12.9100),doubleToFloat(-0.0000)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0210),doubleToFloat(-12.9100),doubleToFloat(1.1750),doubleToFloat(0.7705),doubleToFloat(-12.9100),doubleToFloat(0.7073),doubleToFloat(1.7360),doubleToFloat(-0.0938),doubleToFloat(-0.0046),doubleToFloat(-1.7360),doubleToFloat(-0.0938),doubleToFloat(-0.0046),doubleToFloat(-1.1640),doubleToFloat(-0.0938),doubleToFloat(1.3510),doubleToFloat(0.9841),doubleToFloat(-0.0938),doubleToFloat(-1.1180),doubleToFloat(-0.0285),doubleToFloat(-0.0938),doubleToFloat(-1.5760),doubleToFloat(-0.0285),doubleToFloat(-0.0938),doubleToFloat(1.9990),doubleToFloat(1.2130),doubleToFloat(-0.0938),doubleToFloat(1.3280),doubleToFloat(-1.1580),doubleToFloat(-0.0938),doubleToFloat(-1.1230)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.3250),doubleToFloat(1.0040),doubleToFloat(0.0087),doubleToFloat(-0.8543),doubleToFloat(1.0040),doubleToFloat(1.1240),doubleToFloat(-0.0232),doubleToFloat(1.0040),doubleToFloat(1.5990),doubleToFloat(0.9012),doubleToFloat(1.0040),doubleToFloat(1.0990),doubleToFloat(1.3180),doubleToFloat(1.0040),doubleToFloat(0.0342),doubleToFloat(0.7165),doubleToFloat(1.0040),doubleToFloat(-0.8579),doubleToFloat(-0.0382),doubleToFloat(1.0040),doubleToFloat(-1.1990),doubleToFloat(-0.8742),doubleToFloat(1.0040),doubleToFloat(-0.8636),doubleToFloat(0.4764),doubleToFloat(-13.5400),doubleToFloat(-0.5628),doubleToFloat(0.7605),doubleToFloat(-13.5400),doubleToFloat(-0.0071)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.4806),doubleToFloat(-13.5400),doubleToFloat(0.4710),doubleToFloat(-0.0181),doubleToFloat(-13.5400),doubleToFloat(0.7658),doubleToFloat(-0.3892),doubleToFloat(-13.5400),doubleToFloat(0.5404),doubleToFloat(-0.6930),doubleToFloat(-13.5400),doubleToFloat(-0.0106),doubleToFloat(-0.4187),doubleToFloat(-13.5400),doubleToFloat(-0.5874),doubleToFloat(-0.0147),doubleToFloat(-13.5400),doubleToFloat(-0.7785)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #51, 122 total numbers made up of 61 2-tuple values */
	this.TextureCoordinate_11_51_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1533),doubleToFloat(0.0451),doubleToFloat(0.1623),doubleToFloat(0.0594),doubleToFloat(0.1505),doubleToFloat(0.0627),doubleToFloat(0.1460),doubleToFloat(0.0491),doubleToFloat(0.1609),doubleToFloat(0.0391),doubleToFloat(0.1742),doubleToFloat(0.0547),doubleToFloat(0.1152),doubleToFloat(0.0443),doubleToFloat(0.1036),doubleToFloat(0.0603),doubleToFloat(0.0917),doubleToFloat(0.0539),doubleToFloat(0.1094),doubleToFloat(0.0349)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1241),doubleToFloat(0.0505),doubleToFloat(0.1179),doubleToFloat(0.0642),doubleToFloat(0.1279),doubleToFloat(0.0519),doubleToFloat(0.1267),doubleToFloat(0.0650),doubleToFloat(0.1370),doubleToFloat(0.0496),doubleToFloat(0.1389),doubleToFloat(0.0636),doubleToFloat(0.1771),doubleToFloat(0.1833),doubleToFloat(0.1621),doubleToFloat(0.1818),doubleToFloat(0.1898),doubleToFloat(0.1853),doubleToFloat(0.0921),doubleToFloat(0.1990)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1065),doubleToFloat(0.1923),doubleToFloat(0.1237),doubleToFloat(0.1855),doubleToFloat(0.1357),doubleToFloat(0.1824),doubleToFloat(0.1477),doubleToFloat(0.1821),doubleToFloat(0.1890),doubleToFloat(0.1086),doubleToFloat(0.2023),doubleToFloat(0.1026),doubleToFloat(0.1737),doubleToFloat(0.1142),doubleToFloat(0.1567),doubleToFloat(0.1184),doubleToFloat(0.0934),doubleToFloat(0.1104),doubleToFloat(0.1120),doubleToFloat(0.1113)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1261),doubleToFloat(0.1143),doubleToFloat(0.1413),doubleToFloat(0.1164),doubleToFloat(0.1810),doubleToFloat(0.0492),doubleToFloat(0.1618),doubleToFloat(0.0341),doubleToFloat(0.2033),doubleToFloat(0.1901),doubleToFloat(0.0780),doubleToFloat(0.1116),doubleToFloat(0.1577),doubleToFloat(0.1998),doubleToFloat(0.1212),doubleToFloat(0.2120),doubleToFloat(0.1332),doubleToFloat(0.2037),doubleToFloat(0.1701),doubleToFloat(0.2038)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1782),doubleToFloat(0.2053),doubleToFloat(0.1390),doubleToFloat(0.1984),doubleToFloat(0.1454),doubleToFloat(0.1990),doubleToFloat(0.1839),doubleToFloat(0.2167),doubleToFloat(0.1171),doubleToFloat(0.2197),doubleToFloat(0.1212),doubleToFloat(0.2120),doubleToFloat(0.1332),doubleToFloat(0.2037),doubleToFloat(0.1390),doubleToFloat(0.1984),doubleToFloat(0.1454),doubleToFloat(0.1990),doubleToFloat(0.1577),doubleToFloat(0.1998)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1701),doubleToFloat(0.2038),doubleToFloat(0.1782),doubleToFloat(0.2053),doubleToFloat(0.1839),doubleToFloat(0.2167),doubleToFloat(0.1533),doubleToFloat(0.0451),doubleToFloat(0.1460),doubleToFloat(0.0491),doubleToFloat(0.1370),doubleToFloat(0.0496),doubleToFloat(0.1279),doubleToFloat(0.0519),doubleToFloat(0.1241),doubleToFloat(0.0505),doubleToFloat(0.1152),doubleToFloat(0.0443),doubleToFloat(0.1094),doubleToFloat(0.0349)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1609),doubleToFloat(0.0391)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #59, 440 total numbers */
	this.IndexedFaceSet_11_59_coordIndex = new MFInt32(Java.to([0,1,10,-1,10,16,0,-1,2,11,10,-1,10,1,2,-1,3,12,11,-1,11,2,3,-1,4,13,12,-1,12,3,4,-1,41,0,16,-1,16,15,41,-1,0,41,44,-1,44,18,0,-1,17,19,4,-1,4,3,17,-1,20,17,3,-1,3,2,20,-1,21,20,2,-1,2,1,21,-1,18,21,1,-1,1,0,18,-1,18,44,42,-1,42,6,18,-1,8,7,19,-1,19,17,8,-1,23,8,17,-1,17,20,23,-1,9,23,20,-1,20,21,9,-1,6,9,21,-1,21,18,6,-1,10,24,26,-1,26,16,10,-1,11,25,24,-1,24,10,11,-1,12,27,25,-1,25,11,12,-1,13,28,27,-1,27,12,13,-1,5,28,13,-1,13,14,5,-1,30,29,39,-1,39,15,30,-1,26,30,15,-1,15,16,26,-1,8,23,22,-1,22,7,8,-1,9,6,22,-1,22,23,9,-1,6,42,46,-1,46,22,6,-1,33,34,35,-1,35,36,37,-1,37,38,31,-1,35,37,31,-1,33,35,31,-1,32,33,31,-1,28,5,32,-1,32,31,28,-1,5,29,33,-1,33,32,5,-1,29,30,34,-1,34,33,29,-1,30,26,35,-1,35,34,30,-1,26,24,36,-1,36,35,26,-1,24,25,37,-1,37,36,24,-1,25,27,38,-1,38,37,25,-1,27,28,31,-1,31,38,27,-1,39,29,5,-1,5,14,39,-1,7,22,46,-1,46,43,7,-1,4,19,45,-1,45,40,4,-1,19,7,43,-1,43,45,19,-1,4,40,14,-1,14,13,4,-1,48,49,50,-1,50,51,52,-1,48,50,52,-1,53,54,55,-1,52,53,55,-1,48,52,55,-1,48,55,56,-1,48,56,47,-1,15,39,48,-1,48,47,15,-1,39,14,49,-1,49,48,39,-1,14,40,50,-1,50,49,14,-1,40,45,51,-1,51,50,40,-1,45,43,52,-1,52,51,45,-1,43,46,53,-1,53,52,43,-1,46,42,54,-1,54,53,46,-1,42,44,55,-1,55,54,42,-1,44,41,56,-1,56,55,44,-1,41,15,47,-1,47,56,41,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #59, 440 total numbers */
	this.IndexedFaceSet_11_59_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,5,0,-1,3,4,2,-1,2,1,3,-1,1,2,4,-1,4,3,1,-1,0,5,2,-1,2,1,0,-1,33,0,5,-1,5,9,33,-1,0,33,38,-1,38,8,0,-1,10,8,0,-1,0,1,10,-1,11,10,1,-1,1,3,11,-1,10,11,3,-1,3,1,10,-1,8,10,1,-1,1,0,8,-1,8,38,35,-1,35,12,8,-1,13,12,8,-1,8,10,13,-1,14,13,10,-1,10,11,14,-1,13,14,11,-1,11,10,13,-1,12,13,10,-1,10,8,12,-1,2,20,22,-1,22,5,2,-1,4,21,20,-1,20,2,4,-1,2,20,21,-1,21,4,2,-1,5,22,20,-1,20,2,5,-1,19,22,5,-1,5,9,19,-1,24,23,31,-1,31,9,24,-1,22,24,9,-1,9,5,22,-1,15,16,7,-1,7,6,15,-1,17,18,7,-1,7,16,17,-1,18,34,40,-1,40,7,18,-1,27,28,25,-1,25,29,30,-1,30,29,25,-1,25,30,25,-1,27,25,25,-1,26,27,25,-1,22,19,26,-1,26,25,22,-1,19,23,27,-1,27,26,19,-1,23,24,28,-1,28,27,23,-1,24,22,25,-1,25,28,24,-1,22,20,29,-1,29,25,22,-1,20,21,30,-1,30,29,20,-1,21,20,29,-1,29,30,21,-1,20,22,25,-1,25,29,20,-1,31,23,19,-1,19,9,31,-1,6,7,40,-1,40,36,6,-1,0,8,39,-1,39,32,0,-1,8,12,37,-1,37,39,8,-1,0,32,9,-1,9,5,0,-1,42,41,43,-1,43,44,45,-1,42,43,45,-1,46,47,48,-1,45,46,48,-1,42,45,48,-1,42,48,49,-1,42,49,41,-1,9,31,42,-1,42,41,9,-1,31,9,41,-1,41,42,31,-1,9,32,43,-1,43,41,9,-1,32,39,44,-1,44,43,32,-1,39,37,45,-1,45,44,39,-1,36,40,46,-1,46,45,36,-1,40,34,47,-1,47,46,40,-1,35,38,48,-1,48,47,35,-1,38,33,49,-1,49,48,38,-1,33,9,41,-1,41,49,33,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #59, 171 total numbers made up of 57 3-tuple values */
	this.Coordinate_12_59_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.7310),doubleToFloat(-1.8780),doubleToFloat(0.0290),doubleToFloat(1.2220),doubleToFloat(-1.8780),doubleToFloat(-1.4950),doubleToFloat(-0.1851),doubleToFloat(-1.8780),doubleToFloat(-1.8250),doubleToFloat(-1.3630),doubleToFloat(-1.8780),doubleToFloat(-1.5010),doubleToFloat(-1.8830),doubleToFloat(-1.8780),doubleToFloat(0.0290),doubleToFloat(-0.9249),doubleToFloat(-0.0082),doubleToFloat(0.7476),doubleToFloat(1.5020),doubleToFloat(-4.0210),doubleToFloat(0.0290),doubleToFloat(-1.6330),doubleToFloat(-4.0210),doubleToFloat(0.0290),doubleToFloat(-1.2660),doubleToFloat(-4.0210),doubleToFloat(-1.5100),doubleToFloat(1.1310),doubleToFloat(-4.0210),doubleToFloat(-1.5040)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9183),doubleToFloat(-1.0020),doubleToFloat(-1.2830),doubleToFloat(-0.1851),doubleToFloat(-0.9421),doubleToFloat(-1.6040),doubleToFloat(-1.2020),doubleToFloat(-0.9993),doubleToFloat(-1.2830),doubleToFloat(-1.7210),doubleToFloat(-1.0250),doubleToFloat(0.0290),doubleToFloat(-1.5200),doubleToFloat(-0.9401),doubleToFloat(1.0790),doubleToFloat(1.2060),doubleToFloat(-0.9401),doubleToFloat(1.0800),doubleToFloat(1.3950),doubleToFloat(-1.0250),doubleToFloat(0.0290),doubleToFloat(-1.3830),doubleToFloat(-3.5570),doubleToFloat(-1.5180),doubleToFloat(1.6520),doubleToFloat(-3.5570),doubleToFloat(0.0290),doubleToFloat(-1.7880),doubleToFloat(-3.5570),doubleToFloat(0.0290)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1851),doubleToFloat(-3.5570),doubleToFloat(-1.9140),doubleToFloat(1.2460),doubleToFloat(-3.5570),doubleToFloat(-1.5160),doubleToFloat(-0.1851),doubleToFloat(-4.0210),doubleToFloat(0.0290),doubleToFloat(-0.1851),doubleToFloat(-4.0210),doubleToFloat(-1.8860),doubleToFloat(0.6003),doubleToFloat(-0.0082),doubleToFloat(-0.7875),doubleToFloat(-0.1851),doubleToFloat(-0.0082),doubleToFloat(-1.1320),doubleToFloat(1.0190),doubleToFloat(-0.0082),doubleToFloat(0.0290),doubleToFloat(-0.8784),doubleToFloat(-0.0082),doubleToFloat(-0.8046),doubleToFloat(-1.2740),doubleToFloat(-0.0082),doubleToFloat(0.0290),doubleToFloat(-0.1851),doubleToFloat(-0.0082),doubleToFloat(1.2030)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6064),doubleToFloat(-0.0082),doubleToFloat(0.7351),doubleToFloat(-0.9328),doubleToFloat(0.8725),doubleToFloat(0.0232),doubleToFloat(-0.6695),doubleToFloat(0.8725),doubleToFloat(0.5380),doubleToFloat(-0.1788),doubleToFloat(0.8725),doubleToFloat(0.8317),doubleToFloat(0.3605),doubleToFloat(0.8725),doubleToFloat(0.5208),doubleToFloat(0.6667),doubleToFloat(0.8725),doubleToFloat(0.0213),doubleToFloat(0.3805),doubleToFloat(0.8725),doubleToFloat(-0.5818),doubleToFloat(-0.1786),doubleToFloat(0.8725),doubleToFloat(-0.8408),doubleToFloat(-0.6570),doubleToFloat(0.8725),doubleToFloat(-0.6004),doubleToFloat(-0.1851),doubleToFloat(-0.5691),doubleToFloat(1.7400)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7960),doubleToFloat(-1.8600),doubleToFloat(0.9221),doubleToFloat(1.5920),doubleToFloat(-1.8600),doubleToFloat(0.9179),doubleToFloat(1.5410),doubleToFloat(-4.0210),doubleToFloat(0.9221),doubleToFloat(-1.6390),doubleToFloat(-4.0210),doubleToFloat(0.9221),doubleToFloat(1.7080),doubleToFloat(-3.5570),doubleToFloat(0.9221),doubleToFloat(-1.8200),doubleToFloat(-3.5570),doubleToFloat(0.9221),doubleToFloat(-0.1851),doubleToFloat(-4.0210),doubleToFloat(0.9221),doubleToFloat(1.0840),doubleToFloat(-1.4690),doubleToFloat(1.6300),doubleToFloat(-0.4507),doubleToFloat(-0.8535),doubleToFloat(1.9080),doubleToFloat(-1.3520),doubleToFloat(-1.4690),doubleToFloat(1.6350)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.5080),doubleToFloat(-1.9860),doubleToFloat(1.5390),doubleToFloat(-1.5270),doubleToFloat(-3.5930),doubleToFloat(1.5550),doubleToFloat(-1.4420),doubleToFloat(-3.8150),doubleToFloat(1.5850),doubleToFloat(-0.1848),doubleToFloat(-3.8150),doubleToFloat(1.5850),doubleToFloat(1.3380),doubleToFloat(-3.8150),doubleToFloat(1.5850),doubleToFloat(1.4130),doubleToFloat(-3.5930),doubleToFloat(1.5540),doubleToFloat(1.2980),doubleToFloat(-1.9860),doubleToFloat(1.5400)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #60, 100 total numbers made up of 50 2-tuple values */
	this.TextureCoordinate_12_60_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4844),doubleToFloat(0.4832),doubleToFloat(0.4605),doubleToFloat(0.4880),doubleToFloat(0.4649),doubleToFloat(0.5082),doubleToFloat(0.4285),doubleToFloat(0.4942),doubleToFloat(0.4404),doubleToFloat(0.5196),doubleToFloat(0.4906),doubleToFloat(0.5048),doubleToFloat(0.4809),doubleToFloat(0.4194),doubleToFloat(0.4963),doubleToFloat(0.3791),doubleToFloat(0.4840),doubleToFloat(0.4651),doubleToFloat(0.5104),doubleToFloat(0.5081)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4579),doubleToFloat(0.4737),doubleToFloat(0.4243),doubleToFloat(0.4748),doubleToFloat(0.4873),doubleToFloat(0.4414),doubleToFloat(0.4531),doubleToFloat(0.4460),doubleToFloat(0.4226),doubleToFloat(0.4501),doubleToFloat(0.4433),doubleToFloat(0.4080),doubleToFloat(0.4589),doubleToFloat(0.3795),doubleToFloat(0.4431),doubleToFloat(0.3512),doubleToFloat(0.4805),doubleToFloat(0.3391),doubleToFloat(0.5040),doubleToFloat(0.5265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4717),doubleToFloat(0.5257),doubleToFloat(0.4602),doubleToFloat(0.5366),doubleToFloat(0.4879),doubleToFloat(0.5212),doubleToFloat(0.5157),doubleToFloat(0.5408),doubleToFloat(0.5040),doubleToFloat(0.5265),doubleToFloat(0.4879),doubleToFloat(0.5212),doubleToFloat(0.5040),doubleToFloat(0.5265),doubleToFloat(0.5157),doubleToFloat(0.5408),doubleToFloat(0.5040),doubleToFloat(0.5265),doubleToFloat(0.4717),doubleToFloat(0.5257)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4602),doubleToFloat(0.5366),doubleToFloat(0.5267),doubleToFloat(0.5341),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.4961),doubleToFloat(0.3404),doubleToFloat(0.5033),doubleToFloat(0.4400),doubleToFloat(0.5001),doubleToFloat(0.4177),doubleToFloat(0.5032),doubleToFloat(0.4400),doubleToFloat(0.5027),doubleToFloat(0.4613),doubleToFloat(0.5027),doubleToFloat(0.4613)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5130),doubleToFloat(0.3789),doubleToFloat(0.5113),doubleToFloat(0.5043),doubleToFloat(0.5237),doubleToFloat(0.5342),doubleToFloat(0.5114),doubleToFloat(0.4838),doubleToFloat(0.5029),doubleToFloat(0.4603),doubleToFloat(0.5115),doubleToFloat(0.4417),doubleToFloat(-1749.0000),doubleToFloat(766.6000),doubleToFloat(0.4979),doubleToFloat(0.3571),doubleToFloat(0.5030),doubleToFloat(0.4581),doubleToFloat(0.5048),doubleToFloat(0.4836)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #68, 408 total numbers */
	this.IndexedFaceSet_12_68_coordIndex = new MFInt32(Java.to([36,0,33,-1,1,35,33,-1,33,0,1,-1,34,35,1,-1,1,2,34,-1,5,39,42,-1,42,4,5,-1,25,31,18,-1,18,19,25,-1,32,25,19,-1,19,20,32,-1,36,41,26,-1,26,0,36,-1,22,21,31,-1,31,25,22,-1,23,22,25,-1,25,32,23,-1,41,39,5,-1,5,26,41,-1,7,6,2,-1,2,1,7,-1,8,7,1,-1,1,0,8,-1,9,10,4,-1,4,3,9,-1,10,11,5,-1,5,4,10,-1,6,27,24,-1,24,2,6,-1,28,8,0,-1,0,26,28,-1,27,9,3,-1,3,24,27,-1,11,28,26,-1,26,5,11,-1,13,12,6,-1,6,7,13,-1,12,29,27,-1,27,6,12,-1,14,13,7,-1,7,8,14,-1,30,14,8,-1,8,28,30,-1,15,16,10,-1,10,9,15,-1,29,15,9,-1,9,27,29,-1,17,30,28,-1,28,11,17,-1,16,17,11,-1,11,10,16,-1,19,18,12,-1,12,13,19,-1,18,31,29,-1,29,12,18,-1,20,19,13,-1,13,14,20,-1,32,20,14,-1,14,30,32,-1,21,22,16,-1,16,15,21,-1,31,21,15,-1,15,29,31,-1,23,32,30,-1,30,17,23,-1,22,23,17,-1,17,16,22,-1,37,2,24,-1,24,40,37,-1,40,24,3,-1,3,38,40,-1,38,3,4,-1,4,42,38,-1,34,2,37,-1,44,45,46,-1,46,47,48,-1,48,49,50,-1,46,48,50,-1,50,51,52,-1,46,50,52,-1,44,46,52,-1,44,52,43,-1,35,34,44,-1,44,43,35,-1,34,37,45,-1,45,44,34,-1,37,40,46,-1,46,45,37,-1,40,38,47,-1,47,46,40,-1,38,42,48,-1,48,47,38,-1,42,39,49,-1,49,48,42,-1,39,41,50,-1,50,49,39,-1,41,36,51,-1,51,50,41,-1,36,33,52,-1,52,51,36,-1,33,35,43,-1,43,52,33,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #68, 408 total numbers */
	this.IndexedFaceSet_12_68_texCoordIndex = new MFInt32(Java.to([32,3,30,-1,4,31,30,-1,30,3,4,-1,30,31,4,-1,4,3,30,-1,1,36,40,-1,40,0,1,-1,7,6,5,-1,5,2,7,-1,6,7,2,-1,2,5,6,-1,32,39,8,-1,8,3,32,-1,13,12,6,-1,6,7,13,-1,12,13,7,-1,7,6,12,-1,39,37,16,-1,16,8,39,-1,23,17,3,-1,3,4,23,-1,17,23,4,-1,4,3,17,-1,10,11,0,-1,0,9,10,-1,11,14,1,-1,1,0,11,-1,17,24,8,-1,8,3,17,-1,24,17,3,-1,3,8,24,-1,24,25,16,-1,16,8,24,-1,25,24,8,-1,8,16,25,-1,27,26,17,-1,17,23,27,-1,26,28,24,-1,24,17,26,-1,26,27,23,-1,23,17,26,-1,28,26,17,-1,17,24,28,-1,15,18,11,-1,11,10,15,-1,28,29,25,-1,25,24,28,-1,29,28,24,-1,24,25,29,-1,18,19,14,-1,14,11,18,-1,2,5,26,-1,26,27,2,-1,5,6,28,-1,28,26,5,-1,5,2,27,-1,27,26,5,-1,6,5,26,-1,26,28,6,-1,20,21,18,-1,18,15,20,-1,6,12,29,-1,29,28,6,-1,12,6,28,-1,28,29,12,-1,21,22,19,-1,19,18,21,-1,33,3,8,-1,8,38,33,-1,38,8,16,-1,16,34,38,-1,35,9,0,-1,0,40,35,-1,30,3,33,-1,42,43,44,-1,44,45,46,-1,46,47,48,-1,44,46,48,-1,48,49,42,-1,44,48,42,-1,42,44,42,-1,42,42,41,-1,31,30,42,-1,42,41,31,-1,30,33,43,-1,43,42,30,-1,33,38,44,-1,44,43,33,-1,38,34,45,-1,45,44,38,-1,35,40,46,-1,46,45,35,-1,40,36,47,-1,47,46,40,-1,37,39,48,-1,48,47,37,-1,39,32,49,-1,49,48,39,-1,32,30,42,-1,42,49,32,-1,30,31,41,-1,41,42,30,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #68, 159 total numbers made up of 53 3-tuple values */
	this.Coordinate_13_68_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.6960),doubleToFloat(-0.8024),doubleToFloat(0.9010),doubleToFloat(-0.1851),doubleToFloat(-0.1712),doubleToFloat(1.3130),doubleToFloat(1.4330),doubleToFloat(-0.8024),doubleToFloat(0.8928),doubleToFloat(1.5850),doubleToFloat(-3.0950),doubleToFloat(0.8819),doubleToFloat(-0.1851),doubleToFloat(-3.0950),doubleToFloat(0.8819),doubleToFloat(-1.6460),doubleToFloat(-3.0950),doubleToFloat(0.8819),doubleToFloat(1.8460),doubleToFloat(-1.2290),doubleToFloat(2.1820),doubleToFloat(-0.2812),doubleToFloat(-0.6275),doubleToFloat(2.4350),doubleToFloat(-1.9680),doubleToFloat(-1.2290),doubleToFloat(2.1840),doubleToFloat(2.0070),doubleToFloat(-3.0950),doubleToFloat(2.1780)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1851),doubleToFloat(-3.0950),doubleToFloat(2.1780),doubleToFloat(-2.1120),doubleToFloat(-3.0950),doubleToFloat(2.1780),doubleToFloat(1.9310),doubleToFloat(-1.6330),doubleToFloat(3.5720),doubleToFloat(-0.2858),doubleToFloat(-1.1420),doubleToFloat(3.8450),doubleToFloat(-2.0590),doubleToFloat(-1.6330),doubleToFloat(3.5620),doubleToFloat(2.1480),doubleToFloat(-3.0950),doubleToFloat(3.6280),doubleToFloat(-0.1851),doubleToFloat(-3.0950),doubleToFloat(3.6280),doubleToFloat(-2.2500),doubleToFloat(-3.0950),doubleToFloat(3.6280),doubleToFloat(1.4860),doubleToFloat(-2.1290),doubleToFloat(4.5100),doubleToFloat(-0.2858),doubleToFloat(-1.5970),doubleToFloat(4.8930)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7970),doubleToFloat(-2.1290),doubleToFloat(4.4460),doubleToFloat(1.7810),doubleToFloat(-3.0950),doubleToFloat(4.6870),doubleToFloat(-0.2858),doubleToFloat(-3.0950),doubleToFloat(5.2560),doubleToFloat(-1.9250),doubleToFloat(-3.0950),doubleToFloat(4.6870),doubleToFloat(1.7720),doubleToFloat(-2.6310),doubleToFloat(0.8819),doubleToFloat(-0.2858),doubleToFloat(-2.6310),doubleToFloat(5.4120),doubleToFloat(-1.8570),doubleToFloat(-2.6310),doubleToFloat(0.8819),doubleToFloat(2.2230),doubleToFloat(-2.6310),doubleToFloat(2.1780),doubleToFloat(-2.2930),doubleToFloat(-2.6310),doubleToFloat(2.1780),doubleToFloat(2.3410),doubleToFloat(-2.6310),doubleToFloat(3.6280)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.3940),doubleToFloat(-2.6310),doubleToFloat(3.6280),doubleToFloat(1.8400),doubleToFloat(-2.6310),doubleToFloat(4.7560),doubleToFloat(-2.0170),doubleToFloat(-2.6310),doubleToFloat(4.7560),doubleToFloat(-1.5200),doubleToFloat(-0.0134),doubleToFloat(0.0048),doubleToFloat(1.2060),doubleToFloat(-0.0134),doubleToFloat(0.0061),doubleToFloat(-0.1851),doubleToFloat(0.3576),doubleToFloat(0.6662),doubleToFloat(-1.7960),doubleToFloat(-0.9332),doubleToFloat(-0.1518),doubleToFloat(1.5920),doubleToFloat(-0.9332),doubleToFloat(-0.1559),doubleToFloat(1.5410),doubleToFloat(-3.0950),doubleToFloat(-0.1518),doubleToFloat(-1.6390),doubleToFloat(-3.0950),doubleToFloat(-0.1518)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7080),doubleToFloat(-2.6310),doubleToFloat(-0.1518),doubleToFloat(-1.8200),doubleToFloat(-2.6310),doubleToFloat(-0.1518),doubleToFloat(-0.1851),doubleToFloat(-3.0950),doubleToFloat(-0.1518),doubleToFloat(-0.1828),doubleToFloat(0.0846),doubleToFloat(-0.6939),doubleToFloat(0.8905),doubleToFloat(-0.1781),doubleToFloat(-1.3410),doubleToFloat(1.1750),doubleToFloat(-0.8458),doubleToFloat(-1.4680),doubleToFloat(1.2810),doubleToFloat(-2.3210),doubleToFloat(-1.4120),doubleToFloat(1.2450),doubleToFloat(-2.4920),doubleToFloat(-1.3940),doubleToFloat(-0.1856),doubleToFloat(-2.4920),doubleToFloat(-1.3940),doubleToFloat(-1.3520),doubleToFloat(-2.4920),doubleToFloat(-1.3940)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.3980),doubleToFloat(-2.3210),doubleToFloat(-1.4120),doubleToFloat(-1.3750),doubleToFloat(-0.8458),doubleToFloat(-1.4680),doubleToFloat(-1.1780),doubleToFloat(-0.1781),doubleToFloat(-1.3410)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #69, 100 total numbers made up of 50 2-tuple values */
	this.TextureCoordinate_13_69_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.5321),doubleToFloat(0.3787),doubleToFloat(0.5221),doubleToFloat(0.4164),doubleToFloat(0.6035),doubleToFloat(0.4885),doubleToFloat(0.5254),doubleToFloat(0.4873),doubleToFloat(0.5371),doubleToFloat(0.5277),doubleToFloat(0.5919),doubleToFloat(0.4640),doubleToFloat(0.5993),doubleToFloat(0.4541),doubleToFloat(0.6239),doubleToFloat(0.4724),doubleToFloat(0.5243),doubleToFloat(0.4572),doubleToFloat(0.5139),doubleToFloat(0.3414)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5510),doubleToFloat(0.3296),doubleToFloat(0.5519),doubleToFloat(0.3782),doubleToFloat(0.5994),doubleToFloat(0.4420),doubleToFloat(0.6295),doubleToFloat(0.4612),doubleToFloat(0.5517),doubleToFloat(0.4278),doubleToFloat(0.5821),doubleToFloat(0.3257),doubleToFloat(0.5218),doubleToFloat(0.4385),doubleToFloat(0.5492),doubleToFloat(0.4738),doubleToFloat(0.5859),doubleToFloat(0.3895),doubleToFloat(0.5861),doubleToFloat(0.4306)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6076),doubleToFloat(0.3317),doubleToFloat(0.6217),doubleToFloat(0.3875),doubleToFloat(0.6088),doubleToFloat(0.4242),doubleToFloat(0.5592),doubleToFloat(0.5124),doubleToFloat(0.5492),doubleToFloat(0.4483),doubleToFloat(0.5474),doubleToFloat(0.4375),doubleToFloat(0.5730),doubleToFloat(0.4671),doubleToFloat(0.5877),doubleToFloat(0.4984),doubleToFloat(0.5733),doubleToFloat(0.4449),doubleToFloat(0.5774),doubleToFloat(0.4369)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5104),doubleToFloat(0.5081),doubleToFloat(0.5267),doubleToFloat(0.5341),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.5033),doubleToFloat(0.4400),doubleToFloat(0.4961),doubleToFloat(0.3404),doubleToFloat(0.5001),doubleToFloat(0.4177),doubleToFloat(0.5032),doubleToFloat(0.4400),doubleToFloat(0.5027),doubleToFloat(0.4613),doubleToFloat(0.5027),doubleToFloat(0.4613)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5130),doubleToFloat(0.3789),doubleToFloat(0.5267),doubleToFloat(0.5341),doubleToFloat(0.5104),doubleToFloat(0.5081),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.5027),doubleToFloat(0.4613),doubleToFloat(0.5033),doubleToFloat(0.4400),doubleToFloat(0.5130),doubleToFloat(0.3789),doubleToFloat(0.5001),doubleToFloat(0.4177),doubleToFloat(0.5027),doubleToFloat(0.4613),doubleToFloat(0.5033),doubleToFloat(0.4843)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #81, 448 total numbers */
	this.IndexedFaceSet_9_81_coordIndex = new MFInt32(Java.to([0,4,3,-1,3,36,0,-1,36,3,5,-1,5,37,36,-1,37,5,24,-1,24,40,37,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,38,2,-1,39,38,8,-1,8,9,39,-1,0,39,9,-1,9,4,0,-1,3,4,23,-1,23,17,3,-1,18,5,3,-1,3,17,18,-1,19,6,24,-1,24,26,19,-1,20,7,6,-1,6,19,20,-1,21,8,7,-1,7,20,21,-1,9,8,21,-1,21,22,9,-1,4,9,22,-1,22,23,4,-1,11,10,28,-1,28,29,11,-1,30,12,11,-1,11,29,30,-1,31,12,30,-1,32,13,25,-1,25,27,32,-1,14,13,32,-1,32,33,14,-1,15,14,33,-1,33,34,15,-1,16,15,34,-1,34,35,16,-1,10,16,35,-1,35,28,10,-1,17,23,10,-1,10,11,17,-1,12,18,17,-1,17,11,12,-1,13,19,26,-1,26,25,13,-1,14,20,19,-1,19,13,14,-1,15,21,20,-1,20,14,15,-1,22,21,15,-1,15,16,22,-1,23,22,16,-1,16,10,23,-1,24,6,1,-1,1,40,24,-1,26,24,5,-1,5,18,26,-1,25,26,18,-1,18,12,25,-1,12,31,27,-1,27,25,12,-1,49,48,47,-1,47,46,45,-1,45,44,43,-1,47,45,43,-1,49,47,43,-1,41,49,43,-1,42,41,43,-1,27,41,42,-1,42,32,27,-1,32,42,43,-1,43,33,32,-1,33,43,44,-1,44,34,33,-1,34,44,45,-1,45,35,34,-1,35,45,46,-1,46,28,35,-1,28,46,47,-1,47,29,28,-1,29,47,48,-1,48,30,29,-1,30,48,49,-1,49,31,30,-1,31,49,41,-1,41,27,31,-1,50,57,56,-1,56,55,54,-1,50,56,54,-1,54,53,52,-1,50,54,52,-1,51,50,52,-1,2,50,51,-1,51,1,2,-1,1,51,52,-1,52,40,1,-1,40,52,53,-1,53,37,40,-1,37,53,54,-1,54,36,37,-1,36,54,55,-1,55,0,36,-1,0,55,56,-1,56,39,0,-1,39,56,57,-1,57,38,39,-1,38,57,50,-1,50,2,38,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #81, 448 total numbers */
	this.IndexedFaceSet_9_81_texCoordIndex = new MFInt32(Java.to([0,3,2,-1,2,1,0,-1,1,2,5,-1,5,4,1,-1,4,5,7,-1,7,6,4,-1,8,11,10,-1,10,9,8,-1,9,10,13,-1,13,12,9,-1,14,12,13,-1,13,15,14,-1,0,14,15,-1,15,3,0,-1,2,3,17,-1,17,16,2,-1,18,5,2,-1,2,16,18,-1,19,42,7,-1,7,20,19,-1,21,10,11,-1,11,43,21,-1,22,13,10,-1,10,21,22,-1,15,13,22,-1,22,23,15,-1,3,15,23,-1,23,17,3,-1,24,27,26,-1,26,25,24,-1,29,28,24,-1,24,25,29,-1,30,28,29,-1,32,31,34,-1,34,33,32,-1,35,44,45,-1,45,36,35,-1,37,35,36,-1,36,38,37,-1,39,37,38,-1,38,40,39,-1,27,39,40,-1,40,26,27,-1,16,17,27,-1,27,24,16,-1,28,18,16,-1,16,24,28,-1,31,19,20,-1,20,34,31,-1,35,21,43,-1,43,44,35,-1,37,22,21,-1,21,35,37,-1,23,22,37,-1,37,39,23,-1,17,23,39,-1,39,27,17,-1,7,42,41,-1,41,6,7,-1,20,7,5,-1,5,18,20,-1,34,20,18,-1,18,28,34,-1,28,30,33,-1,33,34,28,-1,54,53,52,-1,52,51,50,-1,50,49,48,-1,52,50,48,-1,54,52,48,-1,46,54,48,-1,47,46,48,-1,33,46,47,-1,47,32,33,-1,45,47,48,-1,48,36,45,-1,36,48,49,-1,49,38,36,-1,38,49,50,-1,50,40,38,-1,40,50,51,-1,51,26,40,-1,26,51,52,-1,52,25,26,-1,25,52,53,-1,53,29,25,-1,29,53,54,-1,54,30,29,-1,30,54,46,-1,46,33,30,-1,55,62,61,-1,61,60,59,-1,55,61,59,-1,59,58,57,-1,55,59,57,-1,56,55,57,-1,9,55,56,-1,56,8,9,-1,41,56,57,-1,57,6,41,-1,6,57,58,-1,58,4,6,-1,4,58,59,-1,59,1,4,-1,1,59,60,-1,60,0,1,-1,0,60,61,-1,61,14,0,-1,14,61,62,-1,62,12,14,-1,12,62,55,-1,55,9,12,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #81, 174 total numbers made up of 58 3-tuple values */
	this.Coordinate_10_81_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.9450),doubleToFloat(-13.3500),doubleToFloat(0.0759),doubleToFloat(1.5260),doubleToFloat(-13.3500),doubleToFloat(0.0759),doubleToFloat(0.9541),doubleToFloat(-13.3500),doubleToFloat(1.4320),doubleToFloat(-1.3560),doubleToFloat(-12.1300),doubleToFloat(-1.1030),doubleToFloat(-1.9170),doubleToFloat(-12.1300),doubleToFloat(0.0759),doubleToFloat(-0.1805),doubleToFloat(-12.1300),doubleToFloat(-1.7130),doubleToFloat(1.5290),doubleToFloat(-12.1300),doubleToFloat(0.0759),doubleToFloat(0.8882),doubleToFloat(-12.1300),doubleToFloat(1.4870),doubleToFloat(-0.1805),doubleToFloat(-12.1300),doubleToFloat(2.1400),doubleToFloat(-1.2880),doubleToFloat(-12.1300),doubleToFloat(1.4150)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.5400),doubleToFloat(-1.2460),doubleToFloat(0.0759),doubleToFloat(-1.7450),doubleToFloat(-1.3120),doubleToFloat(-1.6660),doubleToFloat(-0.0612),doubleToFloat(-1.7770),doubleToFloat(-2.5170),doubleToFloat(2.4230),doubleToFloat(-2.6230),doubleToFloat(0.0759),doubleToFloat(1.5740),doubleToFloat(-2.3820),doubleToFloat(1.8890),doubleToFloat(-0.0612),doubleToFloat(-1.8800),doubleToFloat(2.6070),doubleToFloat(-1.7830),doubleToFloat(-1.4180),doubleToFloat(1.7220),doubleToFloat(-1.5560),doubleToFloat(-6.5110),doubleToFloat(-1.3790),doubleToFloat(-0.1497),doubleToFloat(-6.6000),doubleToFloat(-2.1660),doubleToFloat(1.9640),doubleToFloat(-7.4480),doubleToFloat(0.0759)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.1620),doubleToFloat(-7.5600),doubleToFloat(1.6580),doubleToFloat(-0.1527),doubleToFloat(-7.4020),doubleToFloat(2.3790),doubleToFloat(-1.5970),doubleToFloat(-6.8740),doubleToFloat(1.5920),doubleToFloat(-2.2900),doubleToFloat(-6.5310),doubleToFloat(0.0759),doubleToFloat(1.1740),doubleToFloat(-12.1300),doubleToFloat(-1.0690),doubleToFloat(1.6760),doubleToFloat(-2.3240),doubleToFloat(-1.5730),doubleToFloat(1.4670),doubleToFloat(-7.0130),doubleToFloat(-1.3460),doubleToFloat(1.7970),doubleToFloat(-0.5841),doubleToFloat(-1.8310),doubleToFloat(-2.6610),doubleToFloat(0.5185),doubleToFloat(0.0759),doubleToFloat(-1.8580),doubleToFloat(0.4532),doubleToFloat(-1.7760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.3524),doubleToFloat(0.0751),doubleToFloat(-2.7330),doubleToFloat(0.6502),doubleToFloat(-0.2113),doubleToFloat(-2.7350),doubleToFloat(2.6610),doubleToFloat(-0.7579),doubleToFloat(0.0759),doubleToFloat(1.7020),doubleToFloat(-0.4783),doubleToFloat(2.0820),doubleToFloat(-0.0595),doubleToFloat(0.0030),doubleToFloat(2.7350),doubleToFloat(-1.8040),doubleToFloat(0.3324),doubleToFloat(1.9020),doubleToFloat(-1.1940),doubleToFloat(-13.3500),doubleToFloat(-1.0380),doubleToFloat(-0.1814),doubleToFloat(-13.3500),doubleToFloat(-1.4950),doubleToFloat(-0.1814),doubleToFloat(-13.3500),doubleToFloat(2.0800),doubleToFloat(-1.4230),doubleToFloat(-13.3500),doubleToFloat(1.4080)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9483),doubleToFloat(-13.3500),doubleToFloat(-1.0420),doubleToFloat(1.4480),doubleToFloat(0.6345),doubleToFloat(-1.4630),doubleToFloat(2.1440),doubleToFloat(0.5036),doubleToFloat(0.0683),doubleToFloat(1.4070),doubleToFloat(0.7284),doubleToFloat(1.6150),doubleToFloat(0.1689),doubleToFloat(1.0790),doubleToFloat(2.0750),doubleToFloat(-1.1060),doubleToFloat(1.2900),doubleToFloat(1.4690),doubleToFloat(-1.7670),doubleToFloat(1.4260),doubleToFloat(0.0645),doubleToFloat(-1.1320),doubleToFloat(1.4020),doubleToFloat(-1.3840),doubleToFloat(0.0413),doubleToFloat(1.1070),doubleToFloat(-2.1300),doubleToFloat(0.6053),doubleToFloat(0.9307),doubleToFloat(-2.1310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.4120),doubleToFloat(-14.2300),doubleToFloat(1.0350),doubleToFloat(0.8065),doubleToFloat(-14.2300),doubleToFloat(0.0993),doubleToFloat(0.4512),doubleToFloat(-14.2300),doubleToFloat(-0.5889),doubleToFloat(-0.1645),doubleToFloat(-14.2300),doubleToFloat(-0.8359),doubleToFloat(-0.7257),doubleToFloat(-14.2300),doubleToFloat(-0.5822),doubleToFloat(-1.2160),doubleToFloat(-14.2300),doubleToFloat(0.1438),doubleToFloat(-0.8770),doubleToFloat(-14.2300),doubleToFloat(1.0080),doubleToFloat(-0.1908),doubleToFloat(-14.2300),doubleToFloat(1.3790)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #82, 126 total numbers made up of 63 2-tuple values */
	this.TextureCoordinate_10_82_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1132),doubleToFloat(0.0567),doubleToFloat(0.1247),doubleToFloat(0.0557),doubleToFloat(0.1306),doubleToFloat(0.0755),doubleToFloat(0.1137),doubleToFloat(0.0746),doubleToFloat(0.1317),doubleToFloat(0.0556),doubleToFloat(0.1437),doubleToFloat(0.0742),doubleToFloat(0.1367),doubleToFloat(0.0492),doubleToFloat(0.1552),doubleToFloat(0.0702),doubleToFloat(0.0841),doubleToFloat(0.0399),doubleToFloat(0.0919),doubleToFloat(0.0515)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0748),doubleToFloat(0.0702),doubleToFloat(0.0573),doubleToFloat(0.0611),doubleToFloat(0.0956),doubleToFloat(0.0555),doubleToFloat(0.0870),doubleToFloat(0.0732),doubleToFloat(0.1016),doubleToFloat(0.0556),doubleToFloat(0.1004),doubleToFloat(0.0740),doubleToFloat(0.1414),doubleToFloat(0.1255),doubleToFloat(0.1150),doubleToFloat(0.1221),doubleToFloat(0.1555),doubleToFloat(0.1246),doubleToFloat(0.1901),doubleToFloat(0.1145)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1710),doubleToFloat(0.1210),doubleToFloat(0.0609),doubleToFloat(0.1143),doubleToFloat(0.0789),doubleToFloat(0.1145),doubleToFloat(0.0975),doubleToFloat(0.1185),doubleToFloat(0.1398),doubleToFloat(0.1968),doubleToFloat(0.1375),doubleToFloat(0.2141),doubleToFloat(0.1164),doubleToFloat(0.2106),doubleToFloat(0.1165),doubleToFloat(0.1936),doubleToFloat(0.1560),doubleToFloat(0.1998),doubleToFloat(0.1437),doubleToFloat(0.2140)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1512),doubleToFloat(0.2120),doubleToFloat(0.1930),doubleToFloat(0.2055),doubleToFloat(0.1741),doubleToFloat(0.2304),doubleToFloat(0.1584),doubleToFloat(0.2157),doubleToFloat(0.1743),doubleToFloat(0.2015),doubleToFloat(0.0622),doubleToFloat(0.1977),doubleToFloat(0.0740),doubleToFloat(0.2180),doubleToFloat(0.0803),doubleToFloat(0.1938),doubleToFloat(0.0889),doubleToFloat(0.2103),doubleToFloat(0.0992),doubleToFloat(0.1927)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1015),doubleToFloat(0.2099),doubleToFloat(0.1410),doubleToFloat(0.0427),doubleToFloat(0.1660),doubleToFloat(0.0633),doubleToFloat(0.0381),doubleToFloat(0.1143),doubleToFloat(0.0424),doubleToFloat(0.2047),doubleToFloat(0.0615),doubleToFloat(0.2317),doubleToFloat(0.1584),doubleToFloat(0.2157),doubleToFloat(0.1741),doubleToFloat(0.2304),doubleToFloat(0.0740),doubleToFloat(0.2180),doubleToFloat(0.0889),doubleToFloat(0.2103)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1015),doubleToFloat(0.2099),doubleToFloat(0.1164),doubleToFloat(0.2106),doubleToFloat(0.1375),doubleToFloat(0.2141),doubleToFloat(0.1437),doubleToFloat(0.2140),doubleToFloat(0.1512),doubleToFloat(0.2120),doubleToFloat(0.0919),doubleToFloat(0.0515),doubleToFloat(0.0841),doubleToFloat(0.0399),doubleToFloat(0.1367),doubleToFloat(0.0492),doubleToFloat(0.1317),doubleToFloat(0.0556),doubleToFloat(0.1247),doubleToFloat(0.0557)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1132),doubleToFloat(0.0567),doubleToFloat(0.1016),doubleToFloat(0.0556),doubleToFloat(0.0956),doubleToFloat(0.0555)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #90, 432 total numbers */
	this.IndexedFaceSet_10_90_coordIndex = new MFInt32(Java.to([19,0,27,-1,27,25,19,-1,20,1,0,-1,0,19,20,-1,21,29,28,-1,28,26,21,-1,22,2,29,-1,29,21,22,-1,30,2,22,-1,22,23,30,-1,31,30,23,-1,23,24,31,-1,27,31,24,-1,24,25,27,-1,32,35,4,-1,4,3,32,-1,36,5,4,-1,4,35,36,-1,10,39,33,-1,33,6,10,-1,7,6,33,-1,33,34,7,-1,8,7,34,-1,34,37,8,-1,9,8,37,-1,37,38,9,-1,32,3,9,-1,9,38,32,-1,5,10,15,-1,15,13,5,-1,39,10,5,-1,5,36,39,-1,4,11,12,-1,12,3,4,-1,5,13,11,-1,11,4,5,-1,14,15,10,-1,10,6,14,-1,16,14,6,-1,6,7,16,-1,17,16,7,-1,7,8,17,-1,18,17,8,-1,8,9,18,-1,3,12,18,-1,18,9,3,-1,20,13,15,-1,15,26,20,-1,11,19,25,-1,25,12,11,-1,13,20,19,-1,19,11,13,-1,14,21,26,-1,26,15,14,-1,22,21,14,-1,14,16,22,-1,23,22,16,-1,16,17,23,-1,24,23,17,-1,17,18,24,-1,25,24,18,-1,18,12,25,-1,1,20,26,-1,26,28,1,-1,40,47,46,-1,46,45,44,-1,40,46,44,-1,44,43,42,-1,40,44,42,-1,41,40,42,-1,33,40,41,-1,41,34,33,-1,34,41,42,-1,42,37,34,-1,37,42,43,-1,43,38,37,-1,38,43,44,-1,44,32,38,-1,32,44,45,-1,45,35,32,-1,35,45,46,-1,46,36,35,-1,36,46,47,-1,47,39,36,-1,39,47,40,-1,40,33,39,-1,48,55,54,-1,54,53,52,-1,52,51,50,-1,54,52,50,-1,48,54,50,-1,49,48,50,-1,0,48,49,-1,49,27,0,-1,27,49,50,-1,50,31,27,-1,31,50,51,-1,51,30,31,-1,30,51,52,-1,52,2,30,-1,2,52,53,-1,53,29,2,-1,29,53,54,-1,54,28,29,-1,28,54,55,-1,55,1,28,-1,1,55,48,-1,48,0,1,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #90, 432 total numbers */
	this.IndexedFaceSet_10_90_texCoordIndex = new MFInt32(Java.to([1,0,3,-1,3,2,1,-1,5,4,0,-1,0,1,5,-1,7,6,9,-1,9,8,7,-1,11,10,6,-1,6,7,11,-1,12,10,11,-1,11,13,12,-1,14,12,13,-1,13,15,14,-1,3,14,15,-1,15,2,3,-1,36,39,16,-1,16,17,36,-1,40,18,16,-1,16,39,40,-1,19,44,37,-1,37,20,19,-1,21,20,37,-1,37,38,21,-1,22,21,38,-1,38,41,22,-1,23,22,41,-1,41,42,23,-1,36,17,23,-1,23,42,36,-1,18,34,25,-1,25,24,18,-1,43,34,18,-1,18,40,43,-1,16,26,27,-1,27,17,16,-1,18,24,26,-1,26,16,18,-1,28,35,19,-1,19,20,28,-1,29,28,20,-1,20,21,29,-1,30,29,21,-1,21,22,30,-1,31,30,22,-1,22,23,31,-1,17,27,31,-1,31,23,17,-1,5,24,25,-1,25,32,5,-1,26,1,2,-1,2,27,26,-1,24,5,1,-1,1,26,24,-1,28,7,8,-1,8,35,28,-1,11,7,28,-1,28,29,11,-1,13,11,29,-1,29,30,13,-1,15,13,30,-1,30,31,15,-1,2,15,31,-1,31,27,2,-1,4,5,32,-1,32,33,4,-1,45,52,51,-1,51,50,49,-1,45,51,49,-1,49,48,47,-1,45,49,47,-1,46,45,47,-1,37,45,46,-1,46,38,37,-1,38,46,47,-1,47,41,38,-1,41,47,48,-1,48,42,41,-1,42,48,49,-1,49,36,42,-1,36,49,50,-1,50,39,36,-1,39,50,51,-1,51,40,39,-1,40,51,52,-1,52,43,40,-1,44,52,45,-1,45,37,44,-1,53,60,59,-1,59,58,57,-1,57,56,55,-1,59,57,55,-1,53,59,55,-1,54,53,55,-1,0,53,54,-1,54,3,0,-1,3,54,55,-1,55,14,3,-1,14,55,56,-1,56,12,14,-1,12,56,57,-1,57,10,12,-1,10,57,58,-1,58,6,10,-1,6,58,59,-1,59,9,6,-1,33,59,60,-1,60,4,33,-1,4,60,53,-1,53,0,4,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #90, 168 total numbers made up of 56 3-tuple values */
	this.Coordinate_11_90_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7643),doubleToFloat(-12.9100),doubleToFloat(-0.8153),doubleToFloat(0.0210),doubleToFloat(-12.9100),doubleToFloat(-1.1600),doubleToFloat(0.6844),doubleToFloat(-12.9100),doubleToFloat(0.7722),doubleToFloat(-1.5830),doubleToFloat(-1.3210),doubleToFloat(-0.0046),doubleToFloat(-1.0890),doubleToFloat(-1.3210),doubleToFloat(-1.1590),doubleToFloat(0.0285),doubleToFloat(-1.3210),doubleToFloat(-1.7030),doubleToFloat(1.6010),doubleToFloat(-1.3210),doubleToFloat(-0.0046),doubleToFloat(0.9965),doubleToFloat(-1.3210),doubleToFloat(1.2130),doubleToFloat(0.0285),doubleToFloat(-1.3210),doubleToFloat(1.7080),doubleToFloat(-1.0450),doubleToFloat(-1.3210),doubleToFloat(1.1770)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.1610),doubleToFloat(-1.3210),doubleToFloat(-1.2130),doubleToFloat(-1.2300),doubleToFloat(-4.8280),doubleToFloat(-1.3960),doubleToFloat(-1.6890),doubleToFloat(-5.3580),doubleToFloat(-0.0046),doubleToFloat(0.0285),doubleToFloat(-4.5370),doubleToFloat(-1.9990),doubleToFloat(1.5880),doubleToFloat(-6.6760),doubleToFloat(-0.0046),doubleToFloat(1.0770),doubleToFloat(-5.2020),doubleToFloat(-1.4050),doubleToFloat(0.9050),doubleToFloat(-6.3670),doubleToFloat(1.0510),doubleToFloat(0.0285),doubleToFloat(-6.1190),doubleToFloat(1.5430),doubleToFloat(-1.0220),doubleToFloat(-5.7860),doubleToFloat(1.0170),doubleToFloat(-0.9394),doubleToFloat(-9.7000),doubleToFloat(-1.0620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0285),doubleToFloat(-9.6910),doubleToFloat(-1.5020),doubleToFloat(1.4040),doubleToFloat(-9.7390),doubleToFloat(-0.0046),doubleToFloat(0.7836),doubleToFloat(-9.7580),doubleToFloat(0.9433),doubleToFloat(0.0285),doubleToFloat(-9.7310),doubleToFloat(1.3490),doubleToFloat(-0.9094),doubleToFloat(-9.7320),doubleToFloat(0.8807),doubleToFloat(-1.4010),doubleToFloat(-9.6990),doubleToFloat(-0.0046),doubleToFloat(0.8516),doubleToFloat(-9.7590),doubleToFloat(-1.1070),doubleToFloat(-1.1830),doubleToFloat(-12.9100),doubleToFloat(0.0030),doubleToFloat(0.7143),doubleToFloat(-12.9100),doubleToFloat(-0.8324),doubleToFloat(1.1100),doubleToFloat(-12.9100),doubleToFloat(-0.0000)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0210),doubleToFloat(-12.9100),doubleToFloat(1.1750),doubleToFloat(-0.7705),doubleToFloat(-12.9100),doubleToFloat(0.7073),doubleToFloat(-1.7360),doubleToFloat(-0.0938),doubleToFloat(-0.0046),doubleToFloat(1.7360),doubleToFloat(-0.0938),doubleToFloat(-0.0046),doubleToFloat(1.1640),doubleToFloat(-0.0938),doubleToFloat(1.3510),doubleToFloat(-0.9841),doubleToFloat(-0.0938),doubleToFloat(-1.1180),doubleToFloat(0.0285),doubleToFloat(-0.0938),doubleToFloat(-1.5760),doubleToFloat(0.0285),doubleToFloat(-0.0938),doubleToFloat(1.9990),doubleToFloat(-1.2130),doubleToFloat(-0.0938),doubleToFloat(1.3280),doubleToFloat(1.1580),doubleToFloat(-0.0938),doubleToFloat(-1.1230)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.3250),doubleToFloat(1.0040),doubleToFloat(0.0087),doubleToFloat(0.8543),doubleToFloat(1.0040),doubleToFloat(1.1240),doubleToFloat(0.0232),doubleToFloat(1.0040),doubleToFloat(1.5990),doubleToFloat(-0.9012),doubleToFloat(1.0040),doubleToFloat(1.0990),doubleToFloat(-1.3180),doubleToFloat(1.0040),doubleToFloat(0.0342),doubleToFloat(-0.7165),doubleToFloat(1.0040),doubleToFloat(-0.8579),doubleToFloat(0.0382),doubleToFloat(1.0040),doubleToFloat(-1.1990),doubleToFloat(0.8742),doubleToFloat(1.0040),doubleToFloat(-0.8636),doubleToFloat(-0.4764),doubleToFloat(-13.5400),doubleToFloat(-0.5628),doubleToFloat(-0.7605),doubleToFloat(-13.5400),doubleToFloat(-0.0071)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4806),doubleToFloat(-13.5400),doubleToFloat(0.4710),doubleToFloat(0.0181),doubleToFloat(-13.5400),doubleToFloat(0.7658),doubleToFloat(0.3892),doubleToFloat(-13.5400),doubleToFloat(0.5404),doubleToFloat(0.6930),doubleToFloat(-13.5400),doubleToFloat(-0.0106),doubleToFloat(0.4187),doubleToFloat(-13.5400),doubleToFloat(-0.5874),doubleToFloat(0.0147),doubleToFloat(-13.5400),doubleToFloat(-0.7785)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #91, 122 total numbers made up of 61 2-tuple values */
	this.TextureCoordinate_11_91_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1533),doubleToFloat(0.0451),doubleToFloat(0.1623),doubleToFloat(0.0594),doubleToFloat(0.1505),doubleToFloat(0.0627),doubleToFloat(0.1460),doubleToFloat(0.0491),doubleToFloat(0.1609),doubleToFloat(0.0391),doubleToFloat(0.1742),doubleToFloat(0.0547),doubleToFloat(0.1152),doubleToFloat(0.0443),doubleToFloat(0.1036),doubleToFloat(0.0603),doubleToFloat(0.0917),doubleToFloat(0.0539),doubleToFloat(0.1094),doubleToFloat(0.0349)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1241),doubleToFloat(0.0505),doubleToFloat(0.1179),doubleToFloat(0.0642),doubleToFloat(0.1279),doubleToFloat(0.0519),doubleToFloat(0.1267),doubleToFloat(0.0650),doubleToFloat(0.1370),doubleToFloat(0.0496),doubleToFloat(0.1389),doubleToFloat(0.0636),doubleToFloat(0.1771),doubleToFloat(0.1833),doubleToFloat(0.1621),doubleToFloat(0.1818),doubleToFloat(0.1898),doubleToFloat(0.1853),doubleToFloat(0.0921),doubleToFloat(0.1990)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1065),doubleToFloat(0.1923),doubleToFloat(0.1237),doubleToFloat(0.1855),doubleToFloat(0.1357),doubleToFloat(0.1824),doubleToFloat(0.1477),doubleToFloat(0.1821),doubleToFloat(0.1890),doubleToFloat(0.1086),doubleToFloat(0.2023),doubleToFloat(0.1026),doubleToFloat(0.1737),doubleToFloat(0.1142),doubleToFloat(0.1567),doubleToFloat(0.1184),doubleToFloat(0.0934),doubleToFloat(0.1104),doubleToFloat(0.1120),doubleToFloat(0.1113)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1261),doubleToFloat(0.1143),doubleToFloat(0.1413),doubleToFloat(0.1164),doubleToFloat(0.1810),doubleToFloat(0.0492),doubleToFloat(0.1618),doubleToFloat(0.0341),doubleToFloat(0.2033),doubleToFloat(0.1901),doubleToFloat(0.0780),doubleToFloat(0.1116),doubleToFloat(0.1577),doubleToFloat(0.1998),doubleToFloat(0.1212),doubleToFloat(0.2120),doubleToFloat(0.1332),doubleToFloat(0.2037),doubleToFloat(0.1701),doubleToFloat(0.2038)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1782),doubleToFloat(0.2053),doubleToFloat(0.1390),doubleToFloat(0.1984),doubleToFloat(0.1454),doubleToFloat(0.1990),doubleToFloat(0.1839),doubleToFloat(0.2167),doubleToFloat(0.1171),doubleToFloat(0.2197),doubleToFloat(0.1212),doubleToFloat(0.2120),doubleToFloat(0.1332),doubleToFloat(0.2037),doubleToFloat(0.1390),doubleToFloat(0.1984),doubleToFloat(0.1454),doubleToFloat(0.1990),doubleToFloat(0.1577),doubleToFloat(0.1998)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1701),doubleToFloat(0.2038),doubleToFloat(0.1782),doubleToFloat(0.2053),doubleToFloat(0.1839),doubleToFloat(0.2167),doubleToFloat(0.1533),doubleToFloat(0.0451),doubleToFloat(0.1460),doubleToFloat(0.0491),doubleToFloat(0.1370),doubleToFloat(0.0496),doubleToFloat(0.1279),doubleToFloat(0.0519),doubleToFloat(0.1241),doubleToFloat(0.0505),doubleToFloat(0.1152),doubleToFloat(0.0443),doubleToFloat(0.1094),doubleToFloat(0.0349)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1609),doubleToFloat(0.0391)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #99, 440 total numbers */
	this.IndexedFaceSet_11_99_coordIndex = new MFInt32(Java.to([0,16,10,-1,10,1,0,-1,2,1,10,-1,10,11,2,-1,3,2,11,-1,11,12,3,-1,4,3,12,-1,12,13,4,-1,41,15,16,-1,16,0,41,-1,0,18,44,-1,44,41,0,-1,17,3,4,-1,4,19,17,-1,20,2,3,-1,3,17,20,-1,21,1,2,-1,2,20,21,-1,18,0,1,-1,1,21,18,-1,18,6,42,-1,42,44,18,-1,8,17,19,-1,19,7,8,-1,23,20,17,-1,17,8,23,-1,9,21,20,-1,20,23,9,-1,6,18,21,-1,21,9,6,-1,10,16,26,-1,26,24,10,-1,11,10,24,-1,24,25,11,-1,12,11,25,-1,25,27,12,-1,13,12,27,-1,27,28,13,-1,5,14,13,-1,13,28,5,-1,30,15,39,-1,39,29,30,-1,26,16,15,-1,15,30,26,-1,8,7,22,-1,22,23,8,-1,9,23,22,-1,22,6,9,-1,6,22,46,-1,46,42,6,-1,31,38,37,-1,37,36,35,-1,31,37,35,-1,35,34,33,-1,31,35,33,-1,32,31,33,-1,28,31,32,-1,32,5,28,-1,5,32,33,-1,33,29,5,-1,29,33,34,-1,34,30,29,-1,30,34,35,-1,35,26,30,-1,26,35,36,-1,36,24,26,-1,24,36,37,-1,37,25,24,-1,25,37,38,-1,38,27,25,-1,27,38,31,-1,31,28,27,-1,39,14,5,-1,5,29,39,-1,7,43,46,-1,46,22,7,-1,4,40,45,-1,45,19,4,-1,19,45,43,-1,43,7,19,-1,4,13,14,-1,14,40,4,-1,48,47,56,-1,48,56,55,-1,55,54,53,-1,55,53,52,-1,48,55,52,-1,52,51,50,-1,48,52,50,-1,48,50,49,-1,15,47,48,-1,48,39,15,-1,39,48,49,-1,49,14,39,-1,14,49,50,-1,50,40,14,-1,40,50,51,-1,51,45,40,-1,45,51,52,-1,52,43,45,-1,43,52,53,-1,53,46,43,-1,46,53,54,-1,54,42,46,-1,42,54,55,-1,55,44,42,-1,44,55,56,-1,56,41,44,-1,41,56,47,-1,47,15,41,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #99, 440 total numbers */
	this.IndexedFaceSet_11_99_texCoordIndex = new MFInt32(Java.to([0,5,2,-1,2,1,0,-1,3,1,2,-1,2,4,3,-1,1,3,4,-1,4,2,1,-1,0,1,2,-1,2,5,0,-1,33,9,5,-1,5,0,33,-1,0,8,38,-1,38,33,0,-1,10,1,0,-1,0,8,10,-1,11,3,1,-1,1,10,11,-1,10,1,3,-1,3,11,10,-1,8,0,1,-1,1,10,8,-1,8,12,35,-1,35,38,8,-1,13,10,8,-1,8,12,13,-1,14,11,10,-1,10,13,14,-1,13,10,11,-1,11,14,13,-1,12,8,10,-1,10,13,12,-1,2,5,22,-1,22,20,2,-1,4,2,20,-1,20,21,4,-1,2,4,21,-1,21,20,2,-1,5,2,20,-1,20,22,5,-1,19,9,5,-1,5,22,19,-1,24,9,31,-1,31,23,24,-1,22,5,9,-1,9,24,22,-1,15,6,7,-1,7,16,15,-1,17,16,7,-1,7,18,17,-1,18,7,40,-1,40,34,18,-1,25,29,30,-1,30,29,25,-1,25,30,25,-1,25,28,27,-1,25,25,27,-1,26,25,27,-1,22,25,26,-1,26,19,22,-1,19,26,27,-1,27,23,19,-1,23,27,28,-1,28,24,23,-1,24,28,25,-1,25,22,24,-1,22,25,29,-1,29,20,22,-1,20,29,30,-1,30,21,20,-1,21,30,29,-1,29,20,21,-1,20,29,25,-1,25,22,20,-1,31,9,19,-1,19,23,31,-1,6,36,40,-1,40,7,6,-1,0,32,39,-1,39,8,0,-1,8,39,37,-1,37,12,8,-1,0,5,9,-1,9,32,0,-1,42,41,49,-1,42,49,48,-1,48,47,46,-1,48,46,45,-1,42,48,45,-1,45,44,43,-1,42,45,43,-1,42,43,41,-1,9,41,42,-1,42,31,9,-1,31,42,41,-1,41,9,31,-1,9,41,43,-1,43,32,9,-1,32,43,44,-1,44,39,32,-1,39,44,45,-1,45,37,39,-1,36,45,46,-1,46,40,36,-1,40,46,47,-1,47,34,40,-1,35,47,48,-1,48,38,35,-1,38,48,49,-1,49,33,38,-1,33,49,41,-1,41,9,33,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #99, 171 total numbers made up of 57 3-tuple values */
	this.Coordinate_12_99_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7310),doubleToFloat(-1.8780),doubleToFloat(0.0290),doubleToFloat(-1.2220),doubleToFloat(-1.8780),doubleToFloat(-1.4950),doubleToFloat(0.1851),doubleToFloat(-1.8780),doubleToFloat(-1.8250),doubleToFloat(1.3630),doubleToFloat(-1.8780),doubleToFloat(-1.5010),doubleToFloat(1.8830),doubleToFloat(-1.8780),doubleToFloat(0.0290),doubleToFloat(0.9249),doubleToFloat(-0.0082),doubleToFloat(0.7476),doubleToFloat(-1.5020),doubleToFloat(-4.0210),doubleToFloat(0.0290),doubleToFloat(1.6330),doubleToFloat(-4.0210),doubleToFloat(0.0290),doubleToFloat(1.2660),doubleToFloat(-4.0210),doubleToFloat(-1.5100),doubleToFloat(-1.1310),doubleToFloat(-4.0210),doubleToFloat(-1.5040)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9183),doubleToFloat(-1.0020),doubleToFloat(-1.2830),doubleToFloat(0.1851),doubleToFloat(-0.9421),doubleToFloat(-1.6040),doubleToFloat(1.2020),doubleToFloat(-0.9993),doubleToFloat(-1.2830),doubleToFloat(1.7210),doubleToFloat(-1.0250),doubleToFloat(0.0290),doubleToFloat(1.5200),doubleToFloat(-0.9401),doubleToFloat(1.0790),doubleToFloat(-1.2060),doubleToFloat(-0.9401),doubleToFloat(1.0800),doubleToFloat(-1.3950),doubleToFloat(-1.0250),doubleToFloat(0.0290),doubleToFloat(1.3830),doubleToFloat(-3.5570),doubleToFloat(-1.5180),doubleToFloat(-1.6520),doubleToFloat(-3.5570),doubleToFloat(0.0290),doubleToFloat(1.7880),doubleToFloat(-3.5570),doubleToFloat(0.0290)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.1851),doubleToFloat(-3.5570),doubleToFloat(-1.9140),doubleToFloat(-1.2460),doubleToFloat(-3.5570),doubleToFloat(-1.5160),doubleToFloat(0.1851),doubleToFloat(-4.0210),doubleToFloat(0.0290),doubleToFloat(0.1851),doubleToFloat(-4.0210),doubleToFloat(-1.8860),doubleToFloat(-0.6003),doubleToFloat(-0.0082),doubleToFloat(-0.7875),doubleToFloat(0.1851),doubleToFloat(-0.0082),doubleToFloat(-1.1320),doubleToFloat(-1.0190),doubleToFloat(-0.0082),doubleToFloat(0.0290),doubleToFloat(0.8784),doubleToFloat(-0.0082),doubleToFloat(-0.8046),doubleToFloat(1.2740),doubleToFloat(-0.0082),doubleToFloat(0.0290),doubleToFloat(0.1851),doubleToFloat(-0.0082),doubleToFloat(1.2030)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6064),doubleToFloat(-0.0082),doubleToFloat(0.7351),doubleToFloat(0.9328),doubleToFloat(0.8725),doubleToFloat(0.0232),doubleToFloat(0.6695),doubleToFloat(0.8725),doubleToFloat(0.5380),doubleToFloat(0.1788),doubleToFloat(0.8725),doubleToFloat(0.8317),doubleToFloat(-0.3605),doubleToFloat(0.8725),doubleToFloat(0.5208),doubleToFloat(-0.6667),doubleToFloat(0.8725),doubleToFloat(0.0213),doubleToFloat(-0.3805),doubleToFloat(0.8725),doubleToFloat(-0.5818),doubleToFloat(0.1786),doubleToFloat(0.8725),doubleToFloat(-0.8408),doubleToFloat(0.6570),doubleToFloat(0.8725),doubleToFloat(-0.6004),doubleToFloat(0.1851),doubleToFloat(-0.5691),doubleToFloat(1.7400)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7960),doubleToFloat(-1.8600),doubleToFloat(0.9221),doubleToFloat(-1.5920),doubleToFloat(-1.8600),doubleToFloat(0.9179),doubleToFloat(-1.5410),doubleToFloat(-4.0210),doubleToFloat(0.9221),doubleToFloat(1.6390),doubleToFloat(-4.0210),doubleToFloat(0.9221),doubleToFloat(-1.7080),doubleToFloat(-3.5570),doubleToFloat(0.9221),doubleToFloat(1.8200),doubleToFloat(-3.5570),doubleToFloat(0.9221),doubleToFloat(0.1851),doubleToFloat(-4.0210),doubleToFloat(0.9221),doubleToFloat(-1.0840),doubleToFloat(-1.4690),doubleToFloat(1.6300),doubleToFloat(0.4507),doubleToFloat(-0.8535),doubleToFloat(1.9080),doubleToFloat(1.3520),doubleToFloat(-1.4690),doubleToFloat(1.6350)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5080),doubleToFloat(-1.9860),doubleToFloat(1.5390),doubleToFloat(1.5270),doubleToFloat(-3.5930),doubleToFloat(1.5550),doubleToFloat(1.4420),doubleToFloat(-3.8150),doubleToFloat(1.5850),doubleToFloat(0.1848),doubleToFloat(-3.8150),doubleToFloat(1.5850),doubleToFloat(-1.3380),doubleToFloat(-3.8150),doubleToFloat(1.5850),doubleToFloat(-1.4130),doubleToFloat(-3.5930),doubleToFloat(1.5540),doubleToFloat(-1.2980),doubleToFloat(-1.9860),doubleToFloat(1.5400)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #100, 100 total numbers made up of 50 2-tuple values */
	this.TextureCoordinate_12_100_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4844),doubleToFloat(0.4832),doubleToFloat(0.4605),doubleToFloat(0.4880),doubleToFloat(0.4649),doubleToFloat(0.5082),doubleToFloat(0.4285),doubleToFloat(0.4942),doubleToFloat(0.4404),doubleToFloat(0.5196),doubleToFloat(0.4906),doubleToFloat(0.5048),doubleToFloat(0.4809),doubleToFloat(0.4194),doubleToFloat(0.4963),doubleToFloat(0.3791),doubleToFloat(0.4840),doubleToFloat(0.4651),doubleToFloat(0.5104),doubleToFloat(0.5081)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4579),doubleToFloat(0.4737),doubleToFloat(0.4243),doubleToFloat(0.4748),doubleToFloat(0.4873),doubleToFloat(0.4414),doubleToFloat(0.4531),doubleToFloat(0.4460),doubleToFloat(0.4226),doubleToFloat(0.4501),doubleToFloat(0.4433),doubleToFloat(0.4080),doubleToFloat(0.4589),doubleToFloat(0.3795),doubleToFloat(0.4431),doubleToFloat(0.3512),doubleToFloat(0.4805),doubleToFloat(0.3391),doubleToFloat(0.5040),doubleToFloat(0.5265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4717),doubleToFloat(0.5257),doubleToFloat(0.4602),doubleToFloat(0.5366),doubleToFloat(0.4879),doubleToFloat(0.5212),doubleToFloat(0.5157),doubleToFloat(0.5408),doubleToFloat(0.5040),doubleToFloat(0.5265),doubleToFloat(0.4879),doubleToFloat(0.5212),doubleToFloat(0.5040),doubleToFloat(0.5265),doubleToFloat(0.5157),doubleToFloat(0.5408),doubleToFloat(0.5040),doubleToFloat(0.5265),doubleToFloat(0.4717),doubleToFloat(0.5257)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4602),doubleToFloat(0.5366),doubleToFloat(0.5267),doubleToFloat(0.5341),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.4961),doubleToFloat(0.3404),doubleToFloat(0.5033),doubleToFloat(0.4400),doubleToFloat(0.5001),doubleToFloat(0.4177),doubleToFloat(0.5032),doubleToFloat(0.4400),doubleToFloat(0.5027),doubleToFloat(0.4613),doubleToFloat(0.5027),doubleToFloat(0.4613)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5130),doubleToFloat(0.3789),doubleToFloat(0.5113),doubleToFloat(0.5043),doubleToFloat(0.5237),doubleToFloat(0.5342),doubleToFloat(0.5114),doubleToFloat(0.4838),doubleToFloat(0.5029),doubleToFloat(0.4603),doubleToFloat(0.5115),doubleToFloat(0.4417),doubleToFloat(-1749.0000),doubleToFloat(766.6000),doubleToFloat(0.4979),doubleToFloat(0.3571),doubleToFloat(0.5030),doubleToFloat(0.4581),doubleToFloat(0.5048),doubleToFloat(0.4836)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #108, 408 total numbers */
	this.IndexedFaceSet_12_108_coordIndex = new MFInt32(Java.to([36,33,0,-1,1,0,33,-1,33,35,1,-1,34,2,1,-1,1,35,34,-1,5,4,42,-1,42,39,5,-1,25,19,18,-1,18,31,25,-1,32,20,19,-1,19,25,32,-1,36,0,26,-1,26,41,36,-1,22,25,31,-1,31,21,22,-1,23,32,25,-1,25,22,23,-1,41,26,5,-1,5,39,41,-1,7,1,2,-1,2,6,7,-1,8,0,1,-1,1,7,8,-1,9,3,4,-1,4,10,9,-1,10,4,5,-1,5,11,10,-1,6,2,24,-1,24,27,6,-1,28,26,0,-1,0,8,28,-1,27,24,3,-1,3,9,27,-1,11,5,26,-1,26,28,11,-1,13,7,6,-1,6,12,13,-1,12,6,27,-1,27,29,12,-1,14,8,7,-1,7,13,14,-1,30,28,8,-1,8,14,30,-1,15,9,10,-1,10,16,15,-1,29,27,9,-1,9,15,29,-1,17,11,28,-1,28,30,17,-1,16,10,11,-1,11,17,16,-1,19,13,12,-1,12,18,19,-1,18,12,29,-1,29,31,18,-1,20,14,13,-1,13,19,20,-1,32,30,14,-1,14,20,32,-1,21,15,16,-1,16,22,21,-1,31,29,15,-1,15,21,31,-1,23,17,30,-1,30,32,23,-1,22,16,17,-1,17,23,22,-1,37,40,24,-1,24,2,37,-1,40,38,3,-1,3,24,40,-1,38,42,4,-1,4,3,38,-1,34,37,2,-1,44,43,52,-1,52,51,50,-1,50,49,48,-1,48,47,46,-1,50,48,46,-1,52,50,46,-1,44,52,46,-1,44,46,45,-1,35,43,44,-1,44,34,35,-1,34,44,45,-1,45,37,34,-1,37,45,46,-1,46,40,37,-1,40,46,47,-1,47,38,40,-1,38,47,48,-1,48,42,38,-1,42,48,49,-1,49,39,42,-1,39,49,50,-1,50,41,39,-1,41,50,51,-1,51,36,41,-1,36,51,52,-1,52,33,36,-1,33,52,43,-1,43,35,33,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #108, 408 total numbers */
	this.IndexedFaceSet_12_108_texCoordIndex = new MFInt32(Java.to([32,30,3,-1,4,3,30,-1,30,31,4,-1,30,3,4,-1,4,31,30,-1,1,0,40,-1,40,36,1,-1,7,2,5,-1,5,6,7,-1,6,5,2,-1,2,7,6,-1,32,3,8,-1,8,39,32,-1,13,7,6,-1,6,12,13,-1,12,6,7,-1,7,13,12,-1,39,8,16,-1,16,37,39,-1,23,4,3,-1,3,17,23,-1,17,3,4,-1,4,23,17,-1,10,9,0,-1,0,11,10,-1,11,0,1,-1,1,14,11,-1,17,3,8,-1,8,24,17,-1,24,8,3,-1,3,17,24,-1,24,8,16,-1,16,25,24,-1,25,16,8,-1,8,24,25,-1,27,23,17,-1,17,26,27,-1,26,17,24,-1,24,28,26,-1,26,17,23,-1,23,27,26,-1,28,24,17,-1,17,26,28,-1,15,10,11,-1,11,18,15,-1,28,24,25,-1,25,29,28,-1,29,25,24,-1,24,28,29,-1,18,11,14,-1,14,19,18,-1,2,27,26,-1,26,5,2,-1,5,26,28,-1,28,6,5,-1,5,26,27,-1,27,2,5,-1,6,28,26,-1,26,5,6,-1,20,15,18,-1,18,21,20,-1,6,28,29,-1,29,12,6,-1,12,29,28,-1,28,6,12,-1,21,18,19,-1,19,22,21,-1,33,38,8,-1,8,3,33,-1,38,34,16,-1,16,8,38,-1,35,40,0,-1,0,9,35,-1,30,33,3,-1,42,41,42,-1,42,49,48,-1,48,47,46,-1,46,45,44,-1,48,46,44,-1,42,48,44,-1,42,42,44,-1,42,44,43,-1,31,41,42,-1,42,30,31,-1,30,42,43,-1,43,33,30,-1,33,43,44,-1,44,38,33,-1,38,44,45,-1,45,34,38,-1,35,45,46,-1,46,40,35,-1,40,46,47,-1,47,36,40,-1,37,47,48,-1,48,39,37,-1,39,48,49,-1,49,32,39,-1,32,49,42,-1,42,30,32,-1,30,42,41,-1,41,31,30,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #108, 159 total numbers made up of 53 3-tuple values */
	this.Coordinate_13_108_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.6960),doubleToFloat(-0.8024),doubleToFloat(0.9010),doubleToFloat(0.1851),doubleToFloat(-0.1712),doubleToFloat(1.3130),doubleToFloat(-1.4330),doubleToFloat(-0.8024),doubleToFloat(0.8928),doubleToFloat(-1.5850),doubleToFloat(-3.0950),doubleToFloat(0.8819),doubleToFloat(0.1851),doubleToFloat(-3.0950),doubleToFloat(0.8819),doubleToFloat(1.6460),doubleToFloat(-3.0950),doubleToFloat(0.8819),doubleToFloat(-1.8460),doubleToFloat(-1.2290),doubleToFloat(2.1820),doubleToFloat(0.2812),doubleToFloat(-0.6275),doubleToFloat(2.4350),doubleToFloat(1.9680),doubleToFloat(-1.2290),doubleToFloat(2.1840),doubleToFloat(-2.0070),doubleToFloat(-3.0950),doubleToFloat(2.1780)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.1851),doubleToFloat(-3.0950),doubleToFloat(2.1780),doubleToFloat(2.1120),doubleToFloat(-3.0950),doubleToFloat(2.1780),doubleToFloat(-1.9310),doubleToFloat(-1.6330),doubleToFloat(3.5720),doubleToFloat(0.2858),doubleToFloat(-1.1420),doubleToFloat(3.8450),doubleToFloat(2.0590),doubleToFloat(-1.6330),doubleToFloat(3.5620),doubleToFloat(-2.1480),doubleToFloat(-3.0950),doubleToFloat(3.6280),doubleToFloat(0.1851),doubleToFloat(-3.0950),doubleToFloat(3.6280),doubleToFloat(2.2500),doubleToFloat(-3.0950),doubleToFloat(3.6280),doubleToFloat(-1.4860),doubleToFloat(-2.1290),doubleToFloat(4.5100),doubleToFloat(0.2858),doubleToFloat(-1.5970),doubleToFloat(4.8930)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7970),doubleToFloat(-2.1290),doubleToFloat(4.4460),doubleToFloat(-1.7810),doubleToFloat(-3.0950),doubleToFloat(4.6870),doubleToFloat(0.2858),doubleToFloat(-3.0950),doubleToFloat(5.2560),doubleToFloat(1.9250),doubleToFloat(-3.0950),doubleToFloat(4.6870),doubleToFloat(-1.7720),doubleToFloat(-2.6310),doubleToFloat(0.8819),doubleToFloat(0.2858),doubleToFloat(-2.6310),doubleToFloat(5.4120),doubleToFloat(1.8570),doubleToFloat(-2.6310),doubleToFloat(0.8819),doubleToFloat(-2.2230),doubleToFloat(-2.6310),doubleToFloat(2.1780),doubleToFloat(2.2930),doubleToFloat(-2.6310),doubleToFloat(2.1780),doubleToFloat(-2.3410),doubleToFloat(-2.6310),doubleToFloat(3.6280)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.3940),doubleToFloat(-2.6310),doubleToFloat(3.6280),doubleToFloat(-1.8400),doubleToFloat(-2.6310),doubleToFloat(4.7560),doubleToFloat(2.0170),doubleToFloat(-2.6310),doubleToFloat(4.7560),doubleToFloat(1.5200),doubleToFloat(-0.0134),doubleToFloat(0.0048),doubleToFloat(-1.2060),doubleToFloat(-0.0134),doubleToFloat(0.0061),doubleToFloat(0.1851),doubleToFloat(0.3576),doubleToFloat(0.6662),doubleToFloat(1.7960),doubleToFloat(-0.9332),doubleToFloat(-0.1518),doubleToFloat(-1.5920),doubleToFloat(-0.9332),doubleToFloat(-0.1559),doubleToFloat(-1.5410),doubleToFloat(-3.0950),doubleToFloat(-0.1518),doubleToFloat(1.6390),doubleToFloat(-3.0950),doubleToFloat(-0.1518)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7080),doubleToFloat(-2.6310),doubleToFloat(-0.1518),doubleToFloat(1.8200),doubleToFloat(-2.6310),doubleToFloat(-0.1518),doubleToFloat(0.1851),doubleToFloat(-3.0950),doubleToFloat(-0.1518),doubleToFloat(0.1828),doubleToFloat(0.0846),doubleToFloat(-0.6939),doubleToFloat(-0.8905),doubleToFloat(-0.1781),doubleToFloat(-1.3410),doubleToFloat(-1.1750),doubleToFloat(-0.8458),doubleToFloat(-1.4680),doubleToFloat(-1.2810),doubleToFloat(-2.3210),doubleToFloat(-1.4120),doubleToFloat(-1.2450),doubleToFloat(-2.4920),doubleToFloat(-1.3940),doubleToFloat(0.1856),doubleToFloat(-2.4920),doubleToFloat(-1.3940),doubleToFloat(1.3520),doubleToFloat(-2.4920),doubleToFloat(-1.3940)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.3980),doubleToFloat(-2.3210),doubleToFloat(-1.4120),doubleToFloat(1.3750),doubleToFloat(-0.8458),doubleToFloat(-1.4680),doubleToFloat(1.1780),doubleToFloat(-0.1781),doubleToFloat(-1.3410)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #109, 100 total numbers made up of 50 2-tuple values */
	this.TextureCoordinate_13_109_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.5321),doubleToFloat(0.3787),doubleToFloat(0.5221),doubleToFloat(0.4164),doubleToFloat(0.6035),doubleToFloat(0.4885),doubleToFloat(0.5254),doubleToFloat(0.4873),doubleToFloat(0.5371),doubleToFloat(0.5277),doubleToFloat(0.5919),doubleToFloat(0.4640),doubleToFloat(0.5993),doubleToFloat(0.4541),doubleToFloat(0.6239),doubleToFloat(0.4724),doubleToFloat(0.5243),doubleToFloat(0.4572),doubleToFloat(0.5139),doubleToFloat(0.3414)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5510),doubleToFloat(0.3296),doubleToFloat(0.5519),doubleToFloat(0.3782),doubleToFloat(0.5994),doubleToFloat(0.4420),doubleToFloat(0.6295),doubleToFloat(0.4612),doubleToFloat(0.5517),doubleToFloat(0.4278),doubleToFloat(0.5821),doubleToFloat(0.3257),doubleToFloat(0.5218),doubleToFloat(0.4385),doubleToFloat(0.5492),doubleToFloat(0.4738),doubleToFloat(0.5859),doubleToFloat(0.3895),doubleToFloat(0.5861),doubleToFloat(0.4306)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6076),doubleToFloat(0.3317),doubleToFloat(0.6217),doubleToFloat(0.3875),doubleToFloat(0.6088),doubleToFloat(0.4242),doubleToFloat(0.5592),doubleToFloat(0.5124),doubleToFloat(0.5492),doubleToFloat(0.4483),doubleToFloat(0.5474),doubleToFloat(0.4375),doubleToFloat(0.5730),doubleToFloat(0.4671),doubleToFloat(0.5877),doubleToFloat(0.4984),doubleToFloat(0.5733),doubleToFloat(0.4449),doubleToFloat(0.5774),doubleToFloat(0.4369)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5104),doubleToFloat(0.5081),doubleToFloat(0.5267),doubleToFloat(0.5341),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.5033),doubleToFloat(0.4400),doubleToFloat(0.4961),doubleToFloat(0.3404),doubleToFloat(0.5001),doubleToFloat(0.4177),doubleToFloat(0.5032),doubleToFloat(0.4400),doubleToFloat(0.5027),doubleToFloat(0.4613),doubleToFloat(0.5027),doubleToFloat(0.4613)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5130),doubleToFloat(0.3789),doubleToFloat(0.5267),doubleToFloat(0.5341),doubleToFloat(0.5104),doubleToFloat(0.5081),doubleToFloat(0.5033),doubleToFloat(0.4843),doubleToFloat(0.5027),doubleToFloat(0.4613),doubleToFloat(0.5033),doubleToFloat(0.4400),doubleToFloat(0.5130),doubleToFloat(0.3789),doubleToFloat(0.5001),doubleToFloat(0.4177),doubleToFloat(0.5027),doubleToFloat(0.4613),doubleToFloat(0.5033),doubleToFloat(0.4843)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #121, 1072 total numbers */
	this.IndexedFaceSet_9_121_coordIndex = new MFInt32(Java.to([2,16,15,-1,15,1,2,-1,38,39,17,-1,17,3,38,-1,0,6,20,-1,20,14,0,-1,5,19,18,-1,18,4,5,-1,2,0,14,-1,14,16,2,-1,1,15,19,-1,19,5,1,-1,6,3,17,-1,17,20,6,-1,4,18,21,-1,21,22,4,-1,9,8,15,-1,15,16,9,-1,39,23,10,-1,10,17,39,-1,20,13,7,-1,7,14,20,-1,12,11,18,-1,18,19,12,-1,14,7,9,-1,9,16,14,-1,8,12,19,-1,19,15,8,-1,17,10,13,-1,13,20,17,-1,11,56,21,-1,21,18,11,-1,2,1,26,-1,26,27,2,-1,38,3,28,-1,28,32,38,-1,6,0,25,-1,25,31,6,-1,5,4,29,-1,29,30,5,-1,2,27,25,-1,25,0,2,-1,5,30,26,-1,26,1,5,-1,6,31,28,-1,28,3,6,-1,22,64,29,-1,29,4,22,-1,26,24,27,-1,28,24,32,-1,25,24,31,-1,29,24,30,-1,27,24,25,-1,30,24,26,-1,31,24,28,-1,64,24,29,-1,34,33,36,-1,36,35,34,-1,38,37,40,-1,40,39,38,-1,41,44,43,-1,43,42,41,-1,46,45,48,-1,48,47,46,-1,34,35,44,-1,44,41,34,-1,33,46,47,-1,47,36,33,-1,42,43,40,-1,40,37,42,-1,45,22,21,-1,21,48,45,-1,49,35,36,-1,36,50,49,-1,39,40,51,-1,51,23,39,-1,43,44,53,-1,53,52,43,-1,54,47,48,-1,48,55,54,-1,44,35,49,-1,49,53,44,-1,50,36,47,-1,47,54,50,-1,40,43,52,-1,52,51,40,-1,55,48,21,-1,21,56,55,-1,34,58,57,-1,57,33,34,-1,38,32,59,-1,59,37,38,-1,42,61,60,-1,60,41,42,-1,46,63,62,-1,62,45,46,-1,34,41,60,-1,60,58,34,-1,46,33,57,-1,57,63,46,-1,42,37,59,-1,59,61,42,-1,22,45,62,-1,62,64,22,-1,57,58,24,-1,59,32,24,-1,60,61,24,-1,62,63,24,-1,58,60,24,-1,63,57,24,-1,61,59,24,-1,64,62,24,-1,76,65,71,-1,71,72,76,-1,75,88,89,-1,89,74,75,-1,85,69,67,-1,67,84,85,-1,77,70,68,-1,68,75,77,-1,81,82,71,-1,71,65,81,-1,78,72,71,-1,71,66,78,-1,79,90,129,-1,129,67,79,-1,83,131,91,-1,91,68,83,-1,76,73,69,-1,69,65,76,-1,80,86,70,-1,70,66,80,-1,75,98,99,-1,99,77,75,-1,81,65,69,-1,69,85,81,-1,78,66,70,-1,70,77,78,-1,73,79,67,-1,67,69,73,-1,86,83,68,-1,68,70,86,-1,82,80,66,-1,66,71,82,-1,92,97,87,-1,92,79,96,-1,94,76,72,-1,72,93,94,-1,95,73,76,-1,76,94,95,-1,79,73,95,-1,95,96,79,-1,98,74,97,-1,100,78,77,-1,77,99,100,-1,93,72,78,-1,78,100,93,-1,90,79,92,-1,92,87,90,-1,97,144,87,-1,145,84,67,-1,67,129,145,-1,75,68,91,-1,91,88,75,-1,144,97,74,-1,74,89,144,-1,75,74,98,-1,97,92,102,-1,102,101,97,-1,92,96,103,-1,103,102,92,-1,96,95,104,-1,104,103,96,-1,95,94,105,-1,105,104,95,-1,94,93,106,-1,106,105,94,-1,93,100,107,-1,107,106,93,-1,100,99,108,-1,108,107,100,-1,99,98,109,-1,109,108,99,-1,98,97,101,-1,101,109,98,-1,101,102,110,-1,102,103,110,-1,103,104,110,-1,104,105,110,-1,105,106,110,-1,106,107,110,-1,107,108,110,-1,108,109,110,-1,109,101,110,-1,111,114,113,-1,113,112,111,-1,115,116,89,-1,89,88,115,-1,118,117,120,-1,120,119,118,-1,121,115,123,-1,123,122,121,-1,124,112,113,-1,113,125,124,-1,127,126,113,-1,113,114,127,-1,128,120,129,-1,129,90,128,-1,130,123,91,-1,91,131,130,-1,111,112,119,-1,119,132,111,-1,115,121,136,-1,136,135,115,-1,124,118,119,-1,119,112,124,-1,132,119,120,-1,120,128,132,-1,134,122,123,-1,123,130,134,-1,125,113,126,-1,126,133,125,-1,137,87,138,-1,137,139,128,-1,140,141,114,-1,114,111,140,-1,142,140,111,-1,111,132,142,-1,128,139,142,-1,142,132,128,-1,135,138,116,-1,141,143,127,-1,127,114,141,-1,90,87,137,-1,137,128,90,-1,138,87,144,-1,145,129,120,-1,120,117,145,-1,115,88,91,-1,91,123,115,-1,144,89,116,-1,116,138,144,-1,115,135,116,-1,138,147,146,-1,146,137,138,-1,137,146,148,-1,148,139,137,-1,139,148,149,-1,149,142,139,-1,142,149,150,-1,150,140,142,-1,140,150,151,-1,151,141,140,-1,141,151,152,-1,152,143,141,-1,136,153,154,-1,154,135,136,-1,135,154,147,-1,147,138,135,-1,147,155,146,-1,146,155,148,-1,148,155,149,-1,149,155,150,-1,150,155,151,-1,151,155,152,-1,152,155,153,-1,153,155,154,-1,154,155,147,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #121, 1072 total numbers */
	this.IndexedFaceSet_9_121_texCoordIndex = new MFInt32(Java.to([0,7,8,-1,8,1,0,-1,26,9,10,-1,10,4,26,-1,6,5,11,-1,11,12,6,-1,2,13,14,-1,14,3,2,-1,0,6,12,-1,12,7,0,-1,1,8,13,-1,13,2,1,-1,5,4,10,-1,10,11,5,-1,3,14,15,-1,15,25,3,-1,16,17,8,-1,8,7,16,-1,9,18,19,-1,19,10,9,-1,11,20,21,-1,21,12,11,-1,22,23,14,-1,14,13,22,-1,12,21,16,-1,16,7,12,-1,17,22,13,-1,13,8,17,-1,10,19,20,-1,20,11,10,-1,23,24,15,-1,15,14,23,-1,0,1,29,-1,29,30,0,-1,26,4,31,-1,31,36,26,-1,5,6,28,-1,28,34,5,-1,2,3,32,-1,32,33,2,-1,0,30,28,-1,28,6,0,-1,2,33,29,-1,29,1,2,-1,5,34,31,-1,31,4,5,-1,25,35,32,-1,32,3,25,-1,29,27,30,-1,31,27,36,-1,28,27,34,-1,32,27,33,-1,30,27,28,-1,33,27,29,-1,34,27,31,-1,35,27,32,-1,38,37,40,-1,40,39,38,-1,42,41,44,-1,44,43,42,-1,45,48,47,-1,47,46,45,-1,50,49,52,-1,52,51,50,-1,38,39,48,-1,48,45,38,-1,37,50,51,-1,51,40,37,-1,46,47,44,-1,44,41,46,-1,49,53,54,-1,54,52,49,-1,55,39,40,-1,40,56,55,-1,43,44,58,-1,58,57,43,-1,47,48,60,-1,60,59,47,-1,61,51,52,-1,52,62,61,-1,48,39,55,-1,55,60,48,-1,56,40,51,-1,51,61,56,-1,44,47,59,-1,59,58,44,-1,62,52,54,-1,54,63,62,-1,38,65,64,-1,64,37,38,-1,42,67,66,-1,66,41,42,-1,46,69,68,-1,68,45,46,-1,50,71,70,-1,70,49,50,-1,38,45,68,-1,68,65,38,-1,50,37,64,-1,64,71,50,-1,46,41,66,-1,66,69,46,-1,53,49,70,-1,70,72,53,-1,64,65,73,-1,66,67,73,-1,68,69,73,-1,70,71,73,-1,65,68,73,-1,71,64,73,-1,69,66,73,-1,72,70,73,-1,74,75,76,-1,76,77,74,-1,78,79,80,-1,80,81,78,-1,83,84,85,-1,85,82,83,-1,86,87,88,-1,88,78,86,-1,89,90,76,-1,76,75,89,-1,92,77,76,-1,76,91,92,-1,93,94,95,-1,95,85,93,-1,96,97,98,-1,98,88,96,-1,74,99,84,-1,84,75,74,-1,100,101,87,-1,87,91,100,-1,78,111,112,-1,112,86,78,-1,89,75,84,-1,84,83,89,-1,92,91,87,-1,87,86,92,-1,99,93,85,-1,85,84,99,-1,101,96,88,-1,88,87,101,-1,90,100,91,-1,91,76,90,-1,105,110,102,-1,105,93,109,-1,107,74,77,-1,77,106,107,-1,108,99,74,-1,74,107,108,-1,93,99,108,-1,108,109,93,-1,111,81,110,-1,113,92,86,-1,86,112,113,-1,106,77,92,-1,92,113,106,-1,94,93,105,-1,105,102,94,-1,110,103,102,-1,104,82,85,-1,85,95,104,-1,78,88,98,-1,98,79,78,-1,103,110,81,-1,81,80,103,-1,78,81,111,-1,110,105,115,-1,115,114,110,-1,105,109,116,-1,116,115,105,-1,109,108,117,-1,117,116,109,-1,108,107,118,-1,118,117,108,-1,107,106,119,-1,119,118,107,-1,106,113,120,-1,120,119,106,-1,113,112,121,-1,121,120,113,-1,112,111,122,-1,122,121,112,-1,111,110,114,-1,114,122,111,-1,114,115,123,-1,115,116,123,-1,116,117,123,-1,117,118,123,-1,118,119,123,-1,119,120,123,-1,120,121,123,-1,121,122,123,-1,122,114,123,-1,124,127,126,-1,126,125,124,-1,128,131,130,-1,130,129,128,-1,133,132,135,-1,135,134,133,-1,136,128,138,-1,138,137,136,-1,139,125,126,-1,126,140,139,-1,142,141,126,-1,126,127,142,-1,143,135,145,-1,145,144,143,-1,146,138,148,-1,148,147,146,-1,124,125,134,-1,134,149,124,-1,128,136,153,-1,153,152,128,-1,139,133,134,-1,134,125,139,-1,149,134,135,-1,135,143,149,-1,151,137,138,-1,138,146,151,-1,140,126,141,-1,141,150,140,-1,154,156,155,-1,154,157,143,-1,158,159,127,-1,127,124,158,-1,160,158,124,-1,124,149,160,-1,143,157,160,-1,160,149,143,-1,152,155,131,-1,159,161,142,-1,142,127,159,-1,144,156,154,-1,154,143,144,-1,155,156,162,-1,163,145,135,-1,135,132,163,-1,128,129,148,-1,148,138,128,-1,162,130,131,-1,131,155,162,-1,128,152,131,-1,155,165,164,-1,164,154,155,-1,154,164,166,-1,166,157,154,-1,157,166,167,-1,167,160,157,-1,160,167,168,-1,168,158,160,-1,158,168,169,-1,169,159,158,-1,159,169,170,-1,170,161,159,-1,153,171,172,-1,172,152,153,-1,152,172,165,-1,165,155,152,-1,165,173,164,-1,164,173,166,-1,166,173,167,-1,167,173,168,-1,168,173,169,-1,169,173,170,-1,170,173,171,-1,171,173,172,-1,172,173,165,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #121, 468 total numbers made up of 156 3-tuple values */
	this.Coordinate_10_121_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(4.5100),doubleToFloat(5.1700),doubleToFloat(2.0240),doubleToFloat(5.0350),doubleToFloat(5.1700),doubleToFloat(-1.6370),doubleToFloat(5.4240),doubleToFloat(5.1700),doubleToFloat(0.1737),doubleToFloat(1.1980),doubleToFloat(5.1700),doubleToFloat(3.2830),doubleToFloat(0.8050),doubleToFloat(5.1700),doubleToFloat(-3.2410),doubleToFloat(3.0460),doubleToFloat(5.1700),doubleToFloat(-2.7900),doubleToFloat(2.9930),doubleToFloat(5.1700),doubleToFloat(2.9000),doubleToFloat(5.7740),doubleToFloat(-2.5470),doubleToFloat(3.1960),doubleToFloat(6.1190),doubleToFloat(-2.5470),doubleToFloat(-2.3920),doubleToFloat(6.8250),doubleToFloat(-2.5000),doubleToFloat(0.1688)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.4730),doubleToFloat(-2.5470),doubleToFloat(4.7170),doubleToFloat(1.1380),doubleToFloat(-2.5470),doubleToFloat(-4.7330),doubleToFloat(4.0430),doubleToFloat(-2.5470),doubleToFloat(-4.1340),doubleToFloat(3.3660),doubleToFloat(-2.5470),doubleToFloat(4.2860),doubleToFloat(4.8230),doubleToFloat(4.0380),doubleToFloat(2.2700),doubleToFloat(5.3730),doubleToFloat(4.0380),doubleToFloat(-1.8690),doubleToFloat(5.6850),doubleToFloat(4.0380),doubleToFloat(0.1723),doubleToFloat(1.2490),doubleToFloat(4.0380),doubleToFloat(3.5710),doubleToFloat(0.8774),doubleToFloat(4.0380),doubleToFloat(-3.5920),doubleToFloat(3.3290),doubleToFloat(4.0380),doubleToFloat(-3.0700)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.0540),doubleToFloat(4.0380),doubleToFloat(3.1990),doubleToFloat(0.0000),doubleToFloat(4.0380),doubleToFloat(-3.5200),doubleToFloat(0.0000),doubleToFloat(5.1700),doubleToFloat(-3.1770),doubleToFloat(0.0000),doubleToFloat(-2.5470),doubleToFloat(4.8500),doubleToFloat(0.0000),doubleToFloat(7.3360),doubleToFloat(0.1723),doubleToFloat(3.3650),doubleToFloat(6.2530),doubleToFloat(1.5970),doubleToFloat(3.7670),doubleToFloat(6.2530),doubleToFloat(-1.1070),doubleToFloat(4.0570),doubleToFloat(6.2530),doubleToFloat(0.1723),doubleToFloat(0.9289),doubleToFloat(6.2530),doubleToFloat(2.5570),doubleToFloat(0.6021),doubleToFloat(6.2530),doubleToFloat(-2.4740)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.2710),doubleToFloat(6.2530),doubleToFloat(-1.9900),doubleToFloat(2.0960),doubleToFloat(6.2530),doubleToFloat(2.2280),doubleToFloat(0.0000),doubleToFloat(6.2530),doubleToFloat(2.6270),doubleToFloat(-5.0350),doubleToFloat(5.1700),doubleToFloat(-1.6370),doubleToFloat(-5.4240),doubleToFloat(5.1700),doubleToFloat(0.1737),doubleToFloat(-5.6850),doubleToFloat(4.0380),doubleToFloat(0.1723),doubleToFloat(-5.3730),doubleToFloat(4.0380),doubleToFloat(-1.8690),doubleToFloat(-1.1980),doubleToFloat(5.1700),doubleToFloat(3.2830),doubleToFloat(0.0000),doubleToFloat(5.1700),doubleToFloat(3.2850),doubleToFloat(0.0000),doubleToFloat(4.0380),doubleToFloat(3.5780)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2490),doubleToFloat(4.0380),doubleToFloat(3.5710),doubleToFloat(-4.5100),doubleToFloat(5.1700),doubleToFloat(2.0240),doubleToFloat(-2.9930),doubleToFloat(5.1700),doubleToFloat(2.9000),doubleToFloat(-3.0540),doubleToFloat(4.0380),doubleToFloat(3.1990),doubleToFloat(-4.8230),doubleToFloat(4.0380),doubleToFloat(2.2700),doubleToFloat(-0.8050),doubleToFloat(5.1700),doubleToFloat(-3.2410),doubleToFloat(-3.0460),doubleToFloat(5.1700),doubleToFloat(-2.7900),doubleToFloat(-3.3290),doubleToFloat(4.0380),doubleToFloat(-3.0700),doubleToFloat(-0.8774),doubleToFloat(4.0380),doubleToFloat(-3.5920),doubleToFloat(-6.8250),doubleToFloat(-2.5000),doubleToFloat(0.1688)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-6.1190),doubleToFloat(-2.5470),doubleToFloat(-2.3920),doubleToFloat(-1.4730),doubleToFloat(-2.5470),doubleToFloat(4.7170),doubleToFloat(-3.3660),doubleToFloat(-2.5470),doubleToFloat(4.2860),doubleToFloat(-5.7740),doubleToFloat(-2.5470),doubleToFloat(3.1960),doubleToFloat(-4.0430),doubleToFloat(-2.5470),doubleToFloat(-4.1340),doubleToFloat(-1.1380),doubleToFloat(-2.5470),doubleToFloat(-4.7330),doubleToFloat(0.0000),doubleToFloat(-2.5470),doubleToFloat(-4.8050),doubleToFloat(-3.7670),doubleToFloat(6.2530),doubleToFloat(-1.1070),doubleToFloat(-4.0570),doubleToFloat(6.2530),doubleToFloat(0.1723),doubleToFloat(-0.9289),doubleToFloat(6.2530),doubleToFloat(2.5570)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.3650),doubleToFloat(6.2530),doubleToFloat(1.5970),doubleToFloat(-2.0960),doubleToFloat(6.2530),doubleToFloat(2.2280),doubleToFloat(-0.6021),doubleToFloat(6.2530),doubleToFloat(-2.4740),doubleToFloat(-2.2710),doubleToFloat(6.2530),doubleToFloat(-1.9900),doubleToFloat(0.0000),doubleToFloat(6.2530),doubleToFloat(-2.4260),doubleToFloat(4.9210),doubleToFloat(3.8950),doubleToFloat(-1.7860),doubleToFloat(4.4120),doubleToFloat(4.2240),doubleToFloat(2.2580),doubleToFloat(1.2130),doubleToFloat(3.4420),doubleToFloat(-3.3960),doubleToFloat(1.2450),doubleToFloat(3.9650),doubleToFloat(3.1690),doubleToFloat(3.3990),doubleToFloat(3.6490),doubleToFloat(-2.9280)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.0240),doubleToFloat(4.0950),doubleToFloat(2.9630),doubleToFloat(5.3100),doubleToFloat(4.2190),doubleToFloat(0.1622),doubleToFloat(5.5630),doubleToFloat(2.9110),doubleToFloat(0.1622),doubleToFloat(3.5700),doubleToFloat(1.8870),doubleToFloat(-2.7660),doubleToFloat(0.6783),doubleToFloat(0.7647),doubleToFloat(2.2220),doubleToFloat(1.3570),doubleToFloat(2.0690),doubleToFloat(2.9390),doubleToFloat(5.0970),doubleToFloat(2.4750),doubleToFloat(-1.7950),doubleToFloat(3.0130),doubleToFloat(2.3360),doubleToFloat(2.8740),doubleToFloat(4.7450),doubleToFloat(2.6350),doubleToFloat(2.1960),doubleToFloat(1.7530),doubleToFloat(1.4040),doubleToFloat(-3.0890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.1450),doubleToFloat(5.1370),doubleToFloat(2.1250),doubleToFloat(4.7440),doubleToFloat(5.1370),doubleToFloat(-1.5780),doubleToFloat(5.1100),doubleToFloat(5.1370),doubleToFloat(0.1622),doubleToFloat(1.1700),doubleToFloat(5.1370),doubleToFloat(3.0870),doubleToFloat(0.7584),doubleToFloat(5.1370),doubleToFloat(-3.1900),doubleToFloat(3.1330),doubleToFloat(5.1370),doubleToFloat(-2.6490),doubleToFloat(2.8610),doubleToFloat(5.1370),doubleToFloat(2.8850),doubleToFloat(0.0000),doubleToFloat(0.3581),doubleToFloat(-1.3490),doubleToFloat(0.0000),doubleToFloat(1.9100),doubleToFloat(2.9860),doubleToFloat(0.0000),doubleToFloat(0.9030),doubleToFloat(2.4260)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(1.2390),doubleToFloat(-2.7600),doubleToFloat(0.0000),doubleToFloat(3.8870),doubleToFloat(3.2070),doubleToFloat(1.1090),doubleToFloat(0.1986),doubleToFloat(-1.7440),doubleToFloat(5.5670),doubleToFloat(1.3010),doubleToFloat(0.1622),doubleToFloat(4.7640),doubleToFloat(1.2360),doubleToFloat(-1.6900),doubleToFloat(3.2580),doubleToFloat(0.8579),doubleToFloat(-2.6460),doubleToFloat(2.2560),doubleToFloat(0.5714),doubleToFloat(-2.6490),doubleToFloat(0.2453),doubleToFloat(0.0248),doubleToFloat(0.1622),doubleToFloat(1.2040),doubleToFloat(0.3044),doubleToFloat(2.1680),doubleToFloat(2.9660),doubleToFloat(0.7857),doubleToFloat(2.8210)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.7100),doubleToFloat(1.1150),doubleToFloat(1.9890),doubleToFloat(1.2060),doubleToFloat(-0.8716),doubleToFloat(0.1519),doubleToFloat(1.9030),doubleToFloat(-0.7404),doubleToFloat(-1.3820),doubleToFloat(2.7480),doubleToFloat(-0.4437),doubleToFloat(-2.0520),doubleToFloat(3.3140),doubleToFloat(-0.2664),doubleToFloat(-2.0510),doubleToFloat(4.4900),doubleToFloat(0.0293),doubleToFloat(-1.3030),doubleToFloat(5.1260),doubleToFloat(0.0535),doubleToFloat(0.1482),doubleToFloat(4.4640),doubleToFloat(-0.0829),doubleToFloat(1.5560),doubleToFloat(3.1860),doubleToFloat(-0.2951),doubleToFloat(2.1630),doubleToFloat(1.9450),doubleToFloat(-0.6465),doubleToFloat(1.7010)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.2750),doubleToFloat(-0.7308),doubleToFloat(-0.0931),doubleToFloat(-5.0970),doubleToFloat(2.4750),doubleToFloat(-1.7950),doubleToFloat(-4.9210),doubleToFloat(3.8950),doubleToFloat(-1.7860),doubleToFloat(-5.3100),doubleToFloat(4.2190),doubleToFloat(0.1622),doubleToFloat(-5.5630),doubleToFloat(2.9110),doubleToFloat(0.1622),doubleToFloat(-1.3570),doubleToFloat(2.0690),doubleToFloat(2.9390),doubleToFloat(-0.6783),doubleToFloat(0.7647),doubleToFloat(2.2220),doubleToFloat(-0.7584),doubleToFloat(5.1370),doubleToFloat(-3.1900),doubleToFloat(-3.1330),doubleToFloat(5.1370),doubleToFloat(-2.6490),doubleToFloat(-3.3990),doubleToFloat(3.6490),doubleToFloat(-2.9280)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2130),doubleToFloat(3.4420),doubleToFloat(-3.3960),doubleToFloat(-3.0130),doubleToFloat(2.3360),doubleToFloat(2.8740),doubleToFloat(-3.0240),doubleToFloat(4.0950),doubleToFloat(2.9630),doubleToFloat(-1.2450),doubleToFloat(3.9650),doubleToFloat(3.1690),doubleToFloat(-4.7440),doubleToFloat(5.1370),doubleToFloat(-1.5780),doubleToFloat(-5.1100),doubleToFloat(5.1370),doubleToFloat(0.1622),doubleToFloat(-4.4120),doubleToFloat(4.2240),doubleToFloat(2.2580),doubleToFloat(-4.7450),doubleToFloat(2.6350),doubleToFloat(2.1960),doubleToFloat(-1.7530),doubleToFloat(1.4040),doubleToFloat(-3.0890),doubleToFloat(0.0000),doubleToFloat(2.9390),doubleToFloat(-3.1590)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1700),doubleToFloat(5.1370),doubleToFloat(3.0870),doubleToFloat(0.0000),doubleToFloat(5.1370),doubleToFloat(3.1690),doubleToFloat(-3.5700),doubleToFloat(1.8870),doubleToFloat(-2.7660),doubleToFloat(-4.1450),doubleToFloat(5.1370),doubleToFloat(2.1250),doubleToFloat(-2.8610),doubleToFloat(5.1370),doubleToFloat(2.8850),doubleToFloat(-1.2040),doubleToFloat(0.3044),doubleToFloat(2.1680),doubleToFloat(-2.9660),doubleToFloat(0.7857),doubleToFloat(2.8210),doubleToFloat(-1.1090),doubleToFloat(0.1986),doubleToFloat(-1.7440),doubleToFloat(-0.2453),doubleToFloat(0.0248),doubleToFloat(0.1622),doubleToFloat(-2.2560),doubleToFloat(0.5714),doubleToFloat(-2.6490)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.7640),doubleToFloat(1.2360),doubleToFloat(-1.6900),doubleToFloat(-5.5670),doubleToFloat(1.3010),doubleToFloat(0.1622),doubleToFloat(-3.2580),doubleToFloat(0.8579),doubleToFloat(-2.6460),doubleToFloat(-4.7100),doubleToFloat(1.1150),doubleToFloat(1.9890),doubleToFloat(0.0000),doubleToFloat(0.0331),doubleToFloat(0.1622),doubleToFloat(0.0000),doubleToFloat(5.1370),doubleToFloat(-3.1330),doubleToFloat(-1.9030),doubleToFloat(-0.7404),doubleToFloat(-1.3820),doubleToFloat(-1.2060),doubleToFloat(-0.8716),doubleToFloat(0.1519),doubleToFloat(-2.7480),doubleToFloat(-0.4437),doubleToFloat(-2.0520),doubleToFloat(-3.3140),doubleToFloat(-0.2664),doubleToFloat(-2.0510)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.4900),doubleToFloat(0.0293),doubleToFloat(-1.3030),doubleToFloat(-5.1260),doubleToFloat(0.0535),doubleToFloat(0.1482),doubleToFloat(-4.4640),doubleToFloat(-0.0829),doubleToFloat(1.5560),doubleToFloat(-3.1860),doubleToFloat(-0.2951),doubleToFloat(2.1630),doubleToFloat(-1.9450),doubleToFloat(-0.6465),doubleToFloat(1.7010),doubleToFloat(-3.2750),doubleToFloat(-0.7308),doubleToFloat(-0.0931)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #122, 348 total numbers made up of 174 2-tuple values */
	this.TextureCoordinate_10_122_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1946),doubleToFloat(0.4702),doubleToFloat(0.2292),doubleToFloat(0.4794),doubleToFloat(0.2517),doubleToFloat(0.4983),doubleToFloat(0.2720),doubleToFloat(0.5246),doubleToFloat(0.1268),doubleToFloat(0.5203),doubleToFloat(0.1389),doubleToFloat(0.5008),doubleToFloat(0.1588),doubleToFloat(0.4844),doubleToFloat(0.1950),doubleToFloat(0.4514),doubleToFloat(0.2356),doubleToFloat(0.4616),doubleToFloat(0.0942),doubleToFloat(0.5182)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1077),doubleToFloat(0.5032),doubleToFloat(0.1265),doubleToFloat(0.4820),doubleToFloat(0.1522),doubleToFloat(0.4642),doubleToFloat(0.2631),doubleToFloat(0.4830),doubleToFloat(0.2889),doubleToFloat(0.5118),doubleToFloat(0.2956),doubleToFloat(0.5227),doubleToFloat(0.1984),doubleToFloat(0.3311),doubleToFloat(0.2724),doubleToFloat(0.3463),doubleToFloat(0.0173),doubleToFloat(0.4174),doubleToFloat(0.0394),doubleToFloat(0.3983)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0737),doubleToFloat(0.3697),doubleToFloat(0.1217),doubleToFloat(0.3455),doubleToFloat(0.3241),doubleToFloat(0.3787),doubleToFloat(0.3676),doubleToFloat(0.4195),doubleToFloat(0.3792),doubleToFloat(0.4346),doubleToFloat(0.2759),doubleToFloat(0.5347),doubleToFloat(0.1182),doubleToFloat(0.5349),doubleToFloat(0.1962),doubleToFloat(0.5053),doubleToFloat(0.1775),doubleToFloat(0.4948),doubleToFloat(0.2127),doubleToFloat(0.4924)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1954),doubleToFloat(0.4878),doubleToFloat(0.1615),doubleToFloat(0.5128),doubleToFloat(0.2341),doubleToFloat(0.5150),doubleToFloat(0.2239),doubleToFloat(0.5018),doubleToFloat(0.1676),doubleToFloat(0.5030),doubleToFloat(0.2361),doubleToFloat(0.5200),doubleToFloat(0.1572),doubleToFloat(0.5201),doubleToFloat(0.2292),doubleToFloat(0.4794),doubleToFloat(0.1946),doubleToFloat(0.4702),doubleToFloat(0.1950),doubleToFloat(0.4514)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2356),doubleToFloat(0.4616),doubleToFloat(0.1268),doubleToFloat(0.5203),doubleToFloat(0.1182),doubleToFloat(0.5349),doubleToFloat(0.0942),doubleToFloat(0.5182),doubleToFloat(0.1077),doubleToFloat(0.5032),doubleToFloat(0.1588),doubleToFloat(0.4844),doubleToFloat(0.1389),doubleToFloat(0.5008),doubleToFloat(0.1265),doubleToFloat(0.4820),doubleToFloat(0.1522),doubleToFloat(0.4642),doubleToFloat(0.2720),doubleToFloat(0.5246)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2517),doubleToFloat(0.4983),doubleToFloat(0.2631),doubleToFloat(0.4830),doubleToFloat(0.2889),doubleToFloat(0.5118),doubleToFloat(0.2759),doubleToFloat(0.5347),doubleToFloat(0.2956),doubleToFloat(0.5227),doubleToFloat(0.1984),doubleToFloat(0.3311),doubleToFloat(0.2724),doubleToFloat(0.3463),doubleToFloat(0.0173),doubleToFloat(0.4174),doubleToFloat(0.0394),doubleToFloat(0.3983),doubleToFloat(0.0737),doubleToFloat(0.3697)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1217),doubleToFloat(0.3455),doubleToFloat(0.3241),doubleToFloat(0.3787),doubleToFloat(0.3676),doubleToFloat(0.4195),doubleToFloat(0.3792),doubleToFloat(0.4346),doubleToFloat(0.2127),doubleToFloat(0.4924),doubleToFloat(0.1954),doubleToFloat(0.4878),doubleToFloat(0.1615),doubleToFloat(0.5128),doubleToFloat(0.1572),doubleToFloat(0.5201),doubleToFloat(0.1775),doubleToFloat(0.4948),doubleToFloat(0.1676),doubleToFloat(0.5030)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2341),doubleToFloat(0.5150),doubleToFloat(0.2239),doubleToFloat(0.5018),doubleToFloat(0.2361),doubleToFloat(0.5200),doubleToFloat(0.1962),doubleToFloat(0.5053),doubleToFloat(0.8848),doubleToFloat(0.2427),doubleToFloat(0.8913),doubleToFloat(0.2642),doubleToFloat(0.8377),doubleToFloat(0.2733),doubleToFloat(0.8383),doubleToFloat(0.2574),doubleToFloat(0.7742),doubleToFloat(0.1962),doubleToFloat(0.7627),doubleToFloat(0.1778)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8009),doubleToFloat(0.1535),doubleToFloat(0.8110),doubleToFloat(0.1673),doubleToFloat(0.9594),doubleToFloat(0.2427),doubleToFloat(0.9295),doubleToFloat(0.2677),doubleToFloat(0.9178),doubleToFloat(0.2453),doubleToFloat(0.9430),doubleToFloat(0.2188),doubleToFloat(0.7845),doubleToFloat(0.2165),doubleToFloat(0.7712),doubleToFloat(0.2411),doubleToFloat(0.7525),doubleToFloat(0.2204),doubleToFloat(0.8914),doubleToFloat(0.2858)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8396),doubleToFloat(0.2896),doubleToFloat(0.7952),doubleToFloat(0.2594),doubleToFloat(0.8024),doubleToFloat(0.2421),doubleToFloat(0.9202),doubleToFloat(0.2014),doubleToFloat(0.9330),doubleToFloat(0.1814),doubleToFloat(0.9545),doubleToFloat(0.2082),doubleToFloat(0.7364),doubleToFloat(0.2383),doubleToFloat(0.7237),doubleToFloat(0.2262),doubleToFloat(0.7384),doubleToFloat(0.2057),doubleToFloat(0.9019),doubleToFloat(0.2266)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7886),doubleToFloat(0.2763),doubleToFloat(0.7574),doubleToFloat(0.2574),doubleToFloat(0.8803),doubleToFloat(0.1473),doubleToFloat(0.8451),doubleToFloat(0.1450),doubleToFloat(0.9690),doubleToFloat(0.2355),doubleToFloat(0.8812),doubleToFloat(0.1711),doubleToFloat(0.8407),doubleToFloat(0.2321),doubleToFloat(0.8766),doubleToFloat(0.2224),doubleToFloat(0.8889),doubleToFloat(0.2087),doubleToFloat(0.8944),doubleToFloat(0.1877)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8493),doubleToFloat(0.1554),doubleToFloat(0.8194),doubleToFloat(0.1684),doubleToFloat(0.8024),doubleToFloat(0.1986),doubleToFloat(0.8138),doubleToFloat(0.2222),doubleToFloat(0.8493),doubleToFloat(0.1554),doubleToFloat(0.8812),doubleToFloat(0.1711),doubleToFloat(0.8944),doubleToFloat(0.1877),doubleToFloat(0.8889),doubleToFloat(0.2087),doubleToFloat(0.8766),doubleToFloat(0.2224),doubleToFloat(0.8407),doubleToFloat(0.2321)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8138),doubleToFloat(0.2222),doubleToFloat(0.8024),doubleToFloat(0.1986),doubleToFloat(0.8194),doubleToFloat(0.1684),doubleToFloat(0.8519),doubleToFloat(0.1963),doubleToFloat(0.8848),doubleToFloat(0.2427),doubleToFloat(0.8913),doubleToFloat(0.2642),doubleToFloat(0.8377),doubleToFloat(0.2733),doubleToFloat(0.8383),doubleToFloat(0.2574),doubleToFloat(0.7742),doubleToFloat(0.1962),doubleToFloat(0.7627),doubleToFloat(0.1778)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8009),doubleToFloat(0.1535),doubleToFloat(0.8110),doubleToFloat(0.1673),doubleToFloat(0.9594),doubleToFloat(0.2427),doubleToFloat(0.9295),doubleToFloat(0.2677),doubleToFloat(0.9178),doubleToFloat(0.2453),doubleToFloat(0.9430),doubleToFloat(0.2188),doubleToFloat(0.7845),doubleToFloat(0.2165),doubleToFloat(0.7712),doubleToFloat(0.2411),doubleToFloat(0.7525),doubleToFloat(0.2204),doubleToFloat(0.8914),doubleToFloat(0.2858)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8396),doubleToFloat(0.2896),doubleToFloat(0.7952),doubleToFloat(0.2594),doubleToFloat(0.8024),doubleToFloat(0.2421),doubleToFloat(0.9202),doubleToFloat(0.2014),doubleToFloat(0.9330),doubleToFloat(0.1814),doubleToFloat(0.9545),doubleToFloat(0.2082),doubleToFloat(0.7364),doubleToFloat(0.2383),doubleToFloat(0.7237),doubleToFloat(0.2262),doubleToFloat(0.7384),doubleToFloat(0.2057),doubleToFloat(0.9019),doubleToFloat(0.2266)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7886),doubleToFloat(0.2763),doubleToFloat(0.7574),doubleToFloat(0.2574),doubleToFloat(0.8194),doubleToFloat(0.1684),doubleToFloat(0.8024),doubleToFloat(0.1986),doubleToFloat(0.8812),doubleToFloat(0.1711),doubleToFloat(0.8493),doubleToFloat(0.1554),doubleToFloat(0.8803),doubleToFloat(0.1473),doubleToFloat(0.8944),doubleToFloat(0.1877),doubleToFloat(0.8766),doubleToFloat(0.2224),doubleToFloat(0.8407),doubleToFloat(0.2321)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8889),doubleToFloat(0.2087),doubleToFloat(0.8138),doubleToFloat(0.2222),doubleToFloat(0.8451),doubleToFloat(0.1450),doubleToFloat(0.9690),doubleToFloat(0.2355),doubleToFloat(0.8812),doubleToFloat(0.1711),doubleToFloat(0.8493),doubleToFloat(0.1554),doubleToFloat(0.8944),doubleToFloat(0.1877),doubleToFloat(0.8889),doubleToFloat(0.2087),doubleToFloat(0.8766),doubleToFloat(0.2224),doubleToFloat(0.8407),doubleToFloat(0.2321)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8138),doubleToFloat(0.2222),doubleToFloat(0.8024),doubleToFloat(0.1986),doubleToFloat(0.8194),doubleToFloat(0.1684),doubleToFloat(0.8519),doubleToFloat(0.1963)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #130, 504 total numbers */
	this.IndexedFaceSet_10_130_coordIndex = new MFInt32(Java.to([38,51,52,-1,52,37,38,-1,37,52,53,-1,53,39,37,-1,40,39,53,-1,53,54,40,-1,41,40,54,-1,54,55,41,-1,42,41,55,-1,55,56,42,-1,8,42,56,-1,56,57,8,-1,9,8,57,-1,57,58,9,-1,9,58,51,-1,51,38,9,-1,10,33,11,-1,11,33,34,-1,34,14,11,-1,34,35,16,-1,16,14,34,-1,16,35,36,-1,36,18,20,-1,20,19,36,-1,23,19,20,-1,20,24,23,-1,22,21,23,-1,23,24,22,-1,13,26,25,-1,25,12,13,-1,12,25,27,-1,27,15,12,-1,15,27,28,-1,28,17,15,-1,17,28,29,-1,29,18,17,-1,18,29,30,-1,30,20,18,-1,20,30,31,-1,31,24,20,-1,22,32,26,-1,26,13,22,-1,24,31,32,-1,32,22,24,-1,10,13,12,-1,12,33,10,-1,33,12,15,-1,15,34,33,-1,15,17,35,-1,35,34,15,-1,17,18,36,-1,36,35,17,-1,21,22,13,-1,13,10,21,-1,25,26,38,-1,38,37,25,-1,27,25,37,-1,37,39,27,-1,28,27,39,-1,39,40,28,-1,29,28,40,-1,40,41,29,-1,30,29,41,-1,41,42,30,-1,31,30,42,-1,42,8,31,-1,26,32,9,-1,9,38,26,-1,32,31,8,-1,8,9,32,-1,44,1,0,-1,0,43,44,-1,43,0,2,-1,2,45,43,-1,2,3,46,-1,46,45,2,-1,3,4,47,-1,47,46,3,-1,4,5,48,-1,48,47,4,-1,5,6,49,-1,49,48,5,-1,6,7,50,-1,50,49,6,-1,50,7,1,-1,1,44,50,-1,51,44,43,-1,43,52,51,-1,52,43,45,-1,45,53,52,-1,53,45,46,-1,46,54,53,-1,46,47,55,-1,55,54,46,-1,47,48,56,-1,56,55,47,-1,48,49,57,-1,57,56,48,-1,49,50,58,-1,58,57,49,-1,58,50,44,-1,44,51,58,-1,0,1,60,-1,60,59,0,-1,1,7,61,-1,61,60,1,-1,7,6,62,-1,62,61,7,-1,6,5,63,-1,63,62,6,-1,5,4,64,-1,64,63,5,-1,4,3,65,-1,65,64,4,-1,3,2,66,-1,66,65,3,-1,2,0,59,-1,59,66,2,-1,59,60,67,-1,60,61,67,-1,61,62,67,-1,62,63,67,-1,63,64,67,-1,64,65,67,-1,65,66,67,-1,66,59,67,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #130, 504 total numbers */
	this.IndexedFaceSet_10_130_texCoordIndex = new MFInt32(Java.to([10,66,67,-1,67,9,10,-1,9,67,68,-1,68,11,9,-1,12,11,68,-1,68,69,12,-1,13,12,69,-1,69,70,13,-1,14,13,70,-1,70,71,14,-1,15,14,71,-1,71,72,15,-1,16,17,73,-1,73,74,16,-1,16,74,66,-1,66,10,16,-1,18,44,19,-1,19,44,45,-1,45,22,19,-1,45,46,24,-1,24,22,45,-1,24,46,47,-1,47,26,28,-1,28,27,47,-1,31,27,28,-1,28,32,31,-1,30,29,34,-1,34,33,30,-1,21,36,35,-1,35,20,21,-1,20,35,37,-1,37,23,20,-1,23,37,38,-1,38,25,23,-1,25,38,39,-1,39,26,25,-1,26,39,40,-1,40,28,26,-1,28,40,41,-1,41,32,28,-1,30,42,36,-1,36,21,30,-1,33,43,42,-1,42,30,33,-1,18,21,20,-1,20,44,18,-1,44,20,23,-1,23,45,44,-1,23,25,46,-1,46,45,23,-1,25,26,47,-1,47,46,25,-1,29,30,21,-1,21,18,29,-1,35,36,48,-1,48,49,35,-1,37,35,49,-1,49,50,37,-1,38,37,50,-1,50,51,38,-1,39,38,51,-1,51,52,39,-1,40,39,52,-1,52,53,40,-1,41,40,53,-1,53,54,41,-1,36,42,55,-1,55,48,36,-1,42,43,56,-1,56,55,42,-1,58,1,0,-1,0,57,58,-1,57,0,2,-1,2,59,57,-1,2,3,60,-1,60,59,2,-1,3,4,61,-1,61,60,3,-1,4,5,62,-1,62,61,4,-1,5,6,63,-1,63,62,5,-1,7,8,65,-1,65,64,7,-1,65,8,1,-1,1,58,65,-1,66,58,57,-1,57,67,66,-1,67,57,59,-1,59,68,67,-1,68,59,60,-1,60,69,68,-1,60,61,70,-1,70,69,60,-1,61,62,71,-1,71,70,61,-1,62,63,72,-1,72,71,62,-1,64,65,74,-1,74,73,64,-1,74,65,58,-1,58,66,74,-1,0,1,76,-1,76,75,0,-1,1,8,77,-1,77,76,1,-1,8,7,78,-1,78,77,8,-1,6,5,79,-1,79,78,6,-1,5,4,80,-1,80,79,5,-1,4,3,81,-1,81,80,4,-1,3,2,82,-1,82,81,3,-1,2,0,75,-1,75,82,2,-1,75,76,83,-1,76,77,83,-1,77,78,83,-1,78,79,83,-1,79,80,83,-1,80,81,83,-1,81,82,83,-1,82,75,83,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #130, 204 total numbers made up of 68 3-tuple values */
	this.Coordinate_11_130_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.9661),doubleToFloat(-8.7620),doubleToFloat(0.5723),doubleToFloat(0.3691),doubleToFloat(-8.8070),doubleToFloat(0.8458),doubleToFloat(1.4400),doubleToFloat(-8.7390),doubleToFloat(0.0794),doubleToFloat(1.1770),doubleToFloat(-8.7640),doubleToFloat(-0.6959),doubleToFloat(0.3923),doubleToFloat(-8.8050),doubleToFloat(-0.9469),doubleToFloat(-0.4545),doubleToFloat(-8.8520),doubleToFloat(-0.7258),doubleToFloat(-0.7400),doubleToFloat(-8.8770),doubleToFloat(0.0794),doubleToFloat(-0.2217),doubleToFloat(-8.8510),doubleToFloat(0.5842),doubleToFloat(-1.2680),doubleToFloat(-2.2560),doubleToFloat(0.0441),doubleToFloat(-0.9337),doubleToFloat(-2.1990),doubleToFloat(0.9113)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6666),doubleToFloat(-0.7114),doubleToFloat(1.9870),doubleToFloat(0.2221),doubleToFloat(0.8376),doubleToFloat(1.3870),doubleToFloat(1.2280),doubleToFloat(-1.7740),doubleToFloat(1.3440),doubleToFloat(0.0038),doubleToFloat(-2.0470),doubleToFloat(1.8240),doubleToFloat(0.6768),doubleToFloat(1.3550),doubleToFloat(0.0441),doubleToFloat(1.6230),doubleToFloat(-1.6730),doubleToFloat(0.0441),doubleToFloat(0.3035),doubleToFloat(1.0140),doubleToFloat(-1.1490),doubleToFloat(1.2780),doubleToFloat(-1.7640),doubleToFloat(-1.2650),doubleToFloat(0.0038),doubleToFloat(-2.0470),doubleToFloat(-1.6580),doubleToFloat(-1.1470),doubleToFloat(-1.0070),doubleToFloat(-1.0960)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9516),doubleToFloat(-2.2280),doubleToFloat(-1.0770),doubleToFloat(-1.1380),doubleToFloat(-1.0100),doubleToFloat(1.3270),doubleToFloat(-0.9371),doubleToFloat(-2.2250),doubleToFloat(1.2190),doubleToFloat(-1.5450),doubleToFloat(-1.2760),doubleToFloat(0.0441),doubleToFloat(-1.4360),doubleToFloat(-2.3120),doubleToFloat(0.0441),doubleToFloat(1.3960),doubleToFloat(-3.0870),doubleToFloat(1.2240),doubleToFloat(0.0972),doubleToFloat(-3.2670),doubleToFloat(1.6930),doubleToFloat(1.7750),doubleToFloat(-3.0140),doubleToFloat(0.0441),doubleToFloat(1.3990),doubleToFloat(-3.0860),doubleToFloat(-1.2000),doubleToFloat(0.0680),doubleToFloat(-3.2710),doubleToFloat(-1.5820)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8430),doubleToFloat(-3.4020),doubleToFloat(-0.9876),doubleToFloat(-1.3620),doubleToFloat(-3.4840),doubleToFloat(0.0441),doubleToFloat(-0.8365),doubleToFloat(-3.4100),doubleToFloat(1.1380),doubleToFloat(0.8808),doubleToFloat(0.0248),doubleToFloat(1.4370),doubleToFloat(1.3830),doubleToFloat(0.2791),doubleToFloat(0.0441),doubleToFloat(0.9257),doubleToFloat(0.0400),doubleToFloat(-1.2760),doubleToFloat(-0.6467),doubleToFloat(-0.7406),doubleToFloat(-1.7530),doubleToFloat(1.0490),doubleToFloat(-1.8090),doubleToFloat(0.9023),doubleToFloat(0.0038),doubleToFloat(-2.0470),doubleToFloat(1.4030),doubleToFloat(1.4670),doubleToFloat(-1.7270),doubleToFloat(0.0441)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0130),doubleToFloat(-1.8160),doubleToFloat(-0.9274),doubleToFloat(0.0038),doubleToFloat(-2.0470),doubleToFloat(-1.2290),doubleToFloat(-0.9641),doubleToFloat(-2.2050),doubleToFloat(-0.8538),doubleToFloat(0.9957),doubleToFloat(-8.4710),doubleToFloat(0.6167),doubleToFloat(0.3411),doubleToFloat(-8.5770),doubleToFloat(0.8687),doubleToFloat(1.3800),doubleToFloat(-8.2620),doubleToFloat(0.0794),doubleToFloat(1.0430),doubleToFloat(-8.1510),doubleToFloat(-0.7134),doubleToFloat(0.3626),doubleToFloat(-8.1060),doubleToFloat(-0.9169),doubleToFloat(-0.3881),doubleToFloat(-8.2840),doubleToFloat(-0.7019),doubleToFloat(-0.7159),doubleToFloat(-8.4270),doubleToFloat(0.0794)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.2943),doubleToFloat(-8.5110),doubleToFloat(0.6272),doubleToFloat(0.1724),doubleToFloat(-5.3120),doubleToFloat(1.1950),doubleToFloat(1.0810),doubleToFloat(-5.1230),doubleToFloat(0.8244),doubleToFloat(1.5140),doubleToFloat(-4.9940),doubleToFloat(0.0444),doubleToFloat(1.0870),doubleToFloat(-5.0340),doubleToFloat(-0.8020),doubleToFloat(0.1832),doubleToFloat(-5.1670),doubleToFloat(-1.1000),doubleToFloat(-0.6761),doubleToFloat(-5.2970),doubleToFloat(-0.7627),doubleToFloat(-1.0220),doubleToFloat(-5.3410),doubleToFloat(0.0444),doubleToFloat(-0.6140),doubleToFloat(-5.3990),doubleToFloat(0.8292),doubleToFloat(0.7598),doubleToFloat(-9.3190),doubleToFloat(0.3310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.3892),doubleToFloat(-9.3190),doubleToFloat(0.5008),doubleToFloat(0.0224),doubleToFloat(-9.3190),doubleToFloat(0.3384),doubleToFloat(-0.2912),doubleToFloat(-9.3190),doubleToFloat(0.0330),doubleToFloat(-0.1251),doubleToFloat(-9.3190),doubleToFloat(-0.4354),doubleToFloat(0.4037),doubleToFloat(-9.3190),doubleToFloat(-0.5735),doubleToFloat(0.8914),doubleToFloat(-9.3190),doubleToFloat(-0.4174),doubleToFloat(1.0450),doubleToFloat(-9.3190),doubleToFloat(0.0345),doubleToFloat(0.3857),doubleToFloat(-9.5010),doubleToFloat(-0.0357)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #131, 168 total numbers made up of 84 2-tuple values */
	this.TextureCoordinate_11_131_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1267),doubleToFloat(0.0803),doubleToFloat(0.1336),doubleToFloat(0.0759),doubleToFloat(0.1146),doubleToFloat(0.0819),doubleToFloat(0.1044),doubleToFloat(0.0809),doubleToFloat(0.0953),doubleToFloat(0.0780),doubleToFloat(0.0875),doubleToFloat(0.0710),doubleToFloat(0.0784),doubleToFloat(0.0630),doubleToFloat(0.1502),doubleToFloat(0.0604),doubleToFloat(0.1405),doubleToFloat(0.0696),doubleToFloat(0.1407),doubleToFloat(0.2117)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1584),doubleToFloat(0.2004),doubleToFloat(0.1172),doubleToFloat(0.2146),doubleToFloat(0.0883),doubleToFloat(0.2104),doubleToFloat(0.0713),doubleToFloat(0.2001),doubleToFloat(0.0628),doubleToFloat(0.1933),doubleToFloat(0.0431),doubleToFloat(0.1818),doubleToFloat(0.1731),doubleToFloat(0.1894),doubleToFloat(0.1934),doubleToFloat(0.1767),doubleToFloat(0.5197),doubleToFloat(0.0777),doubleToFloat(0.5114),doubleToFloat(0.0697)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5172),doubleToFloat(0.0468),doubleToFloat(0.5344),doubleToFloat(0.0576),doubleToFloat(0.4978),doubleToFloat(0.0694),doubleToFloat(0.4928),doubleToFloat(0.0440),doubleToFloat(0.4759),doubleToFloat(0.0792),doubleToFloat(0.4663),doubleToFloat(0.0566),doubleToFloat(0.4533),doubleToFloat(0.0705),doubleToFloat(0.4703),doubleToFloat(0.0979),doubleToFloat(0.4498),doubleToFloat(0.0814),doubleToFloat(0.5298),doubleToFloat(0.0885)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5459),doubleToFloat(0.0756),doubleToFloat(0.4692),doubleToFloat(0.1117),doubleToFloat(0.4455),doubleToFloat(0.1063),doubleToFloat(0.5551),doubleToFloat(0.1016),doubleToFloat(0.5299),doubleToFloat(0.1081),doubleToFloat(0.5243),doubleToFloat(0.0274),doubleToFloat(0.5471),doubleToFloat(0.0477),doubleToFloat(0.4898),doubleToFloat(0.0210),doubleToFloat(0.4541),doubleToFloat(0.0420),doubleToFloat(0.4392),doubleToFloat(0.0655)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4368),doubleToFloat(0.0771),doubleToFloat(0.4352),doubleToFloat(0.1061),doubleToFloat(0.5583),doubleToFloat(0.0704),doubleToFloat(0.5651),doubleToFloat(0.0993),doubleToFloat(0.5143),doubleToFloat(0.0582),doubleToFloat(0.4953),doubleToFloat(0.0567),doubleToFloat(0.4711),doubleToFloat(0.0679),doubleToFloat(0.4616),doubleToFloat(0.0791),doubleToFloat(0.5471),doubleToFloat(0.0477),doubleToFloat(0.5243),doubleToFloat(0.0274)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4898),doubleToFloat(0.0210),doubleToFloat(0.4541),doubleToFloat(0.0420),doubleToFloat(0.4392),doubleToFloat(0.0655),doubleToFloat(0.4368),doubleToFloat(0.0771),doubleToFloat(0.4352),doubleToFloat(0.1061),doubleToFloat(0.5583),doubleToFloat(0.0704),doubleToFloat(0.5651),doubleToFloat(0.0993),doubleToFloat(0.1337),doubleToFloat(0.1460),doubleToFloat(0.1460),doubleToFloat(0.1382),doubleToFloat(0.1159),doubleToFloat(0.1483)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0964),doubleToFloat(0.1457),doubleToFloat(0.0833),doubleToFloat(0.1391),doubleToFloat(0.0751),doubleToFloat(0.1321),doubleToFloat(0.0607),doubleToFloat(0.1224),doubleToFloat(0.1718),doubleToFloat(0.1185),doubleToFloat(0.1568),doubleToFloat(0.1295),doubleToFloat(0.1522),doubleToFloat(0.1693),doubleToFloat(0.1372),doubleToFloat(0.1789),doubleToFloat(0.1165),doubleToFloat(0.1814),doubleToFloat(0.0923),doubleToFloat(0.1780)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0773),doubleToFloat(0.1696),doubleToFloat(0.0690),doubleToFloat(0.1627),doubleToFloat(0.0519),doubleToFloat(0.1521),doubleToFloat(0.1826),doubleToFloat(0.1476),doubleToFloat(0.1649),doubleToFloat(0.1594),doubleToFloat(0.1267),doubleToFloat(0.0803),doubleToFloat(0.1336),doubleToFloat(0.0759),doubleToFloat(0.1405),doubleToFloat(0.0696),doubleToFloat(0.1502),doubleToFloat(0.0604),doubleToFloat(0.0875),doubleToFloat(0.0710)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0953),doubleToFloat(0.0780),doubleToFloat(0.1044),doubleToFloat(0.0809),doubleToFloat(0.1146),doubleToFloat(0.0819),doubleToFloat(0.1191),doubleToFloat(0.0747)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #139, 312 total numbers */
	this.IndexedFaceSet_11_139_coordIndex = new MFInt32(Java.to([31,30,8,-1,8,9,31,-1,29,10,8,-1,8,30,29,-1,27,11,10,-1,10,29,27,-1,27,28,12,-1,12,11,27,-1,34,13,12,-1,12,28,34,-1,33,14,13,-1,13,34,33,-1,32,31,9,-1,9,15,32,-1,32,15,14,-1,14,33,32,-1,18,16,9,-1,9,8,18,-1,19,18,8,-1,8,10,19,-1,20,19,10,-1,10,11,20,-1,21,20,11,-1,11,12,21,-1,22,21,12,-1,12,13,22,-1,14,23,22,-1,22,13,14,-1,16,17,15,-1,15,9,16,-1,15,17,23,-1,23,14,15,-1,18,24,16,-1,25,24,18,-1,18,19,25,-1,20,26,25,-1,25,19,20,-1,21,5,4,-1,4,26,21,-1,6,5,21,-1,21,22,6,-1,23,2,6,-1,6,22,23,-1,16,0,3,-1,3,17,16,-1,17,3,2,-1,2,23,17,-1,1,7,24,-1,24,25,1,-1,26,4,1,-1,1,25,26,-1,26,20,21,-1,24,7,0,-1,0,16,24,-1,28,27,36,-1,36,35,28,-1,27,29,37,-1,37,36,27,-1,29,30,38,-1,38,37,29,-1,30,31,39,-1,39,38,30,-1,31,32,40,-1,40,39,31,-1,32,33,41,-1,41,40,32,-1,33,34,42,-1,42,41,33,-1,34,28,35,-1,35,42,34,-1,35,36,43,-1,36,37,43,-1,37,38,43,-1,38,39,43,-1,39,40,43,-1,40,41,43,-1,41,42,43,-1,42,35,43,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #139, 312 total numbers */
	this.IndexedFaceSet_11_139_texCoordIndex = new MFInt32(Java.to([55,54,9,-1,9,11,55,-1,52,13,10,-1,10,53,52,-1,48,15,14,-1,14,51,48,-1,47,50,17,-1,17,16,47,-1,62,19,18,-1,18,49,62,-1,60,21,20,-1,20,61,60,-1,57,56,12,-1,12,23,57,-1,58,24,22,-1,22,59,58,-1,29,25,11,-1,11,9,29,-1,31,30,10,-1,10,13,31,-1,33,32,14,-1,14,15,33,-1,35,34,16,-1,16,17,35,-1,37,36,18,-1,18,19,37,-1,21,39,38,-1,38,20,21,-1,26,27,23,-1,23,12,26,-1,24,28,40,-1,40,22,24,-1,29,41,25,-1,43,42,30,-1,30,31,43,-1,33,45,44,-1,44,32,33,-1,35,4,3,-1,3,46,35,-1,5,4,36,-1,36,37,5,-1,39,6,5,-1,5,38,39,-1,26,1,7,-1,7,27,26,-1,28,7,8,-1,8,40,28,-1,2,0,42,-1,42,43,2,-1,45,3,2,-1,2,44,45,-1,46,34,35,-1,41,0,1,-1,1,25,41,-1,50,47,64,-1,64,63,50,-1,48,51,65,-1,65,64,48,-1,52,53,66,-1,66,65,52,-1,54,55,67,-1,67,66,54,-1,56,57,68,-1,68,67,56,-1,58,59,69,-1,69,68,58,-1,60,61,70,-1,70,69,60,-1,62,49,63,-1,63,70,62,-1,63,64,71,-1,64,65,71,-1,65,66,71,-1,66,67,71,-1,67,68,71,-1,68,69,71,-1,69,70,71,-1,70,63,71,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #139, 132 total numbers made up of 44 3-tuple values */
	this.Coordinate_12_139_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.1963),doubleToFloat(-6.2790),doubleToFloat(-0.4818),doubleToFloat(0.7359),doubleToFloat(-6.2760),doubleToFloat(0.0910),doubleToFloat(-0.3111),doubleToFloat(-6.2790),doubleToFloat(0.0771),doubleToFloat(-0.0631),doubleToFloat(-6.2790),doubleToFloat(-0.3075),doubleToFloat(0.4837),doubleToFloat(-6.2790),doubleToFloat(0.4237),doubleToFloat(0.2217),doubleToFloat(-6.2790),doubleToFloat(0.6188),doubleToFloat(-0.0720),doubleToFloat(-6.2790),doubleToFloat(0.4241),doubleToFloat(0.4969),doubleToFloat(-6.2790),doubleToFloat(-0.3118),doubleToFloat(0.6964),doubleToFloat(-0.6872),doubleToFloat(-0.5536),doubleToFloat(0.0513),doubleToFloat(-0.8287),doubleToFloat(-0.7608)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0370),doubleToFloat(-0.5528),doubleToFloat(0.1334),doubleToFloat(0.6719),doubleToFloat(-0.3823),doubleToFloat(0.6072),doubleToFloat(0.0567),doubleToFloat(-0.4045),doubleToFloat(0.8998),doubleToFloat(-0.5645),doubleToFloat(-0.4265),doubleToFloat(0.6026),doubleToFloat(-0.9906),doubleToFloat(-0.6215),doubleToFloat(0.1153),doubleToFloat(-0.6586),doubleToFloat(-0.7310),doubleToFloat(-0.5759),doubleToFloat(0.1082),doubleToFloat(-2.2010),doubleToFloat(-0.7417),doubleToFloat(-0.4350),doubleToFloat(-2.5570),doubleToFloat(-0.5481),doubleToFloat(0.7903),doubleToFloat(-1.8150),doubleToFloat(-0.5458),doubleToFloat(1.0930),doubleToFloat(-1.8270),doubleToFloat(0.1068)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.7473),doubleToFloat(-1.8970),doubleToFloat(0.6147),doubleToFloat(0.1257),doubleToFloat(-2.2010),doubleToFloat(0.8868),doubleToFloat(-0.3647),doubleToFloat(-2.5570),doubleToFloat(0.5714),doubleToFloat(-0.7182),doubleToFloat(-2.7990),doubleToFloat(0.0724),doubleToFloat(0.7313),doubleToFloat(-2.9910),doubleToFloat(-0.4881),doubleToFloat(0.9561),doubleToFloat(-3.4670),doubleToFloat(0.0896),doubleToFloat(0.6806),doubleToFloat(-2.9180),doubleToFloat(0.5989),doubleToFloat(0.6136),doubleToFloat(-0.0062),doubleToFloat(0.6194),doubleToFloat(0.0166),doubleToFloat(-0.0513),doubleToFloat(0.8929),doubleToFloat(1.0870),doubleToFloat(0.0162),doubleToFloat(0.1265)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8241),doubleToFloat(-0.0086),doubleToFloat(-0.6488),doubleToFloat(0.0398),doubleToFloat(-0.0498),doubleToFloat(-0.8998),doubleToFloat(-0.8070),doubleToFloat(-0.0962),doubleToFloat(-0.6787),doubleToFloat(-1.0930),doubleToFloat(-0.1211),doubleToFloat(0.1265),doubleToFloat(-0.5742),doubleToFloat(-0.0952),doubleToFloat(0.6313),doubleToFloat(-0.0101),doubleToFloat(0.5137),doubleToFloat(0.6957),doubleToFloat(0.4752),doubleToFloat(0.5137),doubleToFloat(0.4734),doubleToFloat(0.8472),doubleToFloat(0.5137),doubleToFloat(0.0864),doubleToFloat(0.6477),doubleToFloat(0.5137),doubleToFloat(-0.5016),doubleToFloat(0.0090),doubleToFloat(0.5137),doubleToFloat(-0.7060)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6839),doubleToFloat(0.5137),doubleToFloat(-0.5251),doubleToFloat(-0.8999),doubleToFloat(0.5137),doubleToFloat(0.0842),doubleToFloat(-0.4904),doubleToFloat(0.5137),doubleToFloat(0.4830),doubleToFloat(-0.0139),doubleToFloat(0.7948),doubleToFloat(0.0042)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #140, 144 total numbers made up of 72 2-tuple values */
	this.TextureCoordinate_12_140_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1769),doubleToFloat(0.0543),doubleToFloat(0.1836),doubleToFloat(0.0527),doubleToFloat(0.1653),doubleToFloat(0.0588),doubleToFloat(0.1588),doubleToFloat(0.0580),doubleToFloat(0.1501),doubleToFloat(0.0578),doubleToFloat(0.1384),doubleToFloat(0.0565),doubleToFloat(0.1280),doubleToFloat(0.0534),doubleToFloat(0.1917),doubleToFloat(0.0541),doubleToFloat(0.2019),doubleToFloat(0.0495),doubleToFloat(0.1840),doubleToFloat(0.1235)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1842),doubleToFloat(0.1235),doubleToFloat(0.1926),doubleToFloat(0.1217),doubleToFloat(0.1925),doubleToFloat(0.1213),doubleToFloat(0.1699),doubleToFloat(0.1260),doubleToFloat(0.1699),doubleToFloat(0.1260),doubleToFloat(0.1590),doubleToFloat(0.1262),doubleToFloat(0.1588),doubleToFloat(0.1262),doubleToFloat(0.1472),doubleToFloat(0.1262),doubleToFloat(0.1471),doubleToFloat(0.1264),doubleToFloat(0.1345),doubleToFloat(0.1260)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1344),doubleToFloat(0.1265),doubleToFloat(0.1212),doubleToFloat(0.1264),doubleToFloat(0.2163),doubleToFloat(0.1209),doubleToFloat(0.2014),doubleToFloat(0.1216),doubleToFloat(0.2007),doubleToFloat(0.1217),doubleToFloat(0.1881),doubleToFloat(0.0872),doubleToFloat(0.1880),doubleToFloat(0.0870),doubleToFloat(0.1965),doubleToFloat(0.0879),doubleToFloat(0.1962),doubleToFloat(0.0879),doubleToFloat(0.1805),doubleToFloat(0.0889)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1805),doubleToFloat(0.0889),doubleToFloat(0.1676),doubleToFloat(0.0924),doubleToFloat(0.1676),doubleToFloat(0.0924),doubleToFloat(0.1589),doubleToFloat(0.0921),doubleToFloat(0.1588),doubleToFloat(0.0921),doubleToFloat(0.1487),doubleToFloat(0.0920),doubleToFloat(0.1486),doubleToFloat(0.0921),doubleToFloat(0.1365),doubleToFloat(0.0913),doubleToFloat(0.1364),doubleToFloat(0.0916),doubleToFloat(0.1246),doubleToFloat(0.0899)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2091),doubleToFloat(0.0852),doubleToFloat(0.1787),doubleToFloat(0.0716),doubleToFloat(0.1787),doubleToFloat(0.0716),doubleToFloat(0.1664),doubleToFloat(0.0756),doubleToFloat(0.1664),doubleToFloat(0.0756),doubleToFloat(0.1589),doubleToFloat(0.0751),doubleToFloat(0.1588),doubleToFloat(0.0751),doubleToFloat(0.1587),doubleToFloat(0.1943),doubleToFloat(0.1592),doubleToFloat(0.1943),doubleToFloat(0.1442),doubleToFloat(0.1950)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1444),doubleToFloat(0.1945),doubleToFloat(0.1745),doubleToFloat(0.1932),doubleToFloat(0.1745),doubleToFloat(0.1933),doubleToFloat(0.1915),doubleToFloat(0.1926),doubleToFloat(0.1911),doubleToFloat(0.1928),doubleToFloat(0.2015),doubleToFloat(0.1906),doubleToFloat(0.2013),doubleToFloat(0.1900),doubleToFloat(0.2111),doubleToFloat(0.1891),doubleToFloat(0.2098),doubleToFloat(0.1892),doubleToFloat(0.2308),doubleToFloat(0.1922)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1143),doubleToFloat(0.1994),doubleToFloat(0.1304),doubleToFloat(0.1965),doubleToFloat(0.1306),doubleToFloat(0.1955),doubleToFloat(0.1442),doubleToFloat(0.1950),doubleToFloat(0.1587),doubleToFloat(0.1943),doubleToFloat(0.1745),doubleToFloat(0.1932),doubleToFloat(0.1915),doubleToFloat(0.1926),doubleToFloat(0.2015),doubleToFloat(0.1906),doubleToFloat(0.2111),doubleToFloat(0.1891),doubleToFloat(0.2308),doubleToFloat(0.1922)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1304),doubleToFloat(0.1965),doubleToFloat(0.1803),doubleToFloat(0.1929)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #148, 704 total numbers */
	this.IndexedFaceSet_12_148_coordIndex = new MFInt32(Java.to([14,17,18,-1,18,13,14,-1,12,19,20,-1,20,11,12,-1,4,8,6,-1,6,0,4,-1,10,21,22,-1,22,9,10,-1,16,18,17,-1,17,15,16,-1,2,6,8,-1,8,5,2,-1,13,20,19,-1,19,14,13,-1,3,5,8,-1,8,7,3,-1,15,22,21,-1,21,16,15,-1,8,4,1,-1,1,7,8,-1,2,5,17,-1,17,14,2,-1,18,32,28,-1,28,13,18,-1,12,0,6,-1,6,19,12,-1,20,35,24,-1,24,11,20,-1,10,26,36,-1,36,21,10,-1,22,7,1,-1,1,9,22,-1,30,32,18,-1,18,16,30,-1,17,5,3,-1,3,15,17,-1,28,35,20,-1,20,13,28,-1,19,6,2,-1,2,14,19,-1,3,7,22,-1,22,15,3,-1,21,36,30,-1,30,16,21,-1,28,32,33,-1,33,27,28,-1,24,35,34,-1,34,23,24,-1,25,37,36,-1,36,26,25,-1,30,29,33,-1,33,32,30,-1,31,23,34,-1,34,38,31,-1,29,37,38,-1,38,33,29,-1,28,27,34,-1,34,35,28,-1,29,30,36,-1,36,37,29,-1,27,33,38,-1,38,34,27,-1,31,38,37,-1,37,25,31,-1,73,44,43,-1,43,39,73,-1,40,46,45,-1,45,41,40,-1,42,39,43,-1,43,48,42,-1,47,60,41,-1,41,45,47,-1,42,48,46,-1,46,40,42,-1,9,1,50,-1,50,52,9,-1,4,0,49,-1,49,51,4,-1,11,24,57,-1,57,64,11,-1,1,4,51,-1,51,50,1,-1,10,9,52,-1,52,53,10,-1,26,10,53,-1,53,74,26,-1,0,12,76,-1,76,49,0,-1,31,25,67,-1,67,61,31,-1,25,26,74,-1,74,67,25,-1,24,23,54,-1,54,57,24,-1,23,31,61,-1,61,54,23,-1,54,55,57,-1,39,42,56,-1,56,55,39,-1,42,40,58,-1,58,56,42,-1,40,41,59,-1,59,58,40,-1,59,41,60,-1,60,61,59,-1,61,60,73,-1,73,54,61,-1,57,55,62,-1,62,64,57,-1,55,56,63,-1,63,62,55,-1,56,58,65,-1,65,63,56,-1,58,59,66,-1,66,65,58,-1,59,61,66,-1,52,50,69,-1,69,71,52,-1,51,49,68,-1,68,70,51,-1,50,51,70,-1,70,69,50,-1,53,52,71,-1,71,72,53,-1,76,77,68,-1,68,49,76,-1,74,75,66,-1,66,67,74,-1,78,79,71,-1,71,69,78,-1,79,80,72,-1,72,71,79,-1,87,75,72,-1,72,80,87,-1,81,82,65,-1,65,66,81,-1,82,83,63,-1,63,65,82,-1,83,84,62,-1,62,63,83,-1,88,77,62,-1,62,84,88,-1,85,86,70,-1,70,68,85,-1,86,78,69,-1,69,70,86,-1,60,47,44,-1,44,73,60,-1,54,73,39,-1,39,55,54,-1,74,53,72,-1,72,75,74,-1,81,66,75,-1,75,87,81,-1,61,67,66,-1,64,62,77,-1,77,76,64,-1,85,68,77,-1,77,88,85,-1,12,11,64,-1,64,76,12,-1,47,45,46,-1,46,48,47,-1,47,48,43,-1,43,44,47,-1,79,78,89,-1,78,86,89,-1,86,85,89,-1,85,88,89,-1,88,84,89,-1,84,83,89,-1,83,82,89,-1,82,81,89,-1,81,87,89,-1,87,80,89,-1,80,79,89,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #148, 704 total numbers */
	this.IndexedFaceSet_12_148_texCoordIndex = new MFInt32(Java.to([1,2,3,-1,3,0,1,-1,5,6,7,-1,7,4,5,-1,9,10,11,-1,11,8,9,-1,13,14,15,-1,15,12,13,-1,17,96,95,-1,95,16,17,-1,19,11,10,-1,10,18,19,-1,0,7,6,-1,6,1,0,-1,21,99,98,-1,98,20,21,-1,16,15,14,-1,14,17,16,-1,98,97,22,-1,22,20,98,-1,19,18,2,-1,2,1,19,-1,3,23,24,-1,24,0,3,-1,5,8,11,-1,11,6,5,-1,7,25,26,-1,26,4,7,-1,13,27,28,-1,28,14,13,-1,15,20,22,-1,22,12,15,-1,29,100,96,-1,96,17,29,-1,95,99,21,-1,21,16,95,-1,24,25,7,-1,7,0,24,-1,6,11,19,-1,19,1,6,-1,21,20,15,-1,15,16,21,-1,14,28,29,-1,29,17,14,-1,24,23,31,-1,31,30,24,-1,26,25,33,-1,33,32,26,-1,34,35,28,-1,28,27,34,-1,29,36,101,-1,101,100,29,-1,37,32,33,-1,33,39,37,-1,36,35,38,-1,38,101,36,-1,24,30,33,-1,33,25,24,-1,36,29,28,-1,28,35,36,-1,30,31,39,-1,39,33,30,-1,102,38,35,-1,35,34,102,-1,41,42,47,-1,47,40,41,-1,44,45,46,-1,46,43,44,-1,48,40,47,-1,47,53,48,-1,49,50,43,-1,43,46,49,-1,103,104,45,-1,45,44,103,-1,12,22,51,-1,51,52,12,-1,9,8,54,-1,54,55,9,-1,4,26,56,-1,56,59,4,-1,22,97,105,-1,105,51,22,-1,13,12,52,-1,52,57,13,-1,27,13,57,-1,57,58,27,-1,8,5,62,-1,62,54,8,-1,102,34,60,-1,60,61,102,-1,34,27,58,-1,58,60,34,-1,26,32,63,-1,63,56,26,-1,32,37,64,-1,64,63,32,-1,63,67,56,-1,40,48,68,-1,68,67,40,-1,103,44,65,-1,65,106,103,-1,44,43,66,-1,66,65,44,-1,66,43,50,-1,50,61,66,-1,64,73,41,-1,41,63,64,-1,56,67,74,-1,74,59,56,-1,67,68,76,-1,76,74,67,-1,106,65,69,-1,69,107,106,-1,65,66,70,-1,70,69,65,-1,66,61,70,-1,52,51,71,-1,71,72,52,-1,55,54,85,-1,85,86,55,-1,51,105,108,-1,108,71,51,-1,57,52,72,-1,72,75,57,-1,62,87,85,-1,85,54,62,-1,58,77,70,-1,70,60,58,-1,78,79,72,-1,72,71,78,-1,79,80,75,-1,75,72,79,-1,81,77,75,-1,75,80,81,-1,82,83,69,-1,69,70,82,-1,83,84,107,-1,107,69,83,-1,88,89,74,-1,74,76,88,-1,90,87,74,-1,74,89,90,-1,91,92,86,-1,86,85,91,-1,109,78,71,-1,71,108,109,-1,73,93,42,-1,42,41,73,-1,63,41,40,-1,40,67,63,-1,58,57,75,-1,75,77,58,-1,82,70,77,-1,77,81,82,-1,61,60,70,-1,59,74,87,-1,87,62,59,-1,91,85,87,-1,87,90,91,-1,5,4,59,-1,59,62,5,-1,49,46,45,-1,45,104,49,-1,93,53,47,-1,47,42,93,-1,79,78,110,-1,78,109,110,-1,92,91,94,-1,91,90,94,-1,90,89,94,-1,89,88,94,-1,84,83,110,-1,83,82,110,-1,82,81,110,-1,81,80,110,-1,80,79,110,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #148, 270 total numbers made up of 90 3-tuple values */
	this.Coordinate_13_148_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4307),doubleToFloat(-2.7920),doubleToFloat(-1.3210),doubleToFloat(0.1513),doubleToFloat(-2.5050),doubleToFloat(-1.4970),doubleToFloat(-0.2320),doubleToFloat(-3.8180),doubleToFloat(-1.2940),doubleToFloat(0.1222),doubleToFloat(-4.0170),doubleToFloat(-1.4490),doubleToFloat(-0.1992),doubleToFloat(-2.5740),doubleToFloat(-1.5030),doubleToFloat(-0.1109),doubleToFloat(-4.0650),doubleToFloat(-1.4020),doubleToFloat(-0.3219),doubleToFloat(-3.4360),doubleToFloat(-1.3290),doubleToFloat(0.2155),doubleToFloat(-3.6030),doubleToFloat(-1.5560),doubleToFloat(-0.0702),doubleToFloat(-3.5460),doubleToFloat(-1.5320),doubleToFloat(0.5685),doubleToFloat(-2.6320),doubleToFloat(-1.0380)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8124),doubleToFloat(-2.7640),doubleToFloat(-0.5453),doubleToFloat(-0.1335),doubleToFloat(-3.0950),doubleToFloat(-0.4172),doubleToFloat(-0.2840),doubleToFloat(-2.9630),doubleToFloat(-0.9225),doubleToFloat(0.1662),doubleToFloat(-4.4360),doubleToFloat(-0.5193),doubleToFloat(0.0023),doubleToFloat(-4.1790),doubleToFloat(-0.9935),doubleToFloat(0.5002),doubleToFloat(-4.3730),doubleToFloat(-1.0270),doubleToFloat(0.6280),doubleToFloat(-4.5510),doubleToFloat(-0.5638),doubleToFloat(0.2724),doubleToFloat(-4.4200),doubleToFloat(-0.9757),doubleToFloat(0.4206),doubleToFloat(-4.6160),doubleToFloat(-0.5244),doubleToFloat(-0.1039),doubleToFloat(-3.7440),doubleToFloat(-0.9131)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0779),doubleToFloat(-3.9090),doubleToFloat(-0.4984),doubleToFloat(0.8118),doubleToFloat(-4.1640),doubleToFloat(-0.5879),doubleToFloat(0.6283),doubleToFloat(-3.9510),doubleToFloat(-1.0850),doubleToFloat(0.0997),doubleToFloat(-2.9470),doubleToFloat(0.8074),doubleToFloat(0.0043),doubleToFloat(-3.0380),doubleToFloat(0.1236),doubleToFloat(0.7423),doubleToFloat(-2.8280),doubleToFloat(0.7500),doubleToFloat(0.8459),doubleToFloat(-2.8530),doubleToFloat(0.0687),doubleToFloat(0.0360),doubleToFloat(-4.4120),doubleToFloat(0.5685),doubleToFloat(0.1506),doubleToFloat(-4.4850),doubleToFloat(0.0302),doubleToFloat(0.4657),doubleToFloat(-4.4690),doubleToFloat(0.6100)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.5706),doubleToFloat(-4.5670),doubleToFloat(0.0069),doubleToFloat(0.4913),doubleToFloat(-2.8240),doubleToFloat(0.8611),doubleToFloat(0.3733),doubleToFloat(-4.6050),doubleToFloat(0.0300),doubleToFloat(0.2282),doubleToFloat(-4.5120),doubleToFloat(0.6452),doubleToFloat(0.0292),doubleToFloat(-3.9720),doubleToFloat(0.6062),doubleToFloat(0.0966),doubleToFloat(-3.9990),doubleToFloat(0.0929),doubleToFloat(0.7363),doubleToFloat(-4.1460),doubleToFloat(0.0646),doubleToFloat(0.6199),doubleToFloat(-4.0350),doubleToFloat(0.6434),doubleToFloat(0.3474),doubleToFloat(-3.9710),doubleToFloat(0.7410),doubleToFloat(-0.6986),doubleToFloat(-1.9930),doubleToFloat(0.9512)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6000),doubleToFloat(-1.9180),doubleToFloat(1.2970),doubleToFloat(-0.2502),doubleToFloat(-2.0680),doubleToFloat(1.4000),doubleToFloat(-0.8459),doubleToFloat(-1.8950),doubleToFloat(1.0440),doubleToFloat(-0.6762),doubleToFloat(-2.6920),doubleToFloat(1.1710),doubleToFloat(-0.5040),doubleToFloat(-2.8150),doubleToFloat(1.2750),doubleToFloat(-0.4412),doubleToFloat(-2.7250),doubleToFloat(1.5560),doubleToFloat(-0.5842),doubleToFloat(-2.6400),doubleToFloat(1.4930),doubleToFloat(-0.4651),doubleToFloat(-2.8290),doubleToFloat(1.4240),doubleToFloat(-0.7307),doubleToFloat(-2.6260),doubleToFloat(1.3400),doubleToFloat(-0.6122),doubleToFloat(-1.5180),doubleToFloat(-1.1930)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.1549),doubleToFloat(-1.4850),doubleToFloat(-1.3470),doubleToFloat(-0.3480),doubleToFloat(-1.5520),doubleToFloat(-1.3700),doubleToFloat(0.5385),doubleToFloat(-1.6480),doubleToFloat(-0.9214),doubleToFloat(0.7721),doubleToFloat(-1.6170),doubleToFloat(-0.4592),doubleToFloat(-0.2101),doubleToFloat(-1.7540),doubleToFloat(0.7080),doubleToFloat(-0.6262),doubleToFloat(-1.2300),doubleToFloat(0.4608),doubleToFloat(-0.7618),doubleToFloat(-1.0000),doubleToFloat(0.7066),doubleToFloat(-0.2822),doubleToFloat(-2.1630),doubleToFloat(0.1810),doubleToFloat(-0.4444),doubleToFloat(-0.9442),doubleToFloat(0.9382),doubleToFloat(-0.0520),doubleToFloat(-1.1090),doubleToFloat(1.0380)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.2067),doubleToFloat(-2.1680),doubleToFloat(1.2400),doubleToFloat(0.1751),doubleToFloat(-1.3960),doubleToFloat(0.8147),doubleToFloat(-0.7098),doubleToFloat(-0.5191),doubleToFloat(-0.0912),doubleToFloat(-0.6941),doubleToFloat(-0.3991),doubleToFloat(0.3487),doubleToFloat(-0.4421),doubleToFloat(-2.1960),doubleToFloat(-0.3496),doubleToFloat(-0.2779),doubleToFloat(-0.3129),doubleToFloat(0.5309),doubleToFloat(0.1742),doubleToFloat(-0.3399),doubleToFloat(0.4446),doubleToFloat(0.5488),doubleToFloat(-1.5870),doubleToFloat(0.6972),doubleToFloat(-0.7534),doubleToFloat(-0.5856),doubleToFloat(-1.0150),doubleToFloat(0.0880),doubleToFloat(-0.6020),doubleToFloat(-1.1930)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4178),doubleToFloat(-0.6986),doubleToFloat(-1.2120),doubleToFloat(0.5383),doubleToFloat(-0.5280),doubleToFloat(-0.8157),doubleToFloat(0.4897),doubleToFloat(-0.4967),doubleToFloat(-0.4368),doubleToFloat(-0.3465),doubleToFloat(-2.1520),doubleToFloat(0.9912),doubleToFloat(0.7623),doubleToFloat(-1.6590),doubleToFloat(0.1694),doubleToFloat(0.4626),doubleToFloat(-0.4640),doubleToFloat(0.1031),doubleToFloat(-0.5113),doubleToFloat(-1.9550),doubleToFloat(-0.8705),doubleToFloat(-0.6907),doubleToFloat(-0.5756),doubleToFloat(-0.7157),doubleToFloat(-0.1449),doubleToFloat(0.0019),doubleToFloat(-0.8194),doubleToFloat(0.1078),doubleToFloat(0.0814),doubleToFloat(-0.7022)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.2766),doubleToFloat(0.0814),doubleToFloat(-0.3074),doubleToFloat(-0.0285),doubleToFloat(-0.0069),doubleToFloat(0.1675),doubleToFloat(-0.1933),doubleToFloat(0.0814),doubleToFloat(0.2306),doubleToFloat(-0.5071),doubleToFloat(0.0814),doubleToFloat(-0.0008),doubleToFloat(-0.5617),doubleToFloat(0.0814),doubleToFloat(-0.2158),doubleToFloat(-0.5968),doubleToFloat(0.0333),doubleToFloat(-0.7657),doubleToFloat(-0.4210),doubleToFloat(0.0814),doubleToFloat(-0.8752),doubleToFloat(0.1516),doubleToFloat(-0.0094),doubleToFloat(0.0281),doubleToFloat(-0.6464),doubleToFloat(0.0357),doubleToFloat(-0.4977),doubleToFloat(-0.1460),doubleToFloat(0.3617),doubleToFloat(-0.3198)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #149, 222 total numbers made up of 111 2-tuple values */
	this.TextureCoordinate_13_149_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4525),doubleToFloat(0.1080),doubleToFloat(0.4381),doubleToFloat(0.1111),doubleToFloat(0.4410),doubleToFloat(0.1030),doubleToFloat(0.4540),doubleToFloat(0.1007),doubleToFloat(0.4476),doubleToFloat(0.1397),doubleToFloat(0.4329),doubleToFloat(0.1393),doubleToFloat(0.4377),doubleToFloat(0.1216),doubleToFloat(0.4502),doubleToFloat(0.1202),doubleToFloat(0.4209),doubleToFloat(0.1405),doubleToFloat(0.4121),doubleToFloat(0.1424)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4179),doubleToFloat(0.1206),doubleToFloat(0.4243),doubleToFloat(0.1263),doubleToFloat(0.6115),doubleToFloat(0.1686),doubleToFloat(0.5969),doubleToFloat(0.1669),doubleToFloat(0.5946),doubleToFloat(0.1365),doubleToFloat(0.6082),doubleToFloat(0.1398),doubleToFloat(0.6070),doubleToFloat(0.1302),doubleToFloat(0.5938),doubleToFloat(0.1274),doubleToFloat(0.4261),doubleToFloat(0.1111),doubleToFloat(0.4273),doubleToFloat(0.1179)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6243),doubleToFloat(0.1459),doubleToFloat(0.6223),doubleToFloat(0.1363),doubleToFloat(0.6274),doubleToFloat(0.1705),doubleToFloat(0.4684),doubleToFloat(0.1045),doubleToFloat(0.4670),doubleToFloat(0.1105),doubleToFloat(0.4660),doubleToFloat(0.1219),doubleToFloat(0.4622),doubleToFloat(0.1442),doubleToFloat(0.5805),doubleToFloat(0.1668),doubleToFloat(0.5779),doubleToFloat(0.1383),doubleToFloat(0.5784),doubleToFloat(0.1280)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4804),doubleToFloat(0.1157),doubleToFloat(0.4844),doubleToFloat(0.1124),doubleToFloat(0.4797),doubleToFloat(0.1490),doubleToFloat(0.4793),doubleToFloat(0.1251),doubleToFloat(0.5625),doubleToFloat(0.1698),doubleToFloat(0.5629),doubleToFloat(0.1425),doubleToFloat(0.5626),doubleToFloat(0.1324),doubleToFloat(0.4888),doubleToFloat(0.1512),doubleToFloat(0.5559),doubleToFloat(0.1428),doubleToFloat(0.4878),doubleToFloat(0.1256)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4786),doubleToFloat(0.1985),doubleToFloat(0.4825),doubleToFloat(0.1924),doubleToFloat(0.4997),doubleToFloat(0.1956),doubleToFloat(0.5351),doubleToFloat(0.2088),doubleToFloat(0.5335),doubleToFloat(0.2180),doubleToFloat(0.5204),doubleToFloat(0.2076),doubleToFloat(0.5208),doubleToFloat(0.2040),doubleToFloat(0.4954),doubleToFloat(0.1985),doubleToFloat(0.4777),doubleToFloat(0.2028),doubleToFloat(0.5187),doubleToFloat(0.2019)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5361),doubleToFloat(0.2041),doubleToFloat(0.6252),doubleToFloat(0.1939),doubleToFloat(0.6107),doubleToFloat(0.1902),doubleToFloat(0.4971),doubleToFloat(0.2024),doubleToFloat(0.4160),doubleToFloat(0.1694),doubleToFloat(0.4086),doubleToFloat(0.1660),doubleToFloat(0.4589),doubleToFloat(0.1659),doubleToFloat(0.5975),doubleToFloat(0.1916),doubleToFloat(0.5809),doubleToFloat(0.1929),doubleToFloat(0.4436),doubleToFloat(0.1613)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5665),doubleToFloat(0.1978),doubleToFloat(0.5594),doubleToFloat(0.2064),doubleToFloat(0.4278),doubleToFloat(0.1622),doubleToFloat(0.4728),doubleToFloat(0.1797),doubleToFloat(0.4819),doubleToFloat(0.1772),doubleToFloat(0.5550),doubleToFloat(0.2286),doubleToFloat(0.5566),doubleToFloat(0.2176),doubleToFloat(0.4574),doubleToFloat(0.1901),doubleToFloat(0.4580),doubleToFloat(0.1987),doubleToFloat(0.5717),doubleToFloat(0.2352)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5770),doubleToFloat(0.2271),doubleToFloat(0.6219),doubleToFloat(0.2141),doubleToFloat(0.6089),doubleToFloat(0.2102),doubleToFloat(0.4875),doubleToFloat(0.1905),doubleToFloat(0.4367),doubleToFloat(0.2003),doubleToFloat(0.6006),doubleToFloat(0.2164),doubleToFloat(0.4461),doubleToFloat(0.2073),doubleToFloat(0.5875),doubleToFloat(0.2190),doubleToFloat(0.6163),doubleToFloat(0.2342),doubleToFloat(0.6088),doubleToFloat(0.2316)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6022),doubleToFloat(0.2309),doubleToFloat(0.5955),doubleToFloat(0.2329),doubleToFloat(0.5900),doubleToFloat(0.2339),doubleToFloat(0.5857),doubleToFloat(0.2403),doubleToFloat(0.5872),doubleToFloat(0.2503),doubleToFloat(0.4139),doubleToFloat(0.1908),doubleToFloat(0.4051),doubleToFloat(0.1865),doubleToFloat(0.4215),doubleToFloat(0.1933),doubleToFloat(0.4326),doubleToFloat(0.2191),doubleToFloat(0.4267),doubleToFloat(0.2163)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4205),doubleToFloat(0.2125),doubleToFloat(0.4142),doubleToFloat(0.2104),doubleToFloat(0.4085),doubleToFloat(0.2117),doubleToFloat(0.5031),doubleToFloat(0.1948),doubleToFloat(0.4194),doubleToFloat(0.2265),doubleToFloat(0.6089),doubleToFloat(0.1253),doubleToFloat(0.5935),doubleToFloat(0.1226),doubleToFloat(0.6357),doubleToFloat(0.1691),doubleToFloat(0.6309),doubleToFloat(0.1456),doubleToFloat(0.6262),doubleToFloat(0.1324)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5767),doubleToFloat(0.1236),doubleToFloat(0.5588),doubleToFloat(0.1287),doubleToFloat(0.5561),doubleToFloat(0.1709),doubleToFloat(0.5309),doubleToFloat(0.2265),doubleToFloat(0.5174),doubleToFloat(0.2117),doubleToFloat(0.6371),doubleToFloat(0.1946),doubleToFloat(0.5513),doubleToFloat(0.2380),doubleToFloat(0.5677),doubleToFloat(0.2471),doubleToFloat(0.6333),doubleToFloat(0.2166),doubleToFloat(0.6204),doubleToFloat(0.2388)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6020),doubleToFloat(0.2424)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #160, 504 total numbers */
	this.IndexedFaceSet_10_160_coordIndex = new MFInt32(Java.to([38,37,52,-1,52,51,38,-1,37,39,53,-1,53,52,37,-1,40,54,53,-1,53,39,40,-1,41,55,54,-1,54,40,41,-1,42,56,55,-1,55,41,42,-1,8,57,56,-1,56,42,8,-1,9,58,57,-1,57,8,9,-1,9,38,51,-1,51,58,9,-1,10,11,33,-1,11,14,34,-1,34,33,11,-1,34,14,16,-1,16,35,34,-1,16,36,35,-1,36,19,20,-1,20,18,36,-1,23,24,20,-1,20,19,23,-1,22,24,23,-1,23,21,22,-1,13,12,25,-1,25,26,13,-1,12,15,27,-1,27,25,12,-1,15,17,28,-1,28,27,15,-1,17,18,29,-1,29,28,17,-1,18,20,30,-1,30,29,18,-1,20,24,31,-1,31,30,20,-1,22,13,26,-1,26,32,22,-1,24,22,32,-1,32,31,24,-1,10,33,12,-1,12,13,10,-1,33,34,15,-1,15,12,33,-1,15,34,35,-1,35,17,15,-1,17,35,36,-1,36,18,17,-1,21,10,13,-1,13,22,21,-1,25,37,38,-1,38,26,25,-1,27,39,37,-1,37,25,27,-1,28,40,39,-1,39,27,28,-1,29,41,40,-1,40,28,29,-1,30,42,41,-1,41,29,30,-1,31,8,42,-1,42,30,31,-1,26,38,9,-1,9,32,26,-1,32,9,8,-1,8,31,32,-1,44,43,0,-1,0,1,44,-1,43,45,2,-1,2,0,43,-1,2,45,46,-1,46,3,2,-1,3,46,47,-1,47,4,3,-1,4,47,48,-1,48,5,4,-1,5,48,49,-1,49,6,5,-1,6,49,50,-1,50,7,6,-1,50,44,1,-1,1,7,50,-1,51,52,43,-1,43,44,51,-1,52,53,45,-1,45,43,52,-1,53,54,46,-1,46,45,53,-1,46,54,55,-1,55,47,46,-1,47,55,56,-1,56,48,47,-1,48,56,57,-1,57,49,48,-1,49,57,58,-1,58,50,49,-1,58,51,44,-1,44,50,58,-1,0,59,60,-1,60,1,0,-1,1,60,61,-1,61,7,1,-1,7,61,62,-1,62,6,7,-1,6,62,63,-1,63,5,6,-1,5,63,64,-1,64,4,5,-1,4,64,65,-1,65,3,4,-1,3,65,66,-1,66,2,3,-1,2,66,59,-1,59,0,2,-1,59,67,60,-1,60,67,61,-1,61,67,62,-1,62,67,63,-1,63,67,64,-1,64,67,65,-1,65,67,66,-1,66,67,59,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #160, 504 total numbers */
	this.IndexedFaceSet_10_160_texCoordIndex = new MFInt32(Java.to([10,9,67,-1,67,66,10,-1,9,11,68,-1,68,67,9,-1,12,69,68,-1,68,11,12,-1,13,70,69,-1,69,12,13,-1,14,71,70,-1,70,13,14,-1,15,72,71,-1,71,14,15,-1,16,74,73,-1,73,17,16,-1,16,10,66,-1,66,74,16,-1,18,19,44,-1,19,22,45,-1,45,44,19,-1,45,22,24,-1,24,46,45,-1,24,47,46,-1,47,27,28,-1,28,26,47,-1,31,32,28,-1,28,27,31,-1,30,33,34,-1,34,29,30,-1,21,20,35,-1,35,36,21,-1,20,23,37,-1,37,35,20,-1,23,25,38,-1,38,37,23,-1,25,26,39,-1,39,38,25,-1,26,28,40,-1,40,39,26,-1,28,32,41,-1,41,40,28,-1,30,21,36,-1,36,42,30,-1,33,30,42,-1,42,43,33,-1,18,44,20,-1,20,21,18,-1,44,45,23,-1,23,20,44,-1,23,45,46,-1,46,25,23,-1,25,46,47,-1,47,26,25,-1,29,18,21,-1,21,30,29,-1,35,49,48,-1,48,36,35,-1,37,50,49,-1,49,35,37,-1,38,51,50,-1,50,37,38,-1,39,52,51,-1,51,38,39,-1,40,53,52,-1,52,39,40,-1,41,54,53,-1,53,40,41,-1,36,48,55,-1,55,42,36,-1,42,55,56,-1,56,43,42,-1,58,57,0,-1,0,1,58,-1,57,59,2,-1,2,0,57,-1,2,59,60,-1,60,3,2,-1,3,60,61,-1,61,4,3,-1,4,61,62,-1,62,5,4,-1,5,62,63,-1,63,6,5,-1,7,64,65,-1,65,8,7,-1,65,58,1,-1,1,8,65,-1,66,67,57,-1,57,58,66,-1,67,68,59,-1,59,57,67,-1,68,69,60,-1,60,59,68,-1,60,69,70,-1,70,61,60,-1,61,70,71,-1,71,62,61,-1,62,71,72,-1,72,63,62,-1,64,73,74,-1,74,65,64,-1,74,66,58,-1,58,65,74,-1,0,75,76,-1,76,1,0,-1,1,76,77,-1,77,8,1,-1,8,77,78,-1,78,7,8,-1,6,78,79,-1,79,5,6,-1,5,79,80,-1,80,4,5,-1,4,80,81,-1,81,3,4,-1,3,81,82,-1,82,2,3,-1,2,82,75,-1,75,0,2,-1,75,83,76,-1,76,83,77,-1,77,83,78,-1,78,83,79,-1,79,83,80,-1,80,83,81,-1,81,83,82,-1,82,83,75,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #160, 204 total numbers made up of 68 3-tuple values */
	this.Coordinate_11_160_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9661),doubleToFloat(-8.7620),doubleToFloat(0.5723),doubleToFloat(-0.3691),doubleToFloat(-8.8070),doubleToFloat(0.8458),doubleToFloat(-1.4400),doubleToFloat(-8.7390),doubleToFloat(0.0794),doubleToFloat(-1.1770),doubleToFloat(-8.7640),doubleToFloat(-0.6959),doubleToFloat(-0.3923),doubleToFloat(-8.8050),doubleToFloat(-0.9469),doubleToFloat(0.4545),doubleToFloat(-8.8520),doubleToFloat(-0.7258),doubleToFloat(0.7400),doubleToFloat(-8.8770),doubleToFloat(0.0794),doubleToFloat(0.2217),doubleToFloat(-8.8510),doubleToFloat(0.5842),doubleToFloat(1.2680),doubleToFloat(-2.2560),doubleToFloat(0.0441),doubleToFloat(0.9337),doubleToFloat(-2.1990),doubleToFloat(0.9113)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6666),doubleToFloat(-0.7114),doubleToFloat(1.9870),doubleToFloat(-0.2221),doubleToFloat(0.8376),doubleToFloat(1.3870),doubleToFloat(-1.2280),doubleToFloat(-1.7740),doubleToFloat(1.3440),doubleToFloat(-0.0038),doubleToFloat(-2.0470),doubleToFloat(1.8240),doubleToFloat(-0.6768),doubleToFloat(1.3550),doubleToFloat(0.0441),doubleToFloat(-1.6230),doubleToFloat(-1.6730),doubleToFloat(0.0441),doubleToFloat(-0.3035),doubleToFloat(1.0140),doubleToFloat(-1.1490),doubleToFloat(-1.2780),doubleToFloat(-1.7640),doubleToFloat(-1.2650),doubleToFloat(-0.0038),doubleToFloat(-2.0470),doubleToFloat(-1.6580),doubleToFloat(1.1470),doubleToFloat(-1.0070),doubleToFloat(-1.0960)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9516),doubleToFloat(-2.2280),doubleToFloat(-1.0770),doubleToFloat(1.1380),doubleToFloat(-1.0100),doubleToFloat(1.3270),doubleToFloat(0.9371),doubleToFloat(-2.2250),doubleToFloat(1.2190),doubleToFloat(1.5450),doubleToFloat(-1.2760),doubleToFloat(0.0441),doubleToFloat(1.4360),doubleToFloat(-2.3120),doubleToFloat(0.0441),doubleToFloat(-1.3960),doubleToFloat(-3.0870),doubleToFloat(1.2240),doubleToFloat(-0.0972),doubleToFloat(-3.2670),doubleToFloat(1.6930),doubleToFloat(-1.7750),doubleToFloat(-3.0140),doubleToFloat(0.0441),doubleToFloat(-1.3990),doubleToFloat(-3.0860),doubleToFloat(-1.2000),doubleToFloat(-0.0680),doubleToFloat(-3.2710),doubleToFloat(-1.5820)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8430),doubleToFloat(-3.4020),doubleToFloat(-0.9876),doubleToFloat(1.3620),doubleToFloat(-3.4840),doubleToFloat(0.0441),doubleToFloat(0.8365),doubleToFloat(-3.4100),doubleToFloat(1.1380),doubleToFloat(-0.8808),doubleToFloat(0.0248),doubleToFloat(1.4370),doubleToFloat(-1.3830),doubleToFloat(0.2791),doubleToFloat(0.0441),doubleToFloat(-0.9257),doubleToFloat(0.0400),doubleToFloat(-1.2760),doubleToFloat(0.6467),doubleToFloat(-0.7406),doubleToFloat(-1.7530),doubleToFloat(-1.0490),doubleToFloat(-1.8090),doubleToFloat(0.9023),doubleToFloat(-0.0038),doubleToFloat(-2.0470),doubleToFloat(1.4030),doubleToFloat(-1.4670),doubleToFloat(-1.7270),doubleToFloat(0.0441)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0130),doubleToFloat(-1.8160),doubleToFloat(-0.9274),doubleToFloat(-0.0038),doubleToFloat(-2.0470),doubleToFloat(-1.2290),doubleToFloat(0.9641),doubleToFloat(-2.2050),doubleToFloat(-0.8538),doubleToFloat(-0.9957),doubleToFloat(-8.4710),doubleToFloat(0.6167),doubleToFloat(-0.3411),doubleToFloat(-8.5770),doubleToFloat(0.8687),doubleToFloat(-1.3800),doubleToFloat(-8.2620),doubleToFloat(0.0794),doubleToFloat(-1.0430),doubleToFloat(-8.1510),doubleToFloat(-0.7134),doubleToFloat(-0.3626),doubleToFloat(-8.1060),doubleToFloat(-0.9169),doubleToFloat(0.3881),doubleToFloat(-8.2840),doubleToFloat(-0.7019),doubleToFloat(0.7159),doubleToFloat(-8.4270),doubleToFloat(0.0794)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.2943),doubleToFloat(-8.5110),doubleToFloat(0.6272),doubleToFloat(-0.1724),doubleToFloat(-5.3120),doubleToFloat(1.1950),doubleToFloat(-1.0810),doubleToFloat(-5.1230),doubleToFloat(0.8244),doubleToFloat(-1.5140),doubleToFloat(-4.9940),doubleToFloat(0.0444),doubleToFloat(-1.0870),doubleToFloat(-5.0340),doubleToFloat(-0.8020),doubleToFloat(-0.1832),doubleToFloat(-5.1670),doubleToFloat(-1.1000),doubleToFloat(0.6761),doubleToFloat(-5.2970),doubleToFloat(-0.7627),doubleToFloat(1.0220),doubleToFloat(-5.3410),doubleToFloat(0.0444),doubleToFloat(0.6140),doubleToFloat(-5.3990),doubleToFloat(0.8292),doubleToFloat(-0.7598),doubleToFloat(-9.3190),doubleToFloat(0.3310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.3892),doubleToFloat(-9.3190),doubleToFloat(0.5008),doubleToFloat(-0.0224),doubleToFloat(-9.3190),doubleToFloat(0.3384),doubleToFloat(0.2912),doubleToFloat(-9.3190),doubleToFloat(0.0330),doubleToFloat(0.1251),doubleToFloat(-9.3190),doubleToFloat(-0.4354),doubleToFloat(-0.4037),doubleToFloat(-9.3190),doubleToFloat(-0.5735),doubleToFloat(-0.8914),doubleToFloat(-9.3190),doubleToFloat(-0.4174),doubleToFloat(-1.0450),doubleToFloat(-9.3190),doubleToFloat(0.0345),doubleToFloat(-0.3857),doubleToFloat(-9.5010),doubleToFloat(-0.0357)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #161, 168 total numbers made up of 84 2-tuple values */
	this.TextureCoordinate_11_161_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1267),doubleToFloat(0.0803),doubleToFloat(0.1336),doubleToFloat(0.0759),doubleToFloat(0.1146),doubleToFloat(0.0819),doubleToFloat(0.1044),doubleToFloat(0.0809),doubleToFloat(0.0953),doubleToFloat(0.0780),doubleToFloat(0.0875),doubleToFloat(0.0710),doubleToFloat(0.0784),doubleToFloat(0.0630),doubleToFloat(0.1502),doubleToFloat(0.0604),doubleToFloat(0.1405),doubleToFloat(0.0696),doubleToFloat(0.1407),doubleToFloat(0.2117)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1584),doubleToFloat(0.2004),doubleToFloat(0.1172),doubleToFloat(0.2146),doubleToFloat(0.0883),doubleToFloat(0.2104),doubleToFloat(0.0713),doubleToFloat(0.2001),doubleToFloat(0.0628),doubleToFloat(0.1933),doubleToFloat(0.0431),doubleToFloat(0.1818),doubleToFloat(0.1731),doubleToFloat(0.1894),doubleToFloat(0.1934),doubleToFloat(0.1767),doubleToFloat(0.5197),doubleToFloat(0.0777),doubleToFloat(0.5114),doubleToFloat(0.0697)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5172),doubleToFloat(0.0468),doubleToFloat(0.5344),doubleToFloat(0.0576),doubleToFloat(0.4978),doubleToFloat(0.0694),doubleToFloat(0.4928),doubleToFloat(0.0440),doubleToFloat(0.4759),doubleToFloat(0.0792),doubleToFloat(0.4663),doubleToFloat(0.0566),doubleToFloat(0.4533),doubleToFloat(0.0705),doubleToFloat(0.4703),doubleToFloat(0.0979),doubleToFloat(0.4498),doubleToFloat(0.0814),doubleToFloat(0.5298),doubleToFloat(0.0885)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5459),doubleToFloat(0.0756),doubleToFloat(0.4692),doubleToFloat(0.1117),doubleToFloat(0.4455),doubleToFloat(0.1063),doubleToFloat(0.5551),doubleToFloat(0.1016),doubleToFloat(0.5299),doubleToFloat(0.1081),doubleToFloat(0.5243),doubleToFloat(0.0274),doubleToFloat(0.5471),doubleToFloat(0.0477),doubleToFloat(0.4898),doubleToFloat(0.0210),doubleToFloat(0.4541),doubleToFloat(0.0420),doubleToFloat(0.4392),doubleToFloat(0.0655)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4368),doubleToFloat(0.0771),doubleToFloat(0.4352),doubleToFloat(0.1061),doubleToFloat(0.5583),doubleToFloat(0.0704),doubleToFloat(0.5651),doubleToFloat(0.0993),doubleToFloat(0.5143),doubleToFloat(0.0582),doubleToFloat(0.4953),doubleToFloat(0.0567),doubleToFloat(0.4711),doubleToFloat(0.0679),doubleToFloat(0.4616),doubleToFloat(0.0791),doubleToFloat(0.5471),doubleToFloat(0.0477),doubleToFloat(0.5243),doubleToFloat(0.0274)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4898),doubleToFloat(0.0210),doubleToFloat(0.4541),doubleToFloat(0.0420),doubleToFloat(0.4392),doubleToFloat(0.0655),doubleToFloat(0.4368),doubleToFloat(0.0771),doubleToFloat(0.4352),doubleToFloat(0.1061),doubleToFloat(0.5583),doubleToFloat(0.0704),doubleToFloat(0.5651),doubleToFloat(0.0993),doubleToFloat(0.1337),doubleToFloat(0.1460),doubleToFloat(0.1460),doubleToFloat(0.1382),doubleToFloat(0.1159),doubleToFloat(0.1483)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0964),doubleToFloat(0.1457),doubleToFloat(0.0833),doubleToFloat(0.1391),doubleToFloat(0.0751),doubleToFloat(0.1321),doubleToFloat(0.0607),doubleToFloat(0.1224),doubleToFloat(0.1718),doubleToFloat(0.1185),doubleToFloat(0.1568),doubleToFloat(0.1295),doubleToFloat(0.1522),doubleToFloat(0.1693),doubleToFloat(0.1372),doubleToFloat(0.1789),doubleToFloat(0.1165),doubleToFloat(0.1814),doubleToFloat(0.0923),doubleToFloat(0.1780)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0773),doubleToFloat(0.1696),doubleToFloat(0.0690),doubleToFloat(0.1627),doubleToFloat(0.0519),doubleToFloat(0.1521),doubleToFloat(0.1826),doubleToFloat(0.1476),doubleToFloat(0.1649),doubleToFloat(0.1594),doubleToFloat(0.1267),doubleToFloat(0.0803),doubleToFloat(0.1336),doubleToFloat(0.0759),doubleToFloat(0.1405),doubleToFloat(0.0696),doubleToFloat(0.1502),doubleToFloat(0.0604),doubleToFloat(0.0875),doubleToFloat(0.0710)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0953),doubleToFloat(0.0780),doubleToFloat(0.1044),doubleToFloat(0.0809),doubleToFloat(0.1146),doubleToFloat(0.0819),doubleToFloat(0.1191),doubleToFloat(0.0747)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #169, 312 total numbers */
	this.IndexedFaceSet_11_169_coordIndex = new MFInt32(Java.to([31,9,8,-1,8,30,31,-1,29,30,8,-1,8,10,29,-1,27,29,10,-1,10,11,27,-1,27,11,12,-1,12,28,27,-1,34,28,12,-1,12,13,34,-1,33,34,13,-1,13,14,33,-1,32,15,9,-1,9,31,32,-1,32,33,14,-1,14,15,32,-1,18,8,9,-1,9,16,18,-1,19,10,8,-1,8,18,19,-1,20,11,10,-1,10,19,20,-1,21,12,11,-1,11,20,21,-1,22,13,12,-1,12,21,22,-1,14,13,22,-1,22,23,14,-1,16,9,15,-1,15,17,16,-1,15,14,23,-1,23,17,15,-1,18,16,24,-1,25,19,18,-1,18,24,25,-1,20,19,25,-1,25,26,20,-1,21,26,4,-1,4,5,21,-1,6,22,21,-1,21,5,6,-1,23,22,6,-1,6,2,23,-1,16,17,3,-1,3,0,16,-1,17,23,2,-1,2,3,17,-1,1,25,24,-1,24,7,1,-1,26,25,1,-1,1,4,26,-1,26,21,20,-1,24,16,0,-1,0,7,24,-1,28,35,36,-1,36,27,28,-1,27,36,37,-1,37,29,27,-1,29,37,38,-1,38,30,29,-1,30,38,39,-1,39,31,30,-1,31,39,40,-1,40,32,31,-1,32,40,41,-1,41,33,32,-1,33,41,42,-1,42,34,33,-1,34,42,35,-1,35,28,34,-1,35,43,36,-1,36,43,37,-1,37,43,38,-1,38,43,39,-1,39,43,40,-1,40,43,41,-1,41,43,42,-1,42,43,35,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #169, 312 total numbers */
	this.IndexedFaceSet_11_169_texCoordIndex = new MFInt32(Java.to([55,11,9,-1,9,54,55,-1,52,53,10,-1,10,13,52,-1,48,51,14,-1,14,15,48,-1,47,16,17,-1,17,50,47,-1,62,49,18,-1,18,19,62,-1,60,61,20,-1,20,21,60,-1,57,23,12,-1,12,56,57,-1,58,59,22,-1,22,24,58,-1,29,9,11,-1,11,25,29,-1,31,13,10,-1,10,30,31,-1,33,15,14,-1,14,32,33,-1,35,17,16,-1,16,34,35,-1,37,19,18,-1,18,36,37,-1,21,20,38,-1,38,39,21,-1,26,12,23,-1,23,27,26,-1,24,22,40,-1,40,28,24,-1,29,25,41,-1,43,31,30,-1,30,42,43,-1,33,32,44,-1,44,45,33,-1,35,46,3,-1,3,4,35,-1,5,37,36,-1,36,4,5,-1,39,38,5,-1,5,6,39,-1,26,27,7,-1,7,1,26,-1,28,40,8,-1,8,7,28,-1,2,43,42,-1,42,0,2,-1,45,44,2,-1,2,3,45,-1,46,35,34,-1,41,25,1,-1,1,0,41,-1,50,63,64,-1,64,47,50,-1,48,64,65,-1,65,51,48,-1,52,65,66,-1,66,53,52,-1,54,66,67,-1,67,55,54,-1,56,67,68,-1,68,57,56,-1,58,68,69,-1,69,59,58,-1,60,69,70,-1,70,61,60,-1,62,70,63,-1,63,49,62,-1,63,71,64,-1,64,71,65,-1,65,71,66,-1,66,71,67,-1,67,71,68,-1,68,71,69,-1,69,71,70,-1,70,71,63,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #169, 132 total numbers made up of 44 3-tuple values */
	this.Coordinate_12_169_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1963),doubleToFloat(-6.2790),doubleToFloat(-0.4818),doubleToFloat(-0.7359),doubleToFloat(-6.2760),doubleToFloat(0.0910),doubleToFloat(0.3111),doubleToFloat(-6.2790),doubleToFloat(0.0771),doubleToFloat(0.0631),doubleToFloat(-6.2790),doubleToFloat(-0.3075),doubleToFloat(-0.4837),doubleToFloat(-6.2790),doubleToFloat(0.4237),doubleToFloat(-0.2217),doubleToFloat(-6.2790),doubleToFloat(0.6188),doubleToFloat(0.0720),doubleToFloat(-6.2790),doubleToFloat(0.4241),doubleToFloat(-0.4969),doubleToFloat(-6.2790),doubleToFloat(-0.3118),doubleToFloat(-0.6964),doubleToFloat(-0.6872),doubleToFloat(-0.5536),doubleToFloat(-0.0513),doubleToFloat(-0.8287),doubleToFloat(-0.7608)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0370),doubleToFloat(-0.5528),doubleToFloat(0.1334),doubleToFloat(-0.6719),doubleToFloat(-0.3823),doubleToFloat(0.6072),doubleToFloat(-0.0567),doubleToFloat(-0.4045),doubleToFloat(0.8998),doubleToFloat(0.5645),doubleToFloat(-0.4265),doubleToFloat(0.6026),doubleToFloat(0.9906),doubleToFloat(-0.6215),doubleToFloat(0.1153),doubleToFloat(0.6586),doubleToFloat(-0.7310),doubleToFloat(-0.5759),doubleToFloat(-0.1082),doubleToFloat(-2.2010),doubleToFloat(-0.7417),doubleToFloat(0.4350),doubleToFloat(-2.5570),doubleToFloat(-0.5481),doubleToFloat(-0.7903),doubleToFloat(-1.8150),doubleToFloat(-0.5458),doubleToFloat(-1.0930),doubleToFloat(-1.8270),doubleToFloat(0.1068)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7473),doubleToFloat(-1.8970),doubleToFloat(0.6147),doubleToFloat(-0.1257),doubleToFloat(-2.2010),doubleToFloat(0.8868),doubleToFloat(0.3647),doubleToFloat(-2.5570),doubleToFloat(0.5714),doubleToFloat(0.7182),doubleToFloat(-2.7990),doubleToFloat(0.0724),doubleToFloat(-0.7313),doubleToFloat(-2.9910),doubleToFloat(-0.4881),doubleToFloat(-0.9561),doubleToFloat(-3.4670),doubleToFloat(0.0896),doubleToFloat(-0.6806),doubleToFloat(-2.9180),doubleToFloat(0.5989),doubleToFloat(-0.6136),doubleToFloat(-0.0062),doubleToFloat(0.6194),doubleToFloat(-0.0166),doubleToFloat(-0.0513),doubleToFloat(0.8929),doubleToFloat(-1.0870),doubleToFloat(0.0162),doubleToFloat(0.1265)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8241),doubleToFloat(-0.0086),doubleToFloat(-0.6488),doubleToFloat(-0.0398),doubleToFloat(-0.0498),doubleToFloat(-0.8998),doubleToFloat(0.8070),doubleToFloat(-0.0962),doubleToFloat(-0.6787),doubleToFloat(1.0930),doubleToFloat(-0.1211),doubleToFloat(0.1265),doubleToFloat(0.5742),doubleToFloat(-0.0952),doubleToFloat(0.6313),doubleToFloat(0.0101),doubleToFloat(0.5137),doubleToFloat(0.6957),doubleToFloat(-0.4752),doubleToFloat(0.5137),doubleToFloat(0.4734),doubleToFloat(-0.8472),doubleToFloat(0.5137),doubleToFloat(0.0864),doubleToFloat(-0.6477),doubleToFloat(0.5137),doubleToFloat(-0.5016),doubleToFloat(-0.0090),doubleToFloat(0.5137),doubleToFloat(-0.7060)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6839),doubleToFloat(0.5137),doubleToFloat(-0.5251),doubleToFloat(0.8999),doubleToFloat(0.5137),doubleToFloat(0.0842),doubleToFloat(0.4904),doubleToFloat(0.5137),doubleToFloat(0.4830),doubleToFloat(0.0139),doubleToFloat(0.7948),doubleToFloat(0.0042)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #170, 144 total numbers made up of 72 2-tuple values */
	this.TextureCoordinate_12_170_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1769),doubleToFloat(0.0543),doubleToFloat(0.1836),doubleToFloat(0.0527),doubleToFloat(0.1653),doubleToFloat(0.0588),doubleToFloat(0.1588),doubleToFloat(0.0580),doubleToFloat(0.1501),doubleToFloat(0.0578),doubleToFloat(0.1384),doubleToFloat(0.0565),doubleToFloat(0.1280),doubleToFloat(0.0534),doubleToFloat(0.1917),doubleToFloat(0.0541),doubleToFloat(0.2019),doubleToFloat(0.0495),doubleToFloat(0.1840),doubleToFloat(0.1235)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1842),doubleToFloat(0.1235),doubleToFloat(0.1926),doubleToFloat(0.1217),doubleToFloat(0.1925),doubleToFloat(0.1213),doubleToFloat(0.1699),doubleToFloat(0.1260),doubleToFloat(0.1699),doubleToFloat(0.1260),doubleToFloat(0.1590),doubleToFloat(0.1262),doubleToFloat(0.1588),doubleToFloat(0.1262),doubleToFloat(0.1472),doubleToFloat(0.1262),doubleToFloat(0.1471),doubleToFloat(0.1264),doubleToFloat(0.1345),doubleToFloat(0.1260)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1344),doubleToFloat(0.1265),doubleToFloat(0.1212),doubleToFloat(0.1264),doubleToFloat(0.2163),doubleToFloat(0.1209),doubleToFloat(0.2014),doubleToFloat(0.1216),doubleToFloat(0.2007),doubleToFloat(0.1217),doubleToFloat(0.1881),doubleToFloat(0.0872),doubleToFloat(0.1880),doubleToFloat(0.0870),doubleToFloat(0.1965),doubleToFloat(0.0879),doubleToFloat(0.1962),doubleToFloat(0.0879),doubleToFloat(0.1805),doubleToFloat(0.0889)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1805),doubleToFloat(0.0889),doubleToFloat(0.1676),doubleToFloat(0.0924),doubleToFloat(0.1676),doubleToFloat(0.0924),doubleToFloat(0.1589),doubleToFloat(0.0921),doubleToFloat(0.1588),doubleToFloat(0.0921),doubleToFloat(0.1487),doubleToFloat(0.0920),doubleToFloat(0.1486),doubleToFloat(0.0921),doubleToFloat(0.1365),doubleToFloat(0.0913),doubleToFloat(0.1364),doubleToFloat(0.0916),doubleToFloat(0.1246),doubleToFloat(0.0899)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2091),doubleToFloat(0.0852),doubleToFloat(0.1787),doubleToFloat(0.0716),doubleToFloat(0.1787),doubleToFloat(0.0716),doubleToFloat(0.1664),doubleToFloat(0.0756),doubleToFloat(0.1664),doubleToFloat(0.0756),doubleToFloat(0.1589),doubleToFloat(0.0751),doubleToFloat(0.1588),doubleToFloat(0.0751),doubleToFloat(0.1587),doubleToFloat(0.1943),doubleToFloat(0.1592),doubleToFloat(0.1943),doubleToFloat(0.1442),doubleToFloat(0.1950)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1444),doubleToFloat(0.1945),doubleToFloat(0.1745),doubleToFloat(0.1932),doubleToFloat(0.1745),doubleToFloat(0.1933),doubleToFloat(0.1915),doubleToFloat(0.1926),doubleToFloat(0.1911),doubleToFloat(0.1928),doubleToFloat(0.2015),doubleToFloat(0.1906),doubleToFloat(0.2013),doubleToFloat(0.1900),doubleToFloat(0.2111),doubleToFloat(0.1891),doubleToFloat(0.2098),doubleToFloat(0.1892),doubleToFloat(0.2308),doubleToFloat(0.1922)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1143),doubleToFloat(0.1994),doubleToFloat(0.1304),doubleToFloat(0.1965),doubleToFloat(0.1306),doubleToFloat(0.1955),doubleToFloat(0.1442),doubleToFloat(0.1950),doubleToFloat(0.1587),doubleToFloat(0.1943),doubleToFloat(0.1745),doubleToFloat(0.1932),doubleToFloat(0.1915),doubleToFloat(0.1926),doubleToFloat(0.2015),doubleToFloat(0.1906),doubleToFloat(0.2111),doubleToFloat(0.1891),doubleToFloat(0.2308),doubleToFloat(0.1922)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1304),doubleToFloat(0.1965),doubleToFloat(0.1803),doubleToFloat(0.1929)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #178, 704 total numbers */
	this.IndexedFaceSet_12_178_coordIndex = new MFInt32(Java.to([14,13,18,-1,18,17,14,-1,12,11,20,-1,20,19,12,-1,4,0,6,-1,6,8,4,-1,10,9,22,-1,22,21,10,-1,16,15,17,-1,17,18,16,-1,2,5,8,-1,8,6,2,-1,13,14,19,-1,19,20,13,-1,3,7,8,-1,8,5,3,-1,15,16,21,-1,21,22,15,-1,8,7,1,-1,1,4,8,-1,2,14,17,-1,17,5,2,-1,18,13,28,-1,28,32,18,-1,12,19,6,-1,6,0,12,-1,20,11,24,-1,24,35,20,-1,10,21,36,-1,36,26,10,-1,22,9,1,-1,1,7,22,-1,30,16,18,-1,18,32,30,-1,17,15,3,-1,3,5,17,-1,28,13,20,-1,20,35,28,-1,19,14,2,-1,2,6,19,-1,3,15,22,-1,22,7,3,-1,21,16,30,-1,30,36,21,-1,28,27,33,-1,33,32,28,-1,24,23,34,-1,34,35,24,-1,25,26,36,-1,36,37,25,-1,30,32,33,-1,33,29,30,-1,31,38,34,-1,34,23,31,-1,29,33,38,-1,38,37,29,-1,28,35,34,-1,34,27,28,-1,29,37,36,-1,36,30,29,-1,27,34,38,-1,38,33,27,-1,31,25,37,-1,37,38,31,-1,73,39,43,-1,43,44,73,-1,40,41,45,-1,45,46,40,-1,42,48,43,-1,43,39,42,-1,47,45,41,-1,41,60,47,-1,42,40,46,-1,46,48,42,-1,9,52,50,-1,50,1,9,-1,4,51,49,-1,49,0,4,-1,11,64,57,-1,57,24,11,-1,1,50,51,-1,51,4,1,-1,10,53,52,-1,52,9,10,-1,26,74,53,-1,53,10,26,-1,0,49,76,-1,76,12,0,-1,31,61,67,-1,67,25,31,-1,25,67,74,-1,74,26,25,-1,24,57,54,-1,54,23,24,-1,23,54,61,-1,61,31,23,-1,54,57,55,-1,39,55,56,-1,56,42,39,-1,42,56,58,-1,58,40,42,-1,40,58,59,-1,59,41,40,-1,59,61,60,-1,60,41,59,-1,61,54,73,-1,73,60,61,-1,57,64,62,-1,62,55,57,-1,55,62,63,-1,63,56,55,-1,56,63,65,-1,65,58,56,-1,58,65,66,-1,66,59,58,-1,59,66,61,-1,52,71,69,-1,69,50,52,-1,51,70,68,-1,68,49,51,-1,50,69,70,-1,70,51,50,-1,53,72,71,-1,71,52,53,-1,76,49,68,-1,68,77,76,-1,74,67,66,-1,66,75,74,-1,78,69,71,-1,71,79,78,-1,79,71,72,-1,72,80,79,-1,87,80,72,-1,72,75,87,-1,81,66,65,-1,65,82,81,-1,82,65,63,-1,63,83,82,-1,83,63,62,-1,62,84,83,-1,88,84,62,-1,62,77,88,-1,85,68,70,-1,70,86,85,-1,86,70,69,-1,69,78,86,-1,60,73,44,-1,44,47,60,-1,54,55,39,-1,39,73,54,-1,74,75,72,-1,72,53,74,-1,81,87,75,-1,75,66,81,-1,61,66,67,-1,64,76,77,-1,77,62,64,-1,85,88,77,-1,77,68,85,-1,12,76,64,-1,64,11,12,-1,47,48,46,-1,46,45,47,-1,47,44,43,-1,43,48,47,-1,79,89,78,-1,78,89,86,-1,86,89,85,-1,85,89,88,-1,88,89,84,-1,84,89,83,-1,83,89,82,-1,82,89,81,-1,81,89,87,-1,87,89,80,-1,80,89,79,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #178, 704 total numbers */
	this.IndexedFaceSet_12_178_texCoordIndex = new MFInt32(Java.to([1,0,3,-1,3,2,1,-1,5,4,7,-1,7,6,5,-1,9,8,11,-1,11,10,9,-1,13,12,15,-1,15,14,13,-1,17,16,95,-1,95,96,17,-1,19,18,10,-1,10,11,19,-1,0,1,6,-1,6,7,0,-1,21,20,98,-1,98,99,21,-1,16,17,14,-1,14,15,16,-1,98,20,22,-1,22,97,98,-1,19,1,2,-1,2,18,19,-1,3,0,24,-1,24,23,3,-1,5,6,11,-1,11,8,5,-1,7,4,26,-1,26,25,7,-1,13,14,28,-1,28,27,13,-1,15,12,22,-1,22,20,15,-1,29,17,96,-1,96,100,29,-1,95,16,21,-1,21,99,95,-1,24,0,7,-1,7,25,24,-1,6,1,19,-1,19,11,6,-1,21,16,15,-1,15,20,21,-1,14,17,29,-1,29,28,14,-1,24,30,31,-1,31,23,24,-1,26,32,33,-1,33,25,26,-1,34,27,28,-1,28,35,34,-1,29,100,101,-1,101,36,29,-1,37,39,33,-1,33,32,37,-1,36,101,38,-1,38,35,36,-1,24,25,33,-1,33,30,24,-1,36,35,28,-1,28,29,36,-1,30,33,39,-1,39,31,30,-1,102,34,35,-1,35,38,102,-1,41,40,47,-1,47,42,41,-1,44,43,46,-1,46,45,44,-1,48,53,47,-1,47,40,48,-1,49,46,43,-1,43,50,49,-1,103,44,45,-1,45,104,103,-1,12,52,51,-1,51,22,12,-1,9,55,54,-1,54,8,9,-1,4,59,56,-1,56,26,4,-1,22,51,105,-1,105,97,22,-1,13,57,52,-1,52,12,13,-1,27,58,57,-1,57,13,27,-1,8,54,62,-1,62,5,8,-1,102,61,60,-1,60,34,102,-1,34,60,58,-1,58,27,34,-1,26,56,63,-1,63,32,26,-1,32,63,64,-1,64,37,32,-1,63,56,67,-1,40,67,68,-1,68,48,40,-1,103,106,65,-1,65,44,103,-1,44,65,66,-1,66,43,44,-1,66,61,50,-1,50,43,66,-1,64,63,41,-1,41,73,64,-1,56,59,74,-1,74,67,56,-1,67,74,76,-1,76,68,67,-1,106,107,69,-1,69,65,106,-1,65,69,70,-1,70,66,65,-1,66,70,61,-1,52,72,71,-1,71,51,52,-1,55,86,85,-1,85,54,55,-1,51,71,108,-1,108,105,51,-1,57,75,72,-1,72,52,57,-1,62,54,85,-1,85,87,62,-1,58,60,70,-1,70,77,58,-1,78,71,72,-1,72,79,78,-1,79,72,75,-1,75,80,79,-1,81,80,75,-1,75,77,81,-1,82,70,69,-1,69,83,82,-1,83,69,107,-1,107,84,83,-1,88,76,74,-1,74,89,88,-1,90,89,74,-1,74,87,90,-1,91,85,86,-1,86,92,91,-1,109,108,71,-1,71,78,109,-1,73,41,42,-1,42,93,73,-1,63,67,40,-1,40,41,63,-1,58,77,75,-1,75,57,58,-1,82,81,77,-1,77,70,82,-1,61,70,60,-1,59,62,87,-1,87,74,59,-1,91,90,87,-1,87,85,91,-1,5,62,59,-1,59,4,5,-1,49,104,45,-1,45,46,49,-1,93,42,47,-1,47,53,93,-1,79,110,78,-1,78,110,109,-1,92,94,91,-1,91,94,90,-1,90,94,89,-1,89,94,88,-1,84,110,83,-1,83,110,82,-1,82,110,81,-1,81,110,80,-1,80,110,79,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #178, 270 total numbers made up of 90 3-tuple values */
	this.Coordinate_13_178_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.4307),doubleToFloat(-2.7920),doubleToFloat(-1.3210),doubleToFloat(-0.1513),doubleToFloat(-2.5050),doubleToFloat(-1.4970),doubleToFloat(0.2320),doubleToFloat(-3.8180),doubleToFloat(-1.2940),doubleToFloat(-0.1222),doubleToFloat(-4.0170),doubleToFloat(-1.4490),doubleToFloat(0.1992),doubleToFloat(-2.5740),doubleToFloat(-1.5030),doubleToFloat(0.1109),doubleToFloat(-4.0650),doubleToFloat(-1.4020),doubleToFloat(0.3219),doubleToFloat(-3.4360),doubleToFloat(-1.3290),doubleToFloat(-0.2155),doubleToFloat(-3.6030),doubleToFloat(-1.5560),doubleToFloat(0.0702),doubleToFloat(-3.5460),doubleToFloat(-1.5320),doubleToFloat(-0.5685),doubleToFloat(-2.6320),doubleToFloat(-1.0380)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8124),doubleToFloat(-2.7640),doubleToFloat(-0.5453),doubleToFloat(0.1335),doubleToFloat(-3.0950),doubleToFloat(-0.4172),doubleToFloat(0.2840),doubleToFloat(-2.9630),doubleToFloat(-0.9225),doubleToFloat(-0.1662),doubleToFloat(-4.4360),doubleToFloat(-0.5193),doubleToFloat(-0.0023),doubleToFloat(-4.1790),doubleToFloat(-0.9935),doubleToFloat(-0.5002),doubleToFloat(-4.3730),doubleToFloat(-1.0270),doubleToFloat(-0.6280),doubleToFloat(-4.5510),doubleToFloat(-0.5638),doubleToFloat(-0.2724),doubleToFloat(-4.4200),doubleToFloat(-0.9757),doubleToFloat(-0.4206),doubleToFloat(-4.6160),doubleToFloat(-0.5244),doubleToFloat(0.1039),doubleToFloat(-3.7440),doubleToFloat(-0.9131)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0779),doubleToFloat(-3.9090),doubleToFloat(-0.4984),doubleToFloat(-0.8118),doubleToFloat(-4.1640),doubleToFloat(-0.5879),doubleToFloat(-0.6283),doubleToFloat(-3.9510),doubleToFloat(-1.0850),doubleToFloat(-0.0997),doubleToFloat(-2.9470),doubleToFloat(0.8074),doubleToFloat(-0.0043),doubleToFloat(-3.0380),doubleToFloat(0.1236),doubleToFloat(-0.7423),doubleToFloat(-2.8280),doubleToFloat(0.7500),doubleToFloat(-0.8459),doubleToFloat(-2.8530),doubleToFloat(0.0687),doubleToFloat(-0.0360),doubleToFloat(-4.4120),doubleToFloat(0.5685),doubleToFloat(-0.1506),doubleToFloat(-4.4850),doubleToFloat(0.0302),doubleToFloat(-0.4657),doubleToFloat(-4.4690),doubleToFloat(0.6100)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.5706),doubleToFloat(-4.5670),doubleToFloat(0.0069),doubleToFloat(-0.4913),doubleToFloat(-2.8240),doubleToFloat(0.8611),doubleToFloat(-0.3733),doubleToFloat(-4.6050),doubleToFloat(0.0300),doubleToFloat(-0.2282),doubleToFloat(-4.5120),doubleToFloat(0.6452),doubleToFloat(-0.0292),doubleToFloat(-3.9720),doubleToFloat(0.6062),doubleToFloat(-0.0966),doubleToFloat(-3.9990),doubleToFloat(0.0929),doubleToFloat(-0.7363),doubleToFloat(-4.1460),doubleToFloat(0.0646),doubleToFloat(-0.6199),doubleToFloat(-4.0350),doubleToFloat(0.6434),doubleToFloat(-0.3474),doubleToFloat(-3.9710),doubleToFloat(0.7410),doubleToFloat(0.6986),doubleToFloat(-1.9930),doubleToFloat(0.9512)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6000),doubleToFloat(-1.9180),doubleToFloat(1.2970),doubleToFloat(0.2502),doubleToFloat(-2.0680),doubleToFloat(1.4000),doubleToFloat(0.8459),doubleToFloat(-1.8950),doubleToFloat(1.0440),doubleToFloat(0.6762),doubleToFloat(-2.6920),doubleToFloat(1.1710),doubleToFloat(0.5040),doubleToFloat(-2.8150),doubleToFloat(1.2750),doubleToFloat(0.4412),doubleToFloat(-2.7250),doubleToFloat(1.5560),doubleToFloat(0.5842),doubleToFloat(-2.6400),doubleToFloat(1.4930),doubleToFloat(0.4651),doubleToFloat(-2.8290),doubleToFloat(1.4240),doubleToFloat(0.7307),doubleToFloat(-2.6260),doubleToFloat(1.3400),doubleToFloat(0.6122),doubleToFloat(-1.5180),doubleToFloat(-1.1930)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1549),doubleToFloat(-1.4850),doubleToFloat(-1.3470),doubleToFloat(0.3480),doubleToFloat(-1.5520),doubleToFloat(-1.3700),doubleToFloat(-0.5385),doubleToFloat(-1.6480),doubleToFloat(-0.9214),doubleToFloat(-0.7721),doubleToFloat(-1.6170),doubleToFloat(-0.4592),doubleToFloat(0.2101),doubleToFloat(-1.7540),doubleToFloat(0.7080),doubleToFloat(0.6262),doubleToFloat(-1.2300),doubleToFloat(0.4608),doubleToFloat(0.7618),doubleToFloat(-1.0000),doubleToFloat(0.7066),doubleToFloat(0.2822),doubleToFloat(-2.1630),doubleToFloat(0.1810),doubleToFloat(0.4444),doubleToFloat(-0.9442),doubleToFloat(0.9382),doubleToFloat(0.0520),doubleToFloat(-1.1090),doubleToFloat(1.0380)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.2067),doubleToFloat(-2.1680),doubleToFloat(1.2400),doubleToFloat(-0.1751),doubleToFloat(-1.3960),doubleToFloat(0.8147),doubleToFloat(0.7098),doubleToFloat(-0.5191),doubleToFloat(-0.0912),doubleToFloat(0.6941),doubleToFloat(-0.3991),doubleToFloat(0.3487),doubleToFloat(0.4421),doubleToFloat(-2.1960),doubleToFloat(-0.3496),doubleToFloat(0.2779),doubleToFloat(-0.3129),doubleToFloat(0.5309),doubleToFloat(-0.1742),doubleToFloat(-0.3399),doubleToFloat(0.4446),doubleToFloat(-0.5488),doubleToFloat(-1.5870),doubleToFloat(0.6972),doubleToFloat(0.7534),doubleToFloat(-0.5856),doubleToFloat(-1.0150),doubleToFloat(-0.0880),doubleToFloat(-0.6020),doubleToFloat(-1.1930)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.4178),doubleToFloat(-0.6986),doubleToFloat(-1.2120),doubleToFloat(-0.5383),doubleToFloat(-0.5280),doubleToFloat(-0.8157),doubleToFloat(-0.4897),doubleToFloat(-0.4967),doubleToFloat(-0.4368),doubleToFloat(0.3465),doubleToFloat(-2.1520),doubleToFloat(0.9912),doubleToFloat(-0.7623),doubleToFloat(-1.6590),doubleToFloat(0.1694),doubleToFloat(-0.4626),doubleToFloat(-0.4640),doubleToFloat(0.1031),doubleToFloat(0.5113),doubleToFloat(-1.9550),doubleToFloat(-0.8705),doubleToFloat(0.6907),doubleToFloat(-0.5756),doubleToFloat(-0.7157),doubleToFloat(0.1449),doubleToFloat(0.0019),doubleToFloat(-0.8194),doubleToFloat(-0.1078),doubleToFloat(0.0814),doubleToFloat(-0.7022)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.2766),doubleToFloat(0.0814),doubleToFloat(-0.3074),doubleToFloat(0.0285),doubleToFloat(-0.0069),doubleToFloat(0.1675),doubleToFloat(0.1933),doubleToFloat(0.0814),doubleToFloat(0.2306),doubleToFloat(0.5071),doubleToFloat(0.0814),doubleToFloat(-0.0008),doubleToFloat(0.5617),doubleToFloat(0.0814),doubleToFloat(-0.2158),doubleToFloat(0.5968),doubleToFloat(0.0333),doubleToFloat(-0.7657),doubleToFloat(0.4210),doubleToFloat(0.0814),doubleToFloat(-0.8752),doubleToFloat(-0.1516),doubleToFloat(-0.0094),doubleToFloat(0.0281),doubleToFloat(0.6464),doubleToFloat(0.0357),doubleToFloat(-0.4977),doubleToFloat(0.1460),doubleToFloat(0.3617),doubleToFloat(-0.3198)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #179, 222 total numbers made up of 111 2-tuple values */
	this.TextureCoordinate_13_179_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4525),doubleToFloat(0.1080),doubleToFloat(0.4381),doubleToFloat(0.1111),doubleToFloat(0.4410),doubleToFloat(0.1030),doubleToFloat(0.4540),doubleToFloat(0.1007),doubleToFloat(0.4476),doubleToFloat(0.1397),doubleToFloat(0.4329),doubleToFloat(0.1393),doubleToFloat(0.4377),doubleToFloat(0.1216),doubleToFloat(0.4502),doubleToFloat(0.1202),doubleToFloat(0.4209),doubleToFloat(0.1405),doubleToFloat(0.4121),doubleToFloat(0.1424)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4179),doubleToFloat(0.1206),doubleToFloat(0.4243),doubleToFloat(0.1263),doubleToFloat(0.6115),doubleToFloat(0.1686),doubleToFloat(0.5969),doubleToFloat(0.1669),doubleToFloat(0.5946),doubleToFloat(0.1365),doubleToFloat(0.6082),doubleToFloat(0.1398),doubleToFloat(0.6070),doubleToFloat(0.1302),doubleToFloat(0.5938),doubleToFloat(0.1274),doubleToFloat(0.4261),doubleToFloat(0.1111),doubleToFloat(0.4273),doubleToFloat(0.1179)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6243),doubleToFloat(0.1459),doubleToFloat(0.6223),doubleToFloat(0.1363),doubleToFloat(0.6274),doubleToFloat(0.1705),doubleToFloat(0.4684),doubleToFloat(0.1045),doubleToFloat(0.4670),doubleToFloat(0.1105),doubleToFloat(0.4660),doubleToFloat(0.1219),doubleToFloat(0.4622),doubleToFloat(0.1442),doubleToFloat(0.5805),doubleToFloat(0.1668),doubleToFloat(0.5779),doubleToFloat(0.1383),doubleToFloat(0.5784),doubleToFloat(0.1280)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4804),doubleToFloat(0.1157),doubleToFloat(0.4844),doubleToFloat(0.1124),doubleToFloat(0.4797),doubleToFloat(0.1490),doubleToFloat(0.4793),doubleToFloat(0.1251),doubleToFloat(0.5625),doubleToFloat(0.1698),doubleToFloat(0.5629),doubleToFloat(0.1425),doubleToFloat(0.5626),doubleToFloat(0.1324),doubleToFloat(0.4888),doubleToFloat(0.1512),doubleToFloat(0.5559),doubleToFloat(0.1428),doubleToFloat(0.4878),doubleToFloat(0.1256)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4786),doubleToFloat(0.1985),doubleToFloat(0.4825),doubleToFloat(0.1924),doubleToFloat(0.4997),doubleToFloat(0.1956),doubleToFloat(0.5351),doubleToFloat(0.2088),doubleToFloat(0.5335),doubleToFloat(0.2180),doubleToFloat(0.5204),doubleToFloat(0.2076),doubleToFloat(0.5208),doubleToFloat(0.2040),doubleToFloat(0.4954),doubleToFloat(0.1985),doubleToFloat(0.4777),doubleToFloat(0.2028),doubleToFloat(0.5187),doubleToFloat(0.2019)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5361),doubleToFloat(0.2041),doubleToFloat(0.6252),doubleToFloat(0.1939),doubleToFloat(0.6107),doubleToFloat(0.1902),doubleToFloat(0.4971),doubleToFloat(0.2024),doubleToFloat(0.4160),doubleToFloat(0.1694),doubleToFloat(0.4086),doubleToFloat(0.1660),doubleToFloat(0.4589),doubleToFloat(0.1659),doubleToFloat(0.5975),doubleToFloat(0.1916),doubleToFloat(0.5809),doubleToFloat(0.1929),doubleToFloat(0.4436),doubleToFloat(0.1613)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5665),doubleToFloat(0.1978),doubleToFloat(0.5594),doubleToFloat(0.2064),doubleToFloat(0.4278),doubleToFloat(0.1622),doubleToFloat(0.4728),doubleToFloat(0.1797),doubleToFloat(0.4819),doubleToFloat(0.1772),doubleToFloat(0.5550),doubleToFloat(0.2286),doubleToFloat(0.5566),doubleToFloat(0.2176),doubleToFloat(0.4574),doubleToFloat(0.1901),doubleToFloat(0.4580),doubleToFloat(0.1987),doubleToFloat(0.5717),doubleToFloat(0.2352)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5770),doubleToFloat(0.2271),doubleToFloat(0.6219),doubleToFloat(0.2141),doubleToFloat(0.6089),doubleToFloat(0.2102),doubleToFloat(0.4875),doubleToFloat(0.1905),doubleToFloat(0.4367),doubleToFloat(0.2003),doubleToFloat(0.6006),doubleToFloat(0.2164),doubleToFloat(0.4461),doubleToFloat(0.2073),doubleToFloat(0.5875),doubleToFloat(0.2190),doubleToFloat(0.6163),doubleToFloat(0.2342),doubleToFloat(0.6088),doubleToFloat(0.2316)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6022),doubleToFloat(0.2309),doubleToFloat(0.5955),doubleToFloat(0.2329),doubleToFloat(0.5900),doubleToFloat(0.2339),doubleToFloat(0.5857),doubleToFloat(0.2403),doubleToFloat(0.5872),doubleToFloat(0.2503),doubleToFloat(0.4139),doubleToFloat(0.1908),doubleToFloat(0.4051),doubleToFloat(0.1865),doubleToFloat(0.4215),doubleToFloat(0.1933),doubleToFloat(0.4326),doubleToFloat(0.2191),doubleToFloat(0.4267),doubleToFloat(0.2163)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4205),doubleToFloat(0.2125),doubleToFloat(0.4142),doubleToFloat(0.2104),doubleToFloat(0.4085),doubleToFloat(0.2117),doubleToFloat(0.5031),doubleToFloat(0.1948),doubleToFloat(0.4194),doubleToFloat(0.2265),doubleToFloat(0.6089),doubleToFloat(0.1253),doubleToFloat(0.5935),doubleToFloat(0.1226),doubleToFloat(0.6357),doubleToFloat(0.1691),doubleToFloat(0.6309),doubleToFloat(0.1456),doubleToFloat(0.6262),doubleToFloat(0.1324)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5767),doubleToFloat(0.1236),doubleToFloat(0.5588),doubleToFloat(0.1287),doubleToFloat(0.5561),doubleToFloat(0.1709),doubleToFloat(0.5309),doubleToFloat(0.2265),doubleToFloat(0.5174),doubleToFloat(0.2117),doubleToFloat(0.6371),doubleToFloat(0.1946),doubleToFloat(0.5513),doubleToFloat(0.2380),doubleToFloat(0.5677),doubleToFloat(0.2471),doubleToFloat(0.6333),doubleToFloat(0.2166),doubleToFloat(0.6204),doubleToFloat(0.2388)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6020),doubleToFloat(0.2424)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #190, 1976 total numbers */
	this.IndexedFaceSet_10_190_coordIndex = new MFInt32(Java.to([41,68,69,-1,69,42,41,-1,56,57,5,-1,5,0,56,-1,6,38,36,-1,36,46,6,-1,12,11,39,-1,39,37,12,-1,4,7,45,-1,46,116,117,-1,117,6,46,-1,68,40,38,-1,38,6,68,-1,70,69,7,-1,7,4,70,-1,26,8,58,-1,58,59,26,-1,18,13,14,-1,14,11,18,-1,12,9,18,-1,18,11,12,-1,12,37,63,-1,65,170,15,-1,15,63,65,-1,64,65,63,-1,63,37,64,-1,15,16,17,-1,17,9,15,-1,10,34,13,-1,13,18,10,-1,9,17,10,-1,10,18,9,-1,12,63,15,-1,15,9,12,-1,56,60,20,-1,20,19,56,-1,58,97,180,-1,180,23,58,-1,61,59,21,-1,21,22,61,-1,62,57,25,-1,25,24,62,-1,17,8,26,-1,26,10,17,-1,16,187,98,-1,98,8,16,-1,29,132,133,-1,133,28,29,-1,27,134,132,-1,132,29,27,-1,133,137,194,-1,194,28,133,-1,70,130,44,-1,44,43,70,-1,1,35,34,-1,34,26,1,-1,30,135,134,-1,134,27,30,-1,13,136,33,-1,33,14,13,-1,61,60,31,-1,31,1,61,-1,135,136,35,-1,28,194,99,-1,99,36,28,-1,38,29,28,-1,28,36,38,-1,4,2,37,-1,37,39,4,-1,40,27,29,-1,29,38,40,-1,37,2,100,-1,100,64,37,-1,45,7,113,-1,113,114,45,-1,54,45,114,-1,114,115,54,-1,19,20,49,-1,49,48,19,-1,50,23,180,-1,180,67,50,-1,47,22,21,-1,21,53,47,-1,51,24,25,-1,25,52,51,-1,49,20,22,-1,22,47,49,-1,48,52,25,-1,25,19,48,-1,53,21,23,-1,23,50,53,-1,116,46,101,-1,101,217,116,-1,54,2,4,-1,4,45,54,-1,117,113,7,-1,7,6,117,-1,32,55,33,-1,33,30,32,-1,44,130,55,-1,19,25,57,-1,57,56,19,-1,23,21,59,-1,59,58,23,-1,0,31,60,-1,60,56,0,-1,8,98,97,-1,97,58,8,-1,1,26,59,-1,59,61,1,-1,62,3,5,-1,5,57,62,-1,22,20,60,-1,60,61,22,-1,62,24,221,-1,221,222,62,-1,46,36,99,-1,99,101,46,-1,3,62,222,-1,222,66,3,-1,2,54,223,-1,223,100,2,-1,187,16,15,-1,15,170,187,-1,54,115,118,-1,118,223,54,-1,24,51,224,-1,224,221,24,-1,51,52,48,-1,48,49,47,-1,47,53,50,-1,48,47,50,-1,51,48,50,-1,51,50,67,-1,224,51,67,-1,68,6,7,-1,7,69,68,-1,43,42,69,-1,69,70,43,-1,72,73,74,-1,74,71,72,-1,79,80,94,-1,94,78,79,-1,72,71,82,-1,85,235,84,-1,84,77,85,-1,75,77,84,-1,84,83,75,-1,74,86,240,-1,240,95,74,-1,73,87,86,-1,86,74,73,-1,94,81,92,-1,92,88,94,-1,77,93,102,-1,102,85,77,-1,90,82,71,-1,71,91,90,-1,89,80,82,-1,82,90,89,-1,91,71,249,-1,249,250,91,-1,82,80,79,-1,79,72,82,-1,71,74,95,-1,95,249,71,-1,96,88,92,-1,93,88,96,-1,96,102,93,-1,80,89,81,-1,81,94,80,-1,88,76,78,-1,78,94,88,-1,88,93,76,-1,93,77,76,-1,103,104,108,-1,108,112,103,-1,104,105,109,-1,109,108,104,-1,105,119,258,-1,258,109,105,-1,107,111,110,-1,110,106,107,-1,103,112,111,-1,111,107,103,-1,113,121,124,-1,124,114,113,-1,114,124,125,-1,125,115,114,-1,116,217,127,-1,127,122,116,-1,117,116,122,-1,122,123,117,-1,117,123,121,-1,121,113,117,-1,106,110,268,-1,268,120,106,-1,115,125,126,-1,126,118,115,-1,121,112,108,-1,108,124,121,-1,124,108,109,-1,109,125,124,-1,268,110,122,-1,122,127,268,-1,122,110,111,-1,111,123,122,-1,123,111,112,-1,112,121,123,-1,125,109,258,-1,258,126,125,-1,39,11,14,-1,27,40,128,-1,40,68,41,-1,41,129,40,-1,4,39,130,-1,130,70,4,-1,130,39,14,-1,14,33,130,-1,41,42,131,-1,42,43,131,-1,43,44,131,-1,44,55,131,-1,55,32,131,-1,32,128,131,-1,128,129,131,-1,129,41,131,-1,130,33,55,-1,40,129,128,-1,17,16,8,-1,34,10,26,-1,5,3,133,-1,133,132,5,-1,134,0,5,-1,5,132,134,-1,3,66,137,-1,137,133,3,-1,135,31,0,-1,0,134,135,-1,30,33,136,-1,136,135,30,-1,13,34,35,-1,35,136,13,-1,128,32,30,-1,30,27,128,-1,35,1,31,-1,31,135,35,-1,138,141,140,-1,140,139,138,-1,143,142,145,-1,145,144,143,-1,147,146,149,-1,149,148,147,-1,150,153,152,-1,152,151,150,-1,154,156,155,-1,146,147,158,-1,158,157,146,-1,139,147,148,-1,148,159,139,-1,160,154,155,-1,155,140,160,-1,161,164,163,-1,163,162,161,-1,165,151,167,-1,167,166,165,-1,150,151,165,-1,165,168,150,-1,150,169,153,-1,65,169,171,-1,171,170,65,-1,64,153,169,-1,169,65,64,-1,171,168,173,-1,173,172,171,-1,174,165,166,-1,166,175,174,-1,168,165,174,-1,174,173,168,-1,150,168,171,-1,171,169,150,-1,143,176,178,-1,178,177,143,-1,163,179,180,-1,180,97,163,-1,182,181,183,-1,183,164,182,-1,185,184,186,-1,186,144,185,-1,173,174,161,-1,161,162,173,-1,172,162,98,-1,98,187,172,-1,188,191,190,-1,190,189,188,-1,192,188,189,-1,189,193,192,-1,190,191,194,-1,194,137,190,-1,160,196,195,-1,195,197,160,-1,198,161,175,-1,175,199,198,-1,200,192,193,-1,193,201,200,-1,166,167,203,-1,203,202,166,-1,182,198,204,-1,204,177,182,-1,201,199,202,-1,191,149,99,-1,99,194,191,-1,148,149,191,-1,191,188,148,-1,154,152,153,-1,153,205,154,-1,159,148,188,-1,188,192,159,-1,153,64,100,-1,100,205,153,-1,156,206,207,-1,207,155,156,-1,209,208,206,-1,206,156,209,-1,176,210,211,-1,211,178,176,-1,212,67,180,-1,180,179,212,-1,213,214,183,-1,183,181,213,-1,216,215,186,-1,186,184,216,-1,211,213,181,-1,181,178,211,-1,210,176,186,-1,186,215,210,-1,214,212,179,-1,179,183,214,-1,157,217,101,-1,101,146,157,-1,209,156,154,-1,154,205,209,-1,158,147,155,-1,155,207,158,-1,218,200,203,-1,203,219,218,-1,195,219,197,-1,176,143,144,-1,144,186,176,-1,179,163,164,-1,164,183,179,-1,142,143,177,-1,177,204,142,-1,162,163,97,-1,97,98,162,-1,198,182,164,-1,164,161,198,-1,185,144,145,-1,145,220,185,-1,181,182,177,-1,177,178,181,-1,185,222,221,-1,221,184,185,-1,146,101,99,-1,99,149,146,-1,220,66,222,-1,222,185,220,-1,205,100,223,-1,223,209,205,-1,187,170,171,-1,171,172,187,-1,209,223,118,-1,118,208,209,-1,184,221,224,-1,224,216,184,-1,212,214,213,-1,213,211,210,-1,212,213,210,-1,210,215,216,-1,212,210,216,-1,67,212,216,-1,224,67,216,-1,139,140,155,-1,155,147,139,-1,196,160,140,-1,140,141,196,-1,226,225,228,-1,228,227,226,-1,230,229,232,-1,232,231,230,-1,226,233,225,-1,85,234,236,-1,236,235,85,-1,238,237,236,-1,236,234,238,-1,228,95,240,-1,240,239,228,-1,227,228,239,-1,239,241,227,-1,232,244,243,-1,243,242,232,-1,234,85,102,-1,102,245,234,-1,246,247,225,-1,225,233,246,-1,248,246,233,-1,233,231,248,-1,247,250,249,-1,249,225,247,-1,233,226,230,-1,230,231,233,-1,225,249,95,-1,95,228,225,-1,96,243,244,-1,245,102,96,-1,96,244,245,-1,231,232,242,-1,242,248,231,-1,244,232,229,-1,229,251,244,-1,244,251,245,-1,245,251,234,-1,252,255,254,-1,254,253,252,-1,253,254,257,-1,257,256,253,-1,256,257,258,-1,258,119,256,-1,260,259,262,-1,262,261,260,-1,252,260,261,-1,261,255,252,-1,207,206,264,-1,264,263,207,-1,206,208,265,-1,265,264,206,-1,157,266,127,-1,127,217,157,-1,158,267,266,-1,266,157,158,-1,158,207,263,-1,263,267,158,-1,259,120,268,-1,268,262,259,-1,208,118,126,-1,126,265,208,-1,263,264,254,-1,254,255,263,-1,264,265,257,-1,257,254,264,-1,268,127,266,-1,266,262,268,-1,266,267,261,-1,261,262,266,-1,267,263,255,-1,255,261,267,-1,265,126,258,-1,258,257,265,-1,152,167,151,-1,192,269,159,-1,159,270,138,-1,138,139,159,-1,154,160,197,-1,197,152,154,-1,197,203,167,-1,167,152,197,-1,138,271,141,-1,141,271,196,-1,196,271,195,-1,195,271,219,-1,219,271,218,-1,218,271,269,-1,269,271,270,-1,270,271,138,-1,197,219,203,-1,159,269,270,-1,173,162,172,-1,175,161,174,-1,145,189,190,-1,190,220,145,-1,193,189,145,-1,145,142,193,-1,220,190,137,-1,137,66,220,-1,201,193,142,-1,142,204,201,-1,200,201,202,-1,202,203,200,-1,166,202,199,-1,199,175,166,-1,269,192,200,-1,200,218,269,-1,199,201,204,-1,204,198,199,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #190, 1976 total numbers */
	this.IndexedFaceSet_10_190_texCoordIndex = new MFInt32(Java.to([0,88,89,-1,89,3,0,-1,5,6,7,-1,7,4,5,-1,1,11,12,-1,12,10,1,-1,13,14,15,-1,15,16,13,-1,17,2,18,-1,10,72,71,-1,71,1,10,-1,88,20,11,-1,11,1,88,-1,90,89,2,-1,2,17,90,-1,22,23,24,-1,24,25,22,-1,26,27,28,-1,28,14,26,-1,13,29,26,-1,26,14,13,-1,13,16,30,-1,31,32,33,-1,33,30,31,-1,34,31,30,-1,30,16,34,-1,33,35,36,-1,36,29,33,-1,37,38,27,-1,27,26,37,-1,29,36,37,-1,37,26,29,-1,13,30,33,-1,33,29,13,-1,5,40,41,-1,41,39,5,-1,24,43,44,-1,44,42,24,-1,46,25,47,-1,47,45,46,-1,49,6,50,-1,50,48,49,-1,36,23,22,-1,22,37,36,-1,35,51,52,-1,52,23,35,-1,8,154,155,-1,155,9,8,-1,19,156,154,-1,154,8,19,-1,155,159,55,-1,55,9,155,-1,90,152,56,-1,56,21,90,-1,57,63,38,-1,38,22,57,-1,59,157,156,-1,156,19,59,-1,27,158,61,-1,61,28,27,-1,46,40,60,-1,60,57,46,-1,157,158,63,-1,9,55,64,-1,64,12,9,-1,11,8,9,-1,9,12,11,-1,17,65,16,-1,16,15,17,-1,20,19,8,-1,8,11,20,-1,16,65,66,-1,66,34,16,-1,18,2,68,-1,68,67,18,-1,70,18,67,-1,67,69,70,-1,39,41,74,-1,74,73,39,-1,75,42,44,-1,44,76,75,-1,77,45,47,-1,47,78,77,-1,80,48,50,-1,50,79,80,-1,74,41,45,-1,45,77,74,-1,73,79,50,-1,50,39,73,-1,78,47,42,-1,42,75,78,-1,72,10,81,-1,81,82,72,-1,70,65,17,-1,17,18,70,-1,71,68,2,-1,2,1,71,-1,58,62,61,-1,61,59,58,-1,56,152,62,-1,39,50,6,-1,6,5,39,-1,42,47,25,-1,25,24,42,-1,4,60,40,-1,40,5,4,-1,23,52,43,-1,43,24,23,-1,57,22,25,-1,25,46,57,-1,49,53,7,-1,7,6,49,-1,45,41,40,-1,40,46,45,-1,49,48,83,-1,83,84,49,-1,10,12,64,-1,64,81,10,-1,53,49,84,-1,84,54,53,-1,65,70,85,-1,85,66,65,-1,51,35,33,-1,33,32,51,-1,70,69,86,-1,86,85,70,-1,48,80,87,-1,87,83,48,-1,80,79,73,-1,73,74,77,-1,77,78,75,-1,73,77,75,-1,80,73,75,-1,80,75,76,-1,87,80,76,-1,88,1,2,-1,2,89,88,-1,21,3,89,-1,89,90,21,-1,92,93,94,-1,94,91,92,-1,96,97,98,-1,98,95,96,-1,92,91,99,-1,101,102,103,-1,103,100,101,-1,105,100,103,-1,103,104,105,-1,94,106,107,-1,107,108,94,-1,93,109,106,-1,106,94,93,-1,98,110,111,-1,111,112,98,-1,100,113,114,-1,114,101,100,-1,115,99,91,-1,91,116,115,-1,117,97,99,-1,99,115,117,-1,116,91,118,-1,118,119,116,-1,99,97,96,-1,96,92,99,-1,91,94,108,-1,108,118,91,-1,120,112,111,-1,113,112,120,-1,120,114,113,-1,97,117,110,-1,110,98,97,-1,112,121,95,-1,95,98,112,-1,112,113,121,-1,113,100,121,-1,122,123,124,-1,124,125,122,-1,123,126,127,-1,127,124,123,-1,126,128,129,-1,129,127,126,-1,131,132,133,-1,133,130,131,-1,122,125,132,-1,132,131,122,-1,136,143,146,-1,146,135,136,-1,135,146,147,-1,147,137,135,-1,139,142,149,-1,149,144,139,-1,138,139,144,-1,144,145,138,-1,138,145,143,-1,143,136,138,-1,130,133,134,-1,134,140,130,-1,137,147,148,-1,148,141,137,-1,143,125,124,-1,124,146,143,-1,146,124,127,-1,127,147,146,-1,134,133,144,-1,144,149,134,-1,144,133,132,-1,132,145,144,-1,145,132,125,-1,125,143,145,-1,147,127,129,-1,129,148,147,-1,15,14,28,-1,19,20,150,-1,20,88,0,-1,0,151,20,-1,17,15,152,-1,152,90,17,-1,152,15,28,-1,28,61,152,-1,0,3,153,-1,3,21,153,-1,21,56,153,-1,56,62,153,-1,62,58,153,-1,58,150,153,-1,150,151,153,-1,151,0,153,-1,152,61,62,-1,20,151,150,-1,36,35,23,-1,38,37,22,-1,7,53,155,-1,155,154,7,-1,156,4,7,-1,7,154,156,-1,53,54,159,-1,159,155,53,-1,157,60,4,-1,4,156,157,-1,59,61,158,-1,158,157,59,-1,27,38,63,-1,63,158,27,-1,150,58,59,-1,59,19,150,-1,63,57,60,-1,60,157,63,-1,160,163,162,-1,162,161,160,-1,165,164,167,-1,167,166,165,-1,169,168,171,-1,171,170,169,-1,172,175,174,-1,174,173,172,-1,176,178,177,-1,168,169,180,-1,180,179,168,-1,161,169,170,-1,170,181,161,-1,182,176,177,-1,177,162,182,-1,183,186,185,-1,185,184,183,-1,187,173,189,-1,189,188,187,-1,172,173,187,-1,187,190,172,-1,172,191,175,-1,192,191,194,-1,194,193,192,-1,195,175,191,-1,191,192,195,-1,194,190,197,-1,197,196,194,-1,198,187,188,-1,188,199,198,-1,190,187,198,-1,198,197,190,-1,172,190,194,-1,194,191,172,-1,165,200,202,-1,202,201,165,-1,185,203,205,-1,205,204,185,-1,207,206,208,-1,208,186,207,-1,210,209,211,-1,211,166,210,-1,197,198,183,-1,183,184,197,-1,196,184,213,-1,213,212,196,-1,214,217,216,-1,216,215,214,-1,218,214,215,-1,215,219,218,-1,216,217,221,-1,221,220,216,-1,182,223,222,-1,222,224,182,-1,225,183,199,-1,199,226,225,-1,227,218,219,-1,219,228,227,-1,188,189,230,-1,230,229,188,-1,207,225,231,-1,231,201,207,-1,228,226,229,-1,217,171,232,-1,232,221,217,-1,170,171,217,-1,217,214,170,-1,176,174,175,-1,175,233,176,-1,181,170,214,-1,214,218,181,-1,175,195,234,-1,234,233,175,-1,178,235,236,-1,236,177,178,-1,238,237,235,-1,235,178,238,-1,200,239,240,-1,240,202,200,-1,241,242,205,-1,205,203,241,-1,243,244,208,-1,208,206,243,-1,246,245,211,-1,211,209,246,-1,240,243,206,-1,206,202,240,-1,239,200,211,-1,211,245,239,-1,244,241,203,-1,203,208,244,-1,179,248,247,-1,247,168,179,-1,238,178,176,-1,176,233,238,-1,180,169,177,-1,177,236,180,-1,249,227,230,-1,230,250,249,-1,222,250,224,-1,200,165,166,-1,166,211,200,-1,203,185,186,-1,186,208,203,-1,164,165,201,-1,201,231,164,-1,184,185,204,-1,204,213,184,-1,225,207,186,-1,186,183,225,-1,210,166,167,-1,167,251,210,-1,206,207,201,-1,201,202,206,-1,210,253,252,-1,252,209,210,-1,168,247,232,-1,232,171,168,-1,251,254,253,-1,253,210,251,-1,233,234,255,-1,255,238,233,-1,212,193,194,-1,194,196,212,-1,238,255,256,-1,256,237,238,-1,209,252,257,-1,257,246,209,-1,241,244,243,-1,243,240,239,-1,241,243,239,-1,239,245,246,-1,241,239,246,-1,242,241,246,-1,257,242,246,-1,161,162,177,-1,177,169,161,-1,223,182,162,-1,162,163,223,-1,259,258,261,-1,261,260,259,-1,263,262,265,-1,265,264,263,-1,259,266,258,-1,268,267,270,-1,270,269,268,-1,272,271,270,-1,270,267,272,-1,261,275,274,-1,274,273,261,-1,260,261,273,-1,273,276,260,-1,265,279,278,-1,278,277,265,-1,267,268,281,-1,281,280,267,-1,282,283,258,-1,258,266,282,-1,284,282,266,-1,266,264,284,-1,283,286,285,-1,285,258,283,-1,266,259,263,-1,263,264,266,-1,258,285,275,-1,275,261,258,-1,287,278,279,-1,280,281,287,-1,287,279,280,-1,264,265,277,-1,277,284,264,-1,279,265,262,-1,262,288,279,-1,279,288,280,-1,280,288,267,-1,289,292,291,-1,291,290,289,-1,290,291,294,-1,294,293,290,-1,293,294,296,-1,296,295,293,-1,298,297,300,-1,300,299,298,-1,289,298,299,-1,299,292,289,-1,302,301,304,-1,304,303,302,-1,301,305,306,-1,306,304,301,-1,307,310,309,-1,309,308,307,-1,311,312,310,-1,310,307,311,-1,311,302,303,-1,303,312,311,-1,297,313,314,-1,314,300,297,-1,305,315,316,-1,316,306,305,-1,303,304,291,-1,291,292,303,-1,304,306,294,-1,294,291,304,-1,314,309,310,-1,310,300,314,-1,310,312,299,-1,299,300,310,-1,312,303,292,-1,292,299,312,-1,306,316,296,-1,296,294,306,-1,174,189,173,-1,218,317,181,-1,181,318,160,-1,160,161,181,-1,176,182,224,-1,224,174,176,-1,224,230,189,-1,189,174,224,-1,160,319,163,-1,163,319,223,-1,223,319,222,-1,222,319,250,-1,250,319,249,-1,249,319,317,-1,317,319,318,-1,318,319,160,-1,224,250,230,-1,181,317,318,-1,197,184,196,-1,199,183,198,-1,167,215,216,-1,216,251,167,-1,219,215,167,-1,167,164,219,-1,251,216,220,-1,220,254,251,-1,228,219,164,-1,164,231,228,-1,227,228,229,-1,229,230,227,-1,188,229,226,-1,226,199,188,-1,317,218,227,-1,227,249,317,-1,226,228,231,-1,231,225,226,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #190, 816 total numbers made up of 272 3-tuple values */
	this.Coordinate_11_190_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(4.3940),doubleToFloat(7.9660),doubleToFloat(-2.0900),doubleToFloat(4.3180),doubleToFloat(7.9660),doubleToFloat(1.4770),doubleToFloat(1.6310),doubleToFloat(13.1800),doubleToFloat(1.9250),doubleToFloat(1.5040),doubleToFloat(7.9660),doubleToFloat(-2.9780),doubleToFloat(3.8280),doubleToFloat(13.4100),doubleToFloat(1.5360),doubleToFloat(3.0960),doubleToFloat(7.9660),doubleToFloat(-2.7150),doubleToFloat(3.4740),doubleToFloat(14.8700),doubleToFloat(-2.4030),doubleToFloat(4.0160),doubleToFloat(15.3200),doubleToFloat(-0.5639),doubleToFloat(1.6330),doubleToFloat(7.9660),doubleToFloat(2.7590),doubleToFloat(2.0870),doubleToFloat(9.8120),doubleToFloat(3.4670)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.1950),doubleToFloat(8.5980),doubleToFloat(2.9280),doubleToFloat(3.3460),doubleToFloat(11.1700),doubleToFloat(2.9520),doubleToFloat(2.0030),doubleToFloat(11.1900),doubleToFloat(3.1340),doubleToFloat(4.2160),doubleToFloat(9.7350),doubleToFloat(2.5310),doubleToFloat(4.1530),doubleToFloat(10.9500),doubleToFloat(2.5280),doubleToFloat(0.9118),doubleToFloat(9.7860),doubleToFloat(3.2280),doubleToFloat(1.0990),doubleToFloat(8.6120),doubleToFloat(3.0730),doubleToFloat(2.0510),doubleToFloat(8.5970),doubleToFloat(3.1410),doubleToFloat(3.3790),doubleToFloat(9.7830),doubleToFloat(3.1890),doubleToFloat(4.9060),doubleToFloat(1.6740),doubleToFloat(-2.1420)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.3540),doubleToFloat(1.6740),doubleToFloat(-0.4879),doubleToFloat(3.4020),doubleToFloat(1.6740),doubleToFloat(2.6560),doubleToFloat(4.7600),doubleToFloat(1.6740),doubleToFloat(1.6230),doubleToFloat(1.6510),doubleToFloat(1.6740),doubleToFloat(3.0710),doubleToFloat(1.4660),doubleToFloat(1.6740),doubleToFloat(-3.4960),doubleToFloat(3.2480),doubleToFloat(1.6740),doubleToFloat(-3.1650),doubleToFloat(3.0350),doubleToFloat(7.9660),doubleToFloat(2.4680),doubleToFloat(4.5790),doubleToFloat(10.4600),doubleToFloat(-2.2640),doubleToFloat(1.4320),doubleToFloat(10.4600),doubleToFloat(-3.1760),doubleToFloat(3.1650),doubleToFloat(10.4500),doubleToFloat(-2.9890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.1320),doubleToFloat(10.5200),doubleToFloat(-0.4879),doubleToFloat(4.7810),doubleToFloat(7.9660),doubleToFloat(-0.4879),doubleToFloat(5.2380),doubleToFloat(10.8100),doubleToFloat(-0.4879),doubleToFloat(4.7830),doubleToFloat(10.6700),doubleToFloat(1.6090),doubleToFloat(3.9470),doubleToFloat(8.6290),doubleToFloat(2.4650),doubleToFloat(4.4500),doubleToFloat(8.7340),doubleToFloat(1.5250),doubleToFloat(1.4470),doubleToFloat(12.4200),doubleToFloat(-3.2970),doubleToFloat(1.5970),doubleToFloat(12.4200),doubleToFloat(2.3140),doubleToFloat(3.2210),doubleToFloat(12.4200),doubleToFloat(-3.0800),doubleToFloat(3.6430),doubleToFloat(12.4200),doubleToFloat(2.1160)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.0050),doubleToFloat(12.4200),doubleToFloat(-2.6790),doubleToFloat(6.8040),doubleToFloat(14.1400),doubleToFloat(-1.7480),doubleToFloat(7.1800),doubleToFloat(14.4900),doubleToFloat(-0.5316),doubleToFloat(6.7200),doubleToFloat(13.9900),doubleToFloat(0.8224),doubleToFloat(5.8170),doubleToFloat(12.4200),doubleToFloat(1.4150),doubleToFloat(2.6840),doubleToFloat(14.7200),doubleToFloat(0.6434),doubleToFloat(1.4280),doubleToFloat(14.8400),doubleToFloat(-2.6250),doubleToFloat(5.0330),doubleToFloat(-0.1701),doubleToFloat(1.7100),doubleToFloat(5.3480),doubleToFloat(-0.1701),doubleToFloat(-2.2360),doubleToFloat(5.9560),doubleToFloat(-0.1701),doubleToFloat(-0.4879)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.6770),doubleToFloat(-0.1701),doubleToFloat(3.2660),doubleToFloat(1.4260),doubleToFloat(-0.1701),doubleToFloat(-3.7270),doubleToFloat(3.3530),doubleToFloat(-0.1701),doubleToFloat(-3.3580),doubleToFloat(3.4820),doubleToFloat(-0.1701),doubleToFloat(2.7780),doubleToFloat(1.2930),doubleToFloat(14.2800),doubleToFloat(1.2540),doubleToFloat(5.5380),doubleToFloat(11.2100),doubleToFloat(0.9485),doubleToFloat(4.4090),doubleToFloat(4.9410),doubleToFloat(-2.0250),doubleToFloat(3.0890),doubleToFloat(4.9410),doubleToFloat(-2.7900),doubleToFloat(1.6190),doubleToFloat(4.9410),doubleToFloat(2.8460),doubleToFloat(3.2470),doubleToFloat(4.9410),doubleToFloat(2.4760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.7530),doubleToFloat(4.9410),doubleToFloat(-0.4879),doubleToFloat(4.2970),doubleToFloat(4.9410),doubleToFloat(1.5420),doubleToFloat(1.4780),doubleToFloat(4.9410),doubleToFloat(-3.1440),doubleToFloat(1.0640),doubleToFloat(10.8800),doubleToFloat(3.0930),doubleToFloat(0.0000),doubleToFloat(12.4100),doubleToFloat(2.2890),doubleToFloat(0.0000),doubleToFloat(10.8600),doubleToFloat(2.8140),doubleToFloat(0.0000),doubleToFloat(7.9660),doubleToFloat(-2.9180),doubleToFloat(0.0000),doubleToFloat(-0.1701),doubleToFloat(3.3910),doubleToFloat(5.2370),doubleToFloat(14.6000),doubleToFloat(-2.1530),doubleToFloat(5.2420),doubleToFloat(15.2100),doubleToFloat(-0.5639)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.1480),doubleToFloat(13.6300),doubleToFloat(1.2810),doubleToFloat(1.4560),doubleToFloat(14.9500),doubleToFloat(-2.6820),doubleToFloat(5.1570),doubleToFloat(14.9900),doubleToFloat(-2.4040),doubleToFloat(4.7170),doubleToFloat(12.3100),doubleToFloat(-3.3420),doubleToFloat(1.7210),doubleToFloat(12.4600),doubleToFloat(-3.5160),doubleToFloat(2.2880),doubleToFloat(10.1200),doubleToFloat(3.4110),doubleToFloat(2.5150),doubleToFloat(11.2500),doubleToFloat(3.2130),doubleToFloat(0.7893),doubleToFloat(10.4500),doubleToFloat(3.3070),doubleToFloat(4.6340),doubleToFloat(13.7600),doubleToFloat(1.4560),doubleToFloat(5.4580),doubleToFloat(15.4000),doubleToFloat(-0.5581)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.7330),doubleToFloat(15.5800),doubleToFloat(-0.5620),doubleToFloat(1.9790),doubleToFloat(14.8700),doubleToFloat(1.0120),doubleToFloat(3.2420),doubleToFloat(15.4500),doubleToFloat(-2.2140),doubleToFloat(2.6680),doubleToFloat(8.7080),doubleToFloat(3.7750),doubleToFloat(0.6730),doubleToFloat(10.0300),doubleToFloat(3.4650),doubleToFloat(0.0000),doubleToFloat(10.5200),doubleToFloat(3.1160),doubleToFloat(1.7570),doubleToFloat(9.4110),doubleToFloat(-3.6050),doubleToFloat(4.4550),doubleToFloat(9.2820),doubleToFloat(-3.2430),doubleToFloat(1.6430),doubleToFloat(13.1500),doubleToFloat(2.0170),doubleToFloat(1.7520),doubleToFloat(15.7100),doubleToFloat(-0.5545)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.4200),doubleToFloat(15.9400),doubleToFloat(-1.2300),doubleToFloat(0.7787),doubleToFloat(16.0500),doubleToFloat(-1.7220),doubleToFloat(1.4490),doubleToFloat(13.9400),doubleToFloat(1.5650),doubleToFloat(0.7596),doubleToFloat(10.7400),doubleToFloat(3.2160),doubleToFloat(3.3180),doubleToFloat(14.2900),doubleToFloat(1.3230),doubleToFloat(0.0000),doubleToFloat(12.4600),doubleToFloat(-3.5290),doubleToFloat(0.0000),doubleToFloat(13.1800),doubleToFloat(2.0290),doubleToFloat(0.0000),doubleToFloat(4.9410),doubleToFloat(2.9980),doubleToFloat(0.0000),doubleToFloat(7.9660),doubleToFloat(2.8330),doubleToFloat(0.0000),doubleToFloat(12.4200),doubleToFloat(-3.2670)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(13.0900),doubleToFloat(1.9660),doubleToFloat(0.0000),doubleToFloat(14.8400),doubleToFloat(-2.6760),doubleToFloat(0.0000),doubleToFloat(10.7200),doubleToFloat(3.0700),doubleToFloat(1.1860),doubleToFloat(18.7500),doubleToFloat(-0.2328),doubleToFloat(1.0900),doubleToFloat(18.6300),doubleToFloat(0.2718),doubleToFloat(0.5329),doubleToFloat(18.5100),doubleToFloat(0.7137),doubleToFloat(0.5944),doubleToFloat(18.8500),doubleToFloat(-1.0710),doubleToFloat(1.0080),doubleToFloat(18.8100),doubleToFloat(-0.6960),doubleToFloat(1.2980),doubleToFloat(17.4100),doubleToFloat(0.1659),doubleToFloat(0.7460),doubleToFloat(17.2800),doubleToFloat(0.7063)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.7732),doubleToFloat(17.7300),doubleToFloat(-1.4090),doubleToFloat(1.2980),doubleToFloat(17.6500),doubleToFloat(-1.0090),doubleToFloat(1.4600),doubleToFloat(17.5500),doubleToFloat(-0.4555),doubleToFloat(1.6710),doubleToFloat(15.6900),doubleToFloat(-0.5521),doubleToFloat(1.4570),doubleToFloat(15.4700),doubleToFloat(0.0826),doubleToFloat(0.8030),doubleToFloat(15.2900),doubleToFloat(0.5457),doubleToFloat(0.8014),doubleToFloat(15.8300),doubleToFloat(-1.7020),doubleToFloat(1.4080),doubleToFloat(15.8000),doubleToFloat(-1.2300),doubleToFloat(0.0000),doubleToFloat(15.1900),doubleToFloat(0.7518),doubleToFloat(0.0000),doubleToFloat(18.4200),doubleToFloat(0.9895)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(18.8300),doubleToFloat(-1.2360),doubleToFloat(1.4840),doubleToFloat(16.5700),doubleToFloat(-0.5421),doubleToFloat(0.7466),doubleToFloat(16.7200),doubleToFloat(-1.5420),doubleToFloat(1.2830),doubleToFloat(16.6600),doubleToFloat(-1.1020),doubleToFloat(1.3060),doubleToFloat(16.4500),doubleToFloat(0.1104),doubleToFloat(0.7344),doubleToFloat(16.3100),doubleToFloat(0.5306),doubleToFloat(0.0000),doubleToFloat(16.2200),doubleToFloat(0.7959),doubleToFloat(0.0000),doubleToFloat(16.7400),doubleToFloat(-1.7640),doubleToFloat(5.5800),doubleToFloat(11.3000),doubleToFloat(-1.7230),doubleToFloat(5.8580),doubleToFloat(12.4200),doubleToFloat(-2.3350)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.0680),doubleToFloat(12.4200),doubleToFloat(1.6510),doubleToFloat(6.5690),doubleToFloat(12.4200),doubleToFloat(-0.5253),doubleToFloat(3.1310),doubleToFloat(9.0950),doubleToFloat(-2.7890),doubleToFloat(1.4720),doubleToFloat(9.0990),doubleToFloat(-3.0480),doubleToFloat(4.4480),doubleToFloat(9.0990),doubleToFloat(-2.1030),doubleToFloat(4.8930),doubleToFloat(9.1270),doubleToFloat(-0.4879),doubleToFloat(4.6140),doubleToFloat(9.6120),doubleToFloat(1.5670),doubleToFloat(0.0000),doubleToFloat(9.0620),doubleToFloat(-2.9990),doubleToFloat(-6.8040),doubleToFloat(14.1400),doubleToFloat(-1.7480),doubleToFloat(-5.2370),doubleToFloat(14.6000),doubleToFloat(-2.1530)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.2420),doubleToFloat(15.2100),doubleToFloat(-0.5639),doubleToFloat(-7.1800),doubleToFloat(14.4900),doubleToFloat(-0.5316),doubleToFloat(-4.3940),doubleToFloat(7.9660),doubleToFloat(-2.0900),doubleToFloat(-4.4090),doubleToFloat(4.9410),doubleToFloat(-2.0250),doubleToFloat(-3.0890),doubleToFloat(4.9410),doubleToFloat(-2.7900),doubleToFloat(-3.0960),doubleToFloat(7.9660),doubleToFloat(-2.7150),doubleToFloat(-1.4280),doubleToFloat(14.8400),doubleToFloat(-2.6250),doubleToFloat(-3.4740),doubleToFloat(14.8700),doubleToFloat(-2.4030),doubleToFloat(-3.2210),doubleToFloat(12.4200),doubleToFloat(-3.0800),doubleToFloat(-1.4470),doubleToFloat(12.4200),doubleToFloat(-3.2970)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.0030),doubleToFloat(11.1900),doubleToFloat(3.1340),doubleToFloat(-3.3460),doubleToFloat(11.1700),doubleToFloat(2.9520),doubleToFloat(-3.6430),doubleToFloat(12.4200),doubleToFloat(2.1160),doubleToFloat(-1.5970),doubleToFloat(12.4200),doubleToFloat(2.3140),doubleToFloat(-3.8280),doubleToFloat(13.4100),doubleToFloat(1.5360),doubleToFloat(-4.0160),doubleToFloat(15.3200),doubleToFloat(-0.5639),doubleToFloat(-2.6840),doubleToFloat(14.7200),doubleToFloat(0.6434),doubleToFloat(-0.8014),doubleToFloat(15.8300),doubleToFloat(-1.7020),doubleToFloat(-1.4080),doubleToFloat(15.8000),doubleToFloat(-1.2300),doubleToFloat(-5.0050),doubleToFloat(12.4200),doubleToFloat(-2.6790)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.1480),doubleToFloat(13.6300),doubleToFloat(1.2810),doubleToFloat(-3.0350),doubleToFloat(7.9660),doubleToFloat(2.4680),doubleToFloat(-1.6330),doubleToFloat(7.9660),doubleToFloat(2.7590),doubleToFloat(-1.6190),doubleToFloat(4.9410),doubleToFloat(2.8460),doubleToFloat(-3.2470),doubleToFloat(4.9410),doubleToFloat(2.4760),doubleToFloat(-3.3790),doubleToFloat(9.7830),doubleToFloat(3.1890),doubleToFloat(-4.2160),doubleToFloat(9.7350),doubleToFloat(2.5310),doubleToFloat(-4.1530),doubleToFloat(10.9500),doubleToFloat(2.5280),doubleToFloat(-2.0870),doubleToFloat(9.8120),doubleToFloat(3.4670),doubleToFloat(-1.0640),doubleToFloat(10.8800),doubleToFloat(3.0930)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(9.7440),doubleToFloat(2.9480),doubleToFloat(-0.9118),doubleToFloat(9.7860),doubleToFloat(3.2280),doubleToFloat(-1.0990),doubleToFloat(8.6120),doubleToFloat(3.0730),doubleToFloat(-2.0510),doubleToFloat(8.5970),doubleToFloat(3.1410),doubleToFloat(-3.1950),doubleToFloat(8.5980),doubleToFloat(2.9280),doubleToFloat(-3.9470),doubleToFloat(8.6290),doubleToFloat(2.4650),doubleToFloat(-4.9060),doubleToFloat(1.6740),doubleToFloat(-2.1420),doubleToFloat(-4.7530),doubleToFloat(4.9410),doubleToFloat(-0.4879),doubleToFloat(-5.3540),doubleToFloat(1.6740),doubleToFloat(-0.4879),doubleToFloat(-1.6510),doubleToFloat(1.6740),doubleToFloat(3.0710)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(1.6740),doubleToFloat(3.2120),doubleToFloat(-4.7600),doubleToFloat(1.6740),doubleToFloat(1.6230),doubleToFloat(-4.2970),doubleToFloat(4.9410),doubleToFloat(1.5420),doubleToFloat(-3.4020),doubleToFloat(1.6740),doubleToFloat(2.6560),doubleToFloat(-1.4660),doubleToFloat(1.6740),doubleToFloat(-3.4960),doubleToFloat(-1.4780),doubleToFloat(4.9410),doubleToFloat(-3.1440),doubleToFloat(-3.2480),doubleToFloat(1.6740),doubleToFloat(-3.1650),doubleToFloat(0.0000),doubleToFloat(8.6080),doubleToFloat(2.8950),doubleToFloat(-3.1650),doubleToFloat(10.4500),doubleToFloat(-2.9890),doubleToFloat(-3.1310),doubleToFloat(9.0950),doubleToFloat(-2.7890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.4720),doubleToFloat(9.0990),doubleToFloat(-3.0480),doubleToFloat(-1.4320),doubleToFloat(10.4600),doubleToFloat(-3.1760),doubleToFloat(-4.5790),doubleToFloat(10.4600),doubleToFloat(-2.2640),doubleToFloat(-4.4480),doubleToFloat(9.0990),doubleToFloat(-2.1030),doubleToFloat(0.0000),doubleToFloat(10.4600),doubleToFloat(-3.1170),doubleToFloat(-5.8170),doubleToFloat(12.4200),doubleToFloat(1.4150),doubleToFloat(-6.7200),doubleToFloat(13.9900),doubleToFloat(0.8224),doubleToFloat(-5.0680),doubleToFloat(12.4200),doubleToFloat(1.6510),doubleToFloat(-4.3180),doubleToFloat(7.9660),doubleToFloat(1.4770),doubleToFloat(-4.4500),doubleToFloat(8.7340),doubleToFloat(1.5250)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.1320),doubleToFloat(10.5200),doubleToFloat(-0.4879),doubleToFloat(-4.8930),doubleToFloat(9.1270),doubleToFloat(-0.4879),doubleToFloat(-4.6140),doubleToFloat(9.6120),doubleToFloat(1.5670),doubleToFloat(-4.7830),doubleToFloat(10.6700),doubleToFloat(1.6090),doubleToFloat(-4.7810),doubleToFloat(7.9660),doubleToFloat(-0.4879),doubleToFloat(-1.6310),doubleToFloat(13.1800),doubleToFloat(1.9250),doubleToFloat(-1.4570),doubleToFloat(15.4700),doubleToFloat(0.0826),doubleToFloat(-1.6710),doubleToFloat(15.6900),doubleToFloat(-0.5521),doubleToFloat(-0.8030),doubleToFloat(15.2900),doubleToFloat(0.5457),doubleToFloat(-1.2930),doubleToFloat(14.2800),doubleToFloat(1.2540)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.3480),doubleToFloat(-0.1701),doubleToFloat(-2.2360),doubleToFloat(-5.9560),doubleToFloat(-0.1701),doubleToFloat(-0.4879),doubleToFloat(-1.6770),doubleToFloat(-0.1701),doubleToFloat(3.2660),doubleToFloat(-5.0330),doubleToFloat(-0.1701),doubleToFloat(1.7100),doubleToFloat(-3.4820),doubleToFloat(-0.1701),doubleToFloat(2.7780),doubleToFloat(-3.3530),doubleToFloat(-0.1701),doubleToFloat(-3.3580),doubleToFloat(-1.4260),doubleToFloat(-0.1701),doubleToFloat(-3.7270),doubleToFloat(0.0000),doubleToFloat(15.8500),doubleToFloat(-1.9290),doubleToFloat(-5.2380),doubleToFloat(10.8100),doubleToFloat(-0.4879),doubleToFloat(-5.5380),doubleToFloat(11.2100),doubleToFloat(0.9485)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.5040),doubleToFloat(7.9660),doubleToFloat(-2.9780),doubleToFloat(0.0000),doubleToFloat(1.6740),doubleToFloat(-3.4910),doubleToFloat(0.0000),doubleToFloat(4.9410),doubleToFloat(-3.1440),doubleToFloat(0.0000),doubleToFloat(14.0900),doubleToFloat(1.3780),doubleToFloat(0.0000),doubleToFloat(-0.1701),doubleToFloat(-3.7650),doubleToFloat(-1.4560),doubleToFloat(14.9500),doubleToFloat(-2.6820),doubleToFloat(-5.1570),doubleToFloat(14.9900),doubleToFloat(-2.4040),doubleToFloat(-4.7170),doubleToFloat(12.3100),doubleToFloat(-3.3420),doubleToFloat(-1.7210),doubleToFloat(12.4600),doubleToFloat(-3.5160),doubleToFloat(-4.6340),doubleToFloat(13.7600),doubleToFloat(1.4560)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.4580),doubleToFloat(15.4000),doubleToFloat(-0.5581),doubleToFloat(-3.7330),doubleToFloat(15.5800),doubleToFloat(-0.5620),doubleToFloat(-3.3180),doubleToFloat(14.2900),doubleToFloat(1.3230),doubleToFloat(-3.2420),doubleToFloat(15.4500),doubleToFloat(-2.2140),doubleToFloat(-0.7893),doubleToFloat(10.4500),doubleToFloat(3.3070),doubleToFloat(0.0000),doubleToFloat(10.2000),doubleToFloat(3.3250),doubleToFloat(-0.6730),doubleToFloat(10.0300),doubleToFloat(3.4650),doubleToFloat(-2.6680),doubleToFloat(8.7080),doubleToFloat(3.7750),doubleToFloat(-2.2880),doubleToFloat(10.1200),doubleToFloat(3.4110),doubleToFloat(-1.7570),doubleToFloat(9.4110),doubleToFloat(-3.6050)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(9.4540),doubleToFloat(-3.6260),doubleToFloat(-4.4550),doubleToFloat(9.2820),doubleToFloat(-3.2430),doubleToFloat(-1.9790),doubleToFloat(14.8700),doubleToFloat(1.0120),doubleToFloat(-1.4490),doubleToFloat(13.9400),doubleToFloat(1.5650),doubleToFloat(-1.6430),doubleToFloat(13.1500),doubleToFloat(2.0170),doubleToFloat(-0.7596),doubleToFloat(10.7400),doubleToFloat(3.2160),doubleToFloat(-1.4200),doubleToFloat(15.9400),doubleToFloat(-1.2300),doubleToFloat(-0.7787),doubleToFloat(16.0500),doubleToFloat(-1.7220),doubleToFloat(-1.7520),doubleToFloat(15.7100),doubleToFloat(-0.5545),doubleToFloat(0.0000),doubleToFloat(14.9400),doubleToFloat(-2.7340)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(16.0900),doubleToFloat(-1.9440),doubleToFloat(-2.5150),doubleToFloat(11.2500),doubleToFloat(3.2130),doubleToFloat(-1.1860),doubleToFloat(18.7500),doubleToFloat(-0.2328),doubleToFloat(-1.0900),doubleToFloat(18.6300),doubleToFloat(0.2718),doubleToFloat(-1.2980),doubleToFloat(17.4100),doubleToFloat(0.1659),doubleToFloat(-1.4600),doubleToFloat(17.5500),doubleToFloat(-0.4555),doubleToFloat(-0.5329),doubleToFloat(18.5100),doubleToFloat(0.7137),doubleToFloat(-0.7460),doubleToFloat(17.2800),doubleToFloat(0.7063),doubleToFloat(0.0000),doubleToFloat(17.1700),doubleToFloat(0.9985),doubleToFloat(-0.5944),doubleToFloat(18.8500),doubleToFloat(-1.0710)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0080),doubleToFloat(18.8100),doubleToFloat(-0.6960),doubleToFloat(-1.2980),doubleToFloat(17.6500),doubleToFloat(-1.0090),doubleToFloat(-0.7732),doubleToFloat(17.7300),doubleToFloat(-1.4090),doubleToFloat(-1.4840),doubleToFloat(16.5700),doubleToFloat(-0.5421),doubleToFloat(-1.3060),doubleToFloat(16.4500),doubleToFloat(0.1104),doubleToFloat(-0.7344),doubleToFloat(16.3100),doubleToFloat(0.5306),doubleToFloat(-0.7466),doubleToFloat(16.7200),doubleToFloat(-1.5420),doubleToFloat(-1.2830),doubleToFloat(16.6600),doubleToFloat(-1.1020),doubleToFloat(0.0000),doubleToFloat(17.7400),doubleToFloat(-1.6660),doubleToFloat(-5.5800),doubleToFloat(11.3000),doubleToFloat(-1.7230)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.8580),doubleToFloat(12.4200),doubleToFloat(-2.3350),doubleToFloat(-6.5690),doubleToFloat(12.4200),doubleToFloat(-0.5253)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #191, 640 total numbers made up of 320 2-tuple values */
	this.TextureCoordinate_11_191_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2062),doubleToFloat(0.9078),doubleToFloat(0.2161),doubleToFloat(0.9206),doubleToFloat(0.1830),doubleToFloat(0.9354),doubleToFloat(0.1826),doubleToFloat(0.9165),doubleToFloat(0.2109),doubleToFloat(0.7901),doubleToFloat(0.2108),doubleToFloat(0.7652),doubleToFloat(0.2391),doubleToFloat(0.7551),doubleToFloat(0.2427),doubleToFloat(0.7856),doubleToFloat(0.2457),doubleToFloat(0.8180),doubleToFloat(0.2761),doubleToFloat(0.8169)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2391),doubleToFloat(0.9419),doubleToFloat(0.2290),doubleToFloat(0.8893),doubleToFloat(0.2595),doubleToFloat(0.9066),doubleToFloat(0.0744),doubleToFloat(0.8658),doubleToFloat(0.0962),doubleToFloat(0.8615),doubleToFloat(0.1072),doubleToFloat(0.8914),doubleToFloat(0.0918),doubleToFloat(0.8982),doubleToFloat(0.1322),doubleToFloat(0.9142),doubleToFloat(0.1573),doubleToFloat(0.9435),doubleToFloat(0.2121),doubleToFloat(0.8179)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2171),doubleToFloat(0.8843),doubleToFloat(0.1461),doubleToFloat(0.9015),doubleToFloat(0.0956),doubleToFloat(0.7806),doubleToFloat(0.0722),doubleToFloat(0.7805),doubleToFloat(0.0795),doubleToFloat(0.7510),doubleToFloat(0.1035),doubleToFloat(0.7569),doubleToFloat(0.0931),doubleToFloat(0.8401),doubleToFloat(0.1111),doubleToFloat(0.8374),doubleToFloat(0.1169),doubleToFloat(0.8568),doubleToFloat(0.0696),doubleToFloat(0.8416)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0596),doubleToFloat(0.8658),doubleToFloat(0.0493),doubleToFloat(0.8640),doubleToFloat(0.0441),doubleToFloat(0.8402),doubleToFloat(0.0535),doubleToFloat(0.8402),doubleToFloat(0.0684),doubleToFloat(0.9052),doubleToFloat(0.0581),doubleToFloat(0.8096),doubleToFloat(0.0756),doubleToFloat(0.8110),doubleToFloat(0.0951),doubleToFloat(0.8140),doubleToFloat(0.1121),doubleToFloat(0.8137),doubleToFloat(0.2087),doubleToFloat(0.7427)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1641),doubleToFloat(0.7685),doubleToFloat(0.1688),doubleToFloat(0.7497),doubleToFloat(0.0889),doubleToFloat(0.7220),doubleToFloat(0.0604),doubleToFloat(0.7475),doubleToFloat(0.0707),doubleToFloat(0.7136),doubleToFloat(0.1311),doubleToFloat(0.7433),doubleToFloat(0.1270),doubleToFloat(0.7628),doubleToFloat(0.1093),doubleToFloat(0.7333),doubleToFloat(0.2609),doubleToFloat(0.7061),doubleToFloat(0.2692),doubleToFloat(0.7455)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2341),doubleToFloat(0.7254),doubleToFloat(0.0457),doubleToFloat(0.8100),doubleToFloat(0.0532),doubleToFloat(0.7798),doubleToFloat(0.2733),doubleToFloat(0.7872),doubleToFloat(0.2932),doubleToFloat(0.7907),doubleToFloat(0.2948),doubleToFloat(0.8155),doubleToFloat(0.1364),doubleToFloat(0.8780),doubleToFloat(0.1278),doubleToFloat(0.7840),doubleToFloat(0.1770),doubleToFloat(0.8489),doubleToFloat(0.1723),doubleToFloat(0.8209)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1644),doubleToFloat(0.7901),doubleToFloat(0.1371),doubleToFloat(0.8407),doubleToFloat(0.1578),doubleToFloat(0.8633),doubleToFloat(0.1332),doubleToFloat(0.8111),doubleToFloat(0.2798),doubleToFloat(0.9154),doubleToFloat(0.1114),doubleToFloat(0.9252),doubleToFloat(0.0935),doubleToFloat(0.9365),doubleToFloat(0.1606),doubleToFloat(0.9636),doubleToFloat(0.1838),doubleToFloat(0.9605),doubleToFloat(0.1415),doubleToFloat(0.9665)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1301),doubleToFloat(0.9481),doubleToFloat(0.2085),doubleToFloat(0.9645),doubleToFloat(0.2307),doubleToFloat(0.9662),doubleToFloat(0.2070),doubleToFloat(0.7280),doubleToFloat(0.1722),doubleToFloat(0.7372),doubleToFloat(0.0999),doubleToFloat(0.6904),doubleToFloat(0.0926),doubleToFloat(0.6738),doubleToFloat(0.1349),doubleToFloat(0.7262),doubleToFloat(0.1135),doubleToFloat(0.7095),doubleToFloat(0.2273),doubleToFloat(0.7051)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2443),doubleToFloat(0.6757),doubleToFloat(0.2569),doubleToFloat(0.9518),doubleToFloat(0.2435),doubleToFloat(0.9674),doubleToFloat(0.2703),doubleToFloat(0.7001),doubleToFloat(0.2843),doubleToFloat(0.7447),doubleToFloat(0.1153),doubleToFloat(0.9557),doubleToFloat(0.1314),doubleToFloat(0.9715),doubleToFloat(0.2466),doubleToFloat(0.6647),doubleToFloat(0.2111),doubleToFloat(0.9142),doubleToFloat(0.1828),doubleToFloat(0.9259)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1391),doubleToFloat(0.9078),doubleToFloat(0.7222),doubleToFloat(0.5334),doubleToFloat(0.7939),doubleToFloat(0.5375),doubleToFloat(0.7797),doubleToFloat(0.5937),doubleToFloat(0.7221),doubleToFloat(0.5867),doubleToFloat(0.8071),doubleToFloat(0.4347),doubleToFloat(0.8071),doubleToFloat(0.4970),doubleToFloat(0.7742),doubleToFloat(0.4902),doubleToFloat(0.7791),doubleToFloat(0.4415),doubleToFloat(0.7587),doubleToFloat(0.5190)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7580),doubleToFloat(0.3486),doubleToFloat(0.7374),doubleToFloat(0.3480),doubleToFloat(0.7434),doubleToFloat(0.3318),doubleToFloat(0.7617),doubleToFloat(0.3287),doubleToFloat(0.8019),doubleToFloat(0.3180),doubleToFloat(0.7855),doubleToFloat(0.3483),doubleToFloat(0.7180),doubleToFloat(0.6439),doubleToFloat(0.6841),doubleToFloat(0.6420),doubleToFloat(0.6901),doubleToFloat(0.5838),doubleToFloat(0.7703),doubleToFloat(0.6518)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7545),doubleToFloat(0.4510),doubleToFloat(0.7462),doubleToFloat(0.4243),doubleToFloat(0.7580),doubleToFloat(0.4074),doubleToFloat(0.7521),doubleToFloat(0.3566),doubleToFloat(0.7366),doubleToFloat(0.3518),doubleToFloat(0.7275),doubleToFloat(0.4912),doubleToFloat(0.7114),doubleToFloat(0.4992),doubleToFloat(0.7404),doubleToFloat(0.4799),doubleToFloat(0.6943),doubleToFloat(0.5310),doubleToFloat(0.6975),doubleToFloat(0.5019)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7257),doubleToFloat(0.3942),doubleToFloat(0.7898),doubleToFloat(0.3761),doubleToFloat(0.4891),doubleToFloat(0.2640),doubleToFloat(0.4640),doubleToFloat(0.2586),doubleToFloat(0.4682),doubleToFloat(0.2267),doubleToFloat(0.4907),doubleToFloat(0.2308),doubleToFloat(0.4218),doubleToFloat(0.2452),doubleToFloat(0.4415),doubleToFloat(0.2159),doubleToFloat(0.3965),doubleToFloat(0.2248),doubleToFloat(0.4199),doubleToFloat(0.2063)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5525),doubleToFloat(0.2642),doubleToFloat(0.5139),doubleToFloat(0.2679),doubleToFloat(0.5142),doubleToFloat(0.2310),doubleToFloat(0.5404),doubleToFloat(0.2317),doubleToFloat(0.5541),doubleToFloat(0.2297),doubleToFloat(0.4822),doubleToFloat(0.1663),doubleToFloat(0.5015),doubleToFloat(0.1705),doubleToFloat(0.4610),doubleToFloat(0.1589),doubleToFloat(0.5210),doubleToFloat(0.1713),doubleToFloat(0.5426),doubleToFloat(0.1670)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5723),doubleToFloat(0.2574),doubleToFloat(0.4430),doubleToFloat(0.1534),doubleToFloat(0.5601),doubleToFloat(0.1684),doubleToFloat(0.4961),doubleToFloat(0.2007),doubleToFloat(0.5415),doubleToFloat(0.1994),doubleToFloat(0.5176),doubleToFloat(0.2012),doubleToFloat(0.4752),doubleToFloat(0.1965),doubleToFloat(0.4512),doubleToFloat(0.1874),doubleToFloat(0.4315),doubleToFloat(0.1798),doubleToFloat(0.5571),doubleToFloat(0.1990)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1967),doubleToFloat(0.8668),doubleToFloat(0.1989),doubleToFloat(0.8832),doubleToFloat(0.1268),doubleToFloat(0.8825),doubleToFloat(0.1752),doubleToFloat(0.8833),doubleToFloat(0.2442),doubleToFloat(0.8018),doubleToFloat(0.2747),doubleToFloat(0.8021),doubleToFloat(0.2115),doubleToFloat(0.8040),doubleToFloat(0.1683),doubleToFloat(0.8055),doubleToFloat(0.1352),doubleToFloat(0.8259),doubleToFloat(0.2940),doubleToFloat(0.8031)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2062),doubleToFloat(0.9078),doubleToFloat(0.2111),doubleToFloat(0.9142),doubleToFloat(0.1828),doubleToFloat(0.9259),doubleToFloat(0.1826),doubleToFloat(0.9165),doubleToFloat(0.2109),doubleToFloat(0.7901),doubleToFloat(0.2108),doubleToFloat(0.7652),doubleToFloat(0.2391),doubleToFloat(0.7551),doubleToFloat(0.2427),doubleToFloat(0.7856),doubleToFloat(0.2391),doubleToFloat(0.9419),doubleToFloat(0.2161),doubleToFloat(0.9206)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2290),doubleToFloat(0.8893),doubleToFloat(0.2595),doubleToFloat(0.9066),doubleToFloat(0.0744),doubleToFloat(0.8658),doubleToFloat(0.0962),doubleToFloat(0.8615),doubleToFloat(0.1072),doubleToFloat(0.8914),doubleToFloat(0.0918),doubleToFloat(0.8982),doubleToFloat(0.1322),doubleToFloat(0.9142),doubleToFloat(0.1830),doubleToFloat(0.9354),doubleToFloat(0.1573),doubleToFloat(0.9435),doubleToFloat(0.2307),doubleToFloat(0.9662)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2085),doubleToFloat(0.9645),doubleToFloat(0.2171),doubleToFloat(0.8843),doubleToFloat(0.1391),doubleToFloat(0.9078),doubleToFloat(0.0956),doubleToFloat(0.7806),doubleToFloat(0.0722),doubleToFloat(0.7805),doubleToFloat(0.0795),doubleToFloat(0.7510),doubleToFloat(0.1035),doubleToFloat(0.7569),doubleToFloat(0.0931),doubleToFloat(0.8401),doubleToFloat(0.1111),doubleToFloat(0.8374),doubleToFloat(0.1169),doubleToFloat(0.8568)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0696),doubleToFloat(0.8416),doubleToFloat(0.0596),doubleToFloat(0.8658),doubleToFloat(0.0493),doubleToFloat(0.8640),doubleToFloat(0.0441),doubleToFloat(0.8402),doubleToFloat(0.0535),doubleToFloat(0.8402),doubleToFloat(0.0684),doubleToFloat(0.9052),doubleToFloat(0.0581),doubleToFloat(0.8096),doubleToFloat(0.0756),doubleToFloat(0.8110),doubleToFloat(0.0951),doubleToFloat(0.8140),doubleToFloat(0.1121),doubleToFloat(0.8137)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2087),doubleToFloat(0.7427),doubleToFloat(0.1641),doubleToFloat(0.7685),doubleToFloat(0.1688),doubleToFloat(0.7497),doubleToFloat(0.0889),doubleToFloat(0.7220),doubleToFloat(0.0604),doubleToFloat(0.7475),doubleToFloat(0.0707),doubleToFloat(0.7136),doubleToFloat(0.1311),doubleToFloat(0.7433),doubleToFloat(0.1270),doubleToFloat(0.7628),doubleToFloat(0.1093),doubleToFloat(0.7333),doubleToFloat(0.2609),doubleToFloat(0.7061)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2692),doubleToFloat(0.7455),doubleToFloat(0.2341),doubleToFloat(0.7254),doubleToFloat(0.0457),doubleToFloat(0.8100),doubleToFloat(0.0532),doubleToFloat(0.7798),doubleToFloat(0.2457),doubleToFloat(0.8180),doubleToFloat(0.2442),doubleToFloat(0.8018),doubleToFloat(0.2747),doubleToFloat(0.8021),doubleToFloat(0.2761),doubleToFloat(0.8169),doubleToFloat(0.2121),doubleToFloat(0.8179),doubleToFloat(0.2115),doubleToFloat(0.8040)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2940),doubleToFloat(0.8031),doubleToFloat(0.2948),doubleToFloat(0.8155),doubleToFloat(0.1364),doubleToFloat(0.8780),doubleToFloat(0.1461),doubleToFloat(0.9015),doubleToFloat(0.1268),doubleToFloat(0.8825),doubleToFloat(0.1278),doubleToFloat(0.7840),doubleToFloat(0.1332),doubleToFloat(0.8111),doubleToFloat(0.1723),doubleToFloat(0.8209),doubleToFloat(0.1683),doubleToFloat(0.8055),doubleToFloat(0.1352),doubleToFloat(0.8259)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1371),doubleToFloat(0.8407),doubleToFloat(0.1644),doubleToFloat(0.7901),doubleToFloat(0.2798),doubleToFloat(0.9154),doubleToFloat(0.1114),doubleToFloat(0.9252),doubleToFloat(0.0935),doubleToFloat(0.9365),doubleToFloat(0.1606),doubleToFloat(0.9636),doubleToFloat(0.1838),doubleToFloat(0.9605),doubleToFloat(0.1415),doubleToFloat(0.9665),doubleToFloat(0.1301),doubleToFloat(0.9481),doubleToFloat(0.2070),doubleToFloat(0.7280)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1722),doubleToFloat(0.7372),doubleToFloat(0.0999),doubleToFloat(0.6904),doubleToFloat(0.0926),doubleToFloat(0.6738),doubleToFloat(0.1349),doubleToFloat(0.7262),doubleToFloat(0.1135),doubleToFloat(0.7095),doubleToFloat(0.2273),doubleToFloat(0.7051),doubleToFloat(0.2443),doubleToFloat(0.6757),doubleToFloat(0.2569),doubleToFloat(0.9518),doubleToFloat(0.2435),doubleToFloat(0.9674),doubleToFloat(0.1770),doubleToFloat(0.8489)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1578),doubleToFloat(0.8633),doubleToFloat(0.2733),doubleToFloat(0.7872),doubleToFloat(0.2703),doubleToFloat(0.7001),doubleToFloat(0.2843),doubleToFloat(0.7447),doubleToFloat(0.2932),doubleToFloat(0.7907),doubleToFloat(0.1153),doubleToFloat(0.9557),doubleToFloat(0.1314),doubleToFloat(0.9715),doubleToFloat(0.2466),doubleToFloat(0.6647),doubleToFloat(0.7222),doubleToFloat(0.5334),doubleToFloat(0.7939),doubleToFloat(0.5375)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7797),doubleToFloat(0.5937),doubleToFloat(0.7221),doubleToFloat(0.5867),doubleToFloat(0.8071),doubleToFloat(0.4347),doubleToFloat(0.8071),doubleToFloat(0.4970),doubleToFloat(0.7742),doubleToFloat(0.4902),doubleToFloat(0.7791),doubleToFloat(0.4415),doubleToFloat(0.7587),doubleToFloat(0.5190),doubleToFloat(0.7580),doubleToFloat(0.3486),doubleToFloat(0.7374),doubleToFloat(0.3480),doubleToFloat(0.7434),doubleToFloat(0.3318)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7617),doubleToFloat(0.3287),doubleToFloat(0.8019),doubleToFloat(0.3180),doubleToFloat(0.7855),doubleToFloat(0.3483),doubleToFloat(0.7180),doubleToFloat(0.6439),doubleToFloat(0.6841),doubleToFloat(0.6420),doubleToFloat(0.6901),doubleToFloat(0.5838),doubleToFloat(0.7703),doubleToFloat(0.6518),doubleToFloat(0.7545),doubleToFloat(0.4510),doubleToFloat(0.7462),doubleToFloat(0.4243),doubleToFloat(0.7580),doubleToFloat(0.4074)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7521),doubleToFloat(0.3566),doubleToFloat(0.7366),doubleToFloat(0.3518),doubleToFloat(0.7275),doubleToFloat(0.4912),doubleToFloat(0.7114),doubleToFloat(0.4992),doubleToFloat(0.7404),doubleToFloat(0.4799),doubleToFloat(0.6943),doubleToFloat(0.5310),doubleToFloat(0.6975),doubleToFloat(0.5019),doubleToFloat(0.7257),doubleToFloat(0.3942),doubleToFloat(0.7898),doubleToFloat(0.3761),doubleToFloat(0.4891),doubleToFloat(0.2640)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4640),doubleToFloat(0.2586),doubleToFloat(0.4682),doubleToFloat(0.2267),doubleToFloat(0.4907),doubleToFloat(0.2308),doubleToFloat(0.4218),doubleToFloat(0.2452),doubleToFloat(0.4415),doubleToFloat(0.2159),doubleToFloat(0.3965),doubleToFloat(0.2248),doubleToFloat(0.4199),doubleToFloat(0.2063),doubleToFloat(0.5525),doubleToFloat(0.2642),doubleToFloat(0.5139),doubleToFloat(0.2679),doubleToFloat(0.5142),doubleToFloat(0.2310)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5404),doubleToFloat(0.2317),doubleToFloat(0.4822),doubleToFloat(0.1663),doubleToFloat(0.5015),doubleToFloat(0.1705),doubleToFloat(0.4961),doubleToFloat(0.2007),doubleToFloat(0.4752),doubleToFloat(0.1965),doubleToFloat(0.4610),doubleToFloat(0.1589),doubleToFloat(0.4512),doubleToFloat(0.1874),doubleToFloat(0.5426),doubleToFloat(0.1670),doubleToFloat(0.5601),doubleToFloat(0.1684),doubleToFloat(0.5571),doubleToFloat(0.1990)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5415),doubleToFloat(0.1994),doubleToFloat(0.5210),doubleToFloat(0.1713),doubleToFloat(0.5176),doubleToFloat(0.2012),doubleToFloat(0.5723),doubleToFloat(0.2574),doubleToFloat(0.5541),doubleToFloat(0.2297),doubleToFloat(0.4430),doubleToFloat(0.1534),doubleToFloat(0.4315),doubleToFloat(0.1798),doubleToFloat(0.1967),doubleToFloat(0.8668),doubleToFloat(0.1989),doubleToFloat(0.8832),doubleToFloat(0.1752),doubleToFloat(0.8833)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #199, 2520 total numbers */
	this.IndexedFaceSet_11_199_coordIndex = new MFInt32(Java.to([61,62,20,-1,20,9,61,-1,8,7,19,-1,19,17,8,-1,11,18,19,-1,19,7,11,-1,16,49,10,-1,26,28,18,-1,18,11,26,-1,25,63,64,-1,64,6,25,-1,15,68,95,-1,95,9,15,-1,8,37,14,-1,14,7,8,-1,7,14,13,-1,13,11,7,-1,51,52,54,-1,54,53,51,-1,20,28,26,-1,26,9,20,-1,31,29,35,-1,35,0,31,-1,32,5,35,-1,35,29,32,-1,30,36,69,-1,69,5,30,-1,15,9,26,-1,26,27,15,-1,65,70,68,-1,68,15,65,-1,2,1,66,-1,66,38,2,-1,66,64,13,-1,13,14,66,-1,95,116,61,-1,61,9,95,-1,28,20,30,-1,30,34,28,-1,17,31,33,-1,33,16,17,-1,16,33,21,-1,21,23,16,-1,23,21,22,-1,22,24,23,-1,24,22,123,-1,123,71,24,-1,124,148,58,-1,58,0,124,-1,57,33,31,-1,58,57,31,-1,0,58,31,-1,3,65,63,-1,63,25,3,-1,11,13,27,-1,27,26,11,-1,35,128,124,-1,124,0,35,-1,5,69,128,-1,128,35,5,-1,31,17,19,-1,19,29,31,-1,29,19,18,-1,18,32,29,-1,32,18,28,-1,28,34,32,-1,22,21,60,-1,60,59,22,-1,33,57,60,-1,60,21,33,-1,4,2,38,-1,38,39,4,-1,10,41,46,-1,46,40,10,-1,10,12,42,-1,42,41,10,-1,12,39,43,-1,43,42,12,-1,39,38,44,-1,38,37,45,-1,45,44,38,-1,37,8,40,-1,40,45,37,-1,46,41,42,-1,42,47,46,-1,47,42,43,-1,43,48,47,-1,12,10,49,-1,49,50,12,-1,39,12,50,-1,50,4,39,-1,48,51,53,-1,53,47,48,-1,48,44,52,-1,52,51,48,-1,44,45,54,-1,54,52,44,-1,45,40,55,-1,55,54,45,-1,40,46,56,-1,56,55,40,-1,46,47,53,-1,53,56,46,-1,5,32,34,-1,34,30,5,-1,10,8,17,-1,17,16,10,-1,72,67,62,-1,62,61,72,-1,62,67,73,-1,63,27,13,-1,13,64,63,-1,3,146,70,-1,70,65,3,-1,1,6,64,-1,64,66,1,-1,15,27,63,-1,63,65,15,-1,14,37,38,-1,38,66,14,-1,22,59,147,-1,147,123,22,-1,74,20,62,-1,62,73,74,-1,30,20,74,-1,74,36,30,-1,72,61,116,-1,53,54,55,-1,55,56,53,-1,44,48,43,-1,43,39,44,-1,40,8,10,-1,76,75,78,-1,78,77,76,-1,79,82,81,-1,81,80,79,-1,83,80,81,-1,81,84,83,-1,85,87,86,-1,88,83,84,-1,84,89,88,-1,91,90,93,-1,93,92,91,-1,94,75,95,-1,95,68,94,-1,79,80,97,-1,97,96,79,-1,80,83,98,-1,98,97,80,-1,100,99,102,-1,102,101,100,-1,78,75,88,-1,88,89,78,-1,103,106,105,-1,105,104,103,-1,107,104,105,-1,105,108,107,-1,109,108,69,-1,69,36,109,-1,94,110,88,-1,88,75,94,-1,111,94,68,-1,68,70,111,-1,113,112,115,-1,115,114,113,-1,115,97,98,-1,98,93,115,-1,95,75,76,-1,76,116,95,-1,89,117,109,-1,109,78,89,-1,82,85,118,-1,118,103,82,-1,85,120,119,-1,119,118,85,-1,120,122,121,-1,121,119,120,-1,122,71,123,-1,123,121,122,-1,124,106,125,-1,125,148,124,-1,103,118,126,-1,103,126,125,-1,106,103,125,-1,127,91,92,-1,92,111,127,-1,83,88,110,-1,110,98,83,-1,105,106,124,-1,124,128,105,-1,108,105,128,-1,128,69,108,-1,103,104,81,-1,81,82,103,-1,104,107,84,-1,84,81,104,-1,107,117,89,-1,89,84,107,-1,121,130,129,-1,129,119,121,-1,118,119,129,-1,129,126,118,-1,132,131,112,-1,112,113,132,-1,87,135,134,-1,134,133,87,-1,87,133,137,-1,137,136,87,-1,136,137,138,-1,138,131,136,-1,131,139,112,-1,112,139,140,-1,140,96,112,-1,96,140,135,-1,135,79,96,-1,134,141,137,-1,137,133,134,-1,141,142,138,-1,138,137,141,-1,136,143,86,-1,86,87,136,-1,131,132,143,-1,143,136,131,-1,142,141,99,-1,99,100,142,-1,142,100,101,-1,101,139,142,-1,139,101,102,-1,102,140,139,-1,140,102,144,-1,144,135,140,-1,135,144,145,-1,145,134,135,-1,134,145,99,-1,99,141,134,-1,108,109,117,-1,117,107,108,-1,87,85,82,-1,82,79,87,-1,72,76,77,-1,77,67,72,-1,77,73,67,-1,92,93,98,-1,98,110,92,-1,127,111,70,-1,70,146,127,-1,114,115,93,-1,93,90,114,-1,94,111,92,-1,92,110,94,-1,97,115,112,-1,112,96,97,-1,121,123,147,-1,147,130,121,-1,74,73,77,-1,77,78,74,-1,109,36,74,-1,74,78,109,-1,72,116,76,-1,99,145,144,-1,144,102,99,-1,139,131,138,-1,138,142,139,-1,135,87,79,-1,232,233,197,-1,197,152,232,-1,178,179,154,-1,154,153,178,-1,239,240,224,-1,224,158,239,-1,193,195,159,-1,152,193,159,-1,152,159,232,-1,160,226,225,-1,225,159,160,-1,160,158,224,-1,224,226,160,-1,154,163,162,-1,162,157,154,-1,158,160,162,-1,162,163,158,-1,155,208,209,-1,209,164,155,-1,209,182,165,-1,165,168,206,-1,206,207,167,-1,167,166,206,-1,169,241,247,-1,247,183,169,-1,163,154,179,-1,158,163,242,-1,242,239,158,-1,178,183,247,-1,247,281,178,-1,154,199,198,-1,198,153,154,-1,157,200,199,-1,199,154,157,-1,156,201,200,-1,200,157,156,-1,155,202,201,-1,201,156,155,-1,155,164,203,-1,203,202,155,-1,164,166,204,-1,204,203,164,-1,166,167,205,-1,205,204,166,-1,167,153,198,-1,198,205,167,-1,281,243,179,-1,179,178,281,-1,155,156,194,-1,194,208,155,-1,153,167,183,-1,183,178,153,-1,194,195,193,-1,193,181,194,-1,163,179,243,-1,243,242,163,-1,183,167,207,-1,170,171,186,-1,186,185,170,-1,171,172,187,-1,187,186,171,-1,172,173,188,-1,188,187,172,-1,173,174,189,-1,189,188,173,-1,174,175,190,-1,190,189,174,-1,175,176,191,-1,191,190,175,-1,176,177,192,-1,192,191,176,-1,177,170,185,-1,185,192,177,-1,186,184,185,-1,187,184,186,-1,188,184,187,-1,189,184,188,-1,190,184,189,-1,191,184,190,-1,192,184,191,-1,185,184,192,-1,194,156,195,-1,195,162,160,-1,160,159,195,-1,156,157,162,-1,162,195,156,-1,150,234,233,-1,233,151,150,-1,161,229,231,-1,231,197,161,-1,199,171,170,-1,170,198,199,-1,200,172,171,-1,171,199,200,-1,173,172,200,-1,200,201,173,-1,174,173,201,-1,201,202,174,-1,175,174,202,-1,202,203,175,-1,176,175,203,-1,203,204,176,-1,205,177,176,-1,176,204,205,-1,170,177,205,-1,205,198,170,-1,168,169,207,-1,207,206,168,-1,207,169,183,-1,206,166,164,-1,164,165,206,-1,208,180,182,-1,182,209,208,-1,180,208,194,-1,194,181,180,-1,165,164,209,-1,210,211,212,-1,212,213,210,-1,217,214,215,-1,215,216,217,-1,218,237,327,-1,327,244,218,-1,211,210,151,-1,151,149,211,-1,210,216,150,-1,150,151,210,-1,219,220,212,-1,212,211,219,-1,223,235,221,-1,221,222,223,-1,240,335,235,-1,235,224,240,-1,225,219,211,-1,211,149,225,-1,226,223,219,-1,219,225,226,-1,217,213,336,-1,336,245,217,-1,213,217,216,-1,216,210,213,-1,216,215,238,-1,238,150,216,-1,220,219,223,-1,223,222,220,-1,215,214,237,-1,237,238,215,-1,213,212,338,-1,338,336,213,-1,214,217,245,-1,245,246,214,-1,338,212,220,-1,220,248,338,-1,221,339,340,-1,340,222,221,-1,248,220,222,-1,222,340,248,-1,152,197,231,-1,231,230,152,-1,229,196,228,-1,228,231,229,-1,231,228,227,-1,227,230,231,-1,149,151,233,-1,233,232,149,-1,234,161,197,-1,197,233,234,-1,159,225,149,-1,149,232,159,-1,226,224,235,-1,235,223,226,-1,150,238,236,-1,236,234,150,-1,214,246,327,-1,327,237,214,-1,218,236,238,-1,238,237,218,-1,221,235,335,-1,335,339,221,-1,250,249,252,-1,252,251,250,-1,254,253,256,-1,256,255,254,-1,239,257,258,-1,258,240,239,-1,249,250,261,-1,261,260,259,-1,249,261,259,-1,262,261,264,-1,264,263,262,-1,262,263,258,-1,258,257,262,-1,256,267,266,-1,266,265,256,-1,257,265,266,-1,266,262,257,-1,269,268,271,-1,271,270,269,-1,271,273,272,-1,273,275,274,-1,275,276,278,-1,278,277,275,-1,279,280,247,-1,247,241,279,-1,265,255,256,-1,257,239,242,-1,242,265,257,-1,254,281,247,-1,247,280,254,-1,256,253,283,-1,283,282,256,-1,267,256,282,-1,282,284,267,-1,285,267,284,-1,284,286,285,-1,269,285,286,-1,286,287,269,-1,269,287,288,-1,288,268,269,-1,268,288,289,-1,289,276,268,-1,276,289,290,-1,290,278,276,-1,278,290,283,-1,283,253,278,-1,281,254,255,-1,255,243,281,-1,269,270,291,-1,291,285,269,-1,253,254,280,-1,280,278,253,-1,291,292,259,-1,259,260,291,-1,265,242,243,-1,243,255,265,-1,280,277,278,-1,293,296,295,-1,295,294,293,-1,294,295,298,-1,298,297,294,-1,297,298,300,-1,300,299,297,-1,299,300,302,-1,302,301,299,-1,301,302,304,-1,304,303,301,-1,303,304,306,-1,306,305,303,-1,305,306,308,-1,308,307,305,-1,307,308,296,-1,296,293,307,-1,295,296,309,-1,298,295,309,-1,300,298,309,-1,302,300,309,-1,304,302,309,-1,306,304,309,-1,308,306,309,-1,296,308,309,-1,291,260,285,-1,260,261,262,-1,262,266,260,-1,285,260,266,-1,266,267,285,-1,311,310,251,-1,251,312,311,-1,313,252,315,-1,315,314,313,-1,282,283,293,-1,293,294,282,-1,284,282,294,-1,294,297,284,-1,299,286,284,-1,284,297,299,-1,301,287,286,-1,286,299,301,-1,303,288,287,-1,287,301,303,-1,305,289,288,-1,288,303,305,-1,290,289,305,-1,305,307,290,-1,293,283,290,-1,290,307,293,-1,274,275,277,-1,277,279,274,-1,277,280,279,-1,275,273,268,-1,268,276,275,-1,270,271,272,-1,272,316,270,-1,316,292,291,-1,291,270,316,-1,273,271,268,-1,317,320,319,-1,319,318,317,-1,324,323,322,-1,322,321,324,-1,325,244,327,-1,327,326,325,-1,318,328,310,-1,310,317,318,-1,317,310,311,-1,311,323,317,-1,329,318,319,-1,319,330,329,-1,333,332,331,-1,331,334,333,-1,240,258,334,-1,334,335,240,-1,264,328,318,-1,318,329,264,-1,263,264,329,-1,329,333,263,-1,324,245,336,-1,336,320,324,-1,320,317,323,-1,323,324,320,-1,323,311,337,-1,337,322,323,-1,330,332,333,-1,333,329,330,-1,322,337,326,-1,326,321,322,-1,320,336,338,-1,338,319,320,-1,321,246,245,-1,245,324,321,-1,338,248,330,-1,330,319,338,-1,331,332,340,-1,340,339,331,-1,248,340,332,-1,332,330,248,-1,249,341,315,-1,315,252,249,-1,314,315,343,-1,343,342,314,-1,315,341,344,-1,344,343,315,-1,328,250,251,-1,251,310,328,-1,312,251,252,-1,252,313,312,-1,261,250,328,-1,328,264,261,-1,263,333,334,-1,334,258,263,-1,311,312,345,-1,345,337,311,-1,321,326,327,-1,327,246,321,-1,325,326,337,-1,337,345,325,-1,331,339,335,-1,335,334,331,-1,57,58,346,-1,58,148,346,-1,148,125,346,-1,125,126,346,-1,126,129,346,-1,129,130,346,-1,130,147,346,-1,147,59,346,-1,59,60,346,-1,60,57,346,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #199, 2520 total numbers */
	this.IndexedFaceSet_11_199_texCoordIndex = new MFInt32(Java.to([1,2,3,-1,3,0,1,-1,4,5,6,-1,6,7,4,-1,8,9,6,-1,6,5,8,-1,10,11,12,-1,13,14,9,-1,9,8,13,-1,16,17,18,-1,18,15,16,-1,19,20,21,-1,21,0,19,-1,4,22,23,-1,23,5,4,-1,5,23,24,-1,24,8,5,-1,26,27,28,-1,28,25,26,-1,3,14,13,-1,13,0,3,-1,29,30,31,-1,31,32,29,-1,33,34,31,-1,31,30,33,-1,35,36,37,-1,37,34,35,-1,19,0,13,-1,13,38,19,-1,39,40,20,-1,20,19,39,-1,42,43,44,-1,44,41,42,-1,44,18,24,-1,24,23,44,-1,21,45,1,-1,1,0,21,-1,14,3,35,-1,35,46,14,-1,7,29,47,-1,47,10,7,-1,10,47,48,-1,48,49,10,-1,49,48,50,-1,50,51,49,-1,51,50,52,-1,52,53,51,-1,54,170,55,-1,55,32,54,-1,56,47,29,-1,55,56,29,-1,32,55,29,-1,57,39,17,-1,17,16,57,-1,8,24,38,-1,38,13,8,-1,31,58,54,-1,54,32,31,-1,34,37,58,-1,58,31,34,-1,29,7,6,-1,6,30,29,-1,30,6,9,-1,9,33,30,-1,33,9,14,-1,14,46,33,-1,50,48,59,-1,59,60,50,-1,47,56,59,-1,59,48,47,-1,62,42,41,-1,41,61,62,-1,81,63,64,-1,64,65,81,-1,81,66,67,-1,67,63,81,-1,66,82,68,-1,68,67,66,-1,82,41,69,-1,41,22,70,-1,70,69,41,-1,22,4,65,-1,65,70,22,-1,64,63,67,-1,67,71,64,-1,71,67,68,-1,68,72,71,-1,83,12,11,-1,11,73,83,-1,61,83,73,-1,73,62,61,-1,72,26,25,-1,25,71,72,-1,72,69,27,-1,27,26,72,-1,69,70,28,-1,28,27,69,-1,70,65,74,-1,74,28,70,-1,65,64,75,-1,75,74,65,-1,64,71,25,-1,25,75,64,-1,34,33,46,-1,46,35,34,-1,12,4,7,-1,7,10,12,-1,76,77,2,-1,2,1,76,-1,2,77,78,-1,17,38,24,-1,24,18,17,-1,57,79,40,-1,40,39,57,-1,43,15,18,-1,18,44,43,-1,19,38,17,-1,17,39,19,-1,23,22,41,-1,41,44,23,-1,50,60,169,-1,169,52,50,-1,80,3,2,-1,2,78,80,-1,35,3,80,-1,80,36,35,-1,76,1,45,-1,25,28,74,-1,74,75,25,-1,69,72,68,-1,68,82,69,-1,65,4,81,-1,85,84,87,-1,87,86,85,-1,88,91,90,-1,90,89,88,-1,92,89,90,-1,90,93,92,-1,94,96,95,-1,97,92,93,-1,93,98,97,-1,100,99,102,-1,102,101,100,-1,103,84,105,-1,105,104,103,-1,88,89,107,-1,107,106,88,-1,89,92,108,-1,108,107,89,-1,110,109,112,-1,112,111,110,-1,87,84,97,-1,97,98,87,-1,113,116,115,-1,115,114,113,-1,117,114,115,-1,115,118,117,-1,119,118,121,-1,121,120,119,-1,103,122,97,-1,97,84,103,-1,123,103,104,-1,104,124,123,-1,126,125,128,-1,128,127,126,-1,128,107,108,-1,108,102,128,-1,105,84,85,-1,85,129,105,-1,98,130,119,-1,119,87,98,-1,91,94,131,-1,131,113,91,-1,94,133,132,-1,132,131,94,-1,133,135,134,-1,134,132,133,-1,135,137,136,-1,136,134,135,-1,138,116,139,-1,139,171,138,-1,113,131,140,-1,113,140,139,-1,116,113,139,-1,141,100,101,-1,101,123,141,-1,92,97,122,-1,122,108,92,-1,115,116,138,-1,138,142,115,-1,118,115,142,-1,142,121,118,-1,113,114,90,-1,90,91,113,-1,114,117,93,-1,93,90,114,-1,117,130,98,-1,98,93,117,-1,134,144,143,-1,143,132,134,-1,131,132,143,-1,143,140,131,-1,146,145,125,-1,125,126,146,-1,147,150,149,-1,149,148,147,-1,147,148,152,-1,152,151,147,-1,151,152,154,-1,154,153,151,-1,153,155,125,-1,125,155,156,-1,156,106,125,-1,106,156,150,-1,150,88,106,-1,149,157,152,-1,152,148,149,-1,157,158,154,-1,154,152,157,-1,160,159,95,-1,95,96,160,-1,145,146,159,-1,159,160,145,-1,158,157,109,-1,109,110,158,-1,158,110,111,-1,111,155,158,-1,155,111,112,-1,112,156,155,-1,156,112,161,-1,161,150,156,-1,150,161,162,-1,162,149,150,-1,149,162,109,-1,109,157,149,-1,118,119,130,-1,130,117,118,-1,96,94,91,-1,91,88,96,-1,163,85,86,-1,86,164,163,-1,86,165,164,-1,101,102,108,-1,108,122,101,-1,141,123,124,-1,124,166,141,-1,127,128,102,-1,102,99,127,-1,103,123,101,-1,101,122,103,-1,107,128,125,-1,125,106,107,-1,134,136,168,-1,168,144,134,-1,167,165,86,-1,86,87,167,-1,119,120,167,-1,167,87,119,-1,163,129,85,-1,109,162,161,-1,161,112,109,-1,155,153,154,-1,154,158,155,-1,150,147,88,-1,173,174,175,-1,175,172,173,-1,177,178,179,-1,179,176,177,-1,181,182,183,-1,183,180,181,-1,184,185,186,-1,172,184,186,-1,172,186,173,-1,187,188,189,-1,189,186,187,-1,187,180,183,-1,183,188,187,-1,179,190,191,-1,191,192,179,-1,180,187,191,-1,191,190,180,-1,194,195,196,-1,196,193,194,-1,196,197,198,-1,198,199,200,-1,200,204,205,-1,205,202,200,-1,206,207,208,-1,208,209,206,-1,190,179,178,-1,180,190,219,-1,219,181,180,-1,177,209,208,-1,208,220,177,-1,203,210,211,-1,211,201,203,-1,212,213,210,-1,210,203,212,-1,214,215,213,-1,213,212,214,-1,216,217,215,-1,215,214,216,-1,216,218,222,-1,222,217,216,-1,218,223,224,-1,224,222,218,-1,287,225,226,-1,226,288,287,-1,225,201,211,-1,211,226,225,-1,220,221,178,-1,178,177,220,-1,194,239,240,-1,240,195,194,-1,176,205,209,-1,209,177,176,-1,240,185,184,-1,184,241,240,-1,190,178,221,-1,221,219,190,-1,209,205,204,-1,227,228,235,-1,235,236,227,-1,228,229,237,-1,237,235,228,-1,229,230,238,-1,238,237,229,-1,230,231,279,-1,279,238,230,-1,231,232,280,-1,280,279,231,-1,232,233,281,-1,281,280,232,-1,289,234,282,-1,282,290,289,-1,234,227,236,-1,236,282,234,-1,235,283,236,-1,237,283,235,-1,238,283,237,-1,279,283,238,-1,280,283,279,-1,281,283,280,-1,282,283,290,-1,236,283,282,-1,240,239,185,-1,185,191,187,-1,187,186,185,-1,239,192,191,-1,191,185,239,-1,243,244,174,-1,174,242,243,-1,245,246,247,-1,247,175,245,-1,210,228,227,-1,227,211,210,-1,213,229,228,-1,228,210,213,-1,230,229,213,-1,213,215,230,-1,231,230,215,-1,215,217,231,-1,232,231,217,-1,217,222,232,-1,233,232,222,-1,222,224,233,-1,226,234,289,-1,289,288,226,-1,227,234,226,-1,226,211,227,-1,199,206,204,-1,204,200,199,-1,204,206,209,-1,200,202,193,-1,193,198,200,-1,195,248,197,-1,197,196,195,-1,248,195,240,-1,240,241,248,-1,198,193,196,-1,249,250,251,-1,251,252,249,-1,256,253,254,-1,254,255,256,-1,257,258,259,-1,259,260,257,-1,250,249,242,-1,242,261,250,-1,249,255,243,-1,243,242,249,-1,262,263,251,-1,251,250,262,-1,266,267,264,-1,264,265,266,-1,182,268,267,-1,267,183,182,-1,189,262,250,-1,250,261,189,-1,188,266,262,-1,262,189,188,-1,256,252,269,-1,269,270,256,-1,252,256,255,-1,255,249,252,-1,255,254,271,-1,271,243,255,-1,263,262,266,-1,266,265,263,-1,254,253,258,-1,258,271,254,-1,252,251,272,-1,272,269,252,-1,253,256,270,-1,270,273,253,-1,272,251,263,-1,263,274,272,-1,264,275,276,-1,276,265,264,-1,274,263,265,-1,265,276,274,-1,172,175,247,-1,247,277,172,-1,246,278,284,-1,284,247,246,-1,247,284,285,-1,285,277,247,-1,261,242,174,-1,174,173,261,-1,244,245,175,-1,175,174,244,-1,186,189,261,-1,261,173,186,-1,188,183,267,-1,267,266,188,-1,243,271,286,-1,286,244,243,-1,253,273,259,-1,259,258,253,-1,257,286,271,-1,271,258,257,-1,264,267,268,-1,268,275,264,-1,292,291,294,-1,294,293,292,-1,296,295,298,-1,298,297,296,-1,300,299,302,-1,302,301,300,-1,291,292,305,-1,305,304,303,-1,291,305,303,-1,306,305,308,-1,308,307,306,-1,306,307,302,-1,302,299,306,-1,298,311,310,-1,310,309,298,-1,299,309,310,-1,310,306,299,-1,313,312,315,-1,315,314,313,-1,315,317,316,-1,317,319,318,-1,319,320,322,-1,322,321,319,-1,323,326,325,-1,325,324,323,-1,309,297,298,-1,299,300,327,-1,327,309,299,-1,296,328,325,-1,325,326,296,-1,330,329,332,-1,332,331,330,-1,333,330,331,-1,331,334,333,-1,335,333,334,-1,334,336,335,-1,337,335,336,-1,336,338,337,-1,337,338,340,-1,340,339,337,-1,339,340,342,-1,342,341,339,-1,343,346,345,-1,345,344,343,-1,344,345,332,-1,332,329,344,-1,328,296,297,-1,297,347,328,-1,313,314,349,-1,349,348,313,-1,295,296,326,-1,326,322,295,-1,349,350,303,-1,303,304,349,-1,309,327,347,-1,347,297,309,-1,326,321,322,-1,351,354,353,-1,353,352,351,-1,352,353,356,-1,356,355,352,-1,355,356,358,-1,358,357,355,-1,357,358,360,-1,360,359,357,-1,359,360,362,-1,362,361,359,-1,361,362,364,-1,364,363,361,-1,365,368,367,-1,367,366,365,-1,366,367,354,-1,354,351,366,-1,353,354,369,-1,356,353,369,-1,358,356,369,-1,360,358,369,-1,362,360,369,-1,364,362,369,-1,367,368,369,-1,354,367,369,-1,349,304,348,-1,304,305,306,-1,306,310,304,-1,348,304,310,-1,310,311,348,-1,371,370,293,-1,293,372,371,-1,373,294,375,-1,375,374,373,-1,331,332,351,-1,351,352,331,-1,334,331,352,-1,352,355,334,-1,357,336,334,-1,334,355,357,-1,359,338,336,-1,336,357,359,-1,361,340,338,-1,338,359,361,-1,363,342,340,-1,340,361,363,-1,345,346,365,-1,365,366,345,-1,351,332,345,-1,345,366,351,-1,318,319,321,-1,321,323,318,-1,321,326,323,-1,319,317,312,-1,312,320,319,-1,314,315,316,-1,316,376,314,-1,376,350,349,-1,349,314,376,-1,317,315,312,-1,377,380,379,-1,379,378,377,-1,384,383,382,-1,382,381,384,-1,385,388,387,-1,387,386,385,-1,378,389,370,-1,370,377,378,-1,377,370,371,-1,371,383,377,-1,390,378,379,-1,379,391,390,-1,394,393,392,-1,392,395,394,-1,301,302,395,-1,395,396,301,-1,308,389,378,-1,378,390,308,-1,307,308,390,-1,390,394,307,-1,384,398,397,-1,397,380,384,-1,380,377,383,-1,383,384,380,-1,383,371,399,-1,399,382,383,-1,391,393,394,-1,394,390,391,-1,382,399,386,-1,386,381,382,-1,380,397,400,-1,400,379,380,-1,381,401,398,-1,398,384,381,-1,400,402,391,-1,391,379,400,-1,392,393,404,-1,404,403,392,-1,402,404,393,-1,393,391,402,-1,291,405,375,-1,375,294,291,-1,374,375,407,-1,407,406,374,-1,375,405,408,-1,408,407,375,-1,389,292,293,-1,293,370,389,-1,372,293,294,-1,294,373,372,-1,305,292,389,-1,389,308,305,-1,307,394,395,-1,395,302,307,-1,371,372,409,-1,409,399,371,-1,381,386,387,-1,387,401,381,-1,385,386,399,-1,399,409,385,-1,392,403,396,-1,396,395,392,-1,56,55,410,-1,55,170,410,-1,171,139,410,-1,139,140,410,-1,140,143,410,-1,143,144,410,-1,144,168,410,-1,169,60,410,-1,60,59,410,-1,59,56,410,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #199, 1041 total numbers made up of 347 3-tuple values */
	this.Coordinate_12_199_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.3790),doubleToFloat(-0.9005),doubleToFloat(1.8130),doubleToFloat(4.6840),doubleToFloat(5.5810),doubleToFloat(2.3400),doubleToFloat(4.9560),doubleToFloat(4.4910),doubleToFloat(0.3999),doubleToFloat(0.9151),doubleToFloat(5.7180),doubleToFloat(4.9520),doubleToFloat(4.7300),doubleToFloat(4.1250),doubleToFloat(-1.2850),doubleToFloat(1.0930),doubleToFloat(-0.5210),doubleToFloat(3.8110),doubleToFloat(3.9230),doubleToFloat(5.7180),doubleToFloat(4.0580),doubleToFloat(3.9890),doubleToFloat(1.7090),doubleToFloat(2.3240),doubleToFloat(4.3550),doubleToFloat(1.6750),doubleToFloat(0.3525),doubleToFloat(0.9570),doubleToFloat(2.0660),doubleToFloat(4.6040)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.3950),doubleToFloat(1.7640),doubleToFloat(0.0421),doubleToFloat(3.2530),doubleToFloat(1.9700),doubleToFloat(3.7370),doubleToFloat(4.7600),doubleToFloat(2.7570),doubleToFloat(-0.2906),doubleToFloat(3.6390),doubleToFloat(3.1150),doubleToFloat(3.8260),doubleToFloat(4.4010),doubleToFloat(2.9010),doubleToFloat(2.3460),doubleToFloat(0.8900),doubleToFloat(3.0700),doubleToFloat(4.5230),doubleToFloat(3.4360),doubleToFloat(0.8400),doubleToFloat(-1.1460),doubleToFloat(3.7530),doubleToFloat(0.8521),doubleToFloat(0.6047),doubleToFloat(2.9320),doubleToFloat(0.8730),doubleToFloat(3.7630),doubleToFloat(3.6000),doubleToFloat(0.8128),doubleToFloat(2.3490)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9129),doubleToFloat(1.4040),doubleToFloat(4.7250),doubleToFloat(1.6000),doubleToFloat(-0.1106),doubleToFloat(-2.0950),doubleToFloat(0.8211),doubleToFloat(-0.0587),doubleToFloat(-2.6440),doubleToFloat(2.4310),doubleToFloat(1.0610),doubleToFloat(-2.7140),doubleToFloat(1.1720),doubleToFloat(1.0790),doubleToFloat(-3.6720),doubleToFloat(2.7140),doubleToFloat(5.7580),doubleToFloat(4.4610),doubleToFloat(2.1050),doubleToFloat(2.0180),doubleToFloat(4.2230),doubleToFloat(2.5100),doubleToFloat(3.2530),doubleToFloat(4.1630),doubleToFloat(1.9280),doubleToFloat(1.1390),doubleToFloat(4.2590),doubleToFloat(2.5150),doubleToFloat(-0.3025),doubleToFloat(2.8830)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8368),doubleToFloat(0.2892),doubleToFloat(4.5370),doubleToFloat(2.6140),doubleToFloat(-0.4104),doubleToFloat(0.9809),doubleToFloat(2.0180),doubleToFloat(-0.0266),doubleToFloat(3.8110),doubleToFloat(2.2350),doubleToFloat(-0.3692),doubleToFloat(-0.3936),doubleToFloat(1.4180),doubleToFloat(0.4754),doubleToFloat(4.2870),doubleToFloat(1.3350),doubleToFloat(-0.9364),doubleToFloat(3.2250),doubleToFloat(0.0000),doubleToFloat(0.1554),doubleToFloat(4.6300),doubleToFloat(4.7350),doubleToFloat(2.7140),doubleToFloat(0.0374),doubleToFloat(4.8580),doubleToFloat(3.7340),doubleToFloat(0.1920),doubleToFloat(4.8810),doubleToFloat(3.7220),doubleToFloat(-0.1410)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.4530),doubleToFloat(1.6930),doubleToFloat(0.3055),doubleToFloat(4.6600),doubleToFloat(1.8810),doubleToFloat(-0.3712),doubleToFloat(5.2460),doubleToFloat(3.0090),doubleToFloat(-0.9859),doubleToFloat(5.1890),doubleToFloat(3.6660),doubleToFloat(-0.6736),doubleToFloat(4.9560),doubleToFloat(3.7280),doubleToFloat(0.1602),doubleToFloat(4.8540),doubleToFloat(2.7030),doubleToFloat(-0.0222),doubleToFloat(4.7750),doubleToFloat(1.8790),doubleToFloat(-0.2352),doubleToFloat(5.3780),doubleToFloat(3.0170),doubleToFloat(-0.8358),doubleToFloat(5.2850),doubleToFloat(3.6800),doubleToFloat(-0.4900),doubleToFloat(4.1540),doubleToFloat(1.7690),doubleToFloat(-1.6110)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.5670),doubleToFloat(2.8750),doubleToFloat(-1.6850),doubleToFloat(5.2600),doubleToFloat(3.5990),doubleToFloat(-0.4626),doubleToFloat(4.9920),doubleToFloat(3.6600),doubleToFloat(0.0755),doubleToFloat(5.3440),doubleToFloat(3.0510),doubleToFloat(-0.7676),doubleToFloat(4.8920),doubleToFloat(2.7050),doubleToFloat(-0.0947),doubleToFloat(4.5400),doubleToFloat(1.7930),doubleToFloat(0.1877),doubleToFloat(4.7520),doubleToFloat(1.9530),doubleToFloat(-0.1923),doubleToFloat(1.4230),doubleToFloat(-0.7947),doubleToFloat(-0.1915),doubleToFloat(1.3220),doubleToFloat(-0.9340),doubleToFloat(0.4663),doubleToFloat(0.4360),doubleToFloat(-0.5937),doubleToFloat(-1.3260)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.1450),doubleToFloat(-0.6719),doubleToFloat(-0.7686),doubleToFloat(0.4460),doubleToFloat(1.8630),doubleToFloat(5.0190),doubleToFloat(0.4193),doubleToFloat(1.5490),doubleToFloat(5.0820),doubleToFloat(2.6120),doubleToFloat(4.0370),doubleToFloat(4.3120),doubleToFloat(3.7810),doubleToFloat(3.9480),doubleToFloat(3.9420),doubleToFloat(0.8918),doubleToFloat(4.0860),doubleToFloat(4.7250),doubleToFloat(4.5430),doubleToFloat(3.7720),doubleToFloat(2.3430),doubleToFloat(0.0000),doubleToFloat(1.6730),doubleToFloat(5.2920),doubleToFloat(0.0000),doubleToFloat(3.0020),doubleToFloat(4.8050),doubleToFloat(0.0000),doubleToFloat(-0.6375),doubleToFloat(3.9120)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(4.0960),doubleToFloat(4.9740),doubleToFloat(0.0000),doubleToFloat(1.1010),doubleToFloat(-3.9870),doubleToFloat(0.0000),doubleToFloat(1.6860),doubleToFloat(5.2870),doubleToFloat(0.0000),doubleToFloat(1.3870),doubleToFloat(5.1580),doubleToFloat(0.0000),doubleToFloat(1.0290),doubleToFloat(4.8770),doubleToFloat(-0.9570),doubleToFloat(2.0660),doubleToFloat(4.6040),doubleToFloat(-0.4460),doubleToFloat(1.8630),doubleToFloat(5.0190),doubleToFloat(-0.4193),doubleToFloat(1.5490),doubleToFloat(5.0820),doubleToFloat(-0.9129),doubleToFloat(1.4040),doubleToFloat(4.7250),doubleToFloat(-4.3550),doubleToFloat(1.6750),doubleToFloat(0.3525)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.9890),doubleToFloat(1.7090),doubleToFloat(2.3240),doubleToFloat(-3.6000),doubleToFloat(0.8128),doubleToFloat(2.3490),doubleToFloat(-3.7530),doubleToFloat(0.8521),doubleToFloat(0.6047),doubleToFloat(-3.2530),doubleToFloat(1.9700),doubleToFloat(3.7370),doubleToFloat(-2.9320),doubleToFloat(0.8730),doubleToFloat(3.7630),doubleToFloat(-3.4360),doubleToFloat(0.8400),doubleToFloat(-1.1460),doubleToFloat(-4.1540),doubleToFloat(1.7690),doubleToFloat(-1.6110),doubleToFloat(-4.3950),doubleToFloat(1.7640),doubleToFloat(0.0421),doubleToFloat(-2.1050),doubleToFloat(2.0180),doubleToFloat(4.2230),doubleToFloat(-1.9280),doubleToFloat(1.1390),doubleToFloat(4.2590)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.9230),doubleToFloat(5.7180),doubleToFloat(4.0580),doubleToFloat(-2.7140),doubleToFloat(5.7580),doubleToFloat(4.4610),doubleToFloat(-2.6120),doubleToFloat(4.0370),doubleToFloat(4.3120),doubleToFloat(-3.7810),doubleToFloat(3.9480),doubleToFloat(3.9420),doubleToFloat(-0.8900),doubleToFloat(3.0700),doubleToFloat(4.5230),doubleToFloat(0.0000),doubleToFloat(2.2080),doubleToFloat(4.8960),doubleToFloat(-4.7350),doubleToFloat(2.7140),doubleToFloat(0.0374),doubleToFloat(-4.4010),doubleToFloat(2.9010),doubleToFloat(2.3460),doubleToFloat(-3.6390),doubleToFloat(3.1150),doubleToFloat(3.8260),doubleToFloat(-5.3440),doubleToFloat(3.0510),doubleToFloat(-0.7676)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.2600),doubleToFloat(3.5990),doubleToFloat(-0.4626),doubleToFloat(-4.9920),doubleToFloat(3.6600),doubleToFloat(0.0755),doubleToFloat(-4.8920),doubleToFloat(2.7050),doubleToFloat(-0.0947),doubleToFloat(-2.6140),doubleToFloat(-0.4104),doubleToFloat(0.9809),doubleToFloat(-2.5150),doubleToFloat(-0.3025),doubleToFloat(2.8830),doubleToFloat(-1.3350),doubleToFloat(-0.9364),doubleToFloat(3.2250),doubleToFloat(-1.3790),doubleToFloat(-0.9005),doubleToFloat(1.8130),doubleToFloat(-2.0180),doubleToFloat(-0.0266),doubleToFloat(3.8110),doubleToFloat(-1.0930),doubleToFloat(-0.5210),doubleToFloat(3.8110),doubleToFloat(-0.8368),doubleToFloat(0.2892),doubleToFloat(4.5370)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.5100),doubleToFloat(3.2530),doubleToFloat(4.1630),doubleToFloat(-0.8918),doubleToFloat(4.0860),doubleToFloat(4.7250),doubleToFloat(-4.8580),doubleToFloat(3.7340),doubleToFloat(0.1920),doubleToFloat(-4.9560),doubleToFloat(4.4910),doubleToFloat(0.3999),doubleToFloat(-4.6840),doubleToFloat(5.5810),doubleToFloat(2.3400),doubleToFloat(-4.5430),doubleToFloat(3.7720),doubleToFloat(2.3430),doubleToFloat(0.0000),doubleToFloat(1.9160),doubleToFloat(5.1650),doubleToFloat(-1.4180),doubleToFloat(0.4754),doubleToFloat(4.2870),doubleToFloat(-2.2350),doubleToFloat(-0.3692),doubleToFloat(-0.3936),doubleToFloat(-1.6000),doubleToFloat(-0.1106),doubleToFloat(-2.0950)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.4310),doubleToFloat(1.0610),doubleToFloat(-2.7140),doubleToFloat(-0.8211),doubleToFloat(-0.0587),doubleToFloat(-2.6440),doubleToFloat(-1.1720),doubleToFloat(1.0790),doubleToFloat(-3.6720),doubleToFloat(0.0000),doubleToFloat(-0.0430),doubleToFloat(-2.7650),doubleToFloat(0.0000),doubleToFloat(-1.2080),doubleToFloat(2.4940),doubleToFloat(-1.3220),doubleToFloat(-0.9340),doubleToFloat(0.4663),doubleToFloat(-1.4230),doubleToFloat(-0.7947),doubleToFloat(-0.1915),doubleToFloat(-0.9151),doubleToFloat(5.7180),doubleToFloat(4.9520),doubleToFloat(0.0000),doubleToFloat(-1.0830),doubleToFloat(3.3480),doubleToFloat(-1.1450),doubleToFloat(-0.6719),doubleToFloat(-0.7686)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4360),doubleToFloat(-0.5937),doubleToFloat(-1.3260),doubleToFloat(-4.8810),doubleToFloat(3.7220),doubleToFloat(-0.1410),doubleToFloat(-4.7300),doubleToFloat(4.1250),doubleToFloat(-1.2850),doubleToFloat(-4.6600),doubleToFloat(1.8810),doubleToFloat(-0.3712),doubleToFloat(-4.7750),doubleToFloat(1.8790),doubleToFloat(-0.2352),doubleToFloat(-4.4530),doubleToFloat(1.6930),doubleToFloat(0.3055),doubleToFloat(-4.7600),doubleToFloat(2.7570),doubleToFloat(-0.2906),doubleToFloat(-5.2460),doubleToFloat(3.0090),doubleToFloat(-0.9859),doubleToFloat(-5.1890),doubleToFloat(3.6660),doubleToFloat(-0.6736),doubleToFloat(-4.9560),doubleToFloat(3.7280),doubleToFloat(0.1602)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.8540),doubleToFloat(2.7030),doubleToFloat(-0.0222),doubleToFloat(-5.3780),doubleToFloat(3.0170),doubleToFloat(-0.8358),doubleToFloat(-5.2850),doubleToFloat(3.6800),doubleToFloat(-0.4900),doubleToFloat(-4.5670),doubleToFloat(2.8750),doubleToFloat(-1.6850),doubleToFloat(-4.5400),doubleToFloat(1.7930),doubleToFloat(0.1877),doubleToFloat(-4.7520),doubleToFloat(1.9530),doubleToFloat(-0.1923),doubleToFloat(0.0000),doubleToFloat(5.6960),doubleToFloat(5.1500),doubleToFloat(0.0000),doubleToFloat(-0.5983),doubleToFloat(-1.4990),doubleToFloat(0.0000),doubleToFloat(-1.2200),doubleToFloat(1.5390),doubleToFloat(5.2500),doubleToFloat(6.2900),doubleToFloat(0.4119)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.1800),doubleToFloat(5.9210),doubleToFloat(3.9260),doubleToFloat(4.9430),doubleToFloat(6.2110),doubleToFloat(2.1650),doubleToFloat(5.0860),doubleToFloat(3.9350),doubleToFloat(0.3573),doubleToFloat(2.5450),doubleToFloat(1.6840),doubleToFloat(-3.8180),doubleToFloat(2.8170),doubleToFloat(2.0670),doubleToFloat(-3.7470),doubleToFloat(3.5000),doubleToFloat(1.4650),doubleToFloat(-2.5930),doubleToFloat(3.4820),doubleToFloat(1.8770),doubleToFloat(-2.8400),doubleToFloat(3.2760),doubleToFloat(2.2140),doubleToFloat(-3.3980),doubleToFloat(1.6450),doubleToFloat(4.3680),doubleToFloat(-4.9700),doubleToFloat(4.7250),doubleToFloat(4.8570),doubleToFloat(-1.6580)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.6300),doubleToFloat(4.6050),doubleToFloat(-3.7020),doubleToFloat(4.5090),doubleToFloat(3.8330),doubleToFloat(3.2300),doubleToFloat(3.4150),doubleToFloat(3.2990),doubleToFloat(-3.5630),doubleToFloat(1.5990),doubleToFloat(3.4590),doubleToFloat(-4.8810),doubleToFloat(3.2530),doubleToFloat(1.1980),doubleToFloat(-2.6180),doubleToFloat(3.1360),doubleToFloat(0.3930),doubleToFloat(-1.6980),doubleToFloat(2.8820),doubleToFloat(1.1640),doubleToFloat(-3.0660),doubleToFloat(2.6600),doubleToFloat(1.4000),doubleToFloat(-3.4480),doubleToFloat(2.4020),doubleToFloat(0.1660),doubleToFloat(-2.1640),doubleToFloat(1.5100),doubleToFloat(0.0017),doubleToFloat(-2.7110)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.3900),doubleToFloat(0.7151),doubleToFloat(-4.7400),doubleToFloat(3.8100),doubleToFloat(1.0010),doubleToFloat(-4.7230),doubleToFloat(4.3910),doubleToFloat(1.0780),doubleToFloat(-4.2750),doubleToFloat(4.5570),doubleToFloat(0.9924),doubleToFloat(-3.4710),doubleToFloat(4.3830),doubleToFloat(0.6453),doubleToFloat(-3.0500),doubleToFloat(4.1190),doubleToFloat(0.2766),doubleToFloat(-2.9160),doubleToFloat(3.6580),doubleToFloat(0.2739),doubleToFloat(-3.4420),doubleToFloat(3.2780),doubleToFloat(0.4430),doubleToFloat(-4.3550),doubleToFloat(1.3960),doubleToFloat(1.3680),doubleToFloat(-4.2880),doubleToFloat(1.4700),doubleToFloat(2.1200),doubleToFloat(-4.7170)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.2310),doubleToFloat(0.9777),doubleToFloat(-0.7771),doubleToFloat(4.6560),doubleToFloat(1.7590),doubleToFloat(-0.5260),doubleToFloat(3.8580),doubleToFloat(0.6862),doubleToFloat(-1.1260),doubleToFloat(1.3050),doubleToFloat(0.7914),doubleToFloat(-4.0030),doubleToFloat(4.1430),doubleToFloat(-1.1750),doubleToFloat(-3.9420),doubleToFloat(3.8800),doubleToFloat(-0.1228),doubleToFloat(-4.7500),doubleToFloat(4.1750),doubleToFloat(0.1359),doubleToFloat(-4.7580),doubleToFloat(4.5910),doubleToFloat(0.2055),doubleToFloat(-4.4140),doubleToFloat(4.7570),doubleToFloat(0.0807),doubleToFloat(-3.7380),doubleToFloat(4.6170),doubleToFloat(-0.1743),doubleToFloat(-3.3520)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.3410),doubleToFloat(-0.4100),doubleToFloat(-3.2430),doubleToFloat(4.0060),doubleToFloat(-0.4815),doubleToFloat(-3.6910),doubleToFloat(3.7070),doubleToFloat(-0.3174),doubleToFloat(-4.3680),doubleToFloat(4.9530),doubleToFloat(3.6300),doubleToFloat(-0.4252),doubleToFloat(4.4960),doubleToFloat(1.8040),doubleToFloat(-1.4690),doubleToFloat(4.6780),doubleToFloat(3.1990),doubleToFloat(-1.8660),doubleToFloat(3.6270),doubleToFloat(0.4670),doubleToFloat(2.8410),doubleToFloat(4.9500),doubleToFloat(3.9720),doubleToFloat(2.0870),doubleToFloat(2.9250),doubleToFloat(1.4990),doubleToFloat(-4.0420),doubleToFloat(3.1780),doubleToFloat(1.7420),doubleToFloat(-3.9540)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.7120),doubleToFloat(1.8140),doubleToFloat(-3.5920),doubleToFloat(3.9840),doubleToFloat(1.6080),doubleToFloat(-3.1670),doubleToFloat(3.9230),doubleToFloat(1.3500),doubleToFloat(-2.9580),doubleToFloat(3.6670),doubleToFloat(1.1440),doubleToFloat(-2.8720),doubleToFloat(3.1980),doubleToFloat(1.0440),doubleToFloat(-3.3620),doubleToFloat(2.9490),doubleToFloat(1.2390),doubleToFloat(-3.7480),doubleToFloat(2.5560),doubleToFloat(0.4124),doubleToFloat(-2.5160),doubleToFloat(2.0560),doubleToFloat(0.5099),doubleToFloat(-3.0290),doubleToFloat(3.9520),doubleToFloat(1.2130),doubleToFloat(-1.4240),doubleToFloat(3.6280),doubleToFloat(0.8781),doubleToFloat(-1.5330)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.3180),doubleToFloat(7.8840),doubleToFloat(2.6290),doubleToFloat(4.6260),doubleToFloat(8.0810),doubleToFloat(0.5346),doubleToFloat(2.6830),doubleToFloat(9.9350),doubleToFloat(0.5288),doubleToFloat(2.4070),doubleToFloat(9.6810),doubleToFloat(2.7510),doubleToFloat(1.5010),doubleToFloat(7.2820),doubleToFloat(5.0530),doubleToFloat(2.6170),doubleToFloat(6.8770),doubleToFloat(4.7310),doubleToFloat(3.6060),doubleToFloat(7.3710),doubleToFloat(4.0800),doubleToFloat(1.8230),doubleToFloat(8.4060),doubleToFloat(4.1340),doubleToFloat(1.7260),doubleToFloat(4.6520),doubleToFloat(5.1990),doubleToFloat(4.2750),doubleToFloat(7.9140),doubleToFloat(-1.6120)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.4740),doubleToFloat(9.6020),doubleToFloat(-1.5630),doubleToFloat(1.3980),doubleToFloat(8.1780),doubleToFloat(-4.2030),doubleToFloat(2.0430),doubleToFloat(8.9040),doubleToFloat(-3.1080),doubleToFloat(3.2010),doubleToFloat(7.4280),doubleToFloat(-3.4360),doubleToFloat(1.5860),doubleToFloat(5.7100),doubleToFloat(-4.9720),doubleToFloat(4.6750),doubleToFloat(6.1690),doubleToFloat(-1.7470),doubleToFloat(3.5330),doubleToFloat(5.9060),doubleToFloat(-3.5990),doubleToFloat(4.1120),doubleToFloat(1.0880),doubleToFloat(1.0030),doubleToFloat(3.9340),doubleToFloat(0.7210),doubleToFloat(2.1840),doubleToFloat(4.3340),doubleToFloat(2.3790),doubleToFloat(3.0310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.8220),doubleToFloat(2.5830),doubleToFloat(0.5942),doubleToFloat(4.6970),doubleToFloat(2.5350),doubleToFloat(2.1200),doubleToFloat(5.2610),doubleToFloat(5.1220),doubleToFloat(0.3537),doubleToFloat(5.0330),doubleToFloat(4.8040),doubleToFloat(2.0840),doubleToFloat(4.4210),doubleToFloat(4.5880),doubleToFloat(3.6330),doubleToFloat(1.4920),doubleToFloat(6.9310),doubleToFloat(-4.7440),doubleToFloat(3.1820),doubleToFloat(4.3480),doubleToFloat(4.7540),doubleToFloat(1.5830),doubleToFloat(6.0610),doubleToFloat(5.1260),doubleToFloat(2.9840),doubleToFloat(5.6550),doubleToFloat(4.7910),doubleToFloat(0.0000),doubleToFloat(4.3460),doubleToFloat(-5.4270)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(5.5110),doubleToFloat(-5.3230),doubleToFloat(0.0000),doubleToFloat(-0.0564),doubleToFloat(-3.1060),doubleToFloat(0.0000),doubleToFloat(3.6480),doubleToFloat(-5.3380),doubleToFloat(0.0000),doubleToFloat(2.2590),doubleToFloat(-5.0650),doubleToFloat(0.0000),doubleToFloat(4.2960),doubleToFloat(5.4270),doubleToFloat(0.0000),doubleToFloat(9.1560),doubleToFloat(4.2700),doubleToFloat(0.0000),doubleToFloat(7.5850),doubleToFloat(5.2460),doubleToFloat(0.0000),doubleToFloat(0.6606),doubleToFloat(-4.1780),doubleToFloat(0.0000),doubleToFloat(10.1300),doubleToFloat(-1.7790),doubleToFloat(-5.0860),doubleToFloat(3.9350),doubleToFloat(0.3573)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.2610),doubleToFloat(5.1220),doubleToFloat(0.3537),doubleToFloat(-5.0330),doubleToFloat(4.8040),doubleToFloat(2.0840),doubleToFloat(-4.9500),doubleToFloat(3.9720),doubleToFloat(2.0870),doubleToFloat(-2.5450),doubleToFloat(1.6840),doubleToFloat(-3.8180),doubleToFloat(-1.3960),doubleToFloat(1.3680),doubleToFloat(-4.2880),doubleToFloat(-1.4700),doubleToFloat(2.1200),doubleToFloat(-4.7170),doubleToFloat(-2.8170),doubleToFloat(2.0670),doubleToFloat(-3.7470),doubleToFloat(-1.6450),doubleToFloat(4.3680),doubleToFloat(-4.9700),doubleToFloat(-1.5860),doubleToFloat(5.7100),doubleToFloat(-4.9720),doubleToFloat(-4.9530),doubleToFloat(3.6300),doubleToFloat(-0.4252)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.6780),doubleToFloat(3.1990),doubleToFloat(-1.8660),doubleToFloat(-4.7250),doubleToFloat(4.8570),doubleToFloat(-1.6580),doubleToFloat(-3.6300),doubleToFloat(4.6050),doubleToFloat(-3.7020),doubleToFloat(-3.5330),doubleToFloat(5.9060),doubleToFloat(-3.5990),doubleToFloat(-4.6750),doubleToFloat(6.1690),doubleToFloat(-1.7470),doubleToFloat(-1.5990),doubleToFloat(3.4590),doubleToFloat(-4.8810),doubleToFloat(-3.4150),doubleToFloat(3.2990),doubleToFloat(-3.5630),doubleToFloat(-3.2760),doubleToFloat(2.2140),doubleToFloat(-3.3980),doubleToFloat(-3.2530),doubleToFloat(1.1980),doubleToFloat(-2.6180),doubleToFloat(-3.5000),doubleToFloat(1.4650),doubleToFloat(-2.5930)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.9520),doubleToFloat(1.2130),doubleToFloat(-1.4240),doubleToFloat(-3.6280),doubleToFloat(0.8781),doubleToFloat(-1.5330),doubleToFloat(-3.8580),doubleToFloat(0.6862),doubleToFloat(-1.1260),doubleToFloat(-3.1360),doubleToFloat(0.3930),doubleToFloat(-1.6980),doubleToFloat(-2.4020),doubleToFloat(0.1660),doubleToFloat(-2.1640),doubleToFloat(-2.5560),doubleToFloat(0.4124),doubleToFloat(-2.5160),doubleToFloat(-2.8820),doubleToFloat(1.1640),doubleToFloat(-3.0660),doubleToFloat(-2.0560),doubleToFloat(0.5099),doubleToFloat(-3.0290),doubleToFloat(-2.6600),doubleToFloat(1.4000),doubleToFloat(-3.4480),doubleToFloat(-1.5100),doubleToFloat(0.0017),doubleToFloat(-2.7110)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.3050),doubleToFloat(0.7914),doubleToFloat(-4.0030),doubleToFloat(0.0000),doubleToFloat(1.4600),doubleToFloat(-4.6500),doubleToFloat(-3.1780),doubleToFloat(1.7420),doubleToFloat(-3.9540),doubleToFloat(-2.9250),doubleToFloat(1.4990),doubleToFloat(-4.0420),doubleToFloat(-3.7120),doubleToFloat(1.8140),doubleToFloat(-3.5920),doubleToFloat(-3.4820),doubleToFloat(1.8770),doubleToFloat(-2.8400),doubleToFloat(-3.9840),doubleToFloat(1.6080),doubleToFloat(-3.1670),doubleToFloat(-3.9230),doubleToFloat(1.3500),doubleToFloat(-2.9580),doubleToFloat(-3.6670),doubleToFloat(1.1440),doubleToFloat(-2.8720),doubleToFloat(-3.1980),doubleToFloat(1.0440),doubleToFloat(-3.3620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.9490),doubleToFloat(1.2390),doubleToFloat(-3.7480),doubleToFloat(-4.4960),doubleToFloat(1.8040),doubleToFloat(-1.4690),doubleToFloat(-4.6560),doubleToFloat(1.7590),doubleToFloat(-0.5260),doubleToFloat(-3.3900),doubleToFloat(0.7151),doubleToFloat(-4.7400),doubleToFloat(-3.8100),doubleToFloat(1.0010),doubleToFloat(-4.7230),doubleToFloat(-4.1750),doubleToFloat(0.1359),doubleToFloat(-4.7580),doubleToFloat(-3.8800),doubleToFloat(-0.1228),doubleToFloat(-4.7500),doubleToFloat(-4.3910),doubleToFloat(1.0780),doubleToFloat(-4.2750),doubleToFloat(-4.5910),doubleToFloat(0.2055),doubleToFloat(-4.4140),doubleToFloat(-4.5570),doubleToFloat(0.9924),doubleToFloat(-3.4710)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.7570),doubleToFloat(0.0807),doubleToFloat(-3.7380),doubleToFloat(-4.3830),doubleToFloat(0.6453),doubleToFloat(-3.0500),doubleToFloat(-4.6170),doubleToFloat(-0.1743),doubleToFloat(-3.3520),doubleToFloat(-4.1190),doubleToFloat(0.2766),doubleToFloat(-2.9160),doubleToFloat(-4.3410),doubleToFloat(-0.4100),doubleToFloat(-3.2430),doubleToFloat(-3.6580),doubleToFloat(0.2739),doubleToFloat(-3.4420),doubleToFloat(-4.0060),doubleToFloat(-0.4815),doubleToFloat(-3.6910),doubleToFloat(-3.2780),doubleToFloat(0.4430),doubleToFloat(-4.3550),doubleToFloat(-3.7070),doubleToFloat(-0.3174),doubleToFloat(-4.3680),doubleToFloat(-4.1430),doubleToFloat(-1.1750),doubleToFloat(-3.9420)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.9430),doubleToFloat(6.2110),doubleToFloat(2.1650),doubleToFloat(-4.1800),doubleToFloat(5.9210),doubleToFloat(3.9260),doubleToFloat(-4.4210),doubleToFloat(4.5880),doubleToFloat(3.6330),doubleToFloat(-4.5090),doubleToFloat(3.8330),doubleToFloat(3.2300),doubleToFloat(-4.3340),doubleToFloat(2.3790),doubleToFloat(3.0310),doubleToFloat(-4.6970),doubleToFloat(2.5350),doubleToFloat(2.1200),doubleToFloat(-4.2310),doubleToFloat(0.9777),doubleToFloat(-0.7771),doubleToFloat(-4.3180),doubleToFloat(7.8840),doubleToFloat(2.6290),doubleToFloat(-4.6260),doubleToFloat(8.0810),doubleToFloat(0.5346),doubleToFloat(-2.6830),doubleToFloat(9.9350),doubleToFloat(0.5288)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.4070),doubleToFloat(9.6810),doubleToFloat(2.7510),doubleToFloat(-1.5010),doubleToFloat(7.2820),doubleToFloat(5.0530),doubleToFloat(-2.6170),doubleToFloat(6.8770),doubleToFloat(4.7310),doubleToFloat(-3.6060),doubleToFloat(7.3710),doubleToFloat(4.0800),doubleToFloat(-1.8230),doubleToFloat(8.4060),doubleToFloat(4.1340),doubleToFloat(-1.7260),doubleToFloat(4.6520),doubleToFloat(5.1990),doubleToFloat(-1.5830),doubleToFloat(6.0610),doubleToFloat(5.1260),doubleToFloat(0.0000),doubleToFloat(6.0530),doubleToFloat(5.3360),doubleToFloat(-5.2500),doubleToFloat(6.2900),doubleToFloat(0.4119),doubleToFloat(-4.2750),doubleToFloat(7.9140),doubleToFloat(-1.6120)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.4740),doubleToFloat(9.6020),doubleToFloat(-1.5630),doubleToFloat(-1.3980),doubleToFloat(8.1780),doubleToFloat(-4.2030),doubleToFloat(-2.0430),doubleToFloat(8.9040),doubleToFloat(-3.1080),doubleToFloat(-3.2010),doubleToFloat(7.4280),doubleToFloat(-3.4360),doubleToFloat(-1.4920),doubleToFloat(6.9310),doubleToFloat(-4.7440),doubleToFloat(0.0000),doubleToFloat(6.8770),doubleToFloat(-5.1050),doubleToFloat(0.0000),doubleToFloat(10.2900),doubleToFloat(2.8260),doubleToFloat(-2.9840),doubleToFloat(5.6550),doubleToFloat(4.7910),doubleToFloat(0.0000),doubleToFloat(10.5900),doubleToFloat(0.5215),doubleToFloat(0.0000),doubleToFloat(8.4130),doubleToFloat(-4.5720)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(9.3370),doubleToFloat(-3.4780),doubleToFloat(-4.8220),doubleToFloat(2.5830),doubleToFloat(0.5942),doubleToFloat(-3.6270),doubleToFloat(0.4670),doubleToFloat(2.8410),doubleToFloat(-3.9340),doubleToFloat(0.7210),doubleToFloat(2.1840),doubleToFloat(-4.1120),doubleToFloat(1.0880),doubleToFloat(1.0030),doubleToFloat(-3.1820),doubleToFloat(4.3480),doubleToFloat(4.7540),doubleToFloat(0.0000),doubleToFloat(-0.7926),doubleToFloat(-0.3034)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #200, 822 total numbers made up of 411 2-tuple values */
	this.TextureCoordinate_12_200_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7371),doubleToFloat(0.8735),doubleToFloat(0.7118),doubleToFloat(0.8666),doubleToFloat(0.7079),doubleToFloat(0.8588),doubleToFloat(0.7250),doubleToFloat(0.8534),doubleToFloat(0.8951),doubleToFloat(0.8262),doubleToFloat(0.8433),doubleToFloat(0.8501),doubleToFloat(0.8293),doubleToFloat(0.8238),doubleToFloat(0.8721),doubleToFloat(0.8035),doubleToFloat(0.8003),doubleToFloat(0.8675),doubleToFloat(0.7843),doubleToFloat(0.8394)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9052),doubleToFloat(0.7788),doubleToFloat(0.9360),doubleToFloat(0.8024),doubleToFloat(0.9034),doubleToFloat(0.8249),doubleToFloat(0.7643),doubleToFloat(0.8709),doubleToFloat(0.7544),doubleToFloat(0.8466),doubleToFloat(0.8277),doubleToFloat(0.9798),doubleToFloat(0.7944),doubleToFloat(0.9784),doubleToFloat(0.7833),doubleToFloat(0.9215),doubleToFloat(0.8142),doubleToFloat(0.9188),doubleToFloat(0.7395),doubleToFloat(0.8955)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7147),doubleToFloat(0.8917),doubleToFloat(0.7077),doubleToFloat(0.8715),doubleToFloat(0.9163),doubleToFloat(0.8525),doubleToFloat(0.8586),doubleToFloat(0.8850),doubleToFloat(0.8088),doubleToFloat(0.8940),doubleToFloat(0.9489),doubleToFloat(0.8551),doubleToFloat(0.9437),doubleToFloat(0.8732),doubleToFloat(0.9265),doubleToFloat(0.8801),doubleToFloat(0.9224),doubleToFloat(0.8516),doubleToFloat(0.8327),doubleToFloat(0.7672)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7884),doubleToFloat(0.7939),doubleToFloat(0.7493),doubleToFloat(0.7764),doubleToFloat(0.7859),doubleToFloat(0.7570),doubleToFloat(0.7591),doubleToFloat(0.8101),doubleToFloat(0.7338),doubleToFloat(0.7936),doubleToFloat(0.7208),doubleToFloat(0.8205),doubleToFloat(0.7010),doubleToFloat(0.8128),doubleToFloat(0.7087),doubleToFloat(0.7850),doubleToFloat(0.7792),doubleToFloat(0.8949),doubleToFloat(0.7413),doubleToFloat(0.9255)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7177),doubleToFloat(0.9234),doubleToFloat(0.9216),doubleToFloat(0.8827),doubleToFloat(0.9236),doubleToFloat(0.9064),doubleToFloat(0.8811),doubleToFloat(0.9588),doubleToFloat(0.8669),doubleToFloat(0.9093),doubleToFloat(0.6998),doubleToFloat(0.8671),doubleToFloat(0.7394),doubleToFloat(0.8259),doubleToFloat(0.8564),doubleToFloat(0.7484),doubleToFloat(0.8821),doubleToFloat(0.7224),doubleToFloat(0.9150),doubleToFloat(0.7347)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8862),doubleToFloat(0.7023),doubleToFloat(0.9197),doubleToFloat(0.7004),doubleToFloat(0.8826),doubleToFloat(0.6846),doubleToFloat(0.9168),doubleToFloat(0.6740),doubleToFloat(0.7408),doubleToFloat(0.7488),doubleToFloat(0.8150),doubleToFloat(0.7385),doubleToFloat(0.8328),doubleToFloat(0.7345),doubleToFloat(0.7468),doubleToFloat(0.9724),doubleToFloat(0.7146),doubleToFloat(0.7626),doubleToFloat(0.8486),doubleToFloat(0.7239)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8548),doubleToFloat(0.7049),doubleToFloat(0.9296),doubleToFloat(0.8783),doubleToFloat(0.9549),doubleToFloat(0.8736),doubleToFloat(0.9189),doubleToFloat(0.8244),doubleToFloat(0.9181),doubleToFloat(0.8268),doubleToFloat(0.8982),doubleToFloat(0.8267),doubleToFloat(0.9245),doubleToFloat(0.8496),doubleToFloat(0.9516),doubleToFloat(0.8506),doubleToFloat(0.9475),doubleToFloat(0.8719),doubleToFloat(0.9243),doubleToFloat(0.8828)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9200),doubleToFloat(0.8522),doubleToFloat(0.9509),doubleToFloat(0.8535),doubleToFloat(0.9454),doubleToFloat(0.8752),doubleToFloat(0.9529),doubleToFloat(0.8338),doubleToFloat(0.9033),doubleToFloat(0.8284),doubleToFloat(0.9171),doubleToFloat(0.8292),doubleToFloat(0.6956),doubleToFloat(0.8625),doubleToFloat(0.6954),doubleToFloat(0.8622),doubleToFloat(0.6967),doubleToFloat(0.8528),doubleToFloat(0.7237),doubleToFloat(0.9687)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7008),doubleToFloat(0.8395),doubleToFloat(0.9034),doubleToFloat(0.8249),doubleToFloat(0.9296),doubleToFloat(0.8783),doubleToFloat(0.9245),doubleToFloat(0.8496),doubleToFloat(0.7371),doubleToFloat(0.8735),doubleToFloat(0.7118),doubleToFloat(0.8666),doubleToFloat(0.7079),doubleToFloat(0.8588),doubleToFloat(0.7250),doubleToFloat(0.8534),doubleToFloat(0.8951),doubleToFloat(0.8262),doubleToFloat(0.8433),doubleToFloat(0.8501)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8293),doubleToFloat(0.8238),doubleToFloat(0.8721),doubleToFloat(0.8035),doubleToFloat(0.8003),doubleToFloat(0.8675),doubleToFloat(0.7843),doubleToFloat(0.8394),doubleToFloat(0.9052),doubleToFloat(0.7788),doubleToFloat(0.9360),doubleToFloat(0.8024),doubleToFloat(0.9034),doubleToFloat(0.8249),doubleToFloat(0.7643),doubleToFloat(0.8709),doubleToFloat(0.7544),doubleToFloat(0.8466),doubleToFloat(0.8277),doubleToFloat(0.9798)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7944),doubleToFloat(0.9784),doubleToFloat(0.7833),doubleToFloat(0.9215),doubleToFloat(0.8142),doubleToFloat(0.9188),doubleToFloat(0.7395),doubleToFloat(0.8955),doubleToFloat(0.7147),doubleToFloat(0.8917),doubleToFloat(0.7077),doubleToFloat(0.8715),doubleToFloat(0.9163),doubleToFloat(0.8525),doubleToFloat(0.8586),doubleToFloat(0.8850),doubleToFloat(0.8088),doubleToFloat(0.8940),doubleToFloat(0.9489),doubleToFloat(0.8551)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9437),doubleToFloat(0.8732),doubleToFloat(0.9265),doubleToFloat(0.8801),doubleToFloat(0.9224),doubleToFloat(0.8516),doubleToFloat(0.8327),doubleToFloat(0.7672),doubleToFloat(0.7884),doubleToFloat(0.7939),doubleToFloat(0.7493),doubleToFloat(0.7764),doubleToFloat(0.7859),doubleToFloat(0.7570),doubleToFloat(0.7591),doubleToFloat(0.8101),doubleToFloat(0.7338),doubleToFloat(0.7936),doubleToFloat(0.7208),doubleToFloat(0.8205)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7010),doubleToFloat(0.8128),doubleToFloat(0.7087),doubleToFloat(0.7850),doubleToFloat(0.7792),doubleToFloat(0.8949),doubleToFloat(0.7413),doubleToFloat(0.9255),doubleToFloat(0.7177),doubleToFloat(0.9234),doubleToFloat(0.9216),doubleToFloat(0.8827),doubleToFloat(0.9236),doubleToFloat(0.9064),doubleToFloat(0.8811),doubleToFloat(0.9588),doubleToFloat(0.8669),doubleToFloat(0.9093),doubleToFloat(0.6998),doubleToFloat(0.8671)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7394),doubleToFloat(0.8259),doubleToFloat(0.8564),doubleToFloat(0.7484),doubleToFloat(0.8821),doubleToFloat(0.7224),doubleToFloat(0.9150),doubleToFloat(0.7347),doubleToFloat(0.8862),doubleToFloat(0.7023),doubleToFloat(0.9197),doubleToFloat(0.7004),doubleToFloat(0.8826),doubleToFloat(0.6846),doubleToFloat(0.9168),doubleToFloat(0.6740),doubleToFloat(0.7408),doubleToFloat(0.7488),doubleToFloat(0.8150),doubleToFloat(0.7385)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8328),doubleToFloat(0.7345),doubleToFloat(0.7468),doubleToFloat(0.9724),doubleToFloat(0.7146),doubleToFloat(0.7626),doubleToFloat(0.8486),doubleToFloat(0.7239),doubleToFloat(0.8548),doubleToFloat(0.7049),doubleToFloat(0.9296),doubleToFloat(0.8783),doubleToFloat(0.9549),doubleToFloat(0.8736),doubleToFloat(0.9034),doubleToFloat(0.8249),doubleToFloat(0.9189),doubleToFloat(0.8244),doubleToFloat(0.9181),doubleToFloat(0.8268)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8982),doubleToFloat(0.8267),doubleToFloat(0.9245),doubleToFloat(0.8496),doubleToFloat(0.9516),doubleToFloat(0.8506),doubleToFloat(0.9296),doubleToFloat(0.8783),doubleToFloat(0.9475),doubleToFloat(0.8719),doubleToFloat(0.9243),doubleToFloat(0.8828),doubleToFloat(0.9200),doubleToFloat(0.8522),doubleToFloat(0.9509),doubleToFloat(0.8535),doubleToFloat(0.9454),doubleToFloat(0.8752),doubleToFloat(0.9529),doubleToFloat(0.8338)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9245),doubleToFloat(0.8496),doubleToFloat(0.9033),doubleToFloat(0.8284),doubleToFloat(0.9171),doubleToFloat(0.8292),doubleToFloat(0.6956),doubleToFloat(0.8625),doubleToFloat(0.6954),doubleToFloat(0.8622),doubleToFloat(0.6967),doubleToFloat(0.8528),doubleToFloat(0.7237),doubleToFloat(0.9687),doubleToFloat(0.7008),doubleToFloat(0.8395),doubleToFloat(0.8548),doubleToFloat(0.6946),doubleToFloat(0.8548),doubleToFloat(0.6946)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7624),doubleToFloat(0.7362),doubleToFloat(0.7624),doubleToFloat(0.7362),doubleToFloat(0.4693),doubleToFloat(0.8213),doubleToFloat(0.4708),doubleToFloat(0.8395),doubleToFloat(0.4424),doubleToFloat(0.8403),doubleToFloat(0.4406),doubleToFloat(0.8281),doubleToFloat(0.5588),doubleToFloat(0.7994),doubleToFloat(0.5788),doubleToFloat(0.7951),doubleToFloat(0.5805),doubleToFloat(0.8083),doubleToFloat(0.5547),doubleToFloat(0.8042)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5774),doubleToFloat(0.8436),doubleToFloat(0.6042),doubleToFloat(0.8480),doubleToFloat(0.5991),doubleToFloat(0.8685),doubleToFloat(0.5737),doubleToFloat(0.8635),doubleToFloat(0.4858),doubleToFloat(0.8156),doubleToFloat(0.5100),doubleToFloat(0.8133),doubleToFloat(0.5039),doubleToFloat(0.8371),doubleToFloat(0.5404),doubleToFloat(0.8394),doubleToFloat(0.5380),doubleToFloat(0.8581),doubleToFloat(0.5048),doubleToFloat(0.8560)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5787),doubleToFloat(0.8291),doubleToFloat(0.5436),doubleToFloat(0.8205),doubleToFloat(0.5457),doubleToFloat(0.8040),doubleToFloat(0.5387),doubleToFloat(0.7866),doubleToFloat(0.5351),doubleToFloat(0.7904),doubleToFloat(0.5175),doubleToFloat(0.7806),doubleToFloat(0.5236),doubleToFloat(0.7756),doubleToFloat(0.5172),doubleToFloat(0.7709),doubleToFloat(0.5330),doubleToFloat(0.7685),doubleToFloat(0.5477),doubleToFloat(0.7661)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5485),doubleToFloat(0.7731),doubleToFloat(0.5745),doubleToFloat(0.7193),doubleToFloat(0.5479),doubleToFloat(0.7885),doubleToFloat(0.5609),doubleToFloat(0.7153),doubleToFloat(0.5597),doubleToFloat(0.7765),doubleToFloat(0.5541),doubleToFloat(0.7937),doubleToFloat(0.5653),doubleToFloat(0.7648),doubleToFloat(0.5904),doubleToFloat(0.7602),doubleToFloat(0.5980),doubleToFloat(0.7794),doubleToFloat(0.5777),doubleToFloat(0.7852)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5676),doubleToFloat(0.6997),doubleToFloat(0.5807),doubleToFloat(0.7066),doubleToFloat(0.5465),doubleToFloat(0.7058),doubleToFloat(0.5556),doubleToFloat(0.6901),doubleToFloat(0.5325),doubleToFloat(0.6939),doubleToFloat(0.5428),doubleToFloat(0.6808),doubleToFloat(0.5248),doubleToFloat(0.6834),doubleToFloat(0.5336),doubleToFloat(0.6727),doubleToFloat(0.5183),doubleToFloat(0.6776),doubleToFloat(0.6052),doubleToFloat(0.8343)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6019),doubleToFloat(0.7945),doubleToFloat(0.6046),doubleToFloat(0.8100),doubleToFloat(0.5249),doubleToFloat(0.6666),doubleToFloat(0.5077),doubleToFloat(0.6720),doubleToFloat(0.5140),doubleToFloat(0.6606),doubleToFloat(0.5865),doubleToFloat(0.7212),doubleToFloat(0.5941),doubleToFloat(0.7080),doubleToFloat(0.5893),doubleToFloat(0.6887),doubleToFloat(0.5791),doubleToFloat(0.6849),doubleToFloat(0.5641),doubleToFloat(0.6751)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5524),doubleToFloat(0.6647),doubleToFloat(0.5393),doubleToFloat(0.6564),doubleToFloat(0.5358),doubleToFloat(0.6528),doubleToFloat(0.5186),doubleToFloat(0.6439),doubleToFloat(0.6026),doubleToFloat(0.6917),doubleToFloat(0.6201),doubleToFloat(0.6139),doubleToFloat(0.6262),doubleToFloat(0.6127),doubleToFloat(0.6089),doubleToFloat(0.6075),doubleToFloat(0.5974),doubleToFloat(0.6008),doubleToFloat(0.5373),doubleToFloat(0.7968)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5109),doubleToFloat(0.7912),doubleToFloat(0.4972),doubleToFloat(0.7858),doubleToFloat(0.4458),doubleToFloat(0.8610),doubleToFloat(0.4172),doubleToFloat(0.8676),doubleToFloat(0.4145),doubleToFloat(0.8453),doubleToFloat(0.4206),doubleToFloat(0.8297),doubleToFloat(0.4199),doubleToFloat(0.8058),doubleToFloat(0.4356),doubleToFloat(0.8062),doubleToFloat(0.5078),doubleToFloat(0.7742),doubleToFloat(0.4443),doubleToFloat(0.8889)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4735),doubleToFloat(0.8849),doubleToFloat(0.4794),doubleToFloat(0.9254),doubleToFloat(0.4460),doubleToFloat(0.9290),doubleToFloat(0.3953),doubleToFloat(0.9147),doubleToFloat(0.4038),doubleToFloat(0.8970),doubleToFloat(0.4214),doubleToFloat(0.8917),doubleToFloat(0.4165),doubleToFloat(0.9240),doubleToFloat(0.3704),doubleToFloat(0.8810),doubleToFloat(0.3835),doubleToFloat(0.8991),doubleToFloat(0.3650),doubleToFloat(0.9171)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3460),doubleToFloat(0.8967),doubleToFloat(0.4716),doubleToFloat(0.8567),doubleToFloat(0.5038),doubleToFloat(0.8823),doubleToFloat(0.5110),doubleToFloat(0.9192),doubleToFloat(0.5586),doubleToFloat(0.9039),doubleToFloat(0.5367),doubleToFloat(0.9107),doubleToFloat(0.5353),doubleToFloat(0.8813),doubleToFloat(0.5672),doubleToFloat(0.8843),doubleToFloat(0.5902),doubleToFloat(0.8926),doubleToFloat(0.4419),doubleToFloat(0.9681)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4088),doubleToFloat(0.9546),doubleToFloat(0.3962),doubleToFloat(0.8781),doubleToFloat(0.4851),doubleToFloat(0.9689),doubleToFloat(0.3826),doubleToFloat(0.9357),doubleToFloat(0.5266),doubleToFloat(0.9565),doubleToFloat(0.5767),doubleToFloat(0.9186),doubleToFloat(0.5580),doubleToFloat(0.9364),doubleToFloat(0.4593),doubleToFloat(0.8016),doubleToFloat(0.4152),doubleToFloat(0.7740),doubleToFloat(0.5931),doubleToFloat(0.5924)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5900),doubleToFloat(0.5861),doubleToFloat(0.5880),doubleToFloat(0.5761),doubleToFloat(0.6311),doubleToFloat(0.6092),doubleToFloat(0.6267),doubleToFloat(0.5702),doubleToFloat(0.4269),doubleToFloat(0.7767),doubleToFloat(0.4464),doubleToFloat(0.7781),doubleToFloat(0.3868),doubleToFloat(0.8597),doubleToFloat(0.5967),doubleToFloat(0.7246),doubleToFloat(0.6056),doubleToFloat(0.7142),doubleToFloat(0.6227),doubleToFloat(0.7061)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6440),doubleToFloat(0.6075),doubleToFloat(0.4693),doubleToFloat(0.8213),doubleToFloat(0.4708),doubleToFloat(0.8395),doubleToFloat(0.4424),doubleToFloat(0.8403),doubleToFloat(0.4406),doubleToFloat(0.8281),doubleToFloat(0.5588),doubleToFloat(0.7994),doubleToFloat(0.5788),doubleToFloat(0.7951),doubleToFloat(0.5805),doubleToFloat(0.8083),doubleToFloat(0.5547),doubleToFloat(0.8042),doubleToFloat(0.5774),doubleToFloat(0.8436)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6042),doubleToFloat(0.8480),doubleToFloat(0.5991),doubleToFloat(0.8685),doubleToFloat(0.5737),doubleToFloat(0.8635),doubleToFloat(0.4858),doubleToFloat(0.8156),doubleToFloat(0.5100),doubleToFloat(0.8133),doubleToFloat(0.5039),doubleToFloat(0.8371),doubleToFloat(0.5404),doubleToFloat(0.8394),doubleToFloat(0.5380),doubleToFloat(0.8581),doubleToFloat(0.5048),doubleToFloat(0.8560),doubleToFloat(0.5787),doubleToFloat(0.8291)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5436),doubleToFloat(0.8205),doubleToFloat(0.5457),doubleToFloat(0.8040),doubleToFloat(0.5387),doubleToFloat(0.7866),doubleToFloat(0.5351),doubleToFloat(0.7904),doubleToFloat(0.5175),doubleToFloat(0.7806),doubleToFloat(0.5236),doubleToFloat(0.7756),doubleToFloat(0.5172),doubleToFloat(0.7709),doubleToFloat(0.5330),doubleToFloat(0.7685),doubleToFloat(0.5477),doubleToFloat(0.7661),doubleToFloat(0.5485),doubleToFloat(0.7731)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5479),doubleToFloat(0.7885),doubleToFloat(0.5597),doubleToFloat(0.7765),doubleToFloat(0.5541),doubleToFloat(0.7937),doubleToFloat(0.5653),doubleToFloat(0.7648),doubleToFloat(0.5904),doubleToFloat(0.7602),doubleToFloat(0.5980),doubleToFloat(0.7794),doubleToFloat(0.5777),doubleToFloat(0.7852),doubleToFloat(0.6052),doubleToFloat(0.8343),doubleToFloat(0.6019),doubleToFloat(0.7945),doubleToFloat(0.5745),doubleToFloat(0.7193)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5609),doubleToFloat(0.7153),doubleToFloat(0.5676),doubleToFloat(0.6997),doubleToFloat(0.5807),doubleToFloat(0.7066),doubleToFloat(0.5465),doubleToFloat(0.7058),doubleToFloat(0.5556),doubleToFloat(0.6901),doubleToFloat(0.5325),doubleToFloat(0.6939),doubleToFloat(0.5428),doubleToFloat(0.6808),doubleToFloat(0.5248),doubleToFloat(0.6834),doubleToFloat(0.5336),doubleToFloat(0.6727),doubleToFloat(0.5183),doubleToFloat(0.6776)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5249),doubleToFloat(0.6666),doubleToFloat(0.5077),doubleToFloat(0.6720),doubleToFloat(0.5140),doubleToFloat(0.6606),doubleToFloat(0.5967),doubleToFloat(0.7246),doubleToFloat(0.5865),doubleToFloat(0.7212),doubleToFloat(0.5941),doubleToFloat(0.7080),doubleToFloat(0.6056),doubleToFloat(0.7142),doubleToFloat(0.6046),doubleToFloat(0.8100),doubleToFloat(0.5373),doubleToFloat(0.7968),doubleToFloat(0.5109),doubleToFloat(0.7912)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4972),doubleToFloat(0.7858),doubleToFloat(0.5893),doubleToFloat(0.6887),doubleToFloat(0.5791),doubleToFloat(0.6849),doubleToFloat(0.6201),doubleToFloat(0.6139),doubleToFloat(0.6262),doubleToFloat(0.6127),doubleToFloat(0.5641),doubleToFloat(0.6751),doubleToFloat(0.6089),doubleToFloat(0.6075),doubleToFloat(0.5524),doubleToFloat(0.6647),doubleToFloat(0.5974),doubleToFloat(0.6008),doubleToFloat(0.5393),doubleToFloat(0.6564)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5931),doubleToFloat(0.5924),doubleToFloat(0.5358),doubleToFloat(0.6528),doubleToFloat(0.5900),doubleToFloat(0.5861),doubleToFloat(0.5186),doubleToFloat(0.6439),doubleToFloat(0.5880),doubleToFloat(0.5761),doubleToFloat(0.6227),doubleToFloat(0.7061),doubleToFloat(0.6026),doubleToFloat(0.6917),doubleToFloat(0.6311),doubleToFloat(0.6092),doubleToFloat(0.6440),doubleToFloat(0.6075),doubleToFloat(0.6267),doubleToFloat(0.5702)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4458),doubleToFloat(0.8610),doubleToFloat(0.4172),doubleToFloat(0.8676),doubleToFloat(0.4145),doubleToFloat(0.8453),doubleToFloat(0.4206),doubleToFloat(0.8297),doubleToFloat(0.4199),doubleToFloat(0.8058),doubleToFloat(0.4356),doubleToFloat(0.8062),doubleToFloat(0.5078),doubleToFloat(0.7742),doubleToFloat(0.4443),doubleToFloat(0.8889),doubleToFloat(0.4735),doubleToFloat(0.8849),doubleToFloat(0.4794),doubleToFloat(0.9254)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4460),doubleToFloat(0.9290),doubleToFloat(0.3953),doubleToFloat(0.9147),doubleToFloat(0.4038),doubleToFloat(0.8970),doubleToFloat(0.4214),doubleToFloat(0.8917),doubleToFloat(0.4165),doubleToFloat(0.9240),doubleToFloat(0.3704),doubleToFloat(0.8810),doubleToFloat(0.3835),doubleToFloat(0.8991),doubleToFloat(0.3650),doubleToFloat(0.9171),doubleToFloat(0.3460),doubleToFloat(0.8967),doubleToFloat(0.4716),doubleToFloat(0.8567)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5038),doubleToFloat(0.8823),doubleToFloat(0.5110),doubleToFloat(0.9192),doubleToFloat(0.5586),doubleToFloat(0.9039),doubleToFloat(0.5367),doubleToFloat(0.9107),doubleToFloat(0.5353),doubleToFloat(0.8813),doubleToFloat(0.5672),doubleToFloat(0.8843),doubleToFloat(0.5902),doubleToFloat(0.8926),doubleToFloat(0.4419),doubleToFloat(0.9681),doubleToFloat(0.4088),doubleToFloat(0.9546),doubleToFloat(0.3962),doubleToFloat(0.8781)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4851),doubleToFloat(0.9689),doubleToFloat(0.3826),doubleToFloat(0.9357),doubleToFloat(0.5266),doubleToFloat(0.9565),doubleToFloat(0.5767),doubleToFloat(0.9186),doubleToFloat(0.5580),doubleToFloat(0.9364),doubleToFloat(0.4593),doubleToFloat(0.8016),doubleToFloat(0.4152),doubleToFloat(0.7740),doubleToFloat(0.4269),doubleToFloat(0.7767),doubleToFloat(0.4464),doubleToFloat(0.7781),doubleToFloat(0.3868),doubleToFloat(0.8597)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8320),doubleToFloat(0.7234)], Java.type("float[]"))));
  this.x3dModel = new X3D().setProfile("Immersive").setVersion("4.0")
  .setHead(new head()
    .addComponent(new component().setName("HAnim").setLevel(1))
    .addMeta(new meta().setName("title").setContent("KoreanCharacter06Ga.x3d"))
    .addMeta(new meta().setName("creator").setContent("Jin Hoon Lee and Min Joo Lee"))
    .addMeta(new meta().setName("translator").setContent("Chul Hee Jung and Myeong Won Lee"))
    .addMeta(new meta().setName("created").setContent("31 March 2011"))
    .addMeta(new meta().setName("translated").setContent("1 November 2014"))
    .addMeta(new meta().setName("modified").setContent("23 December 2021"))
    .addMeta(new meta().setName("description").setContent("Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model."))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacter00ReadMe.txt"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacterHumanMotion_Infotech2014_140706.pdf"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharactersIllustrated.pdf"))
    .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter06Ga.x3d"))
    .addMeta(new meta().setName("generator").setContent("3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview"))
    .addMeta(new meta().setName("generator").setContent("Suwon University HAnim Editor"))
    .addMeta(new meta().setName("generator").setContent("Gnu Image Manipulation Program, http://www.gimp.org"))
    .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName("license").setContent("../license.html")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setTitle("KoreanCharacter06Ga.x3d"))
    .addChild(new NavigationInfo().setSpeed(1.5))
    .addChild(new Viewpoint().setDescription("Ga").setCenterOfRotation(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(0.0)).setPosition(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(3.0)))
    .addChild(new HAnimHumanoid("hanim_Ga").setName("Ga").setScale(doubleToFloat(0.0225),doubleToFloat(0.0225),doubleToFloat(0.0225)).setVersion("2.0")
      .addComments(" original HAnimHumanoid info='\"authorName=Chul Hee Jung and Myeong Won Lee\" \"authorEmail=myeongwonlee@gmail.com\" \"creationDate=31 March 2011\" \"humanoidVersion=2.0\" \"gender=female\" \"height=1.5\"' ")
      .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference(this.MetadataSet_HAnimHumanoid.info_4_22_reference)
        .addValue(new MetadataString().setName("authorName").setValue(new MFString("\"Chul Hee Jung and Myeong Won Lee\"")))
        .addValue(new MetadataString().setName("authorEmail").setValue(new MFString("\"myeongwonlee@gmail.com\"")))
        .addValue(new MetadataString().setName("creationDate").setValue(new MFString("\"31 March 2011\"")))
        .addValue(new MetadataString().setName("gender").setValue(new MFString("\"female\"")))
        .addValue(new MetadataFloat().setName("height").setValue(Java.to([doubleToFloat(1.5)], Java.type("float[]"))))
        .addValue(new MetadataString().setName("humanoidVersion").setValue(new MFString("\"2.0\""))))
      .addSkeleton(new HAnimJoint("hanim_humanoid_root").setName("humanoid_root").setCenter(doubleToFloat(0.0),doubleToFloat(32.310001),doubleToFloat(-0.707600))
        .addChild(new HAnimSegment("hanim_sacrum").setName("sacrum")
          .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(32.310001),doubleToFloat(-0.707600))
            .addChild(new Shape()
              .setAppearance(new Appearance()
                .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                .setTexture(new ImageTexture("GaTextureAtlas").setUrl(new MFString("\"images/Ga.png\" \"https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/Ga.png\""))))
              .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_8_32_coordIndex).setTexCoordIndex(this.IndexedFaceSet_8_32_texCoordIndex)
                .setCoord(new Coordinate().setPoint(this.Coordinate_9_32_point))
                .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_9_33_point))))))
        .addChild(new HAnimJoint("hanim_l_hip").setName("l_hip").setCenter(doubleToFloat(2.906000),doubleToFloat(30.180000),doubleToFloat(-0.296600))
          .addChild(new HAnimSegment("hanim_l_thigh").setName("l_thigh")
            .addChild(new Transform().setTranslation(doubleToFloat(2.906000),doubleToFloat(30.180000),doubleToFloat(-0.296600))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_41_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_41_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_41_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_42_point))))))
          .addChild(new HAnimJoint("hanim_l_knee").setName("l_knee").setCenter(doubleToFloat(3.116000),doubleToFloat(16.920000),doubleToFloat(-0.216100))
            .addChild(new HAnimSegment("hanim_l_calf").setName("l_calf")
              .addChild(new Transform().setTranslation(doubleToFloat(3.116000),doubleToFloat(16.920000),doubleToFloat(-0.216100))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_50_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_50_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_50_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_51_point))))))
            .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_talocrural").setCenter(doubleToFloat(3.280000),doubleToFloat(4.021000),doubleToFloat(-0.243900))
              .addChild(new HAnimSegment("hanim_l_talus").setName("l_talus")
                .addChild(new Transform().setTranslation(doubleToFloat(3.280000),doubleToFloat(4.021000),doubleToFloat(-0.243900))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_59_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_59_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_59_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_60_point))))))
              .addChild(new HAnimJoint("hanim_l_metatarsophalangeal_2").setName("l_metatarsophalangeal_2").setCenter(doubleToFloat(3.280000),doubleToFloat(3.095000),doubleToFloat(0.830000))
                .addChild(new HAnimSegment("hanim_l_tarsal_proximal_phalanx_2").setName("l_tarsal_proximal_phalanx_2")
                  .addChild(new Transform().setTranslation(doubleToFloat(3.280000),doubleToFloat(3.095000),doubleToFloat(0.830000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_68_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_68_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_68_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_69_point))))))))))
        .addChild(new HAnimJoint("hanim_r_hip").setName("r_hip").setCenter(doubleToFloat(-2.906000),doubleToFloat(30.180000),doubleToFloat(-0.296600))
          .addChild(new HAnimSegment("hanim_r_thigh").setName("r_thigh")
            .addChild(new Transform().setTranslation(doubleToFloat(-2.906000),doubleToFloat(30.180000),doubleToFloat(-0.296600))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_81_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_81_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_81_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_82_point))))))
          .addChild(new HAnimJoint("hanim_r_knee").setName("r_knee").setCenter(doubleToFloat(-3.116000),doubleToFloat(16.920000),doubleToFloat(-0.216100))
            .addChild(new HAnimSegment("hanim_r_calf").setName("r_calf")
              .addChild(new Transform().setTranslation(doubleToFloat(-3.116000),doubleToFloat(16.920000),doubleToFloat(-0.216100))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_90_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_90_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_90_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_91_point))))))
            .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_talocrural").setCenter(doubleToFloat(-3.280000),doubleToFloat(4.021000),doubleToFloat(-0.243900))
              .addChild(new HAnimSegment("hanim_r_talus").setName("r_talus")
                .addChild(new Transform().setTranslation(doubleToFloat(-3.280000),doubleToFloat(4.021000),doubleToFloat(-0.243900))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_99_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_99_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_99_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_100_point))))))
              .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_2").setName("r_metatarsophalangeal_2").setCenter(doubleToFloat(-3.280000),doubleToFloat(3.095000),doubleToFloat(0.830000))
                .addChild(new HAnimSegment("hanim_r_tarsal_proximal_phalanx_2").setName("r_tarsal_proximal_phalanx_2")
                  .addChild(new Transform().setTranslation(doubleToFloat(-3.280000),doubleToFloat(3.095000),doubleToFloat(0.830000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_108_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_108_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_108_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_109_point))))))))))
        .addChild(new HAnimJoint("hanim_sacroiliac").setName("sacroiliac").setCenter(doubleToFloat(0.0),doubleToFloat(29.389999),doubleToFloat(-0.382900))
          .addChild(new HAnimSegment("hanim_pelvis").setName("pelvis")
            .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(29.389999),doubleToFloat(-0.382900))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_121_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_121_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_121_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_122_point))))))
          .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_shoulder").setCenter(doubleToFloat(6.499000),doubleToFloat(47.529999),doubleToFloat(-0.741500))
            .addChild(new HAnimSegment("hanim_l_upperarm").setName("l_upperarm")
              .addChild(new Transform().setTranslation(doubleToFloat(6.499000),doubleToFloat(47.529999),doubleToFloat(-0.741500))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_130_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_130_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_130_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_131_point))))))
            .addChild(new HAnimJoint("hanim_l_elbow").setName("l_elbow").setCenter(doubleToFloat(6.851000),doubleToFloat(38.779999),doubleToFloat(-0.788600))
              .addChild(new HAnimSegment("hanim_l_forearm").setName("l_forearm")
                .addChild(new Transform().setTranslation(doubleToFloat(6.851000),doubleToFloat(38.779999),doubleToFloat(-0.788600))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_139_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_139_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_139_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_140_point))))))
              .addChild(new HAnimJoint("hanim_l_radiocarpal").setName("l_radiocarpal").setCenter(doubleToFloat(7.219000),doubleToFloat(32.480000),doubleToFloat(-0.434000))
                .addChild(new HAnimSegment("hanim_l_carpal").setName("l_carpal")
                  .addChild(new Transform().setTranslation(doubleToFloat(7.219000),doubleToFloat(32.480000),doubleToFloat(-0.434000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_148_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_148_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_148_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_149_point)))))))))
          .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_shoulder").setCenter(doubleToFloat(-6.499000),doubleToFloat(47.529999),doubleToFloat(-0.741500))
            .addChild(new HAnimSegment("hanim_r_upperarm").setName("r_upperarm")
              .addChild(new Transform().setTranslation(doubleToFloat(-6.499000),doubleToFloat(47.529999),doubleToFloat(-0.741500))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_160_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_160_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_160_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_161_point))))))
            .addChild(new HAnimJoint("hanim_r_elbow").setName("r_elbow").setCenter(doubleToFloat(-6.851000),doubleToFloat(38.779999),doubleToFloat(-0.788600))
              .addChild(new HAnimSegment("hanim_r_forearm").setName("r_forearm")
                .addChild(new Transform().setTranslation(doubleToFloat(-6.851000),doubleToFloat(38.779999),doubleToFloat(-0.788600))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_169_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_169_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_169_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_170_point))))))
              .addChild(new HAnimJoint("hanim_r_radiocarpal").setName("r_radiocarpal").setCenter(doubleToFloat(-7.219000),doubleToFloat(32.480000),doubleToFloat(-0.434000))
                .addChild(new HAnimSegment("hanim_r_carpal").setName("r_carpal")
                  .addChild(new Transform().setTranslation(doubleToFloat(-7.219000),doubleToFloat(32.480000),doubleToFloat(-0.434000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_178_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_178_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_178_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_179_point)))))))))
          .addChild(new HAnimJoint("hanim_vl5").setName("vl5").setCenter(doubleToFloat(0.0),doubleToFloat(34.389999),doubleToFloat(-0.164300))
            .addChild(new HAnimSegment("hanim_l5").setName("l5")
              .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(34.389999),doubleToFloat(-0.164300))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_190_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_190_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_190_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_191_point))))))
            .addChild(new HAnimJoint("hanim_skullbase").setName("skullbase").setCenter(doubleToFloat(0.0),doubleToFloat(52.639999),doubleToFloat(-0.209000))
              .addChild(new HAnimSegment("hanim_skull").setName("skull")
                .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(52.639999),doubleToFloat(-0.209000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("GaTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_199_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_199_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_199_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_200_point))))))))))
      .addJoints(new HAnimJoint().setUSE("hanim_humanoid_root"))
      .addJoints(new HAnimJoint().setUSE("hanim_sacroiliac"))
      .addJoints(new HAnimJoint().setUSE("hanim_skullbase"))
      .addJoints(new HAnimJoint().setUSE("hanim_vl5"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_elbow"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_elbow"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_hip"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_hip"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_knee"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_knee"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_metatarsophalangeal_2"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_metatarsophalangeal_2"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_radiocarpal"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_radiocarpal"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_shoulder"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_shoulder"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_talocrural"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_talocrural"))
      .addSegments(new HAnimSegment().setUSE("hanim_l5"))
      .addSegments(new HAnimSegment().setUSE("hanim_pelvis"))
      .addSegments(new HAnimSegment().setUSE("hanim_sacrum"))
      .addSegments(new HAnimSegment().setUSE("hanim_skull"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_calf"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_calf"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_carpal"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_carpal"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_forearm"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_forearm"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_talus"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_talus"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_tarsal_proximal_phalanx_2"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_tarsal_proximal_phalanx_2"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_thigh"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_thigh"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_upperarm"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_upperarm"))));
  },
  // end of initialize() method


  /** Provide a shallow copy of the X3D model.
   * @return KoreanCharacter06Ga model
   */
  getX3dModel : function()
  {	  
	  return this.x3dModel;
  },
  
  /** Indicate X3DJSAIL validation results for this X3D model.
   * @return validation results plus exception information, if any
   */
  validateSelf : function()
  {
	var       metaResult = "";
	var validationResult = "";
	var  exceptionResult = "";
	try
	{
		this.initialize();
		
		if ((this.getX3dModel() == null) || (this.getX3dModel().getHead() == null))
		{
			validationResult = "empty scene, nothing to validate. " + this.x3dModel.validate();
			return validationResult;
		}
		// first list informational meta elements of interest
		var metaList = this.getX3dModel().getHead().getMetaList();
		for (var m in metaList) {
			var metaObject = metaList[m];
			if (metaObject.getName() === metaObject.NAME_ERROR ||
				metaObject.getName() === metaObject.NAME_WARNING ||
				metaObject.getName() === metaObject.NAME_HINT ||
				metaObject.getName() === metaObject.NAME_INFO ||
				metaObject.getName() === metaObject.NAME_TODO)
			{
				metaResult += metaObject.toStringX3D();
			}
		}
		validationResult += this.x3dModel.validate(); // walk entire tree to validate correctness
	}
	catch (e)
	{
		exceptionResult = e; // report exception failures, if any
	}
	if  (metaResult === "" && exceptionResult === "" && validationResult === "")
	     return "success";
	else
	{
		var returnMessage = metaResult;
		if  (exceptionResult !== "" && validationResult !== "")
			returnMessage += "\n*** ";
		returnMessage += exceptionResult;
		if  (exceptionResult === "" && validationResult !== "")
			returnMessage = "\n" + returnMessage; // skip line before meta tags, etc.
		returnMessage += validationResult;
		return returnMessage;
	}
  },
    /** Default main() method provided for test purposes.
     * @param argv input parameters
     */
    main : function (argv)
    {
		var testObject = new KoreanCharacter06Ga();
		print ("KoreanCharacter06Ga execution self-validation test results: " + testObject.validateSelf());
	}
}
new KoreanCharacter06Ga().main();